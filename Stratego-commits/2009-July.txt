From L.C.L.Kats at tudelft.nl  Wed Jul  1 10:00:44 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 01 Jul 2009 08:00:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19607 - LennartKats - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser:
	. tokens
Message-ID: <200907010759.n617xGiQ003794@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-01 08:00:44 +0000 (Wed, 01 Jul 2009)
New Revision: 19607

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19607&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java

Log:
Improved error marker placement for insertions.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	2009-06-30 17:16:39 UTC (rev 19606)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	2009-07-01 08:00:44 UTC (rev 19607)
@@ -92,20 +92,25 @@
 			offset = 0;
 			reportSkippedFragments(tokenizer);
 			ATermAppl asfix = termAt(top, 0);
-			reportRecoveredErrors(tokenizer, asfix);
+			reportRecoveredErrors(tokenizer, asfix, 0);
 		} catch (RuntimeException e) {
 			reportError(tokenizer, e);
 		}
 	}
 
-	private void reportRecoveredErrors(SGLRTokenizer tokenizer, ATermAppl term) {
+    /**
+     * Report recoverable errors (e.g., inserted brackets).
+     * 
+	 * @param outerBeginOffset  The begin offset of the enclosing construct.
+     */
+	private void reportRecoveredErrors(SGLRTokenizer tokenizer, ATermAppl term, int outerStartOffset) {
 		// TODO: Nicer error messages; merge consecutive error tokens etc.
 		int startOffset = offset;
 		
 		if ("amb".equals(term.getAFun().getName())) {
 			// Report errors in first ambiguous branch and update offset
 			ATermList ambs = termAt(term, 0);
-			reportRecoveredErrors(tokenizer, (ATermAppl) ambs.getFirst());
+			reportRecoveredErrors(tokenizer, (ATermAppl) ambs.getFirst(), startOffset);
 			
 			reportAmbiguity(tokenizer, term, startOffset);
 			return;
@@ -127,7 +132,7 @@
 			if (child.getType() == ATerm.INT) {
 				offset += 1;				
 			} else {
-				reportRecoveredErrors(tokenizer, (ATermAppl) child);
+				reportRecoveredErrors(tokenizer, (ATermAppl) child, startOffset);
 			}
 		}
 		
@@ -139,7 +144,7 @@
 			IToken token = tokenizer.makeErrorToken(startOffset, offset - 1);
 			reportErrorAtTokens(token, token, "Closing of '" + token + "' is expected here");
 		} else if (isErrorProduction(attrs, INSERT)) {
-			IToken token = tokenizer.makeErrorTokenSkipLayout(startOffset, offset + 1);
+			IToken token = tokenizer.makeErrorTokenSkipLayout(startOffset, offset + 1, outerStartOffset);
 			String inserted = ""; // TODO: Handle this default case better
 			if (rhs.getName() == "lit") {
 				inserted = applAt(rhs, 0).getName();

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java	2009-06-30 17:16:39 UTC (rev 19606)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java	2009-07-01 08:00:44 UTC (rev 19607)
@@ -139,19 +139,35 @@
 	
 	/**
 	 * Creates an error token on stream part, backwards skipping whitespace
+	 * 
+	 * @param beginOffset       The begin offset of the erroneous location.
+     * @param endOffset         The end offset of the erroneous location.
+     * @param outerBeginOffset  The begin offset of the enclosing construct.
 	 */
-	public IToken makeErrorTokenSkipLayout(int beginOffset, int endOffset) {
+	public IToken makeErrorTokenSkipLayout(int beginOffset, int endOffset, int outerBeginOffset) {	    
 		if (endOffset >= lexStream.getStreamLength()) {
 			endOffset = lexStream.getStreamLength() - 1;
 			beginOffset = Math.min(beginOffset, endOffset);
 		}
 
 		int skipLength;
+		int newlineSkipLength = -1;
 		
 		for (skipLength = 0; beginOffset - skipLength > 0; skipLength++) {
-			char c = lexStream.getCharValue(beginOffset - skipLength - 1);
-			if (!Character.isWhitespace(c) || c == '\n')
+			int offset = beginOffset - skipLength - 1;
+			char c = lexStream.getCharValue(offset);
+			if (!Character.isWhitespace(c)) {
+			    if (newlineSkipLength != -1) {
+                    // Only allow skipping back a few lines if the outer
+                    // construct started on the line we skipped to
+			        if (lexStream.getLine(offset) != lexStream.getLine(outerBeginOffset))
+			            skipLength = newlineSkipLength;
+			    }
 				break;
+			}
+			if (c == '\n')
+			    newlineSkipLength = skipLength;
+			    
 		}
 		
 		return makeErrorToken(beginOffset-skipLength, endOffset-skipLength);



From L.C.L.Kats at tudelft.nl  Wed Jul  1 11:16:05 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 01 Jul 2009 09:16:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19609 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project
Message-ID: <200907010914.n619EaTE004866@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-01 09:16:05 +0000 (Wed, 01 Jul 2009)
New Revision: 19609

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19609&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-parse-table.str

Log:
Don't give a false 'file not found' message.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-parse-table.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-parse-table.str	2009-07-01 08:15:09 UTC (rev 19608)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-parse-table.str	2009-07-01 09:16:05 UTC (rev 19609)
@@ -14,7 +14,7 @@
 strategies
   
   copy-or-create-parse-table =
-    copy-parse-table <+ create-parse-table
+    copy-parse-table <+ create-parse-table <+ err(|"Could not copy or create parse table")
   
   copy-parse-table =
     where(
@@ -22,8 +22,9 @@
       <eq> (<ParseTable>, <parse-table-target; file-exists>)
     <+
       ParseTable;
-      risky(file-exists |"File not found");
-      <copy-file> (<id>, <parse-table-target>)
+      if file-exists then
+        <copy-file> (<id>, <parse-table-target>)
+      end
     )
     
   create-parse-table =



From L.C.L.Kats at tudelft.nl  Wed Jul  1 11:16:52 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 01 Jul 2009 09:16:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19610 - LennartKats -
	strategoxt/branches/strategoxt-annos/stratego-libraries/xtc/lib
	strc-java/trunk/java
Message-ID: <200907010915.n619FNH2004883@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-01 09:16:52 +0000 (Wed, 01 Jul 2009)
New Revision: 19610

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19610&view=rev

Modified:
   strategoxt/branches/strategoxt-annos/stratego-libraries/xtc/lib/Makefile.am
   strc-java/trunk/java/Makefile.am

Log:
Include and use the right xtc rtree file for STRJ.

Changes:

Modified: strategoxt/branches/strategoxt-annos/stratego-libraries/xtc/lib/Makefile.am
===================================================================
--- strategoxt/branches/strategoxt-annos/stratego-libraries/xtc/lib/Makefile.am	2009-07-01 09:16:05 UTC (rev 19609)
+++ strategoxt/branches/strategoxt-annos/stratego-libraries/xtc/lib/Makefile.am	2009-07-01 09:16:52 UTC (rev 19610)
@@ -5,7 +5,7 @@
 pkgdatadir = $(datadir)/xtc
 
 nobase_pkgdata_DATA =  stratego-xtc.str $(fullstrategoxtc:.str=.rtree)
-data_DATA = libstratego-xtc.rtree
+data_DATA = libstratego-xtc.rtree libstratego-xtc-posix-xsi.rtree
 lib_LTLIBRARIES = libstratego-xtc.la
 
 EXTRA_DIST	= $(all_rtree) $(fullstrategoxtc) $(nobase_pkgdata_DATA)

Modified: strc-java/trunk/java/Makefile.am
===================================================================
--- strc-java/trunk/java/Makefile.am	2009-07-01 09:16:05 UTC (rev 19609)
+++ strc-java/trunk/java/Makefile.am	2009-07-01 09:16:52 UTC (rev 19610)
@@ -41,6 +41,8 @@
   $(subst runtime/org/strategoxt/lang/compat/libstrc_compat.java,, \
   $(subst runtime/org/strategoxt/lang/compat/libstratego_rtg_compat.java,,$(LIBRARYJAVAS))) \
   $(COMPILERJAVAS) \
+  runtime/org/strategoxt/lang/compat/override/libstratego_aterm_compat.rtree \
+  lib/org/strategoxt/libstratego-xtc.rtree \
   .ALLCLASSES
 
 # HACK: hardcoded, relative classpath
@@ -96,7 +98,7 @@
 lib/org/strategoxt/libstratego_lib.java : $(STRATEGOXT)/share/stratego-lib/libstratego-lib.ctree ../trans/strj
 	../trans/strj -I $(STRATEGOXT)/share/stratego-lib -i $< -o $@ $(STRJOPTIONS)
 
-lib/org/strategoxt/libstratego-xtc.rtree : $(STRATEGOXT)/share/xtc/stratego-xtc-posix-xsi.rtree
+lib/org/strategoxt/libstratego-xtc.rtree : $(STRATEGOXT)/share/libstratego-xtc-posix-xsi.rtree
 	cp $< $@
 
 lib/org/strategoxt/libstratego_xtc.java : lib/org/strategoxt/libstratego-xtc.rtree ../trans/strj



From L.C.L.Kats at tudelft.nl  Wed Jul  1 11:28:39 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 01 Jul 2009 09:28:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19611 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building
Message-ID: <200907010927.n619RA0q004967@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-01 09:28:39 +0000 (Wed, 01 Jul 2009)
New Revision: 19611

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19611&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java

Log:
Log builder exceptions.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java	2009-07-01 09:16:52 UTC (rev 19610)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java	2009-07-01 09:28:39 UTC (rev 19611)
@@ -65,6 +65,7 @@
 			Debug.stopTimer("Successfully loaded dynamic editor builder");
 			
 		} catch (Throwable e) {
+			Environment.logException("Unable to initialize dynamic builder", e);
 			throw new RuntimeException("Unable to initialize dynamic builder", e);
 		}
 	}



From L.C.L.Kats at tudelft.nl  Thu Jul  2 14:52:05 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 02 Jul 2009 12:52:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19624 - LennartKats -
	spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907021250.n62CoYvc025507@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-02 12:52:05 +0000 (Thu, 02 Jul 2009)
New Revision: 19624

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19624&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Tools.java

Log:
Only print debugging messages if Tools.debugging is enabled.

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java	2009-07-02 12:04:36 UTC (rev 19623)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java	2009-07-02 12:52:05 UTC (rev 19624)
@@ -320,7 +320,7 @@
             throw new ParseException(this, "Accepting stack has no link");
      
         logParseResult(s);
-        Tools.debug("avoids: "+s.recoverCount);
+        Tools.debug("avoids: ", s.recoverCount);
         //Tools.debug(s.label.toParseTree(parseTable));
         
         return disambiguator.applyFilters(this, s.label, startSymbol, tokensSeen);

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Tools.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Tools.java	2009-07-02 12:04:36 UTC (rev 19623)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Tools.java	2009-07-02 12:52:05 UTC (rev 19624)
@@ -42,11 +42,13 @@
     }
     
     public static void debug(Object ...s) {
-        // FIXME Copy debug() from org.spoofax.interpreter
-        for(Object o : s) {
-            System.err.print(o);
+        if (debugging) {
+            // FIXME Copy debug() from org.spoofax.interpreter
+            for(Object o : s) {
+                System.err.print(o);
+            }
+            System.err.println("");
         }
-        System.err.println("");
     }
 
     public static void logger(Object ...s) {



From m.dejonge at tudelft.nl  Mon Jul  6 17:35:23 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 06 Jul 2009 15:35:23 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19636 - MaartjeDeJonge
	- sglr-recovery/trunk/Evaluation_Recovery/Language_Files
Message-ID: <200907061533.n66FXlDP003072@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-06 15:35:23 +0000 (Mon, 06 Jul 2009)
New Revision: 19636

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19636&view=rev

Modified:
   sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtToJava15.str
   sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtTransformRules.str

Log:
fixed Transformation

Changes:

Modified: sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtToJava15.str
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtToJava15.str	2009-07-06 14:34:23 UTC (rev 19635)
+++ sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtToJava15.str	2009-07-06 15:35:23 UTC (rev 19636)
@@ -1,12 +1,12 @@
 module JdtToJava15
 imports libstrategolib JdtTransformRules
 strategies
-  main = io-wrap(tdP; tdQ; rewriteAst; vdTrav)
+  main = io-wrap(tdP; tdQ; rewriteAst; vdTrav; rewInv)
   tdP=outermost(RewritePackage)
   tdQ=topdown(try(RewriteP))
   vdTrav=topdown(try(VD))
   rewriteAst = outermost(VD +> RewriteClass +> RewriteName +> Import  +> RewriteMethod +> RewritePrimitive+>ModKey+>ResultType+>Arg +>Lit +> Stm+>MkSimpler+>T)
+  rewInv= topdown(try(TInvoke))
   
   
-  
   
\ No newline at end of file

Modified: sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtTransformRules.str
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtTransformRules.str	2009-07-06 14:34:23 UTC (rev 19635)
+++ sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtTransformRules.str	2009-07-06 15:35:23 UTC (rev 19636)
@@ -13,6 +13,12 @@
 RewriteP: PackageName(x) -> PackageName(y) where <listS>(x)=>y
 T: PackageName(Id(x)) -> PackageName([Id(x)])
 
+
+InvokeArgTr: Id(x) -> ExprName(Id(x))
+TInvoke: Invoke(m, argList) -> Invoke(m, argTList) where <map(InvokeArgTr <+ id)>(argList) => argTList
+
+
+
 Import: QualifiedName(x,y) -> PackageOrTypeName(x,y)
 Import: PackageOrTypeName(Id(x),y) -> PackageOrTypeName(PackageOrTypeName(Id(x)),y)
 Import: ImportDeclaration(QualifiedName(q,s),0,0) -> TypeImportDec(TypeName(q,s))



From m.dejonge at tudelft.nl  Mon Jul  6 19:17:29 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 06 Jul 2009 17:17:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19640 - MaartjeDeJonge
	- sglr-recovery/trunk/Evaluation_Recovery/Language_Files
Message-ID: <200907061715.n66HFsW8004107@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-06 17:17:29 +0000 (Mon, 06 Jul 2009)
New Revision: 19640

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19640&view=rev

Modified:
   sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtTransformRules.str

Log:
extended: added some rules to transform trickyIndent files 

Changes:

Modified: sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtTransformRules.str
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtTransformRules.str	2009-07-06 16:20:37 UTC (rev 19639)
+++ sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtTransformRules.str	2009-07-06 17:17:29 UTC (rev 19640)
@@ -3,7 +3,8 @@
 rules
 
 
-RewriteClass: TypeDeclaration(None, [], className, [], None, [], declList, 0) -> ClassDec(ClassDecHead([],className,None,None,None), ClassBody(declList)) 
+RewriteClass: TypeDeclaration(None, modl, className, [], None, [], declList, 0) -> ClassDec(ClassDecHead(modl,className,None,None,None), ClassBody(declList)) 
+
 RewriteName: SimpleName(x) -> Id(x)
 
 RewritePackage: PackageDeclaration(x, y, z) -> Some(PackageDec(y, PackageName(z)))
@@ -84,6 +85,7 @@
 T: ConditionalExpression(e, b1, b2) -> Cond(e, b1, b2)
 T: ParenthesizedExpression(x) -> x
 T: ExprName(InfixExpression( "+", t1, t2, [])) -> Plus(t1, t2)
+T: Some(InfixExpression("+", name1, name2, [])) -> Some(Plus(ExprName(name1), ExprName(name2)))
 T: ThrowStatement(c) -> Throw(c)
 
 T: Some(ThrowsDec([ClassType(TypeName(n))])) -> Some(ThrowsDec([ClassType(TypeName(n), None())]))



From L.C.L.Kats at tudelft.nl  Tue Jul  7 09:42:06 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 07 Jul 2009 07:42:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19641 - LennartKats - in
	sglr-recovery/trunk/permissive-grammars/trans/make-permissive:
	. syntax
Message-ID: <200907070740.n677eUhs013655@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-07 07:42:05 +0000 (Tue, 07 Jul 2009)
New Revision: 19641

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19641&view=rev

Added:
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Comments.pp
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Comments.sdf
Modified:
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/optimize.astr
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Makefile
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Stratego-Attributes-Sdf2.sdf

Log:
Minor tweaks; added support for generating comments.

Changes:

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile	2009-07-06 17:17:29 UTC (rev 19640)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile	2009-07-07 07:42:05 UTC (rev 19641)
@@ -12,7 +12,7 @@
 	     -la stratego-sglr \
 	     -la ~/.nix-profile/lib/libstratego-sdf.la
 	     
-make-permissive.str : $(ASTRS) syntax/Stratego-Attributes-Sdf2.tbl
+make-permissive.str : $(ASTRS) syntax/Stratego-Attributes-Sdf2.tbl syntax/Comments.pp.af
 	aster --verbose 2 -i $(ASTRS) -I syntax
 
 %.tbl : %.def

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr	2009-07-06 17:17:29 UTC (rev 19640)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr	2009-07-07 07:42:05 UTC (rev 19641)
@@ -57,6 +57,9 @@
   
 attributes // Simple closing literals (e.g., "}")
 
+  // TODO: Opening and closing literals may also appear in pairs
+  //       e.g. "begin" "do" S "while" E "end" "do" -> S
+
   eq lexical-insert-prod:
     prod([lit(_) | pattern-and-lit], _, _) ->
     |[ 
@@ -220,3 +223,4 @@
 
 // TODO: Special case for context brackets, like |[ and ]|?
 //       - these cannot be nested, and only appear in a fully balanced fashion
+//       - an open-brace insertion is extremely useful for these

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr	2009-07-06 17:17:29 UTC (rev 19640)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr	2009-07-07 07:42:05 UTC (rev 19641)
@@ -17,6 +17,7 @@
   water-sections
   insert-sections
   optimize
+  pp-commented-sdf
 
 overlays
 
@@ -27,6 +28,11 @@
   SEPARATORS_ON      = "separators"
   OPTIMIZE_ON        = "optimize"
 
+signature constructors
+
+  EmptyLine   : Production
+  CommentLine : String -> Production
+
 strategies // I/O
 
   main-make-permissive =
@@ -41,11 +47,14 @@
       id.init;
 
       add-permissive-sections;
-      optimize-sdf;
       
+      if-switch(!OPTIMIZE_ON,
+        optimize-sdf
+      );
+      
       sdf-desugar;      
       parenthesize-Sdf2;
-      pp-sdf-string;
+      pp-commented-sdf-string;
       print-to
     )
   

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/optimize.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/optimize.astr	2009-07-06 17:17:29 UTC (rev 19640)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/optimize.astr	2009-07-07 07:42:05 UTC (rev 19641)
@@ -2,17 +2,21 @@
 
 strategies
 
-  optimize-sdf = alltd(optimize)
+  optimize-sdf = topdown-consnil(try(optimize))
   
   // Convert literal rhs to char group (e.g., "{" -> [\125])
   optimize:
-    prod(pattern, lit(s), attrs) ->
-    prod(
-      pattern
-    , char-class(simple-charclass(present(numeric(chargroup))))
-    , attrs
-    )
+    [ prod(pattern, lit(s), attrs) ] ->
+    [ CommentLine(description)
+    , prod(
+        pattern
+      , char-class(simple-charclass(present(numeric(chargroup))))
+      , attrs
+      )
+    ]
     where
       <explode-string> s => ['"', char, '"']
     with
-      chargroup := <conc-strings> ("\\", <write-to-string> char)
\ No newline at end of file
+      chargroup   := <conc-strings> ("\\", <write-to-string> char);
+      description := <conc-strings> ("Insertion rule for ", s, ":")
+

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr	2009-07-06 17:17:29 UTC (rev 19640)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr	2009-07-07 07:42:05 UTC (rev 19641)
@@ -6,6 +6,7 @@
 strategies
 
   Prod = prod(id, id, id)
+  Sort = sort(id)
 
 attributes // Looking up productions
 
@@ -73,8 +74,13 @@
          )
       )
 
-decorators // TODO: Think about a better idiom and/or name for this
+decorators 
 
-  decorator context-free-args sort-search-operation(a) =
-    id.set-cached(|a.signature, EVAL_FAILED());
+  // TODO: Remove non-circular; it's now in the standard library
+  decorator non-circular(a) =
+    id.set-cached(a.signature|EVAL_FAILED());
     a
+
+  // TODO: Better name for this?? 'graph-search'?
+  decorator context-free-args non-circular sort-search-operation(a) =
+    a

Added: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Comments.pp
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Comments.pp	                        (rev 0)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Comments.pp	2009-07-07 07:42:05 UTC (rev 19641)
@@ -0,0 +1,4 @@
+[
+   CommentLine          -- R [ H hs=0 [ KW["%%"] _1 ]],
+   EmptyLine -- KW["~\n"]
+]


Property changes on: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Comments.pp
___________________________________________________________________
Added: svn:mergeinfo
   + 

Added: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Comments.sdf
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Comments.sdf	                        (rev 0)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Comments.sdf	2009-07-07 07:42:05 UTC (rev 19641)
@@ -0,0 +1,25 @@
+module Comments[E]
+
+exports
+
+  sorts
+    CommentLine
+  
+  lexical syntax
+    ~[\n\r]* -> CommentLine[[E]]
+
+  lexical restrictions
+  
+    CommentLine[[E]] -/- ~[\n\r]
+  
+    CommentLine[[E]] -/- [\/].[\/]
+    CommentLine[[E]] -/- [\/].[\*]
+
+  syntax  
+  
+    "%%" <CommentLine[[E]]-LEX> -> <E-CF> {cons("CommentLine")}
+  
+  context-free syntax
+  
+    "~\n" -> E {cons("EmptyLine"), avoid}
+

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Makefile
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Makefile	2009-07-06 17:17:29 UTC (rev 19640)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Makefile	2009-07-07 07:42:05 UTC (rev 19641)
@@ -1,4 +1,4 @@
-all : Stratego-Attributes-Sdf2.tbl
+all : Stratego-Attributes-Sdf2.tbl Comments.pp.af
 
 %.tbl : %.def
 	sdf2table -i $< -o $@ -m `basename $< .def`
@@ -8,3 +8,9 @@
 	         -Idef $(HOME)/.nix-profile/share/aster/MixStratego-Attributes.def \
 	         -Idef $(HOME)/.nix-profile/share/aster/Stratego-Attributes.def \
 	         -Idef $(HOME)/.nix-profile/share/sdf/sdf-front/Stratego-Sdf2.def
+
+%.pp : %.def
+	ppgen -i $< -o $@
+
+%.pp.af : %.pp
+	parse-pp-table -i $< -o $@

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Stratego-Attributes-Sdf2.sdf
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Stratego-Attributes-Sdf2.sdf	2009-07-06 17:17:29 UTC (rev 19640)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Stratego-Attributes-Sdf2.sdf	2009-07-07 07:42:05 UTC (rev 19641)
@@ -3,6 +3,8 @@
 imports
   MixStratego-Attributes[AG]
   Stratego-Sdf2
+  Comments[Production]
+  Comments[Grammar]
 
 hiddens
   context-free start-symbols



From m.dejonge at tudelft.nl  Tue Jul  7 12:23:36 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 07 Jul 2009 10:23:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19642 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907071022.n67AM0O4015725@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-07 10:23:36 +0000 (Tue, 07 Jul 2009)
New Revision: 19642

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19642&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java

Log:
BP-manual

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java	2009-07-07 07:42:05 UTC (rev 19641)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java	2009-07-07 10:23:36 UTC (rev 19642)
@@ -2,6 +2,11 @@
 
 import java.io.IOException;
 import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Map;
+
+import org.spoofax.ArrayDeque;
+
 import aterm.ATerm;
 
 public class FineGrainedRepair {
@@ -23,49 +28,71 @@
         newLinePoints=new ArrayList<IndentInfo>();
         indexLineRecovery=-1;
         indentComparer=new IndentationDisambiguator();
+        bpSuggestions=new HashMap<Integer, char[]>();
     }
     
     public void findRecoverBranch(ArrayList<IndentInfo> lines, int endTokenIndex) throws IOException{
         endRecovery=endTokenIndex;
         indexLineRecovery=-1;
         newLinePoints=lines;
-        while (newLinePoints.size()>0) {
-            if(newLinePoints.get(newLinePoints.size()-1).getTokensSeen()>=endRecovery){
-                newLinePoints.remove(newLinePoints.size()-1);
-            }
-            else
-                break;
-        }
+        removeUnskippedLines();
         if(newLinePoints.size()==0)
             return;         
         myParser.setFineGrainedMode(true);       
         myParser.activeStacks.clear();
-        if(searchIndentDeviation()){
-            IndentInfo recoverLine = newLinePoints.get(indexLineRecovery); 
-            setParserForRecovery(recoverLine);            
-            myParser.setFineGrainedMode(false);
-            getHistory().readRecoverToken(myParser);            
-            myParser.doParseStep();            
-            myParser.setFineGrainedMode(true);
-            if(indexLineRecovery<newLinePoints.size()-1){
-                IndentInfo nextLine = newLinePoints.get(indexLineRecovery+1); 
-                recoverLineAndContinueParse(false, nextLine.getTokensSeen()+1);
-            }
-            else
-                recoverLineAndContinueParse(true, endRecovery);                
+        if(getFirstBPSuggestPosition() > 0){
+            applyBridgeSuggestions(); 
         }
+        else if(searchIndentDeviation()){
+            recoverOnDeviatingLine();                
+        }
         if (recoveryNotSucceeded()) {
             forwardRecovery();
         }
         myParser.setFineGrainedMode(false);
     }
 
+    private void recoverOnDeviatingLine() throws IOException {
+        IndentInfo recoverLine = newLinePoints.get(indexLineRecovery); 
+        setParserForRecovery(recoverLine);            
+        myParser.setFineGrainedMode(false);
+        getHistory().readRecoverToken(myParser);            
+        myParser.doParseStep();            
+        myParser.setFineGrainedMode(true);
+        if(indexLineRecovery<newLinePoints.size()-1){
+            IndentInfo nextLine = newLinePoints.get(indexLineRecovery+1); 
+            recoverLineAndContinueParse(false, nextLine.getTokensSeen()+1);
+        }
+        else
+            recoverLineAndContinueParse(true, endRecovery);
+    }
+
+    private void applyBridgeSuggestions() throws IOException {
+        removeLinesAfterFirstBP();
+        IndentInfo recoverLine = newLinePoints.get(newLinePoints.size()-1); 
+        setParserForRecovery(recoverLine);  
+        myParser.setFineGrainedMode(false);
+        handleBPPriorSuggestions();
+        recoverLineAndContinueParse(true, endRecovery);
+    }
+
+    private void removeUnskippedLines() {
+        while (newLinePoints.size()>0) {
+            if(newLinePoints.get(newLinePoints.size()-1).getTokensSeen()>=endRecovery){
+                newLinePoints.remove(newLinePoints.size()-1);
+            }
+            else
+                break;
+        }
+    }
+
     private void forwardRecovery() throws IOException {
         if(lastLineRecovered())
             return;    
         setIndexOnLastLine();
-        IndentInfo recoverLine = newLinePoints.get(indexLineRecovery); 
+        IndentInfo recoverLine = newLinePoints.get(indexLineRecovery);         
         setParserForRecovery(recoverLine);  
+        myParser.setFineGrainedMode(true);
         recoverLineAndContinueParse(true, endRecovery);                
         if(recoveryNotSucceeded())
             forwardRecovery();        
@@ -83,10 +110,13 @@
             indexLineRecovery = newLinePoints.size()-1;
     }
     
-    private void recoverLineAndContinueParse(boolean recoverEndOnNewLine, int lastRecoverToken) throws IOException{               
+    private void recoverLineAndContinueParse(boolean recoverEndOnNewLine, int lastRecoverToken) throws IOException{
+        //Tools.debug("Enter recoverLineAndContinueParse");
         while (myParser.activeStacks.size() > 0 && !getHistory().hasFinishedRecoverTokens()){
-            getHistory().readRecoverToken(myParser);
-            //Tools.debug("Recover Fragment: "+(char)myParser.currentToken + getHistory().getTokenIndex()); 
+            handleBPSuggestions();
+            getHistory().readRecoverToken(myParser);            
+            Tools.debug((char)myParser.currentToken + "  ("+getHistory().getTokenIndex()+")");  
+            //myParser.logRecoverSituation();
             myParser.doParseStep();            
             if(myParser.currentToken=='\n'){
                 if(recoverEndOnNewLine){                   
@@ -117,7 +147,6 @@
     }
     
     private void setParserForRecovery(IndentInfo recoverStart) {        
-        myParser.setFineGrainedMode(true);
         myParser.activeStacks.addAll(recoverStart.getStackNodes());
         //myParser.setRecoverStartPos(recoverStart.getTokensSeen());
         getHistory().setTokenIndex(recoverStart.getTokensSeen());
@@ -180,6 +209,71 @@
 
     private boolean lastLineRecovered() {        
         return indexLineRecovery>=newLinePoints.size()-1;
-    }    
-   
+    }   
+    
+    //$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ BP Integration &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
+    
+        
+    private Map<Integer, char[]> bpSuggestions;
+    
+    public void setBpSuggestions(Map<Integer, char[]> bpSuggestions) {
+        this.bpSuggestions = bpSuggestions;
+    }
+
+    private void removeLinesAfterFirstBP() {
+        int nextBPPos = getFirstBPSuggestPosition();
+        if(nextBPPos >= 0){
+            while (newLinePoints.size()>1) {
+                if(newLinePoints.get(newLinePoints.size()-1).getTokensSeen()>=nextBPPos){
+                    newLinePoints.remove(newLinePoints.size()-1);
+                }
+                else
+                    break;
+            }
+        }
+    }
+    
+    private int getFirstBPSuggestPosition(){
+        int result = -1;
+        for (Integer aKey : bpSuggestions.keySet()) {
+            int keyValue = aKey.intValue();
+            if(result ==-1 || keyValue<result)
+                result = keyValue;
+        }
+        return result;
+    }  
+      
+    private void handleBPSuggestions() throws IOException{
+        Integer tokIndex=new Integer(getHistory().getTokenIndex());
+        if(bpSuggestions.containsKey(tokIndex)){
+            //Tools.debug((char)myParser.currentToken);
+            processBPSuggestions(tokIndex);
+        }
+    }
+
+    private void processBPSuggestions(Integer tokIndex) throws IOException {
+        char[] insertions = bpSuggestions.get(tokIndex);
+        for (int i = 0; i < insertions.length; i++) {
+            ArrayDeque<Frame> oldAct = new ArrayDeque<Frame>();
+            oldAct.addAll(myParser.activeStacks);
+            myParser.currentToken = insertions[i];
+            myParser.doParseStep();
+            myParser.activeStacks.addAll(oldAct);
+            Tools.debug("BP-Insertion: "+ insertions[i]);
+        }
+    }
+    
+    private void handleBPPriorSuggestions() throws IOException{
+        if(newLinePoints.size()!=1)
+            return;
+        int firstRecoverPos=newLinePoints.get(0).getTokensSeen();   
+        int firstBPSuggestion=getFirstBPSuggestPosition();
+        if(-1 < firstBPSuggestion && firstBPSuggestion < firstRecoverPos){            
+            processBPSuggestions(new Integer(firstBPSuggestion));
+        }
+    }
+    
+    boolean isWhiteSpace(char c){
+        return c==' ' || c=='\t'|| c=='\n';
+    }
 }

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java	2009-07-07 07:42:05 UTC (rev 19641)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java	2009-07-07 10:23:36 UTC (rev 19642)
@@ -2,6 +2,8 @@
 
 import java.io.IOException;
 import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Map;
 
 //TODO: keep recovered lines (Testcase: two separated errors)
 public class RecoveryConnector {
@@ -11,6 +13,7 @@
     private boolean active;
     private boolean useBridgeParser;
     
+    
     public void setUseBridgeParser(boolean useBridgeParser) {
         this.useBridgeParser = useBridgeParser;
     }
@@ -26,8 +29,33 @@
         else
             useBridgeParser=false;
         
+    }    
+    
+    
+    private Map<Integer, char[]> getBPSuggestions(){
+        Map<Integer, char[]> bpSuggestions = getBridges();
+        int startPos = skipRecovery.getErrorFragmentStartPosition();
+        
+        Map<Integer, char[]> bpSuggestAbsolute = new HashMap<Integer, char[]>();
+        for (Integer aKey : bpSuggestions.keySet()) {
+            Integer newKey=new Integer(startPos+aKey.intValue());
+            char[] newValue=bpSuggestions.get(aKey);
+            bpSuggestAbsolute.put(newKey, newValue);
+        }
+        return bpSuggestAbsolute;
     }
+
+    //TODO: real BP suggestions
+    private Map<Integer, char[]> getBridges() {        
+        Map<Integer, char[]> bpSuggestions = new HashMap<Integer, char[]>();
+        //bpSuggestions.put(0, new char[]{'(', '('});
+        bpSuggestions.put(71, new char[]{'}'});
+        bpSuggestions.put(100, new char[]{'}'});        
+        return bpSuggestions;
+    }
     
+    
+    
     private ParserHistory getHistory() {
         return mySGLR.getHistory();
     }
@@ -104,7 +132,8 @@
     }
 
     private void tryFineGrainedRepair() throws IOException {
-        FineGrainedRepair fineGrained=new FineGrainedRepair(mySGLR);            
+        FineGrainedRepair fineGrained=new FineGrainedRepair(mySGLR);   
+        fineGrained.setBpSuggestions(getBPSuggestions());
         fineGrained.findRecoverBranch(skipRecovery.getSkippedLines(), skipRecovery.getEndSkipPosition());        
     }
 
@@ -118,7 +147,7 @@
     private String repairBridges(String errorFragment) {
         try {
             // TODO call recover(errorFragement, startSymbol) instead
-            IRecoveryResult result = recoveryParser.recover(errorFragment);
+            IRecoveryResult result = recoveryParser.recover(errorFragment);            
             String repairedFragment = result.getResult(); 
             return repairedFragment;
         } catch (TokenExpectedException e) {

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java	2009-07-07 07:42:05 UTC (rev 19641)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java	2009-07-07 10:23:36 UTC (rev 19642)
@@ -52,7 +52,15 @@
         return getHistory().getFragment(tokIndexLine, skipPoint.getTokensSeen()-1);
     }
     
+    /* *
+     * *Start position of skipped fragment containing errors, including preceding indentation
+     */
+    public int getErrorFragmentStartPosition() { 
+        int tokIndexLine=getHistory().getTokensSeenStartLine(getStartSkipPosition().getTokensSeen());
+        return tokIndexLine;
+    }
     
+    
     /*
      * Coarse-grained recovery by skipping code-fragments near the error.
      * Uses layout to take human intention into account



From m.dejonge at tudelft.nl  Tue Jul  7 14:16:38 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 07 Jul 2009 12:16:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19644 - MaartjeDeJonge
	- sglr-recovery/trunk/Evaluation_Recovery/Language_Files
Message-ID: <200907071215.n67CF1Rh016879@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-07 12:16:38 +0000 (Tue, 07 Jul 2009)
New Revision: 19644

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19644&view=rev

Modified:
   sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtTransformRules.str

Log:
support TestBridgeFG

Changes:

Modified: sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtTransformRules.str
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtTransformRules.str	2009-07-07 11:16:59 UTC (rev 19643)
+++ sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtTransformRules.str	2009-07-07 12:16:38 UTC (rev 19644)
@@ -47,6 +47,7 @@
 T: ExpressionStatement(x) -> ExprStm(x)
 T: BooleanLiteral(1)-> Lit(Bool(True()))
 T: BooleanLiteral(2)-> Lit(Bool(False()))
+T: BooleanLiteral(0) -> Lit(Bool(False()))
 T: IfStatement(cond, ifPart, elsePart)-> If(cond, ifPart, elsePart)
 T: If(cond, ifPart, None()) -> If(cond, ifPart)
 T: InfixExpression("==", x, y, l) -> Eq(ExprName(x), ExprName(y))



From m.dejonge at tudelft.nl  Tue Jul  7 16:04:19 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 07 Jul 2009 14:04:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19645 - MaartjeDeJonge
	- in sglr-recovery/trunk/Evaluation_Recovery:
	Correct_Files/development_files Error_Files/development_files
Message-ID: <200907071402.n67E2g7Z018813@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-07 14:04:19 +0000 (Tue, 07 Jul 2009)
New Revision: 19645

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19645&view=rev

Modified:
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/unclosedMethod.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/unclosedMethod.java

Log:
wrong compare file

Changes:

Modified: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/unclosedMethod.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/unclosedMethod.java	2009-07-07 12:16:38 UTC (rev 19644)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/unclosedMethod.java	2009-07-07 14:04:19 UTC (rev 19645)
@@ -6,8 +6,11 @@
   }
 
   private int UnclosedMethod(){
-      int corrLine1;
-      corrLine2();
+      if(true){
+         int corrLine1
+         corrLine2();
+      }
+      return 5;
   }     
   
   private int correctMethod2(){

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/unclosedMethod.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/unclosedMethod.java	2009-07-07 12:16:38 UTC (rev 19644)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/unclosedMethod.java	2009-07-07 14:04:19 UTC (rev 19645)
@@ -11,6 +11,7 @@
       if(true){
          int corrLine1;
          corrLine2(); /*  } */
+      return 5;
   }
 
   private int correctMethod2()



From m.dejonge at tudelft.nl  Tue Jul  7 16:25:07 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 07 Jul 2009 14:25:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19646 - MaartjeDeJonge -
	sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files
Message-ID: <200907071423.n67ENUB7019466@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-07 14:25:07 +0000 (Tue, 07 Jul 2009)
New Revision: 19646

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19646&view=rev

Added:
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/multipleErrors2.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/testBridgeFG.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/unclosedBlockComment.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/unclosedString.java

Log:


Changes:

Added: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/multipleErrors2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/multipleErrors2.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/multipleErrors2.java	2009-07-07 14:25:07 UTC (rev 19646)
@@ -0,0 +1,34 @@
+package test;
+
+import java.io.IOException;
+import junit.framework.Assert;
+import org.spoofax.jsglr.SGLRException;
+class X {
+	
+  private int correctMethod1(){
+     corr2();    
+     return corrInt;
+  }
+
+  private int correctMethod2(){
+      int corrLine1;
+      if(true){
+    	  String s = "bla bla bla";
+    	  corrLine2();
+      }
+      else{
+         corrLine3(); }     
+      corrLine4();
+  }
+      
+  private int correctMethod1(){
+     corr2();    
+     return corrInt;
+  }
+  
+  private int correctMethod1(){
+     corr2();    
+     return corrInt;
+  }
+}
+

Added: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/testBridgeFG.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/testBridgeFG.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/testBridgeFG.java	2009-07-07 14:25:07 UTC (rev 19646)
@@ -0,0 +1,36 @@
+class X  
+{ 
+  private int method1()
+  { 
+    corr2();
+    return corrInt;
+  }
+
+  private int method2()
+  { 
+    int Line1;
+    if(false){
+	    if(true)
+	    { 
+	       Line2();
+	       Line3();
+	    }
+	    Line4();
+	    Line5();
+	}
+    Line6();
+    Line7();
+  }
+    
+  private int method1()
+  { 
+     corr2();
+     return corrInt;
+  }
+  
+  private int method1()
+  { 
+     corr2();
+     return corrInt;
+  }
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/unclosedBlockComment.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/unclosedBlockComment.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/unclosedBlockComment.java	2009-07-07 14:25:07 UTC (rev 19646)
@@ -0,0 +1,24 @@
+package test;
+
+import java.io.IOException;
+import junit.framework.Assert;
+import org.spoofax.jsglr.SGLRException;
+class X {
+	
+  private int correctMethod1(){
+     corr2();    
+     return corrInt;
+  }
+
+  /*
+  private int correctMethod2(){
+      int corrLine1;
+      if(true){
+    	  String s = "bla bla bla";
+    	  corrLine2();
+      }
+      corrLine3();     
+      corrLine4();
+  }*/
+}
+

Added: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/unclosedString.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/unclosedString.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/unclosedString.java	2009-07-07 14:25:07 UTC (rev 19646)
@@ -0,0 +1,23 @@
+package test;
+
+import java.io.IOException;
+import junit.framework.Assert;
+import org.spoofax.jsglr.SGLRException;
+class X {
+	
+  private int correctMethod1(){
+     corr2();    
+     return corrInt;
+  }
+
+  private int correctMethod2(){
+      int corrLine1;
+      if(true){
+    	  String s = "bla bla bla";
+    	  corrLine2();
+      }
+      corrLine3();     
+      corrLine4();
+  }
+}
+



From m.dejonge at tudelft.nl  Tue Jul  7 16:25:23 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 07 Jul 2009 14:25:23 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19647 - MaartjeDeJonge -
	sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files
Message-ID: <200907071423.n67ENkVS019475@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-07 14:25:23 +0000 (Tue, 07 Jul 2009)
New Revision: 19647

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19647&view=rev

Added:
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/multipleErrors2.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/testBridgeFG.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/unclosedBlockComment.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/unclosedString.java

Log:


Changes:

Added: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/multipleErrors2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/multipleErrors2.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/multipleErrors2.java	2009-07-07 14:25:23 UTC (rev 19647)
@@ -0,0 +1,34 @@
+package test;
+
+import java.io.IOException;
+import junit.framework.Assert;
+import org.spoofax.jsglr.SGLRException;
+class X {
+	
+  private int correctMethod1(){
+     corr2();    
+     return corrInt;
+  }
+
+  private int correctMethod2(){
+      int corrLine1;
+      if(true){
+    	  String s = "bla bla bla"//;
+    	  corrLine2();
+      }
+      else{
+         corrLine3(); //}     
+      corrLine4( //);
+  }
+      
+  private int correctMethod1(){
+     corr2();    
+     return corrInt;
+  }
+  
+  private int correctMethod1(){
+     corr2();    
+     return corrInt;
+  }
+}
+

Added: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/testBridgeFG.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/testBridgeFG.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/testBridgeFG.java	2009-07-07 14:25:23 UTC (rev 19647)
@@ -0,0 +1,34 @@
+class X  
+{ 
+  private int method1()
+  { 
+    corr2();
+    return corrInt;
+  }
+
+  private int method2()
+  { 
+    int Line1;
+    if(false){
+	    if(true)
+	    { 
+	       Line2();
+	       Line3();
+	    Line4();
+	    Line5();
+    Line6();
+    Line7()
+  }
+    
+  private int method1()
+  { 
+     corr2();
+     return corrInt;
+  }
+  
+  private int method1()
+  { 
+     corr2();
+     return corrInt;
+  }
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/unclosedBlockComment.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/unclosedBlockComment.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/unclosedBlockComment.java	2009-07-07 14:25:23 UTC (rev 19647)
@@ -0,0 +1,24 @@
+package test;
+
+import java.io.IOException;
+import junit.framework.Assert;
+import org.spoofax.jsglr.SGLRException;
+class X {
+	
+  private int correctMethod1(){
+     corr2();    
+     return corrInt;
+  }
+
+  /*
+  private int correctMethod2(){
+      int corrLine1;
+      if(true){
+    	  String s = "bla bla bla";
+    	  corrLine2();
+      }
+      corrLine3();     
+      corrLine4();
+  }
+}
+

Added: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/unclosedString.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/unclosedString.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/unclosedString.java	2009-07-07 14:25:23 UTC (rev 19647)
@@ -0,0 +1,23 @@
+package test;
+
+import java.io.IOException;
+import junit.framework.Assert;
+import org.spoofax.jsglr.SGLRException;
+class X {
+	
+  private int correctMethod1(){
+     corr2();    
+     return corrInt;
+  }
+
+  private int correctMethod2(){
+      int corrLine1;
+      if(true){
+    	  String s = "bla bla bla
+    	  corrLine2();
+      }
+      corrLine3();     
+      corrLine4();
+  }
+}
+



From L.C.L.Kats at tudelft.nl  Tue Jul  7 17:20:28 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 07 Jul 2009 15:20:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19650 - LennartKats -
	in sglr-recovery/trunk: bridge-definitions
	bridge-definitions/grammars bridge-definitions/grammars/experimental
	bridge-definitions/syntax bridge-definitions/trans
	bridge-definitions/trans/lib
	permissive-grammars/trans/make-permissive
Message-ID: <200907071518.n67FIprH020533@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-07 15:20:28 +0000 (Tue, 07 Jul 2009)
New Revision: 19650

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19650&view=rev

Added:
   sglr-recovery/trunk/bridge-definitions/grammars/experimental/
   sglr-recovery/trunk/bridge-definitions/syntax/BridgeDefinition-pretty.pp
   sglr-recovery/trunk/bridge-definitions/syntax/Comments.pp
   sglr-recovery/trunk/bridge-definitions/syntax/Makefile
   sglr-recovery/trunk/bridge-definitions/syntax/Stratego-Attributes-Sdf2.sdf
   sglr-recovery/trunk/bridge-definitions/trans/
   sglr-recovery/trunk/bridge-definitions/trans/Makefile
   sglr-recovery/trunk/bridge-definitions/trans/bridge-rules.astr
   sglr-recovery/trunk/bridge-definitions/trans/ignore-rules.astr
   sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr
   sglr-recovery/trunk/bridge-definitions/trans/lib/
   sglr-recovery/trunk/bridge-definitions/trans/make-bridge.astr
   sglr-recovery/trunk/bridge-definitions/trans/pp-bridge.astr
   sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr
Removed:
   sglr-recovery/trunk/bridge-definitions/trans/lib/sdf-parenthesize.astr
Modified:
   sglr-recovery/trunk/bridge-definitions/Makefile
   sglr-recovery/trunk/bridge-definitions/syntax/BridgeDefinition.sdf
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr

Log:
Bridge definition derivation. Doesn't do a whole lot yet.

Changes:

Modified: sglr-recovery/trunk/bridge-definitions/Makefile
===================================================================
--- sglr-recovery/trunk/bridge-definitions/Makefile	2009-07-07 14:43:01 UTC (rev 19649)
+++ sglr-recovery/trunk/bridge-definitions/Makefile	2009-07-07 15:20:28 UTC (rev 19650)
@@ -1,7 +1,7 @@
-all : syntax/BridgeDefinition.tbl trans/make-bridge
+all :
+	$(MAKE) -C syntax
+	$(MAKE) -C trans
 
-syntax/BridgeDefinition.def : $(wildcard syntax/*.sdf)
-
 # General rules
 
 %.tbl : %.def


Property changes on: sglr-recovery/trunk/bridge-definitions/grammars/experimental
___________________________________________________________________
Added: svn:mergeinfo
   + 

Added: sglr-recovery/trunk/bridge-definitions/syntax/BridgeDefinition-pretty.pp
===================================================================
--- sglr-recovery/trunk/bridge-definitions/syntax/BridgeDefinition-pretty.pp	                        (rev 0)
+++ sglr-recovery/trunk/bridge-definitions/syntax/BridgeDefinition-pretty.pp	2009-07-07 15:20:28 UTC (rev 19650)
@@ -0,0 +1,10 @@
+[
+   Definition             -- V [ H [ KW["grammar"] H hs=0 [ _1 KW[";"] ] ] _2 _3 ],
+   Import                 -- H [ KW["import"] _1 KW[";"] ],
+   Island                 -- H [ KW["island"] _1 _2 KW["="] _3 KW["for-sglr"] _4 KW[";"] ],
+   Reef                   -- H [ KW["reef"] _1 _2 KW["="] _3 KW["for-sglr"] _4 KW[";"] ],
+   Bridge                 -- H [ KW["bridge"] KW["from"] _1 KW["to"] _2 KW[";"] ],
+   Ignore                 -- H [ KW["ignore"] _1 KW["to"] _2 KW[";"] ],
+   AbstractIsland         -- H [ KW["abstract"] KW["island"] _1 _2 KW[";"] ],
+   AbstractReef           -- H [ KW["abstract"] KW["reef"] _1 _2 KW[";"] ]
+]

Modified: sglr-recovery/trunk/bridge-definitions/syntax/BridgeDefinition.sdf
===================================================================
--- sglr-recovery/trunk/bridge-definitions/syntax/BridgeDefinition.sdf	2009-07-07 14:43:01 UTC (rev 19649)
+++ sglr-recovery/trunk/bridge-definitions/syntax/BridgeDefinition.sdf	2009-07-07 15:20:28 UTC (rev 19650)
@@ -1,3 +1,8 @@
+%%
+%% Incomplete bridge specification grammar
+%%
+%% see brip.cup
+%%
 module BridgeDefinition
 
 imports
@@ -9,19 +14,28 @@
 
 exports
 
+  sorts
+    Import Rule Defintion Modifier AltPattern Pattern Extends
+
   context-free syntax
   
     "grammar" ID ";" Import* Rule* -> Definition {cons("Definition")}
 
     "import" ID ";" -> Import {cons("Import")}
 
-    "island" ID ":" ID "=" STRING  "for-sglr" AltPattern ";" -> Rule {cons("Island")}
-    "reef"   ID ":" ID "=" Pattern "for-sglr" AltPattern ";" -> Rule {cons("Reef")}
+    "island" ID Extends "=" STRING  "for-sglr" AltPattern ";" -> Rule {cons("Island")}
+    "reef"   ID Extends "=" Pattern "for-sglr" AltPattern ";" -> Rule {cons("Reef")}
+    "bridge" "from" ID "to" ID ";" -> Rule {cons("Bridge")}
     "ignore" Pattern "to" Pattern ";" -> Rule {cons("Ignore")}
-    "bridge" "from" ID "to" ID ";" -> Rule {cons("Bridge")}
   
+    "abstract" "island" ID Extends ";" -> Rule {cons("AbstractIsland")}
+    "abstract" "reef"   ID Extends ";" -> Rule {cons("AbstractReef")}
+
   context-free syntax
   
+                           -> Extends {cons("None")}
+    ":" ID                 -> Extends {cons("To")}
+  
     "WS"                   -> Pattern {cons("WS")}
     "NEWLINE"              -> Pattern {cons("NEWLINE")}
     "TAB"                  -> Pattern {cons("TAB")}

Added: sglr-recovery/trunk/bridge-definitions/syntax/Comments.pp
===================================================================
--- sglr-recovery/trunk/bridge-definitions/syntax/Comments.pp	                        (rev 0)
+++ sglr-recovery/trunk/bridge-definitions/syntax/Comments.pp	2009-07-07 15:20:28 UTC (rev 19650)
@@ -0,0 +1,4 @@
+[
+   CommentLine -- H hs=0 [ KW["//"] _1 ],
+   EmptyLine   -- KW[""]
+]

Copied: sglr-recovery/trunk/bridge-definitions/syntax/Makefile (from rev 19631, sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Makefile)
===================================================================
--- sglr-recovery/trunk/bridge-definitions/syntax/Makefile	                        (rev 0)
+++ sglr-recovery/trunk/bridge-definitions/syntax/Makefile	2009-07-07 15:20:28 UTC (rev 19650)
@@ -0,0 +1,22 @@
+all : Stratego-Attributes-Sdf2.tbl BridgeDefinition.tbl BridgeDefinition.str BridgeDefinition.pp BridgeDefinition.pp.af BridgeDefinition-pretty.pp.af Comments.pp.af
+
+%.tbl : %.def
+	sdf2table -i $< -o $@ -m `basename $< .def`
+
+%.def : %.sdf
+	pack-sdf -i $< -o $@ \
+	         -Idef $(HOME)/.nix-profile/share/aster/MixStratego-Attributes.def \
+	         -Idef $(HOME)/.nix-profile/share/aster/Stratego-Attributes.def \
+	         -Idef $(HOME)/.nix-profile/share/sdf/sdf-front/Stratego-Sdf2.def
+
+%.rtg : %.def
+	sdf2rtg -i $< -o $@ -m `basename $< .def` --ignore-missing-cons
+
+%.str : %.rtg
+	rtg2sig -i $< -o $@
+
+%.pp : %.def
+	ppgen -i $< -o $@
+
+%.pp.af : %.pp
+	parse-pp-table -i $< -o $@


Property changes on: sglr-recovery/trunk/bridge-definitions/syntax/Makefile
___________________________________________________________________
Added: svn:mergeinfo
   + 

Copied: sglr-recovery/trunk/bridge-definitions/syntax/Stratego-Attributes-Sdf2.sdf (from rev 19631, sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Stratego-Attributes-Sdf2.sdf)
===================================================================
--- sglr-recovery/trunk/bridge-definitions/syntax/Stratego-Attributes-Sdf2.sdf	                        (rev 0)
+++ sglr-recovery/trunk/bridge-definitions/syntax/Stratego-Attributes-Sdf2.sdf	2009-07-07 15:20:28 UTC (rev 19650)
@@ -0,0 +1,27 @@
+module Stratego-Attributes-Sdf2
+
+imports
+  MixStratego-Attributes[AG]
+  Stratego-Sdf2
+
+hiddens
+  context-free start-symbols
+    Start
+
+exports
+
+  sorts
+    Start
+  
+  context-free syntax %% (Parameterized start symbols not allowed)
+  
+    Module[[AG]] -> Start
+    Decl[[AG]]   -> Start
+  
+  context-free syntax %% Interface between the old StrategoRenamed and Stratego[[AG]]
+  
+    StrategoTerm -> Term[[AG]]
+    
+    Var[[AG]] -> StrategoVar {prefer}
+    Term[[AG]] -> StrategoTerm {prefer}
+


Property changes on: sglr-recovery/trunk/bridge-definitions/syntax/Stratego-Attributes-Sdf2.sdf
___________________________________________________________________
Added: svn:mergeinfo
   + 

Added: sglr-recovery/trunk/bridge-definitions/trans/Makefile
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/Makefile	                        (rev 0)
+++ sglr-recovery/trunk/bridge-definitions/trans/Makefile	2009-07-07 15:20:28 UTC (rev 19650)
@@ -0,0 +1,26 @@
+
+ASTRS=$(wildcard *.astr) \
+      $(wildcard */*.astr) \
+      ../../permissive-grammars/trans/make-permissive/sdf-analysis.astr \
+      ../../permissive-grammars/trans/make-permissive/sdf-heuristics.astr \
+      ../../permissive-grammars/trans/make-permissive/sdf-injections.astr \
+
+STRS=$(ASTRS:.astr=.str)
+
+all : make-bridge
+
+make-bridge : make-bridge.str $(STRS)
+	strc -i $< -m main-make-bridge \
+	     -I . -I ../syntax -I ../../permissive-grammars/trans/make-permissive \
+	     -la stratego-aterm \
+	     -la stratego-lib \
+	     -la stratego-xtc \
+	     -la stratego-sglr \
+	     -la ~/.nix-profile/lib/libstratego-sdf.la
+	     
+make-bridge.str : $(ASTRS) ../syntax/Stratego-Attributes-Sdf2.tbl ../syntax/BridgeDefinition.pp.af ../syntax/Comments.pp.af ../syntax/BridgeDefinition-pretty.pp.af
+	aster --verbose 2 -i $(ASTRS) -I ../syntax
+
+clean :
+	rm -f $(STRS)
+	

Added: sglr-recovery/trunk/bridge-definitions/trans/bridge-rules.astr
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/bridge-rules.astr	                        (rev 0)
+++ sglr-recovery/trunk/bridge-definitions/trans/bridge-rules.astr	2009-07-07 15:20:28 UTC (rev 19650)
@@ -0,0 +1,8 @@
+module bridge-rules
+
+attributes
+
+  def collect-all bridge-rules =
+    id.bridge-rule
+  
+  def bridge-rule = fail // TODO
\ No newline at end of file

Added: sglr-recovery/trunk/bridge-definitions/trans/ignore-rules.astr
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/ignore-rules.astr	                        (rev 0)
+++ sglr-recovery/trunk/bridge-definitions/trans/ignore-rules.astr	2009-07-07 15:20:28 UTC (rev 19650)
@@ -0,0 +1,11 @@
+module ignore-rules
+
+attributes
+
+  // TODO: Derive ignore rules
+
+  def ignore-rules :=
+    [ Ignore(String("//"), NEWLINE())
+    , Ignore(String("/*"), String("*/"))
+    , Ignore(String("\\"), String("\\"))
+    ]
\ No newline at end of file

Added: sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr	                        (rev 0)
+++ sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr	2009-07-07 15:20:28 UTC (rev 19650)
@@ -0,0 +1,8 @@
+module island-rules
+
+attributes
+
+  def collect-all island-rules =
+    id.island-rule
+  
+  def island-rule = fail // TODO
\ No newline at end of file

Deleted: sglr-recovery/trunk/bridge-definitions/trans/lib/sdf-parenthesize.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/lib/sdf-parenthesize.astr	2009-07-06 09:42:30 UTC (rev 19631)
+++ sglr-recovery/trunk/bridge-definitions/trans/lib/sdf-parenthesize.astr	2009-07-07 15:20:28 UTC (rev 19650)
@@ -1,111 +0,0 @@
-module lib/sdf-parenthesize // core-sdf-parenthesize
-
-imports
-  libstratego-lib
-  Sdf2
-
-
-strategies
-  io-core-sdf-parenthesize =
-    io-wrap(parenthesize-Sdf2)
-
-  parenthesize-Sdf2 =
-    innermost(Sdf2Parenthesize)
-
-
-rules
-
-  Sdf2Parenthesize :
-    comp(t_0) -> comp(Parenthetical(t_0))
-    where <(?union(_, _)
-            + ?isect(_, _)
-            + ?diff(_, _)
-            + fail)> t_0
-
-  Sdf2Parenthesize :
-    diff(t_0, t_1) -> diff(Parenthetical(t_0), t_1)
-    where <(?union(_, _)
-            + ?isect(_, _)
-            + fail)> t_0
-
-  Sdf2Parenthesize :
-    diff(t_0, t_1) -> diff(t_0, Parenthetical(t_1))
-    where <(?union(_, _)
-            + ?isect(_, _)
-            + ?diff(_, _)
-            + fail)> t_1
-
-  Sdf2Parenthesize :
-    iter(t_0) -> iter(Parenthetical(t_0))
-    where <(?label(_, _)
-            + ?alt(_, _)
-            + fail)> t_0
-
-  Sdf2Parenthesize :
-    iter-star(t_0) -> iter-star(Parenthetical(t_0))
-    where <(?label(_, _)
-            + ?alt(_, _)
-            + fail)> t_0
-
-  Sdf2Parenthesize :
-    opt(t_0) -> opt(Parenthetical(t_0))
-    where <(?label(_, _)
-            + ?alt(_, _)
-            + fail)> t_0
-
-  Sdf2Parenthesize :
-    alt(t_0, t_1) -> alt(Parenthetical(t_0), t_1)
-    where <(?label(_, _)
-            + ?alt(_, _)
-            + fail)> t_0
-
-  Sdf2Parenthesize :
-    alt(t_0, t_1) -> alt(t_0, Parenthetical(t_1))
-    where <(?label(_, _) + fail)> t_1
-
-  Sdf2Parenthesize :
-    seq(t_0, t_1) -> seq(Parenthetical(t_0), t_1)
-    where <(?alt(_, _) + fail)> t_0
-
-  Sdf2Parenthesize :
-    seq(t_0, t_1) -> seq(t_0, Parenthetical(t_1))
-    where <(?alt(_, _) + fail)> t_1
-
-  Sdf2Parenthesize :
-    isect(t_0, t_1) -> isect(Parenthetical(t_0), t_1)
-    where <(?union(_, _) + fail)> t_0
-
-  Sdf2Parenthesize :
-    isect(t_0, t_1) -> isect(t_0, Parenthetical(t_1))
-    where <(?union(_, _)
-            + ?isect(_, _)
-            + fail)> t_1
-
-  Sdf2Parenthesize :
-    non-transitive(t_0) -> non-transitive(Parenthetical(t_0))
-    where <(?non-transitive(_) + fail)> t_0
-
-  Sdf2Parenthesize :
-    union(t_0, t_1) -> union(t_0, Parenthetical(t_1))
-    where <(?union(_, _) + fail)> t_1
-
-  Sdf2Parenthesize :
-    conc(t_0, t_1) -> conc(Parenthetical(t_0), t_1)
-    where <(?conc(_, _) + fail)> t_0
-
-  Sdf2Parenthesize :
-    with-arguments(t_0, t_1) -> with-arguments(Parenthetical(t_0), t_1)
-    where <(?with-arguments(_, _) + fail)> t_0
-
-  Sdf2Parenthesize :
-    with-arguments(t_0, t_1) -> with-arguments(t_0, Parenthetical(t_1))
-    where <(?with-arguments(_, _) + fail)> t_1
-
-  Sdf2Parenthesize :
-    conc-grammars(t_0, t_1) -> conc-grammars(t_0, Parenthetical(t_1))
-    where <(?conc-grammars(_, _) + fail)> t_1
-
-
-signature
-  constructors
-    Parenthetical : Unknown -> Unknown

Added: sglr-recovery/trunk/bridge-definitions/trans/make-bridge.astr
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/make-bridge.astr	                        (rev 0)
+++ sglr-recovery/trunk/bridge-definitions/trans/make-bridge.astr	2009-07-07 15:20:28 UTC (rev 19650)
@@ -0,0 +1,75 @@
+module make-bridge
+
+imports
+  libstratego-lib
+  libstratego-xtc
+  libstratego-sdf
+  libstratego-sglr
+  libstratego-gpp
+  
+  lib/sdf-desugar
+  lib/multi-options
+  lib/switch-options
+  
+  sdf-analysis
+  sdf-injections
+  sdf-heuristics
+  
+  BridgeDefinition
+  bridge-rules
+  ignore-rules
+  island-rules
+  reef-rules
+  pp-bridge
+
+signature constructors
+
+  EmptyLine   : Production
+  CommentLine : String -> Production
+
+strategies // I/O
+
+  main-make-bridge =
+    xtc-io-wrap(
+      make-bridge-options
+    ,
+      parse-xtc-file-report-errors(|<get-sdf-parse-table>, None());
+      (?definition(_) <+ fatal-err(|"Please specify a packed .def file."));
+      sdf-desugar;
+
+      make-bridge;
+      
+      pp-bridge-to-string;
+      print-to
+    )
+  
+  make-bridge-options =
+    ArgOption(
+      "-m"
+    , <set-config> ("-m", <id>)
+    , "-m INNAME           Specifies the input module name"
+    )
+  
+strategies
+  
+  make-bridge =
+    id.init;
+    make-bridge-specification
+  
+  make-bridge-specification:
+    definition(defs) ->
+    Definition(
+      name
+    , [ EmptyLine(), Import("Layout") ]
+    , [ EmptyLine(), CommentLine(" Islands"), island*
+      , EmptyLine(), CommentLine(" Reefs"),   reef*
+      , EmptyLine(), CommentLine(" Bridges"), bridge*
+      , EmptyLine(), CommentLine(" Ignores"), ignore*
+      ]
+    )
+    with
+      name    := <get-config <+ !"Main"> "-m";
+      island* := defs.island-rules;
+      reef*   := defs.reef-rules;
+      bridge* := defs.bridge-rules;
+      ignore* := defs.ignore-rules

Added: sglr-recovery/trunk/bridge-definitions/trans/pp-bridge.astr
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/pp-bridge.astr	                        (rev 0)
+++ sglr-recovery/trunk/bridge-definitions/trans/pp-bridge.astr	2009-07-07 15:20:28 UTC (rev 19650)
@@ -0,0 +1,22 @@
+module pp-bridge
+
+strategies
+
+  pp-bridge-to-string =
+    bridge-to-abox;
+    box2text-string(|80)
+  
+  bridge-to-abox =
+    alltd(pp-fix-string-quotes);
+    ast2box(|[
+      <import-term(BridgeDefinition.pp.af)>
+    , <import-term(BridgeDefinition-pretty.pp.af)>
+    , <import-term(Comments.pp.af)>
+    ])
+  
+  pp-fix-string-quotes:
+    String(string) -> String(string')
+    where
+      <not(string-starts-with(|"\""))> string
+    with
+      string' := <conc-strings> ("\"", string, "\"")

Added: sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr	                        (rev 0)
+++ sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr	2009-07-07 15:20:28 UTC (rev 19650)
@@ -0,0 +1,53 @@
+module reef-rules
+
+attributes
+
+  def collect-all reef-rules =
+    id.reef-rule
+  
+  def reef-rule :
+    lit(keyword) -> Reef(x, "Keyword", String(keyword), Alt([String(cons)]))
+    where
+      cons := id.current-cons
+    where
+      verbose-msg(!"goody1", id.parent.parent.uninit, id.uninit);
+      verbose-msg(!"goody2", id.parent.parent => prod(<one(id.eq(|lit(keyword)))>, _, _));
+      id.lookup-all-uses;
+      id.debug(!"goody3");
+      one(id.is-keyword-prod)
+    with
+      x := <newname> keyword
+
+attributes
+  
+  def sort-search-operation is-keyword-prod:
+    prod(sort(sort), _, _) -> id
+    where
+      id.all-rejected-sorts;
+      one(id.eq(|sort))
+    
+    prod(_, sort, _) -> id
+    where
+      sort.is-keyword-prod
+    
+    sort(sort) -> id
+    where
+      id.lookup-all-sort(|sort);
+      one(id.is-keyword-prod)
+  
+  def collect-all all-rejected-sorts:
+    prod(_, sort(sort), attrs) -> id
+    where
+      attrs.one(reject())
+
+attributes
+
+  def List lookup-all-uses:
+    lit(lit) -> id.lookup-all-lit(|lit)
+  
+  def /*cached(|id.signature.uninit)*/ lookup-multiple-global lookup-all-lit(|lit):
+    prod(pattern, _, _) -> id
+    where
+      !pattern;
+      verbose-msg(!"  ?", id, !"=", !lit(lit));
+      one(id.eq(|lit(lit)))
\ No newline at end of file

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr	2009-07-07 14:43:01 UTC (rev 19649)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr	2009-07-07 15:20:28 UTC (rev 19650)
@@ -41,6 +41,7 @@
     ,
       parse-xtc-file-report-errors(|<get-sdf-parse-table>, None());
       (?definition(_) <+ fatal-err(|"Please specify a packed .def file."));
+      // TODO: sdf-desugar; ??
       
       (oncetd(rename-main-module) <+ check-specified-main-module);
 

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr	2009-07-07 14:43:01 UTC (rev 19649)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr	2009-07-07 15:20:28 UTC (rev 19650)
@@ -21,6 +21,11 @@
   def down current-sort:
     prod(_, sort(sort), _) -> sort
   
+  def down current-cons:
+    prod(_, _, attrs(a*)) -> cons
+    where
+      <one(?term(cons(cons)))> a*
+  
   def Test down in-pattern:
     prod(pattern, _, _).pattern -> id
 
@@ -76,11 +81,11 @@
 
 decorators 
 
-  // TODO: Remove non-circular; it's now in the standard library
-  decorator non-circular(a) =
-    id.set-cached(a.signature|EVAL_FAILED());
+  // TODO: Remove non-circular'; it's now in the standard library
+  decorator non-circular'(a) =
+    id.set-cached(a|EVAL_FAILED());
     a
 
   // TODO: Better name for this?? 'graph-search'?
-  decorator context-free-args non-circular sort-search-operation(a) =
+  decorator context-free-args non-circular' sort-search-operation(a) =
     a



From L.C.L.Kats at tudelft.nl  Tue Jul  7 18:07:53 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 07 Jul 2009 16:07:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19651 - LennartKats -
	sglr-recovery/trunk/bridge-definitions/trans
Message-ID: <200907071606.n67G6GCo021187@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-07 16:07:53 +0000 (Tue, 07 Jul 2009)
New Revision: 19651

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19651&view=rev

Modified:
   sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr

Log:
Reefs.

Changes:

Modified: sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr	2009-07-07 15:20:28 UTC (rev 19650)
+++ sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr	2009-07-07 16:07:53 UTC (rev 19651)
@@ -6,14 +6,11 @@
     id.reef-rule
   
   def reef-rule :
-    lit(keyword) -> Reef(x, "Keyword", String(keyword), Alt([String(cons)]))
+    lit(keyword) -> Reef(x, Extends("Keyword"), String(keyword), Alt([String(cons)]))
     where
       cons := id.current-cons
     where
-      verbose-msg(!"goody1", id.parent.parent.uninit, id.uninit);
-      verbose-msg(!"goody2", id.parent.parent => prod(<one(id.eq(|lit(keyword)))>, _, _));
       id.lookup-all-uses;
-      id.debug(!"goody3");
       one(id.is-keyword-prod)
     with
       x := <newname> keyword
@@ -21,13 +18,11 @@
 attributes
   
   def sort-search-operation is-keyword-prod:
-    prod(sort(sort), _, _) -> id
+    prod(_, sort, _) -> id
     where
-      id.all-rejected-sorts;
+      id.all-rejected-patterns;
       one(id.eq(|sort))
-    
-    prod(_, sort, _) -> id
-    where
+    <+
       sort.is-keyword-prod
     
     sort(sort) -> id
@@ -35,8 +30,14 @@
       id.lookup-all-sort(|sort);
       one(id.is-keyword-prod)
   
-  def collect-all all-rejected-sorts:
-    prod(_, sort(sort), attrs) -> id
+  /**
+   * Finds all rejected literals and sorts.
+   *
+   * e.g., "while" is a result for:
+   *   "while" -> ID {reject}
+   */
+  def collect-all all-rejected-patterns:
+    prod([pattern], _, attrs(attrs)) -> pattern
     where
       attrs.one(reject())
 
@@ -45,9 +46,20 @@
   def List lookup-all-uses:
     lit(lit) -> id.lookup-all-lit(|lit)
   
-  def /*cached(|id.signature.uninit)*/ lookup-multiple-global lookup-all-lit(|lit):
+  /*
+  def cached(|id.signature.uninit) lookup-multiple-global lookup-all-lit(|lit):
     prod(pattern, _, _) -> id
     where
       !pattern;
-      verbose-msg(!"  ?", id, !"=", !lit(lit));
-      one(id.eq(|lit(lit)))
\ No newline at end of file
+      verbose-msg(!"  ?", id.root, id, !"=", !lit(lit));
+      one(id.eq(|lit(lit)))
+  */
+  
+  // TODO: Asterize
+  def at-root lookup-all-lit(|lit) =
+    collect-all(
+      where(
+        ?prod(<id>, _, _);
+        one(id.eq(|lit(lit)))    
+      )
+    )



From L.C.L.Kats at tudelft.nl  Tue Jul  7 18:14:57 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 07 Jul 2009 16:14:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19652 - LennartKats -
	in aster/trunk: runtime/aster/attributes
	runtime/aster/decorators tests trans/back trans/front
Message-ID: <200907071613.n67GDKYK021250@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-07 16:14:57 +0000 (Tue, 07 Jul 2009)
New Revision: 19652

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19652&view=rev

Added:
   aster/trunk/tests/caching2.astr
Modified:
   aster/trunk/runtime/aster/attributes/lang.astr
   aster/trunk/runtime/aster/decorators/assert.astr
   aster/trunk/runtime/aster/decorators/caching.astr
   aster/trunk/runtime/aster/decorators/circular.astr
   aster/trunk/runtime/aster/decorators/lang.astr
   aster/trunk/trans/back/attribute-references.str
   aster/trunk/trans/back/decorator-wrapping.str
   aster/trunk/trans/front/analyze-foreign-ops.str
   aster/trunk/trans/front/analyze.str
   aster/trunk/trans/front/check.astr

Log:
Some library tuning and minor fixes to caching behavior.

Changes:

Modified: aster/trunk/runtime/aster/attributes/lang.astr
===================================================================
--- aster/trunk/runtime/aster/attributes/lang.astr	2009-07-07 16:07:53 UTC (rev 19651)
+++ aster/trunk/runtime/aster/attributes/lang.astr	2009-07-07 16:14:57 UTC (rev 19652)
@@ -1,5 +1,5 @@
 /**
- * Language primitives as attributes.
+ * Aster language primitives as attributes.
  *
  * @author Lennart Kats <lennart add lclnet.nl>
  */
@@ -36,6 +36,9 @@
     aster-remove-annos
   
   /**
+   * Unititialize an term, removing any initialization annotations.
+   * May only consider annotations in leaf nodes.
+   *
    * @internal
    */
   def plain disable-warnings uninit-lazy =
@@ -56,7 +59,7 @@
 
   /**
    * Retrieves the cached value for a given attribute signature,
-   * or EVAL_FAILED() if it failed before.
+   * or fails if it failed before.
    */
   def plain disable-trace get-cached(|sig) =
     get-cached-attribute(|<global-cache>, id, sig)
@@ -66,6 +69,12 @@
    */
   def plain disable-trace set-cached(|sig, value) =
     set-cached-attribute(|<global-cache>, id, sig, value)
+  
+  /**
+   * Tests if there exists a cached value for a given attribute signature.
+   */
+  def plain disable-trace is-cached(|sig) =
+    where(get-cached-attribute(|<global-cache>, id, sig))
 
   /**
    * Assigns the current term as the cached value for a given attribute signature.
@@ -75,12 +84,20 @@
     
   /**
    * Retrieves the cached value for a given attribute,
-   * or EVAL_FAILED() if it failed before.
+   * or fails if it failed before.
    *
    * @note Intended to be used as a regular attribute, not for decoration.
    */
   decorator plain disable-trace get-cached(a) =
     get-cached-attribute(|<global-cache>, id, a.signature)
+    
+  /**
+   * Tests if there exists a cached value for a given attribute.
+   *
+   * @note Intended to be used as a regular attribute, not for decoration.
+   */
+  decorator plain disable-trace is-cached(a) =
+    where(get-cached-attribute(|<global-cache>, id, a.signature))
   
   /**
    * Assigns the cached value for a given attribute.

Modified: aster/trunk/runtime/aster/decorators/assert.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/assert.astr	2009-07-07 16:07:53 UTC (rev 19651)
+++ aster/trunk/runtime/aster/decorators/assert.astr	2009-07-07 16:14:57 UTC (rev 19652)
@@ -13,6 +13,16 @@
 
   List : Term -> List
 
+strategies
+
+  String = is-string
+  
+  Int = is-int
+  
+  Real = is-real
+  
+  List = is-list
+
 decorators
 
   decorator assert-input(a, condition) =
@@ -54,9 +64,30 @@
 
 decorators // Type annotations and assertions
 
+  /**
+   * Decorates an attribute with its output type.
+   * An error will be reported if the attribute is not of this type.
+   *
+   * Example:
+   *
+   * def Type(String) add-suffix :
+   *   s -> <concat-strings> (s, "_", s.suffix)
+   */
   decorator Type(a, tout) =
     id.assert-output(a, id.has-Type(tout) |"Attribute result is not of the indicated type")
 
+  /**
+   * Decorates an attribute with its input and output type.
+   * An error will be reported if the attribute is not of these types.
+   *
+   * Examples:
+   *
+   * def Type(String, String) add-suffix :
+   *   s -> <concat-strings> (s, "_", s.suffix)
+   *
+   * def Type(id,     String) add-suffix :
+   *   s -> <concat-strings> (s, "_", s.suffix)
+   */
   decorator Type(a, tin, tout) =
     id.assert-input(
       id.assert-output(
@@ -68,11 +99,20 @@
     | "Attribute input is not of the indicated type"
     )
   
-  decorator uninit String(a) =
-    id.assert-output(a, is-string |"Result must be a string")
+  /**
+   * Decorates an attribute with the String output type.
+   * An error will be reported if the attribute is not of this type.
+   *
+   * Example:
+   *
+   * def String add-suffix :
+   *   s -> <concat-strings> (s, "_", s.suffix)
+   */
+  decorator String(a) =
+    id.assert-output(a, String |"Result must be a string")
 
   decorator List(a) =
-    id.assert-output(a, is-list |"Result must be a list")
+    id.assert-output(a, List |"Result must be a list")
 
   decorator List(a, t) =
     id.assert-output(a, list-loop(id.has-Type(t)) |"Result must be a list of the indicated type")
@@ -80,6 +120,9 @@
   decorator Int(a) =
     id.assert-output(a, is-int |"Result must be an int")
 
+  /**
+   * Indicates that an attribute is only used to test for a certain property.
+   */
   decorator Test(a) =
     where(a)
   

Modified: aster/trunk/runtime/aster/decorators/caching.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/caching.astr	2009-07-07 16:07:53 UTC (rev 19651)
+++ aster/trunk/runtime/aster/decorators/caching.astr	2009-07-07 16:14:57 UTC (rev 19652)
@@ -57,7 +57,7 @@
     id.cached(a|a.signature)
   
   /**
-   * Strip the argument values from an attribute signature.
+   * Strip the argument values from a given attribute signature.
    */
   def disable-warnings plain strip-arg-values:
     Attribute(name, sargs, targs) ->
@@ -93,6 +93,12 @@
    *
    *   def context-free-args lookup-global lookup-by-name(|name):
    *     Decl(x, y) -> y
+   *
+   * Or, for a graph-based search operation that potentially contains cycles:
+   *
+   *   def context-free-args non-circular lookup-in-graph(|name):
+   *     Redecl(x, y) -> id.lookup-in-graph(|y)
+   *     Decl(x, y)   -> y
    */
   decorator disable-warnings alter-signature(Attribute(id, id, map(id.uninit-lazy))) context-free-args(a) =
     a

Modified: aster/trunk/runtime/aster/decorators/circular.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/circular.astr	2009-07-07 16:07:53 UTC (rev 19651)
+++ aster/trunk/runtime/aster/decorators/circular.astr	2009-07-07 16:14:57 UTC (rev 19652)
@@ -16,7 +16,11 @@
 
 decorators
   
-  decorator plain node.circular(a|initial-value) =
+  /**
+   * Indicates an attribute uses fixpoint-based, circular attribute evaluation.
+   */
+  decorator plain circular(a|initial-value) =
+    node   := id;
     stored := <id.get-cached(a) <+ initial-value.ensure-init <+ !EVAL_FAILED()>;
     if ?CIRCULAR_FINISHED(value) + ?CIRCULAR_BUSY(value) then
       !value
@@ -25,6 +29,39 @@
     end;
     not(EVAL_FAILED)
 
+  /**
+   * Enables fail-fast behavior for non-circular attributes:
+   * the attribute will fail if recursively evaluated twice
+   * for the same node.
+   * 
+   * Fail-fast non-circular attributes are typically used for
+   * graph search operations, where any cyclic edges should be ignored
+   * during a search.
+   *
+   * @see context-free-args
+   */
+  decorator non-circular(a) =
+    id.set-cached(a|EVAL_FAILED());
+    a
+
+  /**
+   * Enables fail-fast behavior for non-circular attributes:
+   * the attribute will return a term 't' if recursively evaluated twice
+   * for the same node.
+   * 
+   * Fail-fast non-circular attributes are typically used for
+   * graph search operations, where any cyclic edges should be ignored
+   * during a search.
+   *
+   * @see context-free-args
+   */
+  decorator non-circular(a|t) =
+    id.set-cached(a|t);
+    a
+
+/**
+ * @internal
+ */
 strategies
 
   // TODO: Start a new fixpoint for a new strongly connected component? (helps performance and prevents premature caching)
@@ -83,6 +120,9 @@
       unset-fixpoint-running(|global-cache)
     end
 
+/**
+ * @internal
+ */
 strategies // Helpers
   
   is-fixpoint-running(|global-cache) = hashtable-get(|global-cache, "$circular-lock")
@@ -91,6 +131,9 @@
   
   unset-fixpoint-running(|global-cache) = hashtable-remove(|global-cache, "$circular-lock")
 
+/**
+ * @internal
+ */
 strategies // Maintain a list of attributes participating in the latest fixpoint network
 
   // We maintain a set of all unchanged attributes in the last evaluation;
@@ -126,6 +169,9 @@
       iset-clear
     ))
 
+/**
+ * @internal
+ */
 strategies // Fixpoint keeps running while something changed
   
   circular-set-has-changed(|global-cache) =

Modified: aster/trunk/runtime/aster/decorators/lang.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/lang.astr	2009-07-07 16:07:53 UTC (rev 19651)
+++ aster/trunk/runtime/aster/decorators/lang.astr	2009-07-07 16:14:57 UTC (rev 19652)
@@ -33,8 +33,10 @@
     a
 
   /**
-   * Alters the signature of an attribute. For example,
-   * may be used in combination with customized caching.
+   * Alters the signature of an attribute.
+   * It may for example be used in combination with customized caching.
+   *
+   * This decorator is typically only used to define other decorators.
    */
   decorator alter-signature(alter) alter-signature(a, alter) =
     a

Added: aster/trunk/tests/caching2.astr
===================================================================
--- aster/trunk/tests/caching2.astr	                        (rev 0)
+++ aster/trunk/tests/caching2.astr	2009-07-07 16:14:57 UTC (rev 19652)
@@ -0,0 +1,49 @@
+module caching2
+
+strategies
+
+  main-caching2 =
+    option-wrap(
+      verbose-option
+    ,
+      root := 1.init;
+      
+      <debug(!1); eq> (id.inc, id.get-cached(id.inc));
+      
+      not(id.fail1);
+      not(id.fail2);
+      
+      where(
+        <debug(!2); eq> (EVAL_FAILED(), <get-cached-attribute(|<global-cache>, id, id.signature(id.fail1))>)
+      );
+      not(
+        id.get-cached(|id.signature(id.fail1)) + id.get-cached(id.fail1)
+      );
+      where(
+        id.is-cached(|id.signature(id.fail1))
+      );
+      where(
+        id.is-cached(id.fail1)
+      );
+      
+      where(
+        <debug(!3); eq> (EVAL_FAILED(), <get-cached-attribute(|<global-cache>, id, id.signature(id.fail2))>)
+      );
+      not(
+        id.get-cached(|id.signature(id.fail2)) + id.get-cached(id.fail2)
+      );
+      where(
+        id.is-cached(|id.signature(id.fail2))
+      );
+      where(
+        id.is-cached(id.fail2)
+      )
+    )
+
+attributes
+  
+  def inc = inc
+  
+  def fail1 = debug(!"fail1 runs"); fail
+  
+  def Test fail2 = debug(!"fail2 runs"); fail

Modified: aster/trunk/trans/back/attribute-references.str
===================================================================
--- aster/trunk/trans/back/attribute-references.str	2009-07-07 16:07:53 UTC (rev 19651)
+++ aster/trunk/trans/back/attribute-references.str	2009-07-07 16:14:57 UTC (rev 19652)
@@ -79,7 +79,7 @@
       if <has-marker-decorator(|DISABLE_WARNINGS_DECORATOR())> attr then
         s_warning := Id()
       else
-        name'     := <conc-strings> (name, <arity-to-string> (s*, t*));
+        name'     := <conc-strings> (name, <arity-to-string> (<length> s*, <length> t*));
         s_warning := |[ aster-initialize-node-warning(|x_all-parents, ~str:name') ]|
       end
 

Modified: aster/trunk/trans/back/decorator-wrapping.str
===================================================================
--- aster/trunk/trans/back/decorator-wrapping.str	2009-07-07 16:07:53 UTC (rev 19651)
+++ aster/trunk/trans/back/decorator-wrapping.str	2009-07-07 16:14:57 UTC (rev 19652)
@@ -114,14 +114,14 @@
     (decorator, s_decorated) ->
     |[ let x_cached =
          s_cache-read // note: this could be EVAL_FAILED
-       <+
-         { x_cached-node: ?x_cached-node;
+       < not(EVAL_FAILED)
+       + { x_cached-node: ?x_cached-node;
            s_ref;
-           s_cache-write
+           s_cache-write;
+           not(EVAL_FAILED)
          }
        in
-         x_cached;
-         not(EVAL_FAILED)
+         x_cached
        end
     ]|
     with
@@ -143,7 +143,8 @@
         s_decorated'  := <avoid-caching-undecorated-values> s_decorated
       end;
       
-      s_ref := <make-decorated(|t_decorated)> (decorator, s_decorated')
+      s_ref-sugar  := <make-decorated(|t_decorated)> (decorator, s_decorated');
+      s_ref        := <try(remove-eval-failed)> <assimilate-expr-inside-ag> s_ref-sugar
 
   /**
    * Removes global cache-writes from inner decorator applications.

Modified: aster/trunk/trans/front/analyze-foreign-ops.str
===================================================================
--- aster/trunk/trans/front/analyze-foreign-ops.str	2009-07-07 16:07:53 UTC (rev 19651)
+++ aster/trunk/trans/front/analyze-foreign-ops.str	2009-07-07 16:14:57 UTC (rev 19652)
@@ -13,14 +13,19 @@
   libstrc
 
 strategies // Gathering information
+
+  // TODO: Inspect decorators for foreign operators
+  //       rather than assuming any decorator is a foreign one?
   
-  record-equation-operations(|body, pattern, child, attribute, sig) =
+  record-equation-operations(|body, decorators, pattern, child, attribute, sig) =
     <HasForeignOperations> sig // we already know this one's foreign
   <+
     safe-variables := <collect-term-arguments(|pattern, attribute)>;
     decorated      := <decorated-variable> attribute;
+    decorator-refs := <map(!AttributeRef(Id(), <id>))> decorators;
     
-    if has-parent-referencing-pattern(|pattern, child) 
+    if !decorators => [_ | _]
+       <+ has-parent-referencing-pattern(|pattern, child)
        <+ <has-foreign-operations(|decorated, safe-variables)> body
     then
       sig' := <decorator-signature> sig;
@@ -103,8 +108,8 @@
   
   /**
    * Determines that a strategy call is to be considered a foreign operation.
-   * Internally, this maintains a "while list" of strategies that
-   * should be O(1) operations and may not produce a new term, such as <add> or <subt>.
+   * Internally, we maintain a "white list" of strategies that
+   * should be O(1) operations and may not produce a new term, such as <add> and <subt>.
    *
    * @see add-cached-rule-logic
    */
@@ -124,6 +129,8 @@
     ?(_, [_ | _], _); // attributes with strategy args are uncacheable
     not(
       ("child", [id], [])
+    + ("set-cached", [], [id, id]) // set-cached may not provide full caching
+    + ("set-cached", [id], [id])   // and is still a side effect...
     )
   
 strategies

Modified: aster/trunk/trans/front/analyze.str
===================================================================
--- aster/trunk/trans/front/analyze.str	2009-07-07 16:07:53 UTC (rev 19651)
+++ aster/trunk/trans/front/analyze.str	2009-07-07 16:14:57 UTC (rev 19652)
@@ -36,7 +36,7 @@
         rules(
           HasEquations: sig
         );
-        record-equation-operations(|body, pattern, child, attribute, sig)
+        record-equation-operations(|body, decorators, pattern, child, attribute, sig)
       end;
       
       rules(

Modified: aster/trunk/trans/front/check.astr
===================================================================
--- aster/trunk/trans/front/check.astr	2009-07-07 16:07:53 UTC (rev 19651)
+++ aster/trunk/trans/front/check.astr	2009-07-07 16:14:57 UTC (rev 19652)
@@ -19,7 +19,7 @@
     id.init;
     collect-all(where(id.error + id.warning));
     list-loop(log-error);
-    
+   
     if one(id.error) then
       <xtc-exit> 1
     end
@@ -165,6 +165,9 @@
       type   := id.def-type;
       merged := <id.uninit; ordered-union> (decs, type);
       not(<id.eq> (type, merged))
+   
+  def warning:
+    AttributeRef(_, Attribute("cached", [_], [])) -> "Decorator 'cached' should not be used in-line"
     
   // TODO: confirm attribute applicability based on pattern, where possible
   
@@ -230,8 +233,8 @@
       x.eq(|<param-to-string> p)
   
   // TODO: Proper error pp
-  def uninit pp:
-    _ -> id
+  def plain pp:
+    _ -> id.uninit
   
   def String pp-sig:
     Attribute(name, sarity, tarity) -> <conc-strings> (name, arity)



From L.C.L.Kats at tudelft.nl  Tue Jul  7 18:15:57 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 07 Jul 2009 16:15:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19653 - LennartKats -
	sglr-recovery/trunk/bridge-definitions/trans
Message-ID: <200907071614.n67GELfp021265@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-07 16:15:57 +0000 (Tue, 07 Jul 2009)
New Revision: 19653

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19653&view=rev

Modified:
   sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr

Log:
Separators are also reefs.

Changes:

Modified: sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr	2009-07-07 16:14:57 UTC (rev 19652)
+++ sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr	2009-07-07 16:15:57 UTC (rev 19653)
@@ -4,6 +4,13 @@
 
   def collect-all reef-rules =
     id.reef-rule
+
+  def reef-rule:
+    lit(separator) -> Reef(<newname> "separator", Extends("Keyword"), String(separator), Alt([String(cons)]))
+    where
+      cons := id.current-cons
+    where
+      id.in-iter-pattern
   
   def reef-rule :
     lit(keyword) -> Reef(x, Extends("Keyword"), String(keyword), Alt([String(cons)]))
@@ -13,7 +20,7 @@
       id.lookup-all-uses;
       one(id.is-keyword-prod)
     with
-      x := <newname> keyword
+      x := <newname> keyword // TODO: allow alphanumeric chars only
 
 attributes
   
@@ -55,7 +62,7 @@
       one(id.eq(|lit(lit)))
   */
   
-  // TODO: Asterize
+  // TODO: Asterize?
   def at-root lookup-all-lit(|lit) =
     collect-all(
       where(



From L.C.L.Kats at tudelft.nl  Tue Jul  7 18:16:44 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 07 Jul 2009 16:16:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19654 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.metatooling/src/syntax
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <200907071615.n67GF8OS021283@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-07 16:16:44 +0000 (Tue, 07 Jul 2009)
New Revision: 19654

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19654&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/syntax/Comments.sdf
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/syntax/Stratego-Java-EditorService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/NativeCallPrimitive.java

Log:
Factored out comment definitions to a subgrammar.

Changes:

Copied: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/syntax/Comments.sdf (from rev 19546, spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/syntax/Stratego-Java-EditorService.sdf)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/syntax/Comments.sdf	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/syntax/Comments.sdf	2009-07-07 16:16:44 UTC (rev 19654)
@@ -0,0 +1,25 @@
+module Comments[E]
+
+exports
+
+  sorts
+    CommentLine
+  
+  lexical syntax
+    ~[\n\r]* -> CommentLine[[E]]
+
+  lexical restrictions
+  
+    CommentLine[[E]] -/- ~[\n\r]
+  
+    CommentLine[[E]] -/- [\/].[\/]
+    CommentLine[[E]] -/- [\/].[\*]
+
+  syntax  
+  
+    "~//" <CommentLine[[E]]-LEX> -> <E-CF> {cons("CommentLine")}
+  
+  context-free syntax
+  
+    "~\n" -> E {cons("EmptyLine"), avoid}
+


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/syntax/Comments.sdf
___________________________________________________________________
Added: svn:mergeinfo
   + 

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/syntax/Stratego-Java-EditorService.sdf
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/syntax/Stratego-Java-EditorService.sdf	2009-07-07 16:15:57 UTC (rev 19653)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/syntax/Stratego-Java-EditorService.sdf	2009-07-07 16:16:44 UTC (rev 19654)
@@ -6,6 +6,14 @@
   languages/java/eblock/JavaEBlockMix[Java]
   
   EditorService
+  
+  Comments[Section]
+  Comments[SemanticRule]
+  Comments[ColorRule]
+  Comments[OutlineRule]
+  Comments[FoldingRule]
+  Comments[LanguageProperty]
+  Comments[ReferenceRule]
 
 exports
   context-free start-symbols Module[[StrategoHost]]
@@ -13,39 +21,9 @@
   sorts
     QuotedTerm
     QuotedTerms
-  
-  lexical syntax
-    ~[\n\r]* -> CommentLine
 
-  lexical restrictions
-  
-    CommentLine -/- ~[\n\r]
-  
-    CommentLine -/- [\/].[\/]
-    CommentLine -/- [\/].[\*]
-
-  syntax  
-  
-    %% Printed comments
-    "~//" <CommentLine-LEX> -> <Section-CF> {cons("CommentLine")}
-    "~//" <CommentLine-LEX> -> <SemanticRule-CF> {cons("CommentLine"), prefer}
-    "~//" <CommentLine-LEX> -> <ColorRule-CF> {cons("CommentLine"), prefer}
-    "~//" <CommentLine-LEX> -> <OutlineRule-CF> {cons("CommentLine"), prefer}
-    "~//" <CommentLine-LEX> -> <FoldingRule-CF> {cons("CommentLine"), prefer}
-    "~//" <CommentLine-LEX> -> <LanguageProperty-CF> {cons("CommentLine"), prefer}
-    "~//" <CommentLine-LEX> -> <ReferenceRule-CF> {cons("CommentLine"), prefer}
-
   context-free syntax
     
-    %% Printed empty lines
-    "~\n" -> Section {cons("EmptyLine"), avoid}
-    "~\n" -> SemanticRule {cons("EmptyLine")}
-    "~\n" -> ColorRule {cons("EmptyLine")}
-    "~\n" -> OutlineRule {cons("EmptyLine")}
-    "~\n" -> FoldingRule {cons("EmptyLine")}
-    "~\n" -> LanguageProperty {cons("EmptyLine")}
-    "~\n" -> ReferenceRule {cons("EmptyLine")}
-  
     %% (Anti-)quotations
     "descriptor" "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
     

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/NativeCallPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/NativeCallPrimitive.java	2009-07-07 16:15:57 UTC (rev 19653)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/NativeCallPrimitive.java	2009-07-07 16:16:44 UTC (rev 19654)
@@ -41,8 +41,8 @@
 			SSLLibrary op = (SSLLibrary) env.getOperatorRegistry(SSLLibrary.REGISTRY_NAME);
 			IOAgent io = op.getIOAgent();
 			File dir = io.openFile(io.getWorkingDir());
-			PrintStream stdout = io.getOutputStream(IOAgent.CONST_STDOUT);
-			PrintStream stderr = io.getOutputStream(IOAgent.CONST_STDERR);
+			PrintStream stdout = (PrintStream) io.getOutputStream(IOAgent.CONST_STDOUT);
+			PrintStream stderr = (PrintStream) io.getOutputStream(IOAgent.CONST_STDERR);
 			
 			// Invocation
 			int returnCode = caller.call(commandArgs, dir, stdout, stderr);



From L.C.L.Kats at tudelft.nl  Tue Jul  7 19:55:14 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 07 Jul 2009 17:55:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19655 - LennartKats -
	sglr-recovery/trunk/permissive-grammars/trans/make-permissive
Message-ID: <200907071753.n67HrbPf022061@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-07 17:55:14 +0000 (Tue, 07 Jul 2009)
New Revision: 19655

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19655&view=rev

Modified:
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr

Log:
Generate separator insertion rules.

Changes:

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr	2009-07-07 16:16:44 UTC (rev 19654)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr	2009-07-07 17:55:14 UTC (rev 19655)
@@ -35,9 +35,10 @@
   //       This same pattern seems useful for collection attributes...
   def at-root all-lexical-insert-prods =
     collect-all(
-      ![ <id.lexical-insert-prod      <+ ![]>
-       , <id.lexical-insert-open-prod <+ ![]>
-       , <id.lexical-insert-all-prod  <+ ![]>
+      ![ <id.lexical-insert-prod           <+ ![]>
+       , <id.lexical-insert-open-prod      <+ ![]>
+       , <id.lexical-insert-all-prod       <+ ![]>
+       , <id.lexical-insert-separator-prod <+ ![]>
        ]
     , id.union
     );
@@ -192,24 +193,17 @@
 
 attributes // Separator literals (e.g., ",")
 
-/*
-  // TODO: Separator literal insertions
-  //       for iter-sep, iter-star-sep, etc etc
-
-  def lexical-insert-separator-prod:
-    |[ { ~sort ~lit } ]| ->
-    |[ -> ~lit ]|
+  def collect-all lexical-insert-separator-prod:
+    lit @ lit(_) -> |[ -> ~lit ]|
     where
-      id.in-context-free-section
+      id.in-context-free-section;
+      id.in-iter-pattern
     where
-      !lit => lit(_)
-    where
       if-switch(|OPEN_INSERTIONS_ON())
     <+
       not(lit.is-used-as-opening-literal)
     where
       if-switch(|SEPARATORS_ON())
-*/
 
 attributes // All-literal insertion
 

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr	2009-07-07 16:16:44 UTC (rev 19654)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr	2009-07-07 17:55:14 UTC (rev 19655)
@@ -49,7 +49,7 @@
 
       add-permissive-sections;
       
-      if-switch(!OPTIMIZE_ON,
+      if-switch(!OPTIMIZE_ON(),
         optimize-sdf
       );
       



From L.C.L.Kats at tudelft.nl  Tue Jul  7 20:55:29 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 07 Jul 2009 18:55:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19656 - LennartKats -
	in sglr-recovery/trunk: bridge-definitions/syntax
	bridge-definitions/trans permissive-grammars/trans/make-permissive
Message-ID: <200907071853.n67IrqW6022644@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-07 18:55:29 +0000 (Tue, 07 Jul 2009)
New Revision: 19656

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19656&view=rev

Removed:
   sglr-recovery/trunk/bridge-definitions/trans/bridge-rules.astr
Modified:
   sglr-recovery/trunk/bridge-definitions/syntax/BridgeDefinition.sdf
   sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr
   sglr-recovery/trunk/bridge-definitions/trans/make-bridge.astr
   sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr

Log:
Detect some islands.

Changes:

Modified: sglr-recovery/trunk/bridge-definitions/syntax/BridgeDefinition.sdf
===================================================================
--- sglr-recovery/trunk/bridge-definitions/syntax/BridgeDefinition.sdf	2009-07-07 17:55:14 UTC (rev 19655)
+++ sglr-recovery/trunk/bridge-definitions/syntax/BridgeDefinition.sdf	2009-07-07 18:55:29 UTC (rev 19656)
@@ -34,7 +34,7 @@
   context-free syntax
   
                            -> Extends {cons("None")}
-    ":" ID                 -> Extends {cons("To")}
+    ":" ID                 -> Extends {cons("Extends")}
   
     "WS"                   -> Pattern {cons("WS")}
     "NEWLINE"              -> Pattern {cons("NEWLINE")}

Deleted: sglr-recovery/trunk/bridge-definitions/trans/bridge-rules.astr
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/bridge-rules.astr	2009-07-07 17:55:14 UTC (rev 19655)
+++ sglr-recovery/trunk/bridge-definitions/trans/bridge-rules.astr	2009-07-07 18:55:29 UTC (rev 19656)
@@ -1,8 +0,0 @@
-module bridge-rules
-
-attributes
-
-  def collect-all bridge-rules =
-    id.bridge-rule
-  
-  def bridge-rule = fail // TODO
\ No newline at end of file

Modified: sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr	2009-07-07 17:55:14 UTC (rev 19655)
+++ sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr	2009-07-07 18:55:29 UTC (rev 19656)
@@ -2,7 +2,70 @@
 
 attributes
 
-  def collect-all island-rules =
-    id.island-rule
+  // TODO: Merge rules for the same literal?
+  // TODO: Rules for parentheses, with {bracket} attribute
+
+  def island-rules =
+    collect-all(id.start-end-island-rule);
+    concat;
+    make-set
   
-  def island-rule = fail // TODO
\ No newline at end of file
+  def start-end-island-rule:
+    [openinglit @ lit(lit) | pattern-and-lit] ->
+    [ Island(
+        lit-name1'
+      , Extends("SimpleStartIsland")
+      , String(lit)
+      , Alt([String(cons)])
+      )
+    , Island(
+        lit-name2'
+      , Extends("SimpleEndIsland")
+      , String(lit2)
+      , Alt([String(cons)])
+      )
+    , Bridge(
+        lit-name1', lit-name2'
+      )
+    ]
+    where
+      cons := id.current-cons
+    where
+      id.in-context-free-section
+    where
+      <split-last> pattern-and-lit => (_, closinglit @ lit(lit2))
+    where
+      not(closinglit.eq(|openinglit))
+    where
+      not(id.is-illegal-island-literals(|openinglit, closinglit))
+    with
+      lit-name1  := <conc-strings> ("start", lit);
+      lit-name2  := <conc-strings> ("end", lit);
+      lit-name1' := lit-name1.new-island-name;
+      lit-name2' := lit-name2.new-island-name
+ 
+  def context-free new-island-name:
+    x -> x'
+    where
+      if string-as-chars(list-loop(is-alphanum)) then
+        x' := <newname> x
+      else
+        x' := <newname> "island"
+      end
+
+attributes
+ 
+  /**
+   * Succeeds if lit-start and lit-end are not always
+   * used in a balanced fashion.
+   */
+  def lookup-global is-illegal-island-literals(|lit-start, lit-end):
+    [lit-start | p*] -> id
+    where
+      not(p*.one(id.eq(|lit-end))); debug(!"A")
+    <+
+      p*.one(id.eq(|lit-start)); debug(!"B")
+    
+    [lit-end | p*] -> id
+    where
+      p*.one(id.eq(|lit-end) + id.eq(|lit-start))

Modified: sglr-recovery/trunk/bridge-definitions/trans/make-bridge.astr
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/make-bridge.astr	2009-07-07 17:55:14 UTC (rev 19655)
+++ sglr-recovery/trunk/bridge-definitions/trans/make-bridge.astr	2009-07-07 18:55:29 UTC (rev 19656)
@@ -16,7 +16,6 @@
   sdf-heuristics
   
   BridgeDefinition
-  bridge-rules
   ignore-rules
   island-rules
   reef-rules
@@ -61,9 +60,8 @@
     Definition(
       name
     , [ EmptyLine(), Import("Layout") ]
-    , [ EmptyLine(), CommentLine(" Islands"), island*
+    , [ EmptyLine(), CommentLine(" Islands and bridges"), island*
       , EmptyLine(), CommentLine(" Reefs"),   reef*
-      , EmptyLine(), CommentLine(" Bridges"), bridge*
       , EmptyLine(), CommentLine(" Ignores"), ignore*
       ]
     )
@@ -71,5 +69,4 @@
       name    := <get-config <+ !"Main"> "-m";
       island* := defs.island-rules;
       reef*   := defs.reef-rules;
-      bridge* := defs.bridge-rules;
       ignore* := defs.ignore-rules

Modified: sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr	2009-07-07 17:55:14 UTC (rev 19655)
+++ sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr	2009-07-07 18:55:29 UTC (rev 19656)
@@ -13,14 +13,23 @@
       id.in-iter-pattern
   
   def reef-rule :
-    lit(keyword) -> Reef(x, Extends("Keyword"), String(keyword), Alt([String(cons)]))
+    lit(keyword) -> Reef(keyword', Extends("Keyword"), String(keyword), Alt([String(cons)]))
     where
       cons := id.current-cons
     where
       id.lookup-all-uses;
       one(id.is-keyword-prod)
     with
-      x := <newname> keyword // TODO: allow alphanumeric chars only
+      keyword' := keyword.new-keyword-name
+ 
+  def context-free new-keyword-name:
+    x -> x'
+    where
+      if string-as-chars(list-loop(is-alphanum)) then
+        x' := <newname> x
+      else
+        x' := <newname> "keyword"
+      end
 
 attributes
   

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr	2009-07-07 17:55:14 UTC (rev 19655)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr	2009-07-07 18:55:29 UTC (rev 19656)
@@ -74,6 +74,7 @@
     where
       not(closinglit.is-used-as-opening-literal)
   
+  // TODO: Optimize: use lookup-global?
   def Test is-used-as-opening-literal:
     lit(x) -> id
     where



From L.C.L.Kats at tudelft.nl  Wed Jul  8 11:08:48 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 08 Jul 2009 09:08:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19657 - LennartKats -
	in sglr-recovery/trunk: . bridge-definitions
Message-ID: <200907080907.n6897BSP031859@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-08 09:08:48 +0000 (Wed, 08 Jul 2009)
New Revision: 19657

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19657&view=rev

Modified:
   sglr-recovery/trunk/Makefile
   sglr-recovery/trunk/bridge-definitions/Makefile

Log:
Makefiles.

Changes:

Modified: sglr-recovery/trunk/Makefile
===================================================================
--- sglr-recovery/trunk/Makefile	2009-07-07 18:55:29 UTC (rev 19656)
+++ sglr-recovery/trunk/Makefile	2009-07-08 09:08:48 UTC (rev 19657)
@@ -1,8 +1,10 @@
 all :
 	$(MAKE) -C permissive-grammars
 	$(MAKE) -C generalized-tokenizer
+	$(MAKE) -C bridge-definitions
 	$(MAKE) -C recovery-runtime
 
 clean :
 	$(MAKE) -C permissive-grammars clean
+	$(MAKE) -C bridge-definitions clean
 	$(MAKE) -C recovery-runtime clean

Modified: sglr-recovery/trunk/bridge-definitions/Makefile
===================================================================
--- sglr-recovery/trunk/bridge-definitions/Makefile	2009-07-07 18:55:29 UTC (rev 19656)
+++ sglr-recovery/trunk/bridge-definitions/Makefile	2009-07-08 09:08:48 UTC (rev 19657)
@@ -2,6 +2,9 @@
 	$(MAKE) -C syntax
 	$(MAKE) -C trans
 
+clean :
+	$(MAKE) -C trans clean
+
 # General rules
 
 %.tbl : %.def



From L.C.L.Kats at tudelft.nl  Wed Jul  8 11:11:37 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 08 Jul 2009 09:11:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19658 - LennartKats -
	in sglr-recovery/trunk/bridge-definitions: . grammars/java
Message-ID: <200907080910.n689A0rV031898@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-08 09:11:37 +0000 (Wed, 08 Jul 2009)
New Revision: 19658

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19658&view=rev

Added:
   sglr-recovery/trunk/bridge-definitions/grammars/java/Java-15.def
Modified:
   sglr-recovery/trunk/bridge-definitions/Makefile

Log:
Make a Java-15.bp.

Changes (first 1000 lines of the diffs):

Modified: sglr-recovery/trunk/bridge-definitions/Makefile
===================================================================
--- sglr-recovery/trunk/bridge-definitions/Makefile	2009-07-08 09:08:48 UTC (rev 19657)
+++ sglr-recovery/trunk/bridge-definitions/Makefile	2009-07-08 09:11:37 UTC (rev 19658)
@@ -1,10 +1,14 @@
 all :
 	$(MAKE) -C syntax
 	$(MAKE) -C trans
+	$(MAKE) grammars/java/Java-15.bp
 
 clean :
 	$(MAKE) -C trans clean
 
+%.bp : %.def
+	trans/make-bridge -i $< -o $@ --verbose 2
+
 # General rules
 
 %.tbl : %.def

Copied: sglr-recovery/trunk/bridge-definitions/grammars/java/Java-15.def (from rev 19642, sglr-recovery/trunk/permissive-grammars/grammars/java/Java-15.def)
===================================================================
--- sglr-recovery/trunk/bridge-definitions/grammars/java/Java-15.def	                        (rev 0)
+++ sglr-recovery/trunk/bridge-definitions/grammars/java/Java-15.def	2009-07-08 09:11:37 UTC (rev 19658)
@@ -0,0 +1,1696 @@
+definition
+module languages/java-15/expressions/Priorities
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/expressions/Main
+
+exports
+  context-free priorities
+      Expr "." "new" TypeArgs? Id TypeArgs? "(" {Expr ","}* ")" ClassBody? -> Expr
+    > {right:
+        Expr "++" -> Expr
+        Expr "--" -> Expr
+      } 
+
+  context-free priorities
+      {right:
+        Expr "++" -> Expr
+        Expr "--" -> Expr
+      }
+    > { "(" PrimType ")" Expr -> Expr    
+        "(" RefType  ")" Expr -> Expr
+      }
+
+  context-free priorities
+      "(" PrimType ")" Expr -> Expr
+    > {left:
+        Expr "*" Expr -> Expr
+        Expr "/" Expr -> Expr
+        Expr "%" Expr -> Expr
+      } 
+
+  context-free priorities
+      "(" RefType ")" Expr -> Expr 
+    > {
+        "++" Expr -> Expr
+        "--" Expr -> Expr
+        "+"  Expr -> Expr
+        "-"  Expr -> Expr
+      }
+
+  context-free priorities
+    {
+      Expr ArraySubscript -> ArrayAccess
+      Expr "." Id -> FieldAccess
+      Expr "." TypeArgs? Id -> MethodSpec
+    }
+  > {right:
+      Expr "++" -> Expr
+      Expr "--" -> Expr
+    }
+  > {
+      "++" Expr -> Expr
+      "--" Expr -> Expr
+      "+"  Expr -> Expr
+      "-"  Expr -> Expr
+      "~"  Expr -> Expr
+      "!"  Expr -> Expr
+    }
+  > {left:
+      Expr "*" Expr -> Expr
+      Expr "/" Expr -> Expr
+      Expr "%" Expr -> Expr
+    } 
+  > {left:
+      Expr "+" Expr -> Expr
+      Expr "-" Expr -> Expr
+    }
+  > {left:
+      Expr "<<"  Expr -> Expr
+      Expr ">>"  Expr -> Expr
+      Expr ">>>" Expr -> Expr
+    }
+  > {left:
+      Expr "instanceof" RefType -> Expr
+      Expr "<"   Expr -> Expr
+      Expr ">"   Expr -> Expr
+      Expr "<="  Expr -> Expr
+      Expr ">="  Expr -> Expr
+    }
+  > {left:
+      Expr "=="  Expr -> Expr
+      Expr "!="  Expr -> Expr
+    }
+  >   Expr "&"   Expr -> Expr
+  >   Expr "^"   Expr -> Expr
+  >   Expr "|"   Expr -> Expr
+  >   Expr "&&"  Expr -> Expr
+  >   Expr "||"  Expr -> Expr
+  >   Expr CondMid Expr -> Expr
+  > {right:
+      LHS "="    Expr -> Expr
+      LHS "*="   Expr -> Expr
+      LHS "/="   Expr -> Expr
+      LHS "%="   Expr -> Expr
+      LHS "+="   Expr -> Expr
+      LHS "-="   Expr -> Expr
+      LHS "<<="  Expr -> Expr
+      LHS ">>="  Expr -> Expr
+      LHS ">>>=" Expr -> Expr
+      LHS "&="   Expr -> Expr
+      LHS "^="   Expr -> Expr
+      LHS "|="   Expr -> Expr
+    }
+
+module languages/java-15/expressions/Restrictions
+exports
+  lexical restrictions
+    "+" -/- [\+]
+    "-" -/- [\-]
+    "/" -/- [\/]
+
+module languages/java-15/expressions/AssignmentOperators
+imports
+  languages/java-15/expressions/Main
+
+exports
+  sorts LHS
+  context-free syntax
+    LHS "="    Expr -> Expr {cons("Assign")}
+    LHS "*="   Expr -> Expr {cons("AssignMul")}
+    LHS "/="   Expr -> Expr {cons("AssignDiv")}
+    LHS "%="   Expr -> Expr {cons("AssignRemain")}
+    LHS "+="   Expr -> Expr {cons("AssignPlus")}
+    LHS "-="   Expr -> Expr {cons("AssignMinus")}
+    LHS "<<="  Expr -> Expr {cons("AssignLeftShift")}
+    LHS ">>="  Expr -> Expr {cons("AssignRightShift")}
+    LHS ">>>=" Expr -> Expr {cons("AssignURightShift")}
+    LHS "&="   Expr -> Expr {cons("AssignAnd")}
+    LHS "^="   Expr -> Expr {cons("AssignExcOr")}
+    LHS "|="   Expr -> Expr {cons("AssignOr")}
+
+    ExprName    -> LHS
+    FieldAccess -> LHS
+    ArrayAccess -> LHS
+
+
+module languages/java-15/expressions/BinaryOperators
+imports
+  languages/java-15/expressions/Main
+  languages/java-15/types/Main
+
+exports
+  sorts CondMid
+  context-free syntax
+    Expr "instanceof" RefType -> Expr {cons("InstanceOf")}
+
+    Expr "*"   Expr -> Expr  {left, cons("Mul")}
+    Expr "/"   Expr -> Expr  {left, cons("Div")}
+    Expr "%"   Expr -> Expr  {left, cons("Remain")}
+
+    Expr "+"   Expr -> Expr  {left, cons("Plus")}
+    Expr "-"   Expr -> Expr  {left, cons("Minus")}
+
+    Expr "<<"  Expr -> Expr  {left, cons("LeftShift")}
+    Expr ">>"  Expr -> Expr  {left, cons("RightShift")}
+    Expr ">>>" Expr -> Expr  {left, cons("URightShift")}
+
+    Expr "<"   Expr -> Expr  {left, cons("Lt")}
+    Expr ">"   Expr -> Expr  {left, cons("Gt")}
+    Expr "<="  Expr -> Expr  {left, cons("LtEq")}
+    Expr ">="  Expr -> Expr  {left, cons("GtEq")}
+    Expr "=="  Expr -> Expr  {left, cons("Eq")}
+    Expr "!="  Expr -> Expr  {left, cons("NotEq")}
+
+    Expr "&&"  Expr -> Expr  {left, cons("LazyAnd")}
+    Expr "||"  Expr -> Expr  {left, cons("LazyOr")}
+
+    Expr "&" Expr -> Expr {left, cons("And")}
+    Expr "^" Expr -> Expr {left, cons("ExcOr")}
+    Expr "|" Expr -> Expr {left, cons("Or")}
+
+    %% todo JFR-30
+    Expr CondMid Expr -> Expr {right, cons("Cond")}
+    "?" Expr ":" -> CondMid {bracket}
+
+module languages/java-15/expressions/UnaryOperators
+imports 
+  languages/java-15/expressions/Main
+exports
+  context-free syntax
+    "+" Expr -> Expr {cons("Plus")}
+    "-" Expr -> Expr {cons("Minus")}
+
+    "++" Expr -> Expr {cons("PreIncr")}
+    "--" Expr -> Expr {cons("PreDecr")}
+
+    "~" Expr -> Expr {cons("Complement")}
+    "!" Expr -> Expr {cons("Not")}
+
+    "(" PrimType ")" Expr -> Expr {cons("CastPrim")}
+    "(" RefType  ")" Expr -> Expr {cons("CastRef")}
+
+module languages/java-15/expressions/Postfix
+imports 
+  languages/java-15/expressions/Main
+
+exports
+  context-free syntax
+    ExprName  -> Expr
+    Expr "++" -> Expr {cons("PostIncr")}
+    Expr "--" -> Expr {cons("PostDecr")}
+
+module languages/java-15/expressions/MethodInvocation
+imports
+  languages/java-15/expressions/Main
+
+exports
+  sorts MethodSpec
+  context-free syntax
+    MethodSpec "(" {Expr ","}* ")" -> Expr {cons("Invoke")}
+
+                               MethodName -> MethodSpec {cons("Method")}
+                    Expr "." TypeArgs? Id -> MethodSpec {cons("Method")}
+                 "super" "." TypeArgs? Id -> MethodSpec {cons("SuperMethod")}
+    TypeName "." "super" "." TypeArgs? Id -> MethodSpec {cons("QSuperMethod")}
+                 AmbName "." TypeArgs  Id -> MethodSpec {cons("GenericMethod")}
+
+  %% This priority forbids a Expr "." MethodSpec if the expression is a plain ExprName.
+  %% This solves an ambiguity with the MethodName and AmbName . TypeArgs MethodSpecs.
+  %% foo.bar.fred() results in a MethodName MethodSpec.
+  %% (foo.bar).fred() results in the Expr. MethodSpec
+  %% foo.bar.<T>fred() results in a GenericMethod
+  context-free priorities
+      Expr "." TypeArgs? Id -> MethodSpec
+    > ExprName  -> Expr
+
+
+module languages/java-15/expressions/ArrayAccess
+imports
+  languages/java-15/expressions/Main
+exports
+  sorts
+    ArrayAccess
+    ArraySubscript
+
+  context-free syntax
+    ArrayAccess -> Expr
+
+    %% todo: JFR-29
+    Expr ArraySubscript -> ArrayAccess {cons("ArrayAccess")}
+    "[" Expr "]" -> ArraySubscript {bracket}
+
+    ArrayCreationExpr ArraySubscript -> ArrayAccess {reject}
+
+module languages/java-15/expressions/FieldAccess
+imports
+  languages/java-15/expressions/Main
+
+exports
+  sorts FieldAccess
+  context-free syntax
+    FieldAccess -> Expr
+
+  context-free syntax
+
+                    Expr "." Id -> FieldAccess {cons("Field")}
+                ExprName "." Id -> FieldAccess {reject}
+                 "super" "." Id -> FieldAccess {cons("SuperField")}
+    TypeName "." "super" "." Id -> FieldAccess {cons("QSuperField")}
+
+module languages/java-15/expressions/ArrayCreation
+imports
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    ArrayCreationExpr
+    ArrayBaseType
+    Dim
+    DimExpr
+
+  context-free syntax
+    ArrayCreationExpr     -> Expr
+
+    "new" ArrayBaseType DimExpr+ Dim*  -> ArrayCreationExpr {cons("NewArray")}
+    "new" ArrayBaseType Dim+ ArrayInit -> ArrayCreationExpr {cons("NewArray")}
+
+    PrimType -> ArrayBaseType
+    TypeName -> ArrayBaseType
+    TypeName "<" "?" ">" -> ArrayBaseType {cons("UnboundWld")}
+
+    "[" Expr "]" -> DimExpr {cons("Dim")}
+    "[" "]"      -> Dim     {cons("Dim")}
+
+module languages/java-15/expressions/ClassInstanceCreation
+imports
+  languages/java-15/expressions/Main
+  languages/java-15/classes/ClassDeclarations
+
+exports
+  context-free syntax
+
+             "new" TypeArgs? ClassOrInterfaceType "(" {Expr ","}* ")" ClassBody? -> Expr {cons("NewInstance")}
+    Expr "." "new" TypeArgs? Id         TypeArgs? "(" {Expr ","}* ")" ClassBody? -> Expr {cons("QNewInstance")}
+
+module languages/java-15/expressions/Primary
+imports
+  languages/java-15/lexical/literals/Main
+  languages/java-15/names/Main
+  languages/java-15/expressions/Main
+
+exports
+  %%%
+   %% Section 15.8.1: Lexical Literals
+   %%%
+  sorts Literal
+  context-free syntax
+    Literal -> Expr {cons("Lit")}
+
+    IntLiteral    -> Literal
+    FloatLiteral  -> Literal
+    BoolLiteral   -> Literal 
+    CharLiteral   -> Literal
+    StringLiteral -> Literal
+    NullLiteral   -> Literal
+
+  %%%
+   %% Section 15.8.2: Class Literals
+   %%%
+  sorts ClassLiteral
+  context-free syntax
+    ClassLiteral -> Literal
+    Type   "." "class" -> ClassLiteral {cons("Class")}
+    "void" "." "class" -> ClassLiteral {cons("VoidClass")}
+
+  %%%
+   %% Section 15.8.3/4: (Qualified this)
+   %%%
+  context-free syntax
+                 "this" -> Expr {cons("This")}
+    TypeName "." "this" -> Expr {cons("QThis")}
+
+  %%%
+   %% Section 15.8.5: Parenthesized Expression
+   %%%
+  context-free syntax
+    "(" Expr ")"          -> Expr {bracket}
+
+module languages/java-15/expressions/Main
+imports
+  languages/java-15/expressions/Primary
+  languages/java-15/expressions/ClassInstanceCreation
+  languages/java-15/expressions/ArrayCreation
+  languages/java-15/expressions/FieldAccess
+  languages/java-15/expressions/ArrayAccess
+  languages/java-15/expressions/MethodInvocation
+  languages/java-15/expressions/Postfix
+  languages/java-15/expressions/UnaryOperators
+  languages/java-15/expressions/BinaryOperators
+  languages/java-15/expressions/AssignmentOperators
+  languages/java-15/expressions/Restrictions
+  languages/java-15/expressions/Priorities
+
+exports
+  sorts
+    Expr
+
+module languages/java-15/statements/Main
+imports
+  languages/java-15/statements/Blocks
+  languages/java-15/statements/LocalVariableDeclarations
+  languages/java-15/statements/Statements
+
+
+module languages/java-15/arrays/Main
+imports
+  languages/java-15/arrays/ArrayInitializers
+
+
+module languages/java-15/interfaces/Main
+imports
+  languages/java-15/interfaces/InterfaceDeclarations
+  languages/java-15/interfaces/AbstractMethodDeclarations
+  languages/java-15/interfaces/AnnotationTypes
+  languages/java-15/interfaces/Annotations
+
+
+module languages/java-15/classes/Main
+imports
+  languages/java-15/classes/ClassDeclarations
+  languages/java-15/classes/EnumDeclarations
+
+
+module languages/java-15/packages/PackageDeclarations
+imports
+  languages/java-15/names/Main
+  languages/java-15/interfaces/Annotations
+
+exports
+  sorts
+    PackageDec
+
+  context-free syntax
+    Anno* "package" PackageName ";" -> PackageDec {cons("PackageDec")}
+
+module languages/java-15/packages/ImportDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/names/Main
+
+exports
+  sorts
+    ImportDec
+
+  context-free syntax
+    "import" TypeName                  ";"  -> ImportDec {cons("TypeImportDec")}
+    "import" PackageName       "." "*" ";"  -> ImportDec {cons("TypeImportOnDemandDec")}
+    "import" "static" TypeName "." Id  ";"  -> ImportDec {cons("StaticImportDec")}
+    "import" "static" TypeName "." "*" ";"  -> ImportDec {cons("StaticImportOnDemandDec")}
+
+module languages/java-15/interfaces/AnnotationTypes
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/classes/ClassDeclarations
+  languages/java-15/classes/EnumDeclarations
+  languages/java-15/interfaces/InterfaceDeclarations
+  languages/java-15/interfaces/AbstractMethodDeclarations
+  languages/java-15/interfaces/ConstantDeclarations
+  languages/java-15/interfaces/Annotations
+
+exports
+  sorts
+    AnnoDec
+    AnnoDecHead
+
+  context-free syntax
+    AnnoDecHead "{" AnnoElemDec* "}" -> AnnoDec {cons("AnnoDec")}
+    (Anno | InterfaceMod)* "@" "interface" Id -> AnnoDecHead {cons("AnnoDecHead")}
+
+  sorts
+    AnnoElemDec
+    DefaultVal
+
+  context-free syntax
+    AbstractMethodMod* Type Id "(" ")" DefaultVal? ";" -> AnnoElemDec {cons("AnnoMethodDec")}
+
+    ConstantDec  -> AnnoElemDec
+    ClassDec     -> AnnoElemDec
+    InterfaceDec -> AnnoElemDec
+    EnumDec      -> AnnoElemDec
+    AnnoDec      -> AnnoElemDec
+    ";"          -> AnnoElemDec {cons("Semicolon")}
+
+    "default" ElemVal -> DefaultVal {cons("DefaultVal")}
+
+module languages/java-15/interfaces/AbstractMethodDeclarations
+imports
+  languages/java-15/lexical/Modifiers
+  languages/java-15/names/Main
+  languages/java-15/types/Main
+  languages/java-15/classes/MethodDeclarations
+
+exports
+  sorts
+    AbstractMethodDec
+    AbstractMethodMod
+
+  context-free syntax
+    (Anno | AbstractMethodMod)* TypeParams? ResultType
+      Id "(" {FormalParam ","}* ")" Throws? ";" -> AbstractMethodDec {cons("AbstractMethodDec")}
+
+    (Anno | AbstractMethodMod)* TypeParams? ResultType
+      Id "(" {FormalParam ","}* ")" Dim+ Throws? ";" -> AbstractMethodDec {cons("DeprAbstractMethodDec")}
+
+    Public   -> AbstractMethodMod
+    Abstract -> AbstractMethodMod
+
+
+
+module languages/java-15/interfaces/ConstantDeclarations
+imports
+  languages/java-15/lexical/Modifiers
+  languages/java-15/types/Main
+  languages/java-15/classes/MethodDeclarations
+  languages/java-15/interfaces/Annotations
+
+exports
+  sorts
+    ConstantDec
+    ConstantMod
+
+  context-free syntax
+    (Anno | ConstantMod)* Type {VarDec ","}+ ";" -> ConstantDec {cons("ConstantDec")}
+
+    Public -> ConstantMod
+    Static -> ConstantMod
+    Final  -> ConstantMod
+
+
+module languages/java-15/interfaces/InterfaceDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/names/Main
+  languages/java-15/types/Main
+  languages/java-15/classes/ClassDeclarations
+  languages/java-15/classes/MethodDeclarations
+  languages/java-15/interfaces/ConstantDeclarations
+  languages/java-15/interfaces/AbstractMethodDeclarations
+  languages/java-15/interfaces/AnnotationTypes
+  languages/java-15/interfaces/Annotations
+
+exports
+  sorts
+    InterfaceDec
+    InterfaceDecHead
+    ExtendsInterfaces
+    InterfaceMemberDec
+    InterfaceMod
+
+  context-free syntax
+    AnnoDec -> InterfaceDec
+
+    InterfaceDecHead "{" InterfaceMemberDec* "}" -> InterfaceDec {cons("InterfaceDec")}
+
+    (Anno | InterfaceMod)* "interface" Id TypeParams? ExtendsInterfaces? -> InterfaceDecHead {cons("InterfaceDecHead")}
+    "extends" {InterfaceType ","}+ -> ExtendsInterfaces {cons("ExtendsInterfaces")}
+
+  context-free syntax
+    ConstantDec       -> InterfaceMemberDec
+    AbstractMethodDec -> InterfaceMemberDec
+    ClassDec          -> InterfaceMemberDec
+    InterfaceDec      -> InterfaceMemberDec
+    ";"               -> InterfaceMemberDec {cons("Semicolon")}
+
+  context-free syntax
+    Public         -> InterfaceMod
+    Protected      -> InterfaceMod
+    Private        -> InterfaceMod
+    Abstract       -> InterfaceMod
+    Static         -> InterfaceMod
+    StrictFP       -> InterfaceMod
+
+
+module languages/java-15/classes/EnumDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/classes/ClassDeclarations
+
+exports
+  sorts
+    EnumDec
+    EnumDecHead
+    EnumBody
+    EnumConst
+    EnumConstArgs
+    EnumBodyDecs
+
+  context-free syntax
+    EnumDecHead EnumBody -> EnumDec {cons("EnumDec")}
+
+    (Anno | ClassMod)* "enum" Id Interfaces? -> EnumDecHead {cons("EnumDecHead")}
+
+    "{" {EnumConst ","}*     EnumBodyDecs? "}" -> EnumBody {cons("EnumBody")}
+    "{" {EnumConst ","}* "," EnumBodyDecs? "}" -> EnumBody {cons("EnumBody")}
+
+    Id EnumConstArgs? ClassBody?  -> EnumConst {cons("EnumConst")}
+    "(" {Expr ","}* ")"  -> EnumConstArgs {bracket}
+
+    ";" ClassBodyDec* -> EnumBodyDecs {cons("EnumBodyDecs")}
+
+module languages/java-15/classes/ConstructorDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/interfaces/Annotations
+  languages/java-15/statements/Main
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    ConstrDec
+    ConstrBody
+    ConstrHead
+    ConstrInv
+
+  context-free syntax
+    ConstrHead ConstrBody ->  ConstrDec {cons("ConstrDec")}
+    (Anno | ConstrMod)* TypeParams? Id "(" {FormalParam ","}* ")" Throws? -> ConstrHead {cons("ConstrDecHead")}
+
+
+    "{" ConstrInv? BlockStm* "}" -> ConstrBody {cons("ConstrBody")}
+
+             TypeArgs? "this"  "(" {Expr ","}* ")" ";" -> ConstrInv {cons("AltConstrInv")}
+             TypeArgs? "super" "(" {Expr ","}* ")" ";" -> ConstrInv {cons("SuperConstrInv")}
+    Expr "." TypeArgs? "super" "(" {Expr ","}* ")" ";" -> ConstrInv {cons("QSuperConstrInv")}
+
+  sorts ConstrMod
+  context-free syntax  
+    Public    -> ConstrMod
+    Protected -> ConstrMod
+    Private   -> ConstrMod
+
+
+module languages/java-15/classes/StaticInitializers
+imports
+  languages/java-15/statements/Blocks
+
+exports
+  sorts
+    StaticInit
+
+  context-free syntax
+    "static" Block -> StaticInit   {cons("StaticInit")}
+
+module languages/java-15/classes/InstanceInitializers
+imports
+  languages/java-15/statements/Blocks
+
+exports
+  sorts
+    InstanceInit
+
+  context-free syntax
+    Block -> InstanceInit {cons("InstanceInit")}
+
+module languages/java-15/statements/Statements
+imports
+  languages/java-15/statements/LocalVariableDeclarations
+  languages/java-15/statements/Blocks
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    Stm ExprStm
+
+  context-free syntax
+    Block      -> Stm
+
+  %%%
+   %% Section 14.6: The Empty Statement
+   %%%
+  context-free syntax
+    ";"        -> Stm {cons("Empty")}
+
+  %%%
+   %% Section 14.7: Labeled Statements
+   %%%
+  context-free syntax
+    Id ":" Stm -> Stm {cons("Labeled")}
+
+  %%%
+   %% Section 14.8: Expressions Statements
+   %%%
+  context-free syntax
+    Expr ";"   -> ExprStm {cons("ExprStm")}
+    ExprStm    -> Stm
+
+  %%%
+   %% Section 14.9: The If Statement
+   %%%
+  context-free syntax
+    "if" "(" Expr ")" Stm             -> Stm {prefer, cons("If")}
+    "if" "(" Expr ")" Stm  "else" Stm -> Stm {cons("If")}
+
+  %%%
+   %% Section 14.10: The Assert Statement
+   %%%
+  context-free syntax
+    "assert" Expr          ";" -> Stm  {cons("AssertStm")}
+    "assert" Expr ":" Expr ";" -> Stm  {cons("AssertStm")}
+
+
+  %%%
+   %% Section 14.11: The Switch Statement
+   %%%
+  sorts SwitchBlock SwitchGroup SwitchLabel
+  context-free syntax
+    "switch" "(" Expr ")" SwitchBlock -> Stm {cons("Switch")}
+    "{" SwitchGroup* SwitchLabel* "}" -> SwitchBlock {cons("SwitchBlock")}
+    SwitchLabel+ BlockStm+ -> SwitchGroup  {cons("SwitchGroup")}
+
+    "case" Expr ":" -> SwitchLabel {cons("Case")}
+    "default"   ":" -> SwitchLabel {cons("Default")}
+
+  %%%
+   %% Section 14.12: The While Statement
+   %%%
+  context-free syntax
+    "while" "(" Expr ")" Stm -> Stm {cons("While")}
+
+  %%%
+   %% Section 14.13: The Do Statement
+   %%%
+  context-free syntax
+  "do" Stm "while" "(" Expr ")" ";" -> Stm {cons("DoWhile")}
+
+
+  %%%
+   %% Section 14.14: The For Statement
+   %%%
+  context-free syntax
+    "for" "(" LocalVarDec ";" Expr? ";" {Expr ","}* ")" Stm -> Stm {cons("For")}
+    "for" "(" {Expr ","}* ";" Expr? ";" {Expr ","}* ")" Stm -> Stm {cons("For")}
+
+    "for" "(" FormalParam ":" Expr ")" Stm -> Stm {cons("ForEach")}
+
+  %%%
+   %% Section 14.15: The Break Statement
+   %%%
+  context-free syntax
+    "break"    Id? ";"   -> Stm {cons("Break")}
+
+  %%%
+   %% Section 14.16: The Continue Statement
+   %%%
+  context-free syntax
+    "continue" Id? ";"   -> Stm {cons("Continue")}
+
+  %%%
+   %% Section 14.17: The Return Statement
+   %%%
+  context-free syntax
+    "return"   Expr? ";" -> Stm {cons("Return")}
+
+  %%%
+   %% Section 14.18: The Throw Statement
+   %%%
+  context-free syntax
+    "throw"    Expr  ";" -> Stm {cons("Throw")}
+
+  %%%
+   %% Section 14.19: The Synchronized Statement
+   %%%
+  context-free syntax
+    "synchronized" "(" Expr ")" Block -> Stm {cons("Synchronized")}
+
+  %%%
+   %% Section 14.20: The Try Statement
+   %%%
+  sorts CatchClause
+  context-free syntax
+    "try" Block CatchClause+ -> Stm {cons("Try")}
+    "try" Block CatchClause* "finally" Block -> Stm {cons("Try")}
+    "catch" "(" FormalParam ")" Block -> CatchClause {cons("Catch")}
+
+module languages/java-15/statements/LocalVariableDeclarations
+imports
+  languages/java-15/classes/MethodDeclarations
+  languages/java-15/classes/FieldDeclarations
+
+exports
+  sorts
+    LocalVarDecStm
+    LocalVarDec
+
+  context-free syntax
+    LocalVarDec ";" -> LocalVarDecStm {cons("LocalVarDecStm")}
+    (Anno | VarMod)* Type {VarDec ","}+ -> LocalVarDec {cons("LocalVarDec")}
+    
+    %% Disambiguate List<T> i;
+    Expr "<" Expr ">" Expr ";" -> ExprStm {reject}
+
+module languages/java-15/statements/Blocks
+imports
+  languages/java-15/classes/ClassDeclarations
+  languages/java-15/statements/LocalVariableDeclarations
+  languages/java-15/statements/Statements
+
+exports
+  sorts
+    BlockStm
+    Block
+
+  context-free syntax
+    "{" BlockStm* "}" -> Block {cons("Block")}
+
+    LocalVarDecStm  -> BlockStm 
+    ClassDec        -> BlockStm {cons("ClassDecStm")}
+    Stm             -> BlockStm
+
+
+module languages/java-15/classes/MethodDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/types/Main
+  languages/java-15/classes/FieldDeclarations
+  languages/java-15/interfaces/Annotations
+  languages/java-15/statements/Blocks
+
+exports
+  sorts
+    MethodDec
+    MethodDecHead
+    ResultType
+
+  context-free syntax
+    MethodDecHead MethodBody -> MethodDec {cons("MethodDec")}
+
+    (Anno | MethodMod)* TypeParams? ResultType Id "(" {FormalParam ","}* ")" Throws?      -> MethodDecHead {cons("MethodDecHead")}
+    (Anno | MethodMod)* TypeParams? ResultType Id "(" {FormalParam ","}* ")" Dim+ Throws? -> MethodDecHead {cons("DeprMethodDecHead")}
+
+    Type   -> ResultType
+    "void" -> ResultType {cons("Void")}
+
+  sorts FormalParam
+  context-free syntax
+    (Anno | VarMod)* Type       VarDecId -> FormalParam {cons("Param")}
+    (Anno | VarMod)* Type "..." VarDecId -> FormalParam {cons("VarArityParam")}
+
+  sorts VarMod
+  context-free syntax
+    Final -> VarMod
+
+  sorts MethodMod
+  context-free syntax
+    Public         -> MethodMod
+    Protected      -> MethodMod
+    Private        -> MethodMod
+
+    Abstract       -> MethodMod
+    Static         -> MethodMod
+    Final          -> MethodMod
+    Synchronized   -> MethodMod
+    Native         -> MethodMod
+    StrictFP       -> MethodMod
+
+  %%%
+   %% Section 8.4.6: Method Throws
+   %%%
+  sorts
+    Throws
+    ExceptionType
+
+  context-free syntax
+    "throws" {ExceptionType ","}+ -> Throws {cons("ThrowsDec")}
+    ClassType -> ExceptionType
+    %% TypeVar -> ExceptionType
+
+  %%%
+   %% Section 8.4.7: Method Body
+   %%% 
+  sorts MethodBody
+  context-free syntax
+    Block -> MethodBody
+    ";"   -> MethodBody {cons("NoMethodBody")}
+
+module languages/java-15/arrays/ArrayInitializers
+imports
+  languages/java-15/classes/FieldDeclarations
+
+exports
+  sorts ArrayInit
+  context-free syntax
+    "{" {VarInit ","}*     "}" -> ArrayInit {cons("ArrayInit")}
+    "{" {VarInit ","}* "," "}" -> ArrayInit {cons("ArrayInit")}
+
+module languages/java-15/interfaces/Annotations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/names/Main
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    Anno
+    ElemVal
+    ElemValPair
+
+  context-free syntax
+    "@" TypeName "(" {ElemValPair ","}* ")" -> Anno {cons("Anno")}
+    "@" TypeName "(" ElemVal ")"            -> Anno {cons("SingleElemAnno")}
+    "@" TypeName                            -> Anno {cons("MarkerAnno")}
+
+  context-free syntax  
+    Id "=" ElemVal -> ElemValPair {cons("ElemValPair")}
+
+    Expr -> ElemVal
+    Anno -> ElemVal
+
+    "{" {ElemVal ","}*     "}" -> ElemVal {cons("ElemValArrayInit")}
+    "{" {ElemVal ","}* "," "}" -> ElemVal {cons("ElemValArrayInit")}
+
+    %% Assignments are not allowed as element values.
+    LHS "=" Expr -> ElemVal {reject}
+
+module languages/java-15/classes/FieldDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/types/Main
+  languages/java-15/interfaces/Annotations
+  languages/java-15/arrays/ArrayInitializers
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    FieldDec
+    VarDec
+    VarDecId
+    Dim
+    VarInit
+
+  context-free syntax
+    (Anno | FieldMod)* Type { VarDec ","}+ ";" -> FieldDec {cons("FieldDec")}
+
+    VarDecId             -> VarDec {cons("VarDec")}
+    VarDecId "=" VarInit -> VarDec {cons("VarDec")}
+
+    Id      -> VarDecId
+    Id Dim+ -> VarDecId {cons("ArrayVarDecId")}
+
+    "[" "]" -> Dim {cons("Dim")}
+
+    Expr      -> VarInit
+    ArrayInit -> VarInit
+
+  sorts FieldMod
+  context-free syntax
+    Public    -> FieldMod
+    Protected -> FieldMod
+    Private   -> FieldMod
+
+    Static    -> FieldMod
+    Final     -> FieldMod
+    Transient -> FieldMod
+    Volatile  -> FieldMod
+
+
+module languages/java-15/classes/ClassDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/types/ReferenceTypes
+  languages/java-15/types/TypeVariables
+  languages/java-15/classes/FieldDeclarations
+  languages/java-15/classes/MethodDeclarations
+  languages/java-15/classes/InstanceInitializers
+  languages/java-15/classes/StaticInitializers
+  languages/java-15/classes/ConstructorDeclarations
+  languages/java-15/classes/EnumDeclarations
+  languages/java-15/interfaces/InterfaceDeclarations
+
+exports
+  sorts
+    ClassDec
+    ClassBody
+    ClassDecHead
+
+  context-free syntax
+    EnumDec -> ClassDec
+
+    ClassDecHead ClassBody -> ClassDec {cons("ClassDec")}
+    "{" ClassBodyDec* "}" -> ClassBody {cons("ClassBody")}
+
+    (Anno | ClassMod)* "class" Id  TypeParams? Super? Interfaces? -> ClassDecHead {cons("ClassDecHead")}
+
+  %% 8.1.1: Class Modifiers
+  sorts ClassMod
+  context-free syntax
+    Abstract  -> ClassMod
+    Public    -> ClassMod
+    Protected -> ClassMod
+    Private   -> ClassMod
+    Static    -> ClassMod
+    Final     -> ClassMod
+    StrictFP  -> ClassMod
+
+  %% 8.1.4: Superclasses and Subclasses
+  sorts Super
+  context-free syntax
+
+    "extends" ClassType -> Super {cons("SuperDec")}
+
+  %% 8.1.5: Superinterfaces
+  sorts Interfaces
+  context-free syntax
+    "implements" {InterfaceType ","}+ -> Interfaces {cons("ImplementsDec")}
+
+
+  %% 8.1.6: Class Body and Member Declarations
+  sorts
+    ClassBodyDec
+    ClassMemberDec

(729 diff lines omitted)


From L.C.L.Kats at tudelft.nl  Wed Jul  8 11:25:51 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 08 Jul 2009 09:25:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19659 - LennartKats -
	aster/trunk/runtime/aster/decorators
Message-ID: <200907080924.n689ODAq032120@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-08 09:25:51 +0000 (Wed, 08 Jul 2009)
New Revision: 19659

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19659&view=rev

Modified:
   aster/trunk/runtime/aster/decorators/lookup.astr

Log:


Changes:

Modified: aster/trunk/runtime/aster/decorators/lookup.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/lookup.astr	2009-07-08 09:11:37 UTC (rev 19658)
+++ aster/trunk/runtime/aster/decorators/lookup.astr	2009-07-08 09:25:51 UTC (rev 19659)
@@ -63,13 +63,16 @@
   /**
    * Unscoped lookup for identifiers.
    *
+   * Uses a global symbol table for lookup,
+   * and by default uses caching.
+   *
    * @param fetch-decl A local declaration fetching attribute that succeeds
    *                   if a given declares the requested identifier.
    */
   decorator lookup-global(fetch-decl) =
     id.lookup-unordered(fetch-decl, fail)
   
-attributes
+decorators
     
   /**
    * Lexically ordered scoping lookup for multiply declared identifiers.
@@ -112,7 +115,7 @@
   decorator plain lookup-multiple-global(fetch-decl) =
     id.lookup-multiple-unordered(fetch-decl, fail)
   
-attributes // Collecting declarations for lookup attributes
+decorators // Collecting declarations for lookup attributes
 
   /**
    * Lookup all declarations in scope for a given lookup attribute.



From L.C.L.Kats at tudelft.nl  Wed Jul  8 11:37:46 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 08 Jul 2009 09:37:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19660 - LennartKats -
	in sglr-recovery/trunk: bridge-definitions/trans
	permissive-grammars/trans/make-permissive
Message-ID: <200907080936.n689a862032182@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-08 09:37:46 +0000 (Wed, 08 Jul 2009)
New Revision: 19660

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19660&view=rev

Modified:
   sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-heuristics.astr
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-injections.astr

Log:
s/sort-search-operation/graph-search/

Changes:

Modified: sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr	2009-07-08 09:25:51 UTC (rev 19659)
+++ sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr	2009-07-08 09:37:46 UTC (rev 19660)
@@ -33,7 +33,7 @@
 
 attributes
   
-  def sort-search-operation is-keyword-prod:
+  def graph-search is-keyword-prod:
     prod(_, sort, _) -> id
     where
       id.all-rejected-patterns;

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr	2009-07-08 09:25:51 UTC (rev 19659)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr	2009-07-08 09:37:46 UTC (rev 19660)
@@ -8,6 +8,16 @@
   Prod = prod(id, id, id)
   Sort = sort(id)
 
+decorators 
+
+  decorator context-free-args non-circular' graph-search(a) =
+    a
+
+  // TODO: Remove non-circular'; it's now in the standard library
+  decorator non-circular'(a) =
+    id.set-cached(a|EVAL_FAILED());
+    a
+
 attributes // Looking up productions
 
   def List lookup-all:
@@ -60,7 +70,7 @@
 
 attributes // Graph structure properties
 
-  def Type(Prod, Prod) sort-search-operation is-contained-by(|sort):
+  def Type(Prod, Prod) graph-search is-contained-by(|sort):
     prod(_, _, _) -> id
     where
       id.direct-container-prods;
@@ -68,7 +78,7 @@
       <+ one(id.is-contained-by(|sort))
       )
 
-  def Type(Prod, Prod) sort-search-operation is-container-of(|sort):
+  def Type(Prod, Prod) graph-search is-container-of(|sort):
     prod(_, _, _) -> id
     where
       id.direct-contained-sorts;
@@ -78,14 +88,3 @@
            one(id.is-container-of(|sort))
          )
       )
-
-decorators 
-
-  // TODO: Remove non-circular'; it's now in the standard library
-  decorator non-circular'(a) =
-    id.set-cached(a|EVAL_FAILED());
-    a
-
-  // TODO: Better name for this?? 'graph-search'?
-  decorator context-free-args non-circular' sort-search-operation(a) =
-    a

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-heuristics.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-heuristics.astr	2009-07-08 09:25:51 UTC (rev 19659)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-heuristics.astr	2009-07-08 09:37:46 UTC (rev 19660)
@@ -27,7 +27,7 @@
 
 attributes // Derived from is-scope-prod
   
-  def sort-search-operation is-container-of-scope-prod:
+  def graph-search is-container-of-scope-prod:
     prod(_, _, _) -> id
     where
       id.direct-contained-sorts;
@@ -36,7 +36,7 @@
       (  one(one(id.is-scope-prod))
       <+ one(one(id.is-container-of-scope-prod)))
   
-  def sort-search-operation is-contained-by-scope-prod:
+  def graph-search is-contained-by-scope-prod:
     prod(_, sort, _) -> id
     where
       id.direct-container-prods;

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-injections.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-injections.astr	2009-07-08 09:25:51 UTC (rev 19659)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-injections.astr	2009-07-08 09:37:46 UTC (rev 19660)
@@ -11,7 +11,7 @@
       id.direct-contained-sorts => [single];
       not(single.in-iter-pattern)
   
-  def sort-search-operation is-injection-to(|sort):
+  def graph-search is-injection-to(|sort):
     prod(_, _, _) -> id
     where
       id.direct-contained-sorts => [single];



From L.C.L.Kats at tudelft.nl  Wed Jul  8 12:03:58 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 08 Jul 2009 10:03:58 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19661 - LennartKats -
	sglr-recovery/trunk/bridge-definitions/trans
Message-ID: <200907081002.n68A2K8R032696@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-08 10:03:58 +0000 (Wed, 08 Jul 2009)
New Revision: 19661

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19661&view=rev

Modified:
   sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr

Log:
Demand that islands come from recursive productions.

Changes:

Modified: sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr	2009-07-08 09:37:46 UTC (rev 19660)
+++ sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr	2009-07-08 10:03:58 UTC (rev 19661)
@@ -38,6 +38,8 @@
       not(closinglit.eq(|openinglit))
     where
       not(id.is-illegal-island-literals(|openinglit, closinglit))
+    where
+      id.is-recursive-prod
     with
       lit-name1  := <conc-strings> ("start", lit);
       lit-name2  := <conc-strings> ("end", lit);
@@ -53,6 +55,11 @@
         x' := <newname> "island"
       end
 
+  def Test down is-recursive-prod:
+    prod(_, sort(self), _) -> id
+    where
+      id.is-container-of(|self)
+
 attributes
  
   /**



From rob.vermaas at gmail.com  Wed Jul  8 13:14:09 2009
From: rob.vermaas at gmail.com (Rob Vermaas)
Date: Wed, 8 Jul 2009 13:14:09 +0200
Subject: [Stratego-commits] test
Message-ID: <5a9e75b10907080414u3fcb1b5x51416930a4d22c56@mail.gmail.com>

test mail, please ignore

From mdjonge at xs4all.nl  Wed Jul  1 10:15:09 2009
From: mdjonge at xs4all.nl (Maartje de Jonge)
Date: Wed, 01 Jul 2009 08:15:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19608 - MaartjeDeJonge
	- sglr-recovery/trunk/Evaluation_Recovery
Message-ID: <200907010813.n618Def3004085@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-01 08:15:09 +0000 (Wed, 01 Jul 2009)
New Revision: 19608

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19608&view=rev

Modified:
   sglr-recovery/trunk/Evaluation_Recovery/Analyse.sh

Log:
feedback user

Changes:

Modified: sglr-recovery/trunk/Evaluation_Recovery/Analyse.sh
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Analyse.sh	2009-07-01 08:00:44 UTC (rev 19607)
+++ sglr-recovery/trunk/Evaluation_Recovery/Analyse.sh	2009-07-01 08:15:09 UTC (rev 19608)
@@ -12,7 +12,10 @@
 rm Analyse/sglr_others/*.*
 rm Analyse/jdt_others/*.*
 
+############################################################################################################
 
+#create diff (correct/ recovered) files for jdt and sglr
+
 compareJava(){	
 	compareLoc=$1
 	brancheLoc=$2
@@ -35,7 +38,7 @@
 
 ################################################################################################################
 
-#search empty java diff files
+#search empty diff files
 
 findExcellent(){ 
 	addition=$1
@@ -52,6 +55,10 @@
 findExcellent "sglr"
 findExcellent "jdt"
 
+################################################################################################################
+
+#compares jdt vs. java diffs by counting lines
+
 compareLines(){
 	for jdtFile in $diffDir/*.jdt.txt	
 	do 
@@ -72,3 +79,19 @@
 
 compareLines
 
+############################################################################################################
+
+#show statistics
+nrExcellentSglr=$(ls Analyse/sglr_excellent | wc -l)
+nrExcellentJdt=$(ls Analyse/jdt_excellent | wc -l)
+nrSGLRBetter=$(ls $sglrBetter | wc -l)
+nrJDTBetter=$(ls $jdtBetter | wc -l)
+nrJDTOther=$(ls Analyse/jdt_others | wc -l)
+nrSGLROther=$(ls Analyse/sglr_others | wc -l)
+sglrTotal=$((nrSGLROther + nrExcellentSglr))
+jdtTotal=$((nrJDTOther + nrExcellentJdt))
+
+echo "Excellent SGLR Recovery: $nrExcellentSglr ($sglrTotal)"
+echo "Excellent JDT Recovery: $nrExcellentJdt ($jdtTotal)"
+echo "SGLR better than JDT: "$nrSGLRBetter
+echo "JDT better than SGLR: "$nrJDTBetter



From mdjonge at xs4all.nl  Wed Jul  1 13:28:55 2009
From: mdjonge at xs4all.nl (Maartje de Jonge)
Date: Wed, 01 Jul 2009 11:28:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19612 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907011127.n61BRQoR006566@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-01 11:28:55 +0000 (Wed, 01 Jul 2009)
New Revision: 19612

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19612&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java

Log:
ambiguities in enforce accepting state

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java	2009-07-01 09:28:39 UTC (rev 19611)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java	2009-07-01 11:28:55 UTC (rev 19612)
@@ -679,6 +679,8 @@
     }
     
     private void handleAmbiguity(int numberOfRecoveries, IParseNode t, Link nl) throws IOException {        
+        if(enforcePrefixAccept)
+            return; //not interested in ambiguity!
         //if both branches contain no recover productions, create an Amb node.
         if(numberOfRecoveries == 0 && nl.recoverCount==0){
             if (!recoveryWorkAround) {
@@ -690,10 +692,7 @@
         if(!useIntegratedRecovery){
             recoverHandler.handleAmbiguity(numberOfRecoveries, t, nl);
             return;
-        }
-        // integrated recovery method
-        if(enforcePrefixAccept)
-            return; //not interested in ambiguity!
+        }              
         else{
             int nlOld = nl.recoverCount;
             recoverDisambiguator.handleAmbiguity(numberOfRecoveries, t, nl);



From mdjonge at xs4all.nl  Wed Jul  1 14:08:16 2009
From: mdjonge at xs4all.nl (Maartje de Jonge)
Date: Wed, 01 Jul 2009 12:08:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19613 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907011206.n61C6lnQ007012@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-01 12:08:16 +0000 (Wed, 01 Jul 2009)
New Revision: 19613

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19613&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoverDisambiguator.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java

Log:
no ambiguities during recovery

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoverDisambiguator.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoverDisambiguator.java	2009-07-01 11:28:55 UTC (rev 19612)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoverDisambiguator.java	2009-07-01 12:08:16 UTC (rev 19613)
@@ -11,33 +11,21 @@
     
     public void handleAmbiguity(int recoverCount_t, IParseNode t, Link nl){  
         testCount++;
+        /*
         if(nl.isRejected()){
-            setLabel(0, t, nl);
+            setLabel(recoverCount_t, t, nl);            
             return;
-        }  
-        
-        /*    
-        //A. Choose branch without recover productions
-        boolean hasRecoverFreeBranch = trySelectNoRecoveries(avoidCount_t, t, nl);
-        if(hasRecoverFreeBranch)
-            return;
-        /*
-        //B. Disambiguate by indentation
-        long start = System.currentTimeMillis();        
-        boolean hasIndentPreference = trySelectByIndentation(avoidCount_t, t, nl);
-        long durationIndentDisamb = System.currentTimeMillis()-start;
-        //Tools.debug("Disamb-time: "+ durationIndentDisamb);
-        if(hasIndentPreference){
-            return;
-        }*/
-        //C. choose branche with smallest number of avoids
-        trySelectOnRecoverCount(recoverCount_t, t, nl);
-        
+        } */ 
+        boolean hasCountDiff = trySelectOnRecoverCount(recoverCount_t, t, nl);
+        if(hasCountDiff==false)
+            trySelectByIndentation(recoverCount_t, t, nl);
     }
     
     private boolean trySelectOnRecoverCount(int recoverCount_t, IParseNode t, Link nl) {
-        if(recoverCount_t == nl.recoverCount)
+        if(recoverCount_t == nl.recoverCount){
+            setLabel(recoverCount_t, t, nl);
             return false;
+        }
         if(recoverCount_t < nl.recoverCount)
             setLabel(recoverCount_t, t, nl);
         return true;

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java	2009-07-01 11:28:55 UTC (rev 19612)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java	2009-07-01 12:08:16 UTC (rev 19613)
@@ -6,7 +6,7 @@
     private SGLR mySGLR;
     private IRecoveryParser recoveryParser;
     private StructureRecovery skipRecovery;
-    
+    private boolean active;
     private boolean useBridgeParser;
     
     public void setUseBridgeParser(boolean useBridgeParser) {
@@ -14,6 +14,7 @@
     }
 
     public RecoveryConnector(SGLR parser, IRecoveryParser recoveryParser){
+        active=false;
         mySGLR=parser;        
         skipRecovery = new StructureRecovery(mySGLR);
         if(recoveryParser!=null){
@@ -30,7 +31,7 @@
     }
     
     public void recover() throws IOException{
-        
+        active=true;
         boolean skipSucceeded = skipRecovery.selectErroneousFragment();
         mySGLR.acceptingStack=null;
         long startSkip=System.currentTimeMillis();
@@ -77,6 +78,7 @@
             else
                 Tools.debug("Enforcing Accepting Stack - Failed");
         }
+        active = false;
     }
     
     private boolean recoverySucceeded() {
@@ -167,4 +169,9 @@
         return indexFragment;
     }
 
+    public boolean isActive() {
+        // TODO Auto-generated method stub
+        return active;
+    }
+
 }

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java	2009-07-01 11:28:55 UTC (rev 19612)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java	2009-07-01 12:08:16 UTC (rev 19613)
@@ -298,7 +298,7 @@
                 history.keepTokenAndState(this);
                 doParseStep(); 
                 //recoverHandler.afterParseStep();
-                //  Tools.debug("SGLR: "+(char)currentToken);             
+                  Tools.debug("SGLR: "+(char)currentToken);             
             } while (currentToken != SGLR.EOF && activeStacks.size() > 0);
             
            // history.logBigReductionList();
@@ -683,7 +683,7 @@
             return; //not interested in ambiguity!
         //if both branches contain no recover productions, create an Amb node.
         if(numberOfRecoveries == 0 && nl.recoverCount==0){
-            if (!recoveryWorkAround) {
+            if (!recoveryWorkAround && !recoverIntegrator.isActive()) {
                 createAmbNode(t, nl);
             }
             return;
@@ -693,12 +693,12 @@
             recoverHandler.handleAmbiguity(numberOfRecoveries, t, nl);
             return;
         }              
-        else{
-            int nlOld = nl.recoverCount;
-            recoverDisambiguator.handleAmbiguity(numberOfRecoveries, t, nl);
-            if(nl.recoverCount < nlOld)
-                actorOnActiveStacksOverNewLink(nl);
-        }                
+        //integrated recovery, not prefix accept, recover branch
+        int nlOld = nl.recoverCount;
+        recoverDisambiguator.handleAmbiguity(numberOfRecoveries, t, nl);
+        if(nl.recoverCount < nlOld)
+            actorOnActiveStacksOverNewLink(nl);
+                        
     }
 
     void createAmbNode(IParseNode t, Link nl) {



From mdjonge at xs4all.nl  Wed Jul  1 17:57:39 2009
From: mdjonge at xs4all.nl (Maartje de Jonge)
Date: Wed, 01 Jul 2009 15:57:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19614 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907011556.n61FuAhR010915@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-01 15:57:39 +0000 (Wed, 01 Jul 2009)
New Revision: 19614

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19614&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java

Log:
null pointer fix

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java	2009-07-01 12:08:16 UTC (rev 19613)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java	2009-07-01 15:57:39 UTC (rev 19614)
@@ -298,7 +298,7 @@
                 history.keepTokenAndState(this);
                 doParseStep(); 
                 //recoverHandler.afterParseStep();
-                  Tools.debug("SGLR: "+(char)currentToken);             
+                //  Tools.debug("SGLR: "+(char)currentToken);             
             } while (currentToken != SGLR.EOF && activeStacks.size() > 0);
             
            // history.logBigReductionList();
@@ -683,9 +683,14 @@
             return; //not interested in ambiguity!
         //if both branches contain no recover productions, create an Amb node.
         if(numberOfRecoveries == 0 && nl.recoverCount==0){
-            if (!recoveryWorkAround && !recoverIntegrator.isActive()) {
+            /*
+            if (!recoveryWorkAround && (recoverIntegrator==null | !recoverIntegrator.isActive())) {
                 createAmbNode(t, nl);
-            }
+            }*/
+            if(recoverIntegrator==null)
+                createAmbNode(t, nl);
+            else if (!recoverIntegrator.isActive())
+                createAmbNode(t, nl);
             return;
         }
         // old recovery method



From mdjonge at xs4all.nl  Wed Jul  1 18:06:14 2009
From: mdjonge at xs4all.nl (Maartje de Jonge)
Date: Wed, 01 Jul 2009 16:06:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19615 - MaartjeDeJonge
	- sglr-recovery/trunk/Evaluation_Recovery/src
	spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907011604.n61G4i3t011139@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-01 16:06:14 +0000 (Wed, 01 Jul 2009)
New Revision: 19615

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19615&view=rev

Modified:
   sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java

Log:
remove recovery workaround

Changes:

Modified: sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java	2009-07-01 15:57:39 UTC (rev 19614)
+++ sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java	2009-07-01 16:06:14 UTC (rev 19615)
@@ -32,7 +32,8 @@
 	
 	
 	//private final static String PARSE_TABLE ="Language_Files/InsertOnly.tbl";
-	private final static String PARSE_TABLE ="Language_Files/SpecialTokenRecovery.tbl";
+	//private final static String PARSE_TABLE ="Language_Files/SpecialTokenRecovery.tbl";
+	private final static String PARSE_TABLE ="Language_Files/Recover.tbl";
 	//private final static String PARSE_TABLE ="Language_Files/InsertNoOpenDelete.tbl";
 	private final static String TOKEN_PARSE_TABLE ="Language_Files/Java-15-Tokenizer.tbl";	
 	
@@ -41,7 +42,7 @@
 	private IRecoveryParser recoveryParser;
 	private InputStream fis;
 	private boolean useBridgeParser=true;	
-	
+	//private boolean useBridgeParser=false;
 
 	private void createJDT_Tree(String fileName, String inputDir, String outputDir) throws IOException, InterpreterException {	
 		String strippedName=fileName.replace(".java", "");
@@ -93,10 +94,10 @@
 	}
 	
 	public void xxtestFile() throws IOException, InterpreterException, SGLRException{
-		String fileName="testFile.java";
-		//String fileName="testFile2.java";
-		createJDT_Tree(fileName, LOC_ERROR_INPUTFILES, LOC_ERROR_JDT_TREES);
-		createSGLRParsetree(fileName, LOC_ERROR_INPUTFILES, LOC_ERROR_SGLR_PARSETREES);				
+		//String fileName="testB5.java";
+		String fileName="doubleClosed_If.java";
+		//createJDT_Tree(fileName, LOC_ERROR_INPUTFILES, LOC_ERROR_JDT_TREES);
+		createSGLRParsetree(fileName, LOC_ERROR_DEV_FILES, LOC_ERROR_SGLR_PARSETREES);				
 	}
 	
 	/**
@@ -115,11 +116,11 @@
 	protected void setUp() throws Exception {		
 		ParseTableManager ptm = new ParseTableManager();
         sglr = new SGLR(ptm.getFactory(), ptm.loadFromFile(PARSE_TABLE));        
-        sglr.getDisambiguator().setFilterAny(false);  
-        sglr.setRecoveryTestingWorkAround(true);
+        sglr.getDisambiguator().setFilterAny(false);          
+        //sglr.setRecoveryTestingWorkAround(true);
         if (TOKEN_PARSE_TABLE != null && useBridgeParser) {
 			FileInputStream table = new FileInputStream(TOKEN_PARSE_TABLE);
-			tokenParser = new StandAloneSGLRI(null, table, null, /*USE_CSGLR*/true);
+			tokenParser = new StandAloneSGLRI(null, table, null, true);
 			tokenParser.setKeepAmbiguities(true);
 	        tokenParser.setRecoverHandler(new NoRecovery());
 	        recoveryParser = new JavaSGLRBridgeParser(tokenParser); // TODO: Properly select/load appropriate bridge parser

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java	2009-07-01 15:57:39 UTC (rev 19614)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java	2009-07-01 16:06:14 UTC (rev 19615)
@@ -128,8 +128,7 @@
     private int recoverTolerance;
     private ArrayDeque<Frame> recoveryActor;    
     private int maxNrOfRecoveries; //max number of recoveries allowed fragment during fine-grained recovery
-    private RecoverDisambiguator recoverDisambiguator;
-    private boolean recoveryWorkAround;
+    private RecoverDisambiguator recoverDisambiguator;    
     private int lengthAvoidCheck; //checks number of avoids over restricted fragment
 
     public void setMaxNrOfRecoveries(int maxNrOfRecoveries) {
@@ -138,11 +137,7 @@
 
     public void setLengthAvoidCheck(int lengthAvoidCheck) {
         this.lengthAvoidCheck = lengthAvoidCheck;
-    }
-
-    public void setRecoveryTestingWorkAround(boolean b) {
-        recoveryWorkAround = b;        
-    }
+    }   
     
     public void setFineGrainedMode(boolean b) {
         fineGrainemode=b; 
@@ -681,12 +676,8 @@
     private void handleAmbiguity(int numberOfRecoveries, IParseNode t, Link nl) throws IOException {        
         if(enforcePrefixAccept)
             return; //not interested in ambiguity!
-        //if both branches contain no recover productions, create an Amb node.
-        if(numberOfRecoveries == 0 && nl.recoverCount==0){
-            /*
-            if (!recoveryWorkAround && (recoverIntegrator==null | !recoverIntegrator.isActive())) {
-                createAmbNode(t, nl);
-            }*/
+        //if both branches contain no recover productions and not in recover mode, create an Amb node.
+        if(numberOfRecoveries == 0 && nl.recoverCount==0){            
             if(recoverIntegrator==null)
                 createAmbNode(t, nl);
             else if (!recoverIntegrator.isActive())



From mdjonge at xs4all.nl  Thu Jul  2 12:47:20 2009
From: mdjonge at xs4all.nl (Maartje de Jonge)
Date: Thu, 02 Jul 2009 10:47:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19618 - MaartjeDeJonge
	- sglr-recovery/trunk/Evaluation_Recovery/Language_Files
Message-ID: <200907021045.n62AjnMi023691@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-02 10:47:20 +0000 (Thu, 02 Jul 2009)
New Revision: 19618

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19618&view=rev

Added:
   sglr-recovery/trunk/Evaluation_Recovery/Language_Files/Recover.def
   sglr-recovery/trunk/Evaluation_Recovery/Language_Files/Recover.tbl

Log:
recover.tbl

Changes (first 1000 lines of the diffs):

Added: sglr-recovery/trunk/Evaluation_Recovery/Language_Files/Recover.def
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Language_Files/Recover.def	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Language_Files/Recover.def	2009-07-02 10:47:20 UTC (rev 19618)
@@ -0,0 +1,1747 @@
+definition
+module languages/java-15/expressions/Priorities
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/expressions/Main
+
+exports
+  context-free priorities
+      Expr "." "new" TypeArgs? Id TypeArgs? "(" {Expr ","}* ")" ClassBody? -> Expr
+    > {right:
+        Expr "++" -> Expr
+        Expr "--" -> Expr
+      } 
+
+  context-free priorities
+      {right:
+        Expr "++" -> Expr
+        Expr "--" -> Expr
+      }
+    > { "(" PrimType ")" Expr -> Expr    
+        "(" RefType  ")" Expr -> Expr
+      }
+
+  context-free priorities
+      "(" PrimType ")" Expr -> Expr
+    > {left:
+        Expr "*" Expr -> Expr
+        Expr "/" Expr -> Expr
+        Expr "%" Expr -> Expr
+      } 
+
+  context-free priorities
+      "(" RefType ")" Expr -> Expr 
+    > {
+        "++" Expr -> Expr
+        "--" Expr -> Expr
+        "+"  Expr -> Expr
+        "-"  Expr -> Expr
+      }
+
+  context-free priorities
+    {
+      Expr ArraySubscript -> ArrayAccess
+      Expr "." Id -> FieldAccess
+      Expr "." TypeArgs? Id -> MethodSpec
+    }
+  > {right:
+      Expr "++" -> Expr
+      Expr "--" -> Expr
+    }
+  > {
+      "++" Expr -> Expr
+      "--" Expr -> Expr
+      "+"  Expr -> Expr
+      "-"  Expr -> Expr
+      "~"  Expr -> Expr
+      "!"  Expr -> Expr
+    }
+  > {left:
+      Expr "*" Expr -> Expr
+      Expr "/" Expr -> Expr
+      Expr "%" Expr -> Expr
+    } 
+  > {left:
+      Expr "+" Expr -> Expr
+      Expr "-" Expr -> Expr
+    }
+  > {left:
+      Expr "<<"  Expr -> Expr
+      Expr ">>"  Expr -> Expr
+      Expr ">>>" Expr -> Expr
+    }
+  > {left:
+      Expr "instanceof" RefType -> Expr
+      Expr "<"   Expr -> Expr
+      Expr ">"   Expr -> Expr
+      Expr "<="  Expr -> Expr
+      Expr ">="  Expr -> Expr
+    }
+  > {left:
+      Expr "=="  Expr -> Expr
+      Expr "!="  Expr -> Expr
+    }
+  >   Expr "&"   Expr -> Expr
+  >   Expr "^"   Expr -> Expr
+  >   Expr "|"   Expr -> Expr
+  >   Expr "&&"  Expr -> Expr
+  >   Expr "||"  Expr -> Expr
+  >   Expr CondMid Expr -> Expr
+  > {right:
+      LHS "="    Expr -> Expr
+      LHS "*="   Expr -> Expr
+      LHS "/="   Expr -> Expr
+      LHS "%="   Expr -> Expr
+      LHS "+="   Expr -> Expr
+      LHS "-="   Expr -> Expr
+      LHS "<<="  Expr -> Expr
+      LHS ">>="  Expr -> Expr
+      LHS ">>>=" Expr -> Expr
+      LHS "&="   Expr -> Expr
+      LHS "^="   Expr -> Expr
+      LHS "|="   Expr -> Expr
+    }
+
+module languages/java-15/expressions/Restrictions
+exports
+  lexical restrictions
+    "+" -/- [\+]
+    "-" -/- [\-]
+    "/" -/- [\/]
+
+module languages/java-15/expressions/AssignmentOperators
+imports
+  languages/java-15/expressions/Main
+
+exports
+  sorts LHS
+  context-free syntax
+    LHS "="    Expr -> Expr {cons("Assign")}
+    LHS "*="   Expr -> Expr {cons("AssignMul")}
+    LHS "/="   Expr -> Expr {cons("AssignDiv")}
+    LHS "%="   Expr -> Expr {cons("AssignRemain")}
+    LHS "+="   Expr -> Expr {cons("AssignPlus")}
+    LHS "-="   Expr -> Expr {cons("AssignMinus")}
+    LHS "<<="  Expr -> Expr {cons("AssignLeftShift")}
+    LHS ">>="  Expr -> Expr {cons("AssignRightShift")}
+    LHS ">>>=" Expr -> Expr {cons("AssignURightShift")}
+    LHS "&="   Expr -> Expr {cons("AssignAnd")}
+    LHS "^="   Expr -> Expr {cons("AssignExcOr")}
+    LHS "|="   Expr -> Expr {cons("AssignOr")}
+
+    ExprName    -> LHS
+    FieldAccess -> LHS
+    ArrayAccess -> LHS
+
+
+
+
+module languages/java-15/expressions/BinaryOperators
+imports
+  languages/java-15/expressions/Main
+  languages/java-15/types/Main
+
+exports
+  sorts CondMid
+  context-free syntax
+    Expr "instanceof" RefType -> Expr {cons("InstanceOf")}
+
+    Expr "*"   Expr -> Expr  {left, cons("Mul")}
+    Expr "/"   Expr -> Expr  {left, cons("Div")}
+    Expr "%"   Expr -> Expr  {left, cons("Remain")}
+
+    Expr "+"   Expr -> Expr  {left, cons("Plus")}
+    Expr "-"   Expr -> Expr  {left, cons("Minus")}
+
+    Expr "<<"  Expr -> Expr  {left, cons("LeftShift")}
+    Expr ">>"  Expr -> Expr  {left, cons("RightShift")}
+    Expr ">>>" Expr -> Expr  {left, cons("URightShift")}
+
+    Expr "<"   Expr -> Expr  {left, cons("Lt")}
+    Expr ">"   Expr -> Expr  {left, cons("Gt")}
+    Expr "<="  Expr -> Expr  {left, cons("LtEq")}
+    Expr ">="  Expr -> Expr  {left, cons("GtEq")}
+    Expr "=="  Expr -> Expr  {left, cons("Eq")}
+    Expr "!="  Expr -> Expr  {left, cons("NotEq")}
+
+    Expr "&&"  Expr -> Expr  {left, cons("LazyAnd")}
+    Expr "||"  Expr -> Expr  {left, cons("LazyOr")}
+
+    Expr "&" Expr -> Expr {left, cons("And")}
+    Expr "^" Expr -> Expr {left, cons("ExcOr")}
+    Expr "|" Expr -> Expr {left, cons("Or")}
+
+    %% todo JFR-30
+    Expr CondMid Expr -> Expr {right, cons("Cond")}
+    "?" Expr ":" -> CondMid {bracket}
+
+module languages/java-15/expressions/UnaryOperators
+imports 
+  languages/java-15/expressions/Main
+exports
+  context-free syntax
+    "+" Expr -> Expr {cons("Plus")}
+    "-" Expr -> Expr {cons("Minus")}
+
+    "++" Expr -> Expr {cons("PreIncr")}
+    "--" Expr -> Expr {cons("PreDecr")}
+
+    "~" Expr -> Expr {cons("Complement")}
+    "!" Expr -> Expr {cons("Not")}
+
+    "(" PrimType ")" Expr -> Expr {cons("CastPrim")}
+    "(" RefType  ")" Expr -> Expr {cons("CastRef")}
+
+module languages/java-15/expressions/Postfix
+imports 
+  languages/java-15/expressions/Main
+
+exports
+  context-free syntax
+    ExprName  -> Expr
+    Expr "++" -> Expr {cons("PostIncr")}
+    Expr "--" -> Expr {cons("PostDecr")}
+
+module languages/java-15/expressions/MethodInvocation
+imports
+  languages/java-15/expressions/Main
+
+exports
+  sorts MethodSpec
+  context-free syntax
+    MethodSpec "(" {Expr ","}* ")" -> Expr {cons("Invoke")}
+
+                               MethodName -> MethodSpec {cons("Method")}
+                    Expr "." TypeArgs? Id -> MethodSpec {cons("Method")}
+                 "super" "." TypeArgs? Id -> MethodSpec {cons("SuperMethod")}
+    TypeName "." "super" "." TypeArgs? Id -> MethodSpec {cons("QSuperMethod")}
+                 AmbName "." TypeArgs  Id -> MethodSpec {cons("GenericMethod")}
+
+  %% This priority forbids a Expr "." MethodSpec if the expression is a plain ExprName.
+  %% This solves an ambiguity with the MethodName and AmbName . TypeArgs MethodSpecs.
+  %% foo.bar.fred() results in a MethodName MethodSpec.
+  %% (foo.bar).fred() results in the Expr. MethodSpec
+  %% foo.bar.<T>fred() results in a GenericMethod
+  context-free priorities
+      Expr "." TypeArgs? Id -> MethodSpec
+    > ExprName  -> Expr
+
+
+
+
+module languages/java-15/expressions/ArrayAccess
+imports
+  languages/java-15/expressions/Main
+exports
+  sorts
+    ArrayAccess
+    ArraySubscript
+
+  context-free syntax
+    ArrayAccess -> Expr
+
+    %% todo: JFR-29
+    Expr ArraySubscript -> ArrayAccess {cons("ArrayAccess")}
+    "[" Expr "]" -> ArraySubscript {bracket}
+
+    ArrayCreationExpr ArraySubscript -> ArrayAccess {reject}
+
+module languages/java-15/expressions/FieldAccess
+imports
+  languages/java-15/expressions/Main
+
+exports
+  sorts FieldAccess
+  context-free syntax
+    FieldAccess -> Expr
+
+  context-free syntax
+
+                    Expr "." Id -> FieldAccess {cons("Field")}
+                ExprName "." Id -> FieldAccess {reject}
+                 "super" "." Id -> FieldAccess {cons("SuperField")}
+    TypeName "." "super" "." Id -> FieldAccess {cons("QSuperField")}
+
+module languages/java-15/expressions/ArrayCreation
+imports
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    ArrayCreationExpr
+    ArrayBaseType
+    Dim
+    DimExpr
+
+  context-free syntax
+    ArrayCreationExpr     -> Expr
+
+    "new" ArrayBaseType DimExpr+ Dim*  -> ArrayCreationExpr {cons("NewArray")}
+    "new" ArrayBaseType Dim+ ArrayInit -> ArrayCreationExpr {cons("NewArray")}
+
+    PrimType -> ArrayBaseType
+    TypeName -> ArrayBaseType
+    TypeName "<" "?" ">" -> ArrayBaseType {cons("UnboundWld")}
+
+    "[" Expr "]" -> DimExpr {cons("Dim")}
+    "[" "]"      -> Dim     {cons("Dim")}
+
+module languages/java-15/expressions/ClassInstanceCreation
+imports
+  languages/java-15/expressions/Main
+  languages/java-15/classes/ClassDeclarations
+
+exports
+  context-free syntax
+
+             "new" TypeArgs? ClassOrInterfaceType "(" {Expr ","}* ")" ClassBody? -> Expr {cons("NewInstance")}
+    Expr "." "new" TypeArgs? Id         TypeArgs? "(" {Expr ","}* ")" ClassBody? -> Expr {cons("QNewInstance")}
+
+module languages/java-15/expressions/Primary
+imports
+  languages/java-15/lexical/literals/Main
+  languages/java-15/names/Main
+  languages/java-15/expressions/Main
+
+exports
+  %%%
+   %% Section 15.8.1: Lexical Literals
+   %%%
+  sorts Literal
+  context-free syntax
+    Literal -> Expr {cons("Lit")}
+
+    IntLiteral    -> Literal
+    FloatLiteral  -> Literal
+    BoolLiteral   -> Literal 
+    CharLiteral   -> Literal
+    StringLiteral -> Literal
+    NullLiteral   -> Literal
+
+  %%%
+   %% Section 15.8.2: Class Literals
+   %%%
+  sorts ClassLiteral
+  context-free syntax
+    ClassLiteral -> Literal
+    Type   "." "class" -> ClassLiteral {cons("Class")}
+    "void" "." "class" -> ClassLiteral {cons("VoidClass")}
+
+  %%%
+   %% Section 15.8.3/4: (Qualified this)
+   %%%
+  context-free syntax
+                 "this" -> Expr {cons("This")}
+    TypeName "." "this" -> Expr {cons("QThis")}
+
+  %%%
+   %% Section 15.8.5: Parenthesized Expression
+   %%%
+  context-free syntax
+    "(" Expr ")"          -> Expr {bracket}
+
+module languages/java-15/expressions/Main
+imports
+  languages/java-15/expressions/Primary
+  languages/java-15/expressions/ClassInstanceCreation
+  languages/java-15/expressions/ArrayCreation
+  languages/java-15/expressions/FieldAccess
+  languages/java-15/expressions/ArrayAccess
+  languages/java-15/expressions/MethodInvocation
+  languages/java-15/expressions/Postfix
+  languages/java-15/expressions/UnaryOperators
+  languages/java-15/expressions/BinaryOperators
+  languages/java-15/expressions/AssignmentOperators
+  languages/java-15/expressions/Restrictions
+  languages/java-15/expressions/Priorities
+
+exports
+  sorts
+    Expr
+
+module languages/java-15/statements/Main
+imports
+  languages/java-15/statements/Blocks
+  languages/java-15/statements/LocalVariableDeclarations
+  languages/java-15/statements/Statements
+
+
+
+
+module languages/java-15/arrays/Main
+imports
+  languages/java-15/arrays/ArrayInitializers
+
+
+
+
+module languages/java-15/interfaces/Main
+imports
+  languages/java-15/interfaces/InterfaceDeclarations
+  languages/java-15/interfaces/AbstractMethodDeclarations
+  languages/java-15/interfaces/AnnotationTypes
+  languages/java-15/interfaces/Annotations
+
+
+
+
+module languages/java-15/classes/Main
+imports
+  languages/java-15/classes/ClassDeclarations
+  languages/java-15/classes/EnumDeclarations
+
+
+
+
+module languages/java-15/packages/PackageDeclarations
+imports
+  languages/java-15/names/Main
+  languages/java-15/interfaces/Annotations
+
+exports
+  sorts
+    PackageDec
+
+  context-free syntax
+    Anno* "package" PackageName ";" -> PackageDec {cons("PackageDec")}
+
+module languages/java-15/packages/ImportDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/names/Main
+
+exports
+  sorts
+    ImportDec
+
+  context-free syntax
+    "import" TypeName                  ";"  -> ImportDec {cons("TypeImportDec")}
+    "import" PackageName       "." "*" ";"  -> ImportDec {cons("TypeImportOnDemandDec")}
+    "import" "static" TypeName "." Id  ";"  -> ImportDec {cons("StaticImportDec")}
+    "import" "static" TypeName "." "*" ";"  -> ImportDec {cons("StaticImportOnDemandDec")}
+
+module languages/java-15/interfaces/AnnotationTypes
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/classes/ClassDeclarations
+  languages/java-15/classes/EnumDeclarations
+  languages/java-15/interfaces/InterfaceDeclarations
+  languages/java-15/interfaces/AbstractMethodDeclarations
+  languages/java-15/interfaces/ConstantDeclarations
+  languages/java-15/interfaces/Annotations
+
+exports
+  sorts
+    AnnoDec
+    AnnoDecHead
+
+  context-free syntax
+    AnnoDecHead "{" AnnoElemDec* "}" -> AnnoDec {cons("AnnoDec")}
+    (Anno | InterfaceMod)* "@" "interface" Id -> AnnoDecHead {cons("AnnoDecHead")}
+
+  sorts
+    AnnoElemDec
+    DefaultVal
+
+  context-free syntax
+    AbstractMethodMod* Type Id "(" ")" DefaultVal? ";" -> AnnoElemDec {cons("AnnoMethodDec")}
+
+    ConstantDec  -> AnnoElemDec
+    ClassDec     -> AnnoElemDec
+    InterfaceDec -> AnnoElemDec
+    EnumDec      -> AnnoElemDec
+    AnnoDec      -> AnnoElemDec
+    ";"          -> AnnoElemDec {cons("Semicolon")}
+
+    "default" ElemVal -> DefaultVal {cons("DefaultVal")}
+
+module languages/java-15/interfaces/AbstractMethodDeclarations
+imports
+  languages/java-15/lexical/Modifiers
+  languages/java-15/names/Main
+  languages/java-15/types/Main
+  languages/java-15/classes/MethodDeclarations
+
+exports
+  sorts
+    AbstractMethodDec
+    AbstractMethodMod
+
+  context-free syntax
+    (Anno | AbstractMethodMod)* TypeParams? ResultType
+      Id "(" {FormalParam ","}* ")" Throws? ";" -> AbstractMethodDec {cons("AbstractMethodDec")}
+
+    (Anno | AbstractMethodMod)* TypeParams? ResultType
+      Id "(" {FormalParam ","}* ")" Dim+ Throws? ";" -> AbstractMethodDec {cons("DeprAbstractMethodDec")}
+
+    Public   -> AbstractMethodMod
+    Abstract -> AbstractMethodMod
+
+
+
+
+
+module languages/java-15/interfaces/ConstantDeclarations
+imports
+  languages/java-15/lexical/Modifiers
+  languages/java-15/types/Main
+  languages/java-15/classes/MethodDeclarations
+  languages/java-15/interfaces/Annotations
+
+exports
+  sorts
+    ConstantDec
+    ConstantMod
+
+  context-free syntax
+    (Anno | ConstantMod)* Type {VarDec ","}+ ";" -> ConstantDec {cons("ConstantDec")}
+
+    Public -> ConstantMod
+    Static -> ConstantMod
+    Final  -> ConstantMod
+
+
+
+
+module languages/java-15/interfaces/InterfaceDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/names/Main
+  languages/java-15/types/Main
+  languages/java-15/classes/ClassDeclarations
+  languages/java-15/classes/MethodDeclarations
+  languages/java-15/interfaces/ConstantDeclarations
+  languages/java-15/interfaces/AbstractMethodDeclarations
+  languages/java-15/interfaces/AnnotationTypes
+  languages/java-15/interfaces/Annotations
+
+exports
+  sorts
+    InterfaceDec
+    InterfaceDecHead
+    ExtendsInterfaces
+    InterfaceMemberDec
+    InterfaceMod
+
+  context-free syntax
+    AnnoDec -> InterfaceDec
+
+    InterfaceDecHead "{" InterfaceMemberDec* "}" -> InterfaceDec {cons("InterfaceDec")}
+
+    (Anno | InterfaceMod)* "interface" Id TypeParams? ExtendsInterfaces? -> InterfaceDecHead {cons("InterfaceDecHead")}
+    "extends" {InterfaceType ","}+ -> ExtendsInterfaces {cons("ExtendsInterfaces")}
+
+  context-free syntax
+    ConstantDec       -> InterfaceMemberDec
+    AbstractMethodDec -> InterfaceMemberDec
+    ClassDec          -> InterfaceMemberDec
+    InterfaceDec      -> InterfaceMemberDec
+    ";"               -> InterfaceMemberDec {cons("Semicolon")}
+
+  context-free syntax
+    Public         -> InterfaceMod
+    Protected      -> InterfaceMod
+    Private        -> InterfaceMod
+    Abstract       -> InterfaceMod
+    Static         -> InterfaceMod
+    StrictFP       -> InterfaceMod
+
+
+
+
+module languages/java-15/classes/EnumDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/classes/ClassDeclarations
+
+exports
+  sorts
+    EnumDec
+    EnumDecHead
+    EnumBody
+    EnumConst
+    EnumConstArgs
+    EnumBodyDecs
+
+  context-free syntax
+    EnumDecHead EnumBody -> EnumDec {cons("EnumDec")}
+
+    (Anno | ClassMod)* "enum" Id Interfaces? -> EnumDecHead {cons("EnumDecHead")}
+
+    "{" {EnumConst ","}*     EnumBodyDecs? "}" -> EnumBody {cons("EnumBody")}
+    "{" {EnumConst ","}* "," EnumBodyDecs? "}" -> EnumBody {cons("EnumBody")}
+
+    Id EnumConstArgs? ClassBody?  -> EnumConst {cons("EnumConst")}
+    "(" {Expr ","}* ")"  -> EnumConstArgs {bracket}
+
+    ";" ClassBodyDec* -> EnumBodyDecs {cons("EnumBodyDecs")}
+
+module languages/java-15/classes/ConstructorDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/interfaces/Annotations
+  languages/java-15/statements/Main
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    ConstrDec
+    ConstrBody
+    ConstrHead
+    ConstrInv
+
+  context-free syntax
+    ConstrHead ConstrBody ->  ConstrDec {cons("ConstrDec")}
+    (Anno | ConstrMod)* TypeParams? Id "(" {FormalParam ","}* ")" Throws? -> ConstrHead {cons("ConstrDecHead")}
+
+
+    "{" ConstrInv? BlockStm* "}" -> ConstrBody {cons("ConstrBody")}
+
+             TypeArgs? "this"  "(" {Expr ","}* ")" ";" -> ConstrInv {cons("AltConstrInv")}
+             TypeArgs? "super" "(" {Expr ","}* ")" ";" -> ConstrInv {cons("SuperConstrInv")}
+    Expr "." TypeArgs? "super" "(" {Expr ","}* ")" ";" -> ConstrInv {cons("QSuperConstrInv")}
+
+  sorts ConstrMod
+  context-free syntax  
+    Public    -> ConstrMod
+    Protected -> ConstrMod
+    Private   -> ConstrMod
+
+
+
+
+module languages/java-15/classes/StaticInitializers
+imports
+  languages/java-15/statements/Blocks
+
+exports
+  sorts
+    StaticInit
+
+  context-free syntax
+    "static" Block -> StaticInit   {cons("StaticInit")}
+
+module languages/java-15/classes/InstanceInitializers
+imports
+  languages/java-15/statements/Blocks
+
+exports
+  sorts
+    InstanceInit
+
+  context-free syntax
+    Block -> InstanceInit {cons("InstanceInit")}
+
+module languages/java-15/statements/Statements
+imports
+  languages/java-15/statements/LocalVariableDeclarations
+  languages/java-15/statements/Blocks
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    Stm ExprStm
+
+  context-free syntax
+    Block      -> Stm
+
+  %%%
+   %% Section 14.6: The Empty Statement
+   %%%
+  context-free syntax
+    ";"        -> Stm {cons("Empty")}
+
+  %%%
+   %% Section 14.7: Labeled Statements
+   %%%
+  context-free syntax
+    Id ":" Stm -> Stm {cons("Labeled")}
+
+  %%%
+   %% Section 14.8: Expressions Statements
+   %%%
+  context-free syntax
+    Expr ";"   -> ExprStm {cons("ExprStm")}
+    ExprStm    -> Stm
+
+  %%%
+   %% Section 14.9: The If Statement
+   %%%
+  context-free syntax
+    "if" "(" Expr ")" Stm             -> Stm {prefer, cons("If")}
+    "if" "(" Expr ")" Stm  "else" Stm -> Stm {cons("If")}
+
+  %%%
+   %% Section 14.10: The Assert Statement
+   %%%
+  context-free syntax
+    "assert" Expr          ";" -> Stm  {cons("AssertStm")}
+    "assert" Expr ":" Expr ";" -> Stm  {cons("AssertStm")}
+
+
+  %%%
+   %% Section 14.11: The Switch Statement
+   %%%
+  sorts SwitchBlock SwitchGroup SwitchLabel
+  context-free syntax
+    "switch" "(" Expr ")" SwitchBlock -> Stm {cons("Switch")}
+    "{" SwitchGroup* SwitchLabel* "}" -> SwitchBlock {cons("SwitchBlock")}
+    SwitchLabel+ BlockStm+ -> SwitchGroup  {cons("SwitchGroup")}
+
+    "case" Expr ":" -> SwitchLabel {cons("Case")}
+    "default"   ":" -> SwitchLabel {cons("Default")}
+
+  %%%
+   %% Section 14.12: The While Statement
+   %%%
+  context-free syntax
+    "while" "(" Expr ")" Stm -> Stm {cons("While")}
+
+  %%%
+   %% Section 14.13: The Do Statement
+   %%%
+  context-free syntax
+  "do" Stm "while" "(" Expr ")" ";" -> Stm {cons("DoWhile")}
+
+
+  %%%
+   %% Section 14.14: The For Statement
+   %%%
+  context-free syntax
+    "for" "(" LocalVarDec ";" Expr? ";" {Expr ","}* ")" Stm -> Stm {cons("For")}
+    "for" "(" {Expr ","}* ";" Expr? ";" {Expr ","}* ")" Stm -> Stm {cons("For")}
+
+    "for" "(" FormalParam ":" Expr ")" Stm -> Stm {cons("ForEach")}
+
+  %%%
+   %% Section 14.15: The Break Statement
+   %%%
+  context-free syntax
+    "break"    Id? ";"   -> Stm {cons("Break")}
+
+  %%%
+   %% Section 14.16: The Continue Statement
+   %%%
+  context-free syntax
+    "continue" Id? ";"   -> Stm {cons("Continue")}
+
+  %%%
+   %% Section 14.17: The Return Statement
+   %%%
+  context-free syntax
+    "return"   Expr? ";" -> Stm {cons("Return")}
+
+  %%%
+   %% Section 14.18: The Throw Statement
+   %%%
+  context-free syntax
+    "throw"    Expr  ";" -> Stm {cons("Throw")}
+
+  %%%
+   %% Section 14.19: The Synchronized Statement
+   %%%
+  context-free syntax
+    "synchronized" "(" Expr ")" Block -> Stm {cons("Synchronized")}
+
+  %%%
+   %% Section 14.20: The Try Statement
+   %%%
+  sorts CatchClause
+  context-free syntax
+    "try" Block CatchClause+ -> Stm {cons("Try")}
+    "try" Block CatchClause* "finally" Block -> Stm {cons("Try")}
+    "catch" "(" FormalParam ")" Block -> CatchClause {cons("Catch")}
+
+module languages/java-15/statements/LocalVariableDeclarations
+imports
+  languages/java-15/classes/MethodDeclarations
+  languages/java-15/classes/FieldDeclarations
+
+exports
+  sorts
+    LocalVarDecStm
+    LocalVarDec
+
+  context-free syntax
+    LocalVarDec ";" -> LocalVarDecStm {cons("LocalVarDecStm")}
+    (Anno | VarMod)* Type {VarDec ","}+ -> LocalVarDec {cons("LocalVarDec")}
+    
+    %% Disambiguate List<T> i;
+    Expr "<" Expr ">" Expr ";" -> ExprStm {reject}
+
+module languages/java-15/statements/Blocks
+imports
+  languages/java-15/classes/ClassDeclarations
+  languages/java-15/statements/LocalVariableDeclarations
+  languages/java-15/statements/Statements
+
+exports
+  sorts
+    BlockStm
+    Block
+
+  context-free syntax
+    "{" BlockStm* "}" -> Block {cons("Block")}
+
+    LocalVarDecStm  -> BlockStm 
+    ClassDec        -> BlockStm {cons("ClassDecStm")}
+    Stm             -> BlockStm
+
+
+
+
+module languages/java-15/classes/MethodDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/types/Main
+  languages/java-15/classes/FieldDeclarations
+  languages/java-15/interfaces/Annotations
+  languages/java-15/statements/Blocks
+
+exports
+  sorts
+    MethodDec
+    MethodDecHead
+    ResultType
+
+  context-free syntax
+    MethodDecHead MethodBody -> MethodDec {cons("MethodDec")}
+
+    (Anno | MethodMod)* TypeParams? ResultType Id "(" {FormalParam ","}* ")" Throws?      -> MethodDecHead {cons("MethodDecHead")}
+    (Anno | MethodMod)* TypeParams? ResultType Id "(" {FormalParam ","}* ")" Dim+ Throws? -> MethodDecHead {cons("DeprMethodDecHead")}
+
+    Type   -> ResultType
+    "void" -> ResultType {cons("Void")}
+
+  sorts FormalParam
+  context-free syntax
+    (Anno | VarMod)* Type       VarDecId -> FormalParam {cons("Param")}
+    (Anno | VarMod)* Type "..." VarDecId -> FormalParam {cons("VarArityParam")}
+
+  sorts VarMod
+  context-free syntax
+    Final -> VarMod
+
+  sorts MethodMod
+  context-free syntax
+    Public         -> MethodMod
+    Protected      -> MethodMod
+    Private        -> MethodMod
+
+    Abstract       -> MethodMod
+    Static         -> MethodMod
+    Final          -> MethodMod
+    Synchronized   -> MethodMod
+    Native         -> MethodMod
+    StrictFP       -> MethodMod
+
+  %%%
+   %% Section 8.4.6: Method Throws
+   %%%
+  sorts
+    Throws
+    ExceptionType
+
+  context-free syntax
+    "throws" {ExceptionType ","}+ -> Throws {cons("ThrowsDec")}
+    ClassType -> ExceptionType
+    %% TypeVar -> ExceptionType
+
+  %%%
+   %% Section 8.4.7: Method Body
+   %%% 
+  sorts MethodBody
+  context-free syntax
+    Block -> MethodBody
+    ";"   -> MethodBody {cons("NoMethodBody")}
+
+module languages/java-15/arrays/ArrayInitializers
+imports
+  languages/java-15/classes/FieldDeclarations
+
+exports
+  sorts ArrayInit
+  context-free syntax
+    "{" {VarInit ","}*     "}" -> ArrayInit {cons("ArrayInit")}
+    "{" {VarInit ","}* "," "}" -> ArrayInit {cons("ArrayInit")}
+
+module languages/java-15/interfaces/Annotations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/names/Main
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    Anno
+    ElemVal
+    ElemValPair
+
+  context-free syntax
+    "@" TypeName "(" {ElemValPair ","}* ")" -> Anno {cons("Anno")}
+    "@" TypeName "(" ElemVal ")"            -> Anno {cons("SingleElemAnno")}
+    "@" TypeName                            -> Anno {cons("MarkerAnno")}
+
+  context-free syntax  
+    Id "=" ElemVal -> ElemValPair {cons("ElemValPair")}
+
+    Expr -> ElemVal
+    Anno -> ElemVal
+
+    "{" {ElemVal ","}*     "}" -> ElemVal {cons("ElemValArrayInit")}
+    "{" {ElemVal ","}* "," "}" -> ElemVal {cons("ElemValArrayInit")}
+
+    %% Assignments are not allowed as element values.
+    LHS "=" Expr -> ElemVal {reject}
+
+module languages/java-15/classes/FieldDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/types/Main
+  languages/java-15/interfaces/Annotations
+  languages/java-15/arrays/ArrayInitializers
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    FieldDec
+    VarDec
+    VarDecId
+    Dim
+    VarInit
+
+  context-free syntax
+    (Anno | FieldMod)* Type { VarDec ","}+ ";" -> FieldDec {cons("FieldDec")}
+
+    VarDecId             -> VarDec {cons("VarDec")}
+    VarDecId "=" VarInit -> VarDec {cons("VarDec")}
+
+    Id      -> VarDecId
+    Id Dim+ -> VarDecId {cons("ArrayVarDecId")}
+
+    "[" "]" -> Dim {cons("Dim")}
+
+    Expr      -> VarInit
+    ArrayInit -> VarInit
+
+  sorts FieldMod
+  context-free syntax
+    Public    -> FieldMod
+    Protected -> FieldMod
+    Private   -> FieldMod
+
+    Static    -> FieldMod
+    Final     -> FieldMod
+    Transient -> FieldMod
+    Volatile  -> FieldMod
+
+
+
+
+module languages/java-15/classes/ClassDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/types/ReferenceTypes
+  languages/java-15/types/TypeVariables
+  languages/java-15/classes/FieldDeclarations
+  languages/java-15/classes/MethodDeclarations
+  languages/java-15/classes/InstanceInitializers
+  languages/java-15/classes/StaticInitializers
+  languages/java-15/classes/ConstructorDeclarations
+  languages/java-15/classes/EnumDeclarations
+  languages/java-15/interfaces/InterfaceDeclarations
+
+exports
+  sorts
+    ClassDec
+    ClassBody
+    ClassDecHead
+
+  context-free syntax
+    EnumDec -> ClassDec
+
+    ClassDecHead ClassBody -> ClassDec {cons("ClassDec")}
+    "{" ClassBodyDec* "}" -> ClassBody {cons("ClassBody")}
+
+    (Anno | ClassMod)* "class" Id  TypeParams? Super? Interfaces? -> ClassDecHead {cons("ClassDecHead")}
+
+  %% 8.1.1: Class Modifiers
+  sorts ClassMod
+  context-free syntax
+    Abstract  -> ClassMod
+    Public    -> ClassMod
+    Protected -> ClassMod
+    Private   -> ClassMod
+    Static    -> ClassMod
+    Final     -> ClassMod
+    StrictFP  -> ClassMod
+
+  %% 8.1.4: Superclasses and Subclasses
+  sorts Super
+  context-free syntax
+
+    "extends" ClassType -> Super {cons("SuperDec")}
+
+  %% 8.1.5: Superinterfaces
+  sorts Interfaces
+  context-free syntax
+    "implements" {InterfaceType ","}+ -> Interfaces {cons("ImplementsDec")}
+
+

(763 diff lines omitted)


From mdjonge at xs4all.nl  Thu Jul  2 13:50:58 2009
From: mdjonge at xs4all.nl (Maartje de Jonge)
Date: Thu, 02 Jul 2009 11:50:58 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19621 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907021149.n62BnRc4024537@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-02 11:50:57 +0000 (Thu, 02 Jul 2009)
New Revision: 19621

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19621&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java

Log:
fine-tuning skipSibling

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java	2009-07-02 11:47:07 UTC (rev 19620)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java	2009-07-02 11:50:57 UTC (rev 19621)
@@ -154,11 +154,12 @@
      * Skips children around the error
      */
     private void skipChilds() throws IOException { 
+        getHistory().moveToPreviousConstruct();
         boolean lowIndent = hasLowIndentation();
-        int forward=2;
+        int forward=0;
         boolean movedToPrev=true;        
         do {            
-            movedToPrev=!getHistory().constructAfterEmptyLine() && getHistory().moveToPreviousConstruct();
+            movedToPrev=getHistory().moveToPreviousConstruct(); //&& !getHistory().constructAfterEmptyLine() 
             if(movedToPrev)
                 forward+=2;            
             setSkipPoint();



From mdjonge at xs4all.nl  Thu Jul  2 14:00:48 2009
From: mdjonge at xs4all.nl (Maartje de Jonge)
Date: Thu, 02 Jul 2009 12:00:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19622 - MaartjeDeJonge -
	sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files
Message-ID: <200907021159.n62BxIhh024628@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-02 12:00:48 +0000 (Thu, 02 Jul 2009)
New Revision: 19622

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19622&view=rev

Modified:
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA1.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA2.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA3.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA4.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testB1.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testB2.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testB5.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testC1.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testC2.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testC3.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testD1.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testD2.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testD3.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testD4.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testE3.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testF1.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testF2.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testF3.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testG1.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testJ1.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testJ2.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testL2.java

Log:
moved //} comments so that the CG is not hindered 

Changes:

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA1.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA1.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA1.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -5,12 +5,7 @@
 			for (int i; i < 10; i++) {
 				if (true) {
 					if (true) {
-						int a;
-						/*
-					}
-				}
-			}
-			*/
+						int a;	/* 	} 	} 	} 	*/
 		}
 	}
 }

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA2.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA2.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -7,10 +7,4 @@
 					if (true) {
 						int a;
 					}
-				}
-				/*
-			}
-		}
-	}
-}
-*/
+				} 	/* 	}	} 	} }*/

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA3.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA3.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA3.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -8,7 +8,6 @@
 						int a;
 					}
 				}
-			}
-		//}
+			}	//}
 	}
 }

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA4.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA4.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA4.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -6,10 +6,7 @@
 				if (true) {
 					if (true) {
 						int a;
-					}
-			/*	}
-			}
-			*/
+					} 	/*	} 	} 	*/
 		}
 	}
 }

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testB1.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testB1.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testB1.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -1,8 +1,7 @@
 /* Bumpy road - Incomplete */
 class C {
 	void m() {
-		int a;
-	//}
+		int a;	//}
 	void n() {
 		int b;
 	}

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testB2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testB2.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testB2.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -10,6 +10,4 @@
 		int c;
 	}
 	void p() {
-		int d;
-/*	}
-}*/
+		int d; /*	} }*/

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testB5.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testB5.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testB5.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -9,6 +9,5 @@
 	void o() {
 		int c;
 	}
-	void p() { int d;
-	/*}*/
+	void p() { int d; 	/*}*/
 }

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testC1.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testC1.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testC1.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -22,11 +22,7 @@
 				for (int i=0;i<10;i++) {
 					int g;
 					int h;
-					if (true) {
-					/*	int j;
-					}
-				}
-			}*/
+					if (true) {	/*	int j;	} }	}*/
 		}
 		void n() {
 			int k;

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testC2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testC2.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testC2.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -2,8 +2,7 @@
 class C {
 	int a;
 	void C() {
-		int b;
-	//}
+		int b; 	//}
 	void m() {
 		if (true) {
 			if (true) {

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testC3.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testC3.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testC3.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -33,9 +33,8 @@
 		}
 	}
 	int n() {
-		return 0;
-/*	}
-} */
+		return 0; /*	}} */
+		
 class E {
 	void m() {
 		int a;

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testD1.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testD1.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testD1.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -12,8 +12,7 @@
 			int b;
 			if (true) {
 				int c;
-				int d;
-			//}
+				int d; //}
 		}
 		int c;
 	}

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testD2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testD2.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testD2.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -20,8 +20,7 @@
 	void o() {
 		int a;
 		if (true) {
-			int b;
-		//}
+			int b;		//}
 		if (true) {
 			int c;
 		}

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testD3.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testD3.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testD3.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -3,8 +3,7 @@
 	void m() {
 		int a;
 		if (true) {
-			int b;
-	//	}
+			int b;	//	}
 	}
 	void n() {
 		int a;

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testD4.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testD4.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testD4.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -23,8 +23,7 @@
 			int b;
 		}
 		if (true) {
-			int c;
-	//	}
+			int c;	//	}
 		int d;
 	}
 }

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testE3.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testE3.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testE3.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -8,8 +8,7 @@
 	void n() {
 		for (int i=0;i<10;i++) {
 			for (int j=0;j<10;j++) {
-				int a;
-			//}
+				int a; //}
 			int b;
 		}
 		int c;

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testF1.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testF1.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testF1.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -10,8 +10,7 @@
 		int a;
 		if (true) {
 			int a;
-			int b;
-		//}
+			int b; 	//}
 		int b;
 		if (true) {
 			int a;

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testF2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testF2.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testF2.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -15,8 +15,7 @@
 		int b;
 		if (true) {
 			int a;
-		}
-	//}
+		}	//}
 	int d;
 	void n() {
 		int a;

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testF3.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testF3.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testF3.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -3,8 +3,7 @@
 	int a;
 	int b;
 	public C() {
-		int a;
-	//}
+		int a;	//}
 	int c;
 	void m() {
 		int a;

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testG1.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testG1.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testG1.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -12,8 +12,7 @@
 		int a;
 		try {
 			int a;
-			int b;
-		//} 
+			int b; 		//} 
 		catch (Exception e) {
 			throw new Exception();
 		}

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testJ1.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testJ1.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testJ1.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -7,8 +7,8 @@
 			true && 6 < 9) {
 			int b;
 		}
-		int c;
-	//}
+		int c;	//}
+		
 	void n() {
 		int a;
 		m(new Object(), 56, 45, 32, "C", "E", 100, 23, new Object());

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testJ2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testJ2.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testJ2.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -5,8 +5,8 @@
 		if (true && true || true && 4 < 5 || true && 6 < 9) {
 			int b;
 		}
-		int c;
-	//}
+		int c;	//}
+		
 	void n() {
 		int a;
 		m(new Object(), 56, 45, 32, 

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testL2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testL2.java	2009-07-02 11:50:57 UTC (rev 19621)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testL2.java	2009-07-02 12:00:48 UTC (rev 19622)
@@ -27,6 +27,4 @@
 		}
 		int d;
 	}
-	int k;
-//}
-//}
+	int k;//} //}



From mdjonge at xs4all.nl  Thu Jul  2 14:04:36 2009
From: mdjonge at xs4all.nl (Maartje de Jonge)
Date: Thu, 02 Jul 2009 12:04:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19623 - MaartjeDeJonge
	- sglr-recovery/trunk/Evaluation_Recovery/src
Message-ID: <200907021203.n62C36RL024846@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-02 12:04:36 +0000 (Thu, 02 Jul 2009)
New Revision: 19623

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19623&view=rev

Modified:
   sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java

Log:
?

Changes:

Modified: sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java	2009-07-02 12:00:48 UTC (rev 19622)
+++ sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java	2009-07-02 12:04:36 UTC (rev 19623)
@@ -95,9 +95,11 @@
 	
 	public void xxtestFile() throws IOException, InterpreterException, SGLRException{
 		//String fileName="testB5.java";
-		String fileName="doubleClosed_If.java";
+		//String fileName="doubleClosed_If.java";
+		String fileName="testD3.java";
 		//createJDT_Tree(fileName, LOC_ERROR_INPUTFILES, LOC_ERROR_JDT_TREES);
-		createSGLRParsetree(fileName, LOC_ERROR_DEV_FILES, LOC_ERROR_SGLR_PARSETREES);				
+		//createSGLRParsetree(fileName, LOC_ERROR_DEV_FILES, LOC_ERROR_SGLR_PARSETREES);
+		createSGLRParsetree(fileName, LOC_ERROR_INPUTFILES, LOC_ERROR_SGLR_PARSETREES);
 	}
 	
 	/**



From emma at cs.lth.se  Thu Jul  2 15:31:14 2009
From: emma at cs.lth.se (Emma NilssonNyman)
Date: Thu, 02 Jul 2009 13:31:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19625 -
	EmmaNilssonNyman - in sglr-recovery/trunk/Evaluation_Recovery:
	Correct_Files/input_files Error_Files/input_files
Message-ID: <200907021329.n62DTimU026107@proliant.st.ewi.tudelft.nl>

Author: EmmaNilssonNyman
Date: 2009-07-02 13:31:14 +0000 (Thu, 02 Jul 2009)
New Revision: 19625

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19625&view=rev

Modified:
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/input_files/testJ1.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/input_files/testJ2.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA6.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testB6.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testC4.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testH3.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testI3.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testJ1.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testJ2.java

Log:
Updated some of the test files

Changes:

Modified: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/input_files/testJ1.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/input_files/testJ1.java	2009-07-02 12:52:05 UTC (rev 19624)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/input_files/testJ1.java	2009-07-02 13:31:14 UTC (rev 19625)
@@ -9,7 +9,7 @@
 	}
 	void n() {
 		int a;
-		m(new Object(), 56, 45, 32, "C", "E", 100, 23, new Object());
+		m(new Object(), 56, 45, 32, C, E, 100, 23, new Object());
 		int b;
 	}
 }

Modified: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/input_files/testJ2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/input_files/testJ2.java	2009-07-02 12:52:05 UTC (rev 19624)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/input_files/testJ2.java	2009-07-02 13:31:14 UTC (rev 19625)
@@ -9,7 +9,7 @@
 	}
 	void n() {
 		int a;
-		m(new Object(), 56, 45, 32, "C", "E", 100, 23, new Object());
+		m(new Object(), 56, 45, 32, C, E, 100, 23, new Object());
 		int b;
 	}
 }

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA6.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA6.java	2009-07-02 12:52:05 UTC (rev 19624)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testA6.java	2009-07-02 13:31:14 UTC (rev 19625)
@@ -1,13 +1,13 @@
-/* Peak program - Messed up indent */
+/* Peak program - Two errors, two missing start braces */
 class C {
 	void m() {
-		if (true) {
-			for (int i; i < 10; i++) {
+		if (true) //{
+			for (int i; i < 10; i++) //{
 				if (true) {
 					if (true) {
 						int a;
 					}
-				 }
+				}
 			}
 		}
 	}

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testB6.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testB6.java	2009-07-02 12:52:05 UTC (rev 19624)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testB6.java	2009-07-02 13:31:14 UTC (rev 19625)
@@ -1,14 +1,14 @@
-/* Bumpy road - Messed up indent */
+/* Bumpy road - Double error, extra right brace and missing right brace */
 class C {
 	void m() {
 		int a;
-}
+	}}
 	void n() {
 		int b;
 	}
 	void o() {
 		int c;
-	}
+	/*}*/
 	void p() {
 		int d;
 	}

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testC4.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testC4.java	2009-07-02 12:52:05 UTC (rev 19624)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testC4.java	2009-07-02 13:31:14 UTC (rev 19625)
@@ -6,7 +6,7 @@
 	}
 	void m() {
 		if (true) {
-			if (/*true) { */
+			if (true/*) { */
 				int c;
 				int d;
 			}

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testH3.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testH3.java	2009-07-02 12:52:05 UTC (rev 19624)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testH3.java	2009-07-02 13:31:14 UTC (rev 19625)
@@ -8,7 +8,7 @@
 		int b;
 		int c;
 	}
-	void o(int a, /*int b)*/ {
+	void o(int a, int b/*)*/ {
 		int c;
 		int d;
 	}

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testI3.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testI3.java	2009-07-02 12:52:05 UTC (rev 19624)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testI3.java	2009-07-02 13:31:14 UTC (rev 19625)
@@ -11,7 +11,7 @@
 		m(new D() { 
 				void m() { 
 					int a; 
-				}
+				//}
 			});
 	}
 }

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testJ1.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testJ1.java	2009-07-02 12:52:05 UTC (rev 19624)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testJ1.java	2009-07-02 13:31:14 UTC (rev 19625)
@@ -11,7 +11,7 @@
 		
 	void n() {
 		int a;
-		m(new Object(), 56, 45, 32, "C", "E", 100, 23, new Object());
+		m(new Object(), 56, 45, 32, C, E, 100, 23, new Object());
 		int b;
 	}
 }

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testJ2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testJ2.java	2009-07-02 12:52:05 UTC (rev 19624)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/input_files/testJ2.java	2009-07-02 13:31:14 UTC (rev 19625)
@@ -10,7 +10,7 @@
 	void n() {
 		int a;
 		m(new Object(), 56, 45, 32, 
-			"C", "E", 100, 23, new Object());
+			C, E, 100, 23, new Object());
 		int b;
 	}
 }



From mdjonge at xs4all.nl  Fri Jul  3 12:09:06 2009
From: mdjonge at xs4all.nl (Maartje de Jonge)
Date: Fri, 03 Jul 2009 10:09:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19627 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907031007.n63A7ZXG007170@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-03 10:09:06 +0000 (Fri, 03 Jul 2009)
New Revision: 19627

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19627&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/IndentationHandler.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParserHistory.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java

Log:
improvements: eof and inward 

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/IndentationHandler.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/IndentationHandler.java	2009-07-03 04:35:20 UTC (rev 19626)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/IndentationHandler.java	2009-07-03 10:09:06 UTC (rev 19627)
@@ -89,6 +89,8 @@
             if (isInLeftMargin())
                 indentValue += SGLR.TAB_SIZE;             
             break;
+        case SGLR.EOF:
+            break;
         default:
             setInLeftMargin(false); //Indent value is set after first non-whitespace character of a line
             break;

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParserHistory.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParserHistory.java	2009-07-03 04:35:20 UTC (rev 19626)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParserHistory.java	2009-07-03 10:09:06 UTC (rev 19627)
@@ -165,7 +165,9 @@
         }        
         return fragment;
     }
-    
+    /*
+     * current construct in navigation
+     */
     public IndentInfo getConstructPoint() {
         return newLinePoints.get(indexConstruct);
     }
@@ -187,7 +189,7 @@
     } 
     
     public boolean moveToParentConstruct() {        
-        int loopIndex = newLinePoints.size()-2;
+        int loopIndex = indexConstruct-1;//newLinePoints.size()-2;
         while ( loopIndex >= 0) {
             if(newLinePoints.get(loopIndex).getIndentValue()< getConstructPoint().getIndentValue()){
                 indexConstruct = loopIndex;  
@@ -279,6 +281,27 @@
         recentHistory.addAll(newLinePoints.subList(startIndex, newLinePoints.size()));
         return recentHistory;
     }
+
+    public int getLastChar() {        
+        return recoverTokenStream[recoverTokenCount-1];
+    }    
+
+    public boolean moveInward() {
+        boolean result = false;
+        if(indexConstruct<=1)
+            return false;
+        int prevIndent = getConstructPoint().getIndentValue();
+        indexConstruct-=1;
+        int currIndent = getConstructPoint().getIndentValue();
+        while(indexConstruct>1 && currIndent > prevIndent){
+            result = true;
+            prevIndent=currIndent;
+            indexConstruct-=1;
+            currIndent = getConstructPoint().getIndentValue();
+        }
+        indexConstruct+=1;
+        return result; 
+    }
     
     /*
     ///////////////////////////////// LOG /////////////////////////////////////////////////////////////////

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java	2009-07-03 04:35:20 UTC (rev 19626)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java	2009-07-03 10:09:06 UTC (rev 19627)
@@ -6,7 +6,7 @@
  * Coarse-grained recovery by skipping code-fragments near the error.
  * Uses layout to take human intention into account
  */
-public class StructureRecovery {
+public class StructureRecovery {    
     
     private enum SkipAction{
         SKIP_PREVIOUS,
@@ -91,11 +91,12 @@
      * Recovers by skipping (parse as whitespace) part of the input string
      */
     public boolean selectErroneousFragment() throws IOException {       
-        
+        errorDetectionPosition=myParser.tokensSeen;
         getHistory().setBigReducePoints();
-        getHistory().moveToLastConstruct();
-        errorDetectionPosition=myParser.tokensSeen;
-        recoverAction = SkipAction.SKIP_PREVIOUS;
+        getHistory().moveToLastConstruct(); 
+        recoverInward(getHistory().getConstructPoint().getIndentValue());
+        recoverAction = SkipAction.SKIP_PREVIOUS;        
+        getHistory().moveToLastConstruct(); 
         while (recoverySucceeded()==false && recoverAction != SkipAction.STOPPED) {
             if(isDebugMode)
                 Tools.debug("ACTION: "+recoverAction);
@@ -140,6 +141,31 @@
         return recoverySucceeded();
     }
 
+    private void recoverInward(int errorLineIndent) throws IOException {
+        recoverAction=SkipAction.SKIP_CURRENT;
+        boolean goOn = getHistory().moveInward();
+        while (recoverySucceeded()==false && goOn) {
+            if(isDebugMode)
+                Tools.debug("(INWARD) ACTION: "+recoverAction);
+            switch (recoverAction) {            
+            case SKIP_CURRENT:
+                skipCurrentConstruct();
+                recoverAction=SkipAction.SKIP_SIBLINGS;                
+                break;
+            case SKIP_SIBLINGS:  
+                skipChilds();
+                recoverAction=SkipAction.SKIP_PARENT;
+                break;
+            case SKIP_PARENT:
+                getHistory().moveToParentConstruct();                
+                recoverAction = SkipAction.SKIP_CURRENT;            
+                break;
+            }
+            goOn=getHistory().getConstructPoint().getIndentValue() > errorLineIndent;
+        }
+        
+    }
+
     private boolean hasLowIndentation() {
         boolean smallTokenPos = getHistory().getConstructPoint().getTokensSeen() <= getHistory().getPreviousBigReducePoint().getTokensSeen();
         boolean smallIndent = getHistory().getConstructPoint().getIndentValue() <= getHistory().getPreviousBigReducePoint().getIndentValue();
@@ -165,7 +191,7 @@
             setSkipPoint();
             int indent = skipPoint.getIndentValue();
             int childsSkipped=0;
-            while ((childsSkipped < forward || movedToPrev==false) && !hasDedent(skipPoint.getIndentValue(), indent) && (recoverySucceeded()==false) && (myParser.currentToken != SGLR.EOF)) {
+            while ((childsSkipped < forward || movedToPrev==false) && !hasDedent(skipPoint.getIndentValue(), indent) && (recoverySucceeded()==false)) { //&& (myParser.currentToken != SGLR.EOF)
                 doSkipRecoverStep();
                 childsSkipped++;                
             }
@@ -284,7 +310,7 @@
                 }
             }            
         }
-        //Tools.debug("skip try: "+getErrorFragment());
+        //Tools.debug("skip try-part1: "+getErrorFragment());
         if (childFound && skipP.getIndentValue() == skipPoint.getIndentValue() && !prevLineEmpty) {
             while (myParser.currentToken != SGLR.EOF) {
                 readNextToken();
@@ -298,7 +324,7 @@
             }
         }
         getHistory().setTokenIndex(skipPoint.getTokensSeen());
-        //Tools.debug("skip try: "+getErrorFragment());
+       // Tools.debug("skip try part2: "+getErrorFragment());
        
     }
 



From mdjonge at xs4all.nl  Fri Jul  3 17:19:28 2009
From: mdjonge at xs4all.nl (Maartje de Jonge)
Date: Fri, 03 Jul 2009 15:19:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19628 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907031517.n63FHuJu010700@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-03 15:19:27 +0000 (Fri, 03 Jul 2009)
New Revision: 19628

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19628&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java

Log:
no regio selected? => whole file to bridge parser

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java	2009-07-03 10:09:06 UTC (rev 19627)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java	2009-07-03 15:19:27 UTC (rev 19628)
@@ -8,6 +8,7 @@
  */
 public class StructureRecovery {    
     
+    private boolean isInwardMode;
     private enum SkipAction{
         SKIP_PREVIOUS,
         SKIP_CURRENT,
@@ -72,6 +73,7 @@
         skipIndentHandler.setInLeftMargin(false);
         recoverlines.clear();
         myParser.setEnforcePrefixAccept(false);
+        isInwardMode=false;
     }
 
     private void initialize() {
@@ -98,7 +100,7 @@
         recoverAction = SkipAction.SKIP_PREVIOUS;        
         getHistory().moveToLastConstruct(); 
         while (recoverySucceeded()==false && recoverAction != SkipAction.STOPPED) {
-            if(isDebugMode)
+           // if(isDebugMode)
                 Tools.debug("ACTION: "+recoverAction);
             switch (recoverAction) {
             case SKIP_PREVIOUS:
@@ -135,17 +137,23 @@
                 break;          
             }   
         }
-      if(recoverySucceeded())
-            //getHistory().addRecoverLines(recoverlines);
+        //if(recoverySucceeded()){
+          //  getHistory().addRecoverLines(recoverlines);
+        //}
+        if(!recoverySucceeded()){
+            startSkipIndex=0;
+        }
+            
         reset();
         return recoverySucceeded();
     }
 
     private void recoverInward(int errorLineIndent) throws IOException {
+        isInwardMode=true;
         recoverAction=SkipAction.SKIP_CURRENT;
         boolean goOn = getHistory().moveInward();
         while (recoverySucceeded()==false && goOn) {
-            if(isDebugMode)
+            //if(isDebugMode)
                 Tools.debug("(INWARD) ACTION: "+recoverAction);
             switch (recoverAction) {            
             case SKIP_CURRENT:
@@ -163,6 +171,7 @@
             }
             goOn=getHistory().getConstructPoint().getIndentValue() > errorLineIndent;
         }
+        isInwardMode=false;
         
     }
 
@@ -299,7 +308,7 @@
             if(childFound(skipP))
                 childFound=true;
             if (endOfConstruct(skipP)|| myParser.currentToken==SGLR.EOF) {//reachedErrorDetectionLine() && 
-                if(getHistory().getTokenIndex()>= getHistory().getLastLine().getTokensSeen()-1){
+                if(isInwardMode || getHistory().getTokenIndex()>= getHistory().getLastLine().getTokensSeen()-1){
                     endSkipFound=true;                 
                     int indent = skipIndentHandler.getIndentValue();                
                     skipPoint = new IndentInfo(-1, getHistory().getTokenIndex() -1, indent);
@@ -324,7 +333,7 @@
             }
         }
         getHistory().setTokenIndex(skipPoint.getTokensSeen());
-       // Tools.debug("skip try part2: "+getErrorFragment());
+        Tools.debug("skip try part2: "+getErrorFragment());
        
     }
 



From mdjonge at xs4all.nl  Mon Jul  6 10:39:49 2009
From: mdjonge at xs4all.nl (Maartje de Jonge)
Date: Mon, 06 Jul 2009 08:39:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19629 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907060838.n668cEt5029556@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-06 08:39:49 +0000 (Mon, 06 Jul 2009)
New Revision: 19629

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19629&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java

Log:
debug=off

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java	2009-07-03 15:19:27 UTC (rev 19628)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java	2009-07-06 08:39:49 UTC (rev 19629)
@@ -100,7 +100,7 @@
         recoverAction = SkipAction.SKIP_PREVIOUS;        
         getHistory().moveToLastConstruct(); 
         while (recoverySucceeded()==false && recoverAction != SkipAction.STOPPED) {
-           // if(isDebugMode)
+            if(isDebugMode)
                 Tools.debug("ACTION: "+recoverAction);
             switch (recoverAction) {
             case SKIP_PREVIOUS:
@@ -153,7 +153,7 @@
         recoverAction=SkipAction.SKIP_CURRENT;
         boolean goOn = getHistory().moveInward();
         while (recoverySucceeded()==false && goOn) {
-            //if(isDebugMode)
+            if(isDebugMode)
                 Tools.debug("(INWARD) ACTION: "+recoverAction);
             switch (recoverAction) {            
             case SKIP_CURRENT:
@@ -333,7 +333,7 @@
             }
         }
         getHistory().setTokenIndex(skipPoint.getTokensSeen());
-        Tools.debug("skip try part2: "+getErrorFragment());
+        //Tools.debug("skip try part2: "+getErrorFragment());
        
     }
 



From mdjonge at xs4all.nl  Mon Jul  6 11:33:35 2009
From: mdjonge at xs4all.nl (Maartje de Jonge)
Date: Mon, 06 Jul 2009 09:33:35 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19630 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907060932.n669W0IE030793@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-06 09:33:35 +0000 (Mon, 06 Jul 2009)
New Revision: 19630

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19630&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java

Log:
bugfix: sglr.activestacks.clear

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java	2009-07-06 08:39:49 UTC (rev 19629)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java	2009-07-06 09:33:35 UTC (rev 19630)
@@ -1,7 +1,9 @@
 package org.spoofax.jsglr;
 
 import java.io.IOException;
+import java.util.ArrayList;
 
+//TODO: keep recovered lines (Testcase: two separated errors)
 public class RecoveryConnector {
     private SGLR mySGLR;
     private IRecoveryParser recoveryParser;
@@ -39,7 +41,7 @@
         long durationSkip=System.currentTimeMillis()-startSkip;
         Tools.debug("Skip time: "+ durationSkip);
         Tools.debug(errorFragment);
-        
+        mySGLR.activeStacks.clear();
         //BRIDGE REPAIR
         if(useBridgeParser){
             
@@ -82,7 +84,17 @@
     }
     
     private boolean recoverySucceeded() {
-        return mySGLR.activeStacks.size()>0 || mySGLR.acceptingStack!=null;
+        boolean hasSucceeded = (mySGLR.activeStacks.size()>0 || mySGLR.acceptingStack!=null);
+        /*
+        if(hasSucceeded){           
+            ArrayList<IndentInfo> recoverNewLinePoints = new ArrayList<IndentInfo>();
+            //TODO: collect recover lines during continueParsing
+            IndentInfo currentStatus = new IndentInfo(mySGLR.lineNumber, getHistory().getTokenIndex(), mySGLR.getIndentHandler().getIndentValue());
+            recoverNewLinePoints.add(currentStatus);
+            getHistory().addRecoverLines(recoverNewLinePoints);
+        }
+        */
+        return hasSucceeded;
     }
 
     private void whiteSpaceParse(String errorFragment) throws IOException {
@@ -128,6 +140,7 @@
         int indexFragment = findFirstNonLayoutToken(fragment);        
         while(indexFragment<fragment.length() && mySGLR.activeStacks.size()>0) {                        
             mySGLR.currentToken=fragment.charAt(indexFragment);
+            //Tools.debug((char)mySGLR.currentToken);
             indexFragment++;
             if(!asLayout)
                 mySGLR.doParseStep();
@@ -137,6 +150,7 @@
     }
     
     public void parseRemainingTokens() throws IOException{
+        //Tools.debug("REMAINING: ");
         getHistory().setTokenIndex(skipRecovery.getEndSkipPosition());
         while(!getHistory().hasFinishedRecoverTokens() && mySGLR.activeStacks.size()>0){        
             getHistory().readRecoverToken(mySGLR);



From mdjonge at xs4all.nl  Mon Jul  6 11:42:30 2009
From: mdjonge at xs4all.nl (Maartje de Jonge)
Date: Mon, 06 Jul 2009 09:42:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19631 - MaartjeDeJonge
	- sglr-recovery/trunk/Evaluation_Recovery/src
Message-ID: <200907060940.n669espq030901@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-06 09:42:30 +0000 (Mon, 06 Jul 2009)
New Revision: 19631

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19631&view=rev

Modified:
   sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java

Log:
include development files

Changes:

Modified: sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java	2009-07-06 09:33:35 UTC (rev 19630)
+++ sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java	2009-07-06 09:42:30 UTC (rev 19631)
@@ -73,7 +73,7 @@
 		}
 	}
 	
-	public void processDevelopmentFiles() throws Exception{		
+	public void testProcessDevelopmentFiles() throws Exception{		
 		String[] children = collectInputFiles(LOC_ERROR_DEV_FILES);	
 		for (String fileName : children) {        	
         	if (!fileName.contains("svn")) {
@@ -93,13 +93,19 @@
 		}
 	}
 	
-	public void xxtestFile() throws IOException, InterpreterException, SGLRException{
+	public void xxtestFile() throws Exception{
 		//String fileName="testB5.java";
 		//String fileName="doubleClosed_If.java";
-		String fileName="testD3.java";
+		//String fileName="testB2.java";
 		//createJDT_Tree(fileName, LOC_ERROR_INPUTFILES, LOC_ERROR_JDT_TREES);
-		//createSGLRParsetree(fileName, LOC_ERROR_DEV_FILES, LOC_ERROR_SGLR_PARSETREES);
-		createSGLRParsetree(fileName, LOC_ERROR_INPUTFILES, LOC_ERROR_SGLR_PARSETREES);
+		String fileName="morePartsStructureError.java";
+		createSGLRParsetree(fileName, LOC_ERROR_DEV_FILES, LOC_ERROR_SGLR_PARSETREES);
+		setUp();
+		createJDT_Tree(fileName,LOC_ERROR_DEV_FILES, LOC_ERROR_JDT_TREES);
+		//createSGLRParsetree(fileName, LOC_ERROR_INPUTFILES, LOC_ERROR_SGLR_PARSETREES);
+		setUp();
+		createJDT_Tree(fileName,LOC_CORRECT_DEV_FILES, LOC_CORRECT_JDT_TREES);
+		createSGLRParsetree(fileName, LOC_CORRECT_DEV_FILES, LOC_CORRECT_SGLR_PARSETREES);	
 	}
 	
 	/**



From mdjonge at xs4all.nl  Mon Jul  6 15:33:20 2009
From: mdjonge at xs4all.nl (Maartje de Jonge)
Date: Mon, 06 Jul 2009 13:33:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19632 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907061331.n66DVjFu001619@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-06 13:33:20 +0000 (Mon, 06 Jul 2009)
New Revision: 19632

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19632&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java

Log:
slve nullpointer exceptin in FG

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java	2009-07-06 09:42:30 UTC (rev 19631)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java	2009-07-06 13:33:20 UTC (rev 19632)
@@ -131,17 +131,19 @@
             IndentInfo line =newLinePoints.get(i);            
             if(line.structureStartPosition()>startTok){            
                 Link lnk = line.getReductionLink();
-                IParseNode pNode =lnk.label;
-                if(pNode!=null){
-                    ATerm t = pNode.toParseTree(myParser.getParseTable());                    
-                    int beginIndent = findBeginIndent(line);                    
-                    indentComparer.evaluateIndentation(t, beginIndent);
-                    int devValue=indentComparer.getIndentDeviationListElements();
-                    if(devValue>0){
-                        int errorLineIndex=findIndexLine(line.structureStartPosition() + indentComparer.getPosFirstErrorListElement());
-                        //debugErrorLine(line, beginIndent, devValue, errorLineIndex);
-                        indexLineRecovery=errorLineIndex;
-                        return true;
+                if(lnk!=null){                    
+                    IParseNode pNode =lnk.label;
+                    if(pNode!=null){
+                        ATerm t = pNode.toParseTree(myParser.getParseTable());                    
+                        int beginIndent = findBeginIndent(line);                    
+                        indentComparer.evaluateIndentation(t, beginIndent);
+                        int devValue=indentComparer.getIndentDeviationListElements();
+                        if(devValue>0){
+                            int errorLineIndex=findIndexLine(line.structureStartPosition() + indentComparer.getPosFirstErrorListElement());
+                            //debugErrorLine(line, beginIndent, devValue, errorLineIndex);
+                            indexLineRecovery=errorLineIndex;
+                            return true;
+                        }
                     }
                 }
             }



From mdjonge at xs4all.nl  Mon Jul  6 15:50:13 2009
From: mdjonge at xs4all.nl (Maartje de Jonge)
Date: Mon, 06 Jul 2009 13:50:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19633 - MaartjeDeJonge
	- sglr-recovery/trunk/Evaluation_Recovery/Language_Files
Message-ID: <200907061348.n66DmbQL001765@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-06 13:50:13 +0000 (Mon, 06 Jul 2009)
New Revision: 19633

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19633&view=rev

Modified:
   sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtToJava15
   sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtToJava15.c
   sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtTransformRules.str

Log:
fixed transform problem

Changes (first 1000 lines of the diffs):

Modified: sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtToJava15
===================================================================
(Binary files differ)

Modified: sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtToJava15.c
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtToJava15.c	2009-07-06 13:33:20 UTC (rev 19632)
+++ sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtToJava15.c	2009-07-06 13:50:13 UTC (rev 19633)
@@ -478,11 +478,11 @@
 extern const char * __tracing_table [];
 extern unsigned short __tracing_table_counter;
 ATerm conc_0_0 (StrSL sl, ATerm t);
-ATerm map_1_0 (StrSL sl, StrCL k_91, ATerm t);
-ATerm try_1_0 (StrSL sl, StrCL n_66, ATerm t);
-ATerm topdown_1_0 (StrSL sl, StrCL p_59, ATerm t);
-ATerm outermost_1_0 (StrSL sl, StrCL l_58, ATerm t);
-ATerm io_wrap_1_0 (StrSL sl, StrCL h_50, ATerm t);
+ATerm map_1_0 (StrSL sl, StrCL m_91, ATerm t);
+ATerm try_1_0 (StrSL sl, StrCL p_66, ATerm t);
+ATerm topdown_1_0 (StrSL sl, StrCL r_59, ATerm t);
+ATerm outermost_1_0 (StrSL sl, StrCL n_58, ATerm t);
+ATerm io_wrap_1_0 (StrSL sl, StrCL j_50, ATerm t);
 static ATerm lifted8 (StrSL sl, ATerm t);
 ATerm rewriteAst_0_0 (StrSL sl, ATerm t);
 static ATerm lifted4 (StrSL sl, ATerm t);
@@ -506,8 +506,8 @@
 __tracing_table[__tracing_table_counter++] = "rewriteAst_0_0";
 sl_decl(sl);
 {
-struct str_closure p_173 = { &(lifted8) , &(frame) };
-StrCL lifted8_cl = &(p_173);
+struct str_closure r_173 = { &(lifted8) , &(frame) };
+StrCL lifted8_cl = &(r_173);
 t = outermost_1_0(sl, lifted8_cl, t);
 if((t == NULL))
 goto fail16 ;
@@ -523,8 +523,6 @@
 __tracing_table[__tracing_table_counter++] = "lifted8";
 sl_decl(sl);
 {
-ATerm trm169 = t;
-ATerm trm170 = t;
 ATerm trm171 = t;
 ATerm trm172 = t;
 ATerm trm173 = t;
@@ -535,189 +533,191 @@
 ATerm trm178 = t;
 ATerm trm179 = t;
 ATerm trm180 = t;
+ATerm trm181 = t;
+ATerm trm182 = t;
 t = T_0_0(sl_up(sl), t);
 if((t == NULL))
+goto label87 ;
 goto label86 ;
-goto label85 ;
-label86 :
-t = trm180;
+label87 :
+t = trm182;
 {
-ATerm q_172 = NULL,r_172 = NULL;
+ATerm s_172 = NULL,t_172 = NULL;
 if(match_cons(t, sym_VarDec_2))
 {
-q_172 = ATgetArgument(t, 0);
+s_172 = ATgetArgument(t, 0);
 {
-ATerm trm181 = ATgetArgument(t, 1);
-if(!(match_cons(trm181, sym_None_0)))
-goto label84 ;
+ATerm trm183 = ATgetArgument(t, 1);
+if(!(match_cons(trm183, sym_None_0)))
+goto label85 ;
 }
 }
 else
-goto label84 ;
-r_172 = t;
-t = (ATerm) ATmakeAppl(sym_VarDec_1, q_172);
 goto label85 ;
+t_172 = t;
+t = (ATerm) ATmakeAppl(sym_VarDec_1, s_172);
+goto label86 ;
 }
+label86 :
+;
+goto label84 ;
 label85 :
-;
+t = trm181;
+t = Stm_0_0(sl_up(sl), t);
+if((t == NULL))
 goto label83 ;
+else
+goto label84 ;
 label84 :
-t = trm179;
-t = Stm_0_0(sl_up(sl), t);
-if((t == NULL))
+;
 goto label82 ;
-else
-goto label83 ;
 label83 :
-;
-goto label81 ;
-label82 :
-t = trm178;
+t = trm180;
 {
-ATerm s_172 = NULL,t_172 = NULL;
+ATerm u_172 = NULL,v_172 = NULL;
 if(match_cons(t, sym_NumberLiteral_1))
 {
-s_172 = ATgetArgument(t, 0);
+u_172 = ATgetArgument(t, 0);
 }
 else
-goto label80 ;
-t_172 = t;
-t = (ATerm) ATmakeAppl(sym_Lit_1, (ATerm) ATmakeAppl(sym_Deci_1, s_172));
 goto label81 ;
+v_172 = t;
+t = (ATerm) ATmakeAppl(sym_Lit_1, (ATerm) ATmakeAppl(sym_Deci_1, u_172));
+goto label82 ;
 }
+label82 :
+;
+goto label80 ;
 label81 :
-;
-goto label79 ;
-label80 :
-t = trm177;
+t = trm179;
 {
-ATerm u_172 = NULL,v_172 = NULL,w_172 = NULL,x_172 = NULL;
+ATerm w_172 = NULL,x_172 = NULL,y_172 = NULL,z_172 = NULL;
 if(match_cons(t, sym_SingleVariableDeclaration_5))
 {
-u_172 = ATgetArgument(t, 0);
-v_172 = ATgetArgument(t, 1);
-w_172 = ATgetArgument(t, 2);
+w_172 = ATgetArgument(t, 0);
+x_172 = ATgetArgument(t, 1);
+y_172 = ATgetArgument(t, 2);
 {
-ATerm trm182 = ATgetArgument(t, 3);
-if(!(((ATgetType(trm182) == AT_INT) && (ATgetInt((ATermInt) trm182) == 0))))
-goto label78 ;
+ATerm trm184 = ATgetArgument(t, 3);
+if(!(((ATgetType(trm184) == AT_INT) && (ATgetInt((ATermInt) trm184) == 0))))
+goto label79 ;
 }
 {
-ATerm trm183 = ATgetArgument(t, 4);
-if(!(match_cons(trm183, sym_None_0)))
-goto label78 ;
+ATerm trm185 = ATgetArgument(t, 4);
+if(!(match_cons(trm185, sym_None_0)))
+goto label79 ;
 }
 }
 else
-goto label78 ;
-x_172 = t;
-t = (ATerm) ATmakeAppl(sym_Param_3, u_172, v_172, w_172);
 goto label79 ;
+z_172 = t;
+t = (ATerm) ATmakeAppl(sym_Param_3, w_172, x_172, y_172);
+goto label80 ;
 }
+label80 :
+;
+goto label78 ;
 label79 :
-;
-goto label77 ;
-label78 :
-t = trm176;
+t = trm178;
 {
-ATerm y_172 = NULL,z_172 = NULL;
+ATerm a_173 = NULL,b_173 = NULL;
 if(match_cons(t, sym_SimpleType_1))
 {
-y_172 = ATgetArgument(t, 0);
+a_173 = ATgetArgument(t, 0);
 }
 else
-goto label76 ;
-z_172 = t;
-t = (ATerm) ATmakeAppl(sym_ClassOrInterfaceType_2, (ATerm)ATmakeAppl(sym_TypeName_1, y_172), term1);
 goto label77 ;
+b_173 = t;
+t = (ATerm) ATmakeAppl(sym_ClassOrInterfaceType_2, (ATerm)ATmakeAppl(sym_TypeName_1, a_173), term1);
+goto label78 ;
 }
+label78 :
+;
+goto label76 ;
 label77 :
-;
+t = trm177;
+t = ModKey_0_0(sl_up(sl), t);
+if((t == NULL))
 goto label75 ;
+else
+goto label76 ;
 label76 :
-t = trm175;
-t = ModKey_0_0(sl_up(sl), t);
-if((t == NULL))
+;
 goto label74 ;
-else
-goto label75 ;
 label75 :
-;
+t = trm176;
+t = RewritePrimitive_0_0(sl_up(sl), t);
+if((t == NULL))
 goto label73 ;
+else
+goto label74 ;
 label74 :
-t = trm174;
-t = RewritePrimitive_0_0(sl_up(sl), t);
-if((t == NULL))
+;
 goto label72 ;
-else
-goto label73 ;
 label73 :
-;
+t = trm175;
+t = RewriteMethod_0_0(sl_up(sl), t);
+if((t == NULL))
 goto label71 ;
+else
+goto label72 ;
 label72 :
-t = trm173;
-t = RewriteMethod_0_0(sl_up(sl), t);
-if((t == NULL))
+;
 goto label70 ;
-else
-goto label71 ;
 label71 :
-;
+t = trm174;
+t = Import_0_0(sl_up(sl), t);
+if((t == NULL))
 goto label69 ;
+else
+goto label70 ;
 label70 :
-t = trm172;
-t = Import_0_0(sl_up(sl), t);
-if((t == NULL))
+;
 goto label68 ;
-else
-goto label69 ;
 label69 :
-;
-goto label67 ;
-label68 :
-t = trm171;
+t = trm173;
 {
-ATerm a_173 = NULL,b_173 = NULL;
+ATerm c_173 = NULL,d_173 = NULL;
 if(match_cons(t, sym_SimpleName_1))
 {
-a_173 = ATgetArgument(t, 0);
+c_173 = ATgetArgument(t, 0);
 }
 else
-goto label66 ;
-b_173 = t;
-t = (ATerm) ATmakeAppl(sym_Id_1, a_173);
 goto label67 ;
+d_173 = t;
+t = (ATerm) ATmakeAppl(sym_Id_1, c_173);
+goto label68 ;
 }
+label68 :
+;
+goto label66 ;
 label67 :
-;
+t = trm172;
+t = RewriteClass_0_0(sl_up(sl), t);
+if((t == NULL))
 goto label65 ;
+else
+goto label66 ;
 label66 :
-t = trm170;
-t = RewriteClass_0_0(sl_up(sl), t);
-if((t == NULL))
+;
 goto label64 ;
-else
-goto label65 ;
 label65 :
-;
-goto label63 ;
-label64 :
-t = trm169;
+t = trm171;
 {
-ATerm c_173 = NULL,d_173 = NULL,e_173 = NULL,f_173 = NULL;
+ATerm e_173 = NULL,f_173 = NULL,g_173 = NULL,i_173 = NULL;
 if(match_cons(t, sym_VariableDeclarationFragment_3))
 {
-d_173 = ATgetArgument(t, 0);
-c_173 = ATgetArgument(t, 1);
-e_173 = ATgetArgument(t, 2);
+f_173 = ATgetArgument(t, 0);
+e_173 = ATgetArgument(t, 1);
+g_173 = ATgetArgument(t, 2);
 }
 else
 goto fail17 ;
-f_173 = t;
-t = (ATerm) ATmakeAppl(sym_VarDec_2, d_173, e_173);
-goto label63 ;
+i_173 = t;
+t = (ATerm) ATmakeAppl(sym_VarDec_2, f_173, g_173);
+goto label64 ;
 }
-label63 :
+label64 :
 ;
 }
 __tracing_table[--__tracing_table_counter] = NULL;
@@ -731,8 +731,8 @@
 __tracing_table[__tracing_table_counter++] = "main_0_0";
 sl_decl(sl);
 {
-struct str_closure o_173 = { &(lifted1) , &(frame) };
-StrCL lifted1_cl = &(o_173);
+struct str_closure q_173 = { &(lifted1) , &(frame) };
+StrCL lifted1_cl = &(q_173);
 t = io_wrap_1_0(sl, lifted1_cl, t);
 if((t == NULL))
 goto fail9 ;
@@ -748,16 +748,16 @@
 __tracing_table[__tracing_table_counter++] = "lifted1";
 sl_decl(sl);
 {
-struct str_closure j_173 = { &(lifted6) , &(frame) };
-StrCL lifted6_cl = &(j_173);
-struct str_closure k_173 = { &(lifted2) , &(frame) };
-StrCL lifted2_cl = &(k_173);
+struct str_closure l_173 = { &(lifted6) , &(frame) };
+StrCL lifted6_cl = &(l_173);
+struct str_closure m_173 = { &(lifted2) , &(frame) };
+StrCL lifted2_cl = &(m_173);
 t = outermost_1_0(sl_up(sl), lifted2_cl, t);
 if((t == NULL))
 goto fail10 ;
 {
-struct str_closure n_173 = { &(lifted3) , &(frame) };
-StrCL lifted3_cl = &(n_173);
+struct str_closure p_173 = { &(lifted3) , &(frame) };
+StrCL lifted3_cl = &(p_173);
 t = topdown_1_0(sl_up(sl), lifted3_cl, t);
 if((t == NULL))
 goto fail10 ;
@@ -780,8 +780,8 @@
 __tracing_table[__tracing_table_counter++] = "lifted3";
 sl_decl(sl);
 {
-struct str_closure m_173 = { &(lifted4) , &(frame) };
-StrCL lifted4_cl = &(m_173);
+struct str_closure o_173 = { &(lifted4) , &(frame) };
+StrCL lifted4_cl = &(o_173);
 t = try_1_0(sl_up(sl_up(sl)), lifted4_cl, t);
 if((t == NULL))
 goto fail14 ;
@@ -797,24 +797,24 @@
 __tracing_table[__tracing_table_counter++] = "lifted4";
 sl_decl(sl);
 {
-ATerm y_171 = NULL,z_171 = NULL,a_172 = NULL;
+ATerm a_172 = NULL,b_172 = NULL,c_172 = NULL;
 if(match_cons(t, sym_PackageName_1))
 {
-y_171 = ATgetArgument(t, 0);
+a_172 = ATgetArgument(t, 0);
 }
 else
 goto fail15 ;
-a_172 = t;
-t = y_171;
+c_172 = t;
+t = a_172;
 {
-struct str_closure l_173 = { &(RP_0_0) , sl_up(sl_up(sl_up(sl))) };
-StrCL lifted5_cl = &(l_173);
+struct str_closure n_173 = { &(RP_0_0) , sl_up(sl_up(sl_up(sl))) };
+StrCL lifted5_cl = &(n_173);
 t = outermost_1_0(sl_up(sl_up(sl_up(sl))), lifted5_cl, t);
 if((t == NULL))
 goto fail15 ;
-z_171 = t;
-t = a_172;
-t = (ATerm) ATmakeAppl(sym_PackageName_1, z_171);
+b_172 = t;
+t = c_172;
+t = (ATerm) ATmakeAppl(sym_PackageName_1, b_172);
 }
 }
 __tracing_table[--__tracing_table_counter] = NULL;
@@ -828,17 +828,17 @@
 __tracing_table[__tracing_table_counter++] = "lifted2";
 sl_decl(sl);
 {
-ATerm u_171 = NULL,v_171 = NULL,w_171 = NULL,x_171 = NULL;
+ATerm w_171 = NULL,x_171 = NULL,y_171 = NULL,z_171 = NULL;
 if(match_cons(t, sym_PackageDeclaration_3))
 {
-u_171 = ATgetArgument(t, 0);
-v_171 = ATgetArgument(t, 1);
-w_171 = ATgetArgument(t, 2);
+w_171 = ATgetArgument(t, 0);
+x_171 = ATgetArgument(t, 1);
+y_171 = ATgetArgument(t, 2);
 }
 else
 goto fail13 ;
-x_171 = t;
-t = (ATerm) ATmakeAppl(sym_Some_1, (ATerm) ATmakeAppl(sym_PackageDec_2, v_171, (ATerm) ATmakeAppl(sym_PackageName_1, w_171)));
+z_171 = t;
+t = (ATerm) ATmakeAppl(sym_Some_1, (ATerm) ATmakeAppl(sym_PackageDec_2, x_171, (ATerm) ATmakeAppl(sym_PackageName_1, y_171)));
 }
 __tracing_table[--__tracing_table_counter] = NULL;
 return(t);
@@ -851,8 +851,8 @@
 __tracing_table[__tracing_table_counter++] = "lifted6";
 sl_decl(sl);
 {
-struct str_closure i_173 = { &(lifted7) , &(frame) };
-StrCL lifted7_cl = &(i_173);
+struct str_closure k_173 = { &(lifted7) , &(frame) };
+StrCL lifted7_cl = &(k_173);
 t = try_1_0(sl_up(sl_up(sl)), lifted7_cl, t);
 if((t == NULL))
 goto fail11 ;
@@ -868,17 +868,17 @@
 __tracing_table[__tracing_table_counter++] = "lifted7";
 sl_decl(sl);
 {
-ATerm b_172 = NULL,c_172 = NULL,d_172 = NULL,e_172 = NULL;
+ATerm d_172 = NULL,e_172 = NULL,f_172 = NULL,g_172 = NULL;
 if(match_cons(t, sym_VariableDeclarationFragment_3))
 {
-c_172 = ATgetArgument(t, 0);
-b_172 = ATgetArgument(t, 1);
-d_172 = ATgetArgument(t, 2);
+e_172 = ATgetArgument(t, 0);
+d_172 = ATgetArgument(t, 1);
+f_172 = ATgetArgument(t, 2);
 }
 else
 goto fail12 ;
-e_172 = t;
-t = (ATerm) ATmakeAppl(sym_VarDec_2, c_172, d_172);
+g_172 = t;
+t = (ATerm) ATmakeAppl(sym_VarDec_2, e_172, f_172);
 }
 __tracing_table[--__tracing_table_counter] = NULL;
 return(t);
@@ -891,90 +891,90 @@
 __tracing_table[__tracing_table_counter++] = "Stm_0_0";
 sl_decl(sl);
 {
-ATerm trm160 = t;
-ATerm d_25 = NULL,e_25 = NULL,f_25 = NULL;
+ATerm trm162 = t;
+ATerm f_25 = NULL,g_25 = NULL,h_25 = NULL;
 if(match_cons(t, sym_ExprStm_1))
 {
-ATerm trm161 = ATgetArgument(t, 0);
-if(match_cons(trm161, sym_Assignment_3))
+ATerm trm163 = ATgetArgument(t, 0);
+if(match_cons(trm163, sym_Assignment_3))
 {
-ATerm trm162 = ATgetArgument(trm161, 0);
-if(match_cons(trm162, sym_AssignmentOperator_1))
+ATerm trm164 = ATgetArgument(trm163, 0);
+if(match_cons(trm164, sym_AssignmentOperator_1))
 {
-ATerm trm163 = ATgetArgument(trm162, 0);
-if(!((ATgetSymbol(trm163) == ATmakeSymbol("=", 0, ATtrue))))
-goto label61 ;
+ATerm trm165 = ATgetArgument(trm164, 0);
+if(!((ATgetSymbol(trm165) == ATmakeSymbol("=", 0, ATtrue))))
+goto label62 ;
 }
 else
-goto label61 ;
-d_25 = ATgetArgument(trm161, 1);
-e_25 = ATgetArgument(trm161, 2);
+goto label62 ;
+f_25 = ATgetArgument(trm163, 1);
+g_25 = ATgetArgument(trm163, 2);
 }
 else
-goto label61 ;
+goto label62 ;
 }
 else
+goto label62 ;
+h_25 = t;
+t = (ATerm) ATmakeAppl(sym_ExprStm_1, (ATerm) ATmakeAppl(sym_Assign_2, (ATerm)ATmakeAppl(sym_ExprName_1, f_25), g_25));
 goto label61 ;
-f_25 = t;
-t = (ATerm) ATmakeAppl(sym_ExprStm_1, (ATerm) ATmakeAppl(sym_Assign_2, (ATerm)ATmakeAppl(sym_ExprName_1, d_25), e_25));
-goto label60 ;
-label61 :
-t = trm160;
+label62 :
+t = trm162;
 {
-ATerm trm164 = t;
-ATerm y_24 = NULL,z_24 = NULL,a_25 = NULL,b_25 = NULL,c_25 = NULL;
+ATerm trm166 = t;
+ATerm a_25 = NULL,b_25 = NULL,c_25 = NULL,d_25 = NULL,e_25 = NULL;
 if(match_cons(t, sym_VariableDeclarationStatement_3))
 {
-y_24 = ATgetArgument(t, 0);
-z_24 = ATgetArgument(t, 1);
+a_25 = ATgetArgument(t, 0);
+b_25 = ATgetArgument(t, 1);
 {
-ATerm trm165 = ATgetArgument(t, 2);
-if(((ATgetType(trm165) == AT_LIST) && !(ATisEmpty(trm165))))
+ATerm trm167 = ATgetArgument(t, 2);
+if(((ATgetType(trm167) == AT_LIST) && !(ATisEmpty(trm167))))
 {
-ATerm trm166 = ATgetFirst((ATermList) trm165);
-if(match_cons(trm166, sym_VariableDeclarationFragment_3))
+ATerm trm168 = ATgetFirst((ATermList) trm167);
+if(match_cons(trm168, sym_VariableDeclarationFragment_3))
 {
-a_25 = ATgetArgument(trm166, 0);
+c_25 = ATgetArgument(trm168, 0);
 {
-ATerm trm167 = ATgetArgument(trm166, 1);
-if(!(((ATgetType(trm167) == AT_INT) && (ATgetInt((ATermInt) trm167) == 0))))
-goto label62 ;
+ATerm trm169 = ATgetArgument(trm168, 1);
+if(!(((ATgetType(trm169) == AT_INT) && (ATgetInt((ATermInt) trm169) == 0))))
+goto label63 ;
 }
-b_25 = ATgetArgument(trm166, 2);
+d_25 = ATgetArgument(trm168, 2);
 }
 else
-goto label62 ;
+goto label63 ;
 {
-ATerm trm168 = (ATerm) ATgetNext((ATermList) trm165);
-if(!(((ATgetType(trm168) == AT_LIST) && ATisEmpty(trm168))))
-goto label62 ;
+ATerm trm170 = (ATerm) ATgetNext((ATermList) trm167);
+if(!(((ATgetType(trm170) == AT_LIST) && ATisEmpty(trm170))))
+goto label63 ;
 }
 }
 else
-goto label62 ;
+goto label63 ;
 }
 }
 else
-goto label62 ;
-c_25 = t;
-t = (ATerm) ATmakeAppl(sym_LocalVarDecStm_1, (ATerm) ATmakeAppl(sym_LocalVarDec_3, y_24, z_24, (ATerm) ATinsert(ATempty, (ATerm) ATmakeAppl(sym_VarDec_2, a_25, b_25))));
-goto label60 ;
-label62 :
-t = trm164;
+goto label63 ;
+e_25 = t;
+t = (ATerm) ATmakeAppl(sym_LocalVarDecStm_1, (ATerm) ATmakeAppl(sym_LocalVarDec_3, a_25, b_25, (ATerm) ATinsert(ATempty, (ATerm) ATmakeAppl(sym_VarDec_2, c_25, d_25))));
+goto label61 ;
+label63 :
+t = trm166;
 {
-ATerm w_24 = NULL,x_24 = NULL;
+ATerm y_24 = NULL,z_24 = NULL;
 if(match_cons(t, sym_ReturnStatement_1))
 {
-w_24 = ATgetArgument(t, 0);
+y_24 = ATgetArgument(t, 0);
 }
 else
 goto fail8 ;
-x_24 = t;
-t = (ATerm) ATmakeAppl(sym_Return_1, (ATerm) ATmakeAppl(sym_Some_1, w_24));
-goto label60 ;
+z_24 = t;
+t = (ATerm) ATmakeAppl(sym_Return_1, (ATerm) ATmakeAppl(sym_Some_1, y_24));
+goto label61 ;
 }
 }
-label60 :
+label61 :
 ;
 }
 __tracing_table[--__tracing_table_counter] = NULL;
@@ -988,58 +988,58 @@
 __tracing_table[__tracing_table_counter++] = "ModKey_0_0";
 sl_decl(sl);
 {
-ATerm trm152 = t;
-ATerm n_24 = NULL;
+ATerm trm154 = t;
+ATerm p_24 = NULL;
 if(match_cons(t, sym_Modifier_1))
 {
-ATerm trm153 = ATgetArgument(t, 0);
-if(match_cons(trm153, sym_ModifierKeyword_1))
+ATerm trm155 = ATgetArgument(t, 0);
+if(match_cons(trm155, sym_ModifierKeyword_1))
 {
-ATerm trm154 = ATgetArgument(trm153, 0);
-if(!(((ATgetType(trm154) == AT_INT) && (ATgetInt((ATermInt) trm154) == 1))))
-goto label58 ;
+ATerm trm156 = ATgetArgument(trm155, 0);
+if(!(((ATgetType(trm156) == AT_INT) && (ATgetInt((ATermInt) trm156) == 1))))
+goto label59 ;
 }
 else
-goto label58 ;
+goto label59 ;
 }
 else
+goto label59 ;
+p_24 = t;
+t = term23;
 goto label58 ;
-n_24 = t;
-t = term23;
-goto label57 ;
-label58 :
-t = trm152;
+label59 :
+t = trm154;
 {
-ATerm trm155 = t;
-ATerm m_24 = NULL;
+ATerm trm157 = t;
+ATerm o_24 = NULL;
 if(match_cons(t, sym_Modifier_1))
 {
-ATerm trm156 = ATgetArgument(t, 0);
-if(match_cons(trm156, sym_ModifierKeyword_1))
+ATerm trm158 = ATgetArgument(t, 0);
+if(match_cons(trm158, sym_ModifierKeyword_1))
 {
-ATerm trm157 = ATgetArgument(trm156, 0);
-if(!(((ATgetType(trm157) == AT_INT) && (ATgetInt((ATermInt) trm157) == 2))))
-goto label59 ;
+ATerm trm159 = ATgetArgument(trm158, 0);
+if(!(((ATgetType(trm159) == AT_INT) && (ATgetInt((ATermInt) trm159) == 2))))
+goto label60 ;
 }
 else
-goto label59 ;
+goto label60 ;
 }
 else
-goto label59 ;
-m_24 = t;
+goto label60 ;
+o_24 = t;
 t = term25;
-goto label57 ;
-label59 :
-t = trm155;
+goto label58 ;
+label60 :
+t = trm157;
 {
-ATerm l_24 = NULL;
+ATerm n_24 = NULL;
 if(match_cons(t, sym_Modifier_1))
 {
-ATerm trm158 = ATgetArgument(t, 0);
-if(match_cons(trm158, sym_ModifierKeyword_1))
+ATerm trm160 = ATgetArgument(t, 0);
+if(match_cons(trm160, sym_ModifierKeyword_1))
 {
-ATerm trm159 = ATgetArgument(trm158, 0);
-if(!(((ATgetType(trm159) == AT_INT) && (ATgetInt((ATermInt) trm159) == 8))))
+ATerm trm161 = ATgetArgument(trm160, 0);
+if(!(((ATgetType(trm161) == AT_INT) && (ATgetInt((ATermInt) trm161) == 8))))
 goto fail7 ;
 }
 else
@@ -1047,12 +1047,12 @@
 }
 else
 goto fail7 ;
-l_24 = t;
+n_24 = t;
 t = term27;
-goto label57 ;
+goto label58 ;
 }
 }
-label57 :
+label58 :
 ;
 }
 __tracing_table[--__tracing_table_counter] = NULL;
@@ -1066,97 +1066,97 @@
 __tracing_table[__tracing_table_counter++] = "RewriteMethod_0_0";
 sl_decl(sl);
 {
-ATerm trm142 = t;
-ATerm d_24 = NULL,e_24 = NULL,f_24 = NULL,g_24 = NULL,h_24 = NULL,i_24 = NULL,j_24 = NULL,k_24 = NULL;
+ATerm trm144 = t;
+ATerm f_24 = NULL,g_24 = NULL,h_24 = NULL,i_24 = NULL,j_24 = NULL,k_24 = NULL,l_24 = NULL,m_24 = NULL;
 if(match_cons(t, sym_MethodDeclaration_8))
 {
-d_24 = ATgetArgument(t, 0);
-f_24 = ATgetArgument(t, 1);
-g_24 = ATgetArgument(t, 2);
-e_24 = ATgetArgument(t, 3);
-h_24 = ATgetArgument(t, 4);
-i_24 = ATgetArgument(t, 5);
+f_24 = ATgetArgument(t, 0);
+h_24 = ATgetArgument(t, 1);
+i_24 = ATgetArgument(t, 2);
+g_24 = ATgetArgument(t, 3);
+j_24 = ATgetArgument(t, 4);
+k_24 = ATgetArgument(t, 5);
 {
-ATerm trm143 = ATgetArgument(t, 6);
-if(!(((ATgetType(trm143) == AT_LIST) && ATisEmpty(trm143))))
-goto label55 ;
+ATerm trm145 = ATgetArgument(t, 6);
+if(!(((ATgetType(trm145) == AT_LIST) && ATisEmpty(trm145))))
+goto label56 ;
 }
-j_24 = ATgetArgument(t, 7);
+l_24 = ATgetArgument(t, 7);
 }
 else
+goto label56 ;
+m_24 = t;
+t = (ATerm) ATmakeAppl(sym_MethodDec_2, (ATerm)ATmakeAppl(sym_MethodDecHead_6, h_24, term1, i_24, j_24, k_24, term1), l_24);
 goto label55 ;
-k_24 = t;
-t = (ATerm) ATmakeAppl(sym_MethodDec_2, (ATerm)ATmakeAppl(sym_MethodDecHead_6, f_24, term1, g_24, h_24, i_24, term1), j_24);
-goto label54 ;
-label55 :
-t = trm142;
+label56 :
+t = trm144;
 {
-ATerm trm144 = t;
-ATerm u_23 = NULL,v_23 = NULL,w_23 = NULL,x_23 = NULL,y_23 = NULL,z_23 = NULL,a_24 = NULL,b_24 = NULL,c_24 = NULL;
+ATerm trm146 = t;
+ATerm w_23 = NULL,x_23 = NULL,y_23 = NULL,z_23 = NULL,a_24 = NULL,b_24 = NULL,c_24 = NULL,d_24 = NULL,e_24 = NULL;
 if(match_cons(t, sym_MethodDeclaration_8))
 {
-u_23 = ATgetArgument(t, 0);
-w_23 = ATgetArgument(t, 1);
-x_23 = ATgetArgument(t, 2);
-v_23 = ATgetArgument(t, 3);
-y_23 = ATgetArgument(t, 4);
-z_23 = ATgetArgument(t, 5);
+w_23 = ATgetArgument(t, 0);
+y_23 = ATgetArgument(t, 1);
+z_23 = ATgetArgument(t, 2);
+x_23 = ATgetArgument(t, 3);
+a_24 = ATgetArgument(t, 4);
+b_24 = ATgetArgument(t, 5);
 {
-ATerm trm145 = ATgetArgument(t, 6);
-if(((ATgetType(trm145) == AT_LIST) && !(ATisEmpty(trm145))))
+ATerm trm147 = ATgetArgument(t, 6);
+if(((ATgetType(trm147) == AT_LIST) && !(ATisEmpty(trm147))))
 {
-a_24 = ATgetFirst((ATermList) trm145);
+c_24 = ATgetFirst((ATermList) trm147);
 {
-ATerm trm146 = (ATerm) ATgetNext((ATermList) trm145);
-if(!(((ATgetType(trm146) == AT_LIST) && ATisEmpty(trm146))))
-goto label56 ;
+ATerm trm148 = (ATerm) ATgetNext((ATermList) trm147);
+if(!(((ATgetType(trm148) == AT_LIST) && ATisEmpty(trm148))))
+goto label57 ;
 }
 }
 else
-goto label56 ;
+goto label57 ;
 }
-b_24 = ATgetArgument(t, 7);
+d_24 = ATgetArgument(t, 7);
 }
 else
-goto label56 ;
-c_24 = t;
-t = (ATerm) ATmakeAppl(sym_MethodDec_2, (ATerm)ATmakeAppl(sym_MethodDecHead_6, w_23, term1, x_23, y_23, z_23, (ATerm) ATmakeAppl(sym_Some_1, (ATerm) ATmakeAppl(sym_ThrowsDec_1, (ATerm) ATinsert(ATempty, (ATerm) ATmakeAppl(sym_ClassType_1, (ATerm) ATmakeAppl(sym_TypeName_1, a_24)))))), b_24);
-goto label54 ;
-label56 :
-t = trm144;
+goto label57 ;
+e_24 = t;
+t = (ATerm) ATmakeAppl(sym_MethodDec_2, (ATerm)ATmakeAppl(sym_MethodDecHead_6, y_23, term1, z_23, a_24, b_24, (ATerm) ATmakeAppl(sym_Some_1, (ATerm) ATmakeAppl(sym_ThrowsDec_1, (ATerm) ATinsert(ATempty, (ATerm) ATmakeAppl(sym_ClassType_1, (ATerm) ATmakeAppl(sym_TypeName_1, c_24)))))), d_24);
+goto label55 ;
+label57 :
+t = trm146;
 {
-ATerm p_23 = NULL,q_23 = NULL,r_23 = NULL,s_23 = NULL,t_23 = NULL;
+ATerm r_23 = NULL,s_23 = NULL,t_23 = NULL,u_23 = NULL,v_23 = NULL;
 if(match_cons(t, sym_MethodDec_2))
 {
-ATerm trm147 = ATgetArgument(t, 0);
-if(match_cons(trm147, sym_MethodDecHead_6))
+ATerm trm149 = ATgetArgument(t, 0);
+if(match_cons(trm149, sym_MethodDecHead_6))
 {
-p_23 = ATgetArgument(trm147, 0);
+r_23 = ATgetArgument(trm149, 0);
 {
-ATerm trm148 = ATgetArgument(trm147, 1);
-if(!(match_cons(trm148, sym_None_0)))
+ATerm trm150 = ATgetArgument(trm149, 1);
+if(!(match_cons(trm150, sym_None_0)))
 goto fail6 ;
 }
 {
-ATerm trm149 = ATgetArgument(trm147, 2);
-if(!(match_cons(trm149, sym_None_0)))
+ATerm trm151 = ATgetArgument(trm149, 2);
+if(!(match_cons(trm151, sym_None_0)))
 goto fail6 ;
 }
-q_23 = ATgetArgument(trm147, 3);
-r_23 = ATgetArgument(trm147, 4);
+s_23 = ATgetArgument(trm149, 3);
+t_23 = ATgetArgument(trm149, 4);
 {
-ATerm trm150 = ATgetArgument(trm147, 5);
-if(!(match_cons(trm150, sym_None_0)))
+ATerm trm152 = ATgetArgument(trm149, 5);
+if(!(match_cons(trm152, sym_None_0)))
 goto fail6 ;
 }
 }
 else
 goto fail6 ;
 {
-ATerm trm151 = ATgetArgument(t, 1);
-if(match_cons(trm151, sym_Block_1))
+ATerm trm153 = ATgetArgument(t, 1);
+if(match_cons(trm153, sym_Block_1))
 {
-s_23 = ATgetArgument(trm151, 0);
+u_23 = ATgetArgument(trm153, 0);
 }
 else
 goto fail6 ;
@@ -1164,12 +1164,12 @@
 }
 else
 goto fail6 ;
-t_23 = t;
-t = (ATerm) ATmakeAppl(sym_ConstrDec_2, (ATerm)ATmakeAppl(sym_ConstrDecHead_5, p_23, term1, q_23, r_23, term1), (ATerm) ATmakeAppl(sym_ConstrBody_2, term1, s_23));
-goto label54 ;
+v_23 = t;
+t = (ATerm) ATmakeAppl(sym_ConstrDec_2, (ATerm)ATmakeAppl(sym_ConstrDecHead_5, r_23, term1, s_23, t_23, term1), (ATerm) ATmakeAppl(sym_ConstrBody_2, term1, u_23));
+goto label55 ;
 }
 }
-label54 :
+label55 :
 ;
 }
 __tracing_table[--__tracing_table_counter] = NULL;
@@ -1183,36 +1183,36 @@
 __tracing_table[__tracing_table_counter++] = "RewritePrimitive_0_0";
 sl_decl(sl);
 {
-ATerm trm139 = t;
-ATerm o_23 = NULL;
+ATerm trm141 = t;
+ATerm q_23 = NULL;
 if(match_cons(t, sym_PrimitiveType_1))
 {
-ATerm trm140 = ATgetArgument(t, 0);
-if(!((ATgetSymbol(trm140) == ATmakeSymbol("int", 0, ATtrue))))
-goto label53 ;
+ATerm trm142 = ATgetArgument(t, 0);
+if(!((ATgetSymbol(trm142) == ATmakeSymbol("int", 0, ATtrue))))
+goto label54 ;
 }
 else
+goto label54 ;
+q_23 = t;
+t = term19;
 goto label53 ;
-o_23 = t;
-t = term19;
-goto label52 ;
-label53 :
-t = trm139;
+label54 :
+t = trm141;
 {
-ATerm n_23 = NULL;
+ATerm p_23 = NULL;
 if(match_cons(t, sym_PrimitiveType_1))
 {
-ATerm trm141 = ATgetArgument(t, 0);
-if(!((ATgetSymbol(trm141) == ATmakeSymbol("void", 0, ATtrue))))
+ATerm trm143 = ATgetArgument(t, 0);
+if(!((ATgetSymbol(trm143) == ATmakeSymbol("void", 0, ATtrue))))
 goto fail5 ;
 }
 else
 goto fail5 ;
-n_23 = t;
+p_23 = t;
 t = term21;
-goto label52 ;
+goto label53 ;
 }
-label52 :
+label53 :
 ;
 }
 __tracing_table[--__tracing_table_counter] = NULL;
@@ -1226,72 +1226,72 @@
 __tracing_table[__tracing_table_counter++] = "Import_0_0";
 sl_decl(sl);
 {
-ATerm trm133 = t;
-ATerm k_23 = NULL,l_23 = NULL,m_23 = NULL;
+ATerm trm135 = t;
+ATerm m_23 = NULL,n_23 = NULL,o_23 = NULL;
 if(match_cons(t, sym_QualifiedName_2))
 {
-k_23 = ATgetArgument(t, 0);
-l_23 = ATgetArgument(t, 1);
+m_23 = ATgetArgument(t, 0);
+n_23 = ATgetArgument(t, 1);
 }
 else
+goto label51 ;
+o_23 = t;
+t = (ATerm) ATmakeAppl(sym_PackageOrTypeName_2, m_23, n_23);
 goto label50 ;
-m_23 = t;
-t = (ATerm) ATmakeAppl(sym_PackageOrTypeName_2, k_23, l_23);
-goto label49 ;
-label50 :
-t = trm133;
+label51 :
+t = trm135;
 {
-ATerm trm134 = t;
-ATerm h_23 = NULL,i_23 = NULL,j_23 = NULL;
+ATerm trm136 = t;
+ATerm j_23 = NULL,k_23 = NULL,l_23 = NULL;
 if(match_cons(t, sym_PackageOrTypeName_2))
 {
-ATerm trm135 = ATgetArgument(t, 0);
-if(match_cons(trm135, sym_Id_1))
+ATerm trm137 = ATgetArgument(t, 0);
+if(match_cons(trm137, sym_Id_1))
 {
-h_23 = ATgetArgument(trm135, 0);
+j_23 = ATgetArgument(trm137, 0);
 }
 else
-goto label51 ;
-i_23 = ATgetArgument(t, 1);
+goto label52 ;
+k_23 = ATgetArgument(t, 1);
 }
 else
-goto label51 ;
-j_23 = t;
-t = (ATerm) ATmakeAppl(sym_PackageOrTypeName_2, (ATerm)ATmakeAppl(sym_PackageOrTypeName_1, (ATerm) ATmakeAppl(sym_Id_1, h_23)), i_23);
-goto label49 ;
-label51 :
-t = trm134;

(1315 diff lines omitted)


From mdjonge at xs4all.nl  Mon Jul  6 16:18:22 2009
From: mdjonge at xs4all.nl (Maartje de Jonge)
Date: Mon, 06 Jul 2009 14:18:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19634 - MaartjeDeJonge
	- in sglr-recovery/trunk/Evaluation_Recovery:
	Correct_Files/development_files Error_Files/development_files
Message-ID: <200907061416.n66EGkVO002181@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-06 14:18:21 +0000 (Mon, 06 Jul 2009)
New Revision: 19634

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19634&view=rev

Modified:
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/multipleErrors.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/twoSeparatedErrors.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/multipleErrors.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/twoSeparatedErrors.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/unclosedMethod.java

Log:
some corrections

Changes:

Modified: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/multipleErrors.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/multipleErrors.java	2009-07-06 13:50:13 UTC (rev 19633)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/multipleErrors.java	2009-07-06 14:18:21 UTC (rev 19634)
@@ -9,10 +9,10 @@
      return corrInt;
   }
   
-  private int correctMethod2(){
+  private int method2(){
       corr2();
       corr2();
-      int corrInt=1;
+      int corrInt=bla();
       return corrInt;  }
 
 

Modified: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/twoSeparatedErrors.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/twoSeparatedErrors.java	2009-07-06 13:50:13 UTC (rev 19633)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/twoSeparatedErrors.java	2009-07-06 14:18:21 UTC (rev 19634)
@@ -20,7 +20,7 @@
       int j;
       bla3();
   }
-
+  
   private int correctMethod2(){
     corr2();
     corr2();
@@ -29,6 +29,10 @@
     int corrInt=1;
     return corrInt;
   }
+  
+  private int corr(){
+      return 5;
+  }
 
   private int ErrorMissingClosing(){
      if(bla1()){

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/multipleErrors.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/multipleErrors.java	2009-07-06 13:50:13 UTC (rev 19633)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/multipleErrors.java	2009-07-06 14:18:21 UTC (rev 19634)
@@ -10,17 +10,14 @@
     return corrInt;
   }
 
-  private int correctMethod2()
+  private int method2()
   { 
     corr2();
-    corr2();
-    int corrInt = 1;
+    $ corr2()? %% -;
+    int corrInt = bla(();
     return corrInt;
   }
   
-  # int & *$
-  !kk& dds #$ ~ss 
-
   private int correctMethod3()
   { 
     corr2();

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/twoSeparatedErrors.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/twoSeparatedErrors.java	2009-07-06 13:50:13 UTC (rev 19633)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/twoSeparatedErrors.java	2009-07-06 14:18:21 UTC (rev 19634)
@@ -33,6 +33,10 @@
     int corrInt = 1;
     return corrInt;
   }
+  
+  private int corr(){
+      return 5;
+  }
 
   private int ErrorMissingClosing()
   { 

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/unclosedMethod.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/unclosedMethod.java	2009-07-06 13:50:13 UTC (rev 19633)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/unclosedMethod.java	2009-07-06 14:18:21 UTC (rev 19634)
@@ -8,8 +8,10 @@
 
   private int UnclosedMethod()
   { 
-    int corrLine1;
-    corrLine2(); /*  } */
+      if(true){
+         int corrLine1;
+         corrLine2(); /*  } */
+  }
 
   private int correctMethod2()
   { 



From mdjonge at xs4all.nl  Mon Jul  6 16:34:23 2009
From: mdjonge at xs4all.nl (Maartje de Jonge)
Date: Mon, 06 Jul 2009 14:34:23 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19635 - MaartjeDeJonge
	- sglr-recovery/trunk/Evaluation_Recovery/Language_Files
Message-ID: <200907061432.n66EWmjO002293@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-06 14:34:23 +0000 (Mon, 06 Jul 2009)
New Revision: 19635

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19635&view=rev

Removed:
   sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtToJava15
   sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtToJava15.c
   sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtToJava15.dep
   sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtToJava15.lo

Log:
remove generated files from svn

Changes (first 1000 lines of the diffs):

Deleted: sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtToJava15
===================================================================
(Binary files differ)

Deleted: sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtToJava15.c
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtToJava15.c	2009-07-06 14:18:21 UTC (rev 19634)
+++ sglr-recovery/trunk/Evaluation_Recovery/Language_Files/JdtToJava15.c	2009-07-06 14:34:23 UTC (rev 19635)
@@ -1,2780 +0,0 @@
-#include <srts/stratego.h>
-#include <stratego-lib/stratego-lib.h>
-void init_constructors (void)
-{
-}
-static Symbol sym__2;
-static Symbol sym_Id_1;
-static Symbol sym_Public_0;
-static Symbol sym_Private_0;
-static Symbol sym_Static_0;
-static Symbol sym_Deci_1;
-static Symbol sym_Bool_1;
-static Symbol sym_True_0;
-static Symbol sym_False_0;
-static Symbol sym_String_1;
-static Symbol sym_Chars_1;
-static Symbol sym_Boolean_0;
-static Symbol sym_Int_0;
-static Symbol sym_PackageName_1;
-static Symbol sym_TypeName_1;
-static Symbol sym_TypeName_2;
-static Symbol sym_ExprName_1;
-static Symbol sym_MethodName_1;
-static Symbol sym_PackageOrTypeName_1;
-static Symbol sym_PackageOrTypeName_2;
-static Symbol sym_ClassOrInterfaceType_2;
-static Symbol sym_ClassType_2;
-static Symbol sym_Lit_1;
-static Symbol sym_NewInstance_4;
-static Symbol sym_Invoke_2;
-static Symbol sym_PostIncr_1;
-static Symbol sym_Not_1;
-static Symbol sym_Plus_2;
-static Symbol sym_Lt_2;
-static Symbol sym_Gt_2;
-static Symbol sym_LtEq_2;
-static Symbol sym_GtEq_2;
-static Symbol sym_Eq_2;
-static Symbol sym_NotEq_2;
-static Symbol sym_LazyAnd_2;
-static Symbol sym_LazyOr_2;
-static Symbol sym_Cond_3;
-static Symbol sym_Assign_2;
-static Symbol sym_FieldDec_3;
-static Symbol sym_VarDec_1;
-static Symbol sym_VarDec_2;
-static Symbol sym_LocalVarDecStm_1;
-static Symbol sym_LocalVarDec_3;
-static Symbol sym_If_2;
-static Symbol sym_If_3;
-static Symbol sym_Switch_2;
-static Symbol sym_While_2;
-static Symbol sym_DoWhile_2;
-static Symbol sym_For_4;
-static Symbol sym_Break_1;
-static Symbol sym_Return_1;
-static Symbol sym_Throw_1;
-static Symbol sym_Try_2;
-static Symbol sym_ExprStm_1;
-static Symbol sym_SwitchBlock_2;
-static Symbol sym_SwitchGroup_2;
-static Symbol sym_Case_1;
-static Symbol sym_Catch_2;
-static Symbol sym_Block_1;
-static Symbol sym_MethodDec_2;
-static Symbol sym_MethodDecHead_6;
-static Symbol sym_Void_0;
-static Symbol sym_Param_3;
-static Symbol sym_ThrowsDec_1;
-static Symbol sym_InstanceInit_1;
-static Symbol sym_ConstrDec_2;
-static Symbol sym_ConstrDecHead_5;
-static Symbol sym_ConstrBody_2;
-static Symbol sym_EnumDecHead_3;
-static Symbol sym_EnumBody_2;
-static Symbol sym_EnumConst_3;
-static Symbol sym_ClassDec_2;
-static Symbol sym_ClassBody_1;
-static Symbol sym_ClassDecHead_5;
-static Symbol sym_Method_1;
-static Symbol sym_Method_3;
-static Symbol sym_PackageDec_2;
-static Symbol sym_TypeImportDec_1;
-static Symbol sym_Nil_0;
-static Symbol sym_Cons_2;
-static Symbol sym_None_0;
-static Symbol sym_Some_1;
-static Symbol sym_EmptyStatement_0;
-static Symbol sym_BreakStatement_1;
-static Symbol sym_SwitchCase_1;
-static Symbol sym_SwitchStatement_2;
-static Symbol sym_ThrowStatement_1;
-static Symbol sym_ParenthesizedExpression_1;
-static Symbol sym_ConditionalExpression_3;
-static Symbol sym_CatchClause_2;
-static Symbol sym_TryStatement_3;
-static Symbol sym_DoStatement_2;
-static Symbol sym_AnonymousClassDeclaration_1;
-static Symbol sym_ClassType_1;
-static Symbol sym_ClassInstanceCreation_4;
-static Symbol sym_PostfixExpressionOperator_1;
-static Symbol sym_PostfixExpression_2;
-static Symbol sym_ForStatement_4;
-static Symbol sym_VariableDeclarationExpression_3;
-static Symbol sym_Initializer_1;
-static Symbol sym_WhileStatement_2;
-static Symbol sym_FieldDeclaration_4;
-static Symbol sym_PrefixExpressionOperator_1;
-static Symbol sym_PrefixExpression_2;
-static Symbol sym_InfixExpression_4;
-static Symbol sym_IfStatement_3;
-static Symbol sym_MethodInvocation_4;
-static Symbol sym_VariableDeclarationFragment_3;
-static Symbol sym_VariableDeclarationStatement_3;
-static Symbol sym_AssignmentOperator_1;
-static Symbol sym_Assignment_3;
-static Symbol sym_ReturnStatement_1;
-static Symbol sym_ExpressionStatement_1;
-static Symbol sym_BooleanLiteral_1;
-static Symbol sym_StringLiteral_1;
-static Symbol sym_NumberLiteral_1;
-static Symbol sym_SingleVariableDeclaration_5;
-static Symbol sym_SimpleType_1;
-static Symbol sym_ModifierKeyword_1;
-static Symbol sym_Modifier_1;
-static Symbol sym_PrimitiveType_1;
-static Symbol sym_MethodDeclaration_8;
-static Symbol sym_QualifiedName_2;
-static Symbol sym_ImportDeclaration_3;
-static Symbol sym_PackageDeclaration_3;
-static Symbol sym_TypeDeclaration_8;
-static Symbol sym_SimpleName_1;
-static void init_module_constructors (void)
-{
-sym__2 = ATmakeSymbol("", 2, ATfalse);
-ATprotectSymbol(sym__2);
-sym_Id_1 = ATmakeSymbol("Id", 1, ATfalse);
-ATprotectSymbol(sym_Id_1);
-sym_Public_0 = ATmakeSymbol("Public", 0, ATfalse);
-ATprotectSymbol(sym_Public_0);
-sym_Private_0 = ATmakeSymbol("Private", 0, ATfalse);
-ATprotectSymbol(sym_Private_0);
-sym_Static_0 = ATmakeSymbol("Static", 0, ATfalse);
-ATprotectSymbol(sym_Static_0);
-sym_Deci_1 = ATmakeSymbol("Deci", 1, ATfalse);
-ATprotectSymbol(sym_Deci_1);
-sym_Bool_1 = ATmakeSymbol("Bool", 1, ATfalse);
-ATprotectSymbol(sym_Bool_1);
-sym_True_0 = ATmakeSymbol("True", 0, ATfalse);
-ATprotectSymbol(sym_True_0);
-sym_False_0 = ATmakeSymbol("False", 0, ATfalse);
-ATprotectSymbol(sym_False_0);
-sym_String_1 = ATmakeSymbol("String", 1, ATfalse);
-ATprotectSymbol(sym_String_1);
-sym_Chars_1 = ATmakeSymbol("Chars", 1, ATfalse);
-ATprotectSymbol(sym_Chars_1);
-sym_Boolean_0 = ATmakeSymbol("Boolean", 0, ATfalse);
-ATprotectSymbol(sym_Boolean_0);
-sym_Int_0 = ATmakeSymbol("Int", 0, ATfalse);
-ATprotectSymbol(sym_Int_0);
-sym_PackageName_1 = ATmakeSymbol("PackageName", 1, ATfalse);
-ATprotectSymbol(sym_PackageName_1);
-sym_TypeName_1 = ATmakeSymbol("TypeName", 1, ATfalse);
-ATprotectSymbol(sym_TypeName_1);
-sym_TypeName_2 = ATmakeSymbol("TypeName", 2, ATfalse);
-ATprotectSymbol(sym_TypeName_2);
-sym_ExprName_1 = ATmakeSymbol("ExprName", 1, ATfalse);
-ATprotectSymbol(sym_ExprName_1);
-sym_MethodName_1 = ATmakeSymbol("MethodName", 1, ATfalse);
-ATprotectSymbol(sym_MethodName_1);
-sym_PackageOrTypeName_1 = ATmakeSymbol("PackageOrTypeName", 1, ATfalse);
-ATprotectSymbol(sym_PackageOrTypeName_1);
-sym_PackageOrTypeName_2 = ATmakeSymbol("PackageOrTypeName", 2, ATfalse);
-ATprotectSymbol(sym_PackageOrTypeName_2);
-sym_ClassOrInterfaceType_2 = ATmakeSymbol("ClassOrInterfaceType", 2, ATfalse);
-ATprotectSymbol(sym_ClassOrInterfaceType_2);
-sym_ClassType_2 = ATmakeSymbol("ClassType", 2, ATfalse);
-ATprotectSymbol(sym_ClassType_2);
-sym_Lit_1 = ATmakeSymbol("Lit", 1, ATfalse);
-ATprotectSymbol(sym_Lit_1);
-sym_NewInstance_4 = ATmakeSymbol("NewInstance", 4, ATfalse);
-ATprotectSymbol(sym_NewInstance_4);
-sym_Invoke_2 = ATmakeSymbol("Invoke", 2, ATfalse);
-ATprotectSymbol(sym_Invoke_2);
-sym_PostIncr_1 = ATmakeSymbol("PostIncr", 1, ATfalse);
-ATprotectSymbol(sym_PostIncr_1);
-sym_Not_1 = ATmakeSymbol("Not", 1, ATfalse);
-ATprotectSymbol(sym_Not_1);
-sym_Plus_2 = ATmakeSymbol("Plus", 2, ATfalse);
-ATprotectSymbol(sym_Plus_2);
-sym_Lt_2 = ATmakeSymbol("Lt", 2, ATfalse);
-ATprotectSymbol(sym_Lt_2);
-sym_Gt_2 = ATmakeSymbol("Gt", 2, ATfalse);
-ATprotectSymbol(sym_Gt_2);
-sym_LtEq_2 = ATmakeSymbol("LtEq", 2, ATfalse);
-ATprotectSymbol(sym_LtEq_2);
-sym_GtEq_2 = ATmakeSymbol("GtEq", 2, ATfalse);
-ATprotectSymbol(sym_GtEq_2);
-sym_Eq_2 = ATmakeSymbol("Eq", 2, ATfalse);
-ATprotectSymbol(sym_Eq_2);
-sym_NotEq_2 = ATmakeSymbol("NotEq", 2, ATfalse);
-ATprotectSymbol(sym_NotEq_2);
-sym_LazyAnd_2 = ATmakeSymbol("LazyAnd", 2, ATfalse);
-ATprotectSymbol(sym_LazyAnd_2);
-sym_LazyOr_2 = ATmakeSymbol("LazyOr", 2, ATfalse);
-ATprotectSymbol(sym_LazyOr_2);
-sym_Cond_3 = ATmakeSymbol("Cond", 3, ATfalse);
-ATprotectSymbol(sym_Cond_3);
-sym_Assign_2 = ATmakeSymbol("Assign", 2, ATfalse);
-ATprotectSymbol(sym_Assign_2);
-sym_FieldDec_3 = ATmakeSymbol("FieldDec", 3, ATfalse);
-ATprotectSymbol(sym_FieldDec_3);
-sym_VarDec_1 = ATmakeSymbol("VarDec", 1, ATfalse);
-ATprotectSymbol(sym_VarDec_1);
-sym_VarDec_2 = ATmakeSymbol("VarDec", 2, ATfalse);
-ATprotectSymbol(sym_VarDec_2);
-sym_LocalVarDecStm_1 = ATmakeSymbol("LocalVarDecStm", 1, ATfalse);
-ATprotectSymbol(sym_LocalVarDecStm_1);
-sym_LocalVarDec_3 = ATmakeSymbol("LocalVarDec", 3, ATfalse);
-ATprotectSymbol(sym_LocalVarDec_3);
-sym_If_2 = ATmakeSymbol("If", 2, ATfalse);
-ATprotectSymbol(sym_If_2);
-sym_If_3 = ATmakeSymbol("If", 3, ATfalse);
-ATprotectSymbol(sym_If_3);
-sym_Switch_2 = ATmakeSymbol("Switch", 2, ATfalse);
-ATprotectSymbol(sym_Switch_2);
-sym_While_2 = ATmakeSymbol("While", 2, ATfalse);
-ATprotectSymbol(sym_While_2);
-sym_DoWhile_2 = ATmakeSymbol("DoWhile", 2, ATfalse);
-ATprotectSymbol(sym_DoWhile_2);
-sym_For_4 = ATmakeSymbol("For", 4, ATfalse);
-ATprotectSymbol(sym_For_4);
-sym_Break_1 = ATmakeSymbol("Break", 1, ATfalse);
-ATprotectSymbol(sym_Break_1);
-sym_Return_1 = ATmakeSymbol("Return", 1, ATfalse);
-ATprotectSymbol(sym_Return_1);
-sym_Throw_1 = ATmakeSymbol("Throw", 1, ATfalse);
-ATprotectSymbol(sym_Throw_1);
-sym_Try_2 = ATmakeSymbol("Try", 2, ATfalse);
-ATprotectSymbol(sym_Try_2);
-sym_ExprStm_1 = ATmakeSymbol("ExprStm", 1, ATfalse);
-ATprotectSymbol(sym_ExprStm_1);
-sym_SwitchBlock_2 = ATmakeSymbol("SwitchBlock", 2, ATfalse);
-ATprotectSymbol(sym_SwitchBlock_2);
-sym_SwitchGroup_2 = ATmakeSymbol("SwitchGroup", 2, ATfalse);
-ATprotectSymbol(sym_SwitchGroup_2);
-sym_Case_1 = ATmakeSymbol("Case", 1, ATfalse);
-ATprotectSymbol(sym_Case_1);
-sym_Catch_2 = ATmakeSymbol("Catch", 2, ATfalse);
-ATprotectSymbol(sym_Catch_2);
-sym_Block_1 = ATmakeSymbol("Block", 1, ATfalse);
-ATprotectSymbol(sym_Block_1);
-sym_MethodDec_2 = ATmakeSymbol("MethodDec", 2, ATfalse);
-ATprotectSymbol(sym_MethodDec_2);
-sym_MethodDecHead_6 = ATmakeSymbol("MethodDecHead", 6, ATfalse);
-ATprotectSymbol(sym_MethodDecHead_6);
-sym_Void_0 = ATmakeSymbol("Void", 0, ATfalse);
-ATprotectSymbol(sym_Void_0);
-sym_Param_3 = ATmakeSymbol("Param", 3, ATfalse);
-ATprotectSymbol(sym_Param_3);
-sym_ThrowsDec_1 = ATmakeSymbol("ThrowsDec", 1, ATfalse);
-ATprotectSymbol(sym_ThrowsDec_1);
-sym_InstanceInit_1 = ATmakeSymbol("InstanceInit", 1, ATfalse);
-ATprotectSymbol(sym_InstanceInit_1);
-sym_ConstrDec_2 = ATmakeSymbol("ConstrDec", 2, ATfalse);
-ATprotectSymbol(sym_ConstrDec_2);
-sym_ConstrDecHead_5 = ATmakeSymbol("ConstrDecHead", 5, ATfalse);
-ATprotectSymbol(sym_ConstrDecHead_5);
-sym_ConstrBody_2 = ATmakeSymbol("ConstrBody", 2, ATfalse);
-ATprotectSymbol(sym_ConstrBody_2);
-sym_EnumDecHead_3 = ATmakeSymbol("EnumDecHead", 3, ATfalse);
-ATprotectSymbol(sym_EnumDecHead_3);
-sym_EnumBody_2 = ATmakeSymbol("EnumBody", 2, ATfalse);
-ATprotectSymbol(sym_EnumBody_2);
-sym_EnumConst_3 = ATmakeSymbol("EnumConst", 3, ATfalse);
-ATprotectSymbol(sym_EnumConst_3);
-sym_ClassDec_2 = ATmakeSymbol("ClassDec", 2, ATfalse);
-ATprotectSymbol(sym_ClassDec_2);
-sym_ClassBody_1 = ATmakeSymbol("ClassBody", 1, ATfalse);
-ATprotectSymbol(sym_ClassBody_1);
-sym_ClassDecHead_5 = ATmakeSymbol("ClassDecHead", 5, ATfalse);
-ATprotectSymbol(sym_ClassDecHead_5);
-sym_Method_1 = ATmakeSymbol("Method", 1, ATfalse);
-ATprotectSymbol(sym_Method_1);
-sym_Method_3 = ATmakeSymbol("Method", 3, ATfalse);
-ATprotectSymbol(sym_Method_3);
-sym_PackageDec_2 = ATmakeSymbol("PackageDec", 2, ATfalse);
-ATprotectSymbol(sym_PackageDec_2);
-sym_TypeImportDec_1 = ATmakeSymbol("TypeImportDec", 1, ATfalse);
-ATprotectSymbol(sym_TypeImportDec_1);
-sym_Nil_0 = ATmakeSymbol("Nil", 0, ATfalse);
-ATprotectSymbol(sym_Nil_0);
-sym_Cons_2 = ATmakeSymbol("Cons", 2, ATfalse);
-ATprotectSymbol(sym_Cons_2);
-sym_None_0 = ATmakeSymbol("None", 0, ATfalse);
-ATprotectSymbol(sym_None_0);
-sym_Some_1 = ATmakeSymbol("Some", 1, ATfalse);
-ATprotectSymbol(sym_Some_1);
-sym_EmptyStatement_0 = ATmakeSymbol("EmptyStatement", 0, ATfalse);
-ATprotectSymbol(sym_EmptyStatement_0);
-sym_BreakStatement_1 = ATmakeSymbol("BreakStatement", 1, ATfalse);
-ATprotectSymbol(sym_BreakStatement_1);
-sym_SwitchCase_1 = ATmakeSymbol("SwitchCase", 1, ATfalse);
-ATprotectSymbol(sym_SwitchCase_1);
-sym_SwitchStatement_2 = ATmakeSymbol("SwitchStatement", 2, ATfalse);
-ATprotectSymbol(sym_SwitchStatement_2);
-sym_ThrowStatement_1 = ATmakeSymbol("ThrowStatement", 1, ATfalse);
-ATprotectSymbol(sym_ThrowStatement_1);
-sym_ParenthesizedExpression_1 = ATmakeSymbol("ParenthesizedExpression", 1, ATfalse);
-ATprotectSymbol(sym_ParenthesizedExpression_1);
-sym_ConditionalExpression_3 = ATmakeSymbol("ConditionalExpression", 3, ATfalse);
-ATprotectSymbol(sym_ConditionalExpression_3);
-sym_CatchClause_2 = ATmakeSymbol("CatchClause", 2, ATfalse);
-ATprotectSymbol(sym_CatchClause_2);
-sym_TryStatement_3 = ATmakeSymbol("TryStatement", 3, ATfalse);
-ATprotectSymbol(sym_TryStatement_3);
-sym_DoStatement_2 = ATmakeSymbol("DoStatement", 2, ATfalse);
-ATprotectSymbol(sym_DoStatement_2);
-sym_AnonymousClassDeclaration_1 = ATmakeSymbol("AnonymousClassDeclaration", 1, ATfalse);
-ATprotectSymbol(sym_AnonymousClassDeclaration_1);
-sym_ClassType_1 = ATmakeSymbol("ClassType", 1, ATfalse);
-ATprotectSymbol(sym_ClassType_1);
-sym_ClassInstanceCreation_4 = ATmakeSymbol("ClassInstanceCreation", 4, ATfalse);
-ATprotectSymbol(sym_ClassInstanceCreation_4);
-sym_PostfixExpressionOperator_1 = ATmakeSymbol("PostfixExpressionOperator", 1, ATfalse);
-ATprotectSymbol(sym_PostfixExpressionOperator_1);
-sym_PostfixExpression_2 = ATmakeSymbol("PostfixExpression", 2, ATfalse);
-ATprotectSymbol(sym_PostfixExpression_2);
-sym_ForStatement_4 = ATmakeSymbol("ForStatement", 4, ATfalse);
-ATprotectSymbol(sym_ForStatement_4);
-sym_VariableDeclarationExpression_3 = ATmakeSymbol("VariableDeclarationExpression", 3, ATfalse);
-ATprotectSymbol(sym_VariableDeclarationExpression_3);
-sym_Initializer_1 = ATmakeSymbol("Initializer", 1, ATfalse);
-ATprotectSymbol(sym_Initializer_1);
-sym_WhileStatement_2 = ATmakeSymbol("WhileStatement", 2, ATfalse);
-ATprotectSymbol(sym_WhileStatement_2);
-sym_FieldDeclaration_4 = ATmakeSymbol("FieldDeclaration", 4, ATfalse);
-ATprotectSymbol(sym_FieldDeclaration_4);
-sym_PrefixExpressionOperator_1 = ATmakeSymbol("PrefixExpressionOperator", 1, ATfalse);
-ATprotectSymbol(sym_PrefixExpressionOperator_1);
-sym_PrefixExpression_2 = ATmakeSymbol("PrefixExpression", 2, ATfalse);
-ATprotectSymbol(sym_PrefixExpression_2);
-sym_InfixExpression_4 = ATmakeSymbol("InfixExpression", 4, ATfalse);
-ATprotectSymbol(sym_InfixExpression_4);
-sym_IfStatement_3 = ATmakeSymbol("IfStatement", 3, ATfalse);
-ATprotectSymbol(sym_IfStatement_3);
-sym_MethodInvocation_4 = ATmakeSymbol("MethodInvocation", 4, ATfalse);
-ATprotectSymbol(sym_MethodInvocation_4);
-sym_VariableDeclarationFragment_3 = ATmakeSymbol("VariableDeclarationFragment", 3, ATfalse);
-ATprotectSymbol(sym_VariableDeclarationFragment_3);
-sym_VariableDeclarationStatement_3 = ATmakeSymbol("VariableDeclarationStatement", 3, ATfalse);
-ATprotectSymbol(sym_VariableDeclarationStatement_3);
-sym_AssignmentOperator_1 = ATmakeSymbol("AssignmentOperator", 1, ATfalse);
-ATprotectSymbol(sym_AssignmentOperator_1);
-sym_Assignment_3 = ATmakeSymbol("Assignment", 3, ATfalse);
-ATprotectSymbol(sym_Assignment_3);
-sym_ReturnStatement_1 = ATmakeSymbol("ReturnStatement", 1, ATfalse);
-ATprotectSymbol(sym_ReturnStatement_1);
-sym_ExpressionStatement_1 = ATmakeSymbol("ExpressionStatement", 1, ATfalse);
-ATprotectSymbol(sym_ExpressionStatement_1);
-sym_BooleanLiteral_1 = ATmakeSymbol("BooleanLiteral", 1, ATfalse);
-ATprotectSymbol(sym_BooleanLiteral_1);
-sym_StringLiteral_1 = ATmakeSymbol("StringLiteral", 1, ATfalse);
-ATprotectSymbol(sym_StringLiteral_1);
-sym_NumberLiteral_1 = ATmakeSymbol("NumberLiteral", 1, ATfalse);
-ATprotectSymbol(sym_NumberLiteral_1);
-sym_SingleVariableDeclaration_5 = ATmakeSymbol("SingleVariableDeclaration", 5, ATfalse);
-ATprotectSymbol(sym_SingleVariableDeclaration_5);
-sym_SimpleType_1 = ATmakeSymbol("SimpleType", 1, ATfalse);
-ATprotectSymbol(sym_SimpleType_1);
-sym_ModifierKeyword_1 = ATmakeSymbol("ModifierKeyword", 1, ATfalse);
-ATprotectSymbol(sym_ModifierKeyword_1);
-sym_Modifier_1 = ATmakeSymbol("Modifier", 1, ATfalse);
-ATprotectSymbol(sym_Modifier_1);
-sym_PrimitiveType_1 = ATmakeSymbol("PrimitiveType", 1, ATfalse);
-ATprotectSymbol(sym_PrimitiveType_1);
-sym_MethodDeclaration_8 = ATmakeSymbol("MethodDeclaration", 8, ATfalse);
-ATprotectSymbol(sym_MethodDeclaration_8);
-sym_QualifiedName_2 = ATmakeSymbol("QualifiedName", 2, ATfalse);
-ATprotectSymbol(sym_QualifiedName_2);
-sym_ImportDeclaration_3 = ATmakeSymbol("ImportDeclaration", 3, ATfalse);
-ATprotectSymbol(sym_ImportDeclaration_3);
-sym_PackageDeclaration_3 = ATmakeSymbol("PackageDeclaration", 3, ATfalse);
-ATprotectSymbol(sym_PackageDeclaration_3);
-sym_TypeDeclaration_8 = ATmakeSymbol("TypeDeclaration", 8, ATfalse);
-ATprotectSymbol(sym_TypeDeclaration_8);
-sym_SimpleName_1 = ATmakeSymbol("SimpleName", 1, ATfalse);
-ATprotectSymbol(sym_SimpleName_1);
-}
-static ATerm term27;
-static ATerm term26;
-static ATerm term25;
-static ATerm term24;
-static ATerm term23;
-static ATerm term22;
-static ATerm term21;
-static ATerm term20;
-static ATerm term19;
-static ATerm term18;
-static ATerm term17;
-static ATerm term16;
-static ATerm term15;
-static ATerm term14;
-static ATerm term13;
-static ATerm term12;
-static ATerm term11;
-static ATerm term10;
-static ATerm term9;
-static ATerm term8;
-static ATerm term7;
-static ATerm term6;
-static ATerm term5;
-static ATerm term4;
-static ATerm term3;
-static ATerm term2;
-static ATerm term1;
-static ATerm term0;
-static void init_module_constant_terms (void)
-{
-ATprotect(&(term0));
-term0 = (ATerm) ATmakeAppl(sym_None_0);
-ATprotect(&(term1));
-term1 = term0;
-ATprotect(&(term2));
-term2 = (ATerm) ATmakeAppl(sym_True_0);
-ATprotect(&(term3));
-term3 = term2;
-ATprotect(&(term4));
-term4 = (ATerm) ATmakeAppl(sym_Bool_1, term3);
-ATprotect(&(term5));
-term5 = term4;
-ATprotect(&(term6));
-term6 = (ATerm) ATmakeAppl(sym_Lit_1, term5);
-ATprotect(&(term7));
-term7 = term6;
-ATprotect(&(term8));
-term8 = (ATerm) ATmakeAppl(sym_False_0);
-ATprotect(&(term9));
-term9 = term8;
-ATprotect(&(term10));
-term10 = (ATerm) ATmakeAppl(sym_Bool_1, term9);
-ATprotect(&(term11));
-term11 = term10;
-ATprotect(&(term12));
-term12 = (ATerm) ATmakeAppl(sym_Lit_1, term11);
-ATprotect(&(term13));
-term13 = term12;
-ATprotect(&(term14));
-term14 = (ATerm) ATmakeAppl(sym_Boolean_0);
-ATprotect(&(term15));
-term15 = term14;
-ATprotect(&(term16));
-term16 = (ATerm) ATmakeAppl(sym_Block_1, (ATerm) ATempty);
-ATprotect(&(term17));
-term17 = term16;
-ATprotect(&(term18));
-term18 = (ATerm) ATmakeAppl(sym_Int_0);
-ATprotect(&(term19));
-term19 = term18;
-ATprotect(&(term20));
-term20 = (ATerm) ATmakeAppl(sym_Void_0);
-ATprotect(&(term21));
-term21 = term20;
-ATprotect(&(term22));
-term22 = (ATerm) ATmakeAppl(sym_Public_0);
-ATprotect(&(term23));
-term23 = term22;
-ATprotect(&(term24));
-term24 = (ATerm) ATmakeAppl(sym_Private_0);
-ATprotect(&(term25));
-term25 = term24;
-ATprotect(&(term26));
-term26 = (ATerm) ATmakeAppl(sym_Static_0);
-ATprotect(&(term27));
-term27 = term26;
-}
-#include <srts/init-stratego-application.h>
-extern const char * __tracing_table [];
-extern unsigned short __tracing_table_counter;
-ATerm conc_0_0 (StrSL sl, ATerm t);
-ATerm map_1_0 (StrSL sl, StrCL m_91, ATerm t);
-ATerm try_1_0 (StrSL sl, StrCL p_66, ATerm t);
-ATerm topdown_1_0 (StrSL sl, StrCL r_59, ATerm t);
-ATerm outermost_1_0 (StrSL sl, StrCL n_58, ATerm t);
-ATerm io_wrap_1_0 (StrSL sl, StrCL j_50, ATerm t);
-static ATerm lifted8 (StrSL sl, ATerm t);
-ATerm rewriteAst_0_0 (StrSL sl, ATerm t);
-static ATerm lifted4 (StrSL sl, ATerm t);
-static ATerm lifted3 (StrSL sl, ATerm t);
-static ATerm lifted2 (StrSL sl, ATerm t);
-static ATerm lifted7 (StrSL sl, ATerm t);
-static ATerm lifted6 (StrSL sl, ATerm t);
-static ATerm lifted1 (StrSL sl, ATerm t);
-ATerm main_0_0 (StrSL sl, ATerm t);
-ATerm Stm_0_0 (StrSL sl, ATerm t);
-ATerm ModKey_0_0 (StrSL sl, ATerm t);
-ATerm RewriteMethod_0_0 (StrSL sl, ATerm t);
-ATerm RewritePrimitive_0_0 (StrSL sl, ATerm t);
-ATerm Import_0_0 (StrSL sl, ATerm t);
-static ATerm lifted0 (StrSL sl, ATerm t);
-ATerm T_0_0 (StrSL sl, ATerm t);
-ATerm RP_0_0 (StrSL sl, ATerm t);
-ATerm RewriteClass_0_0 (StrSL sl, ATerm t);
-ATerm rewriteAst_0_0 (StrSL sl, ATerm t)
-{
-__tracing_table[__tracing_table_counter++] = "rewriteAst_0_0";
-sl_decl(sl);
-{
-struct str_closure r_173 = { &(lifted8) , &(frame) };
-StrCL lifted8_cl = &(r_173);
-t = outermost_1_0(sl, lifted8_cl, t);
-if((t == NULL))
-goto fail16 ;
-}
-__tracing_table[--__tracing_table_counter] = NULL;
-return(t);
-fail16 :
---__tracing_table_counter;
-return(NULL);
-}
-static ATerm lifted8 (StrSL sl, ATerm t)
-{
-__tracing_table[__tracing_table_counter++] = "lifted8";
-sl_decl(sl);
-{
-ATerm trm171 = t;
-ATerm trm172 = t;
-ATerm trm173 = t;
-ATerm trm174 = t;
-ATerm trm175 = t;
-ATerm trm176 = t;
-ATerm trm177 = t;
-ATerm trm178 = t;
-ATerm trm179 = t;
-ATerm trm180 = t;
-ATerm trm181 = t;
-ATerm trm182 = t;
-t = T_0_0(sl_up(sl), t);
-if((t == NULL))
-goto label87 ;
-goto label86 ;
-label87 :
-t = trm182;
-{
-ATerm s_172 = NULL,t_172 = NULL;
-if(match_cons(t, sym_VarDec_2))
-{
-s_172 = ATgetArgument(t, 0);
-{
-ATerm trm183 = ATgetArgument(t, 1);
-if(!(match_cons(trm183, sym_None_0)))
-goto label85 ;
-}
-}
-else
-goto label85 ;
-t_172 = t;
-t = (ATerm) ATmakeAppl(sym_VarDec_1, s_172);
-goto label86 ;
-}
-label86 :
-;
-goto label84 ;
-label85 :
-t = trm181;
-t = Stm_0_0(sl_up(sl), t);
-if((t == NULL))
-goto label83 ;
-else
-goto label84 ;
-label84 :
-;
-goto label82 ;
-label83 :
-t = trm180;
-{
-ATerm u_172 = NULL,v_172 = NULL;
-if(match_cons(t, sym_NumberLiteral_1))
-{
-u_172 = ATgetArgument(t, 0);
-}
-else
-goto label81 ;
-v_172 = t;
-t = (ATerm) ATmakeAppl(sym_Lit_1, (ATerm) ATmakeAppl(sym_Deci_1, u_172));
-goto label82 ;
-}
-label82 :
-;
-goto label80 ;
-label81 :
-t = trm179;
-{
-ATerm w_172 = NULL,x_172 = NULL,y_172 = NULL,z_172 = NULL;
-if(match_cons(t, sym_SingleVariableDeclaration_5))
-{
-w_172 = ATgetArgument(t, 0);
-x_172 = ATgetArgument(t, 1);
-y_172 = ATgetArgument(t, 2);
-{
-ATerm trm184 = ATgetArgument(t, 3);
-if(!(((ATgetType(trm184) == AT_INT) && (ATgetInt((ATermInt) trm184) == 0))))
-goto label79 ;
-}
-{
-ATerm trm185 = ATgetArgument(t, 4);
-if(!(match_cons(trm185, sym_None_0)))
-goto label79 ;
-}
-}
-else
-goto label79 ;
-z_172 = t;
-t = (ATerm) ATmakeAppl(sym_Param_3, w_172, x_172, y_172);
-goto label80 ;
-}
-label80 :
-;
-goto label78 ;
-label79 :
-t = trm178;
-{
-ATerm a_173 = NULL,b_173 = NULL;
-if(match_cons(t, sym_SimpleType_1))
-{
-a_173 = ATgetArgument(t, 0);
-}
-else
-goto label77 ;
-b_173 = t;
-t = (ATerm) ATmakeAppl(sym_ClassOrInterfaceType_2, (ATerm)ATmakeAppl(sym_TypeName_1, a_173), term1);
-goto label78 ;
-}
-label78 :
-;
-goto label76 ;
-label77 :
-t = trm177;
-t = ModKey_0_0(sl_up(sl), t);
-if((t == NULL))
-goto label75 ;
-else
-goto label76 ;
-label76 :
-;
-goto label74 ;
-label75 :
-t = trm176;
-t = RewritePrimitive_0_0(sl_up(sl), t);
-if((t == NULL))
-goto label73 ;
-else
-goto label74 ;
-label74 :
-;
-goto label72 ;
-label73 :
-t = trm175;
-t = RewriteMethod_0_0(sl_up(sl), t);
-if((t == NULL))
-goto label71 ;
-else
-goto label72 ;
-label72 :
-;
-goto label70 ;
-label71 :
-t = trm174;
-t = Import_0_0(sl_up(sl), t);
-if((t == NULL))
-goto label69 ;
-else
-goto label70 ;
-label70 :
-;
-goto label68 ;
-label69 :
-t = trm173;
-{
-ATerm c_173 = NULL,d_173 = NULL;
-if(match_cons(t, sym_SimpleName_1))
-{
-c_173 = ATgetArgument(t, 0);
-}
-else
-goto label67 ;
-d_173 = t;
-t = (ATerm) ATmakeAppl(sym_Id_1, c_173);
-goto label68 ;
-}
-label68 :
-;
-goto label66 ;
-label67 :
-t = trm172;
-t = RewriteClass_0_0(sl_up(sl), t);
-if((t == NULL))
-goto label65 ;
-else
-goto label66 ;
-label66 :
-;
-goto label64 ;
-label65 :
-t = trm171;
-{
-ATerm e_173 = NULL,f_173 = NULL,g_173 = NULL,i_173 = NULL;
-if(match_cons(t, sym_VariableDeclarationFragment_3))
-{
-f_173 = ATgetArgument(t, 0);
-e_173 = ATgetArgument(t, 1);
-g_173 = ATgetArgument(t, 2);
-}
-else
-goto fail17 ;
-i_173 = t;
-t = (ATerm) ATmakeAppl(sym_VarDec_2, f_173, g_173);
-goto label64 ;
-}
-label64 :
-;
-}
-__tracing_table[--__tracing_table_counter] = NULL;
-return(t);
-fail17 :
---__tracing_table_counter;
-return(NULL);
-}
-ATerm main_0_0 (StrSL sl, ATerm t)
-{
-__tracing_table[__tracing_table_counter++] = "main_0_0";
-sl_decl(sl);
-{
-struct str_closure q_173 = { &(lifted1) , &(frame) };
-StrCL lifted1_cl = &(q_173);
-t = io_wrap_1_0(sl, lifted1_cl, t);
-if((t == NULL))
-goto fail9 ;
-}
-__tracing_table[--__tracing_table_counter] = NULL;
-return(t);
-fail9 :
---__tracing_table_counter;
-return(NULL);
-}
-static ATerm lifted1 (StrSL sl, ATerm t)
-{
-__tracing_table[__tracing_table_counter++] = "lifted1";
-sl_decl(sl);
-{
-struct str_closure l_173 = { &(lifted6) , &(frame) };
-StrCL lifted6_cl = &(l_173);
-struct str_closure m_173 = { &(lifted2) , &(frame) };
-StrCL lifted2_cl = &(m_173);
-t = outermost_1_0(sl_up(sl), lifted2_cl, t);
-if((t == NULL))
-goto fail10 ;
-{
-struct str_closure p_173 = { &(lifted3) , &(frame) };
-StrCL lifted3_cl = &(p_173);
-t = topdown_1_0(sl_up(sl), lifted3_cl, t);
-if((t == NULL))
-goto fail10 ;
-t = rewriteAst_0_0(sl_up(sl), t);
-if((t == NULL))
-goto fail10 ;
-t = topdown_1_0(sl_up(sl), lifted6_cl, t);
-if((t == NULL))
-goto fail10 ;
-}
-}
-__tracing_table[--__tracing_table_counter] = NULL;
-return(t);
-fail10 :
---__tracing_table_counter;
-return(NULL);
-}
-static ATerm lifted3 (StrSL sl, ATerm t)
-{
-__tracing_table[__tracing_table_counter++] = "lifted3";
-sl_decl(sl);
-{
-struct str_closure o_173 = { &(lifted4) , &(frame) };
-StrCL lifted4_cl = &(o_173);
-t = try_1_0(sl_up(sl_up(sl)), lifted4_cl, t);
-if((t == NULL))
-goto fail14 ;
-}
-__tracing_table[--__tracing_table_counter] = NULL;
-return(t);
-fail14 :
---__tracing_table_counter;
-return(NULL);
-}
-static ATerm lifted4 (StrSL sl, ATerm t)
-{
-__tracing_table[__tracing_table_counter++] = "lifted4";
-sl_decl(sl);
-{
-ATerm a_172 = NULL,b_172 = NULL,c_172 = NULL;
-if(match_cons(t, sym_PackageName_1))
-{
-a_172 = ATgetArgument(t, 0);
-}
-else
-goto fail15 ;
-c_172 = t;
-t = a_172;
-{
-struct str_closure n_173 = { &(RP_0_0) , sl_up(sl_up(sl_up(sl))) };
-StrCL lifted5_cl = &(n_173);
-t = outermost_1_0(sl_up(sl_up(sl_up(sl))), lifted5_cl, t);
-if((t == NULL))
-goto fail15 ;
-b_172 = t;
-t = c_172;
-t = (ATerm) ATmakeAppl(sym_PackageName_1, b_172);
-}
-}
-__tracing_table[--__tracing_table_counter] = NULL;
-return(t);
-fail15 :
---__tracing_table_counter;
-return(NULL);
-}
-static ATerm lifted2 (StrSL sl, ATerm t)
-{
-__tracing_table[__tracing_table_counter++] = "lifted2";
-sl_decl(sl);
-{
-ATerm w_171 = NULL,x_171 = NULL,y_171 = NULL,z_171 = NULL;
-if(match_cons(t, sym_PackageDeclaration_3))
-{
-w_171 = ATgetArgument(t, 0);
-x_171 = ATgetArgument(t, 1);
-y_171 = ATgetArgument(t, 2);
-}
-else
-goto fail13 ;
-z_171 = t;
-t = (ATerm) ATmakeAppl(sym_Some_1, (ATerm) ATmakeAppl(sym_PackageDec_2, x_171, (ATerm) ATmakeAppl(sym_PackageName_1, y_171)));
-}
-__tracing_table[--__tracing_table_counter] = NULL;
-return(t);
-fail13 :
---__tracing_table_counter;
-return(NULL);
-}
-static ATerm lifted6 (StrSL sl, ATerm t)
-{
-__tracing_table[__tracing_table_counter++] = "lifted6";
-sl_decl(sl);
-{
-struct str_closure k_173 = { &(lifted7) , &(frame) };
-StrCL lifted7_cl = &(k_173);
-t = try_1_0(sl_up(sl_up(sl)), lifted7_cl, t);
-if((t == NULL))
-goto fail11 ;
-}
-__tracing_table[--__tracing_table_counter] = NULL;
-return(t);
-fail11 :
---__tracing_table_counter;
-return(NULL);
-}
-static ATerm lifted7 (StrSL sl, ATerm t)
-{
-__tracing_table[__tracing_table_counter++] = "lifted7";
-sl_decl(sl);
-{
-ATerm d_172 = NULL,e_172 = NULL,f_172 = NULL,g_172 = NULL;
-if(match_cons(t, sym_VariableDeclarationFragment_3))
-{
-e_172 = ATgetArgument(t, 0);
-d_172 = ATgetArgument(t, 1);
-f_172 = ATgetArgument(t, 2);
-}
-else
-goto fail12 ;
-g_172 = t;
-t = (ATerm) ATmakeAppl(sym_VarDec_2, e_172, f_172);
-}
-__tracing_table[--__tracing_table_counter] = NULL;
-return(t);
-fail12 :
---__tracing_table_counter;
-return(NULL);
-}
-ATerm Stm_0_0 (StrSL sl, ATerm t)
-{
-__tracing_table[__tracing_table_counter++] = "Stm_0_0";
-sl_decl(sl);
-{
-ATerm trm162 = t;
-ATerm f_25 = NULL,g_25 = NULL,h_25 = NULL;
-if(match_cons(t, sym_ExprStm_1))
-{
-ATerm trm163 = ATgetArgument(t, 0);
-if(match_cons(trm163, sym_Assignment_3))
-{
-ATerm trm164 = ATgetArgument(trm163, 0);
-if(match_cons(trm164, sym_AssignmentOperator_1))
-{
-ATerm trm165 = ATgetArgument(trm164, 0);
-if(!((ATgetSymbol(trm165) == ATmakeSymbol("=", 0, ATtrue))))
-goto label62 ;
-}
-else
-goto label62 ;
-f_25 = ATgetArgument(trm163, 1);
-g_25 = ATgetArgument(trm163, 2);
-}
-else
-goto label62 ;
-}
-else
-goto label62 ;
-h_25 = t;
-t = (ATerm) ATmakeAppl(sym_ExprStm_1, (ATerm) ATmakeAppl(sym_Assign_2, (ATerm)ATmakeAppl(sym_ExprName_1, f_25), g_25));
-goto label61 ;
-label62 :
-t = trm162;
-{
-ATerm trm166 = t;
-ATerm a_25 = NULL,b_25 = NULL,c_25 = NULL,d_25 = NULL,e_25 = NULL;
-if(match_cons(t, sym_VariableDeclarationStatement_3))
-{
-a_25 = ATgetArgument(t, 0);
-b_25 = ATgetArgument(t, 1);
-{
-ATerm trm167 = ATgetArgument(t, 2);
-if(((ATgetType(trm167) == AT_LIST) && !(ATisEmpty(trm167))))
-{
-ATerm trm168 = ATgetFirst((ATermList) trm167);
-if(match_cons(trm168, sym_VariableDeclarationFragment_3))
-{
-c_25 = ATgetArgument(trm168, 0);
-{
-ATerm trm169 = ATgetArgument(trm168, 1);
-if(!(((ATgetType(trm169) == AT_INT) && (ATgetInt((ATermInt) trm169) == 0))))
-goto label63 ;
-}
-d_25 = ATgetArgument(trm168, 2);
-}
-else
-goto label63 ;
-{
-ATerm trm170 = (ATerm) ATgetNext((ATermList) trm167);
-if(!(((ATgetType(trm170) == AT_LIST) && ATisEmpty(trm170))))
-goto label63 ;
-}
-}
-else
-goto label63 ;
-}
-}
-else
-goto label63 ;
-e_25 = t;
-t = (ATerm) ATmakeAppl(sym_LocalVarDecStm_1, (ATerm) ATmakeAppl(sym_LocalVarDec_3, a_25, b_25, (ATerm) ATinsert(ATempty, (ATerm) ATmakeAppl(sym_VarDec_2, c_25, d_25))));
-goto label61 ;
-label63 :
-t = trm166;
-{
-ATerm y_24 = NULL,z_24 = NULL;
-if(match_cons(t, sym_ReturnStatement_1))
-{
-y_24 = ATgetArgument(t, 0);
-}
-else
-goto fail8 ;
-z_24 = t;
-t = (ATerm) ATmakeAppl(sym_Return_1, (ATerm) ATmakeAppl(sym_Some_1, y_24));
-goto label61 ;
-}
-}
-label61 :
-;
-}
-__tracing_table[--__tracing_table_counter] = NULL;
-return(t);
-fail8 :
---__tracing_table_counter;
-return(NULL);
-}
-ATerm ModKey_0_0 (StrSL sl, ATerm t)
-{
-__tracing_table[__tracing_table_counter++] = "ModKey_0_0";
-sl_decl(sl);
-{
-ATerm trm154 = t;

(1822 diff lines omitted)


From emma at cs.lth.se  Mon Jul  6 17:50:28 2009
From: emma at cs.lth.se (Emma NilssonNyman)
Date: Mon, 06 Jul 2009 15:50:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19637 -
	EmmaNilssonNyman - in sglr-recovery/trunk/Evaluation_Recovery:
	Correct_Files/development_files Error_Files/development_files src
Message-ID: <200907061548.n66FmrRL003154@proliant.st.ewi.tudelft.nl>

Author: EmmaNilssonNyman
Date: 2009-07-06 15:50:28 +0000 (Mon, 06 Jul 2009)
New Revision: 19637

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19637&view=rev

Added:
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentA.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentB.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentC.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentD.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentE.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentF.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentG.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentA.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentB.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentC.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentD.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentE.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentF.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentG.java
Modified:
   sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java

Log:
new test files


Changes:

Added: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentA.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentA.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentA.java	2009-07-06 15:50:28 UTC (rev 19637)
@@ -0,0 +1,21 @@
+/* 
+ * Correct nonsense program to test indentation
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentB.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentB.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentB.java	2009-07-06 15:50:28 UTC (rev 19637)
@@ -0,0 +1,21 @@
+/* 
+ * Correct nonsense program to test indentation
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentC.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentC.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentC.java	2009-07-06 15:50:28 UTC (rev 19637)
@@ -0,0 +1,21 @@
+/* 
+ * Correct nonsense program to test indentation
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentD.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentD.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentD.java	2009-07-06 15:50:28 UTC (rev 19637)
@@ -0,0 +1,21 @@
+/* 
+ * Correct nonsense program to test indentation
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentE.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentE.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentE.java	2009-07-06 15:50:28 UTC (rev 19637)
@@ -0,0 +1,21 @@
+/* 
+ * Correct nonsense program to test indentation
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentF.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentF.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentF.java	2009-07-06 15:50:28 UTC (rev 19637)
@@ -0,0 +1,21 @@
+/* 
+ * Correct nonsense program to test indentation
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentG.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentG.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentG.java	2009-07-06 15:50:28 UTC (rev 19637)
@@ -0,0 +1,21 @@
+/* 
+ * Correct nonsense program to test indentation
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentA.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentA.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentA.java	2009-07-06 15:50:28 UTC (rev 19637)
@@ -0,0 +1,21 @@
+/* 
+ * Indent test: Adding an error along with some indentation shift of both starting and ending brace
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		//}	
+}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentB.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentB.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentB.java	2009-07-06 15:50:28 UTC (rev 19637)
@@ -0,0 +1,22 @@
+/* 
+ * Testing indentation: Adding error in the middle and shifting the 
+ * indentation level of the enclosing braces of the class
+ */
+	public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else //{
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+	}

Added: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentC.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentC.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentC.java	2009-07-06 15:50:28 UTC (rev 19637)
@@ -0,0 +1,21 @@
+/* 
+ * Testing indentation: inserting an error and shifting one of the braces
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) //{
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+		}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentD.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentD.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentD.java	2009-07-06 15:50:28 UTC (rev 19637)
@@ -0,0 +1,21 @@
+/* 
+ * Testing indentation: inserting an error and shifting one of two otherwise matching braces
+ */
+public class A {
+	public A() {
+		int a = 4//;
+		Object obj = new Object();
+}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentE.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentE.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentE.java	2009-07-06 15:50:28 UTC (rev 19637)
@@ -0,0 +1,21 @@
+/* 
+ * Testing indentaion: inserting error, missing only tabs and only ws for one pair of braces for tab size 5
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44//;
+		}	
+     }
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentF.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentF.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentF.java	2009-07-06 15:50:28 UTC (rev 19637)
@@ -0,0 +1,21 @@
+/* 
+ * Indentation test: inserting error, and mixing tabs and ws for tab size 5
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+	     if (true) { // tabs and ws
+			a = 355//;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentG.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentG.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentG.java	2009-07-06 15:50:28 UTC (rev 19637)
@@ -0,0 +1,21 @@
+/* 
+ * Indentation test: inserting error, and mixing tabs and ws for tab size 3
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+   	if (true) {
+			a = 355//;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Modified: sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java	2009-07-06 15:35:23 UTC (rev 19636)
+++ sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java	2009-07-06 15:50:28 UTC (rev 19637)
@@ -41,8 +41,8 @@
 	private StandAloneSGLRI tokenParser;
 	private IRecoveryParser recoveryParser;
 	private InputStream fis;
-	private boolean useBridgeParser=true;	
-	//private boolean useBridgeParser=false;
+	//private boolean useBridgeParser=true;	
+	private boolean useBridgeParser=false;
 
 	private void createJDT_Tree(String fileName, String inputDir, String outputDir) throws IOException, InterpreterException {	
 		String strippedName=fileName.replace(".java", "");
@@ -65,7 +65,7 @@
 		String[] children = collectInputFiles(LOC_ERROR_INPUTFILES);	
 		for (String fileName : children) {        	
         	if (!fileName.contains("svn")) {
-        		Tools.debug("#####"+fileName + "#####");
+        		System.out.println("\n#####"+fileName + "#####");
 				createJDT_Tree(fileName, LOC_ERROR_INPUTFILES, LOC_ERROR_JDT_TREES);
 				createSGLRParsetree(fileName, LOC_ERROR_INPUTFILES, LOC_ERROR_SGLR_PARSETREES);
 				setUp();
@@ -77,7 +77,7 @@
 		String[] children = collectInputFiles(LOC_ERROR_DEV_FILES);	
 		for (String fileName : children) {        	
         	if (!fileName.contains("svn")) {
-        		Tools.debug("#####"+fileName + "#####");
+        		Tools.debug("\n#####"+fileName + "#####");
 				createJDT_Tree(fileName,LOC_ERROR_DEV_FILES, LOC_ERROR_JDT_TREES);
 				createSGLRParsetree(fileName, LOC_ERROR_DEV_FILES, LOC_ERROR_SGLR_PARSETREES);
 				setUp();
@@ -124,7 +124,7 @@
 	protected void setUp() throws Exception {		
 		ParseTableManager ptm = new ParseTableManager();
         sglr = new SGLR(ptm.getFactory(), ptm.loadFromFile(PARSE_TABLE));        
-        sglr.getDisambiguator().setFilterAny(false);          
+        sglr.getDisambiguator().setFilterAny(false);  
         //sglr.setRecoveryTestingWorkAround(true);
         if (TOKEN_PARSE_TABLE != null && useBridgeParser) {
 			FileInputStream table = new FileInputStream(TOKEN_PARSE_TABLE);



From emma at cs.lth.se  Tue Jul  7 13:16:59 2009
From: emma at cs.lth.se (Emma NilssonNyman)
Date: Tue, 07 Jul 2009 11:16:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19643 -
	EmmaNilssonNyman -
	spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907071115.n67BFMHa016269@proliant.st.ewi.tudelft.nl>

Author: EmmaNilssonNyman
Date: 2009-07-07 11:16:59 +0000 (Tue, 07 Jul 2009)
New Revision: 19643

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19643&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/IRecoveryResult.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java

Log:
Added connection to real recovery suggestions from bridge parser

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/IRecoveryResult.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/IRecoveryResult.java	2009-07-07 10:23:36 UTC (rev 19642)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/IRecoveryResult.java	2009-07-07 11:16:59 UTC (rev 19643)
@@ -1,5 +1,8 @@
 package org.spoofax.jsglr;
 
+import java.util.Map;
+
 public interface IRecoveryResult {
     public String getResult();
+    public Map<Integer, char[]> getSuggestions();
 }

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java	2009-07-07 10:23:36 UTC (rev 19642)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java	2009-07-07 11:16:59 UTC (rev 19643)
@@ -12,6 +12,7 @@
     private StructureRecovery skipRecovery;
     private boolean active;
     private boolean useBridgeParser;
+    private IRecoveryResult bpResult;
     
     
     public void setUseBridgeParser(boolean useBridgeParser) {
@@ -46,12 +47,19 @@
     }
 
     //TODO: real BP suggestions
-    private Map<Integer, char[]> getBridges() {        
+    private Map<Integer, char[]> getBridges() {     
+        
+        /*
         Map<Integer, char[]> bpSuggestions = new HashMap<Integer, char[]>();
         //bpSuggestions.put(0, new char[]{'(', '('});
         bpSuggestions.put(71, new char[]{'}'});
         bpSuggestions.put(100, new char[]{'}'});        
         return bpSuggestions;
+        */
+        if (bpResult != null) {
+            return bpResult.getSuggestions();
+        }
+        return new HashMap<Integer, char[]>();
     }
     
     
@@ -138,7 +146,7 @@
     }
 
     private void tryBridgeRepair(String errorFragment) throws IOException {
-        String repairedFragment = repairBridges(errorFragment);        
+        String repairedFragment = repairBridges(errorFragment);
         mySGLR.activeStacks.addAll(skipRecovery.getStartSkipPosition().getStackNodes());   
         tryParsing(repairedFragment, false);      
         parseRemainingTokens();
@@ -147,9 +155,9 @@
     private String repairBridges(String errorFragment) {
         try {
             // TODO call recover(errorFragement, startSymbol) instead
-            IRecoveryResult result = recoveryParser.recover(errorFragment);            
-            String repairedFragment = result.getResult(); 
-            return repairedFragment;
+            bpResult = null;
+            bpResult = recoveryParser.recover(errorFragment);
+            return bpResult.getResult();
         } catch (TokenExpectedException e) {
             e.printStackTrace();
         } catch (BadTokenException e) {



From L.C.L.Kats at tudelft.nl  Wed Jul  8 13:28:26 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 08 Jul 2009 11:28:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19663 - LennartKats -
	sglr-recovery/trunk/bridge-definitions/trans
Message-ID: <200907081126.n68BQm0E001349@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-08 11:28:26 +0000 (Wed, 08 Jul 2009)
New Revision: 19663

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19663&view=rev

Modified:
   sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr
   sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr

Log:
Don't generate regular island rules for {bracket} productions. Some cleanup.

Changes:

Modified: sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr	2009-07-08 11:20:03 UTC (rev 19662)
+++ sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr	2009-07-08 11:28:26 UTC (rev 19663)
@@ -45,6 +45,8 @@
       lit-name2  := <conc-strings> ("end", lit);
       lit-name1' := lit-name1.new-island-name;
       lit-name2' := lit-name2.new-island-name
+
+attributes // Helpers
  
   def context-free new-island-name:
     x -> x'
@@ -59,8 +61,6 @@
     prod(_, sort(self), _) -> id
     where
       id.is-container-of(|self)
-
-attributes
  
   /**
    * Succeeds if lit-start and lit-end are not always
@@ -69,10 +69,20 @@
   def lookup-global is-illegal-island-literals(|lit-start, lit-end):
     [lit-start | p*] -> id
     where
-      not(p*.one(id.eq(|lit-end))); debug(!"A")
+      not(p*.one(id.eq(|lit-end)))
     <+
-      p*.one(id.eq(|lit-start)); debug(!"B")
+      p*.one(id.eq(|lit-start))
     
     [lit-end | p*] -> id
     where
       p*.one(id.eq(|lit-end) + id.eq(|lit-start))
+    
+    prod(p*, _, _) -> id
+    where
+      not(p*.one(id.eq(|lit-start)));
+      p*.one(id.eq(|lit-end))
+
+    [lit-start | p*] -> id
+    where
+      id.in-bracket-rule;
+      p*.one(id.eq(|lit-end))

Modified: sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr	2009-07-08 11:20:03 UTC (rev 19662)
+++ sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr	2009-07-08 11:28:26 UTC (rev 19663)
@@ -6,13 +6,15 @@
     id.reef-rule
 
   def reef-rule:
-    lit(separator) -> Reef(<newname> "separator", Extends("Keyword"), String(separator), Alt([String(cons)]))
+    lit(separator) -> Reef(separator', Extends("Keyword"), String(separator), Alt([String(cons)]))
     where
       cons := id.current-cons
     where
       id.in-iter-pattern
+    with
+      separator' := separator.new-separator-name
   
-  def reef-rule :
+  def reef-rule:
     lit(keyword) -> Reef(keyword', Extends("Keyword"), String(keyword), Alt([String(cons)]))
     where
       cons := id.current-cons
@@ -21,7 +23,9 @@
       one(id.is-keyword-prod)
     with
       keyword' := keyword.new-keyword-name
- 
+
+attributes // Helpers
+  
   def context-free new-keyword-name:
     x -> x'
     where
@@ -30,9 +34,12 @@
       else
         x' := <newname> "keyword"
       end
-
-attributes
   
+  def context-free new-separator-name:
+    x -> x'
+    where
+      x' := <newname> "separator"
+  
   def graph-search is-keyword-prod:
     prod(_, sort, _) -> id
     where



From m.dejonge at tudelft.nl  Thu Jul  9 12:12:26 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 09 Jul 2009 10:12:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19666 - MaartjeDeJonge
	- sglr-recovery/trunk/Evaluation_Recovery
Message-ID: <200907091010.n69AAluo019243@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-09 10:12:26 +0000 (Thu, 09 Jul 2009)
New Revision: 19666

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19666&view=rev

Modified:
   sglr-recovery/trunk/Evaluation_Recovery/Analyse.sh

Log:


Changes:

Modified: sglr-recovery/trunk/Evaluation_Recovery/Analyse.sh
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Analyse.sh	2009-07-08 12:03:33 UTC (rev 19665)
+++ sglr-recovery/trunk/Evaluation_Recovery/Analyse.sh	2009-07-09 10:12:26 UTC (rev 19666)
@@ -1,16 +1,15 @@
 #!/bin/sh
 
+# 0 => excellent, 1-10 => small, 10-20 => medium, 20+ large
+small=10
+medium=20
+
+
 diffDir="Analyse/java_diffs"
 jdtBetter=Analyse/jdt_better_then_sglr
 sglrBetter=Analyse/sglr_better_then_jdt
 
-rm $diffDir/*.*
-rm Analyse/sglr_excellent/*.*
-rm Analyse/jdt_excellent/*.*
-rm $jdtBetter/*.*
-rm $sglrBetter/*.*
-rm Analyse/sglr_others/*.*
-rm Analyse/jdt_others/*.*
+rm Analyse/*/*.*
 
 ############################################################################################################
 
@@ -74,6 +73,28 @@
 		elif [ "$sglrLineCount" -lt "$jdtLineCount" ]; then
 			cp -f $sglrFile $sglrBetter			
 		fi 
+		
+		
+		if [ "$sglrLineCount" -gt 0 ] && [ "$sglrLineCount" -lt $small ]; then 
+			cp -f $sglrFile Analyse/sglr_diff_small 			
+		fi
+		if [ "$sglrLineCount" -gt $small ] && [ "$sglrLineCount" -lt $medium ]; then 
+			cp -f $sglrFile Analyse/sglr_diff_medium 			
+		fi
+		if [ "$sglrLineCount" -gt $medium ]; then 
+			cp -f $sglrFile Analyse/sglr_diff_large 			
+		fi
+		
+		if [ "$jdtLineCount" -gt 0 ] && [ "$jdtLineCount" -lt $small ]; then 
+			cp -f $jdtFile Analyse/jdt_diff_small 			
+		fi
+		if [ "$jdtLineCount" -gt $small ] && [ "$jdtLineCount" -lt $medium ]; then 
+			cp -f $jdtFile Analyse/jdt_diff_medium 			
+		fi
+		if [ "$jdtLineCount" -gt $medium ]; then 
+			cp -f $jdtFile Analyse/jdt_diff_large 			
+		fi		
+		
 	done
 }
 



From m.dejonge at tudelft.nl  Thu Jul  9 12:13:56 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 09 Jul 2009 10:13:56 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19667 - MaartjeDeJonge
	- sglr-recovery/trunk/Evaluation_Recovery/Analyse
Message-ID: <200907091012.n69ACHHg019258@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-09 10:13:56 +0000 (Thu, 09 Jul 2009)
New Revision: 19667

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19667&view=rev

Added:
   sglr-recovery/trunk/Evaluation_Recovery/Analyse/jdt_diff_large/
   sglr-recovery/trunk/Evaluation_Recovery/Analyse/jdt_diff_medium/
   sglr-recovery/trunk/Evaluation_Recovery/Analyse/jdt_diff_small/
   sglr-recovery/trunk/Evaluation_Recovery/Analyse/sglr_diff_large/
   sglr-recovery/trunk/Evaluation_Recovery/Analyse/sglr_diff_medium/
   sglr-recovery/trunk/Evaluation_Recovery/Analyse/sglr_diff_small/

Log:
diff dir's

Changes:



From emma at cs.lth.se  Thu Jul  9 12:25:14 2009
From: emma at cs.lth.se (Emma NilssonNyman)
Date: Thu, 09 Jul 2009 10:25:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19668 -
	EmmaNilssonNyman - in
	sglr-recovery/trunk/Evaluation_Recovery: . BP_Error_Files src
Message-ID: <200907091023.n69ANZWF019348@proliant.st.ewi.tudelft.nl>

Author: EmmaNilssonNyman
Date: 2009-07-09 10:25:14 +0000 (Thu, 09 Jul 2009)
New Revision: 19668

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19668&view=rev

Added:
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/
   sglr-recovery/trunk/Evaluation_Recovery/src/PreProcessFiles.java

Log:
start of bp pre processing of files

Changes:

Added: sglr-recovery/trunk/Evaluation_Recovery/src/PreProcessFiles.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/src/PreProcessFiles.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/src/PreProcessFiles.java	2009-07-09 10:25:14 UTC (rev 19668)
@@ -0,0 +1,179 @@
+import java.io.BufferedReader;
+import java.io.BufferedWriter;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.FileReader;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+
+import org.bripgen.IBridgeParser;
+import org.bripgen.generic.java.SimpleJavaBridgeParser;
+import org.briplib.recovery.RecoveryResult;
+import org.briplib.recovery.log.RecoveryLog;
+import org.spoofax.interpreter.core.InterpreterException;
+import org.spoofax.jsglr.IRecoveryParser;
+import org.spoofax.jsglr.IRecoveryResult;
+import org.spoofax.jsglr.NoRecovery;
+import org.spoofax.jsglr.ParseTableManager;
+import org.spoofax.jsglr.SGLR;
+import org.spoofax.jsglr.SGLRException;
+import org.spoofax.jsglr.Tools;
+import org.strategoxt.imp.runtime.parser.StandAloneSGLRI;
+
+import aterm.ATerm;
+
+import sglrbridges.otherparsers.JDTParser;
+
+import junit.framework.TestCase;
+
+
+public class PreProcessFiles extends TestCase {
+
+	private final static String LOC_CORRECT_INPUTFILES="Correct_Files/input_files";
+	private final static String LOC_CORRECT_JDT_TREES="Correct_Files/jdt_tree";
+	private final static String LOC_ERROR_INPUTFILES="Error_Files/input_files";
+	private final static String LOC_ERROR_JDT_TREES="Error_Files/jdt_tree";
+	private final static String LOC_CORRECT_SGLR_PARSETREES="Correct_Files/sglr_parsetree";
+	private final static String LOC_ERROR_SGLR_PARSETREES="Error_Files/sglr_parsetree";
+	private final static String LOC_CORRECT_DEV_FILES="Correct_Files/development_files";
+	private final static String LOC_ERROR_DEV_FILES="Error_Files/development_files";
+	
+	private final static String LOC_BP_ERROR_INPUTFILES="BP_Error_Files/development_files";
+	private final static String LOC_BP_ERROR_DEV_FILES="BP_Error_Files/development_files";
+
+	//private final static String PARSE_TABLE ="Language_Files/InsertOnly.tbl";
+	//private final static String PARSE_TABLE ="Language_Files/SpecialTokenRecovery.tbl";
+	private final static String PARSE_TABLE ="Language_Files/Recover.tbl";
+	//private final static String PARSE_TABLE ="Language_Files/InsertNoOpenDelete.tbl";
+	private final static String TOKEN_PARSE_TABLE ="Language_Files/Java-15-Tokenizer.tbl";	
+	
+	private SGLR sglr;
+	private StandAloneSGLRI tokenParser;
+	private IBridgeParser recoveryParser;
+	private InputStream fis;
+	
+	public void testProcessCorrectFiles() throws Exception{
+		String[] children = collectInputFiles(LOC_CORRECT_INPUTFILES);	
+		for (String fileName : children) {        	
+        	if (!fileName.contains("svn")) {
+				createJDT_Tree(fileName, LOC_CORRECT_INPUTFILES, LOC_CORRECT_JDT_TREES);
+				createSGLRParsetree(fileName, LOC_CORRECT_INPUTFILES, LOC_CORRECT_SGLR_PARSETREES);
+				setUp();
+			}
+		}
+	}
+
+	public void testProcessErrorFiles() throws Exception{
+		String[] children = collectInputFiles(LOC_ERROR_INPUTFILES);	
+		for (String fileName : children) {        	
+        	if (!fileName.contains("svn")) {
+        		System.out.println("\n#####"+fileName + "#####");
+        		
+        		preProcessWithBP(fileName, LOC_ERROR_INPUTFILES, LOC_BP_ERROR_INPUTFILES);
+        		
+				createJDT_Tree(fileName, LOC_BP_ERROR_INPUTFILES, LOC_ERROR_JDT_TREES);
+				createSGLRParsetree(fileName, LOC_BP_ERROR_INPUTFILES, LOC_ERROR_SGLR_PARSETREES);
+				setUp();
+			}
+		}
+	}
+	
+	public void testProcessDevelopmentFiles() throws Exception{		
+		String[] children = collectInputFiles(LOC_ERROR_DEV_FILES);	
+		for (String fileName : children) {        	
+        	if (!fileName.contains("svn")) {
+        		Tools.debug("\n#####"+fileName + "#####");
+        		
+        		preProcessWithBP(fileName, LOC_ERROR_DEV_FILES, LOC_BP_ERROR_DEV_FILES);
+        		
+				createJDT_Tree(fileName,LOC_BP_ERROR_DEV_FILES, LOC_ERROR_JDT_TREES);
+				createSGLRParsetree(fileName, LOC_BP_ERROR_DEV_FILES, LOC_ERROR_SGLR_PARSETREES);
+				setUp();
+			}
+		}		
+		String[] childrenC = collectInputFiles(LOC_CORRECT_DEV_FILES);	
+		for (String fileName : childrenC) {        	
+        	if (!fileName.contains("svn")) {
+				createJDT_Tree(fileName,LOC_CORRECT_DEV_FILES, LOC_CORRECT_JDT_TREES);
+				createSGLRParsetree(fileName, LOC_CORRECT_DEV_FILES, LOC_CORRECT_SGLR_PARSETREES);
+				setUp();
+			}
+		}
+	}	
+	
+    private void preProcessWithBP(String fileName, String sourceDir, String targetDir) throws Exception {
+    	// Read content of file
+    	File file = new File(sourceDir + "/" + fileName);
+    	StringBuffer sb = new StringBuffer();
+		BufferedReader reader = new BufferedReader(new FileReader(file));				
+		char[] chars = new char[1024];
+		int read = 0;
+		while((read = reader.read(chars)) > -1){
+			sb.append(String.valueOf(chars, 0, read));
+		}
+		reader.close();
+		
+		// Do bridge parser pre-processing
+		RecoveryLog log = new RecoveryLog();
+		RecoveryResult result = recoveryParser.recover(sb.toString(), log);
+		System.out.println(result);
+		String recoveredText = result.getResultAsString();
+		
+		// Save content
+		OutputStream ous = new FileOutputStream(targetDir + "/" + fileName);
+        ous.write(recoveredText.getBytes());
+        ous.close();
+	}
+
+	@Override
+	protected void setUp() throws Exception {		
+		ParseTableManager ptm = new ParseTableManager();
+        sglr = new SGLR(ptm.getFactory(), ptm.loadFromFile(PARSE_TABLE));        
+        sglr.getDisambiguator().setFilterAny(false);  
+        FileInputStream table = new FileInputStream(TOKEN_PARSE_TABLE);
+		tokenParser = new StandAloneSGLRI(null, table, null, true);
+		tokenParser.setKeepAmbiguities(true);
+	    tokenParser.setRecoverHandler(new NoRecovery());
+	    recoveryParser = new SimpleJavaBridgeParser();
+	   	sglr.setUseStructureRecovery(true);
+        Tools.setDebug(false);
+        Tools.setLogging(false);
+	}
+
+	private void createJDT_Tree(String fileName, String inputDir, String outputDir) throws IOException, InterpreterException {	
+		String strippedName=fileName.replace(".java", "");
+		String[] args= new String[]{"-i", inputDir+"/"+fileName, "-o", outputDir +"/"+strippedName+".jdt", "-sr"};
+		JDTParser.main(args);
+	}
+    
+	private ATerm createSGLRParsetree(String fileName, String inputDir, String outputDir) throws IOException, SGLRException
+	{
+		String strippedName=fileName.replace(".java", "");
+		String input = inputDir+"/"+fileName;
+		String output = outputDir+"/"+strippedName+".pt";		
+		fis = new FileInputStream(input);
+		ATerm t=sglr.parse(fis);		
+		OutputStream ous = new FileOutputStream(output);
+        if(t != null)
+            ous.write(t.toString().getBytes());
+        return t;
+	}
+	
+	/**
+     * Used to list the files / subdirectories in a given directory.
+     * @param dir Directory to start listing from
+	 * @throws InterpreterException 
+	 * @throws IOException 
+     */
+    private String[] collectInputFiles(String dirName) throws IOException, InterpreterException {
+        File dir = new File(dirName);       
+        String[] children = dir.list();        
+        return children;       
+    } 
+    
+
+}



From emma at cs.lth.se  Thu Jul  9 13:00:01 2009
From: emma at cs.lth.se (Emma NilssonNyman)
Date: Thu, 09 Jul 2009 11:00:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19671 -
	EmmaNilssonNyman - in sglr-recovery/trunk/Evaluation_Recovery:
	BP_Error_Files/development_files BP_Error_Files/input_files src
Message-ID: <200907091058.n69AwMj2019650@proliant.st.ewi.tudelft.nl>

Author: EmmaNilssonNyman
Date: 2009-07-09 11:00:01 +0000 (Thu, 09 Jul 2009)
New Revision: 19671

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19671&view=rev

Added:
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/multipleErrors.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentA.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA1.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA2.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA3.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA4.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA5.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA6.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB1.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB2.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB3.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB4.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB5.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB6.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testC1.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testC2.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testC3.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testC4.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testD1.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testD2.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testD3.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testD4.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testE1.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testE2.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testE3.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testF1.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testF2.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testF3.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testFile.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testFile2.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testG1.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testG2.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testG3.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testH1.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testH2.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testH3.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testH4.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testI1.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testI2.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testI3.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testI4.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testI5.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testI6.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testJ1.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testJ2.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testK1.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testK2.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testK3.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testL1.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testL2.java
Modified:
   sglr-recovery/trunk/Evaluation_Recovery/src/PreProcessFiles.java

Log:
bridge parser pre-processed files

Changes (first 1000 lines of the diffs):

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/multipleErrors.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/multipleErrors.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/multipleErrors.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,28 @@
+class X  
+{ 
+  private int correctMethod1()
+  { 
+    corr2();
+    corr2();
+    if(true)
+      return 5;
+    int corrInt = 1;
+    return corrInt;
+  }
+
+  private int method2()
+  { 
+    corr2();
+    $ corr2()? %% -;
+    int corrInt = bla(();)
+    return corrInt;
+  }
+  
+  private int correctMethod3()
+  { 
+    corr2();
+    corr2();
+    int corrInt = 1;
+    return corrInt;
+  }
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentA.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentA.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentA.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,21 @@
+/* 
+ * Indent test: Adding an error along with some indentation shift of both starting and ending brace
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}}
+
+void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		//}	
+}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA1.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA1.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA1.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,11 @@
+/* Peak program - Incomplete */
+class C {
+	void m() {
+		if (true) {
+			for (int i; i < 10; i++) {
+				if (true) {
+					if (true) {
+						int a;	/* 	} 	} 	} 	*/}}}
+		}
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA2.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA2.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,10 @@
+/* Peak program - Incomplete */
+class C {
+	void m() {
+		if (true) {
+			for (int i; i < 10; i++) {
+				if (true) {
+					if (true) {
+						int a;
+					}
+				} 	/* 	}	} 	} }*/}}}}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA3.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA3.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA3.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,13 @@
+/* Peak program - Incomplete */
+class C {
+	void m() {
+		if (true) {
+			for (int i; i < 10; i++) {{
+				if (true) {
+					if (true) {
+						int a;
+					}
+				}
+			}	//}
+	}}}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA4.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA4.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA4.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,12 @@
+/* Peak program - Incomplete */
+class C {
+	void m() {
+		if (true) {
+			for (int i; i < 10; i++) {
+				if (true) {
+					if (true) {
+						int a;
+					} 	/*	} 	} 	*/}}
+		}
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA5.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA5.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA5.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,14 @@
+/* Peak program - Missing start*/
+class C {
+	void m() {
+		if (true) {
+			for (int i; i < 10; i++) {
+				if (true) {
+					if (true)// {
+						int a;{
+					}
+				}
+			}
+		}
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA6.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA6.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testA6.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,14 @@
+/* Peak program - Two errors, two missing start braces */
+class C {
+	void m() {
+		if (true) //{
+			for (int i; i < 10; i++) //{
+				if (true) {{{
+					if (true) {
+						int a;
+					}
+				}
+			}
+		}
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB1.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB1.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB1.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,14 @@
+/* Bumpy road - Incomplete */
+class C {
+	void m() {
+		int a;	//}
+	void n() {}
+		int b;
+	}
+	void o() {
+		int c;
+	}
+	void p() {
+		int d;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB2.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB2.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,13 @@
+/* Bumpy road - Incomplete */
+class C {
+	void m() {
+		int a;
+	}
+	void n() {
+		int b;
+	}
+	void o() {
+		int c;
+	}
+	void p() {
+		int d; /*	} }*/}}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB3.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB3.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB3.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,15 @@
+/* Bumpy road - Incomplete */
+class C {
+	void m() {
+		int a;
+	}
+	void n() {
+		int b;
+	}
+	void o(/*) { */){
+		int c;
+	}
+	void p() {
+		int d;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB4.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB4.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB4.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,15 @@
+/* Bumpy road - Incomplete */
+class C {
+	void m() {
+		int a;
+	}
+	void n() {
+		int b;
+	}
+	void o(/*)*/ ){
+		int c;
+	}
+	void p() {
+		int d;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB5.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB5.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB5.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,13 @@
+/* Bumpy road - Incomplete */
+class C {
+	void m() {
+		int a;
+	}
+	void n() {
+		int b;
+	}
+	void o() {
+		int c;
+	}
+	void p() { int d; 	/*}*/}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB6.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB6.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testB6.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,15 @@
+/* Bumpy road - Double error, extra right brace and missing right brace */
+class C {
+	void m() {{
+		int a;
+	}}
+	void n() {
+		int b;
+	}
+	void o() {
+		int c;}
+	/*}*/
+	void p() {
+		int d;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testC1.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testC1.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testC1.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,39 @@
+/* Rocky mountains - Incomplete */
+class C {
+	int a;
+	void C() {
+		int b;
+	}
+	void m() {
+		if (true) {
+			if (true) {
+				int c;
+				int d;
+			}
+		}
+		if (true) {
+			int e;
+		}
+		int f;
+	}
+	class D {
+		void m() {
+			if (true) {
+				for (int i=0;i<10;i++) {
+					int g;
+					int h;
+					if (true) {	/*	int j;	} }	}*/}}}
+		}
+		void n() {
+			int k;
+		}
+	}
+	int n() {
+		return 0;
+	}
+}
+class E {
+	void m() {
+		int a;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testC2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testC2.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testC2.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,42 @@
+/* Rocky mountains - Incomplete */
+class C {
+	int a;
+	void C() {
+		int b; 	//}
+	void m() {}
+		if (true) {
+			if (true) {
+				int c;
+				int d;
+			}
+		}
+		if (true) {
+			int e;
+		}
+		int f;
+	}
+	class D {
+		void m() {
+			if (true) {
+				for (int i=0;i<10;i++) {
+					int g;
+					int h;
+					if (true) {
+						int j;
+					}
+				}
+			}
+		}
+		void n() {
+			int k;
+		}
+	}
+	int n() {
+		return 0;
+	}
+}
+class E {
+	void m() {
+		int a;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testC3.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testC3.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testC3.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,42 @@
+/* Rocky mountains - Incomplete */
+class C {
+	int a;
+	void C() {
+		int b;
+	}
+	void m() {
+		if (true) {
+			if (true) {
+				int c;
+				int d;
+			}
+		}
+		if (true) {
+			int e;
+		}
+		int f;
+	}
+	class D {
+		void m() {
+			if (true) {
+				for (int i=0;i<10;i++) {
+					int g;
+					int h;
+					if (true) {
+						int j;
+					}
+				}
+			}
+		}
+		void n() {
+			int k;
+		}
+	}
+	int n() {
+		return 0; /*	}} */
+		}}
+class E {
+	void m() {
+		int a;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testC4.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testC4.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testC4.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,43 @@
+/* Rocky mountains - Missing start */
+class C {
+	int a;
+	void C() {
+		int b;
+	}
+	void m() {
+		if (true) {
+			if (true/*) { */){
+				int c;
+				int d;
+			}
+		}
+		if (true) {
+			int e;
+		}
+		int f;
+	}
+	class D {
+		void m() {
+			if (true) {
+				for (int i=0;i<10;i++) {
+					int g;
+					int h;
+					if (true) {
+						int j;
+					}
+				}
+			}
+		}
+		void n() {
+			int k;
+		}
+	}
+	int n() {
+		return 0;
+	}
+}
+class E {
+	void m() {
+		int a;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testD1.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testD1.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testD1.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,29 @@
+/* Misinterpreted statements - if - Incomplete */
+class C {
+	void m() {
+		int a;
+		if (true) {
+			int b;
+		}
+	}
+	void n() {
+		int a;
+		if (true) {
+			int b;
+			if (true) {
+				int c;{
+				int d; //}
+		}}}
+		int c;
+	}
+	void o() {
+		int a;
+		if (true) {
+			int b;
+		}
+		if (true) {
+			int c;
+		}
+		int d;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testD2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testD2.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testD2.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,29 @@
+/* Misinterpreted statements - if - Incomplete */
+class C {
+	void m() {
+		int a;
+		if (true) {
+			int b;
+		}
+	}
+	void n() {
+		int a;
+		if (true) {
+			int b;
+			if (true) {
+				int c;
+				int d;
+			}
+		}
+		int c;
+	}
+	void o() {
+		int a;
+		if (true) {
+			int b;		//}
+		if (true) {}
+			int c;
+		}
+		int d;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testD3.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testD3.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testD3.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,29 @@
+/* Misinterpreted statements - if - Incomplete */
+class C {
+	void m() {
+		int a;
+		if (true) {{
+			int b;	//	}
+	}}}
+	void n() {
+		int a;
+		if (true) {
+			int b;
+			if (true) {
+				int c;
+				int d;
+			}
+		}
+		int c;
+	}
+	void o() {
+		int a;
+		if (true) {
+			int b;
+		}
+		if (true) {
+			int c;
+		}
+		int d;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testD4.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testD4.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testD4.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,29 @@
+/* Misinterpreted statements - if - Incomplete */
+class C {
+	void m() {
+		int a;
+		if (true) {
+			int b;
+		}
+	}
+	void n() {
+		int a;
+		if (true) {
+			int b;
+			if (true) {
+				int c;
+				int d;
+			}
+		}
+		int c;
+	}
+	void o() {
+		int a;
+		if (true) {
+			int b;
+		}
+		if (true) {
+			int c;	//	}
+		int d;}
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testE1.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testE1.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testE1.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,17 @@
+/* Misinterpreted statements - for - Incomplete */
+class C {
+	void m() {
+		for (int i=0;i<10;i++/*) {*/){
+			int a;
+		}
+	}
+	void n() {
+		for (int i=0;i<10;i++) {
+			for (int j=0;j<10;j++) {
+				int a;
+			}
+			int b;
+		}
+		int c;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testE2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testE2.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testE2.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,17 @@
+/* Misinterpreted statements - for - Incomplete */
+class C {
+	void m() {
+		for (int i=0;i<10;i++) {
+			int a;
+		}
+	}
+	void n() {
+		for (int i=0;i<10;i++/*) {*/){
+			for (int j=0;j<10;j++) {
+				int a;
+			}
+			int b;
+		}
+		int c;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testE3.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testE3.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testE3.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,16 @@
+/* Misinterpreted statements - for - Incomplete */
+class C {
+	void m() {
+		for (int i=0;i<10;i++) {
+			int a;
+		}
+	}
+	void n() {
+		for (int i=0;i<10;i++) {
+			for (int j=0;j<10;j++) {
+				int a; //}
+			int b;}
+		}
+		int c;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testF1.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testF1.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testF1.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,24 @@
+/* Several statements in a row - Incomplete */
+class C {
+	int a;
+	int b;
+	public C() {
+		int a;
+	}
+	int c;
+	void m() {
+		int a;
+		if (true) {
+			int a;
+			int b; 	//}
+		int b;}
+		if (true) {
+			int a;
+		}
+	}
+	int d;
+	void n() {
+		int a;
+	}
+	int e;
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testF2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testF2.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testF2.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,24 @@
+/* Several statements in a row - Incomplete */
+class C {
+	int a;
+	int b;
+	public C() {
+		int a;
+	}
+	int c;
+	void m() {
+		int a;
+		if (true) {
+			int a;
+			int b;
+		}
+		int b;
+		if (true) {
+			int a;
+		}	//}
+	int d;}
+	void n() {
+		int a;
+	}
+	int e;
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testF3.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testF3.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testF3.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,24 @@
+/* Several statements in a row - Incomplete */
+class C {
+	int a;
+	int b;
+	public C() {
+		int a;	//}
+	int c;}
+	void m() {
+		int a;
+		if (true) {
+			int a;
+			int b;
+		}
+		int b;
+		if (true) {
+			int a;
+		}
+	}
+	int d;
+	void n() {
+		int a;
+	}
+	int e;
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testFile.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testFile.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testFile.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,41 @@
+package org.spoofax.jsglr;
+
+import java.io.IOException;
+import java.util.ArrayList;
+
+class X  
+{ 
+  private int method1()
+  { 
+    bla();
+    bla();
+    int i = 1;
+    return 2;
+  }
+
+  private int method2()
+  { 
+    bla();
+    bla();
+    int i = 1;
+    return 2;
+  }
+
+  private int method3()
+  { 
+    bla();
+    if(true)
+    { 
+      bla();
+      int i = 1; /*}*/}
+    return 2;
+  }
+
+  private int method4()
+  { 
+    bla();
+    bla();
+    int i = 1;
+    return 2;
+  }
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testFile2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testFile2.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testFile2.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,34 @@
+package org.spoofax.jsglr;
+
+import java.io.IOException;
+import java.util.ArrayList;
+
+class X  
+{ 
+  
+  private int method2()
+  { 
+    bla();
+    bla();
+    int i = 1;
+    return 2;
+  }
+
+  private int method3()
+  { 
+    bla();
+    if(true)
+    { 
+      bla();
+      int i = 1; /*}*/}
+    return 2;
+  }
+
+  private int method4()
+  { 
+    bla();
+    bla();
+    int i = 1;
+    return 2;
+  }
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testG1.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testG1.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testG1.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,36 @@
+/* Statements with different structure - Incomplete */
+class C {
+	public C() {
+		int a;
+		do {
+			int b;
+			int c;
+		} while (true);
+		int d;
+	}
+	void m() throws Exception {
+		int a;
+		try {
+			int a;
+			int b; 		//} 
+		catch (Exception e) {}
+			throw new Exception();
+		}
+		int b;
+	}
+	void n() {
+		int a;
+		switch(a) {
+			case 0:
+			int b;
+			break;
+			case 3:
+			int s;
+			break;
+		}
+		int b;
+	}
+	void o() {
+		int a = ((3 + 5) > 4) ? n() : m();
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testG2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testG2.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testG2.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,36 @@
+/* Statements with different structure - Incomplete */
+class C {
+	public C() {
+		int a;
+		do {
+			int b;
+			int c;
+		} while (true//);
+		int d;)
+	}
+	void m() throws Exception {
+		int a;
+		try {
+			int a;
+			int b;
+		} catch (Exception e) {
+			throw new Exception();
+		}
+		int b;
+	}
+	void n() {
+		int a;
+		switch(a) {
+			case 0:
+			int b;
+			break;
+			case 3:
+			int s;
+			break;
+		}
+		int b;
+	}
+	void o() {
+		int a = ((3 + 5) > 4) ? n() : m();
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testG3.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testG3.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/input_files/testG3.java	2009-07-09 11:00:01 UTC (rev 19671)
@@ -0,0 +1,36 @@
+/* Statements with different structure - Incomplete */
+class C {
+	public C() {
+		int a;
+		do {
+			int b;
+			int c;
+		} while (true);
+		int d;
+	}
+	void m() throws Exception {
+		int a;

(507 diff lines omitted)


From m.dejonge at tudelft.nl  Thu Jul  9 12:53:31 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 09 Jul 2009 10:53:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19670 - MaartjeDeJonge
	- sglr-recovery/trunk/Evaluation_Recovery
Message-ID: <200907091051.n69Apqnt019576@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-09 10:53:31 +0000 (Thu, 09 Jul 2009)
New Revision: 19670

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19670&view=rev

Modified:
   sglr-recovery/trunk/Evaluation_Recovery/Analyse.sh

Log:


Changes:

Modified: sglr-recovery/trunk/Evaluation_Recovery/Analyse.sh
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Analyse.sh	2009-07-09 10:49:55 UTC (rev 19669)
+++ sglr-recovery/trunk/Evaluation_Recovery/Analyse.sh	2009-07-09 10:53:31 UTC (rev 19670)
@@ -116,3 +116,16 @@
 echo "Excellent JDT Recovery: $nrExcellentJdt ($jdtTotal)"
 echo "SGLR better than JDT: "$nrSGLRBetter
 echo "JDT better than SGLR: "$nrJDTBetter
+
+echo "------"
+echo "sglr no diff: $nrExcellentSglr"
+echo "sglr small diff: $(ls Analyse/sglr_diff_small | wc -l)"
+echo "sglr medium diff: $(ls Analyse/sglr_diff_medium | wc -l)"
+echo "sglr large diff: $(ls Analyse/sglr_diff_large | wc -l)"
+
+echo "------"
+echo "jdt no diff: $nrExcellentJdt"
+echo "jdt small diff: $(ls Analyse/jdt_diff_small | wc -l)"
+echo "jdt medium diff: $(ls Analyse/jdt_diff_medium | wc -l)"
+echo "jdt large diff: $(ls Analyse/jdt_diff_large | wc -l)"
+



From emma at cs.lth.se  Thu Jul  9 17:42:14 2009
From: emma at cs.lth.se (Emma NilssonNyman)
Date: Thu, 09 Jul 2009 15:42:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19672 -
	EmmaNilssonNyman - in sglr-recovery/trunk/Evaluation_Recovery:
	BP_Error_Files/development_files src
Message-ID: <200907091540.n69FeZIG024455@proliant.st.ewi.tudelft.nl>

Author: EmmaNilssonNyman
Date: 2009-07-09 15:42:14 +0000 (Thu, 09 Jul 2009)
New Revision: 19672

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19672&view=rev

Added:
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/correctFile.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/currentLineError.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/doubleClosed_If.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/flawedDeclaration.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/flawedImport.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/flawedMethodHeader.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/flawed_IfBlock.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/methodOutsideClass.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/morePartsStructureError.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/multipleErrors2.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/previousLineError.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/priorSiblingError.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/sloppyCode.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/testBridgeFG.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/testFile.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentB.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentC.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentD.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentE.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentF.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentG.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/twoSeparatedErrors.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosedBlockComment.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosedClassBody.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosedMethod.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosedString.java
   sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosed_If.java
Modified:
   sglr-recovery/trunk/Evaluation_Recovery/src/PreProcessFiles.java

Log:
working pre processor program

Changes (first 1000 lines of the diffs):

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/correctFile.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/correctFile.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/correctFile.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,25 @@
+package test;
+
+import java.io.IOException;
+import junit.framework.Assert;
+import org.spoofax.jsglr.SGLRException;
+
+class X  
+{ 
+  private int correctMethod1()
+  { 
+    corr2();
+    return corrInt;
+  }
+
+  private int correctMethod2()
+  { 
+    int corrLine1;
+    if(true)
+    { 
+      corrLine2();
+    }
+    corrLine3();
+    corrLine4();
+  }
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/currentLineError.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/currentLineError.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/currentLineError.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,30 @@
+package test;
+
+import java.io.IOException;
+import junit.framework.Assert;
+import org.spoofax.jsglr.SGLRException;
+
+class X  
+{ 
+  private int correctMethod1()
+  { 
+    corr2();
+    return corrInt;
+  }
+
+  private int ErrorFragment()
+  { 
+    int corrLine1;
+    (int i); 
+    corrLine2();
+    corrLine3();
+  }
+
+  private int correctMethod2()
+  { 
+    corr2();
+    corr2();
+    int corrInt = 1;
+    return corrInt;
+  }
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/doubleClosed_If.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/doubleClosed_If.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/doubleClosed_If.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,31 @@
+package org.spoofax.jsglr;
+
+import java.io.IOException;
+import java.util.ArrayList;
+
+class X  
+{ 
+  private int correctMethod1()
+  { 
+    bla();
+    bla();
+    int i = 1;
+    return 2;
+  }
+
+  private int wronglyClosedMethod()
+  { 
+    if(true)/*{*/ {
+      i = 5;
+    }
+    bla();
+  }
+
+  private int correctMethod2()
+  { 
+    bla();
+    bla();
+    int i = 1;
+    return 2;
+  }
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/flawedDeclaration.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/flawedDeclaration.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/flawedDeclaration.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,21 @@
+package org.spoofax.jsglr;
+
+import java.io.IOException;
+import java.util.ArrayList;
+
+class X  
+{ 
+  private int anInt;
+
+  private int errorDeclaration /*;*/
+
+  private String aString;
+
+  private int correctMethod()
+  { 
+    bla();
+    bla();
+    int i = 1;
+    return 2;
+  }
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/flawedImport.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/flawedImport.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/flawedImport.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,16 @@
+package org.spoofax.jsglr;
+
+import java.io.IOException;
+import java.ErrorImport/*;*/
+import java.io;
+
+class X  
+{ 
+  private int correctMethod1()
+  { 
+    bla();
+    bla();
+    int i = 1;
+    return 2;
+  }
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/flawedMethodHeader.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/flawedMethodHeader.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/flawedMethodHeader.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,29 @@
+package org.spoofax.jsglr;
+
+import java.io.IOException;
+import java.util.ArrayList;
+
+class X  
+{ 
+  (private int Fragment())
+  { 
+    int i = 1;
+    int i;
+  }
+
+  private int correctMethod1()
+  { 
+    bla();
+    bla();
+    int i = 1;
+    return 2;
+  }
+
+  private int correctMethod2()
+  { 
+    bla();
+    bla();
+    int i = 1;
+    return 2;
+  }
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/flawed_IfBlock.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/flawed_IfBlock.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/flawed_IfBlock.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,26 @@
+class X  
+{ 
+  private int correctMethod1()
+  { 
+    corr2();
+    return corrInt;
+  }
+
+  private int ErrorFragment()
+  { 
+    int corrLine1;
+    corrLine2();
+    int i;
+    if((bla())){
+        i = 0;}
+    corrLine3();
+  }
+
+  private int correctMethod2()
+  { 
+    corr2();
+    corr2();
+    int corrInt = 1;
+    return corrInt;
+  }
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/methodOutsideClass.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/methodOutsideClass.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/methodOutsideClass.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,22 @@
+class X  
+{ 
+  private int correctMethod1()
+  { 
+    corr2();
+    corr2();
+    if(true)
+      return 5;
+    int corrInt = 1;
+    return corrInt;
+  }
+
+  private int bla()
+  { 
+    bla();
+  }
+}
+
+private int bla()
+{ 
+  bla();
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/morePartsStructureError.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/morePartsStructureError.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/morePartsStructureError.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,32 @@
+class X  
+{ 
+  private int correctMethod1()
+  { 
+    corr2();
+    return corrInt;
+  }
+
+  private int errorFragment()
+  { 
+    int corrLine1;
+    corrLine2();
+    if(bla())
+    { 
+      int i;
+      return 2; /* }*/}
+    else
+      if(true)
+        return 4;
+      else
+        return 5;
+    corrLine3();
+  }
+
+  private int correctMethod2()
+  { 
+    corr2();
+    corr2();
+    int corrInt = 1;
+    return corrInt;
+  }
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/multipleErrors2.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/multipleErrors2.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/multipleErrors2.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,33 @@
+package test;
+
+import java.io.IOException;
+import junit.framework.Assert;
+import org.spoofax.jsglr.SGLRException;
+class X {
+	
+  private int correctMethod1(){
+     corr2();    
+     return corrInt;
+  }
+
+  private int correctMethod2(){
+      int corrLine1;
+      if(true){
+    	  String s = "bla bla bla"//;
+    	  corrLine2();
+      }
+      else{
+         corrLine3(); //}     
+      corrLine4({ //);
+  })}
+      }
+  private int correctMethod1(){
+     corr2();    
+     return corrInt;
+  }
+  
+  private int correctMethod1(){
+     corr2();    
+     return corrInt;
+  }
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/previousLineError.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/previousLineError.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/previousLineError.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,24 @@
+class X  
+{ 
+  private int correctMethod1()
+  { 
+    corr2();
+    return corrInt;
+  }
+
+  private int ErrorFragment()
+  { 
+    int corrLine1;
+    corrLine2();
+    int i = bla(/*);*/)
+    corrLine3();
+  }
+
+  private int correctMethod2()
+  { 
+    corr2();
+    corr2();
+    int corrInt = 1;
+    return corrInt;
+  }
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/priorSiblingError.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/priorSiblingError.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/priorSiblingError.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,29 @@
+class X  
+{ 
+  private int correctMethod1()
+  { 
+    corr2();
+    return corrInt;
+  }
+
+  private int errorFragment()
+  { 
+    int i;
+    if(true){
+      bla();
+      doSomething();
+    }
+    int j;
+    int k;
+    doSomething2();
+    return 5;
+  }
+
+  private int correctMethod2()
+  { 
+    corr2();
+    corr2();
+    int corrInt = 1;
+    return corrInt;
+  }
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/sloppyCode.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/sloppyCode.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/sloppyCode.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,79 @@
+class X  
+{ 
+  private int correctMethod1()
+  { 
+    corr2();
+    corr2();
+    if(true)
+      return 5;
+    int corrInt = 1;
+    return corrInt;
+  }
+
+  private int correctMethod1()
+  { 
+    corr2();
+    corr2();
+    if(true)
+      return 5;
+    int corrInt = 1;
+    return corrInt;
+  }
+
+  private int correctMethod1()
+  { 
+    corr2();
+    corr2();
+    if(true)
+      return 5;
+    int corrInt = 1;
+    return corrInt;
+  }
+
+  private int ErrorTooMuchClosing()
+  { 
+    if(bla1())
+    { 
+      while(true)
+      { 
+        bla2(); /* }*/}
+      stm();
+    }
+    int i;
+    int j;
+    bla3();
+  }
+
+  int j;
+
+  private int ErrorMissingClosing()
+  { 
+    if(bla1())
+    { 
+      bla();
+      while(true)
+      { 
+        bla2();
+        stm(); /* }*/}
+    }
+    int i;
+    int j;
+    bla3();
+  }
+
+  private int correctMethod2()
+  { 
+    corr2();
+    corr2();
+    int corrInt = 1;
+    return corrInt;
+  }
+
+  private int correctMethod3()
+  { 
+    corr2();
+    corr2();
+    int corrInt = 1;
+    return corrInt;
+  }
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/testBridgeFG.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/testBridgeFG.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/testBridgeFG.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,34 @@
+class X  
+{ 
+  private int method1()
+  { 
+    corr2();
+    return corrInt;
+  }
+
+  private int method2()
+  { 
+    int Line1;
+    if(false){
+	    if(true)
+	    { 
+	       Line2();
+	       Line3();}
+	    Line4();
+	    Line5();}
+    Line6();
+    Line7()
+  }
+    
+  private int method1()
+  { 
+     corr2();
+     return corrInt;
+  }
+  
+  private int method1()
+  { 
+     corr2();
+     return corrInt;
+  }
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/testFile.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/testFile.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/testFile.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,31 @@
+package org.spoofax.jsglr;
+
+import java.io.IOException;
+import java.util.ArrayList;
+
+class X  
+{ 
+  private int correctMethod1()
+  { 
+    bla();
+    bla();
+    int i = 1;
+    return 2;
+  }
+
+  private int wronglyClosedMethod()
+  { 
+    if(true) /* { */ {
+      i = 5;
+    }
+    bla();
+  }
+
+  private int correctMethod2()
+  { 
+    bla();
+    bla();
+    int i = 1;
+    return 2;
+  }
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentB.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentB.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentB.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,22 @@
+/* 
+ * Testing indentation: Adding error in the middle and shifting the 
+ * indentation level of the enclosing braces of the class
+ */
+	public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {{
+			a = 355;
+		} else //{
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+	}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentC.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentC.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentC.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,21 @@
+/* 
+ * Testing indentation: inserting an error and shifting one of the braces
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) //{
+			a = 355;{{
+		} else {
+			a  = 44;
+		}	
+		}}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentD.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentD.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentD.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,21 @@
+/* 
+ * Testing indentation: inserting an error and shifting one of two otherwise matching braces
+ */
+public class A {
+	public A() {
+		int a = 4//;
+		Object obj = new Object();}
+}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+	}
+{
+	int n(int a, int p) {
+		return a + p;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentE.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentE.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentE.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,21 @@
+/* 
+ * Testing indentaion: inserting error, missing only tabs and only ws for one pair of braces for tab size 5
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {{
+		if (true) {
+			a = 355;
+		} else {{
+			a  = 44//;
+		}	}
+     }}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentF.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentF.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentF.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,21 @@
+/* 
+ * Indentation test: inserting error, and mixing tabs and ws for tab size 5
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {{
+	     if (true) { // tabs and ws
+			a = 355//;
+		} else {
+			a  = 44;}
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentG.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentG.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/trickyIndentG.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,21 @@
+/* 
+ * Indentation test: inserting error, and mixing tabs and ws for tab size 3
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+   	if (true) {{{
+			a = 355//;
+		} else {}
+			a  = 44;
+		}	}
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/twoSeparatedErrors.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/twoSeparatedErrors.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/twoSeparatedErrors.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,71 @@
+class X  
+{ 
+  private int correctMethod1()
+  { 
+    corr2();
+    corr2();
+    if(true)
+      return 5;
+    int corrInt = 1;
+    return corrInt;
+  }
+
+  private int ErrorTooMuchClosing()
+  { 
+    if(bla1())
+    { 
+      while(true)
+      { 
+        bla2(); /*  }*/}
+      stm();
+    }
+    int i;
+    int j;
+    bla3();
+  }
+
+  private int correctMethod2()
+  { 
+    corr2();
+    corr2();
+    if(true)
+      return 5;
+    int corrInt = 1;
+    return corrInt;
+  }
+  
+  private int corr(){
+      return 5;
+  }
+
+  private int ErrorMissingClosing()
+  { 
+    if(bla1())
+    { 
+      bla();
+      while(true)
+      { 
+        bla2();
+        stm(); /* } */}
+    }
+    int i;
+    int j;
+    bla3();
+  }
+
+  private int correctMethod3()
+  { 
+    corr2();
+    corr2();
+    int corrInt = 1;
+    return corrInt;
+  }
+
+  private int correctMethod4()
+  { 
+    corr2();
+    corr2();
+    int corrInt = 1;
+    return corrInt;
+  }
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosedBlockComment.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosedBlockComment.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosedBlockComment.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,24 @@
+package test;
+
+import java.io.IOException;
+import junit.framework.Assert;
+import org.spoofax.jsglr.SGLRException;
+class X {
+	
+  private int correctMethod1(){
+     corr2();    
+     return corrInt;
+  }}
+
+  /*
+  private int correctMethod2(){
+      int corrLine1;
+      if(true){
+    	  String s = "bla bla bla";
+    	  corrLine2();
+      }
+      corrLine3();     
+      corrLine4();
+  }
+}
+

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosedClassBody.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosedClassBody.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosedClassBody.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,17 @@
+class X  
+{ 
+  private int correctMethod1()
+  { 
+    corr2();
+    corr2();
+    if(true)
+      return 5;
+    int corrInt = 1;
+    return corrInt;
+  }}
+
+  private int bla()
+  { 
+    bla();
+  }
+/*}*/
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosedMethod.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosedMethod.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosedMethod.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,24 @@
+class X  
+{ 
+  private int correctMethod1()
+  { 
+    corr2();
+    return corrInt;
+  }
+
+  private int UnclosedMethod()
+  { 
+      if(true){
+         int corrLine1;
+         corrLine2(); /*  } */}
+      return 5;
+  }
+
+  private int correctMethod2()
+  { 
+    corr2();
+    corr2();
+    int corrInt = 1;
+    return corrInt;
+  }
+}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosedString.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosedString.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosedString.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,24 @@
+package test;
+
+import java.io.IOException;
+import junit.framework.Assert;
+import org.spoofax.jsglr.SGLRException;
+class X {
+	
+  private int correctMethod1(){
+     corr2();    
+     return corrInt;
+  }}
+
+  private int correctMethod2(){
+      int corrLine1;
+      if(true){
+    	  String s = "bla bla bla
+    	  corrLine2();
+      }
+      corrLine3();     
+      corrLine4();
+  }
+}
+
+}}
\ No newline at end of file

Added: sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosed_If.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosed_If.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/BP_Error_Files/development_files/unclosed_If.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -0,0 +1,30 @@
+package org.spoofax.jsglr;
+
+import java.io.IOException;
+import java.util.ArrayList;
+
+class X  
+{ 
+  private int correctMethod1()
+  { 
+    bla();
+    bla();
+    int i = 1;
+    return 2;
+  }
+
+  private int UnclosedIf()
+  { 
+    if(true) { 
+       i = 5;}
+    return 7;
+  }
+
+  private int correctMethod2()
+  { 
+    bla();
+    bla();
+    int i = 1;
+    return 2;
+  }
+}
\ No newline at end of file

Modified: sglr-recovery/trunk/Evaluation_Recovery/src/PreProcessFiles.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/src/PreProcessFiles.java	2009-07-09 11:00:01 UTC (rev 19671)
+++ sglr-recovery/trunk/Evaluation_Recovery/src/PreProcessFiles.java	2009-07-09 15:42:14 UTC (rev 19672)
@@ -50,6 +50,9 @@
 	private IBridgeParser recoveryParser;
 	private InputStream fis;
 	
+	//private boolean withPreProcessing = true;
+	private boolean withPreProcessing = false;
+	
 	public void testProcessCorrectFiles() throws Exception{
 		String[] children = collectInputFiles(LOC_CORRECT_INPUTFILES);	
 		for (String fileName : children) {        	
@@ -67,11 +70,16 @@
         	if (!fileName.contains("svn")) {
         		System.out.println("\n#####"+fileName + "#####");
         		
-        		preProcessWithBP(fileName, LOC_ERROR_INPUTFILES, LOC_BP_ERROR_INPUTFILES);
-        		
-				createJDT_Tree(fileName, LOC_BP_ERROR_INPUTFILES, LOC_ERROR_JDT_TREES);
-				createSGLRParsetree(fileName, LOC_BP_ERROR_INPUTFILES, LOC_ERROR_SGLR_PARSETREES);
+        		if (withPreProcessing) {
+        			preProcessWithBP(fileName, LOC_ERROR_INPUTFILES, LOC_BP_ERROR_INPUTFILES);
+        			createJDT_Tree(fileName, LOC_BP_ERROR_INPUTFILES, LOC_ERROR_JDT_TREES);
+        			createSGLRParsetree(fileName, LOC_BP_ERROR_INPUTFILES, LOC_ERROR_SGLR_PARSETREES);
+        		} else {
+        			createJDT_Tree(fileName, LOC_ERROR_INPUTFILES, LOC_ERROR_JDT_TREES);
+        			createSGLRParsetree(fileName, LOC_ERROR_INPUTFILES, LOC_ERROR_SGLR_PARSETREES);        			
+        		}
 				setUp();
+				
 			}
 		}

(43 diff lines omitted)


From L.C.L.Kats at tudelft.nl  Thu Jul  9 19:49:59 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 09 Jul 2009 17:49:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19673 - LennartKats -
	sglr-recovery/trunk/Evaluation_Recovery
Message-ID: <200907091748.n69HmKbE025651@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-09 17:49:59 +0000 (Thu, 09 Jul 2009)
New Revision: 19673

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19673&view=rev

Added:
   sglr-recovery/trunk/Evaluation_Recovery/ManualAnalysis.sh

Log:
Silly manual analysis script.

Changes:

Added: sglr-recovery/trunk/Evaluation_Recovery/ManualAnalysis.sh
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/ManualAnalysis.sh	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/ManualAnalysis.sh	2009-07-09 17:49:59 UTC (rev 19673)
@@ -0,0 +1,27 @@
+#!/bin/bash
+
+PARSED=../$1
+
+RESULTS=
+
+cd Error_Files/input_files/
+
+if [ ! -e $PARSED ]; then
+  echo "Specify a directory to compare to (e.g., sglr_java)" >&1
+  exit 1
+fi
+
+for F in *; do
+  echo ============= $PARSED/$F =============
+  if diff $F $PARSED/$F &>/dev/null; then
+    echo "Excellent!"
+    echo
+  else
+    diff -y $F $PARSED/$F
+    read LINE
+    RESULTS="$RESULTS $LINE"
+    echo
+  fi
+done
+
+echo $RESULTS


Property changes on: sglr-recovery/trunk/Evaluation_Recovery/ManualAnalysis.sh
___________________________________________________________________
Added: svn:executable
   + *



From L.C.L.Kats at tudelft.nl  Thu Jul  9 22:00:18 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 09 Jul 2009 20:00:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19674 - LennartKats -
	spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907091958.n69Jwdou027024@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-09 20:00:18 +0000 (Thu, 09 Jul 2009)
New Revision: 19674

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19674&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Tools.java

Log:


Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Tools.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Tools.java	2009-07-09 17:49:59 UTC (rev 19673)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Tools.java	2009-07-09 20:00:18 UTC (rev 19674)
@@ -93,6 +93,12 @@
         return measures;
     }
     
+    /**
+     * Sets the maximum amount of time to try and parse a file,
+     * before a {@link ParseTimeoutException} is thrown.
+     * 
+     * @param timeout  The maximum time to parse, in milliseconds.
+     */
     public static void setTimeout(int timeout) {
         Tools.timeout = timeout;
     }



From e.dolstra at tudelft.nl  Fri Jul 10 14:51:20 2009
From: e.dolstra at tudelft.nl (Eelco Dolstra)
Date: Fri, 10 Jul 2009 12:51:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19680 - eelco -
	strategoxt-manual/trunk/doc/tutorial/xt/terms
Message-ID: <200907101249.n6ACnen3007513@proliant.st.ewi.tudelft.nl>

Author: eelco
Date: 2009-07-10 12:51:20 +0000 (Fri, 10 Jul 2009)
New Revision: 19680

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19680&view=rev

Modified:
   strategoxt-manual/trunk/doc/tutorial/xt/terms/chapter.xml

Log:
* Typo.

Changes:

Modified: strategoxt-manual/trunk/doc/tutorial/xt/terms/chapter.xml
===================================================================
--- strategoxt-manual/trunk/doc/tutorial/xt/terms/chapter.xml	2009-07-10 08:26:14 UTC (rev 19679)
+++ strategoxt-manual/trunk/doc/tutorial/xt/terms/chapter.xml	2009-07-10 12:51:20 UTC (rev 19680)
@@ -6,10 +6,10 @@
 
   <para>
     The Annotated Term Format, or <emphasis>ATerms</emphasis> for
-    short, is heavily used in Stratego/XT. It used for the structured
+    short, is heavily used in Stratego/XT. It is used for the structured
     representation of programs (and also data in general). Program
     representations are exchanged between transformation tools in the
-    ATerm format and the data-structures of the Stratego language
+    ATerm format, and the data-structures of the Stratego language
     itself are ATerms.
   </para>
 



From L.C.L.Kats at tudelft.nl  Sun Jul 12 12:57:02 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sun, 12 Jul 2009 10:57:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19681 - LennartKats - in
	sglr-recovery/trunk/permissive-grammars/trans/make-permissive:
	. syntax
Message-ID: <200907121055.n6CAtJra017098@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-12 10:57:02 +0000 (Sun, 12 Jul 2009)
New Revision: 19681

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19681&view=rev

Removed:
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Makefile
Modified:
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile

Log:
Makefile fix.

Changes:

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile	2009-07-10 12:51:20 UTC (rev 19680)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile	2009-07-12 10:57:02 UTC (rev 19681)
@@ -26,3 +26,6 @@
 
 clean :
 	rm -f $(STRS) syntax/*.tbl
+
+%.pp.af : %.pp
+	parse-pp-table -i $< -o $@

Deleted: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Makefile
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Makefile	2009-07-10 12:51:20 UTC (rev 19680)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/syntax/Makefile	2009-07-12 10:57:02 UTC (rev 19681)
@@ -1,16 +0,0 @@
-all : Stratego-Attributes-Sdf2.tbl Comments.pp.af
-
-%.tbl : %.def
-	sdf2table -i $< -o $@ -m `basename $< .def`
-
-%.def : %.sdf
-	pack-sdf -i $< -o $@ \
-	         -Idef $(HOME)/.nix-profile/share/aster/MixStratego-Attributes.def \
-	         -Idef $(HOME)/.nix-profile/share/aster/Stratego-Attributes.def \
-	         -Idef $(HOME)/.nix-profile/share/sdf/sdf-front/Stratego-Sdf2.def
-
-%.pp : %.def
-	ppgen -i $< -o $@
-
-%.pp.af : %.pp
-	parse-pp-table -i $< -o $@



From L.C.L.Kats at tudelft.nl  Sun Jul 12 12:57:55 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sun, 12 Jul 2009 10:57:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19682 - LennartKats -
	sglr-recovery/trunk/permissive-grammars/trans/make-permissive
Message-ID: <200907121056.n6CAuBkT017104@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-12 10:57:55 +0000 (Sun, 12 Jul 2009)
New Revision: 19682

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19682&view=rev

Added:
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/pp-commented-sdf.astr

Log:
Missing file.

Changes:

Added: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/pp-commented-sdf.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/pp-commented-sdf.astr	                        (rev 0)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/pp-commented-sdf.astr	2009-07-12 10:57:55 UTC (rev 19682)
@@ -0,0 +1,12 @@
+module pp-commented-sdf
+
+strategies
+
+  pp-commented-sdf-string =
+    pp-commented-sdf-box;
+    box2text-string(|80)
+
+  pp-commented-sdf-box =
+    sdf-ppfix;
+    ast2box(|[<import-term(Comments.pp.af)>, <pp-table-sdf>])
+



From L.C.L.Kats at tudelft.nl  Sun Jul 12 13:49:50 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sun, 12 Jul 2009 11:49:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19683 - LennartKats -
	sglr-recovery/trunk/permissive-grammars/trans/make-permissive
Message-ID: <200907121148.n6CBm6JK017586@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-12 11:49:50 +0000 (Sun, 12 Jul 2009)
New Revision: 19683

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19683&view=rev

Modified:
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr

Log:
Fixed improper use of collect-all decorator.

Changes:

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr	2009-07-12 10:57:55 UTC (rev 19682)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr	2009-07-12 11:49:50 UTC (rev 19683)
@@ -194,11 +194,11 @@
 
 attributes // Separator literals (e.g., ",")
 
-  def collect-all lexical-insert-separator-prod:
+  def lexical-insert-separator-prod:
     lit @ lit(_) -> |[ -> ~lit ]|
     where
-      id.in-context-free-section;
-      id.in-iter-pattern
+      id.in-iter-pattern;
+      id.in-context-free-section
     where
       if-switch(|OPEN_INSERTIONS_ON())
     <+

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr	2009-07-12 10:57:55 UTC (rev 19682)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr	2009-07-12 11:49:50 UTC (rev 19683)
@@ -62,7 +62,7 @@
   def contributes-to(id.direct-contained-sorts, id.uninit) sort-direct-container-prods:
     prod(_, _, _) -> id
   
-  def test down in-iter-pattern:
+  def Test down in-iter-pattern:
     iter(_)             -> id
     iter-star(_)        -> id
     iter-star-sep(_, _) -> id



From m.dejonge at tudelft.nl  Mon Jul 13 10:53:33 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 13 Jul 2009 08:53:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19684 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907130851.n6D8pm7K031506@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-13 08:53:33 +0000 (Mon, 13 Jul 2009)
New Revision: 19684

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19684&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoverDisambiguator.java

Log:
no indent aterm inspecting (scope recovery done by BP)

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java	2009-07-12 11:49:50 UTC (rev 19683)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java	2009-07-13 08:53:33 UTC (rev 19684)
@@ -24,7 +24,7 @@
     public FineGrainedRepair(SGLR sglr){
         myParser=sglr;  
         myParser.setMaxNrOfRecoveries(2);
-        myParser.setLengthAvoidCheck(50);
+        myParser.setLengthAvoidCheck(25);
         newLinePoints=new ArrayList<IndentInfo>();
         indexLineRecovery=-1;
         indentComparer=new IndentationDisambiguator();
@@ -43,9 +43,9 @@
         if(getFirstBPSuggestPosition() > 0){
             applyBridgeSuggestions(); 
         }
-        else if(searchIndentDeviation()){
-            recoverOnDeviatingLine();                
-        }
+        //else if(searchIndentDeviation()){
+          //  recoverOnDeviatingLine();                
+        //}
         if (recoveryNotSucceeded()) {
             forwardRecovery();
         }

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoverDisambiguator.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoverDisambiguator.java	2009-07-12 11:49:50 UTC (rev 19683)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoverDisambiguator.java	2009-07-13 08:53:33 UTC (rev 19684)
@@ -17,8 +17,8 @@
             return;
         } */ 
         boolean hasCountDiff = trySelectOnRecoverCount(recoverCount_t, t, nl);
-        if(hasCountDiff==false)
-            trySelectByIndentation(recoverCount_t, t, nl);
+        //if(hasCountDiff==false)
+          //  trySelectByIndentation(recoverCount_t, t, nl);
     }
     
     private boolean trySelectOnRecoverCount(int recoverCount_t, IParseNode t, Link nl) {



From L.C.L.Kats at tudelft.nl  Mon Jul 13 11:14:21 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 13 Jul 2009 09:14:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19685 - LennartKats -
	spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907130912.n6D9CZAV031848@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-13 09:14:21 +0000 (Mon, 13 Jul 2009)
New Revision: 19685

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19685&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java

Log:
Added a boundary condition to avoid skipChilds() too many times.

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java	2009-07-13 08:53:33 UTC (rev 19684)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java	2009-07-13 09:14:21 UTC (rev 19685)
@@ -6,8 +6,10 @@
  * Coarse-grained recovery by skipping code-fragments near the error.
  * Uses layout to take human intention into account
  */
-public class StructureRecovery {    
+public class StructureRecovery {
     
+    private final int MAX_SIBLING_SKIPS = 400;
+    
     private boolean isInwardMode;
     private enum SkipAction{
         SKIP_PREVIOUS,
@@ -208,13 +210,13 @@
             setSkipPoint();
             int indent = skipPoint.getIndentValue();
             int childsSkipped=0;
-            while ((childsSkipped < forward || movedToPrev==false) && !hasDedent(skipPoint.getIndentValue(), indent) && (recoverySucceeded()==false)) { //&& (myParser.currentToken != SGLR.EOF)
+            while ((childsSkipped < forward || !movedToPrev) && childsSkipped < MAX_SIBLING_SKIPS && !hasDedent(skipPoint.getIndentValue(), indent) && (recoverySucceeded()==false)) { //&& (myParser.currentToken != SGLR.EOF)
                 doSkipRecoverStep();
                 childsSkipped++;                
             }
             if(lowIndent && getStartSkipPosition().getLineNumber()<getHistory().getBigReducePoint().getLineNumber()-10)
                 break;//not too far backwards
-        } while (movedToPrev && (recoverySucceeded()==false) && (myParser.currentToken != SGLR.EOF));      
+        } while (movedToPrev && !recoverySucceeded() && myParser.currentToken != SGLR.EOF);      
     }
     
     private boolean hasDedent(int indentNew, int indentOld) {



From emma at cs.lth.se  Mon Jul 13 13:19:57 2009
From: emma at cs.lth.se (Emma NilssonNyman)
Date: Mon, 13 Jul 2009 11:19:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19686 -
	EmmaNilssonNyman - in sglr-recovery/trunk/Evaluation_Recovery: .
	Correct_Files/development_files Error_Files/development_files
Message-ID: <200907131118.n6DBIBdK001038@proliant.st.ewi.tudelft.nl>

Author: EmmaNilssonNyman
Date: 2009-07-13 11:19:57 +0000 (Mon, 13 Jul 2009)
New Revision: 19686

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19686&view=rev

Added:
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/testFile3.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/testFile3.java
   sglr-recovery/trunk/Evaluation_Recovery/TestSet.zip
Removed:
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/testFile.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/testFile.java

Log:
A zip file with java tests + renamed the duplicate testFile to testFile3

Changes:

Deleted: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/testFile.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/testFile.java	2009-07-13 09:14:21 UTC (rev 19685)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/testFile.java	2009-07-13 11:19:57 UTC (rev 19686)
@@ -1,30 +0,0 @@
-package org.spoofax.jsglr;
-
-import java.io.IOException;
-import java.util.ArrayList;
-
-class X {
-	
-  private int correctMethod1(){
-     bla();
-     bla();
-     int i=1;
-     return 2;
-  }
-	
-  private int wronglyClosedMethod(){
-      if(true){
-         i=5;
-      }
-      bla();      
-  }     
-  
-  private int correctMethod2(){
-      bla();
-      bla();
-      int i=1;
-      return 2;
-  }
-
-
-}
\ No newline at end of file

Copied: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/testFile3.java (from rev 19683, sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/testFile.java)
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/testFile3.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/testFile3.java	2009-07-13 11:19:57 UTC (rev 19686)
@@ -0,0 +1,30 @@
+package org.spoofax.jsglr;
+
+import java.io.IOException;
+import java.util.ArrayList;
+
+class X {
+	
+  private int correctMethod1(){
+     bla();
+     bla();
+     int i=1;
+     return 2;
+  }
+	
+  private int wronglyClosedMethod(){
+      if(true){
+         i=5;
+      }
+      bla();      
+  }     
+  
+  private int correctMethod2(){
+      bla();
+      bla();
+      int i=1;
+      return 2;
+  }
+
+
+}
\ No newline at end of file


Property changes on: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/testFile3.java
___________________________________________________________________
Added: svn:mergeinfo
   + 

Deleted: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/testFile.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/testFile.java	2009-07-13 09:14:21 UTC (rev 19685)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/testFile.java	2009-07-13 11:19:57 UTC (rev 19686)
@@ -1,31 +0,0 @@
-package org.spoofax.jsglr;
-
-import java.io.IOException;
-import java.util.ArrayList;
-
-class X  
-{ 
-  private int correctMethod1()
-  { 
-    bla();
-    bla();
-    int i = 1;
-    return 2;
-  }
-
-  private int wronglyClosedMethod()
-  { 
-    if(true) /* { */ 
-      i = 5;
-    }
-    bla();
-  }
-
-  private int correctMethod2()
-  { 
-    bla();
-    bla();
-    int i = 1;
-    return 2;
-  }
-}

Copied: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/testFile3.java (from rev 19683, sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/testFile.java)
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/testFile3.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/testFile3.java	2009-07-13 11:19:57 UTC (rev 19686)
@@ -0,0 +1,31 @@
+package org.spoofax.jsglr;
+
+import java.io.IOException;
+import java.util.ArrayList;
+
+class X  
+{ 
+  private int correctMethod1()
+  { 
+    bla();
+    bla();
+    int i = 1;
+    return 2;
+  }
+
+  private int wronglyClosedMethod()
+  { 
+    if(true) /* { */ 
+      i = 5;
+    }
+    bla();
+  }
+
+  private int correctMethod2()
+  { 
+    bla();
+    bla();
+    int i = 1;
+    return 2;
+  }
+}


Property changes on: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/testFile3.java
___________________________________________________________________
Added: svn:mergeinfo
   + 

Added: sglr-recovery/trunk/Evaluation_Recovery/TestSet.zip
===================================================================
(Binary files differ)


Property changes on: sglr-recovery/trunk/Evaluation_Recovery/TestSet.zip
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream



From L.C.L.Kats at tudelft.nl  Mon Jul 13 17:24:37 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 13 Jul 2009 15:24:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19687 - LennartKats -
	aster/trunk/runtime/aster/decorators
Message-ID: <200907131522.n6DFMpqm003836@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-13 15:24:37 +0000 (Mon, 13 Jul 2009)
New Revision: 19687

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19687&view=rev

Modified:
   aster/trunk/runtime/aster/decorators/collection.astr
   aster/trunk/runtime/aster/decorators/lookup.astr

Log:


Changes:

Modified: aster/trunk/runtime/aster/decorators/collection.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/collection.astr	2009-07-13 11:19:57 UTC (rev 19686)
+++ aster/trunk/runtime/aster/decorators/collection.astr	2009-07-13 15:24:37 UTC (rev 19687)
@@ -11,6 +11,8 @@
   aster/decorators/flow
 
 decorators
+
+  TODO: 'all' decorator for collect-all
   
   /**
    * Collects all nodes in the tree where the attribute can be applied,

Modified: aster/trunk/runtime/aster/decorators/lookup.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/lookup.astr	2009-07-13 11:19:57 UTC (rev 19686)
+++ aster/trunk/runtime/aster/decorators/lookup.astr	2009-07-13 15:24:37 UTC (rev 19687)
@@ -69,7 +69,7 @@
    * @param fetch-decl A local declaration fetching attribute that succeeds
    *                   if a given declares the requested identifier.
    */
-  decorator lookup-global(fetch-decl) =
+  decorator at-root cached lookup-global(fetch-decl) =
     id.lookup-unordered(fetch-decl, fail)
   
 decorators
@@ -112,7 +112,7 @@
    * @param fetch-decl A local declaration fetching attribute that succeeds
    *                   if a given declares the requested identifier.
    */
-  decorator plain lookup-multiple-global(fetch-decl) =
+  decorator at-root cached lookup-multiple-global(fetch-decl) =
     id.lookup-multiple-unordered(fetch-decl, fail)
   
 decorators // Collecting declarations for lookup attributes



From L.C.L.Kats at tudelft.nl  Tue Jul 14 11:18:25 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Jul 2009 09:18:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19688 - LennartKats -
	in aster/trunk: runtime/aster/decorators tests trans
	trans/back trans/front
Message-ID: <200907140916.n6E9GcqE016117@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-14 09:18:25 +0000 (Tue, 14 Jul 2009)
New Revision: 19688

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19688&view=rev

Added:
   aster/trunk/tests/bagof.astr
Modified:
   aster/trunk/runtime/aster/decorators/collection.astr
   aster/trunk/runtime/aster/decorators/lang.astr
   aster/trunk/trans/aster.str
   aster/trunk/trans/back/equation-merging.str
   aster/trunk/trans/front/analyze.str
   aster/trunk/trans/front/check.astr

Log:
- Added a new 'bagof' built-in decorator, which can be used to get a list
  of *all* values for all equations that apply for a given term.

- Deprecated the 'collect-all' decorator and replaced it by a 'collect-bagof'
  decorator, which collects all values for all equations that can be applied
  to a tree (e.g., all errors, even if there are more than one per node)


Changes:

Modified: aster/trunk/runtime/aster/decorators/collection.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/collection.astr	2009-07-13 15:24:37 UTC (rev 19687)
+++ aster/trunk/runtime/aster/decorators/collection.astr	2009-07-14 09:18:25 UTC (rev 19688)
@@ -11,22 +11,45 @@
   aster/decorators/flow
 
 decorators
-
-  TODO: 'all' decorator for collect-all
   
+  // TODO: Use bagof for contributes-to
+  
+  // TODO2: Optimize - avoid dynamic rules in contributes-to decorator?
+  
   /**
-   * Collects all nodes in the tree where the attribute can be applied,
-   * including subnodes of the results (using a conc union operator).
+   * For all nodes in the tree, collects a list of values for each of the
+   * equations that can be applied to the node.
+   * The values are combined using the 'conc' operator.
+   *
+   * If no equations can be applied to the tree,
+   * an empty list is returned.
    */
+  decorator at-root bagof collect-bagof(a) =
+    collect-all-lists(a, conc)
+  
+  /**
+   * For all nodes in the tree, collects a list of values for each of the
+   * equations that can be applied to the node.
+   * The values can be combined using the a custom union operator 'un'.
+   *
+   * If no equations can be applied to the tree,
+   * an empty list is returned.
+   */
+  decorator at-root bagof collect-bagof(a, un) =
+    collect-all-lists(a, un)
+  
+  /**
+   * @deprecated
+   */
   decorator at-root collect-all(a) =
     collect-all(a, conc)
   
   /**
-   * Collects all nodes in the tree where the attribute can be applied,
-   * including subnodes of the results, using a custom union operator.
+   * Makes a set from the result of an attribute.
    */
-  decorator at-root collect-all(a, un) =
-    collect-all(a, un)
+  decorator make-set(a) =
+    a;
+    make-set
   
   /**
    * Maps over a list.
@@ -36,8 +59,6 @@
   decorator map(a) =
     map(a)
   
-  // TODO2: Optimize - avoid dynamic rules in contributes-to decorator?
-  
   /**
    * Create collections by adding the attribute value to each of the nodes
    * indicated by <targets>. When evaluated for one of the target nodes,
@@ -59,7 +80,9 @@
    *                       For example, 'id.uninit' disregards the unique
    *                       identity of a node in the tree.
    */
-  decorator node.contributes-to(a, targets, target-to-key) =
+  decorator contributes-to(a, targets, target-to-key) =
+    node := id;
+    
     if not(<CompletedSurvey> a.signature) then
       <contributes-to-survey(targets, target-to-key |a.signature)> id.root
     end;
@@ -98,3 +121,13 @@
         })
       }
     )))
+  
+  /**
+   * A collect-all variant for a strategy <s> that returns a list of results.
+   */
+  collect-all-lists(s, un) =
+    rec x(
+      <conc> (<s>, <crush(![], un,x)>)
+      <+ crush(![], un,x)
+    )
+

Modified: aster/trunk/runtime/aster/decorators/lang.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/lang.astr	2009-07-13 15:24:37 UTC (rev 19687)
+++ aster/trunk/runtime/aster/decorators/lang.astr	2009-07-14 09:18:25 UTC (rev 19688)
@@ -41,3 +41,10 @@
   decorator alter-signature(alter) alter-signature(a, alter) =
     a
 
+  /**
+   * Indicates that all non-failing equations of an attribute should be used
+   * to form a list of results of an attribute. If no equations are
+   * successful, an empty list is returned.
+   */
+  decorator bagof bagof(a) =
+    a

Added: aster/trunk/tests/bagof.astr
===================================================================
--- aster/trunk/tests/bagof.astr	                        (rev 0)
+++ aster/trunk/tests/bagof.astr	2009-07-14 09:18:25 UTC (rev 19688)
@@ -0,0 +1,40 @@
+module bagof
+
+strategies
+
+  main-bagof =
+    option-wrap(
+      verbose-option
+    ,
+      pair := (1,2).init;
+      pair.math-op.debug => [2, 3, 0, -1];
+      pair.no-op.debug => [];
+      pair.find-stuff.debug => [(1,2),(1,0),(2,0),(2,1)]
+    )
+
+attributes
+  
+  def bagof math-op:
+    (i, j) -> <mul> (i,j)
+    (i, j) -> <add> (i,j)
+    (i, j) -> <div> (i,j)
+    (i, j) -> <subt> (i,j)
+
+  def bagof no-op = fail
+  
+  def collect-bagof find-stuff:
+    id -> <gt> (id, 0)
+    id -> <gt> (id, 1)
+    id -> <is-tuple>
+  
+  decorator at-root bagof collect-all'(a) =
+    rec x(
+      <id.debug(!"conc"); conc; id.debug(!" =>")> (<a>, <crush(![], debug(!"uno "); conc,x)>)
+      <+ crush(![], debug(!"deux "); conc,x)
+    )
+    
+    /*
+    id.debug(!" ? ");
+    collect-all(a; id.debug(!" + "), id.debug(!" 1 "); (concat, id); conc; id.debug(!" 2 "));
+    id.debug(!" ! ")
+    */

Modified: aster/trunk/trans/aster.str
===================================================================
--- aster/trunk/trans/aster.str	2009-07-13 15:24:37 UTC (rev 19687)
+++ aster/trunk/trans/aster.str	2009-07-14 09:18:25 UTC (rev 19688)
@@ -41,6 +41,7 @@
     rules(
       ParentVar           := <newname> "parent"
       NodeVar             := <newname> "node"
+      InputVar            := <newname> "input"
       AllParentsVar       := <newname> "all-parents"
       GlobalCacheVar      := <newname> "global-cache"
       RewriteModeVar      := <newname> "rewrite-mode"

Modified: aster/trunk/trans/back/equation-merging.str
===================================================================
--- aster/trunk/trans/back/equation-merging.str	2009-07-13 15:24:37 UTC (rev 19687)
+++ aster/trunk/trans/back/equation-merging.str	2009-07-14 09:18:25 UTC (rev 19688)
@@ -25,19 +25,6 @@
   
   // TODO: Runtime circularity detection using counter argument?
 
-  // TODO: Fallthrough to alternatives on hard failure
-  //
-  // We now have: alt1 <+ alt2 <+ ... <+ default
-  //
-  // We want:
-  //  
-  //   alt1 // = alt1 <+ !EVAL_FAILED);
-  //   (not(EVAL_FAILED); ?success <+ try(?hard-failure));
-  //   (!success
-  //    <+ alt2
-  //       ...
-  //       not(!hard-failure); default
-  //   
   
   add-merged-rules:
     Module(x, decl*) -> Module(x, [decl*, merged])
@@ -79,11 +66,61 @@
       x_node         := <NodeVar>;
       x_eval         := <RuleAccessorName> def;
       defs           := <sort-ordered-defs> <make-set> <bagof-OrderedRuleDefs> def;
-      s              := <fold-lchoice> <map(def-call(|s*, t*))> defs;
+      s              := <fold-merged-def-calls(|def)> <map(make-def-call(|s*, t*))> defs;
       s_trace        := <trace-rule> def;
       s_trace-failed := <trace-failed-rule> def;
       s_rewrite      := <add-rewrite(|x_all-parents, x_global-cache)>
+  
+  // TODO: Fallthrough to alternatives on hard failure
+  //
+  // We now have: alt1 <+ alt2 <+ ... <+ default
+  //
+  // We want:
+  //  
+  //   alt1 // = alt1 <+ !EVAL_FAILED);
+  //   (not(EVAL_FAILED); ?success <+ try(?hard-failure));
+  //   (!success
+  //    <+ alt2
+  //       ...
+  //       not(!hard-failure); default
+  //   
+  fold-merged-def-calls(|def):
+    s_call* -> s
+    where
+      not(<has-marker-decorator(|BAGOF_DECORATOR())> def)
+    <+
+      <IsDecoratorDef> def
+    with
+      s := <fold-lchoice> s_call*
+  
+  fold-merged-def-calls(|def):
+    s_call* -> |[
+      { x_input: 
+        ?x_input;
+        ![];
+        s
+      }
+    ]|
+    where
+      <has-marker-decorator(|BAGOF_DECORATOR())> def;
+      not(<IsDecoratorDef> def)
+    with
+      x_input  := <InputVar>;
+      s_call'* := <map(make-bagof-def-call)> s_call*;
+      s        := <fold-seq> s_call'*
 
+  make-def-call(|s*, t*):
+    Attribute(x_eval, _, _) -> |[ x_eval(s*|t*) ]|
+  
+  make-bagof-def-call:
+    s -> |[
+      ![<s; not(EVAL_FAILED())> x_input | <id>]
+    <+
+      id
+    ]|
+    with
+      x_input := <InputVar>
+
   // TODO2: Move this
   add-rewrite(|x_all-parents, x_global-cache) =
     if UsesAnonymousRewriteRules then
@@ -97,9 +134,6 @@
       !Strat |[ id ]|
     end
 
-  def-call(|s*, t*):
-    Attribute(x_eval, _, _) -> |[ x_eval(s*|t*) ]|
-
   sort-ordered-defs =
     map(!(<OrderedRuleIndex>, <id>));
     qsort({

Modified: aster/trunk/trans/front/analyze.str
===================================================================
--- aster/trunk/trans/front/analyze.str	2009-07-13 15:24:37 UTC (rev 19687)
+++ aster/trunk/trans/front/analyze.str	2009-07-14 09:18:25 UTC (rev 19688)
@@ -13,11 +13,13 @@
   front/analyze-foreign-ops
 
 overlays
+
   PLAIN_DECORATOR              = Decorator("plain", [], [])
   DISABLE_TRACE_DECORATOR      = Decorator("disable-trace", [], [])
   DISABLE_WARNINGS_DECORATOR   = Decorator("disable-warnings", [], [])
   ALTER_SIGNATURE_DECORATOR(s) = Decorator("alter-signature", [s], [])
   CONTEXT_FREE_DECORATOR       = Decorator("context-free", [], [])
+  BAGOF_DECORATOR              = Decorator("bagof", [], [])
   
 strategies // Information gathering
   
@@ -87,6 +89,7 @@
         sig' := <decorator-signature> sig;
         rules(
           IsDecorator: sig
+          IsDecoratorDef: sig'
           HasDeclaration: sig
           DecoratorSignature: sig -> sig'
           AttributeDecorators: sig' -> <AttributeDecorators> sig
@@ -192,7 +195,7 @@
 
   is-native-decorator =
     PLAIN_DECORATOR + DISABLE_TRACE_DECORATOR + DISABLE_WARNINGS_DECORATOR
-  + ALTER_SIGNATURE_DECORATOR(id)
+  + ALTER_SIGNATURE_DECORATOR(id) + BAGOF_DECORATOR
     // (context-free is not a built-in)
   
   is-native-decorator =

Modified: aster/trunk/trans/front/check.astr
===================================================================
--- aster/trunk/trans/front/check.astr	2009-07-13 15:24:37 UTC (rev 19687)
+++ aster/trunk/trans/front/check.astr	2009-07-14 09:18:25 UTC (rev 19688)
@@ -35,6 +35,8 @@
     )
 
 attributes
+  
+  // TODO: use collect-bagof decorator
 
   def after(try(concat-strings)) error:
     Attribute(name, _, _) -> "Undefined attribute referenced"
@@ -169,6 +171,12 @@
   def warning:
     AttributeRef(_, Attribute("cached", [_], [])) -> "Decorator 'cached' should not be used in-line"
     
+    // TODO: Support in-line 'bagof' usage
+    AttributeRef(_, attr) -> "'bagof' functionality not implemented for in-line decorator call"
+    where
+      <is-decorator> attr;
+      <has-marker-decorator(|BAGOF_DECORATOR())> attr
+    
   // TODO: confirm attribute applicability based on pattern, where possible
   
   // TODO: more checks



From L.C.L.Kats at tudelft.nl  Tue Jul 14 12:52:25 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Jul 2009 10:52:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19689 - LennartKats -
	in aster/trunk: runtime/aster/decorators tests
Message-ID: <200907141050.n6EAocos017020@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-14 10:52:25 +0000 (Tue, 14 Jul 2009)
New Revision: 19689

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19689&view=rev

Added:
   aster/trunk/runtime/aster/decorators/types.astr
Modified:
   aster/trunk/runtime/aster/decorators/assert.astr
   aster/trunk/runtime/aster/decorators/collection.astr
   aster/trunk/tests/bagof.astr

Log:
- Moved the decorators that annotate attributes with type assertions to a separate module.
- Ensured that collect-bagof works with the 'Set' decorator and 'union' operator.

Changes:

Modified: aster/trunk/runtime/aster/decorators/assert.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/assert.astr	2009-07-14 09:18:25 UTC (rev 19688)
+++ aster/trunk/runtime/aster/decorators/assert.astr	2009-07-14 10:52:25 UTC (rev 19689)
@@ -8,21 +8,7 @@
 imports
   libstratego-lib
   aster/decorators/common
-    
-signature constructors
 
-  List : Term -> List
-
-strategies
-
-  String = is-string
-  
-  Int = is-int
-  
-  Real = is-real
-  
-  List = is-list
-
 decorators
 
   decorator assert-input(a, condition) =
@@ -61,83 +47,9 @@
     end;
     id.set-uncached-for(a|input)
   */
-
-decorators // Type annotations and assertions
-
-  /**
-   * Decorates an attribute with its output type.
-   * An error will be reported if the attribute is not of this type.
-   *
-   * Example:
-   *
-   * def Type(String) add-suffix :
-   *   s -> <concat-strings> (s, "_", s.suffix)
-   */
-  decorator Type(a, tout) =
-    id.assert-output(a, id.has-Type(tout) |"Attribute result is not of the indicated type")
-
-  /**
-   * Decorates an attribute with its input and output type.
-   * An error will be reported if the attribute is not of these types.
-   *
-   * Examples:
-   *
-   * def Type(String, String) add-suffix :
-   *   s -> <concat-strings> (s, "_", s.suffix)
-   *
-   * def Type(id,     String) add-suffix :
-   *   s -> <concat-strings> (s, "_", s.suffix)
-   */
-  decorator Type(a, tin, tout) =
-    id.assert-input(
-      id.assert-output(
-        a
-      , id.has-Type(tout)
-      |"Attribute result is not of the indicated type"
-      )
-    , id.has-Type(tin)
-    | "Attribute input is not of the indicated type"
-    )
   
   /**
-   * Decorates an attribute with the String output type.
-   * An error will be reported if the attribute is not of this type.
-   *
-   * Example:
-   *
-   * def String add-suffix :
-   *   s -> <concat-strings> (s, "_", s.suffix)
-   */
-  decorator String(a) =
-    id.assert-output(a, String |"Result must be a string")
-
-  decorator List(a) =
-    id.assert-output(a, List |"Result must be a list")
-
-  decorator List(a, t) =
-    id.assert-output(a, list-loop(id.has-Type(t)) |"Result must be a list of the indicated type")
-
-  decorator Int(a) =
-    id.assert-output(a, is-int |"Result must be an int")
-
-  /**
-   * Indicates that an attribute is only used to test for a certain property.
-   */
-  decorator Test(a) =
-    where(a)
-  
-  /**
    * Terminate with a fatal error if the decorated attribute results in a hard failure.
    */
   decorator fail-fatal(a) =
     id.assert-input(a, a.defined |"No attribute equation matches for input")
-
-attributes // Type test helper
-
-  /**
-   * @internal
-   */
-  def plain has-Type(t) =
-    where(t)
-  <+
-    list-loop(<t> List(<id>))

Modified: aster/trunk/runtime/aster/decorators/collection.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/collection.astr	2009-07-14 09:18:25 UTC (rev 19688)
+++ aster/trunk/runtime/aster/decorators/collection.astr	2009-07-14 10:52:25 UTC (rev 19689)
@@ -127,7 +127,7 @@
    */
   collect-all-lists(s, un) =
     rec x(
-      <conc> (<s>, <crush(![], un,x)>)
+      <un> (<s>, <crush(![], un,x)>)
       <+ crush(![], un,x)
     )
 

Copied: aster/trunk/runtime/aster/decorators/types.astr (from rev 19680, aster/trunk/runtime/aster/decorators/assert.astr)
===================================================================
--- aster/trunk/runtime/aster/decorators/types.astr	                        (rev 0)
+++ aster/trunk/runtime/aster/decorators/types.astr	2009-07-14 10:52:25 UTC (rev 19689)
@@ -0,0 +1,133 @@
+/**
+ * Type decorators: annotate attributes with type assertions.
+ *
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+module aster/decorators/types
+
+imports
+  libstratego-lib
+  aster/decorators/common
+  aster/decorators/assert
+    
+signature constructors
+
+  List : Term -> List
+
+strategies
+
+  String = is-string
+  
+  Int = is-int
+  
+  Real = is-real
+  
+  List = is-list
+  
+  Set = id.make-set
+
+decorators // Type annotations and assertions
+
+  /**
+   * Decorates an attribute with its output type.
+   * An error will be reported if the attribute is not of this type.
+   *
+   * Example:
+   *
+   * def Type(String) add-suffix :
+   *   s -> <concat-strings> (s, "_", s.suffix)
+   */
+  decorator Type(a, tout) =
+    id.assert-output(a, id.has-Type(tout) |"Attribute result is not of the indicated type")
+
+  /**
+   * Decorates an attribute with its input and output type.
+   * An error will be reported if the attribute is not of these types.
+   *
+   * Examples:
+   *
+   * def Type(String, String) add-suffix :
+   *   s -> <concat-strings> (s, "_", s.suffix)
+   *
+   * def Type(id,     String) add-suffix :
+   *   s -> <concat-strings> (s, "_", s.suffix)
+   */
+  decorator Type(a, tin, tout) =
+    id.assert-input(
+      id.assert-output(
+        a
+      , id.has-Type(tout)
+      |"Attribute result is not of the indicated type"
+      )
+    , id.has-Type(tin)
+    | "Attribute input is not of the indicated type"
+    )
+  
+  /**
+   * Decorates an attribute with the String output type.
+   * An error will be reported if the attribute is not of this type.
+   *
+   * Example:
+   *
+   * def String add-suffix :
+   *   s -> <concat-strings> (s, "_", s.suffix)
+   */
+  decorator String(a) =
+    id.assert-output(a, String |"Result must be a string")
+
+  decorator List(a) =
+    id.assert-output(a, List |"Result must be a list")
+
+  decorator List(a, t) =
+    id.assert-output(
+      a
+    , list-loop(id.has-Type(t))
+    | "Result must be a list of the indicated type"
+    )
+
+  /**
+   * Annotates that the attribute should result in a list,
+   * and ensures that all elements are unique
+   * (disregarding the tree location of the items).
+   */
+  decorator Set(a) =
+    id.assert-output(a, id.make-set |"Result must be a list or set")
+
+  /**
+   * Annotates that the attribute should result in a list,
+   * and ensures that all elements are unique
+   * (disregarding the tree location of the items).
+   *
+   * Also performs a type test 't' on all elements.
+   */
+  decorator Set(a, t) =
+    id.assert-output(
+      a
+    , id.make-set; list-loop(id.has-Type(t))
+    | "Result must be a list or set of the indicated type"
+    )
+
+  decorator Int(a) =
+    id.assert-output(a, is-int |"Result must be an int")
+
+  /**
+   * Indicates that an attribute is only used to test for a certain property.
+   */
+  decorator Test(a) =
+    where(a)
+  
+  /**
+   * Terminate with a fatal error if the decorated attribute results in a hard failure.
+   */
+  decorator fail-fatal(a) =
+    id.assert-input(a, a.defined |"No attribute equation matches for input")
+
+attributes // Type test helper
+
+  /**
+   * @internal
+   */
+  def plain has-Type(t) =
+    where(t)
+  <+
+    list-loop(<t> List(<id>))


Property changes on: aster/trunk/runtime/aster/decorators/types.astr
___________________________________________________________________
Added: svn:mergeinfo
   + 

Modified: aster/trunk/tests/bagof.astr
===================================================================
--- aster/trunk/tests/bagof.astr	2009-07-14 09:18:25 UTC (rev 19688)
+++ aster/trunk/tests/bagof.astr	2009-07-14 10:52:25 UTC (rev 19689)
@@ -9,7 +9,10 @@
       pair := (1,2).init;
       pair.math-op.debug => [2, 3, 0, -1];
       pair.no-op.debug => [];
-      pair.find-stuff.debug => [(1,2),(1,0),(2,0),(2,1)]
+      pair.find-stuff.debug => [(1,2),(1,0),(2,0),(2,1)];
+      !(1,1,1).init.find-no-dupes.debug => [2];
+      !(1,1,1).init.find-some-dupes.debug => [2,2];
+      !(1,1,1).init.find-no-dupes2.debug => [2]
     )
 
 attributes
@@ -27,14 +30,14 @@
     id -> <gt> (id, 1)
     id -> <is-tuple>
   
-  decorator at-root bagof collect-all'(a) =
-    rec x(
-      <id.debug(!"conc"); conc; id.debug(!" =>")> (<a>, <crush(![], debug(!"uno "); conc,x)>)
-      <+ crush(![], debug(!"deux "); conc,x)
-    )
-    
-    /*
-    id.debug(!" ? ");
-    collect-all(a; id.debug(!" + "), id.debug(!" 1 "); (concat, id); conc; id.debug(!" 2 "));
-    id.debug(!" ! ")
-    */
+  def collect-bagof(union) find-no-dupes:
+    id -> <inc>
+  
+  def collect-bagof(union) find-some-dupes:
+    id -> <inc>
+    id -> <inc>
+  
+  def after(id.make-set) collect-bagof find-no-dupes2:
+    id -> <inc>
+    id -> <inc>
+



From L.C.L.Kats at tudelft.nl  Tue Jul 14 13:02:44 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Jul 2009 11:02:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19690 - LennartKats -
	sglr-recovery/trunk/permissive-grammars/trans/make-permissive
Message-ID: <200907141100.n6EB0vcg017111@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-14 11:02:44 +0000 (Tue, 14 Jul 2009)
New Revision: 19690

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19690&view=rev

Modified:
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr

Log:
Simplified make-permissive with the new collect-bagof decorator.

Changes:

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr	2009-07-14 10:52:25 UTC (rev 19689)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr	2009-07-14 11:02:44 UTC (rev 19690)
@@ -22,46 +22,24 @@
     where
       if-switch(|INSERTIONS_ON())
     with
-      p1* := sections.all-lexical-insert-prods;
-      p2* := sections.all-kernel-insert-prods
+      p1* := sections.lexical-insert-prods;
+      p2* := sections.kernel-insert-prods
   
   eq insert-sections:
     sections -> |[ context-free syntax ]|
     where
       not(if-switch(|INSERTIONS_ON()))
   
-  // TODO: Is there a better way to aggregate these attribute results?
-  //       Perhaps using a new Aster language primitive?
-  //       This same pattern seems useful for collection attributes...
-  def at-root all-lexical-insert-prods =
-    collect-all(
-      ![ <id.lexical-insert-prod           <+ ![]>
-       , <id.lexical-insert-open-prod      <+ ![]>
-       , <id.lexical-insert-all-prod       <+ ![]>
-       , <id.lexical-insert-separator-prod <+ ![]>
-       ]
-    , id.union
-    );
-    flatten-list;
-    id.make-set
+  def after(id.make-set) Set collect-bagof lexical-insert-prods
   
-  def at-root all-kernel-insert-prods =
-    collect-all(
-      id.kernel-insert-prod
-    , id.union
-    );
-    flatten-list
+  def after(id.make-set) Set collect-bagof kernel-insert-prods
   
-  def lexical-insert-prod
-  
-  def kernel-insert-prod
-  
 attributes // Simple closing literals (e.g., "}")
 
   // TODO: Opening and closing literals may also appear in pairs
   //       e.g. "begin" "do" S "while" E "end" "do" -> S
 
-  eq lexical-insert-prod:
+  eq lexical-insert-prods:
     prod([lit(_) | pattern-and-lit], _, _) ->
     |[ 
        -> ~closinglit {recover, cons("INSERTION")}
@@ -91,7 +69,7 @@
   
 attributes // Simple opening literals (e.g., "{")
 
-  def lexical-insert-open-prod:
+  eq lexical-insert-prods:
     prod([openinglit | pattern-and-lit], _, _) ->
     |[ 
        -> ~openinglit {recover, cons("INSERTION")}
@@ -111,7 +89,7 @@
 
   // TODO: INSERTSTART*, INSERTOPENQUOTE sorts should be declared
 
-  eq lexical-insert-prod:
+  eq lexical-insert-prods:
     prod([openinglit | pattern-and-lit], sort, _) ->
     |[ 
        ~openinglit                    -> ~openingsort {recover}
@@ -140,7 +118,7 @@
   
 attributes // Matched (e.g. string) closing literals
 
-  eq lexical-insert-prod =
+  eq lexical-insert-prods =
     id.in-lexical-section;
     id.insert-quote-prod
     
@@ -150,7 +128,7 @@
   // and cannot just be transformed to:
   //   INSERTOPENQUOTE0 StringPart* "\n" -> StringLiteral {recover, cons("INSERTEND")}
   
-  eq kernel-insert-prod =
+  eq kernel-insert-prods =
     id.in-kernel-section;
     id.insert-quote-prod
 
@@ -194,7 +172,7 @@
 
 attributes // Separator literals (e.g., ",")
 
-  def lexical-insert-separator-prod:
+  eq lexical-insert-prods:
     lit @ lit(_) -> |[ -> ~lit ]|
     where
       id.in-iter-pattern;
@@ -208,7 +186,7 @@
 
 attributes // All-literal insertion
 
-  def lexical-insert-all-prod:
+  eq lexical-insert-prods:
     lit @ lit(_) ->
     |[ -> ~lit {recover, cons("INSERTION")} ]|
     where



From L.C.L.Kats at tudelft.nl  Tue Jul 14 13:04:25 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Jul 2009 11:04:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19691 - LennartKats -
	sglr-recovery/trunk/permissive-grammars/trans/make-permissive
Message-ID: <200907141102.n6EB2cro017294@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-14 11:04:25 +0000 (Tue, 14 Jul 2009)
New Revision: 19691

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19691&view=rev

Modified:
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr

Log:
Generate a proper annotation for the separator insertions.

Changes:

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr	2009-07-14 11:02:44 UTC (rev 19690)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr	2009-07-14 11:04:25 UTC (rev 19691)
@@ -173,7 +173,7 @@
 attributes // Separator literals (e.g., ",")
 
   eq lexical-insert-prods:
-    lit @ lit(_) -> |[ -> ~lit ]|
+    lit @ lit(_) -> |[ -> ~lit {recover, cons("INSERTION")} ]|
     where
       id.in-iter-pattern;
       id.in-context-free-section



From L.C.L.Kats at tudelft.nl  Tue Jul 14 13:15:46 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Jul 2009 11:15:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19692 - LennartKats -
	sglr-recovery/trunk/bridge-definitions/trans
Message-ID: <200907141113.n6EBDxuw017374@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-14 11:15:46 +0000 (Tue, 14 Jul 2009)
New Revision: 19692

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19692&view=rev

Modified:
   sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr
   sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr

Log:
Use collect-bagof. Fixed missing in-bracket-rule definition.

Changes:

Modified: sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr	2009-07-14 11:04:25 UTC (rev 19691)
+++ sglr-recovery/trunk/bridge-definitions/trans/island-rules.astr	2009-07-14 11:15:46 UTC (rev 19692)
@@ -5,12 +5,7 @@
   // TODO: Merge rules for the same literal?
   // TODO: Rules for parentheses, with {bracket} attribute
 
-  def island-rules =
-    collect-all(id.start-end-island-rule);
-    concat;
-    make-set
-  
-  def start-end-island-rule:
+  def collect-bagof island-rules:
     [openinglit @ lit(lit) | pattern-and-lit] ->
     [ Island(
         lit-name1'
@@ -86,3 +81,9 @@
     where
       id.in-bracket-rule;
       p*.one(id.eq(|lit-end))
+  
+  def Test down in-bracket-rule:
+    prod(_, _, attrs(a*)) -> id
+    where
+      a*.one(bracket())
+

Modified: sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr
===================================================================
--- sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr	2009-07-14 11:04:25 UTC (rev 19691)
+++ sglr-recovery/trunk/bridge-definitions/trans/reef-rules.astr	2009-07-14 11:15:46 UTC (rev 19692)
@@ -2,10 +2,9 @@
 
 attributes
 
-  def collect-all reef-rules =
-    id.reef-rule
+  def collect-bagof reef-rules
 
-  def reef-rule:
+  eq reef-rules:
     lit(separator) -> Reef(separator', Extends("Keyword"), String(separator), Alt([String(cons)]))
     where
       cons := id.current-cons
@@ -14,7 +13,7 @@
     with
       separator' := separator.new-separator-name
   
-  def reef-rule:
+  eq reef-rules:
     lit(keyword) -> Reef(keyword', Extends("Keyword"), String(keyword), Alt([String(cons)]))
     where
       cons := id.current-cons
@@ -59,7 +58,7 @@
    * e.g., "while" is a result for:
    *   "while" -> ID {reject}
    */
-  def collect-all all-rejected-patterns:
+  def collect-bagof all-rejected-patterns:
     prod([pattern], _, attrs(attrs)) -> pattern
     where
       attrs.one(reject())



From L.C.L.Kats at tudelft.nl  Tue Jul 14 13:23:24 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Jul 2009 11:23:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19693 - LennartKats -
	aster/trunk/runtime/aster/decorators
Message-ID: <200907141121.n6EBLa2W017440@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-14 11:23:24 +0000 (Tue, 14 Jul 2009)
New Revision: 19693

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19693&view=rev

Modified:
   aster/trunk/runtime/aster/decorators/caching.astr
   aster/trunk/runtime/aster/decorators/circular.astr

Log:


Changes:

Modified: aster/trunk/runtime/aster/decorators/caching.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/caching.astr	2009-07-14 11:15:46 UTC (rev 19692)
+++ aster/trunk/runtime/aster/decorators/caching.astr	2009-07-14 11:23:24 UTC (rev 19693)
@@ -24,7 +24,8 @@
   /**
    * Indicates that an attribute should be cached but not initialized.
    */
-  decorator plain t.uninit(a) =
+  decorator plain uninit(a) =
+    t := id;
     if id.get-cached(a) => cached then
       !cached
     else
@@ -39,7 +40,8 @@
    * a.signature, or attributes that take strategy arguments and are
    * normally not cached.
    */
-  decorator plain t.cached(a|sig) =
+  decorator plain cached(a|sig) =
+    t := id;
     if id.get-cached(|sig) => cached then
       !cached
     else

Modified: aster/trunk/runtime/aster/decorators/circular.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/circular.astr	2009-07-14 11:15:46 UTC (rev 19692)
+++ aster/trunk/runtime/aster/decorators/circular.astr	2009-07-14 11:23:24 UTC (rev 19693)
@@ -13,6 +13,7 @@
 signature constructors
   CIRCULAR_FINISHED : Term -> Term
   CIRCULAR_BUSY     : Term -> Term
+  EVAL_CIRCULAR     : Term
 
 decorators
   
@@ -44,6 +45,14 @@
     id.set-cached(a|EVAL_FAILED());
     a
 
+  decorator if-circular(a, default) =
+    t := id;
+    set-cached-attribute(|id.global-cache, id, a.signature, EVAL_CIRCULAR());
+    a;
+    if EVAL_CIRCULAR then
+      <default> t <+ !EVAL_FAILED()
+    end
+
   /**
    * Enables fail-fast behavior for non-circular attributes:
    * the attribute will return a term 't' if recursively evaluated twice



From L.C.L.Kats at tudelft.nl  Tue Jul 14 15:54:09 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Jul 2009 13:54:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19694 - LennartKats -
	strategoxt/branches/strategoxt-annos/strc-core/lib/stratego/strc/pp
Message-ID: <200907141352.n6EDqLYw019268@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-14 13:54:09 +0000 (Tue, 14 Jul 2009)
New Revision: 19694

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19694&view=rev

Modified:
   strategoxt/branches/strategoxt-annos/strc-core/lib/stratego/strc/pp/pp-stratego.str

Log:


Changes:

Modified: strategoxt/branches/strategoxt-annos/strc-core/lib/stratego/strc/pp/pp-stratego.str
===================================================================
--- strategoxt/branches/strategoxt-annos/strc-core/lib/stratego/strc/pp/pp-stratego.str	2009-07-14 11:23:24 UTC (rev 19693)
+++ strategoxt/branches/strategoxt-annos/strc-core/lib/stratego/strc/pp/pp-stratego.str	2009-07-14 13:54:09 UTC (rev 19694)
@@ -67,7 +67,7 @@
   + ArgOption("-la", id,
               !"-la <name>         Ignored (for command-line compatibility with strc).")
 
-  internal pass-includes =
+  pass-includes =
     <get-config<+![]> "-I" ; foldr(id, conc, !["-I", <id>])
 
 strategies



From L.C.L.Kats at tudelft.nl  Tue Jul 14 15:58:27 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Jul 2009 13:58:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19695 - LennartKats -
	aster/trunk/trans
Message-ID: <200907141356.n6EDud2l019313@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-14 13:58:27 +0000 (Tue, 14 Jul 2009)
New Revision: 19695

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19695&view=rev

Modified:
   aster/trunk/trans/Makefile.am
   aster/trunk/trans/aster.str

Log:
Added "about" info.

Changes:

Modified: aster/trunk/trans/Makefile.am
===================================================================
--- aster/trunk/trans/Makefile.am	2009-07-14 13:54:09 UTC (rev 19694)
+++ aster/trunk/trans/Makefile.am	2009-07-14 13:58:27 UTC (rev 19695)
@@ -14,10 +14,13 @@
 	-la stratego-lib \
 	-la stratego-sglr \
 	-la stratego-xtc \
+	-la stratego-tool-doc \
 	-la strc \
 	# `pkg-config --variable=strcxtcflags strategoxt`
 
-LDADD += $(STRATEGO_XTC_LIBS) $(STRATEGOXT)/lib/libstrc.la
+LDADD += $(STRATEGO_XTC_LIBS) \
+         $(STRATEGOXT)/lib/libstrc.la \
+         $(STRATEGO_TOOL_DOC_LIBS)
 
 STRINCLUDES = \
 	-I $(top_srcdir)/syntax \

Modified: aster/trunk/trans/aster.str
===================================================================
--- aster/trunk/trans/aster.str	2009-07-14 13:54:09 UTC (rev 19694)
+++ aster/trunk/trans/aster.str	2009-07-14 13:58:27 UTC (rev 19695)
@@ -7,6 +7,7 @@
 
 imports
   libstratego-lib
+  libstratego-tool-doc
   
   lib/xtc-multi-options
 
@@ -58,6 +59,8 @@
     ?args;
     xtc-multi-io-wrap(
       aster-options
+    , aster-usage
+    , aster-about
     ,
       log-timed-main(
         with(<infer-output-option> args);
@@ -82,3 +85,23 @@
      with(
        <set-config> ("--statistics", 0) // already displayed success and time
      )
+
+  aster-usage =
+    <tool-doc>
+     [ Usage("aster [OPTIONS]")
+     , Summary("Compiles Aster specifications.")
+     , OptionUsage()
+     , AutoReportBugs()
+     ]
+
+  aster-about =
+    <tool-doc>
+     [ AutoProgram()
+     , Author(Person("Lennart C. L. Kats", "lennart add lclnet.nl"))
+     , GNU_LGPL("2009", "Lennart C. L. Kats <lennart add lclnet.nl>")
+     , Config([
+         DefaultXTCRepository()
+       , CurrentXTCRepository()
+       ])
+     ]
+



From L.C.L.Kats at tudelft.nl  Tue Jul 14 16:00:19 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Jul 2009 14:00:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19696 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.ecj/src/org/spoofax/ecjadapter
Message-ID: <200907141358.n6EDwVa8019402@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-14 14:00:18 +0000 (Tue, 14 Jul 2009)
New Revision: 19696

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19696&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.ecj/src/org/spoofax/ecjadapter/ParseJava.java

Log:
Enable statements recovery by default.

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.ecj/src/org/spoofax/ecjadapter/ParseJava.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.ecj/src/org/spoofax/ecjadapter/ParseJava.java	2009-07-14 13:58:27 UTC (rev 19695)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.ecj/src/org/spoofax/ecjadapter/ParseJava.java	2009-07-14 14:00:18 UTC (rev 19696)
@@ -12,15 +12,13 @@
 import java.io.FileOutputStream;
 import java.io.FileReader;
 import java.io.IOException;
-import java.util.HashMap;
-import java.util.Hashtable;
-import java.util.Map;
-import java.util.Set;
 
-import org.eclipse.jdt.core.JavaCore;
+import org.eclipse.jdt.core.ICompilationUnit;
 import org.eclipse.jdt.core.dom.AST;
 import org.eclipse.jdt.core.dom.ASTNode;
 import org.eclipse.jdt.core.dom.ASTParser;
+import org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;
+import org.eclipse.jdt.internal.core.CompilationUnit;
 import org.spoofax.DebugUtil;
 import org.spoofax.interpreter.adapter.ecj.ECJFactory;
 import org.spoofax.interpreter.core.InterpreterException;
@@ -33,7 +31,7 @@
         
     	String inputFile = null;
     	String outputFile = null;
-    	boolean statmentsRecovery=false;
+    	boolean statementsRecovery=true;
     	
         for (int i = 0; i < args.length; i++) {
             if (args[i].equals("--debug")) {
@@ -42,8 +40,8 @@
                 inputFile = args[i + 1];
             } else if (args[i].equals("-o")) {
                 outputFile = args[i + 1];
-            }else if (args[i].equals("-sr")) {
-                statmentsRecovery=true;
+            }else if (args[i].equals("-nsr")) {
+                statementsRecovery=false;
             }
         }
 
@@ -52,7 +50,7 @@
             System.exit(2);
         }
 
-        IStrategoTerm r = parseJava(inputFile, statmentsRecovery);
+        IStrategoTerm r = parseJava(inputFile, statementsRecovery);
         if(r == null) {
         	System.err.println("Failed to open and read file " + inputFile);
         	System.exit(3);
@@ -72,11 +70,14 @@
     private static IStrategoTerm parseJava(String fileName, boolean useStatementsRecovery) throws FileNotFoundException, IOException {
     
     	ASTParser parser = ASTParser.newParser(AST.JLS3);
-    	parser.setStatementsRecovery(useStatementsRecovery);   	
-    	
+    	parser.setStatementsRecovery(useStatementsRecovery);
+    	parser.setKind(ASTParser.K_COMPILATION_UNIT);
+        parser.setResolveBindings(true);
     	parser.setSource(getBytes(fileName));
+    	parser.setBindingsRecovery(true);
     
     	ASTNode ast = parser.createAST(null);
+    	
     	ECJFactory f = new ECJFactory();
     	return f.parseFromTree(ast);
     }



From L.C.L.Kats at tudelft.nl  Tue Jul 14 16:01:24 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Jul 2009 14:01:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19697 - LennartKats -
	in spoofax/trunk/spoofax:
	org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm
	org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl
Message-ID: <200907141359.n6EDxakO019415@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-14 14:01:24 +0000 (Tue, 14 Jul 2009)
New Revision: 19697

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19697&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm/BAFBasicTermFactory.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_TicksToSeconds.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_times.java

Log:
Support decimals for SSL_times. No longer using thread-local timing.

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm/BAFBasicTermFactory.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm/BAFBasicTermFactory.java	2009-07-14 14:00:18 UTC (rev 19696)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm/BAFBasicTermFactory.java	2009-07-14 14:01:24 UTC (rev 19697)
@@ -32,7 +32,11 @@
 
     @Override
     public IStrategoTerm parseFromStream(InputStream inputStream) throws IOException {
-        BufferedInputStream bis = new BufferedInputStream(inputStream);
+        BufferedInputStream bis;
+        if (inputStream instanceof BufferedInputStream)
+            bis = (BufferedInputStream) inputStream;
+        else
+            bis = new BufferedInputStream(inputStream);
         
         if (BAFReader.isBinaryATerm(bis)) {
             ATerm result = new BAFReader(wrappedFactory.getFactory(), bis).readFromBinaryFile(true);

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_TicksToSeconds.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_TicksToSeconds.java	2009-07-14 14:00:18 UTC (rev 19696)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_TicksToSeconds.java	2009-07-14 14:01:24 UTC (rev 19697)
@@ -31,7 +31,7 @@
         else
             return false;
         
-        env.setCurrent(env.getFactory().makeReal(timeValue / SSL_times.TICKS_PER_SECOND));
+        env.setCurrent(env.getFactory().makeReal(timeValue / (double) SSL_times.TICKS_PER_SECOND));
         return true;
     }
 

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_times.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_times.java	2009-07-14 14:00:18 UTC (rev 19696)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_times.java	2009-07-14 14:01:24 UTC (rev 19697)
@@ -1,8 +1,5 @@
 package org.spoofax.interpreter.library.ssl;
 
-import java.lang.management.ManagementFactory;
-import java.lang.management.ThreadMXBean;
-
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.InterpreterException;
 import org.spoofax.interpreter.library.AbstractPrimitive;
@@ -16,6 +13,8 @@
 public class SSL_times extends AbstractPrimitive {
     
     public static final int TICKS_PER_SECOND = 100;
+    
+    private final long startTime = System.nanoTime();
 
     protected SSL_times() {
         super("SSL_times", 0, 0);
@@ -31,13 +30,11 @@
         
         ITermFactory factory = env.getFactory();
         
-        int utime = (int) (getUserTime() / 1000000000 * TICKS_PER_SECOND);
-        int stime = (int) (getSystemTime() / 1000000000 * TICKS_PER_SECOND);
+        int utime = (int) (getUserTime() * TICKS_PER_SECOND / 1000000000);
+        int stime = (int) (getSystemTime() * TICKS_PER_SECOND / 1000000000);
         
         IStrategoTerm utimeTerm = factory.makeInt(utime);
         IStrategoTerm stimeTerm = factory.makeInt(stime);
-        
-        // TODO: Perhaps collect child process times?
         IStrategoTerm ctimeTerm = factory.makeInt(0);
         
         env.setCurrent(factory.makeTuple(utimeTerm, stimeTerm, ctimeTerm, ctimeTerm));
@@ -45,18 +42,29 @@
         return true;
     }
     
+    /**
+     * Get the user time in nanoseconds.
+     */
     private long getUserTime() {
+        return System.nanoTime() - startTime;
+        /* imprecise, incomplete MXBean method:
         ThreadMXBean bean = ManagementFactory.getThreadMXBean();
         return bean.isCurrentThreadCpuTimeSupported()
             ? bean.getCurrentThreadUserTime()
             : 0;
+        */
     }
 
-    /** Get system time in nanoseconds. */
+    /**
+     * Get the system time in nanoseconds.
+     */
     private long getSystemTime() {
+        return 0;
+        /* imprecise, incomplete MXBean method:
         ThreadMXBean bean = ManagementFactory.getThreadMXBean();
         return bean.isCurrentThreadCpuTimeSupported()
             ? (bean.getCurrentThreadCpuTime() - bean.getCurrentThreadUserTime())
             : 0;
+        */
     }
 }



From L.C.L.Kats at tudelft.nl  Tue Jul 14 16:12:20 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Jul 2009 14:12:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19698 - LennartKats -
	in strategoxt/branches/strategoxt-annos:
	stratego-libraries/aterm/lib stratego-libraries/xtc/lib
	stratego-regular/xtc
Message-ID: <200907141410.n6EEAWTx019721@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-14 14:12:19 +0000 (Tue, 14 Jul 2009)
New Revision: 19698

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19698&view=rev

Modified:
   strategoxt/branches/strategoxt-annos/stratego-libraries/aterm/lib/Makefile.am
   strategoxt/branches/strategoxt-annos/stratego-libraries/xtc/lib/Makefile.am
   strategoxt/branches/strategoxt-annos/stratego-regular/xtc/parse-rtg.str
   strategoxt/branches/strategoxt-annos/stratego-regular/xtc/regular-xtc-tools.str
   strategoxt/branches/strategoxt-annos/stratego-regular/xtc/rtg-script.str

Log:
Merged r19375:19381 from the trunk, fixing a libstratego-rtg build problem.

Changes:

Modified: strategoxt/branches/strategoxt-annos/stratego-libraries/aterm/lib/Makefile.am
===================================================================
--- strategoxt/branches/strategoxt-annos/stratego-libraries/aterm/lib/Makefile.am	2009-07-14 14:01:24 UTC (rev 19697)
+++ strategoxt/branches/strategoxt-annos/stratego-libraries/aterm/lib/Makefile.am	2009-07-14 14:12:19 UTC (rev 19698)
@@ -8,7 +8,7 @@
 
 nobase_data_DATA = libstratego-aterm.rtree libstratego-aterm.ctree
 lib_LTLIBRARIES  = libstratego-aterm.la
-EXTRA_DIST = $(atermlib) $(atermlib:.str=.rtree) libstratego-aterm.rtree
+EXTRA_DIST = $(atermlib) $(atermlib:.str=.rtree) $(nobase_data_DATA)
 CLEANFILES = $(wildcard *.dep) 
 BOOTCLEANFILES = libstratego-aterm.rtree libstratego-aterm.c $(atermlib:.str=.rtree)
 

Modified: strategoxt/branches/strategoxt-annos/stratego-libraries/xtc/lib/Makefile.am
===================================================================
--- strategoxt/branches/strategoxt-annos/stratego-libraries/xtc/lib/Makefile.am	2009-07-14 14:01:24 UTC (rev 19697)
+++ strategoxt/branches/strategoxt-annos/stratego-libraries/xtc/lib/Makefile.am	2009-07-14 14:12:19 UTC (rev 19698)
@@ -5,7 +5,7 @@
 pkgdatadir = $(datadir)/xtc
 
 nobase_pkgdata_DATA =  stratego-xtc.str $(fullstrategoxtc:.str=.rtree)
-data_DATA = libstratego-xtc.rtree libstratego-xtc-posix-xsi.rtree
+data_DATA = libstratego-xtc.rtree
 lib_LTLIBRARIES = libstratego-xtc.la
 
 EXTRA_DIST	= $(all_rtree) $(fullstrategoxtc) $(nobase_pkgdata_DATA)

Modified: strategoxt/branches/strategoxt-annos/stratego-regular/xtc/parse-rtg.str
===================================================================
--- strategoxt/branches/strategoxt-annos/stratego-regular/xtc/parse-rtg.str	2009-07-14 14:01:24 UTC (rev 19697)
+++ strategoxt/branches/strategoxt-annos/stratego-regular/xtc/parse-rtg.str	2009-07-14 14:12:19 UTC (rev 19698)
@@ -9,13 +9,13 @@
   main-parse-rtg =
     io-stream-wrap(
       ?(fin, fout)
-      ; <my-parse-rtg-stream> fin
+      ; <parse-rtg-stream> fin
       ; <write-to-stream> (fout, <id>)
     )
 
   my-parse-rtg-stream =
     where(
-      STRRTG-get-rtg-parsetable
+      get-rtg-parse-table
       ; tbl := <open-parse-table>
     )
     ; finally(parse-stream(|tbl), <close-parse-table> tbl)

Modified: strategoxt/branches/strategoxt-annos/stratego-regular/xtc/regular-xtc-tools.str
===================================================================
--- strategoxt/branches/strategoxt-annos/stratego-regular/xtc/regular-xtc-tools.str	2009-07-14 14:01:24 UTC (rev 19697)
+++ strategoxt/branches/strategoxt-annos/stratego-regular/xtc/regular-xtc-tools.str	2009-07-14 14:12:19 UTC (rev 19698)
@@ -14,7 +14,7 @@
   xtc-rtg-front-end =
     xtc-ensure-file
     ; ?FILE(<id>)
-    ; my-parse-rtg-file
+    ; parse-rtg-file
     ; rtg-reduce
     ; rtg-group-productions
 
@@ -39,7 +39,7 @@
 
   my-get-rtg-parse-table =
     MyMemoRTGParseTable
-    <+ STRRTG-get-rtg-parsetable
+    <+ get-rtg-parse-table
        ; open-parse-table
        ; ?tbl
        ; rules(MyMemoRTGParseTable: _ -> tbl)

Modified: strategoxt/branches/strategoxt-annos/stratego-regular/xtc/rtg-script.str
===================================================================
--- strategoxt/branches/strategoxt-annos/stratego-regular/xtc/rtg-script.str	2009-07-14 14:01:24 UTC (rev 19697)
+++ strategoxt/branches/strategoxt-annos/stratego-regular/xtc/rtg-script.str	2009-07-14 14:12:19 UTC (rev 19698)
@@ -42,7 +42,7 @@
 
   eval-command :
     (Read(file), ()) ->
-      <conc-strings; find-in-includes; my-parse-rtg-file> (file, ".rtg")
+      <conc-strings; find-in-includes; parse-rtg-file> (file, ".rtg")
 
   eval-command :
     (Reduce(), rtg) -> <rtg-reduce> rtg



From L.C.L.Kats at tudelft.nl  Tue Jul 14 16:13:24 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Jul 2009 14:13:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19699 - LennartKats -
	strategoxt/branches/strategoxt-annos
Message-ID: <200907141411.n6EEBa3A019739@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-14 14:13:24 +0000 (Tue, 14 Jul 2009)
New Revision: 19699

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19699&view=rev

Modified:
   strategoxt/branches/strategoxt-annos/

Log:
Merged r19375:19381 from the trunk, fixing a libstratego-rtg build problem.

Changes:


Property changes on: strategoxt/branches/strategoxt-annos
___________________________________________________________________
Modified: svn:mergeinfo
   - /strategoxt/branches/strategoxt-with:18038-18120
/strategoxt/trunk:19376-19378
   + /strategoxt/branches/strategoxt-with:18038-18120
/strategoxt/trunk:19376-19381



From L.C.L.Kats at tudelft.nl  Tue Jul 14 16:17:38 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Jul 2009 14:17:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19700 - LennartKats -
	strategoxt/trunk/stratego-libraries/lib/spec/lang
Message-ID: <200907141415.n6EEFpsm019803@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-14 14:17:38 +0000 (Tue, 14 Jul 2009)
New Revision: 19700

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19700&view=rev

Modified:
   strategoxt/trunk/stratego-libraries/lib/spec/lang/dynamic-rules.str

Log:
STR-771: added call to dr-leave-scope in dr-ignore-state

Changes:

Modified: strategoxt/trunk/stratego-libraries/lib/spec/lang/dynamic-rules.str
===================================================================
--- strategoxt/trunk/stratego-libraries/lib/spec/lang/dynamic-rules.str	2009-07-14 14:13:24 UTC (rev 19699)
+++ strategoxt/trunk/stratego-libraries/lib/spec/lang/dynamic-rules.str	2009-07-14 14:17:38 UTC (rev 19700)
@@ -220,11 +220,14 @@
    */
   dr-ignore-state(s|name) =
     where(
-      dr-new-rule-set
-      ; dr-switch-rule-set(|name) => rs
+      dr-new-rule-set => newrule
+      ; dr-switch-rule-set(|name) => oldrule
     )
   ; s
-  ; where(<dr-set-rule-set(|name)> rs)
+  ; where(
+      <dr-leave-scope> newrule
+      ; <dr-set-rule-set(|name)> oldrule
+    )
 
   /**
    * Apply s in a state where the current dynamic rules for names are ignored.
@@ -235,11 +238,14 @@
    */
   dr-ignore-states(s|names) =
     where(
-       <map(dr-new-rule-set)> names
-       ; zip(dr-switch-rule-set | names) => rss
+      newrules := <map(dr-new-rule-set)> names
+      ; zip(dr-switch-rule-set | names) => oldrules
     )
     ; s
-    ; where(<zip(dr-set-rule-set | names)> rss)
+    ; where(
+        <list-loop(dr-leave-scope)> newrules  
+      ; <zip(dr-set-rule-set | names)> oldrules
+      )
 
 strategies
 



From L.C.L.Kats at tudelft.nl  Tue Jul 14 16:18:32 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Jul 2009 14:18:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19701 - LennartKats -
	in strategoxt/branches/strategoxt-annos: .
	stratego-libraries/lib/spec/lang
Message-ID: <200907141416.n6EEGiK3019816@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-14 14:18:32 +0000 (Tue, 14 Jul 2009)
New Revision: 19701

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19701&view=rev

Modified:
   strategoxt/branches/strategoxt-annos/
   strategoxt/branches/strategoxt-annos/stratego-libraries/lib/spec/lang/dynamic-rules.str

Log:
STR-771: added call to dr-leave-scope in dr-ignore-state

Changes:


Property changes on: strategoxt/branches/strategoxt-annos
___________________________________________________________________
Modified: svn:mergeinfo
   - /strategoxt/branches/strategoxt-with:18038-18120
/strategoxt/trunk:19376-19381
   + /strategoxt/branches/strategoxt-with:18038-18120
/strategoxt/trunk:19376-19381,19700

Modified: strategoxt/branches/strategoxt-annos/stratego-libraries/lib/spec/lang/dynamic-rules.str
===================================================================
--- strategoxt/branches/strategoxt-annos/stratego-libraries/lib/spec/lang/dynamic-rules.str	2009-07-14 14:17:38 UTC (rev 19700)
+++ strategoxt/branches/strategoxt-annos/stratego-libraries/lib/spec/lang/dynamic-rules.str	2009-07-14 14:18:32 UTC (rev 19701)
@@ -220,11 +220,14 @@
    */
   dr-ignore-state(s|name) =
     where(
-      dr-new-rule-set
-      ; dr-switch-rule-set(|name) => rs
+      dr-new-rule-set => newrule
+      ; dr-switch-rule-set(|name) => oldrule
     )
   ; s
-  ; where(<dr-set-rule-set(|name)> rs)
+  ; where(
+      <dr-leave-scope> newrule
+      ; <dr-set-rule-set(|name)> oldrule
+    )
 
   /**
    * Apply s in a state where the current dynamic rules for names are ignored.
@@ -235,11 +238,14 @@
    */
   dr-ignore-states(s|names) =
     where(
-       <map(dr-new-rule-set)> names
-       ; zip(dr-switch-rule-set | names) => rss
+      newrules := <map(dr-new-rule-set)> names
+      ; zip(dr-switch-rule-set | names) => oldrules
     )
     ; s
-    ; where(<zip(dr-set-rule-set | names)> rss)
+    ; where(
+        <list-loop(dr-leave-scope)> newrules  
+      ; <zip(dr-set-rule-set | names)> oldrules
+      )
 
 strategies
 



From L.C.L.Kats at tudelft.nl  Thu Jul 16 10:47:32 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 16 Jul 2009 08:47:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19705 - LennartKats -
	aster/branches
Message-ID: <200907160845.n6G8jfXV015897@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-16 08:47:32 +0000 (Thu, 16 Jul 2009)
New Revision: 19705

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19705&view=rev

Added:
   aster/branches/2009-v0.1/

Log:
Version 0.1

Changes:



From L.C.L.Kats at tudelft.nl  Thu Jul 16 10:47:40 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 16 Jul 2009 08:47:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19706 - LennartKats -
	in aster/trunk: . trans trans/back trans/front
Message-ID: <200907160845.n6G8jnWJ015903@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-16 08:47:40 +0000 (Thu, 16 Jul 2009)
New Revision: 19706

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19706&view=rev

Modified:
   aster/trunk/configure.ac
   aster/trunk/trans/back/equation-merging.str
   aster/trunk/trans/front/check.astr
   aster/trunk/trans/io.str

Log:
Bumped to version 0.2.

Changes:

Modified: aster/trunk/configure.ac
===================================================================
--- aster/trunk/configure.ac	2009-07-16 08:47:32 UTC (rev 19705)
+++ aster/trunk/configure.ac	2009-07-16 08:47:40 UTC (rev 19706)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.58])
-AC_INIT([ASTER],[0.1],[stratego-bugs at cs.uu.nl])
+AC_INIT([ASTER],[0.2],[users at strategoxt.org])
 AM_INIT_AUTOMAKE
 
 test "x$prefix" = xNONE && prefix=$ac_default_prefix

Modified: aster/trunk/trans/back/equation-merging.str
===================================================================
--- aster/trunk/trans/back/equation-merging.str	2009-07-16 08:47:32 UTC (rev 19705)
+++ aster/trunk/trans/back/equation-merging.str	2009-07-16 08:47:40 UTC (rev 19706)
@@ -23,9 +23,6 @@
 
 strategies
   
-  // TODO: Runtime circularity detection using counter argument?
-
-  
   add-merged-rules:
     Module(x, decl*) -> Module(x, [decl*, merged])
     with

Modified: aster/trunk/trans/front/check.astr
===================================================================
--- aster/trunk/trans/front/check.astr	2009-07-16 08:47:32 UTC (rev 19705)
+++ aster/trunk/trans/front/check.astr	2009-07-16 08:47:40 UTC (rev 19706)
@@ -186,15 +186,11 @@
   // - warn for rules(...id... -> foo); id does not bind to the current term but acts as a wild card
   
   // TODO: bug patterns?? maybe optional?
-  // - def down is-foo - should not use 'down' without 'test' for testing attribute
+  // - def down is-foo - should not use 'down' without 'Test' for testing attribute
   
   
   // TODO: error if an input module is never imported
 
-strategies
-
-  is-recursive-definition = id // TODO2: is-recursive-definition
-
 attributes
   
   def Test down in-match:

Modified: aster/trunk/trans/io.str
===================================================================
--- aster/trunk/trans/io.str	2009-07-16 08:47:32 UTC (rev 19705)
+++ aster/trunk/trans/io.str	2009-07-16 08:47:40 UTC (rev 19706)
@@ -3,7 +3,7 @@
 imports
   libstratego-lib
   libstratego-sglr
-  libstratego-xtc // TODO2: XTC detox
+  libstratego-xtc  // TODO2: XTC detox
   libstrc
 
 strategies
@@ -18,7 +18,7 @@
     | [ "-i", file
       , "--default-syntax", "Stratego-Attributes"
       , "-I", <xtc-find; dirname <+ !"../syntax"> "Stratego-Attributes.tbl"
-      , "-I", <xtc-find; dirname <+ !"../runtime"> "aster-runtime.str"
+      , "-I", <xtc-find; dirname <+ !"../runtime"> "aster-runtime.rtree"
       | <get-config <+ ![]> "-I"
       ]
     )



From L.C.L.Kats at tudelft.nl  Thu Jul 16 11:11:09 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 16 Jul 2009 09:11:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19707 - LennartKats -
	in java-front/trunk: . lib/java/postprocess
Message-ID: <200907160909.n6G99Jbs016314@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-16 09:11:09 +0000 (Thu, 16 Jul 2009)
New Revision: 19707

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19707&view=rev

Modified:
   java-front/trunk/configure.ac
   java-front/trunk/lib/java/postprocess/java-concat-ids.str
   java-front/trunk/lib/java/postprocess/java-lift-eblocks.str

Log:
Bumped the version to 0.9.1 and added Eelco Visser's optimized e-block
transformation from WebDSL (original revision log follows):

------------------------------------------------------------------------

Optimization of the e-block lifting transformation.

- flatten-inner-block was dead code (InnerBlock is never
  produced by the earlier rules)

- combination map(f); concat replaced by mapconcat(f)

- Replaced collect-om with a dynamic rule collecting statements
  during alltd traversal. From

  collect-split-om-pre-eblock =
    !(<alltd(?PreEBlock(_, <id>))>,<collect-om(?PreEBlock(<id>, _), conc); concat>)

to

  collect-split-om-pre-eblock =
    rules( PreEBlocks := [] )
    ; alltd(lift-pre-eblock)
    ; !(<id>,<PreEBlocks>)

  lift-pre-eblock :
    PreEBlock(bstm*, e) -> e
    with rules( PreEBlocks := <conc>(bstm*, <PreEBlocks>) )

- Added a note about the semantics that this transformation assigns
  to e-blocks, which is dubious (but the same as it was before).



Changes:

Modified: java-front/trunk/configure.ac
===================================================================
--- java-front/trunk/configure.ac	2009-07-16 08:47:40 UTC (rev 19706)
+++ java-front/trunk/configure.ac	2009-07-16 09:11:09 UTC (rev 19707)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.58])
-AC_INIT([java-front],[0.9],[stratego at cs.uu.nl])
+AC_INIT([java-front],[0.9.1],[stratego at cs.uu.nl])
 AC_CONFIG_AUX_DIR([config])
 AM_INIT_AUTOMAKE([1.7.2 -Wall -Wno-portability])
 

Modified: java-front/trunk/lib/java/postprocess/java-concat-ids.str
===================================================================
--- java-front/trunk/lib/java/postprocess/java-concat-ids.str	2009-07-16 08:47:40 UTC (rev 19706)
+++ java-front/trunk/lib/java/postprocess/java-concat-ids.str	2009-07-16 09:11:09 UTC (rev 19707)
@@ -1,7 +1,7 @@
 module java/postprocess/java-concat-ids
 
 imports 
-  libstrategolib  
+  libstratego-lib  
 
 signature constructors
   ConcatIds : ID -> ID

Modified: java-front/trunk/lib/java/postprocess/java-lift-eblocks.str
===================================================================
--- java-front/trunk/lib/java/postprocess/java-lift-eblocks.str	2009-07-16 08:47:40 UTC (rev 19706)
+++ java-front/trunk/lib/java/postprocess/java-lift-eblocks.str	2009-07-16 09:11:09 UTC (rev 19707)
@@ -1,7 +1,29 @@
 module java/postprocess/java-lift-eblocks
+
 imports
-  libstratego-lib 
+  libstratego-lib
 
+/*
+
+Semantics that this transformation gives to e-blocks (is somewhat dubious):
+
+   Plus(PreEBlock([Assign(x1, e1)], PostEBlock(e2, [Assign(x3,e3)])),
+        PreEBlock([Assign(x4, e4)], PostEBlock(e5, [Assign(x6,e6)])))
+
+->
+
+   [Assign(x1, e1),
+    Assign(x4, e4),
+    Plus(e2, e5),
+    Assign(x3, e3),
+    Assign(x6, e6)]
+
+with left-to-right evaluation would we not expect the x3 assignment to happen
+before the x4 assignment?
+
+*/
+
+
 strategies
 
   java-lift-eblocks =
@@ -15,55 +37,92 @@
     <+  java-lift-from-constructor-blocks
     <+  java-lift-from-switchgroup-blocks
   
-  java-lift-from-blocks = 
-      ?Block(<id>)
-    ; map(java-local-lift-eblocks)
-    ; concat
-    ; java-flatten-inner-block
-    ; !Block(<id>)
+  java-lift-from-blocks : 
+    Block(bstm1*) -> Block(bstm2*)
+    with bstm2* := <mapconcat(java-local-lift-eblocks)> bstm1*
 
-  java-lift-from-constructor-blocks = 
-      ?ConstrBody(x, <id>)
-    ; map(java-local-lift-eblocks)
-    ; concat
-    ; java-flatten-inner-block
-    ; !ConstrBody(x, <id>)
+  java-lift-from-constructor-blocks :
+    ConstrBody(x, bstm1*) -> ConstrBody(x, bstm2*) 
+    with bstm2* := <mapconcat(java-local-lift-eblocks)> bstm1*
 
-  java-lift-from-switchgroup-blocks =
-      ?SwitchGroup(x, <id>)
-    ; map(java-local-lift-eblocks)
-    ; concat
-    ; java-flatten-inner-block
-    ; !SwitchGroup(x, <id>)
+  java-lift-from-switchgroup-blocks :
+    SwitchGroup(x, bstm1*) -> SwitchGroup(x, bstm2*)
+    with bstm2* := <mapconcat(java-local-lift-eblocks)> bstm1*
       
   /**
    * @todo  Nested EBlocks?
    * @todo  Nested Blocks?
    * @todo  Is Block the only block level element?
    * @todo  Anonymous inner classes?
-   * @todo  Is flatten-list required?
    */
   java-local-lift-eblocks =
       java-collect-split-om-pre-eblock
     ; ?(<id>, pre-stms)
     ; java-collect-split-om-post-eblock
     ; ?(t, post-stms)
-    ; ( !post-stms => []; !pre-stms => []
-      < ![t]
-      + <concat> [<map(java-local-lift-eblocks); concat> pre-stms, <java-local-lift-eblocks> t, <map(java-local-lift-eblocks); concat> post-stms]
-      )
+    ; if !post-stms => []; !pre-stms => [] then
+        ![t]
+      else 
+        <concat> [<mapconcat(java-local-lift-eblocks)> pre-stms, <java-local-lift-eblocks> t, <mapconcat(java-local-lift-eblocks)> post-stms]
+      end
 
   java-collect-split-om-pre-eblock =
+    rules( JavaPreEBlocks := [] )
+    ; alltd(java-lift-pre-eblock)
+    ; !(<id>,<JavaPreEBlocks>)
+
+  java-lift-pre-eblock :
+    PreEBlock(bstm*, e) -> e
+    with rules( JavaPreEBlocks := <conc>(bstm*, <JavaPreEBlocks>) )
+
+  java-collect-split-om-post-eblock =
+    rules( JavaPostEBlocks := [] )
+    ; alltd(java-lift-post-eblock)
+    ; !(<id>,<JavaPostEBlocks>)
+
+  java-lift-post-eblock :
+    PostEBlock(e, bstm*) -> e
+    with rules( JavaPostEBlocks := <conc>(bstm*, <JavaPostEBlocks>) )
+
+/*
+  collect-split-om-pre-eblock =
+    rules( JavaPreEBlocks := [] )
+    ; alltd(lift-pre-eblock)
+    ; !(<id>,<JavaPreEBlocks>)
+
+  lift-pre-eblock :
+    PreEBlock(bstm*, e) -> e
+    with rules( JavaPreEBlocks := <conc>(bstm*, <JavaPreEBlocks>) )
+
+  collect-split-om-post-eblock =
+    rules( JavaPostEBlocks := [] )
+    ; alltd(java-lift-post-eblock)
+    ; !(<id>,<JavaPostEBlocks>)
+
+  lift-post-eblock :
+    PostEBlock(e, bstm*) -> e
+    with rules( JavaPostEBlocks := <conc>(bstm*, <JavaPostEBlocks>) )
+*/
+
+/*
+
+  collect-split-om-pre-eblock =
     !(<alltd(?PreEBlock(_, <id>))>,<collect-om(?PreEBlock(<id>, _), conc); concat>)
 
-  java-collect-split-om-post-eblock =
+  collect-split-om-post-eblock =
     !(<alltd(?PostEBlock(<id>, _))>, <collect-om(?PostEBlock(_, <id>), conc); concat>)
+*/
 
-  java-flatten-inner-block = 
-    ?[ InnerBlock(ys) | xs ];<conc>(<java-flatten-inner-block>ys, <java-flatten-inner-block>xs)
+/*
+
+  flatten-inner-block = 
+    \ [ InnerBlock(ys) | xs ] -> <conc>(<flatten-inner-block>ys, <flatten-inner-block>xs) \; say(!"InnerBlock")
       <+
-    ?[ x | xs ];![ x | <java-flatten-inner-block>xs ]
+    \ [ x | xs ] -> [ x | <flatten-inner-block>xs ] \
       <+
-    ?[ InnerBlock(ys) | [] ] ; <java-flatten-inner-block> ys
+    \ [ InnerBlock(ys) | [] ] -> <flatten-inner-block> ys \; say(!"InnerBlock")
       <+
-    ?[ x | [] ];![ x ]
+    \ [ x | [] ] -> [ x ] \
+      <+
+    ?[]
+*/



From L.C.L.Kats at tudelft.nl  Thu Jul 16 11:11:36 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 16 Jul 2009 09:11:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19708 - LennartKats -
	java-front/trunk
Message-ID: <200907160909.n6G99k6E016323@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-16 09:11:36 +0000 (Thu, 16 Jul 2009)
New Revision: 19708

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19708&view=rev

Modified:
   java-front/trunk/configure.ac

Log:


Changes:

Modified: java-front/trunk/configure.ac
===================================================================
--- java-front/trunk/configure.ac	2009-07-16 09:11:09 UTC (rev 19707)
+++ java-front/trunk/configure.ac	2009-07-16 09:11:36 UTC (rev 19708)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.58])
-AC_INIT([java-front],[0.9.1],[stratego at cs.uu.nl])
+AC_INIT([java-front],[0.9.1],[users at strategoxt.org])
 AC_CONFIG_AUX_DIR([config])
 AM_INIT_AUTOMAKE([1.7.2 -Wall -Wno-portability])
 



From L.C.L.Kats at tudelft.nl  Thu Jul 16 16:34:38 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 16 Jul 2009 14:34:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19712 - LennartKats - in
	spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp:
	. project services util
Message-ID: <200907161432.n6GEWlUu020554@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-16 14:34:38 +0000 (Thu, 16 Jul 2009)
New Revision: 19712

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19712&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/options.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-grammar.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/configure-main-descriptor.str
Removed:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/read-main-descriptor.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/util/options.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/main.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-classpath.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-manifest.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-packed-descriptor-file.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/util/input.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/util/output.str

Log:
- Made the '-i' parameter optional.
  A simple skeleton grammar is generated if no input grammar is specified.

- Changed the default project structure so editor-related files end up in
  /editor/ and /editor/java/


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/main.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/main.str	2009-07-16 12:33:08 UTC (rev 19711)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/main.str	2009-07-16 14:34:38 UTC (rev 19712)
@@ -9,6 +9,7 @@
   
   EditorService
   
+  sdf2imp/options
   sdf2imp/project/-
   sdf2imp/services/-
   sdf2imp/util/-
@@ -25,7 +26,7 @@
 strategies
 
   main-sdf2imp =
-    xtc-input-wrap(
+    option-wrap(
       sdf2imp-options
     , 
       with(<set-verbosity> 2);
@@ -60,14 +61,20 @@
 strategies
 
   sdf2imp =
-    xtc-ensure-file;
-    if FILE(has-extension(|"esv") => esv) then
-      <find-def-file> esv
-    <+
-      fatal-err(|"Could not find associated .def file")
-    end => input;
+    if InputFile then
+      !FILE(<InputFile>);
+      if FILE(has-extension(|"esv") => esv) then
+        <find-def-file> esv
+      <+
+        fatal-err(|"Could not find associated .def file")
+      end;
+      ?input
+    else
+      create-grammar;
+      input := <pack-sdf> FILE(<conc-strings> ("syntax/", <get-main-class-name>, ".sdf"))
+    end;
   
-    read-main-descriptor;
+    configure-main-descriptor;
     <sdf2rtg> input;
   
     if NoExistingDescriptor then
@@ -84,23 +91,31 @@
 
     create-packed-descriptor-file;
     
-    create-java-implementation;
-    
-    <copy-or-create-parse-table> input
-  
-  create-java-implementation =    
-    // Create other plugin classes
     create-parse-controller;
     create-build-properties;
     create-project-file;
     create-activator;
     create-classpath;
     create-manifest;
-    create-plugin-xml
+    create-plugin-xml;
+    
+    <copy-or-create-parse-table> input
   
-  sdf2rtg =
-    verbose-msg(!"Analyzing grammar...");
-    xtc-transform(!"sdf2rtg", !["--ignore-missing-cons", "-m", <get-sdf-main-module> | <pass-verbose>]);
-    parse-xtc-file-report-errors(|<open-parse-table> <import-term(include/rtg.tbl)>, "RTG");
-    ?RTG(_, ProdRules(<id>));
-    register-rtg
+  // TODO: XTC detox
+  sdf2rtg:
+    FILE(sdf) -> rtg
+    with
+      verbose-msg(!"Analyzing grammar...");
+      if FILE(has-extension(|"sdf")) then
+        fatal-err(|"Input file must be a .def file.")
+      end;
+      xtc-transform(!"sdf2rtg", !["--ignore-missing-cons", "-m", <get-sdf-main-module> | <pass-verbose>]);
+      parse-xtc-file-report-errors(|<open-parse-table> <import-term(include/rtg.tbl)>, "RTG") => rtg;
+      ?RTG(_, ProdRules(<id>));
+      register-rtg
+
+  pack-sdf:
+    FILE(sdf) -> FILE(def)
+    with
+      def := <guarantee-extension(|"def")> sdf;
+      <xtc-command(!"pack-sdf")> ["-i", sdf, "-o", def | <pass-verbose>]

Copied: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/options.str (from rev 19706, spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/util/options.str)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/options.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/options.str	2009-07-16 14:34:38 UTC (rev 19712)
@@ -0,0 +1,97 @@
+module sdf2imp/util/options
+
+strategies
+
+  sdf2imp-options =
+     sdf-main-module-option // -m <mod>; sets get-sdf-main-module
+  <+ input-file-option
+  <+ extensions-option
+  <+ parse-table-option
+  <+ package-name-option
+  <+ start-symbol-option
+  <+ reset-files-option
+
+  input-file-option =
+    ArgOption(
+      "-i"
+    , rules(InputFile := <id>)
+    , !"-i <grammar>.def      Set input file (optional)"
+    )
+
+  parse-table-option =
+    ArgOption(
+      "-i"
+    , rules(ParseTable := <id>)
+    , !"-p <parse table>.tbl  Set parse table (optional)"
+    )
+
+  extensions-option =
+    ArgOption(
+      "-e"
+    , rules(EditorExtensions := <id>)
+    , !"-e <extensions>       Set editor file extensions (comma separated)"
+    )
+
+  package-name-option =
+    ArgOption(
+      "-n"
+    , rules(BasePackage := <id>);
+      get-package-name(fail) // ensure legal
+    , !"-n <packagename>      Set base package name (optional)"
+    )
+    
+  start-symbol-option =
+    ArgOption(
+      "-s"
+    , parameterized-sort-to-rtg-sort;
+      if is-substring(!",") then
+        // TODO: Multiple start symbols
+        err(|"Multiple start symbols not supported yet, please specify a single start symbol");
+        fail
+      end;
+      rules(StartSymbol := <id>)
+    , !"-s <start symbol>     Set start symbol"
+    )
+
+  reset-files-option =
+    Option(
+      "-r" + "--reset"
+    , rules(ResetFiles: _)
+    , !"-r | --reset          Reset all generated files to their defaults"
+    )
+  
+  parameterized-sort-to-rtg-sort =
+    // Module[StrategoHost] -> Module_StrategoHost
+    string-replace(|"[[", "_");
+    string-replace(|"[", "_");
+    string-replace(|"]", "")
+  
+  get-package-name =
+    get-package-name(default-package-name)
+  
+  get-package-name(default) =
+    ( BasePackage
+    <+
+      default
+    );
+    string-tokenize('.');
+    map(!Id(<id>));
+    !PackageName(<id>)
+  
+  default-package-name =
+    get-sdf-main-module;
+    to-java-class-name;
+    lower-case;
+    <conc-strings> ("org.strategoxt.imp.generated.", <id>)
+  
+  check-options =
+    require-option(
+      where(<get-config> SdfMainModuleFlag)
+    | "Main module (-m)"
+    )
+  
+  require-option(rule|description) = 
+    rule
+  <+
+    fatal-err-msg(|<conc-strings> (description, " not specified"))
+    

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-classpath.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-classpath.str	2009-07-16 12:33:08 UTC (rev 19711)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-classpath.str	2009-07-16 14:34:38 UTC (rev 19712)
@@ -9,7 +9,7 @@
     <output-xml-file(|[], ".classpath")>
     %><?xml version="1.0" encoding="UTF-8"?>
 <classpath>
-	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="src" path="editor/java"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
 	<classpathentry kind="output" path="bin"/>

Added: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-grammar.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-grammar.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-grammar.str	2009-07-16 14:34:38 UTC (rev 19712)
@@ -0,0 +1,82 @@
+module sdf2imp/project/create-grammar
+
+imports
+  sdf2imp/util/-
+
+strategies
+
+  create-grammar =
+    create-grammar-main;
+    create-grammar-common
+  
+  create-grammar-main =
+    <file-exists> <conc-strings> ("syntax/", <get-main-class-name>, ".sdf")
+  <+
+    name        := <get-main-class-name>;
+    startsymbol := <StartSymbol <+ !"Start">;
+    
+    <output-text-file(|["syntax"], <conc-strings> (name, ".sdf"))>
+    <conc-strings>
+(
+"module ", name, "
+
+imports Common
+
+exports
+
+  context-free start-symbols
+    ", startsymbol, "
+
+  context-free syntax
+  
+    \"module\" ID Definition*       -> ", startsymbol, " {cons(\"Module\")}
+    \"entity\" ID \"{\" Property* \"}\" -> Definition {cons(\"Entity\")}
+    ID \":\" Type                   -> Property {cons(\"Property\")}
+    ID                            -> Type {cons(\"Type\")}
+"
+)
+  
+  create-grammar-common =
+    <file-exists> <conc-strings> ("syntax/Common.sdf")
+  <+
+    <output-text-file(|["syntax"], "Common.sdf")>
+(
+"module Common
+
+exports
+
+  sorts
+    ID INT STRING StringChar CommentChar
+
+  lexical syntax
+  
+    [a-zA-Z][a-zA-Z0-9\\_]* -> ID
+    \"-\"? [0-9]+            -> INT
+    \"\\\"\" ~[\\\"\\n]* \"\\\"\"     -> STRING
+    
+    \"\\\"\" StringChar* \"\\\"\" -> STRING
+    ~[\\\"\\n]               -> StringChar
+    \"\\\\\\\"\"                -> StringChar
+    
+    [\\ \\t\\n\\r] -> LAYOUT
+    
+    [\\*]                             -> CommentChar
+    \"/*\" (~[\\*] | CommentChar)* \"*/\" -> LAYOUT
+    \"//\" ~[\\n\\r]* ([\\n\\r] | EOF)     -> LAYOUT
+    
+    -> EOF
+  
+  lexical restrictions
+  
+    CommentChar -/- [\\/]
+    INT         -/- [0-9]
+    ID          -/- [a-zA-Z0-9\\_]
+    EOF         -/- ~[]
+
+  context-free restrictions
+
+    LAYOUT? -/- [\\ \\t\\n\\r]
+    LAYOUT? -/- [\\/].[\\/]
+    LAYOUT? -/- [\\/].[\\*]
+"
+)
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-manifest.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-manifest.str	2009-07-16 12:33:08 UTC (rev 19711)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-manifest.str	2009-07-16 14:34:38 UTC (rev 19712)
@@ -12,8 +12,8 @@
     package := <BasePackage <+ default-package-name>;
     
     <output-text-file(|["META-INF"], "MANIFEST.MF")>
-    
-<conc-strings> (
+    <conc-strings>
+(
 "Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: ", name, " Plug-in

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-packed-descriptor-file.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-packed-descriptor-file.str	2009-07-16 12:33:08 UTC (rev 19711)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-packed-descriptor-file.str	2009-07-16 14:34:38 UTC (rev 19712)
@@ -10,7 +10,7 @@
   create-packed-descriptor-file =
     {| InputDirPrefix:
       risky(
-        <add-input-dir-prefix> "src/";
+        <add-input-dir-prefix> "editor/";
         filename := <packed-descriptor-file-name>;
         main     := <main-descriptor-name>;
         

Copied: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/configure-main-descriptor.str (from rev 19706, spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/read-main-descriptor.str)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/configure-main-descriptor.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/configure-main-descriptor.str	2009-07-16 14:34:38 UTC (rev 19712)
@@ -0,0 +1,98 @@
+module sdf2imp/services/configure-main-descriptor
+
+imports
+  libstratego-lib
+  
+  sdf2imp/util/-
+
+strategies
+
+  // FIXME: Error reporting not always working for new editor..?
+
+  /**
+   * Records the descriptor configuration, using the 
+   * existing descriptor file and/or the command-line options.
+   */
+  configure-main-descriptor =
+    current-main-descriptor-file;
+    
+    rules(MainDescriptor := <id>);
+    
+    require-option(
+      where(<set-config> (SdfMainModuleFlag(), <find-main-module>));
+      with(get-sdf-main-module)
+    | <NoExistingDescriptor < !"Main module (-m)" + !"language name">
+    );
+    
+    require-option(
+      rules(StartSymbol := <find-start-symbol>)
+    | <NoExistingDescriptor < !"Start symbols (-s)" + !"language start symbols">
+    );
+    
+    require-option(
+     rules(BasePackage := <find-package-name>)
+    | <NoExistingDescriptor < !"Package name (-p)" + !"language id">
+    );
+    
+    require-option(
+      rules(EditorExtensions := <find-editor-extensions>)
+    | <NoExistingDescriptor < !"Editor file extensions (-e)" + !"language extensions">
+    )
+  
+  current-main-descriptor-file =
+     {| InputDirPrefix, OnImportFailure:
+       <add-input-dir-prefix> "editor/";
+       rules(
+         OnImportFailure:
+           Import(m) -> Module("", NoImports(), [])
+           where
+             if <eq> (<main-descriptor-name>, m) then
+               fail
+             end
+       );
+       verbosity-scope(
+         main-descriptor-name;
+         input-descriptor-file
+       | -1
+       );
+       verbose-msg(!"Existing descriptor determines generated services:", main-descriptor-name)
+     |}
+   <+
+     // Could not read the existing file: use the defaults instead, but don't overwrite the file
+     rules(NoExistingDescriptor: _);
+     default-main-descriptor
+
+  find-main-module =
+    oncetd(?LanguageName(result));
+    verbose-msg(!"Using main module", !result);
+    !result
+
+  find-start-symbol =
+    oncetd(?StartSymbols(Values([result])));
+    verbose-msg(!"Using start symbol", !result);
+    !result
+
+  find-editor-extensions =
+    oncetd(?Extensions(Values(results)));
+    result := <separate-by(|","); concat-strings> results;
+    verbose-msg(!"Using file extensions", !result);
+    !result
+
+  find-package-name =
+    with(
+      oncetd(?LanguageId(result))
+    <+
+      default-package-name => result
+    );
+    verbose-msg(!"Using package name", !result);
+    !result
+
+  verbosity-scope(s|level) = 
+    with( 
+      oldlevel := <verbosity>;
+      <set-verbosity> level
+    );
+    finally(
+      s
+    , <set-verbosity> oldlevel
+    )

Deleted: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/read-main-descriptor.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/read-main-descriptor.str	2009-07-16 12:33:08 UTC (rev 19711)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/read-main-descriptor.str	2009-07-16 14:34:38 UTC (rev 19712)
@@ -1,94 +0,0 @@
-module sdf2imp/services/read-main-descriptor
-
-imports
-  libstratego-lib
-  
-  sdf2imp/util/-
-
-strategies
-
-  // FIXME: Error reporting not always working for new editor..?
-
-  read-main-descriptor =
-    current-main-descriptor-file;
-    
-    rules(MainDescriptor := <id>);
-    
-    require-option(
-      where(<set-config> (SdfMainModuleFlag(), <find-main-module>));
-      with(get-sdf-main-module)
-    | <NoExistingDescriptor < !"Main module (-m)" + !"language name">
-    );
-    
-    require-option(
-      rules(StartSymbol := <find-start-symbol>)
-    | <NoExistingDescriptor < !"Start symbols (-s)" + !"language start symbols">
-    );
-    
-    require-option(
-     rules(BasePackage := <find-package-name>)
-    | <NoExistingDescriptor < !"Package name (-p)" + !"language id">
-    );
-    
-    require-option(
-      rules(EditorExtensions := <find-editor-extensions>)
-    | <NoExistingDescriptor < !"Editor file extensions (-e)" + !"language extensions">
-    )
-  
-  current-main-descriptor-file =
-     {| InputDirPrefix, OnImportFailure:
-       <add-input-dir-prefix> "src/";
-       rules(
-         OnImportFailure:
-           Import(m) -> Module("", NoImports(), [])
-           where
-             if <eq> (<main-descriptor-name>, m) then
-               fail
-             end
-       );
-       verbosity-scope(
-         main-descriptor-name;
-         input-descriptor-file
-       | -1
-       );
-       verbose-msg(!"Existing descriptor determines generated services:", main-descriptor-name)
-     |}
-   <+
-     // Could not read the existing file: use the defaults instead, but don't overwrite the file
-     rules(NoExistingDescriptor: _);
-     default-main-descriptor
-
-  find-main-module =
-    oncetd(?LanguageName(result));
-    verbose-msg(!"Using main module", !result);
-    !result
-
-  find-start-symbol =
-    oncetd(?StartSymbols(Values([result])));
-    verbose-msg(!"Using start symbol", !result);
-    !result
-
-  find-editor-extensions =
-    oncetd(?Extensions(Values(results)));
-    result := <separate-by(|","); concat-strings> results;
-    verbose-msg(!"Using file extensions", !result);
-    !result
-
-  find-package-name =
-    with(
-      oncetd(?LanguageId(result))
-    <+
-      default-package-name => result
-    );
-    verbose-msg(!"Using package name", !result);
-    !result
-
-  verbosity-scope(s|level) = 
-    with( 
-      oldlevel := <verbosity>;
-      <set-verbosity> level
-    );
-    finally(
-      s
-    , <set-verbosity> oldlevel
-    )

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/util/input.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/util/input.str	2009-07-16 12:33:08 UTC (rev 19711)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/util/input.str	2009-07-16 14:34:38 UTC (rev 19712)
@@ -38,7 +38,7 @@
   
   input-descriptor-import =
     ?Import(name);
-    !FILE(<add-extension; include-input-dir-prefix> (name, "esv"));
+    !FILE(<add-extension; include-input-dir-prefix; file-exists> (name, "esv"));
     parse-xtc-file-report-errors(|<parse-table-descriptor>, "Module");
     
     risky(

Deleted: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/util/options.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/util/options.str	2009-07-16 12:33:08 UTC (rev 19711)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/util/options.str	2009-07-16 14:34:38 UTC (rev 19712)
@@ -1,89 +0,0 @@
-module sdf2imp/util/options
-
-strategies
-
-  sdf2imp-options =
-    sdf-main-module-option // -m <mod>; defines get-sdf-main-module
-  + extensions-option
-  + parse-table-option
-  + package-name-option
-  + start-symbol-option
-  + reset-files-option
-
-  parse-table-option =
-    ArgOption(
-      "-p"
-    , rules(ParseTable := <id>)
-    , !"-p <parse table>.tbl  Set parse table (optional)"
-    )
-
-  extensions-option =
-    ArgOption(
-      "-e"
-    , rules(EditorExtensions := <id>)
-    , !"-e <extensions>       Set editor file extensions (comma separated)"
-    )
-
-  package-name-option =
-    ArgOption(
-      "-n"
-    , rules(BasePackage := <id>);
-      get-package-name(fail) // ensure legal
-    , !"-n <packagename>      Set base package name (optional)"
-    )
-    
-  start-symbol-option =
-    ArgOption(
-      "-s"
-    , parameterized-sort-to-rtg-sort;
-      if is-substring(!",") then
-        // TODO: Multiple start symbols
-        err(|"Multiple start symbols not supported yet, please specify a single start symbol");
-        fail
-      end;
-      rules(StartSymbol := <id>)
-    , !"-s <start symbol>     Set start symbol"
-    )
-
-  reset-files-option =
-    Option(
-      "-r" + "--reset"
-    , rules(ResetFiles: _)
-    , !"-r | --reset          Reset all generated files to their defaults"
-    )
-  
-  parameterized-sort-to-rtg-sort =
-    // Module[StrategoHost] -> Module_StrategoHost
-    string-replace(|"[[", "_");
-    string-replace(|"[", "_");
-    string-replace(|"]", "")
-  
-  get-package-name =
-    get-package-name(default-package-name)
-  
-  get-package-name(default) =
-    ( BasePackage
-    <+
-      default
-    );
-    string-tokenize('.');
-    map(!Id(<id>));
-    !PackageName(<id>)
-  
-  default-package-name =
-    get-sdf-main-module;
-    to-java-class-name;
-    lower-case;
-    <conc-strings> ("org.strategoxt.imp.generated.", <id>)
-  
-  check-options =
-    require-option(
-      where(<get-config> SdfMainModuleFlag)
-    | "Main module (-m)"
-    )
-  
-  require-option(rule|description) = 
-    rule
-  <+
-    fatal-err-msg(|<conc-strings> (description, " not specified"))
-    

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/util/output.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/util/output.str	2009-07-16 12:33:08 UTC (rev 19711)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/util/output.str	2009-07-16 14:34:38 UTC (rev 19712)
@@ -55,7 +55,7 @@
   output-descriptor-file(name, new-contents, condition) =
     with(
       filename := <add-extension> (<name>, "esv");
-      path     := "src";
+      path     := "editor";
       fullpath := <conc-strings> (path, "/", filename)
     );
     
@@ -95,14 +95,14 @@
   output-java-file =
     where(
       ?class;
-      path := <create-dirs> ["src" | <package-name>];
+      path := <create-dirs> ["editor", "java" | <package-name>];
       fullpath := <conc-strings> (path, "/", <class-name> class, ".java")
     );
     
     output-java-file(|fullpath)
 
   output-java-file(|filename) =
-    print-filename(|["src" | <package-name>], <base-filename> filename);
+    print-filename(|["editor", "java" | <package-name>], <base-filename> filename);
     
     risky(
       text := <pp-java-string <+ pp-java-string-fallback>



From L.C.L.Kats at tudelft.nl  Thu Jul 16 17:20:36 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 16 Jul 2009 15:20:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19713 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.editorservice/editor
	org.strategoxt.imp.metatooling/src/sdf2imp
	org.strategoxt.imp.metatooling/src/sdf2imp/project
	org.strategoxt.imp.metatooling/src/sdf2imp/services
Message-ID: <200907161518.n6GFIjTM021531@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-16 15:20:36 +0000 (Thu, 16 Jul 2009)
New Revision: 19713

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19713&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/
Removed:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/src/
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/options.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-grammar.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/configure-main-descriptor.str

Log:
- Fixed -p and --verbose options
- Moved editor files from /src/ to /editor/


Changes:


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor
___________________________________________________________________
Added: svn:mergeinfo
   + 

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/options.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/options.str	2009-07-16 14:34:38 UTC (rev 19712)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/options.str	2009-07-16 15:20:36 UTC (rev 19713)
@@ -10,6 +10,7 @@
   <+ package-name-option
   <+ start-symbol-option
   <+ reset-files-option
+  <+ verbose-option
 
   input-file-option =
     ArgOption(
@@ -20,7 +21,7 @@
 
   parse-table-option =
     ArgOption(
-      "-i"
+      "-p"
     , rules(ParseTable := <id>)
     , !"-p <parse table>.tbl  Set parse table (optional)"
     )

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-grammar.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-grammar.str	2009-07-16 14:34:38 UTC (rev 19712)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-grammar.str	2009-07-16 15:20:36 UTC (rev 19713)
@@ -41,6 +41,7 @@
   <+
     <output-text-file(|["syntax"], "Common.sdf")>
 (
+// TODO: FLOAT
 "module Common
 
 exports

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/configure-main-descriptor.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/configure-main-descriptor.str	2009-07-16 14:34:38 UTC (rev 19712)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/configure-main-descriptor.str	2009-07-16 15:20:36 UTC (rev 19713)
@@ -59,6 +59,7 @@
      |}
    <+
      // Could not read the existing file: use the defaults instead, but don't overwrite the file
+     verbose-msg(!"No legal existing descriptor file found", <conc-strings> ("(editor/", main-descriptor-name, ")"));
      rules(NoExistingDescriptor: _);
      default-main-descriptor
 



From L.C.L.Kats at tudelft.nl  Thu Jul 16 17:56:32 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 16 Jul 2009 15:56:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19714 - LennartKats - in
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library:
	. ssl
Message-ID: <200907161554.n6GFsfUw021922@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-16 15:56:32 +0000 (Thu, 16 Jul 2009)
New Revision: 19714

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19714&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/IOAgent.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_exit.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_fputs.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_printnl.java

Log:
Added some I/O checks.

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/IOAgent.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/IOAgent.java	2009-07-16 15:20:36 UTC (rev 19713)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/IOAgent.java	2009-07-16 15:56:32 UTC (rev 19714)
@@ -116,13 +116,16 @@
     }
 
     public boolean closeRandomAccessFile(int fd) throws InterpreterException {
+        if (fd == CONST_STDOUT || fd == CONST_STDERR || fd == CONST_STDIN)
+            return true;
+        
         OutputStream stream = outStreams.get(fd);
         if(stream == null)
             return true; // already closed: be forgiving
         try {
             stream.close();
-        } catch(IOException e) {
-            throw new InterpreterException(e);
+        } catch (IOException e) {
+            return true;
         }
         inStreams.remove(fd);
         outStreams.remove(fd);

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_exit.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_exit.java	2009-07-16 15:20:36 UTC (rev 19713)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_exit.java	2009-07-16 15:56:32 UTC (rev 19714)
@@ -29,6 +29,7 @@
         
         int exitCode = Tools.asJavaInt(tvars[0]);
         env.getStackTracer().popOnExit(exitCode == 0);
+        env.getStackTracer().printStackTrace();
         
         throw new InterpreterExit(exitCode);
     }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_fputs.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_fputs.java	2009-07-16 15:20:36 UTC (rev 19713)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_fputs.java	2009-07-16 15:56:32 UTC (rev 19714)
@@ -34,6 +34,7 @@
         
         PrintStream ous = or.getIOAgent().getOutputStream(Tools.asJavaInt(targs[1]));
         ous.print(Tools.javaString(targs[0]));
+        if (ous.checkError()) return false;
         
         env.setCurrent(targs[1]);
         

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_printnl.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_printnl.java	2009-07-16 15:20:36 UTC (rev 19713)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_printnl.java	2009-07-16 15:56:32 UTC (rev 19714)
@@ -7,6 +7,8 @@
  */
 package org.spoofax.interpreter.library.ssl;
 
+import java.io.PrintStream;
+
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.InterpreterException;
 import org.spoofax.interpreter.core.Tools;
@@ -55,9 +57,13 @@
         IOAgent agent = or.getIOAgent();
         
         if(output.equals("stderr")) {
-            agent.getOutputStream(IOAgent.CONST_STDERR).println(sb);
+            PrintStream stream = agent.getOutputStream(IOAgent.CONST_STDERR);
+            stream.println(sb);
+            if (stream.checkError()) return false;
         } else if(output.equals("stdout")) {
-            agent.getOutputStream(IOAgent.CONST_STDOUT).println(sb);
+            PrintStream stream = agent.getOutputStream(IOAgent.CONST_STDOUT);
+            stream.println(sb);
+            if (stream.checkError()) return false;
         } else {
             throw new InterpreterException("Unknown output : " + output);
         }



From L.C.L.Kats at tudelft.nl  Thu Jul 16 17:58:39 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 16 Jul 2009 15:58:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19715 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl
Message-ID: <200907161556.n6GFumjD021937@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-16 15:58:39 +0000 (Thu, 16 Jul 2009)
New Revision: 19715

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19715&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_exit.java

Log:


Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_exit.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_exit.java	2009-07-16 15:56:32 UTC (rev 19714)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_exit.java	2009-07-16 15:58:39 UTC (rev 19715)
@@ -29,7 +29,6 @@
         
         int exitCode = Tools.asJavaInt(tvars[0]);
         env.getStackTracer().popOnExit(exitCode == 0);
-        env.getStackTracer().printStackTrace();
         
         throw new InterpreterExit(exitCode);
     }



From L.C.L.Kats at tudelft.nl  Fri Jul 17 10:12:21 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Jul 2009 08:12:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19716 - LennartKats -
	strc-java/trunk/trans
Message-ID: <200907170810.n6H8ASuj000792@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-17 08:12:20 +0000 (Fri, 17 Jul 2009)
New Revision: 19716

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19716&view=rev

Modified:
   strc-java/trunk/trans/s2j.str

Log:
Cache all primitive invocations and all interop strategy additions.

Changes:

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2009-07-16 15:58:39 UTC (rev 19715)
+++ strc-java/trunk/trans/s2j.str	2009-07-17 08:12:20 UTC (rev 19716)
@@ -100,15 +100,21 @@
      import org.strategoxt.lang.*;
      import org.spoofax.interpreter.terms.*;
      import static org.strategoxt.lang.Term.*;
+     import org.spoofax.interpreter.library.AbstractPrimitive;
+     import org.spoofax.interpreter.core.VarScope;
+     import java.util.ArrayList;
          
      @SuppressWarnings({"unused"})
      public class x_name {
 
      protected static final boolean TRACES_ENABLED = e_traces;
      protected static ITermFactory constantFactory;
+     
+     private static ArrayList<InteropStrategyDef> interopStrategyCache;
 
      ~*cnst-decls
      ~*cnstr-decls
+     ~*prim-decls
      
      public static void init(Context context) {
        ITermFactory termFactory = context.getFactory();
@@ -120,8 +126,25 @@
        ~*import-inits
        ~*def-inits
        context.postInit("~x_name");
+       initPrimitives(context); // must be last
      }
+
+     ~*main
      
+      public static void registerInterop(org.spoofax.interpreter.core.IContext context, Context compiledContext) {
+        init(compiledContext);
+        synchronized (x_name.class) {
+          if (interopStrategyCache == null) {
+            interopStrategyCache = new ArrayList<InteropStrategyDef>(i_defs);
+            registerInteropCache(context, compiledContext, interopStrategyCache);
+          }
+        }
+        VarScope svars = context.getVarScope();
+        for (InteropStrategyDef svar : interopStrategyCache) {
+          svars.addSVar(svar.getName(), svar);
+        }
+      }    
+     
      ~*<java-split-method> |[
        private static void initConstructors(ITermFactory termFactory) {
          ~*cnstr-inits
@@ -133,8 +156,16 @@
          ~*cnst-inits
        }
      ]|
-
-     ~*main
+     
+     ~*<java-split-method> |[
+       private static void initPrimitives(Context context) {
+         ArrayList<String> failures = new ArrayList<String>();
+         ~*prim-inits
+         // TODO: Report missing primitives
+         // if (failures.size() > 0)
+         //   throw new StrategoException("Primitive(s) not defined: " + failures); 
+       }
+     ]|
      ~*constant
 
      ~*constant-defs
@@ -152,6 +183,7 @@
     ; pkgname       := <!package-dec? |[ package ~x:<get-config> "-p"; ]| <+ !None()>
     ; main          := <java-main-methods>
     ; register      := <java-register-method> defs
+    ; i_defs        := <write-to-string> <length> defs
     ; constant      := <java-constant-methods>
     ; switch <get-config> "--stacktrace"
         case 0: e_traces := |[ false ]|
@@ -166,6 +198,8 @@
   ; add-default-constructors
   ; constant-defs := <map(translate-constant-definition)> <get-config <+ ![]> "-D"
   ; lifted-defs   := <bagof-LiftedDef>
+  ; prim-decls    := <bagof-PrimitiveDecl>
+  ; prim-inits    := <bagof-PrimitiveInit; concat>
   ; cnstr-decls   := <bagof-ConstructorDecl>
   ; cnstr-inits   := <bagof-ConstructorInit>
   ; def-inits     := <bagof-DefInit>
@@ -252,7 +286,7 @@
         }
       }
      
-      protected static IStrategoTerm getConstant(ITermFactory factory, ITermReference constant) {
+      protected static IStrategoTerm getConstant(ITermFactory factory, TermReference constant) {
         if (factory == constantFactory) {
           return constant.get();
         } else if (factory != null) {
@@ -263,11 +297,13 @@
       }
     ]|
   
-  java-register-method :
+  java-register-method : // TODO: cache all strategy additions into interopStrategyDefs
     defs ->
     <java-split-method> |[
-      public static void registerInterop(org.spoofax.interpreter.core.IContext context, Context compiledContext) {
-        init(compiledContext);
+      private static void registerInteropCache(
+          org.spoofax.interpreter.core.IContext context, Context compiledContext, 
+          ArrayList<InteropStrategyDef> svars)
+      {
         bstm*
       }
     ]|
@@ -276,7 +312,7 @@
 
   java-register-strategy :
     SDefT(x,_,_,_) ->
-    |[ context.getVarScope().addSVar("~x", new InteropStrategyDef(x.class, context, compiledContext)); ]|
+    |[ svars.add(new InteropStrategyDef(x.class, context, compiledContext)); ]|
 
 rules
 
@@ -388,7 +424,7 @@
     ; lifted-tvar*   := <collect-lifted-tvars> def
     ; lifted-svar*   := <collect-lifted-svars> def
     ; lifted-sfield* := <map(\y -> class-body-dec |[ Strategy y;      ]|\)> lifted-svar*
-    ; lifted-tfield* := <map(\y -> class-body-dec |[ ITermReference y; ]|\)> lifted-tvar*
+    ; lifted-tfield* := <map(\y -> class-body-dec |[ TermReference y; ]|\)> lifted-tvar*
     ; lifted-args    := <conc> (lifted-svar*, lifted-tvar*)
     with
       if !lifted-tvar* => lifted-svar* => [] then
@@ -676,6 +712,8 @@
   translate-PrimT :
     CallDynamic(f, s*, t*) -> <fail>
     with
+      // They could be supported through the interopcontext,
+      // but they're never used anyway
       fatal-err(|"Think again. Dynamic calls are not supported")
 
   translate-PrimT :
@@ -683,10 +721,24 @@
     <java-check-unbound-args(|t*)>  
     bstm* |[
       bstm_init*
-      term = context.invokePrimitive("~f", term, new Strategy[] { e_s* }, new IStrategoTerm[] { e_t* });
+      term = context.invokePrimitive(x_f, term, new Strategy[] { e_s* }, new IStrategoTerm[] { e_t* });
       if (term == null) break Fail;
     ]|
     with
+      x_f := <conc-strings> ("_prim", <jify> f)
+    with
+      <IsPrimitiveDecl> f
+    <+
+      rules(
+        IsPrimitiveDecl: f
+        PrimitiveDecl  :+= class-body-dec |[ protected static AbstractPrimitive x_f; ]|
+        PrimitiveInit  :+= bstm* |[
+          x_f = context.lookupPrimitive("~f");
+          if (x_f == null)
+            failures.add("~f");
+        ]|
+      )
+    with
       lifted-decls-wrap(
         e_s*  := <map(lifted-strategy-to-instance)> s*
       ; e_t*  := <map(java-construct-term)> t*



From L.C.L.Kats at tudelft.nl  Fri Jul 17 11:17:42 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Jul 2009 09:17:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19717 - LennartKats -
	strategoxt/trunk/stratego-front
Message-ID: <200907170915.n6H9Fovu001747@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-17 09:17:41 +0000 (Fri, 17 Jul 2009)
New Revision: 19717

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19717&view=rev

Modified:
   strategoxt/trunk/stratego-front/Makefile.am

Log:
XTC register libstratego-sdf.la.

Changes:

Modified: strategoxt/trunk/stratego-front/Makefile.am
===================================================================
--- strategoxt/trunk/stratego-front/Makefile.am	2009-07-17 08:12:20 UTC (rev 19716)
+++ strategoxt/trunk/stratego-front/Makefile.am	2009-07-17 09:17:41 UTC (rev 19717)
@@ -57,6 +57,8 @@
 	$(XTC_PROG) register -r $(DESTDIR)$(REPOSITORY) -t libstratego-gpp.la -l $(prefix)/lib -V $(VERSION)
 	$(XTC_PROG) register -r $(DESTDIR)$(REPOSITORY) -t libstratego-rtg.rtree -l $(prefix)/share -V $(VERSION)
 	$(XTC_PROG) register -r $(DESTDIR)$(REPOSITORY) -t libstratego-rtg.la -l $(prefix)/lib -V $(VERSION)
+	$(XTC_PROG) register -r $(DESTDIR)$(REPOSITORY) -t libstratego-sdf.rtree -l $(prefix)/share -V $(VERSION)
+	$(XTC_PROG) register -r $(DESTDIR)$(REPOSITORY) -t libstratego-sdf.la -l $(prefix)/lib -V $(VERSION)
 	$(XTC_PROG) register -r $(DESTDIR)$(REPOSITORY) -t libstratego-aterm.rtree -l $(prefix)/share -V $(VERSION)
 	$(XTC_PROG) register -r $(DESTDIR)$(REPOSITORY) -t libstratego-aterm.la -l $(prefix)/lib -V $(VERSION)
 	$(XTC_PROG) register -r $(DESTDIR)$(REPOSITORY) -t libstratego-tool-doc.rtree -l $(prefix)/share -V $(VERSION)



From L.C.L.Kats at tudelft.nl  Fri Jul 17 11:48:07 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Jul 2009 09:48:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19718 - LennartKats -
	strc-java/trunk/trans
Message-ID: <200907170946.n6H9kEsg002178@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-17 09:48:07 +0000 (Fri, 17 Jul 2009)
New Revision: 19718

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19718&view=rev

Modified:
   strc-java/trunk/trans/s2j.str

Log:
Reverted interop strategy addition caching.

Changes:

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2009-07-17 09:17:41 UTC (rev 19717)
+++ strc-java/trunk/trans/s2j.str	2009-07-17 09:48:07 UTC (rev 19718)
@@ -101,7 +101,6 @@
      import org.spoofax.interpreter.terms.*;
      import static org.strategoxt.lang.Term.*;
      import org.spoofax.interpreter.library.AbstractPrimitive;
-     import org.spoofax.interpreter.core.VarScope;
      import java.util.ArrayList;
          
      @SuppressWarnings({"unused"})
@@ -109,8 +108,6 @@
 
      protected static final boolean TRACES_ENABLED = e_traces;
      protected static ITermFactory constantFactory;
-     
-     private static ArrayList<InteropStrategyDef> interopStrategyCache;
 
      ~*cnst-decls
      ~*cnstr-decls
@@ -131,20 +128,6 @@
 
      ~*main
      
-      public static void registerInterop(org.spoofax.interpreter.core.IContext context, Context compiledContext) {
-        init(compiledContext);
-        synchronized (x_name.class) {
-          if (interopStrategyCache == null) {
-            interopStrategyCache = new ArrayList<InteropStrategyDef>(i_defs);
-            registerInteropCache(context, compiledContext, interopStrategyCache);
-          }
-        }
-        VarScope svars = context.getVarScope();
-        for (InteropStrategyDef svar : interopStrategyCache) {
-          svars.addSVar(svar.getName(), svar);
-        }
-      }    
-     
      ~*<java-split-method> |[
        private static void initConstructors(ITermFactory termFactory) {
          ~*cnstr-inits
@@ -183,7 +166,6 @@
     ; pkgname       := <!package-dec? |[ package ~x:<get-config> "-p"; ]| <+ !None()>
     ; main          := <java-main-methods>
     ; register      := <java-register-method> defs
-    ; i_defs        := <write-to-string> <length> defs
     ; constant      := <java-constant-methods>
     ; switch <get-config> "--stacktrace"
         case 0: e_traces := |[ false ]|
@@ -297,13 +279,11 @@
       }
     ]|
   
-  java-register-method : // TODO: cache all strategy additions into interopStrategyDefs
+  java-register-method : // TODO: do interop strategy additions in an on-demand fashion
     defs ->
     <java-split-method> |[
-      private static void registerInteropCache(
-          org.spoofax.interpreter.core.IContext context, Context compiledContext, 
-          ArrayList<InteropStrategyDef> svars)
-      {
+      public static void registerInterop(org.spoofax.interpreter.core.IContext context, Context compiledContext) {
+        init(compiledContext);
         bstm*
       }
     ]|
@@ -312,7 +292,7 @@
 
   java-register-strategy :
     SDefT(x,_,_,_) ->
-    |[ svars.add(new InteropStrategyDef(x.class, context, compiledContext)); ]|
+    |[ context.getVarScope().addSVar("~x", new InteropStrategyDef(x.class, context, compiledContext)); ]|
 
 rules
 



From L.C.L.Kats at tudelft.nl  Fri Jul 17 11:55:16 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Jul 2009 09:55:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19720 - LennartKats -
	strc-java/trunk/trans
Message-ID: <200907170953.n6H9rNmS002252@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-17 09:55:15 +0000 (Fri, 17 Jul 2009)
New Revision: 19720

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19720&view=rev

Modified:
   strc-java/trunk/trans/s2j-options.str
   strc-java/trunk/trans/s2j.str
   strc-java/trunk/trans/strj-options.str
   strc-java/trunk/trans/strj.str

Log:
Support option -la stratego-parallel.

Changes:

Modified: strc-java/trunk/trans/s2j-options.str
===================================================================
--- strc-java/trunk/trans/s2j-options.str	2009-07-17 09:54:52 UTC (rev 19719)
+++ strc-java/trunk/trans/s2j-options.str	2009-07-17 09:55:15 UTC (rev 19720)
@@ -1,6 +1,8 @@
 /**
  * s2j options
  *
+ * @see strj-options
+ *
  * @author Lennart Kats
  */
 module s2j-options
@@ -43,22 +45,28 @@
   + ArgOption(
       "-D"
     , <post-extend-config> ("-D", [<parse-define-option>]); !()
-    ,!"-D name=value      Define a constant value strategy"
+    , !"-D name=value      Define a constant value strategy"
     )
   + ArgOption(
       "-sc"
     , <set-config> ("-sc", <id>); !()
-    ,!"-sc <on|off>       Assume all term constructors are shared (default: on)"
+    , !"-sc <on|off>       Assume all term constructors are shared (default: on)"
     )
   + ArgOption(
       "-O"
     , <set-config>("-O", <string-to-int; strc-set-opt-level>); !()
-    , !"-O n              Optimization level (0 = no optimization)"
+    , !"-O n               Optimization level (0 = no optimization)"
     )
     
   translate-default-library =
-    if "stratego-lib" + "stratego-xtc" + "stratego-sglr" + "stratego-rtg" + "stratego-aterm" + "stratego-gpp" + "strc" + "stratego-tool-doc" + "java-front" then
-      <conc-strings> ("org.strategoxt.lib", <id>)
+    switch id
+      case "stratego-lib" + "stratego-xtc" + "stratego-sglr" + "stratego-rtg" + "stratego-aterm" +
+           "stratego-gpp" + "strc" + "stratego-tool-doc" + "java-front":
+        <conc-strings> ("org.strategoxt.lib", <id>)
+      case "stratego-parallel":
+        <conc-strings> ("org.strategoxt.lang.parallel.lib", <id>)
+      otherwise:
+        id
     end
   ; if not(is-substring(!".")) then
       err(|"Imported libraries must include a package name")

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2009-07-17 09:54:52 UTC (rev 19719)
+++ strc-java/trunk/trans/s2j.str	2009-07-17 09:55:15 UTC (rev 19720)
@@ -279,7 +279,9 @@
       }
     ]|
   
-  java-register-method : // TODO: do interop strategy additions in an on-demand fashion
+  // TODO: do interop strategy additions in an on-demand fashion
+  //       (need to make a custom VarScope class to do so)
+  java-register-method : 
     defs ->
     <java-split-method> |[
       public static void registerInterop(org.spoofax.interpreter.core.IContext context, Context compiledContext) {

Modified: strc-java/trunk/trans/strj-options.str
===================================================================
--- strc-java/trunk/trans/strj-options.str	2009-07-17 09:54:52 UTC (rev 19719)
+++ strc-java/trunk/trans/strj-options.str	2009-07-17 09:55:15 UTC (rev 19720)
@@ -1,5 +1,15 @@
+/**
+ * strj options
+ *
+ * @see s2j-options
+ *
+ * @author Lennart Kats
+ */
 module strj-options
 
+imports
+  s2j-options
+
 strategies
 
   strj-preinit-options =

Modified: strc-java/trunk/trans/strj.str
===================================================================
--- strc-java/trunk/trans/strj.str	2009-07-17 09:54:52 UTC (rev 19719)
+++ strc-java/trunk/trans/strj.str	2009-07-17 09:55:15 UTC (rev 19720)
@@ -51,10 +51,16 @@
   output-java :
     ast -> file
     with
-      box  := <pp-java5-to-abox <+ output-java-error>
-    ; file := <fopen <+ fatal-err(|"Could not open output file")> (<get-config> "-o", "w")
-    ; <box2text-stream(|80, file)> box
-    ; <fclose> file
+      log-timed(
+        box  := <pp-java5-to-abox <+ output-java-error>
+      | "Pretty printing: preparation succeeded", 2
+      )
+    ; log-timed(
+        file := <fopen <+ fatal-err(|"Could not open output file")> (<get-config> "-o", "w")
+      ; <box2text-stream(|80, file)> box
+      ; <fclose> file
+      | "Pretty printing: output to stream succeeded", 2
+      )
 
    // Using XTC for debugging:
    // using something like rtg-format-check(true, true|<java-rtg>) is more expensive atm,



From L.C.L.Kats at tudelft.nl  Fri Jul 17 11:54:52 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Jul 2009 09:54:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19719 - LennartKats -
	strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override
Message-ID: <200907170953.n6H9r0rO002249@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-17 09:54:52 +0000 (Fri, 17 Jul 2009)
New Revision: 19719

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19719&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str

Log:
Support option -la stratego-parallel.

Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str	2009-07-17 09:48:07 UTC (rev 19718)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str	2009-07-17 09:54:52 UTC (rev 19719)
@@ -25,6 +25,7 @@
         case "libstratego-aterm":    import-term(libstratego-aterm.rtree)
         case "libstratego-gpp":      import-term(libstratego-gpp.rtree)
         case "libstratego-tool-doc": import-term(libstratego-tool-doc.rtree)
+        case "libstratego-parallel": !Module("libstratego-parallel", [])
         case "libstrc":              import-term(libstrc.rtree)
         case "libjava-front":
           // prefer local (-I) definition



From L.C.L.Kats at tudelft.nl  Fri Jul 17 14:35:07 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Jul 2009 12:35:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19723 - LennartKats -
	java-front/tags
Message-ID: <200907171233.n6HCXEit004211@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-17 12:35:07 +0000 (Fri, 17 Jul 2009)
New Revision: 19723

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19723&view=rev

Added:
   java-front/tags/0.9/

Log:
Tag for 0.9

Changes:



From L.C.L.Kats at tudelft.nl  Fri Jul 17 14:38:17 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Jul 2009 12:38:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19724 - LennartKats - in
	spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp:
	. lib project services
Message-ID: <200907171236.n6HCaOYD004244@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-17 12:38:16 +0000 (Fri, 17 Jul 2009)
New Revision: 19724

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19724&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.meta
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/main.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-build-properties.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-grammar.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/ast-form-heuristic.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/configure-main-descriptor.str

Log:
- Java compatibility: avoid calling sdf2rtg using xtc.
- No longer pretty-printing and then parsing the rtg.

Changes:

Copied: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.meta (from rev 19706, strategoxt/trunk/stratego-regular/trans/sdf2rtg/core-sdf-grammar2rtg.meta)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.meta	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.meta	2009-07-17 12:38:16 UTC (rev 19724)
@@ -0,0 +1 @@
+Meta([Syntax("Stratego-rtg")])
\ No newline at end of file


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.meta
___________________________________________________________________
Added: svn:mergeinfo
   + /strategoxt/branches/strategoxt-annos/stratego-regular/trans/sdf2rtg/core-sdf-grammar2rtg.meta:19295,19301,19327
/strategoxt/branches/strategoxt-with/stratego-regular/trans/sdf2rtg/core-sdf-grammar2rtg.meta:18038-18120

Copied: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.str (from rev 19706, strategoxt/trunk/stratego-regular/trans/sdf2rtg/core-sdf-grammar2rtg.str)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.str	2009-07-17 12:38:16 UTC (rev 19724)
@@ -0,0 +1,624 @@
+/**
+ * Converts a normalized SDF grammar in abstract syntax to an RTG in abstract syntax.
+ *
+ * @author  Martin Bravenboer <martin.bravenboer at gmail.com>
+ */
+module lib/sdf2imp/core-sdf-grammar2rtg
+imports
+  libstratego-lib
+  libstratego-rtg
+  Sdf2
+  sdf/tool/xtc
+  libstratego-xtc
+
+strategies
+
+  /**
+   * @type  Grammar -> RTG
+   */
+  core-sdf-grammar2rtg =
+    where(
+      <table-create> "generated-nonterms"
+    )
+  ; where(
+      collect-om(?syntax(_))
+    ; map(grammar2prodrules <+ log(|Error(), "Rewriting syntax section failed"); fail)
+    ; concat
+    ; if ?[] then
+        log(|Error(), "No production rules in RTG. Did you specify the right main module?")
+        ; <xtc-exit> 1
+      else
+        ?prods
+      end
+    )
+
+    /**
+     * @todo  use start symbols of SDF
+     */
+  ; collect-om(is-start-prod)
+  ; if ?[] then
+      log(|Error(), "No start productions found. Did you specify any start-symbols in the syntax definition?")
+      ; <xtc-exit> 1
+    else
+      map(start-prod2tree; ?Ref(<id>) <+ err(!"Rewriting production to nonterm failed"); fail)
+    ; !RTG(Start(<id>), ProdRules(prods))
+    end
+
+
+/**
+ * @type  Grammar -> List(ProdRule)
+ */
+strategies
+
+  grammar2prodrules :
+    syntax(prods) ->
+      < remove-all(ignore-prod)
+      ; map({p:
+          ?p
+        ; (  listinj2prodrule
+          <+ seq2prodrule
+          <+ alt2prodrule
+          <+ var2prodrule
+          <+ opt2prodrule
+          <+ inj2prodrule
+          <+ prod2prodrule
+          <+ err(!"Rewriting production failed"); fail
+          )
+        ; where(try(<cycle-error> (p, <id>)))
+        })
+      ; remove-all(?[])
+      > prods
+
+  grammar2prodrules =
+    ?context-free-syntax(_)
+    ; fatal-err(|"context-free syntax in input hasn't been normalized to syntax")
+
+  grammar2prodrules =
+    ?lexical-syntax(_)
+    ; fatal-err(|"lexical syntax in input hasn't been normalized to syntax")
+
+  cycle-error =
+    ?(p, rtg |[ A -> A ]|)
+    ; log(|Critical(), "production rule resulted in a direct cycle", p)
+    ; <exit> 1
+
+strategies
+
+  /**
+   * Ignore layout productions.
+   *
+   * @type Production ->? _
+   */
+  ignore-prod =
+    ?prod(_, cf(layout()), _)
+
+  ignore-prod =
+    ?prod(_, cf(opt(layout())), _)
+
+  /**
+   * Ignore lexical productions.
+   */
+  ignore-prod =
+    ?prod(_, lex(_), _)
+
+  ignore-prod = 
+    ?prod(_,lit(_), _)
+
+  ignore-prod = 
+    ?prod(_,ci-lit(_), _)
+
+  ignore-prod =
+    ?prod([lex(iter-star(char-class(_)))], cf(iter-star(char-class(_))), _)
+
+  ignore-prod =
+    ?prod([lex(_)],  sym, _)
+    ; where(<oncetd(?char-class(_))> sym)
+
+  /*
+  cf(alt(
+       char-class(simple-charclass(present(conc(range(numeric("\\0"),numeric("\\92")),range(numeric("\\94"),numeric("\\255"))))))
+     , alt(sort("CloseBracket"),sort("TwoCloseBrackets"))
+     )
+  )*/
+
+
+  /**
+   * Ignore syntax -> context-free injections
+   */
+  ignore-prod =
+    ?prod([a],  cf(a), _)
+
+  /**
+   * Ignore varsym -> context-free injections
+   */
+  ignore-prod =
+    ?prod([varsym(cf(a))], cf(a), _)
+
+  /**
+   * Ignore lit -> lit | lit | lit productions
+   */
+  ignore-prod =
+    ?prod([lit(_)], cf(alt(lit(_), more)),attrs([]))
+    ; where(
+        <rec rec(lit(id) + alt(rec, rec))> more
+      )
+
+  ignore-prod =
+    ?prod([start()], sort("SURROGATE-START"), _)
+
+  ignore-prod =
+    ?prod(_, file-start(), _)
+
+  /**
+   * Ignore a reject production that injects A into A.
+   */
+  ignore-prod =
+    ?prod(_, _, attrs(attrs)); where(<contains-reject> attrs)
+
+
+  /**
+   * Ignore aux. productions
+   */
+  ignore-prod =
+    ?prod(_, _, attrs(attrs)); where(<contains-rtg(?ignore())> attrs)
+
+  /**
+   * Ignore a bracket production that injects A into A.
+   */
+  ignore-prod =
+    prod(?syms, cf(match-sort(?x)), ?attrs(attrs))
+    ; where(
+        <contains-bracket> attrs
+      ; <not(get-cnstr-name)> attrs
+      ; <syms2trees> syms => [ rtg |[ x ]| ]
+      )
+
+  match-sort(s) =
+    sort(s)
+
+  match-sort(s) =
+    parameterized-sort(s, id)
+
+  ignore-prod =
+    is-start-prod
+
+  is-start-prod =
+    ?prod(_, start(), _)
+
+  start-prod2tree :
+    prod(syms, start(), _) -> t
+      where <syms2trees> syms => [t]
+
+strategies
+
+  /**
+   * Rewrites a context-free production with a constructor.
+   *
+   * @type Production -> ProdRule
+   */
+  prod2prodrule :
+    p at prod(syms, sym, attrs(attrs)) -> result
+    where
+        <sym2nonterm> sym => A
+      ; <syms2trees> syms => t*
+      ; if y := <get-cnstr-name> attrs then
+          !rtg |[ A -> y(t*) ]|
+        else
+          log-prod(|Error(), "No constructor name specified in production:", p)
+          ;    log(|Error(), "Resolution: please add a cons attribute to this production.")
+          ; if-verbose1(log(|Error(), "Production in abstract syntax: ", p))
+          ; //if <get-config> IgnoreMissingCons() then
+              ![]
+            //else
+            //  // FIXME SDF: http://sjofar.sen.cwi.nl:8080/show_bug.cgi?id=660
+            //     <?prod([sort("Label"), lit(_), sort("Symbol")], sort("Symbol"), _)> p
+            //     ; ![]
+            //
+            //  <+ <?prod([sort("Symbol"),lit(_),sort("Symbol")],sort("Symbol"), _)> p
+            //     ; ![]
+            // 
+            //  <+ <xtc-exit> 1
+            //end
+         end
+       ; ?result
+
+/**
+ * Injections
+ */
+rules
+
+  /**
+   * Rewrites an context-free or lexical injection.
+   *
+   * The lhs must be a simple non-terminal reference.
+   */
+  inj2prodrule :
+    prod([inj], sym, attrs(attrs)) -> rtg |[ A -> t ]|
+      where not(<get-cnstr-name> attrs)
+          ; <sym2tree> inj => t
+          ; <sym2nonterm> sym => A
+
+  /**
+   * Rewrite a bracket production which is not a 'real' injection.
+   */
+  inj2prodrule :
+    prod(syms, cf(<match-sort(?x)>), attrs(attrs)) -> rtg |[ x -> A ]|
+      where <contains-bracket> attrs
+          ; <not(get-cnstr-name)> attrs
+          ; <syms2trees> syms => [ rtg |[ A ]| ]
+
+/**
+ * Sequence
+ */
+rules
+
+  /**
+   * syms -> (syms)
+   */
+  seq2prodrule :
+    prod(syms, nt, _) -> rtg |[ x -> <(i)> (t*) ]|
+      where <is-seq-symbol> nt
+          ; <get-nonterm-of> nt => x
+          ; <syms2trees> syms => t*
+          ; <length; int-to-string> t* => i
+
+/**
+ * Alternatives
+ */
+rules
+
+  alt2prodrule :
+    prod(syms, nt, _) -> rtg |[ x -> t ]|
+      where <is-alt-symbol> nt
+          ; <get-nonterm-of> nt => x
+          ; <syms2trees> syms => [t]
+
+/**
+ * Iteration
+ */
+rules
+
+  /**
+   *  A+ -> A* 
+   */
+  listinj2prodrule :
+    prod([s1 at cf(iter(a))], s2 at cf(iter-star(a)), _) -> rtg |[ x2 -> x1 ]|
+      where <get-nonterm-of> s1 => x1
+          ; <get-nonterm-of> s2 => x2
+
+  /**
+   * -> A* 
+   * -> {A lit}* 
+   */
+  listinj2prodrule :
+    prod([], sym, _) -> rtg |[ x -> <nil>() ]|
+      where <is-list-symbol> sym
+          ; <get-nonterm-of> sym => x
+
+  /**
+   *  A -> A+
+   */
+  listinj2prodrule :
+    prod([cf(a)], cf(iter(a)), _) -> rtg |[ x1 -> <cons> (t, x2) ]|
+      where <sym2tree> cf(a) => t
+          ; <get-nonterm-of> cf(iter(a)) => x1
+          ; <get-nonterm-of> cf(iter-star(a)) => x2
+
+  /**
+   *  A -> A+
+   */
+  listinj2prodrule :
+    prod([a], iter(a), _) -> rtg |[ x1 -> <cons> (t, x2) ]|
+    where
+        <sym2tree> a => t
+      ; <get-nonterm-of> iter(a) => x1
+      ; <get-nonterm-of> iter-star(a) => x2
+
+/**
+ * Iteration with Separator
+ * Currently only separators that do not occur in the AST are supported.
+ */
+rules
+
+  /**
+   * {A lit}* lit  {A lit}+ -> {A lit}+
+   */
+  listinj2prodrule :
+    prod(syms, nt, _) -> rtg |[ x -> <conc> (y, z) ]|
+      where <is-list-symbol> nt
+          ; <get-nonterm-of> nt => x
+          ; <filter(not(is-empty-sym)); map(is-list-symbol; get-nonterm-of)> syms => [y, z]
+
+  /**
+   *  {A lit}+ -> {A lit}* 
+   */
+  listinj2prodrule :
+    prod([s1 at cf(iter-sep(a, sep))], s2 at cf(iter-star-sep(a, sep)), _) -> rtg |[ x2 -> x1 ]|
+      where <is-empty-sym> sep
+          ; <get-nonterm-of> s1 => x1
+          ; <get-nonterm-of> s2 => x2
+
+  /**
+   *  A -> {A lit}+
+   */
+  listinj2prodrule :
+    prod([cf(a)], nt at cf(iter-sep(a, sep)), _) -> rtg |[ x -> <cons> (t, x2) ]|
+      where <is-empty-sym> sep
+          ; <sym2tree> cf(a) => t
+          ; <get-nonterm-of> nt => x
+          ; <get-nonterm-of> cf(iter-star-sep(a, sep)) => x2
+
+/**
+ * Alternative
+ */
+rules
+
+  /**
+   *  A -> A?
+   */
+  opt2prodrule :
+    prod([cf(A)], nt at cf(opt(A)), _) -> rtg |[ x -> <some> (t) ]|
+      where <sym2tree> A => t
+          ; <get-nonterm-of> nt => x
+
+  /**
+   *  -> A?
+   */
+  opt2prodrule :
+    prod([], cf(opt(a)), _) -> rtg |[ x -> <none> () ]|
+      where <get-nonterm-of> cf(opt(a)) => x
+
+/**
+ * Variables
+ */
+rules
+
+  var2prodrule :
+    prod(_, varsym(sym), _) -> rtg |[ x -> meta-var(<string>) ]|
+      where <sym2nonterm> sym => x
+
+strategies
+
+  get-nonterm-of =
+   ?key
+   ; is-nonterm-generator
+   ; (  <table-get> ("generated-nonterms", key)
+     <+ <table-get> ("generated-nonterms", cf(key))
+     <+ <table-get> ("generated-nonterms", <?cf(<id>)> key)
+     <+ sdf-symbol-to-string
+        ; where(<table-put> ("generated-nonterms", key, <id>))
+     )
+
+  is-seq-symbol =
+      cf(is-seq-symbol)
+    + seq(id, is-list)
+
+  is-alt-symbol = 
+      cf(is-alt-symbol)
+    + alt(id, id)
+     
+  is-list-symbol = 
+      cf(is-list-symbol)
+    + iter-star-sep(id, id)
+    + iter-sep(id, id)
+    + iter-star(id)
+    + iter(id)
+
+  is-nonterm-generator = 
+      is-list-symbol
+    + is-seq-symbol
+    + is-alt-symbol
+    + cf(is-nonterm-generator)
+    + opt(id)
+    + varsym(id)
+
+strategies
+
+  /**
+   * @type List(Symbol) -> List(AnnoTreeFN)
+   */
+  syms2trees =
+      filter(not(is-empty-sym))
+    ; map(sym2tree)
+
+  /**
+   * @type  Symbol -> Symbol
+   */
+  is-empty-sym = ?lit(_)
+  is-empty-sym = ?ci-lit(_)
+  is-empty-sym = ?layout()
+  is-empty-sym = opt(is-empty-sym)
+  is-empty-sym = cf(is-empty-sym)
+  is-empty-sym = lex(is-empty-sym)
+  is-empty-sym = label(id, is-empty-sym)
+
+/**
+ * @type  Symbol -> AnnoTreeFN
+ */  
+strategies
+
+  sym2tree :
+    sym -> rtg |[ A ]|
+      where <sym2nonterm> sym => A
+
+  sym2tree:
+    cf(sym) -> <sym2tree> sym
+      where <not(is-nonterm-generator)> cf(sym)
+
+  sym2tree:
+    lex(sym) -> rtg |[ <string> ]|
+
+  sym2tree:
+    char-class(_) -> rtg |[ <int> ]|
+
+  sym2tree:
+    label(_,sym) -> <sym2tree> sym
+
+  sym2tree:
+    sym -> rtg |[ x ]|
+      where <get-nonterm-of> sym => x
+
+rules
+
+  sym2nonterm :
+    sym -> rtg nonterm |[ x ]|
+      where <get-nonterm-of> sym => x
+
+  sym2nonterm =
+    sort2nonterm
+
+  sym2nonterm =
+    ?cf(<sort2nonterm>)
+
+  sort2nonterm :
+    sort(x) -> rtg nonterm |[ x ]|
+
+  sort2nonterm :
+    parameterized-sort(x, params) -> rtg nonterm |[ y ]|
+    where
+      Symbol2String => y
+
+strategies
+
+  /**
+   * @type  List(Attribute) -> String
+   */
+  get-cnstr-name =
+    fetch-elem(
+      ?default(term(cons(<id>)))
+
+      // FIXME SDF: used for old SDF
+      <+ ?term(cons(<id>))
+    )
+
+  /**
+   * @type  List(Attribute) ->? _
+   */
+  contains-bracket =
+    fetch(?bracket())
+
+  /**
+   * @type  List(Attribute) ->? _
+   */
+  contains-reject =
+    fetch(?reject())
+
+  /**
+   * @type  List(Attribute) ->? _
+   */
+  contains-rtg(s) =
+    fetch(term(rtg(where(s))))
+
+strategies
+
+  err(s) = log(|Error(), <s> (), <id>)
+  dbg(s) = log(|Debug(), <s> (), <id>)
+
+strategies
+
+  sdf-symbol-to-string =
+    Symbol2String
+    ; newname
+    <+ log-sym(|Warning(), "Cannot generate a nice name for symbol", <id>)
+     ;     log(|Warning(), "  Please report this bug at ")
+     ;     log(|Warning(), "    - https://bugs.cs.uu.nl/browse/STR")
+     ;     log(|Warning(), "    - or martin.bravenboer at gmail.com")
+     ; new
+     ;     log(|Warning(), "  Resolution: falling back to the ugly name ", <id>)
+
+  Symbol2String :
+    cf(sym) -> <Symbol2String> sym
+
+  Symbol2String :
+    lex(sym) -> <Symbol2String> sym
+
+  /**
+   * @todo  This could be improved by using quoted identifiers.
+   */
+  Symbol2String :
+    char-class(_) -> "CharClass"
+
+  /**
+   * @todo  This could be improved by using quoted identifiers.
+   */
+  Symbol2String :
+    lit(_) -> "Lit"
+
+  Symbol2String :
+    ci-lit(_) -> "CaseInsensitiveLit"
+
+  Symbol2String :
+    iter(sym) -> <conc-strings> ("ListPlusOf", <Symbol2String> sym)
+
+  Symbol2String :
+    iter-star(sym) -> <conc-strings> ("ListStarOf", <Symbol2String> sym)
+
+  Symbol2String :
+    iter-sep(sym, sep) -> <conc-strings> ("ListPlusOf", <Symbol2String> sym)
+
+  Symbol2String :
+    iter-star-sep(sym, sep) -> <conc-strings> ("ListStarOf", <Symbol2String> sym)
+
+  Symbol2String :
+    sort(s) -> s
+    where
+      <is-string> s
+
+  Symbol2String :
+    parameterized-sort(x, params)  -> <concat-strings> [x, "_" | param-string]
+    where
+      <is-string> x
+      ; <map(Symbol2String)> params => param-string
+
+  Symbol2String :
+    label(_,sym) -> <Symbol2String> sym
+
+  Symbol2String :
+    opt(sym) -> <conc-strings> ("Opt", <Symbol2String> sym)
+
+  Symbol2String :
+    seq(sym, syms) ->
+      < filter(not(?lit(_) + ?ci-lit(_)))
+      ; map(Symbol2String)
+      ; <separate-by> ("_", <id>)
+      ; concat-strings
+      > [sym | syms]
+
+  Symbol2String :
+    alt(sym1, sym2) -> <concat-strings> [<Symbol2String> sym1, "_", <Symbol2String> sym2]
+
+strategies
+
+  log-sym(|severity, msg, sym) =
+    log-prod(|severity, msg, sym)
+
+  /**
+   * @todo Use libgpp
+   */
+  log-prod(|severity, msg, prod) =
+    where(
+      xtc-temp-files(
+        !prod
+      ; write-to
+      ; xtc-pp-sdf2
+      ; ?FILE(<read-text-file; trim-chars('\n' + '\r' + ' ' + '\t'); string-as-chars(filter(not('\n' + '\r')))>)
+      ; ?prodtxt
+      )
+    ; log(|severity, msg)
+    ; log(|severity, <conc-strings> ("  ", prodtxt))
+    )
+
+signature
+  constructors
+    rtg    : rtginfo -> rtg
+    ignore : rtginfo
+
+
+    /**
+     * FIXME: bootstrap problem
+
+    cilit : String -> Tree
+
+    // WTF?
+    ci-lit : String -> Tree
+     */
\ No newline at end of file


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.str
___________________________________________________________________
Added: svn:mergeinfo
   + /strategoxt/branches/strategoxt-annos/stratego-regular/trans/sdf2rtg/core-sdf-grammar2rtg.str:19295,19301,19327
/strategoxt/branches/strategoxt-with/stratego-regular/trans/sdf2rtg/core-sdf-grammar2rtg.str:18038-18120

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/main.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/main.str	2009-07-17 12:35:07 UTC (rev 19723)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/main.str	2009-07-17 12:38:16 UTC (rev 19724)
@@ -3,6 +3,7 @@
 imports
   libstratego-lib
   libstratego-xtc
+  libstratego-rtg
 
   libjava-front
   sdf-options
@@ -70,6 +71,9 @@
       end;
       ?input
     else
+      if not(StartSymbol) then
+        rules(StartSymbol := "Start")
+      end;
       create-grammar;
       input := <pack-sdf> FILE(<conc-strings> ("syntax/", <get-main-class-name>, ".sdf"))
     end;
@@ -101,7 +105,7 @@
     
     <copy-or-create-parse-table> input
   
-  // TODO: XTC detox
+  // TODO: XTC detox -_-;;
   sdf2rtg:
     FILE(sdf) -> rtg
     with
@@ -109,8 +113,11 @@
       if FILE(has-extension(|"sdf")) then
         fatal-err(|"Input file must be a .def file.")
       end;
-      xtc-transform(!"sdf2rtg", !["--ignore-missing-cons", "-m", <get-sdf-main-module> | <pass-verbose>]);
-      parse-xtc-file-report-errors(|<open-parse-table> <import-term(include/rtg.tbl)>, "RTG") => rtg;
+      xtc-transform(!"sdf2table", !["-n", "-m", <get-sdf-main-module> | <pass-v-verbose>]);
+      xtc-transform(!"implodePT");
+      read-from;
+      sdf-desugar;
+      core-sdf-grammar2rtg => rtg;
       ?RTG(_, ProdRules(<id>));
       register-rtg
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-build-properties.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-build-properties.str	2009-07-17 12:35:07 UTC (rev 19723)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-build-properties.str	2009-07-17 12:38:16 UTC (rev 19724)
@@ -9,7 +9,7 @@
     <file-exists> "build.properties"
   <+
     <output-text-file(|[], "build.properties")>
-"source.. = src/
+"source.. = editor/java/
 output.. = bin/
 bin.includes = META-INF/,\\
                .,\\

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-grammar.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-grammar.str	2009-07-17 12:35:07 UTC (rev 19723)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-grammar.str	2009-07-17 12:38:16 UTC (rev 19724)
@@ -13,7 +13,7 @@
     <file-exists> <conc-strings> ("syntax/", <get-main-class-name>, ".sdf")
   <+
     name        := <get-main-class-name>;
-    startsymbol := <StartSymbol <+ !"Start">;
+    startsymbol := <StartSymbol>;
     
     <output-text-file(|["syntax"], <conc-strings> (name, ".sdf"))>
     <conc-strings>

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/ast-form-heuristic.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/ast-form-heuristic.str	2009-07-17 12:35:07 UTC (rev 19723)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/ast-form-heuristic.str	2009-07-17 12:38:16 UTC (rev 19724)
@@ -6,8 +6,7 @@
   sdf2imp/util/-
   sdf2imp/lib/-
 
-strategies
-
+overlays
   
 /**
  * Heuristic traversal strategies.
@@ -17,9 +16,11 @@
 strategies
 
   register-rtg =
-    list-loop(heuristic-register-production);
-    
-    verified-start-symbol
+    with(
+      list-loop(heuristic-register-production);
+      
+      verified-start-symbol
+    )
 
   verified-start-symbol =
     StartSymbol;
@@ -42,18 +43,18 @@
 
   heuristic-child-sorts =
     ?ProdRule(
-      Nonterm(Plain(sort))
+      Nonterm(/*Plain*/(sort))
     , [Appl(_, <id>)]
     );
     
-    map(?Ref(Nonterm(Plain(<id>))));
+    map(?Ref(Nonterm(/*Plain*/(<id>))));
     
     filter(not(?sort)) // avoid circular references
   <+
     // Injection
     ?ProdRule(
-      Nonterm(Plain(sort))
-    , [Ref(Nonterm(Plain(<id>)))]
+      Nonterm(/*Plain*/(sort))
+    , [Ref(Nonterm(/*Plain*/(<id>)))]
     );
     
     ![<not(?sort)>] // avoid circular references
@@ -155,7 +156,7 @@
   <+
     // Injection: use lhs name
     ?ProdRule(
-      Nonterm(Plain(<id>))
+      Nonterm(/*Plain*/(<id>))
     , [Ref(_)]
     )
 
@@ -165,19 +166,19 @@
     // Injection: use rhs name
     ?ProdRule(
       _
-    , [Ref(Nonterm(Plain(<id>)))]
+    , [Ref(Nonterm(/*Plain*/(<id>)))]
     )
   
   non-terminal-sort-name =
     ?ProdRule(
-      Nonterm(Plain(<id>))
+      Nonterm(/*Plain*/(<id>))
     , [Appl(_, _)]
     )
   
   constructor-name =
     ?ProdRule(
       _
-    , [Appl(Term(Plain(<id>)), _)]
+    , [Appl(Term(/*Plain*/(<id>)), _)]
     )
   
   // TODO: Don't match the webdsl "if"
@@ -259,5 +260,5 @@
   get-list-production-item-sort =
     ?ProdRule(
       _
-    , [Appl(ConsTerm(), [Ref(Nonterm(Plain(<id>))), _])]
+    , [Appl(ConsTerm(), [Ref(Nonterm(/*Plain*/(<id>))), _])]
     )

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/configure-main-descriptor.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/configure-main-descriptor.str	2009-07-17 12:35:07 UTC (rev 19723)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/configure-main-descriptor.str	2009-07-17 12:38:16 UTC (rev 19724)
@@ -59,7 +59,10 @@
      |}
    <+
      // Could not read the existing file: use the defaults instead, but don't overwrite the file
-     verbose-msg(!"No legal existing descriptor file found", <conc-strings> ("(editor/", main-descriptor-name, ")"));
+     verbose-msg(
+       !"No legal existing descriptor file found"
+     , <conc-strings> ("(editor/", <main-descriptor-name>, ")")
+     );
      rules(NoExistingDescriptor: _);
      default-main-descriptor
 



From L.C.L.Kats at tudelft.nl  Fri Jul 17 14:39:21 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Jul 2009 12:39:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19725 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.feature org.strategoxt.imp.metatooling
	org.strategoxt.imp.metatooling/icons
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards
	org.strategoxt.imp.metatooling/tests org.strategoxt.imp.runtime
	org.strategoxt.imp.runtime/META-INF
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
	org.strategoxt.imp.runtime/src/stratego-editor-support
Message-ID: <200907171237.n6HCbSsE004250@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-17 12:39:20 +0000 (Fri, 17 Jul 2009)
New Revision: 19725

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19725&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/icons/
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/icons/file.gif
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/icons/file_error.gif
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/icons/file_warning.gif
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/icons/outline_item.gif
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/icons/sample.gif
Removed:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/tests/test-webdsl.sh
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/plugin.xml
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizardPage.java
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/tests/test-editor-service.sh
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/tests/test-stratego-java.sh
   spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/NativeCallHelper.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/stratego-editor-support/jsglr-parser.str

Log:
Working on the stupid "New Editor Project wizard". Still has some problems with sdf2imp running in Java.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/Makefile
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/Makefile	2009-07-17 12:38:16 UTC (rev 19724)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/Makefile	2009-07-17 12:39:20 UTC (rev 19725)
@@ -6,27 +6,27 @@
 SDF2IMP    = ../org.strategoxt.imp.metatooling/sdf2imp
 ESVS       = ${wildcard src/*.esv}
 
-all : src/include/$(SYNTAX).packed.esv $(CTREE) src/include/rtg.tbl src/include/EditorService-pretty.pp.af
-	cp $(CTREE) src/include
+all : editor/include/$(SYNTAX).packed.esv $(CTREE) editor/include/rtg.tbl editor/include/EditorService-pretty.pp.af
+	cp $(CTREE) editor/include
 
 clean :
 	rm -f src/parser/$(SYNTAX)ParseController.java bin/$(SYNTAX).packed.esv
 	rm -rf src/parser/ast
 	# ...
 
-src/include/$(SYNTAX).packed.esv : $(SYNTAX).def src/include/$(SYNTAX).tbl $(SDF2IMP) Makefile $(ESVS)
+editor/include/$(SYNTAX).packed.esv : $(SYNTAX).def editor/include/$(SYNTAX).tbl $(SDF2IMP) Makefile $(ESVS)
 	$(SDF2IMP) -i $< -p $(SYNTAX).tbl -m $(SYNTAX) --verbose 2
 
 $(SYNTAX).def : $(SOURCE)
 	ln -s $< $@
 
-src/include/$(SYNTAX).tbl : $(SYNTAX).def
-	[ -e src/include ] || mkdir src/include
+editor/include/$(SYNTAX).tbl : $(SYNTAX).def
+	[ -e editor/include ] || mkdir editor/include
 	sdf2table -i $< -o $@ -m $(SYNTAX)
 
 # We need a better solution for this
-src/include/EditorService-pretty.pp.af : $(PPAF)
+editor/include/EditorService-pretty.pp.af : $(PPAF)
 	cp $< $@
 
-src/include/rtg.tbl : ~/.nix-profile/share/sdf/stratego-regular/rtg.tbl
+editor/include/rtg.tbl : ~/.nix-profile/share/sdf/stratego-regular/rtg.tbl
 	baf2trm  -i $< -o $@ # cp $< $@

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2009-07-17 12:38:16 UTC (rev 19724)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2009-07-17 12:39:20 UTC (rev 19725)
@@ -179,4 +179,11 @@
          version="0.1.1"
          unpack="false"/>
 
+   <plugin
+         id="org.strategoxt.strcjava"
+         download-size="0"
+         install-size="0"
+         version="0.0.0"
+         unpack="false"/>
+
 </feature>

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/Makefile
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/Makefile	2009-07-17 12:38:16 UTC (rev 19724)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/Makefile	2009-07-17 12:39:20 UTC (rev 19725)
@@ -20,6 +20,9 @@
     -la stratego-gpp \
     -la stratego-tool-doc \
     -la stratego-sglr \
+    -la stratego-rtg \
+    -la stratego-aterm \
+    -la ${HOME}/.nix-profile/lib/libstratego-sdf.la \
     -la ${HOME}/.nix-profile/lib/libjava-front.la \
     `pkg-config --variable=strcxtcflags strategoxt`
 
@@ -34,6 +37,8 @@
 STRINCLUDES = \
 	-I $(HOME)/.nix-profile/share/sdf/xml-front \
 	-I $(HOME)/.nix-profile/share/sdf/gpp \
+	-I $(HOME)/.nix-profile/share/sdf/stratego-regular \
+	-I $(HOME)/.nix-profile/share/sdf/sdf-front/ \
 	-I src/syntax \
     `pkg-config --variable=strcflags java-front`
 
@@ -41,13 +46,18 @@
 
 check : all \
         tests/EditorService.runtestsuite \
-        # tests/test-editor-descriptor.runsh \
-        # tests/test-stratego-java.runsh
+        tests/test-editor-descriptor.runsh \
+        tests/test-stratego-java.runsh \
+        tests/test-foo.runsh
 
 sdf2imp : $(RTREES) $(SYNTAX) Makefile src/include/rtg.tbl
 	strc -i src/sdf2imp.str -o $@ $(STRINCLUDES) $(STRCFLAGS) -m main-sdf2imp $(STRCSTFU)
 	rm sdf2imp.c sdf2imp.lo sdf2imp.o
 
+sdf2imp.java : $(RTREES) $(SYNTAX) Makefile src/include/rtg.tbl
+	[ -e strategoxt.jar ] || (echo "ERROR: Missing file strategoxt.jar. Please copy/link it to this directory"; exit 1)
+	java -server -Xss4m -jar strategoxt.jar -i src/sdf2imp.str -o $@ $(STRINCLUDES) $(STRCFLAGS) -m main-sdf2imp $(STRCSTFU)
+
 syntax : $(SYNTAX)
 
 clean :

Added: spoofax-imp/trunk/org.strategoxt.imp.metatooling/icons/file.gif
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.metatooling/icons/file.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.metatooling/icons/file_error.gif
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.metatooling/icons/file_error.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.metatooling/icons/file_warning.gif
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.metatooling/icons/file_warning.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.metatooling/icons/outline_item.gif
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.metatooling/icons/outline_item.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.metatooling/icons/sample.gif
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.metatooling/icons/sample.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/plugin.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/plugin.xml	2009-07-17 12:38:16 UTC (rev 19724)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/plugin.xml	2009-07-17 12:39:20 UTC (rev 19725)
@@ -17,12 +17,15 @@
    </extension>
    <extension
          point="org.eclipse.ui.newWizards">
+      <primaryWizard
+            id="org.strategoxt.imp.metatooling.wizards.NewEditorWizard">
+      </primaryWizard>
       <wizard
-            category="org.strategoxt.imp.metatooling"
             class="org.strategoxt.imp.metatooling.wizards.NewEditorWizard"
             icon="icons/sample.gif"
-            id="org.strategoxt.imp.metatooling.wizards.sdf2imp editor"
-            name="org.eclipse.imp.wizards">
+            id="org.strategoxt.imp.metatooling.wizards.NewEditorWizard"
+            name="Spoofax/IMP editor project"
+            project="true">
       </wizard>
    </extension>
    

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-07-17 12:38:16 UTC (rev 19724)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-07-17 12:39:20 UTC (rev 19725)
@@ -1,51 +1,54 @@
 package org.strategoxt.imp.metatooling.wizards;
 
+import java.io.IOException;
+import java.lang.reflect.InvocationTargetException;
+
+import org.eclipse.core.resources.IFile;
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.resources.IWorkspace;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.jface.dialogs.MessageDialog;
+import org.eclipse.jface.operation.IRunnableWithProgress;
 import org.eclipse.jface.viewers.IStructuredSelection;
 import org.eclipse.jface.wizard.Wizard;
 import org.eclipse.ui.INewWizard;
 import org.eclipse.ui.IWorkbench;
-import org.eclipse.core.runtime.*;
-import org.eclipse.jface.operation.*;
-import java.lang.reflect.InvocationTargetException;
-import org.eclipse.jface.dialogs.MessageDialog;
-import org.eclipse.jface.viewers.ISelection;
-import org.eclipse.core.resources.*;
-import org.eclipse.core.runtime.CoreException;
-import java.io.*;
-import org.eclipse.ui.*;
+import org.eclipse.ui.IWorkbenchPage;
+import org.eclipse.ui.PartInitException;
+import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.ide.IDE;
+import org.spoofax.interpreter.core.Interpreter;
+import org.spoofax.interpreter.core.InterpreterException;
+import org.spoofax.interpreter.core.InterpreterExit;
+import org.strategoxt.imp.editors.editorservice.EditorServiceParseController;
+import org.strategoxt.imp.metatooling.MetatoolingActivator;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
+import org.strategoxt.imp.runtime.stratego.adapter.WrappedAstNodeFactory;
 
 /**
- * This is a sample new wizard. Its role is to create a new file 
- * resource in the provided container. If the container resource
- * (a folder or a project) is selected in the workspace 
- * when the wizard is opened, it will accept it as the target
- * container. The wizard creates one file with the extension
- * "esv". If a sample multi-page editor (also available
- * as a template) is registered for the same extension, it will
- * be able to open it.
+ * 
+ * @author Lennart Kats <lennart add lclnet.nl>
  */
-
 public class NewEditorWizard extends Wizard implements INewWizard {
-	private NewEditorWizardPage page;
-	private ISelection selection;
+	private final NewEditorWizardPage input = new NewEditorWizardPage();
 
-	/**
-	 * Constructor for NewEditorWizard.
-	 */
+	// TODO: Support external directory and working set selection in wizard
+			
 	public NewEditorWizard() {
-		super();
 		setNeedsProgressMonitor(true);
 	}
+
+	public void init(IWorkbench workbench, IStructuredSelection selection) {
+		// No further initialization required
+	}
 	
-	/**
-	 * Adding the page to the wizard.
-	 */
-
 	@Override
 	public void addPages() {
-		page = new NewEditorWizardPage(selection);
-		addPage(page);
+		addPage(input);
 	}
 
 	/**
@@ -55,19 +58,23 @@
 	 */
 	@Override
 	public boolean performFinish() {
-		final String containerName = page.getContainerName();
-		final String fileName = page.getFileName();
+		final String name = input.getInputName();
+		final String packageName = input.getInputPackageName();
+		final String extensions = input.getInputExtensions();
+		
 		IRunnableWithProgress op = new IRunnableWithProgress() {
 			public void run(IProgressMonitor monitor) throws InvocationTargetException {
 				try {
-					doFinish(containerName, fileName, monitor);
-				} catch (CoreException e) {
+					doFinish(name, packageName, extensions, monitor);
+				} catch (Exception e) {
+					Environment.logException("Error creating new project", e);
 					throw new InvocationTargetException(e);
 				} finally {
 					monitor.done();
 				}
 			}
 		};
+		
 		try {
 			getContainer().run(true, false, op);
 		} catch (InterruptedException e) {
@@ -86,67 +93,79 @@
 	 * the editor on the newly created file.
 	 */
 
-	private void doFinish(
-		String containerName,
-		String fileName,
-		IProgressMonitor monitor)
-		throws CoreException {
-		// create a sample file
-		monitor.beginTask("Creating " + fileName, 2);
-		IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
-		IResource resource = root.findMember(new Path(containerName));
-		if (!resource.exists() || !(resource instanceof IContainer)) {
-			throwCoreException("Container \"" + containerName + "\" does not exist.");
-		}
-		IContainer container = (IContainer) resource;
-		final IFile file = container.getFile(new Path(fileName));
+	private void doFinish(String name, String packageName, String extensions, IProgressMonitor monitor) throws InterpreterException, IOException, CoreException {
+		final int TASK_COUNT = 5;
+		monitor.beginTask("Creating " + name + " project", TASK_COUNT);
+		
+		monitor.setTaskName("Preparing project builder...");
+		Interpreter builder = Environment.createInterpreter();
+		Environment.addToInterpreter(builder, MetatoolingActivator.getResourceAsStream("/include/sdf2imp.ctree"));
+		EditorIOAgent agent = new EditorIOAgent();		
+		agent.setDescriptor(EditorServiceParseController.getDescriptor());
+		builder.setIOAgent(agent);
+		monitor.worked(1);
+
+		monitor.setTaskName("Creating project...");
+		IWorkspace workspace = ResourcesPlugin.getWorkspace();
+		IProject project = workspace.getRoot().getProject(name);
+		project.create(null);
+		project.open(null);
 		try {
-			InputStream stream = openContentStream();
-			if (file.exists()) {
-				file.setContents(stream, true, true, monitor);
-			} else {
-				file.create(stream, true, monitor);
+			WrappedAstNodeFactory terms = Environment.getTermFactory();
+			builder.setCurrent(terms.makeList(
+				terms.makeString("sdf2imp"),
+				terms.makeString("-m"), terms.makeString(name),
+				terms.makeString("-n"), terms.makeString(packageName),
+				terms.makeString("-e"), terms.makeString(extensions)
+			));
+			agent.setWorkingDir(project.getLocation().toOSString());
+			synchronized (Environment.getSyncRoot()) {
+				try {
+					builder.invoke("main-sdf2imp");
+				} catch (InterpreterExit e) {
+					if (e.getValue() != 0) {
+						throw new InterpreterException("Project builder failed. Log follows\n\n"
+								+ agent.getLog());
+					}
+				}
 			}
-			stream.close();
-		} catch (IOException e) {
+			project.refreshLocal(IResource.DEPTH_INFINITE, monitor);
+			monitor.worked(1);		
+			
+			monitor.setTaskName("Opening files for editing...");
+			openEditor(project, "/syntax/" + name +  ".sdf");
+			openEditor(project, "/editor/" + name +  ".main.esv");
+			monitor.worked(1);
+		} finally {
+			monitor.setTaskName("Undoing workspace operations...");
+			project.delete(true, null);
 		}
-		monitor.worked(1);
-		monitor.setTaskName("Opening file for editing...");
+	}
+	
+	private void openEditor(IProject project, String filename) {
+		final IResource file = (IResource) project.findMember(filename);
+		if (!file.exists() || !(file instanceof IFile)) {
+			Environment.logException("Cannot open an editor for " + filename);
+			return;
+		}
 		getShell().getDisplay().asyncExec(new Runnable() {
 			public void run() {
 				IWorkbenchPage page =
 					PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage();
 				try {
-					IDE.openEditor(page, file, true);
+					IDE.openEditor(page, (IFile) file, true);
 				} catch (PartInitException e) {
+					Environment.logException("Cannot open an editor for " + file, e);
 				}
 			}
 		});
-		monitor.worked(1);
 	}
-	
-	/**
-	 * We will initialize file contents with a sample text.
-	 */
 
-	private InputStream openContentStream() {
-		String contents =
-			"This is the initial file contents for *.esv file that should be word-sorted in the Preview page of the multi-page editor";
-		return new ByteArrayInputStream(contents.getBytes());
-	}
-
+	/*
 	private void throwCoreException(String message) throws CoreException {
 		IStatus status =
 			new Status(IStatus.ERROR, "org.strategoxt.imp.metatooling", IStatus.OK, message, null);
 		throw new CoreException(status);
 	}
-
-	/**
-	 * We will accept the selection in the workbench to see if
-	 * we can initialize from it.
-	 * @see IWorkbenchWizard#init(IWorkbench, IStructuredSelection)
-	 */
-	public void init(IWorkbench workbench, IStructuredSelection selection) {
-		this.selection = selection;
-	}
+	*/
 }
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizardPage.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizardPage.java	2009-07-17 12:38:16 UTC (rev 19724)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizardPage.java	2009-07-17 12:39:20 UTC (rev 19725)
@@ -1,25 +1,17 @@
 package org.strategoxt.imp.metatooling.wizards;
 
-import org.eclipse.core.resources.IContainer;
-import org.eclipse.core.resources.IResource;
+import org.eclipse.core.resources.IWorkspace;
 import org.eclipse.core.resources.ResourcesPlugin;
-import org.eclipse.core.runtime.Path;
 import org.eclipse.jface.dialogs.IDialogPage;
-import org.eclipse.jface.viewers.ISelection;
-import org.eclipse.jface.viewers.IStructuredSelection;
 import org.eclipse.jface.wizard.WizardPage;
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.events.ModifyEvent;
 import org.eclipse.swt.events.ModifyListener;
-import org.eclipse.swt.events.SelectionAdapter;
-import org.eclipse.swt.events.SelectionEvent;
 import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
-import org.eclipse.swt.widgets.Button;
 import org.eclipse.swt.widgets.Composite;
 import org.eclipse.swt.widgets.Label;
 import org.eclipse.swt.widgets.Text;
-import org.eclipse.ui.dialogs.ContainerSelectionDialog;
 
 /**
  * The "New" wizard page allows setting the container for the new file as well
@@ -28,20 +20,21 @@
  */
 
 public class NewEditorWizardPage extends WizardPage {
-	private Text containerText;
+	private Text inputName;
+	
+	private Text inputPackageName;
+	
+	private Text inputExtensions;
+	
+	private boolean isInputPackageNameChanged;
 
-	private Text fileText;
-
-	private ISelection selection;
-
 	/**
 	 * Constructor for SampleNewWizardPage.
 	 */
-	public NewEditorWizardPage(ISelection selection) {
+	public NewEditorWizardPage() {
 		super("wizardPage");
-		setTitle("Multi-page Editor File");
-		setDescription("This wizard creates a new file with *.esv extension that can be opened by a multi-page editor.");
-		this.selection = selection;
+		setTitle("Spoofax/IMP Editor Project");
+		setDescription("This wizard creates a new Spoofax/IMP editor project.");
 	}
 
 	/**
@@ -51,11 +44,12 @@
 		Composite container = new Composite(parent, SWT.NULL);
 		GridLayout layout = new GridLayout();
 		container.setLayout(layout);
-		layout.numColumns = 3;
+		layout.numColumns = 2;
 		layout.verticalSpacing = 9;
+		
+		/*
 		Label label = new Label(container, SWT.NULL);
 		label.setText("&Container:");
-
 		containerText = new Text(container, SWT.BORDER | SWT.SINGLE);
 		GridData gd = new GridData(GridData.FILL_HORIZONTAL);
 		containerText.setLayoutData(gd);
@@ -64,7 +58,6 @@
 				dialogChanged();
 			}
 		});
-
 		Button button = new Button(container, SWT.PUSH);
 		button.setText("Browse...");
 		button.addSelectionListener(new SelectionAdapter() {
@@ -73,113 +66,123 @@
 				handleBrowse();
 			}
 		});
-		label = new Label(container, SWT.NULL);
-		label.setText("&File name:");
-
-		fileText = new Text(container, SWT.BORDER | SWT.SINGLE);
-		gd = new GridData(GridData.FILL_HORIZONTAL);
-		fileText.setLayoutData(gd);
-		fileText.addModifyListener(new ModifyListener() {
+		*/
+				
+		new Label(container, SWT.NULL).setText("&Project name:");
+		inputName = new Text(container, SWT.BORDER | SWT.SINGLE);
+		inputName.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
+		inputName.addModifyListener(new ModifyListener() {
 			public void modifyText(ModifyEvent e) {
-				dialogChanged();
+				onChange();
 			}
 		});
-		initialize();
-		dialogChanged();
+		
+		new Label(container, SWT.NULL).setText("&Plugin ID:");
+		inputPackageName = new Text(container, SWT.BORDER | SWT.SINGLE);
+		inputPackageName.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
+		inputPackageName.addModifyListener(new ModifyListener() {
+			public void modifyText(ModifyEvent e) {
+				isInputPackageNameChanged = true;
+				onChange();
+			}
+		});
+				
+		new Label(container, SWT.NULL).setText("&File extensions:");
+		inputExtensions = new Text(container, SWT.BORDER | SWT.SINGLE);
+		inputExtensions.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
+		inputExtensions.addModifyListener(new ModifyListener() {
+			public void modifyText(ModifyEvent e) {
+				onChange();
+			}
+		});
+
+		inputName.setText("MyFirstEditor");
+		inputExtensions.setText("ext");
 		setControl(container);
 	}
 
 	/**
-	 * Tests if the current workbench selection is a suitable container to use.
+	 * Ensures that both text fields are set.
 	 */
-
-	private void initialize() {
-		if (selection != null && selection.isEmpty() == false
-				&& selection instanceof IStructuredSelection) {
-			IStructuredSelection ssel = (IStructuredSelection) selection;
-			if (ssel.size() > 1)
-				return;
-			Object obj = ssel.getFirstElement();
-			if (obj instanceof IResource) {
-				IContainer container;
-				if (obj instanceof IContainer)
-					container = (IContainer) obj;
-				else
-					container = ((IResource) obj).getParent();
-				containerText.setText(container.getFullPath().toString());
-			}
+	private void onChange() {
+		if (getInputName().length() == 0) {
+			updateStatus("Project name must be specified");
+			return;
 		}
-		fileText.setText("new_editor.esv");
-	}
-
-	/**
-	 * Uses the standard container selection dialog to choose the new value for
-	 * the container field.
-	 */
-
-	private void handleBrowse() {
-		ContainerSelectionDialog dialog = new ContainerSelectionDialog(
-				getShell(), ResourcesPlugin.getWorkspace().getRoot(), false,
-				"Select new file container");
-		if (dialog.open() == ContainerSelectionDialog.OK) {
-			Object[] result = dialog.getResult();
-			if (result.length == 1) {
-				containerText.setText(((Path) result[0]).toString());
-			}
+		if (getInputName().replace('\\', '/').indexOf('/', 1) > 0) {
+			updateStatus("Project name must be valid");
+			return;
 		}
-	}
+		
+		if (!isInputPackageNameChanged) {
+			inputPackageName.setText(toPackageName(getInputName()));
+			isInputPackageNameChanged = false;
+		} else if (getInputPackageName().equals(toPackageName(getInputName()))) {
+			isInputPackageNameChanged = false;
+		}
 
-	/**
-	 * Ensures that both text fields are set.
-	 */
-
-	private void dialogChanged() {
-		IResource container = ResourcesPlugin.getWorkspace().getRoot()
-				.findMember(new Path(getContainerName()));
-		String fileName = getFileName();
-
-		if (getContainerName().length() == 0) {
-			updateStatus("File container must be specified");
+		if (getInputPackageName().length() == 0) {
+			updateStatus("Package name must be specified");
 			return;
 		}
-		if (container == null
-				|| (container.getType() & (IResource.PROJECT | IResource.FOLDER)) == 0) {
-			updateStatus("File container must exist");
+		if (!getInputPackageName().toLowerCase().equals(toPackageName(getInputPackageName()))
+				|| getInputPackageName().indexOf("..") != -1)
+		{
+			updateStatus("Package name must be valid");
 			return;
 		}
-		if (!container.isAccessible()) {
-			updateStatus("Project must be writable");
+
+		if (getInputExtensions().length() == 0) {
+			updateStatus("File extension must be specified");
 			return;
 		}
-		if (fileName.length() == 0) {
-			updateStatus("File name must be specified");
+		if (getInputExtensions().startsWith(".")) {
+			updateStatus("File extension must be valid: cannot start with a '.'");
 			return;
 		}
-		if (fileName.replace('\\', '/').indexOf('/', 1) > 0) {
-			updateStatus("File name must be valid");
+
+		IWorkspace workspace = ResourcesPlugin.getWorkspace();
+		if (workspace.getRoot().getProject(getInputName()).exists()) {
+			updateStatus("A project with this name already exists");
 			return;
 		}
-		int dotLoc = fileName.lastIndexOf('.');
-		if (dotLoc != -1) {
-			String ext = fileName.substring(dotLoc + 1);
-			if (ext.equalsIgnoreCase("esv") == false) {
-				updateStatus("File extension must be \"esv\"");
-				return;
+	
+		updateStatus(null);
+	}
+	
+	private static String toPackageName(String name) {
+		char[] input = name.toLowerCase().replace('-', '_').replace(' ', '_').toCharArray();
+		StringBuilder output = new StringBuilder();
+		int i = 0;
+		while (i < input.length) {
+			char c = input[i++];
+			if (Character.isLetter(c) || c == '_') {
+				output.append(c);
+				break;
 			}
 		}
-		updateStatus(null);
+		while (i < input.length) {
+			char c = input[i++];
+			if (Character.isLetterOrDigit(c) || c == '_' || c == '.')
+				output.append(c);
+		}
+		return output.toString();
 	}
 
 	private void updateStatus(String message) {
 		setErrorMessage(message);
 		setPageComplete(message == null);
 	}
-
-	public String getContainerName() {
-		return containerText.getText();
+	
+	public String getInputName() {
+		return inputName.getText().trim();
 	}
-
-	public String getFileName() {
-		return fileText.getText();
+	
+	public String getInputPackageName() {
+		return inputPackageName.getText().trim();
 	}
+	
+	public String getInputExtensions() {
+		return inputExtensions.getText().trim();
+	}
 }
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/tests/test-editor-service.sh
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/tests/test-editor-service.sh	2009-07-17 12:38:16 UTC (rev 19724)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/tests/test-editor-service.sh	2009-07-17 12:39:20 UTC (rev 19725)
@@ -1,13 +1,12 @@
-#!/bin/bash
+#!/bin/bash -e
 
 cd `dirname $0`
 
-if [ ! -d editorservice ]
-then mkdir editorservice
-fi
-
+rm -rf editorservice
+mdkir editorservice
 cd editorservice
 
 ES=../../src/syntax/EditorService
 
-../../sdf2imp -i $ES.def -p $ES.tbl -m EditorService -s Module -e esv --verbose 2 2>&1
+../../sdf2imp -i $ES.def -p $ES.tbl -m EditorService -s Module -e esv --verbose 2
+../../sdf2imp -i $ES.def --verbose 2

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/tests/test-stratego-java.sh
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/tests/test-stratego-java.sh	2009-07-17 12:38:16 UTC (rev 19724)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/tests/test-stratego-java.sh	2009-07-17 12:39:20 UTC (rev 19725)
@@ -1,13 +1,12 @@
-#!/bin/bash
+#!/bin/bash -e
 
 cd `dirname $0`
 
-if [ ! -d strategojava ]
-then mkdir strategojava
-fi
-
+rm -rf strategojava
+mkdir strategojava
 cd strategojava
 
 SJ=~/.nix-profile/share/java-front/Stratego-Java-15
 
-../../sdf2imp -i $SJ.def -p $SJ.tbl -m Stratego-Java-15 -s Module[StrategoHost] -e str --verbose 2 2>&1
+../../sdf2imp -i $SJ.def -p $SJ.tbl -m Stratego-Java-15 -s Module[StrategoHost] -e str --verbose 2
+../../sdf2imp -i $SJ.def

Deleted: spoofax-imp/trunk/org.strategoxt.imp.metatooling/tests/test-webdsl.sh
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/tests/test-webdsl.sh	2009-07-17 12:38:16 UTC (rev 19724)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/tests/test-webdsl.sh	2009-07-17 12:39:20 UTC (rev 19725)
@@ -1,13 +0,0 @@
-#!/bin/bash
-
-cd `dirname $0`
-
-if [ ! -d webdsl ]
-then mkdir webdsl
-fi
-
-cd webdsl
-
-WD=../../../../../webdsls/trunk/src/org/webdsl/dsl/
-
-../../sdf2imp -i $WD/syntax/WebDSL.def -p $WD/syntax/WebDSL.tbl -m WebDSL -s Application -e app,mod --verbose 2 2>&1

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF	2009-07-17 12:38:16 UTC (rev 19724)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF	2009-07-17 12:39:20 UTC (rev 19725)
@@ -3,7 +3,8 @@
 Bundle-Name: Spoofax/IMP Runtime
 Bundle-SymbolicName: org.strategoxt.imp.runtime;singleton:=true
 Bundle-Version: 0.1.0.2505
-Require-Bundle: org.eclipse.imp.runtime,
+Require-Bundle: org.strategoxt.strcjava;bundle-version="0.1.0",
+ org.eclipse.imp.runtime,
  org.spoofax.aterm,
  org.spoofax.jsglr,
  org.spoofax.interpreter.core,

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch	2009-07-17 12:38:16 UTC (rev 19724)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch	2009-07-17 12:39:20 UTC (rev 19725)
@@ -16,7 +16,7 @@
 <listAttribute key="org.eclipse.debug.ui.favoriteGroups">
 <listEntry value="org.eclipse.debug.ui.launchGroup.run"/>
 </listAttribute>
-<stringAttribute key="org.eclipse.jdt.launching.JRE_CONTAINER" value="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+<stringAttribute key="org.eclipse.jdt.launching.JRE_CONTAINER" value="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
 <stringAttribute key="org.eclipse.jdt.launching.PROGRAM_ARGUMENTS" value="-os ${target.os} -ws ${target.ws} -arch ${target.arch} -nl ${target.nl}"/>
 <stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.pde.ui.workbenchClasspathProvider"/>
 <stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-server -Xmx1024m -Xverify:none -ea:org.strategoxt.imp.runtime.Debug -ea:org.strategoxt.imp..."/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2009-07-17 12:38:16 UTC (rev 19724)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2009-07-17 12:39:20 UTC (rev 19725)
@@ -20,6 +20,7 @@
 import org.spoofax.jsglr.ParseTable;
 import org.spoofax.jsglr.ParseTableManager;
 import org.spoofax.jsglr.SGLR;
+import org.strategoxt.HybridInterpreter;
 import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
 import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
 import org.strategoxt.imp.runtime.stratego.IMPJSGLRLibrary;
@@ -109,7 +110,10 @@
 	public static synchronized Interpreter createInterpreter() throws IOException, InterpreterException {
 		// We use the wrappedAstNode factory for both the programs and the terms,
 		// to ensure they are compatible.
-		Interpreter result = new Interpreter(getTermFactory()) {
+		
+		// TODO: Optimize - at least use the HybridInterpreter here
+		
+		Interpreter result = new HybridInterpreter(getTermFactory()) {
 			@Override
 			public boolean invoke(String name) throws InterpreterExit, InterpreterException {
 				assertLock();
@@ -129,23 +133,21 @@
 			}
 		};
 
+		// TODO: Clean up Spoofax/IMP operator registries; remove overlap with STRJ runtime
 		result.addOperatorRegistry(new IMPJSGLRLibrary());
 		result.addOperatorRegistry(new IMPLibrary());
 		result.setIOAgent(new EditorIOAgent());
 		
-		result.load(Environment.class.getResourceAsStream("/include/libstratego-lib.ctree"));
-		result.load(Environment.class.getResourceAsStream("/include/libstratego-sglr.ctree"));
-		result.load(Environment.class.getResourceAsStream("/include/libstratego-gpp.ctree"));
-		result.load(Environment.class.getResourceAsStream("/include/libstratego-xtc.ctree"));
-		result.load(Environment.class.getResourceAsStream("/include/stratego-editor-support.ctree"));
-		result.load(Environment.class.getResourceAsStream("/include/performance-tweaks.ctree"));
-		
 		SDefT call = result.getContext().lookupSVar("REPLACE_call_0_0");
 		result.getContext().getVarScope().addSVar("call_0_0", call);
 		
 		return result;
 	}
 	
+	/**
+	 * @Deprecated Use {@link Interpreter#load(InputStream)} instead.
+	 */
+	@Deprecated
 	public static synchronized void addToInterpreter(Interpreter interpreter, InputStream stream) throws IOException, InterpreterException {
 		interpreter.load(stream);			
 	}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/NativeCallHelper.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/NativeCallHelper.java	2009-07-17 12:38:16 UTC (rev 19724)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/NativeCallHelper.java	2009-07-17 12:39:20 UTC (rev 19725)
@@ -53,8 +53,6 @@
 			
 			reader.close();
 			output.flush();
-			if (output != System.out && output != System.err)
-				output.close();
 		} catch (IOException e) {
 			Environment.logException("IO Exception redirecting output from Process", e);
 		}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/stratego-editor-support/jsglr-parser.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/stratego-editor-support/jsglr-parser.str	2009-07-17 12:38:16 UTC (rev 19724)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/stratego-editor-support/jsglr-parser.str	2009-07-17 12:39:20 UTC (rev 19725)
@@ -12,8 +12,8 @@
    */
   jsglr-open-parsetable = 
       ?tbl
-    ; prim("JSGLR_open_parsetable", tbl) => internal
-    ; !ParseTable(internal)
+    ; prim("JSGLR_open_parsetable", tbl) => table
+    ; !ParseTable(table)
     
   jsglr-parse-string(|tbl) =
     jsglr-parse-string(id | tbl, None(), "string")
@@ -29,4 +29,4 @@
       where(!tbl => ParseTable(internal-tbl))
     ; ?string
     ; prim("JSGLR_parse_string_pt", on-parse-error | string, internal-tbl, start-symbol, path)
-    
\ No newline at end of file
+    



From L.C.L.Kats at tudelft.nl  Fri Jul 17 14:41:28 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Jul 2009 12:41:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19726 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core
Message-ID: <200907171239.n6HCdZud004267@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-17 12:41:28 +0000 (Fri, 17 Jul 2009)
New Revision: 19726

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19726&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Context.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/IContext.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Interpreter.java

Log:


Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Context.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Context.java	2009-07-17 12:39:20 UTC (rev 19725)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Context.java	2009-07-17 12:41:28 UTC (rev 19726)
@@ -163,10 +163,15 @@
         return null;
     }
 
+    @Deprecated
     public void addOperatorRegistry(String domain, IOperatorRegistry or) {
         operatorRegistries.put(domain, or);
     }
 
+    public void addOperatorRegistry(IOperatorRegistry or) {
+        operatorRegistries.put(or.getOperatorRegistryName(), or);
+    }
+
     public Collection<String> getStrategyNames() {
         VarScope v = getVarScope();
         while(v.getParent() != null) 

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/IContext.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/IContext.java	2009-07-17 12:39:20 UTC (rev 19725)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/IContext.java	2009-07-17 12:41:28 UTC (rev 19726)
@@ -28,6 +28,7 @@
 
     public ITermFactory getFactory();
     public IOperatorRegistry getOperatorRegistry(String domain);
+    public void addOperatorRegistry(IOperatorRegistry or);
 
     public boolean bindVars(Results r);
 

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Interpreter.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Interpreter.java	2009-07-17 12:39:20 UTC (rev 19725)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Interpreter.java	2009-07-17 12:41:28 UTC (rev 19726)
@@ -1,3 +1,4 @@
+
 /*
  * Created on 07.aug.2005
  *
@@ -161,11 +162,12 @@
 		loader.load(term);
 	}
 
+    @Deprecated
     public void addOperatorRegistry(String domainName, IOperatorRegistry or) {
         context.addOperatorRegistry(domainName, or);
     }
 
     public void addOperatorRegistry(IOperatorRegistry or) {
-        context.addOperatorRegistry(or.getOperatorRegistryName(), or);
+        context.addOperatorRegistry(or);
     }
 }


From L.C.L.Kats at tudelft.nl  Fri Jul 17 15:22:37 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Jul 2009 13:22:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19730 - LennartKats -
	in strc-java/trunk: java java/runtime/org/strategoxt/lang
	java/runtime/org/strategoxt/lang/compat
	java/runtime/org/strategoxt/lang/compat/override trans
Message-ID: <200907171320.n6HDKiJt004713@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-17 13:22:37 +0000 (Fri, 17 Jul 2009)
New Revision: 19730

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19730&view=rev

Modified:
   strc-java/trunk/java/Makefile.am
   strc-java/trunk/java/runtime/org/strategoxt/lang/InteropContext.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/InteropSDefT.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/NativeCallHelper.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str
   strc-java/trunk/trans/s2j-options.str
   strc-java/trunk/trans/s2j.str

Log:
Minor compatibility fixes.

Changes:

Modified: strc-java/trunk/java/Makefile.am
===================================================================
--- strc-java/trunk/java/Makefile.am	2009-07-17 13:12:22 UTC (rev 19729)
+++ strc-java/trunk/java/Makefile.am	2009-07-17 13:22:37 UTC (rev 19730)
@@ -149,7 +149,7 @@
 	../trans/strj -i $< -o $@ $(STRJOPTIONS) -p org.strategoxt.lang.compat.override -la stratego-lib -la stratego-xtc
 
 runtime/org/strategoxt/lang/compat/override/strc_compat.java : runtime/org/strategoxt/lang/compat/override/strc-compat.str ../trans/strj
-	../trans/strj -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/stratego-front -I $(STRATEGOXT)/share/stratego-lib -I $(JAVA_FRONT)/share/java-front -i $< -o $@ $(STRJOPTIONS) -p org.strategoxt.lang.compat.override -la stratego-lib -la stratego-xtc -la org.strategoxt.libstrc
+	../trans/strj -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/stratego-front -I $(STRATEGOXT)/share/xtc -I $(STRATEGOXT)/share/stratego-lib -I $(JAVA_FRONT)/share/java-front -i $< -o $@ $(STRJOPTIONS) -p org.strategoxt.lang.compat.override -la stratego-lib -la stratego-xtc -la org.strategoxt.libstrc
 
 ###### COMPILER #######
 

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/InteropContext.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/InteropContext.java	2009-07-17 13:12:22 UTC (rev 19729)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/InteropContext.java	2009-07-17 13:22:37 UTC (rev 19730)
@@ -54,6 +54,10 @@
 	public IOperatorRegistry getOperatorRegistry(String domain) {
 		return context.getOperatorRegistry(domain);
 	}
+	
+	public void addOperatorRegistry(IOperatorRegistry registry) {
+		context.addOperatorRegistry(registry);
+	}
 
 	public StackTracer getStackTracer() {
 		return context;
@@ -72,7 +76,7 @@
 	}
 
 	public AbstractPrimitive lookupOperator(String name) {
-        return context.lookupOperator(name);
+        return context.lookupPrimitive(name);
 	}
 
 	public SDefT lookupSVar(String n) throws InterpreterException {

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/InteropSDefT.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/InteropSDefT.java	2009-07-17 13:12:22 UTC (rev 19729)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/InteropSDefT.java	2009-07-17 13:22:37 UTC (rev 19730)
@@ -39,20 +39,22 @@
 	}
 	
 	@Override
-	public IStrategoTerm invokeDynamic(Context compilerContext, IStrategoTerm current, Strategy[] sargs, IStrategoTerm[] targs) {
+	public IStrategoTerm invokeDynamic(Context compiledContext, IStrategoTerm current, Strategy[] sargs, IStrategoTerm[] targs) {
 		VarScope oldScope = context.getVarScope();
 		try {
+		    VarScope defScope = definition.getScope();
 			if (sargs.length != 0 || targs.length != 0) {
-				VarScope newScope = new VarScope(oldScope);
-				assignParameters(compilerContext, newScope, sargs, targs);
-				context.setVarScope(newScope);
+				defScope = new VarScope(defScope);
+				assignParameters(compiledContext, defScope, sargs, targs);
+				context.setVarScope(defScope);
 			}
 			
 			context.setCurrent(current);
+			context.setVarScope(defScope);
 			boolean success = definition.evaluate(context);
 			return success ? context.current() : null;
 		} catch (InterpreterException e) {
-			throw new StrategoException("Exception in interpreter", e);
+			throw new StrategoException("Exception in interpreter: " + e.getMessage(), e);
 		} finally {
 			context.restoreVarScope(oldScope);
 		}

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/NativeCallHelper.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/NativeCallHelper.java	2009-07-17 13:12:22 UTC (rev 19729)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/NativeCallHelper.java	2009-07-17 13:22:37 UTC (rev 19730)
@@ -53,8 +53,6 @@
 			
 			reader.close();
 			output.flush();
-			if (output != System.out && output != System.err)
-				output.close();
 		} catch (IOException e) {
 			throw new StrategoException("IO Exception redirecting output from Process", e);
 		}

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str	2009-07-17 13:12:22 UTC (rev 19729)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str	2009-07-17 13:22:37 UTC (rev 19730)
@@ -27,6 +27,8 @@
         case "libstratego-tool-doc": import-term(libstratego-tool-doc.rtree)
         case "libstratego-parallel": !Module("libstratego-parallel", [])
         case "libstrc":              import-term(libstrc.rtree)
+        case "lib":                  import-term(lib.rtree)
+        case "liblib":               import-term(liblib.rtree)
         case "libjava-front":
           // prefer local (-I) definition
           override <+ import-term(libjava-front.rtree)

Modified: strc-java/trunk/trans/s2j-options.str
===================================================================
--- strc-java/trunk/trans/s2j-options.str	2009-07-17 13:12:22 UTC (rev 19729)
+++ strc-java/trunk/trans/s2j-options.str	2009-07-17 13:22:37 UTC (rev 19730)
@@ -28,6 +28,13 @@
     , <set-config> ("--library", ()); !()
     , !"--library | --lib  Build a library instead of an application"
     )
+  + Option(
+      "--xtc-repo"
+    , warn-msg(|"Option --xtc-repo is not supported on this platform");
+      <conc-strings> ("GetInternalDefaultXtcRepository=\"", <id>, "\"");
+      <post-extend-config> ("-D", [<parse-define-option>]); !()
+    , fail // undocumented
+    )
   
   s2j-general-options =
     ArgOption(

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2009-07-17 13:12:22 UTC (rev 19729)
+++ strc-java/trunk/trans/s2j.str	2009-07-17 13:22:37 UTC (rev 19730)
@@ -298,7 +298,7 @@
 
 rules
 
-  translate-constant-definition : // TODO: check if contant definition name not taken
+  translate-constant-definition : // TODO: check if contant strategy definition name not taken
     (name, value) -> def'
     with
       name'  := <conc-strings> (<cify> name, "_0_0")



From L.C.L.Kats at tudelft.nl  Fri Jul 17 16:32:55 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Jul 2009 14:32:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19735 - LennartKats -
	strc-java/trunk/trans
Message-ID: <200907171431.n6HEV3ge005344@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-17 14:32:55 +0000 (Fri, 17 Jul 2009)
New Revision: 19735

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19735&view=rev

Modified:
   strc-java/trunk/trans/s2j-options.str

Log:


Changes:

Modified: strc-java/trunk/trans/s2j-options.str
===================================================================
--- strc-java/trunk/trans/s2j-options.str	2009-07-17 13:38:17 UTC (rev 19734)
+++ strc-java/trunk/trans/s2j-options.str	2009-07-17 14:32:55 UTC (rev 19735)
@@ -28,12 +28,11 @@
     , <set-config> ("--library", ()); !()
     , !"--library | --lib  Build a library instead of an application"
     )
-  + Option(
+  + ArgOption(
       "--xtc-repo"
-    , warn-msg(|"Option --xtc-repo is not supported on this platform");
-      <conc-strings> ("GetInternalDefaultXtcRepository=\"", <id>, "\"");
+    , <conc-strings> ("GetInternalDefaultXtcRepository=\"", <id>, "\"");
       <post-extend-config> ("-D", [<parse-define-option>]); !()
-    , fail // undocumented
+    , fail // undocumented/deprecated
     )
   
   s2j-general-options =



From L.C.L.Kats at tudelft.nl  Fri Jul 17 16:45:05 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Jul 2009 14:45:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19736 - LennartKats -
	in spoofax-imp/trunk: . org.strategoxt.imp.generator
	org.strategoxt.imp.generator/.externalToolBuilders
	org.strategoxt.imp.generator/META-INF
	org.strategoxt.imp.generator/tests
	org.strategoxt.imp.metatooling/src
	org.strategoxt.imp.metatooling/src/sdf2imp/lib
Message-ID: <200907171443.n6HEhDDu005424@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-17 14:45:05 +0000 (Fri, 17 Jul 2009)
New Revision: 19736

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19736&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.generator/
   spoofax-imp/trunk/org.strategoxt.imp.generator/.externalToolBuilders/Makefile for Spoofax-IMP generator.launch
   spoofax-imp/trunk/org.strategoxt.imp.generator/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.generator/icons/
   spoofax-imp/trunk/org.strategoxt.imp.generator/plugin.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src-gen/
   spoofax-imp/trunk/org.strategoxt.imp.generator/tests/test-editor-service.sh
   spoofax-imp/trunk/org.strategoxt.imp.generator/tests/test-stratego-java.sh
Removed:
   spoofax-imp/trunk/org.strategoxt.imp.generator/.externalToolBuilders/Makefile for IMP metatooling.launch
   spoofax-imp/trunk/org.strategoxt.imp.generator/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.generator/plugin.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/tests/test-editor-service.sh
   spoofax-imp/trunk/org.strategoxt.imp.generator/tests/test-stratego-java.sh
   spoofax-imp/trunk/org.strategoxt.imp.generator/tests/test-webdsl.sh
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/include/
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.generator/.project
   spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.str

Log:
Created a new 'generator' project that will house the 'sdf2imp' generator.

Changes:


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.generator
___________________________________________________________________
Added: svn:mergeinfo
   + 

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/.classpath
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/.classpath	2009-07-16 08:47:40 UTC (rev 19706)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/.classpath	2009-07-17 14:45:05 UTC (rev 19736)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <classpath>
-	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="src" path="src-gen"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
 	<classpathentry kind="output" path="bin"/>

Deleted: spoofax-imp/trunk/org.strategoxt.imp.generator/.externalToolBuilders/Makefile for IMP metatooling.launch
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/.externalToolBuilders/Makefile for IMP metatooling.launch	2009-07-16 08:47:40 UTC (rev 19706)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/.externalToolBuilders/Makefile for IMP metatooling.launch	2009-07-17 14:45:05 UTC (rev 19736)
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<launchConfiguration type="org.eclipse.ui.externaltools.ProgramBuilderLaunchConfigurationType">
-<booleanAttribute key="org.eclipse.debug.core.appendEnvironmentVariables" value="true"/>
-<booleanAttribute key="org.eclipse.debug.ui.ATTR_CONSOLE_OUTPUT_ON" value="false"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS" value="eclipse-deps"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS" value="full,incremental,"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.metatooling}"/>
-<booleanAttribute key="org.eclipse.debug.core.capture_output" value="false"/>
-<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="/usr/bin/make"/>
-<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_BUILD_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;str in metatooling&quot; name=&quot;str in metatooling&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.metatooling/src/str&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
-</launchConfiguration>

Copied: spoofax-imp/trunk/org.strategoxt.imp.generator/.externalToolBuilders/Makefile for Spoofax-IMP generator.launch (from rev 19706, spoofax-imp/trunk/org.strategoxt.imp.metatooling/.externalToolBuilders/Makefile for IMP metatooling.launch)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/.externalToolBuilders/Makefile for Spoofax-IMP generator.launch	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/.externalToolBuilders/Makefile for Spoofax-IMP generator.launch	2009-07-17 14:45:05 UTC (rev 19736)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ui.externaltools.ProgramBuilderLaunchConfigurationType">
+<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src-gen&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
+<booleanAttribute key="org.eclipse.debug.core.appendEnvironmentVariables" value="true"/>
+<booleanAttribute key="org.eclipse.debug.core.capture_output" value="false"/>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_CONSOLE_OUTPUT_ON" value="false"/>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_BUILD_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;str in metatooling&quot; name=&quot;str in metatooling&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src/syntax&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src/sdf2imp.str&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src/sdf2imp&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="/usr/bin/make"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS" value="full,incremental,"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS" value="java"/>
+<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.metatooling}"/>
+</launchConfiguration>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/.project
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/.project	2009-07-16 08:47:40 UTC (rev 19706)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/.project	2009-07-17 14:45:05 UTC (rev 19736)
@@ -1,11 +1,21 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <projectDescription>
-	<name>org.strategoxt.imp.metatooling</name>
+	<name>org.strategoxt.imp.generator</name>
 	<comment></comment>
 	<projects>
 	</projects>
 	<buildSpec>
 		<buildCommand>
+			<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+			<triggers>full,incremental,</triggers>
+			<arguments>
+				<dictionary>
+					<key>LaunchConfigHandle</key>
+					<value>&lt;project&gt;/.externalToolBuilders/Makefile for Spoofax-IMP generator.launch</value>
+				</dictionary>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
 			<name>org.eclipse.jdt.core.javabuilder</name>
 			<arguments>
 			</arguments>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF	2009-07-16 08:47:40 UTC (rev 19706)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF	2009-07-17 14:45:05 UTC (rev 19736)
@@ -1,8 +1,8 @@
 Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: Spoofax/IMP Metatooling
-Bundle-SymbolicName: org.strategoxt.imp.metatooling;singleton:=true
-Bundle-Version: 0.1.0.2505
+Bundle-SymbolicName: org.strategoxt.imp.generator;singleton:=true
+Bundle-Version: 0.1.0.2600
 Bundle-ClassPath: org.strategoxt.imp.metatooling/
 Require-Bundle: org.eclipse.imp.runtime,
  org.spoofax.aterm,

Deleted: spoofax-imp/trunk/org.strategoxt.imp.generator/Makefile
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/Makefile	2009-07-16 08:47:40 UTC (rev 19706)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/Makefile	2009-07-17 14:45:05 UTC (rev 19736)
@@ -1,100 +0,0 @@
-# HACK: Assume nix installation in Makefile
-
-STRS     = $(wildcard src/*.str) \
-           $(wildcard src/sdf2imp/*.str) \
-           $(wildcard src/sdf2imp/lib/*.str) \
-           $(wildcard src/sdf2imp/project/*.str) \
-           $(wildcard src/sdf2imp/parser/*.str) \
-           $(wildcard src/sdf2imp/util/*.str) \
-           $(wildcard src/sdf2imp/services/*.str)           
-
-RTREES = $(STRS:.str=.rtree)
-
-SDFS     = $(wildcard src/syntax/*.sdf)
-
-SYNTAX   = src/syntax/EditorService.tbl src/syntax/EditorService.pp src/syntax/EditorService-pretty.pp.af src/syntax/EditorService.str src/syntax/Stratego-Java-EditorService.tbl
-
-STRCFLAGS = \
-	-la stratego-xtc \
-    -la stratego-lib \
-    -la stratego-gpp \
-    -la stratego-tool-doc \
-    -la stratego-sglr \
-    -la ${HOME}/.nix-profile/lib/libjava-front.la \
-    `pkg-config --variable=strcxtcflags strategoxt`
-
-SDFINCLUDES    = -Idef ${HOME}/.nix-profile/share/java-front-syntax/JavaMix.def \
-                 -Idef ${HOME}/.nix-profile/share/java-front/JavaEBlockMix.def \
-                 -Idef ${HOME}/.nix-profile/share/java-front/EmbeddedJavaMix.def
-
-# I don't care much for nullary constructor warnings unless it's about lowercase ones, such as 'start'
-STRCSTFU=2>&1 | grep -vE 'warning ] Nullary constructor .*[A-Z]|warning ] multiple external| \[ExtSDef\(|stratego-trm|module-name-checked|module-name-checked"' \
-                 >&2
-
-STRINCLUDES = \
-	-I $(HOME)/.nix-profile/share/sdf/xml-front \
-	-I $(HOME)/.nix-profile/share/sdf/gpp \
-	-I src/syntax \
-    `pkg-config --variable=strcflags java-front`
-
-all : sdf2imp src/include/sdf2imp.ctree syntax
-
-check : all \
-        tests/EditorService.runtestsuite \
-        # tests/test-editor-descriptor.runsh \
-        # tests/test-stratego-java.runsh
-
-sdf2imp : $(RTREES) $(SYNTAX) Makefile src/include/rtg.tbl
-	strc -i src/sdf2imp.str -o $@ $(STRINCLUDES) $(STRCFLAGS) -m main-sdf2imp $(STRCSTFU)
-	rm sdf2imp.c sdf2imp.lo sdf2imp.o
-
-syntax : $(SYNTAX)
-
-clean :
-	rm -f src/include/sdf2imp.ctree sdf2imp $(RTREES) $(wildcard src/syntax/*.tbl) $(wildcard src/syntax/*.def) *.dep include/*.dep
-	
-# files:
-
-% : %.str $(STRS)
-
-%.rtree : %.str $(SYNTAX)
-	@parse-stratego -i $< -o $@ $(STRINCLUDES)
-
-src/include/sdf2imp.ctree : sdf2imp
-	strc -F --library -i src/sdf2imp.str -o $@ $(STRINCLUDES) $(STRCSTFU)
-
-%.pp : %.def
-	ppgen -i $< -o $@
-
-%.pp.af : %.pp
-	parse-pp-table -i $< -o $@
-
-%.str : %.rtg
-	rtg2sig -i $< -o $@
-
-%.rtg : %.def
-	sdf2rtg -i $< -o $@ -m `basename $*` --ignore-missing-cons
-
-%.runtestsuite : %.testsuite
-	parse-unit --no-heuristic-filters -i $< -p src/syntax/EditorService.tbl
-
-%.runsh : %.sh
-	sh $<
-
-src/syntax/EditorService.def : src/syntax/EditorService.sdf $(SDFS)
-	pack-sdf -i $< -o $@ -I src/syntax
-
-src/syntax/EditorService.tbl : src/syntax/EditorService.def
-	sdf2table -m EditorService -i $< -o $@
-
-src/syntax/Stratego-Java-EditorService.def : src/syntax/Stratego-Java-EditorService.sdf $(SDFS)
-	pack-sdf -i $< -o $@ -I src/syntax $(SDFINCLUDES)
-
-src/syntax/Stratego-Java-EditorService.tbl : src/syntax/Stratego-Java-EditorService.def
-	sdf2table -m Stratego-Java-EditorService -i $< -o $@
-
-# We need a better solution for this
-src/include/rtg.tbl : ~/.nix-profile/share/sdf/stratego-regular/rtg.tbl
-	[ -e src/include ] || mkdir src/include
-	baf2trm  -i $< -o $@ # cp $< $@
-

Copied: spoofax-imp/trunk/org.strategoxt.imp.generator/Makefile (from rev 19725, spoofax-imp/trunk/org.strategoxt.imp.metatooling/Makefile)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/Makefile	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/Makefile	2009-07-17 14:45:05 UTC (rev 19736)
@@ -0,0 +1,113 @@
+# HACK: Assume nix installation in Makefile
+
+STRS     = $(wildcard src/*.str) \
+           $(wildcard src/sdf2imp/*.str) \
+           $(wildcard src/sdf2imp/lib/*.str) \
+           $(wildcard src/sdf2imp/project/*.str) \
+           $(wildcard src/sdf2imp/parser/*.str) \
+           $(wildcard src/sdf2imp/util/*.str) \
+           $(wildcard src/sdf2imp/services/*.str)           
+
+RTREES = $(STRS:.str=.rtree)
+
+SDFS     = $(wildcard src/syntax/*.sdf)
+
+SYNTAX   = src/syntax/EditorService.tbl src/syntax/EditorService.pp src/syntax/EditorService-pretty.pp.af src/syntax/EditorService.str src/syntax/Stratego-Java-EditorService.tbl
+
+STRCFLAGS = \
+	-la stratego-xtc \
+    -la stratego-lib \
+    -la stratego-gpp \
+    -la stratego-tool-doc \
+    -la stratego-sglr \
+    -la stratego-rtg \
+    -la stratego-aterm \
+    -la ${HOME}/.nix-profile/lib/libstratego-sdf.la \
+    -la ${HOME}/.nix-profile/lib/libjava-front.la \
+    `pkg-config --variable=strcxtcflags strategoxt`
+
+SDFINCLUDES    = -Idef ${HOME}/.nix-profile/share/java-front-syntax/JavaMix.def \
+                 -Idef ${HOME}/.nix-profile/share/java-front/JavaEBlockMix.def \
+                 -Idef ${HOME}/.nix-profile/share/java-front/EmbeddedJavaMix.def
+
+# I don't care much for nullary constructor warnings unless it's about lowercase ones, such as 'start'
+STRCSTFU=2>&1 | grep -vE 'warning ] Nullary constructor .*[A-Z]|warning ] multiple external| \[ExtSDef\(|stratego-trm|module-name-checked|module-name-checked"' \
+                 >&2
+
+STRINCLUDES = \
+	-I $(HOME)/.nix-profile/share/sdf/xml-front \
+	-I $(HOME)/.nix-profile/share/sdf/gpp \
+	-I $(HOME)/.nix-profile/share/sdf/stratego-regular \
+	-I $(HOME)/.nix-profile/share/sdf/sdf-front/ \
+	-I $(HOME)/.nix-profile/share/java-front/ \
+	-I src/syntax \
+    `pkg-config --variable=strcflags java-front`
+
+all : sdf2imp java syntax
+
+java : src-gen/sdf2imp.java
+
+check : all \
+        tests/EditorService.runtestsuite \
+        tests/test-editor-descriptor.runsh \
+        tests/test-stratego-java.runsh \
+        tests/test-foo.runsh
+
+sdf2imp : $(RTREES) $(SYNTAX) Makefile src/include/rtg.tbl
+	strc -i src/sdf2imp.str -o $@ $(STRINCLUDES) $(STRCFLAGS) -m main-sdf2imp $(STRCSTFU)
+	rm sdf2imp.c sdf2imp.lo sdf2imp.o
+
+src-gen/sdf2imp.java : $(RTREES) $(SYNTAX) Makefile src/include/rtg.tbl
+	[ -e strategoxt.jar ] || (echo "ERROR: Missing file strategoxt.jar. Please copy/link it to this directory"; exit 1)
+	java -server -Xss4m -jar strategoxt.jar -i src/sdf2imp.str -o $@ $(STRINCLUDES) $(STRCFLAGS) -m main-sdf2imp $(STRCSTFU)
+
+syntax : $(SYNTAX)
+
+clean :
+	rm -f src/include/sdf2imp.ctree sdf2imp $(RTREES) $(wildcard src/syntax/*.tbl) $(wildcard src/syntax/*.def) *.dep include/*.dep
+	
+# files:
+
+% : %.str $(STRS)
+
+%.rtree : %.str $(SYNTAX)
+	@parse-stratego -i $< -o $@ $(STRINCLUDES)
+
+src/include/sdf2imp.ctree : sdf2imp
+	strc -F --library -i src/sdf2imp.str -o $@ $(STRINCLUDES) $(STRCSTFU)
+
+%.pp : %.def
+	ppgen -i $< -o $@
+
+%.pp.af : %.pp
+	parse-pp-table -i $< -o $@
+
+%.str : %.rtg
+	rtg2sig -i $< -o $@
+
+%.rtg : %.def
+	sdf2rtg -i $< -o $@ -m `basename $*` --ignore-missing-cons
+
+%.runtestsuite : %.testsuite
+	parse-unit --no-heuristic-filters -i $< -p src/syntax/EditorService.tbl
+
+%.runsh : %.sh
+	sh $<
+
+src/syntax/EditorService.def : src/syntax/EditorService.sdf $(SDFS)
+	pack-sdf -i $< -o $@ -I src/syntax
+
+src/syntax/EditorService.tbl : src/syntax/EditorService.def
+	sdf2table -m EditorService -i $< -o $@
+
+src/syntax/Stratego-Java-EditorService.def : src/syntax/Stratego-Java-EditorService.sdf $(SDFS)
+	pack-sdf -i $< -o $@ -I src/syntax $(SDFINCLUDES)
+
+src/syntax/Stratego-Java-EditorService.tbl : src/syntax/Stratego-Java-EditorService.def
+	sdf2table -m Stratego-Java-EditorService -i $< -o $@
+
+# We need a better solution for this
+src/include/rtg.tbl : ~/.nix-profile/share/sdf/stratego-regular/rtg.tbl
+	[ -e src/include ] || mkdir src/include
+	baf2trm  -i $< -o $@ # cp $< $@
+

Deleted: spoofax-imp/trunk/org.strategoxt.imp.generator/plugin.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/plugin.xml	2009-07-16 08:47:40 UTC (rev 19706)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/plugin.xml	2009-07-17 14:45:05 UTC (rev 19736)
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<?eclipse version="3.0"?>
-
-<plugin>
-   <extension
-         point="org.eclipse.imp.runtime.languageDescription">
-      <language
-            description="sdf2imp metatooling dynamic language placeholder"
-            extensions="sdf2impbasetoo"
-            language="DynamicRootInitializer"
-            validatorClass="org.strategoxt.imp.metatooling.loading.StartupDescriptorValidator"
-            validator=     "org.strategoxt.imp.metatooling.loading.StartupDescriptorValidator"
-            >
-            <!-- The validator class is used to start the dynamic loader       -->
-            <!-- "validator" is wat imp currently (incorrectly) tries to load) -->
-      </language>
-   </extension>
-   <extension
-         point="org.eclipse.ui.newWizards">
-      <wizard
-            category="org.strategoxt.imp.metatooling"
-            class="org.strategoxt.imp.metatooling.wizards.NewEditorWizard"
-            icon="icons/sample.gif"
-            id="org.strategoxt.imp.metatooling.wizards.sdf2imp editor"
-            name="org.eclipse.imp.wizards">
-      </wizard>
-   </extension>
-   
-</plugin>

Copied: spoofax-imp/trunk/org.strategoxt.imp.generator/plugin.xml (from rev 19725, spoofax-imp/trunk/org.strategoxt.imp.metatooling/plugin.xml)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/plugin.xml	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/plugin.xml	2009-07-17 14:45:05 UTC (rev 19736)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<?eclipse version="3.0"?>
+
+<plugin>
+   <extension
+         point="org.eclipse.imp.runtime.languageDescription">
+      <language
+            description="sdf2imp metatooling dynamic language placeholder"
+            extensions="sdf2impbasetoo"
+            language="DynamicRootInitializer"
+            validatorClass="org.strategoxt.imp.metatooling.loading.StartupDescriptorValidator"
+            validator=     "org.strategoxt.imp.metatooling.loading.StartupDescriptorValidator"
+            >
+            <!-- The validator class is used to start the dynamic loader       -->
+            <!-- "validator" is wat imp currently (incorrectly) tries to load) -->
+      </language>
+   </extension>
+   <extension
+         point="org.eclipse.ui.newWizards">
+      <primaryWizard
+            id="org.strategoxt.imp.metatooling.wizards.NewEditorWizard">
+      </primaryWizard>
+      <wizard
+            class="org.strategoxt.imp.metatooling.wizards.NewEditorWizard"
+            icon="icons/sample.gif"
+            id="org.strategoxt.imp.metatooling.wizards.NewEditorWizard"
+            name="Spoofax/IMP editor project"
+            project="true">
+      </wizard>
+   </extension>
+   
+</plugin>

Deleted: spoofax-imp/trunk/org.strategoxt.imp.generator/tests/test-editor-service.sh
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/tests/test-editor-service.sh	2009-07-16 08:47:40 UTC (rev 19706)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/tests/test-editor-service.sh	2009-07-17 14:45:05 UTC (rev 19736)
@@ -1,13 +0,0 @@
-#!/bin/bash
-
-cd `dirname $0`
-
-if [ ! -d editorservice ]
-then mkdir editorservice
-fi
-
-cd editorservice
-
-ES=../../src/syntax/EditorService
-
-../../sdf2imp -i $ES.def -p $ES.tbl -m EditorService -s Module -e esv --verbose 2 2>&1

Copied: spoofax-imp/trunk/org.strategoxt.imp.generator/tests/test-editor-service.sh (from rev 19725, spoofax-imp/trunk/org.strategoxt.imp.metatooling/tests/test-editor-service.sh)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/tests/test-editor-service.sh	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/tests/test-editor-service.sh	2009-07-17 14:45:05 UTC (rev 19736)
@@ -0,0 +1,12 @@
+#!/bin/bash -e
+
+cd `dirname $0`
+
+rm -rf editorservice
+mdkir editorservice
+cd editorservice
+
+ES=../../src/syntax/EditorService
+
+../../sdf2imp -i $ES.def -p $ES.tbl -m EditorService -s Module -e esv --verbose 2
+../../sdf2imp -i $ES.def --verbose 2

Deleted: spoofax-imp/trunk/org.strategoxt.imp.generator/tests/test-stratego-java.sh
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/tests/test-stratego-java.sh	2009-07-16 08:47:40 UTC (rev 19706)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/tests/test-stratego-java.sh	2009-07-17 14:45:05 UTC (rev 19736)
@@ -1,13 +0,0 @@
-#!/bin/bash
-
-cd `dirname $0`
-
-if [ ! -d strategojava ]
-then mkdir strategojava
-fi
-
-cd strategojava
-
-SJ=~/.nix-profile/share/java-front/Stratego-Java-15
-
-../../sdf2imp -i $SJ.def -p $SJ.tbl -m Stratego-Java-15 -s Module[StrategoHost] -e str --verbose 2 2>&1

Copied: spoofax-imp/trunk/org.strategoxt.imp.generator/tests/test-stratego-java.sh (from rev 19725, spoofax-imp/trunk/org.strategoxt.imp.metatooling/tests/test-stratego-java.sh)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/tests/test-stratego-java.sh	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/tests/test-stratego-java.sh	2009-07-17 14:45:05 UTC (rev 19736)
@@ -0,0 +1,12 @@
+#!/bin/bash -e
+
+cd `dirname $0`
+
+rm -rf strategojava
+mkdir strategojava
+cd strategojava
+
+SJ=~/.nix-profile/share/java-front/Stratego-Java-15
+
+../../sdf2imp -i $SJ.def -p $SJ.tbl -m Stratego-Java-15 -s Module[StrategoHost] -e str --verbose 2
+../../sdf2imp -i $SJ.def

Deleted: spoofax-imp/trunk/org.strategoxt.imp.generator/tests/test-webdsl.sh
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/tests/test-webdsl.sh	2009-07-16 08:47:40 UTC (rev 19706)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/tests/test-webdsl.sh	2009-07-17 14:45:05 UTC (rev 19736)
@@ -1,13 +0,0 @@
-#!/bin/bash
-
-cd `dirname $0`
-
-if [ ! -d webdsl ]
-then mkdir webdsl
-fi
-
-cd webdsl
-
-WD=../../../../../webdsls/trunk/src/org/webdsl/dsl/
-
-../../sdf2imp -i $WD/syntax/WebDSL.def -p $WD/syntax/WebDSL.tbl -m WebDSL -s Application -e app,mod --verbose 2 2>&1

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.str	2009-07-17 14:32:55 UTC (rev 19735)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.str	2009-07-17 14:45:05 UTC (rev 19736)
@@ -7,7 +7,7 @@
 imports
   libstratego-lib
   libstratego-rtg
-  Sdf2
+  libstratego-sdf
   sdf/tool/xtc
   libstratego-xtc
 
@@ -621,4 +621,4 @@
 
     // WTF?
     ci-lit : String -> Tree
-     */
\ No newline at end of file
+     */



From L.C.L.Kats at tudelft.nl  Fri Jul 17 16:55:44 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Jul 2009 14:55:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19737 - LennartKats -
	in spoofax-imp/trunk/org.strategoxt.imp.generator: . icons
	src src/sdf2imp src/sdf2imp/lib src/sdf2imp/project
	src/sdf2imp/services src/sdf2imp/util src/syntax
Message-ID: <200907171453.n6HErpTv005496@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-17 14:55:44 +0000 (Fri, 17 Jul 2009)
New Revision: 19737

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19737&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/core-sdf-grammar2rtg.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/options.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-grammar.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/configure-main-descriptor.str
Removed:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/include/
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/org/
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/read-main-descriptor.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/options.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/
   spoofax-imp/trunk/org.strategoxt.imp.generator/icons/
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-manifest.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-packed-descriptor-file.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/ast-form-heuristic.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-analysis-descriptor.meta
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-analysis-descriptor.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-occurrences-descriptor.meta
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-occurrences-descriptor.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-references-descriptor.meta
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-references-descriptor.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/input.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/output.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/AnalysisService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/Comments.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/OccurrencesService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/ReferencesService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/SemanticServices.sdf

Log:
Updated generator project to include changes since r19706.

Changes (first 1000 lines of the diffs):


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.generator
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /spoofax-imp/trunk/org.strategoxt.imp.metatooling:19707-19736


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.generator/icons
___________________________________________________________________
Added: svn:mergeinfo
   + 

Copied: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/core-sdf-grammar2rtg.str (from rev 19736, spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.str)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/core-sdf-grammar2rtg.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/core-sdf-grammar2rtg.str	2009-07-17 14:55:44 UTC (rev 19737)
@@ -0,0 +1,624 @@
+/**
+ * Converts a normalized SDF grammar in abstract syntax to an RTG in abstract syntax.
+ *
+ * @author  Martin Bravenboer <martin.bravenboer at gmail.com>
+ */
+module lib/sdf2imp/core-sdf-grammar2rtg
+imports
+  libstratego-lib
+  libstratego-rtg
+  libstratego-sdf
+  sdf/tool/xtc
+  libstratego-xtc
+
+strategies
+
+  /**
+   * @type  Grammar -> RTG
+   */
+  core-sdf-grammar2rtg =
+    where(
+      <table-create> "generated-nonterms"
+    )
+  ; where(
+      collect-om(?syntax(_))
+    ; map(grammar2prodrules <+ log(|Error(), "Rewriting syntax section failed"); fail)
+    ; concat
+    ; if ?[] then
+        log(|Error(), "No production rules in RTG. Did you specify the right main module?")
+        ; <xtc-exit> 1
+      else
+        ?prods
+      end
+    )
+
+    /**
+     * @todo  use start symbols of SDF
+     */
+  ; collect-om(is-start-prod)
+  ; if ?[] then
+      log(|Error(), "No start productions found. Did you specify any start-symbols in the syntax definition?")
+      ; <xtc-exit> 1
+    else
+      map(start-prod2tree; ?Ref(<id>) <+ err(!"Rewriting production to nonterm failed"); fail)
+    ; !RTG(Start(<id>), ProdRules(prods))
+    end
+
+
+/**
+ * @type  Grammar -> List(ProdRule)
+ */
+strategies
+
+  grammar2prodrules :
+    syntax(prods) ->
+      < remove-all(ignore-prod)
+      ; map({p:
+          ?p
+        ; (  listinj2prodrule
+          <+ seq2prodrule
+          <+ alt2prodrule
+          <+ var2prodrule
+          <+ opt2prodrule
+          <+ inj2prodrule
+          <+ prod2prodrule
+          <+ err(!"Rewriting production failed"); fail
+          )
+        ; where(try(<cycle-error> (p, <id>)))
+        })
+      ; remove-all(?[])
+      > prods
+
+  grammar2prodrules =
+    ?context-free-syntax(_)
+    ; fatal-err(|"context-free syntax in input hasn't been normalized to syntax")
+
+  grammar2prodrules =
+    ?lexical-syntax(_)
+    ; fatal-err(|"lexical syntax in input hasn't been normalized to syntax")
+
+  cycle-error =
+    ?(p, rtg |[ A -> A ]|)
+    ; log(|Critical(), "production rule resulted in a direct cycle", p)
+    ; <exit> 1
+
+strategies
+
+  /**
+   * Ignore layout productions.
+   *
+   * @type Production ->? _
+   */
+  ignore-prod =
+    ?prod(_, cf(layout()), _)
+
+  ignore-prod =
+    ?prod(_, cf(opt(layout())), _)
+
+  /**
+   * Ignore lexical productions.
+   */
+  ignore-prod =
+    ?prod(_, lex(_), _)
+
+  ignore-prod = 
+    ?prod(_,lit(_), _)
+
+  ignore-prod = 
+    ?prod(_,ci-lit(_), _)
+
+  ignore-prod =
+    ?prod([lex(iter-star(char-class(_)))], cf(iter-star(char-class(_))), _)
+
+  ignore-prod =
+    ?prod([lex(_)],  sym, _)
+    ; where(<oncetd(?char-class(_))> sym)
+
+  /*
+  cf(alt(
+       char-class(simple-charclass(present(conc(range(numeric("\\0"),numeric("\\92")),range(numeric("\\94"),numeric("\\255"))))))
+     , alt(sort("CloseBracket"),sort("TwoCloseBrackets"))
+     )
+  )*/
+
+
+  /**
+   * Ignore syntax -> context-free injections
+   */
+  ignore-prod =
+    ?prod([a],  cf(a), _)
+
+  /**
+   * Ignore varsym -> context-free injections
+   */
+  ignore-prod =
+    ?prod([varsym(cf(a))], cf(a), _)
+
+  /**
+   * Ignore lit -> lit | lit | lit productions
+   */
+  ignore-prod =
+    ?prod([lit(_)], cf(alt(lit(_), more)),attrs([]))
+    ; where(
+        <rec rec(lit(id) + alt(rec, rec))> more
+      )
+
+  ignore-prod =
+    ?prod([start()], sort("SURROGATE-START"), _)
+
+  ignore-prod =
+    ?prod(_, file-start(), _)
+
+  /**
+   * Ignore a reject production that injects A into A.
+   */
+  ignore-prod =
+    ?prod(_, _, attrs(attrs)); where(<contains-reject> attrs)
+
+
+  /**
+   * Ignore aux. productions
+   */
+  ignore-prod =
+    ?prod(_, _, attrs(attrs)); where(<contains-rtg(?ignore())> attrs)
+
+  /**
+   * Ignore a bracket production that injects A into A.
+   */
+  ignore-prod =
+    prod(?syms, cf(match-sort(?x)), ?attrs(attrs))
+    ; where(
+        <contains-bracket> attrs
+      ; <not(get-cnstr-name)> attrs
+      ; <syms2trees> syms => [ rtg |[ x ]| ]
+      )
+
+  match-sort(s) =
+    sort(s)
+
+  match-sort(s) =
+    parameterized-sort(s, id)
+
+  ignore-prod =
+    is-start-prod
+
+  is-start-prod =
+    ?prod(_, start(), _)
+
+  start-prod2tree :
+    prod(syms, start(), _) -> t
+      where <syms2trees> syms => [t]
+
+strategies
+
+  /**
+   * Rewrites a context-free production with a constructor.
+   *
+   * @type Production -> ProdRule
+   */
+  prod2prodrule :
+    p at prod(syms, sym, attrs(attrs)) -> result
+    where
+        <sym2nonterm> sym => A
+      ; <syms2trees> syms => t*
+      ; if y := <get-cnstr-name> attrs then
+          !rtg |[ A -> y(t*) ]|
+        else
+          log-prod(|Error(), "No constructor name specified in production:", p)
+          ;    log(|Error(), "Resolution: please add a cons attribute to this production.")
+          ; if-verbose1(log(|Error(), "Production in abstract syntax: ", p))
+          ; //if <get-config> IgnoreMissingCons() then
+              ![]
+            //else
+            //  // FIXME SDF: http://sjofar.sen.cwi.nl:8080/show_bug.cgi?id=660
+            //     <?prod([sort("Label"), lit(_), sort("Symbol")], sort("Symbol"), _)> p
+            //     ; ![]
+            //
+            //  <+ <?prod([sort("Symbol"),lit(_),sort("Symbol")],sort("Symbol"), _)> p
+            //     ; ![]
+            // 
+            //  <+ <xtc-exit> 1
+            //end
+         end
+       ; ?result
+
+/**
+ * Injections
+ */
+rules
+
+  /**
+   * Rewrites an context-free or lexical injection.
+   *
+   * The lhs must be a simple non-terminal reference.
+   */
+  inj2prodrule :
+    prod([inj], sym, attrs(attrs)) -> rtg |[ A -> t ]|
+      where not(<get-cnstr-name> attrs)
+          ; <sym2tree> inj => t
+          ; <sym2nonterm> sym => A
+
+  /**
+   * Rewrite a bracket production which is not a 'real' injection.
+   */
+  inj2prodrule :
+    prod(syms, cf(<match-sort(?x)>), attrs(attrs)) -> rtg |[ x -> A ]|
+      where <contains-bracket> attrs
+          ; <not(get-cnstr-name)> attrs
+          ; <syms2trees> syms => [ rtg |[ A ]| ]
+
+/**
+ * Sequence
+ */
+rules
+
+  /**
+   * syms -> (syms)
+   */
+  seq2prodrule :
+    prod(syms, nt, _) -> rtg |[ x -> <(i)> (t*) ]|
+      where <is-seq-symbol> nt
+          ; <get-nonterm-of> nt => x
+          ; <syms2trees> syms => t*
+          ; <length; int-to-string> t* => i
+
+/**
+ * Alternatives
+ */
+rules
+
+  alt2prodrule :
+    prod(syms, nt, _) -> rtg |[ x -> t ]|
+      where <is-alt-symbol> nt
+          ; <get-nonterm-of> nt => x
+          ; <syms2trees> syms => [t]
+
+/**
+ * Iteration
+ */
+rules
+
+  /**
+   *  A+ -> A* 
+   */
+  listinj2prodrule :
+    prod([s1 at cf(iter(a))], s2 at cf(iter-star(a)), _) -> rtg |[ x2 -> x1 ]|
+      where <get-nonterm-of> s1 => x1
+          ; <get-nonterm-of> s2 => x2
+
+  /**
+   * -> A* 
+   * -> {A lit}* 
+   */
+  listinj2prodrule :
+    prod([], sym, _) -> rtg |[ x -> <nil>() ]|
+      where <is-list-symbol> sym
+          ; <get-nonterm-of> sym => x
+
+  /**
+   *  A -> A+
+   */
+  listinj2prodrule :
+    prod([cf(a)], cf(iter(a)), _) -> rtg |[ x1 -> <cons> (t, x2) ]|
+      where <sym2tree> cf(a) => t
+          ; <get-nonterm-of> cf(iter(a)) => x1
+          ; <get-nonterm-of> cf(iter-star(a)) => x2
+
+  /**
+   *  A -> A+
+   */
+  listinj2prodrule :
+    prod([a], iter(a), _) -> rtg |[ x1 -> <cons> (t, x2) ]|
+    where
+        <sym2tree> a => t
+      ; <get-nonterm-of> iter(a) => x1
+      ; <get-nonterm-of> iter-star(a) => x2
+
+/**
+ * Iteration with Separator
+ * Currently only separators that do not occur in the AST are supported.
+ */
+rules
+
+  /**
+   * {A lit}* lit  {A lit}+ -> {A lit}+
+   */
+  listinj2prodrule :
+    prod(syms, nt, _) -> rtg |[ x -> <conc> (y, z) ]|
+      where <is-list-symbol> nt
+          ; <get-nonterm-of> nt => x
+          ; <filter(not(is-empty-sym)); map(is-list-symbol; get-nonterm-of)> syms => [y, z]
+
+  /**
+   *  {A lit}+ -> {A lit}* 
+   */
+  listinj2prodrule :
+    prod([s1 at cf(iter-sep(a, sep))], s2 at cf(iter-star-sep(a, sep)), _) -> rtg |[ x2 -> x1 ]|
+      where <is-empty-sym> sep
+          ; <get-nonterm-of> s1 => x1
+          ; <get-nonterm-of> s2 => x2
+
+  /**
+   *  A -> {A lit}+
+   */
+  listinj2prodrule :
+    prod([cf(a)], nt at cf(iter-sep(a, sep)), _) -> rtg |[ x -> <cons> (t, x2) ]|
+      where <is-empty-sym> sep
+          ; <sym2tree> cf(a) => t
+          ; <get-nonterm-of> nt => x
+          ; <get-nonterm-of> cf(iter-star-sep(a, sep)) => x2
+
+/**
+ * Alternative
+ */
+rules
+
+  /**
+   *  A -> A?
+   */
+  opt2prodrule :
+    prod([cf(A)], nt at cf(opt(A)), _) -> rtg |[ x -> <some> (t) ]|
+      where <sym2tree> A => t
+          ; <get-nonterm-of> nt => x
+
+  /**
+   *  -> A?
+   */
+  opt2prodrule :
+    prod([], cf(opt(a)), _) -> rtg |[ x -> <none> () ]|
+      where <get-nonterm-of> cf(opt(a)) => x
+
+/**
+ * Variables
+ */
+rules
+
+  var2prodrule :
+    prod(_, varsym(sym), _) -> rtg |[ x -> meta-var(<string>) ]|
+      where <sym2nonterm> sym => x
+
+strategies
+
+  get-nonterm-of =
+   ?key
+   ; is-nonterm-generator
+   ; (  <table-get> ("generated-nonterms", key)
+     <+ <table-get> ("generated-nonterms", cf(key))
+     <+ <table-get> ("generated-nonterms", <?cf(<id>)> key)
+     <+ sdf-symbol-to-string
+        ; where(<table-put> ("generated-nonterms", key, <id>))
+     )
+
+  is-seq-symbol =
+      cf(is-seq-symbol)
+    + seq(id, is-list)
+
+  is-alt-symbol = 
+      cf(is-alt-symbol)
+    + alt(id, id)
+     
+  is-list-symbol = 
+      cf(is-list-symbol)
+    + iter-star-sep(id, id)
+    + iter-sep(id, id)
+    + iter-star(id)
+    + iter(id)
+
+  is-nonterm-generator = 
+      is-list-symbol
+    + is-seq-symbol
+    + is-alt-symbol
+    + cf(is-nonterm-generator)
+    + opt(id)
+    + varsym(id)
+
+strategies
+
+  /**
+   * @type List(Symbol) -> List(AnnoTreeFN)
+   */
+  syms2trees =
+      filter(not(is-empty-sym))
+    ; map(sym2tree)
+
+  /**
+   * @type  Symbol -> Symbol
+   */
+  is-empty-sym = ?lit(_)
+  is-empty-sym = ?ci-lit(_)
+  is-empty-sym = ?layout()
+  is-empty-sym = opt(is-empty-sym)
+  is-empty-sym = cf(is-empty-sym)
+  is-empty-sym = lex(is-empty-sym)
+  is-empty-sym = label(id, is-empty-sym)
+
+/**
+ * @type  Symbol -> AnnoTreeFN
+ */  
+strategies
+
+  sym2tree :
+    sym -> rtg |[ A ]|
+      where <sym2nonterm> sym => A
+
+  sym2tree:
+    cf(sym) -> <sym2tree> sym
+      where <not(is-nonterm-generator)> cf(sym)
+
+  sym2tree:
+    lex(sym) -> rtg |[ <string> ]|
+
+  sym2tree:
+    char-class(_) -> rtg |[ <int> ]|
+
+  sym2tree:
+    label(_,sym) -> <sym2tree> sym
+
+  sym2tree:
+    sym -> rtg |[ x ]|
+      where <get-nonterm-of> sym => x
+
+rules
+
+  sym2nonterm :
+    sym -> rtg nonterm |[ x ]|
+      where <get-nonterm-of> sym => x
+
+  sym2nonterm =
+    sort2nonterm
+
+  sym2nonterm =
+    ?cf(<sort2nonterm>)
+
+  sort2nonterm :
+    sort(x) -> rtg nonterm |[ x ]|
+
+  sort2nonterm :
+    parameterized-sort(x, params) -> rtg nonterm |[ y ]|
+    where
+      Symbol2String => y
+
+strategies
+
+  /**
+   * @type  List(Attribute) -> String
+   */
+  get-cnstr-name =
+    fetch-elem(
+      ?default(term(cons(<id>)))
+
+      // FIXME SDF: used for old SDF
+      <+ ?term(cons(<id>))
+    )
+
+  /**
+   * @type  List(Attribute) ->? _
+   */
+  contains-bracket =
+    fetch(?bracket())
+
+  /**
+   * @type  List(Attribute) ->? _
+   */
+  contains-reject =
+    fetch(?reject())
+
+  /**
+   * @type  List(Attribute) ->? _
+   */
+  contains-rtg(s) =
+    fetch(term(rtg(where(s))))
+
+strategies
+
+  err(s) = log(|Error(), <s> (), <id>)
+  dbg(s) = log(|Debug(), <s> (), <id>)
+
+strategies
+
+  sdf-symbol-to-string =
+    Symbol2String
+    ; newname
+    <+ log-sym(|Warning(), "Cannot generate a nice name for symbol", <id>)
+     ;     log(|Warning(), "  Please report this bug at ")
+     ;     log(|Warning(), "    - https://bugs.cs.uu.nl/browse/STR")
+     ;     log(|Warning(), "    - or martin.bravenboer at gmail.com")
+     ; new
+     ;     log(|Warning(), "  Resolution: falling back to the ugly name ", <id>)
+
+  Symbol2String :
+    cf(sym) -> <Symbol2String> sym
+
+  Symbol2String :
+    lex(sym) -> <Symbol2String> sym
+
+  /**
+   * @todo  This could be improved by using quoted identifiers.
+   */
+  Symbol2String :
+    char-class(_) -> "CharClass"
+
+  /**
+   * @todo  This could be improved by using quoted identifiers.
+   */
+  Symbol2String :
+    lit(_) -> "Lit"
+
+  Symbol2String :
+    ci-lit(_) -> "CaseInsensitiveLit"
+
+  Symbol2String :
+    iter(sym) -> <conc-strings> ("ListPlusOf", <Symbol2String> sym)
+
+  Symbol2String :
+    iter-star(sym) -> <conc-strings> ("ListStarOf", <Symbol2String> sym)
+
+  Symbol2String :
+    iter-sep(sym, sep) -> <conc-strings> ("ListPlusOf", <Symbol2String> sym)
+
+  Symbol2String :
+    iter-star-sep(sym, sep) -> <conc-strings> ("ListStarOf", <Symbol2String> sym)
+
+  Symbol2String :
+    sort(s) -> s
+    where
+      <is-string> s
+
+  Symbol2String :
+    parameterized-sort(x, params)  -> <concat-strings> [x, "_" | param-string]
+    where
+      <is-string> x
+      ; <map(Symbol2String)> params => param-string
+
+  Symbol2String :
+    label(_,sym) -> <Symbol2String> sym
+
+  Symbol2String :
+    opt(sym) -> <conc-strings> ("Opt", <Symbol2String> sym)
+
+  Symbol2String :
+    seq(sym, syms) ->
+      < filter(not(?lit(_) + ?ci-lit(_)))
+      ; map(Symbol2String)
+      ; <separate-by> ("_", <id>)
+      ; concat-strings
+      > [sym | syms]
+
+  Symbol2String :
+    alt(sym1, sym2) -> <concat-strings> [<Symbol2String> sym1, "_", <Symbol2String> sym2]
+
+strategies
+
+  log-sym(|severity, msg, sym) =
+    log-prod(|severity, msg, sym)
+
+  /**
+   * @todo Use libgpp
+   */
+  log-prod(|severity, msg, prod) =
+    where(
+      xtc-temp-files(
+        !prod
+      ; write-to
+      ; xtc-pp-sdf2
+      ; ?FILE(<read-text-file; trim-chars('\n' + '\r' + ' ' + '\t'); string-as-chars(filter(not('\n' + '\r')))>)
+      ; ?prodtxt
+      )
+    ; log(|severity, msg)
+    ; log(|severity, <conc-strings> ("  ", prodtxt))
+    )
+
+signature
+  constructors
+    rtg    : rtginfo -> rtg
+    ignore : rtginfo
+
+
+    /**
+     * FIXME: bootstrap problem
+
+    cilit : String -> Tree
+
+    // WTF?
+    ci-lit : String -> Tree
+     */

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	2009-07-17 14:45:05 UTC (rev 19736)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	2009-07-17 14:55:44 UTC (rev 19737)
@@ -3,12 +3,14 @@
 imports
   libstratego-lib
   libstratego-xtc
+  libstratego-rtg
 
   libjava-front
   sdf-options
   
   EditorService
   
+  sdf2imp/options
   sdf2imp/project/-
   sdf2imp/services/-
   sdf2imp/util/-
@@ -25,7 +27,7 @@
 strategies
 
   main-sdf2imp =
-    xtc-input-wrap(
+    option-wrap(
       sdf2imp-options
     , 
       with(<set-verbosity> 2);
@@ -60,14 +62,23 @@
 strategies
 
   sdf2imp =
-    xtc-ensure-file;
-    if FILE(has-extension(|"esv") => esv) then
-      <find-def-file> esv
-    <+
-      fatal-err(|"Could not find associated .def file")
-    end => input;
+    if InputFile then
+      !FILE(<InputFile>);
+      if FILE(has-extension(|"esv") => esv) then
+        <find-def-file> esv
+      <+
+        fatal-err(|"Could not find associated .def file")
+      end;
+      ?input
+    else
+      if not(StartSymbol) then
+        rules(StartSymbol := "Start")
+      end;
+      create-grammar;
+      input := <pack-sdf> FILE(<conc-strings> ("syntax/", <get-main-class-name>, ".sdf"))
+    end;
   
-    read-main-descriptor;
+    configure-main-descriptor;
     <sdf2rtg> input;
   
     if NoExistingDescriptor then
@@ -84,23 +95,34 @@
 
     create-packed-descriptor-file;
     
-    create-java-implementation;
-    
-    <copy-or-create-parse-table> input
-  
-  create-java-implementation =    
-    // Create other plugin classes
     create-parse-controller;
     create-build-properties;
     create-project-file;
     create-activator;
     create-classpath;
     create-manifest;
-    create-plugin-xml
+    create-plugin-xml;
+    
+    <copy-or-create-parse-table> input
   
-  sdf2rtg =
-    verbose-msg(!"Analyzing grammar...");
-    xtc-transform(!"sdf2rtg", !["--ignore-missing-cons", "-m", <get-sdf-main-module> | <pass-verbose>]);
-    parse-xtc-file-report-errors(|<open-parse-table> <import-term(include/rtg.tbl)>, "RTG");
-    ?RTG(_, ProdRules(<id>));
-    register-rtg
+  // TODO: XTC detox -_-;;
+  sdf2rtg:
+    FILE(sdf) -> rtg
+    with
+      verbose-msg(!"Analyzing grammar...");
+      if FILE(has-extension(|"sdf")) then
+        fatal-err(|"Input file must be a .def file.")
+      end;
+      xtc-transform(!"sdf2table", !["-n", "-m", <get-sdf-main-module> | <pass-v-verbose>]);
+      xtc-transform(!"implodePT");
+      read-from;
+      sdf-desugar;
+      core-sdf-grammar2rtg => rtg;
+      ?RTG(_, ProdRules(<id>));
+      register-rtg
+
+  pack-sdf:
+    FILE(sdf) -> FILE(def)
+    with
+      def := <guarantee-extension(|"def")> sdf;
+      <xtc-command(!"pack-sdf")> ["-i", sdf, "-o", def | <pass-verbose>]

Copied: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/options.str (from rev 19736, spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/options.str)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/options.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/options.str	2009-07-17 14:55:44 UTC (rev 19737)
@@ -0,0 +1,98 @@
+module sdf2imp/util/options
+
+strategies
+
+  sdf2imp-options =
+     sdf-main-module-option // -m <mod>; sets get-sdf-main-module
+  <+ input-file-option
+  <+ extensions-option
+  <+ parse-table-option
+  <+ package-name-option
+  <+ start-symbol-option
+  <+ reset-files-option
+  <+ verbose-option
+
+  input-file-option =
+    ArgOption(
+      "-i"
+    , rules(InputFile := <id>)
+    , !"-i <grammar>.def      Set input file (optional)"
+    )
+
+  parse-table-option =
+    ArgOption(
+      "-p"
+    , rules(ParseTable := <id>)
+    , !"-p <parse table>.tbl  Set parse table (optional)"
+    )
+
+  extensions-option =
+    ArgOption(
+      "-e"
+    , rules(EditorExtensions := <id>)
+    , !"-e <extensions>       Set editor file extensions (comma separated)"
+    )
+
+  package-name-option =
+    ArgOption(
+      "-n"
+    , rules(BasePackage := <id>);
+      get-package-name(fail) // ensure legal
+    , !"-n <packagename>      Set base package name (optional)"
+    )
+    
+  start-symbol-option =
+    ArgOption(
+      "-s"
+    , parameterized-sort-to-rtg-sort;
+      if is-substring(!",") then
+        // TODO: Multiple start symbols
+        err(|"Multiple start symbols not supported yet, please specify a single start symbol");
+        fail
+      end;
+      rules(StartSymbol := <id>)
+    , !"-s <start symbol>     Set start symbol"
+    )
+
+  reset-files-option =
+    Option(
+      "-r" + "--reset"
+    , rules(ResetFiles: _)
+    , !"-r | --reset          Reset all generated files to their defaults"
+    )
+  
+  parameterized-sort-to-rtg-sort =
+    // Module[StrategoHost] -> Module_StrategoHost
+    string-replace(|"[[", "_");
+    string-replace(|"[", "_");
+    string-replace(|"]", "")
+  
+  get-package-name =
+    get-package-name(default-package-name)
+  
+  get-package-name(default) =
+    ( BasePackage
+    <+
+      default
+    );
+    string-tokenize('.');
+    map(!Id(<id>));
+    !PackageName(<id>)
+  
+  default-package-name =
+    get-sdf-main-module;
+    to-java-class-name;
+    lower-case;
+    <conc-strings> ("org.strategoxt.imp.generated.", <id>)
+  
+  check-options =
+    require-option(
+      where(<get-config> SdfMainModuleFlag)
+    | "Main module (-m)"
+    )
+  
+  require-option(rule|description) = 
+    rule
+  <+
+    fatal-err-msg(|<conc-strings> (description, " not specified"))
+    

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.str	2009-07-17 14:45:05 UTC (rev 19736)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.str	2009-07-17 14:55:44 UTC (rev 19737)
@@ -9,7 +9,7 @@
     <file-exists> "build.properties"
   <+
     <output-text-file(|[], "build.properties")>
-"source.. = src/
+"source.. = editor/java/
 output.. = bin/
 bin.includes = META-INF/,\\
                .,\\

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str	2009-07-17 14:45:05 UTC (rev 19736)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str	2009-07-17 14:55:44 UTC (rev 19737)
@@ -9,7 +9,7 @@
     <output-xml-file(|[], ".classpath")>
     %><?xml version="1.0" encoding="UTF-8"?>
 <classpath>
-	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="src" path="editor/java"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
 	<classpathentry kind="output" path="bin"/>

Copied: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-grammar.str (from rev 19736, spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/create-grammar.str)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-grammar.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-grammar.str	2009-07-17 14:55:44 UTC (rev 19737)
@@ -0,0 +1,83 @@
+module sdf2imp/project/create-grammar
+
+imports
+  sdf2imp/util/-
+
+strategies
+
+  create-grammar =
+    create-grammar-main;
+    create-grammar-common
+  
+  create-grammar-main =
+    <file-exists> <conc-strings> ("syntax/", <get-main-class-name>, ".sdf")
+  <+
+    name        := <get-main-class-name>;
+    startsymbol := <StartSymbol>;
+    
+    <output-text-file(|["syntax"], <conc-strings> (name, ".sdf"))>
+    <conc-strings>
+(
+"module ", name, "
+
+imports Common
+
+exports
+
+  context-free start-symbols
+    ", startsymbol, "
+
+  context-free syntax
+  
+    \"module\" ID Definition*       -> ", startsymbol, " {cons(\"Module\")}
+    \"entity\" ID \"{\" Property* \"}\" -> Definition {cons(\"Entity\")}
+    ID \":\" Type                   -> Property {cons(\"Property\")}
+    ID                            -> Type {cons(\"Type\")}
+"
+)
+  
+  create-grammar-common =
+    <file-exists> <conc-strings> ("syntax/Common.sdf")
+  <+
+    <output-text-file(|["syntax"], "Common.sdf")>
+(
+// TODO: FLOAT
+"module Common
+
+exports
+
+  sorts
+    ID INT STRING StringChar CommentChar
+
+  lexical syntax
+  
+    [a-zA-Z][a-zA-Z0-9\\_]* -> ID
+    \"-\"? [0-9]+            -> INT
+    \"\\\"\" ~[\\\"\\n]* \"\\\"\"     -> STRING
+    
+    \"\\\"\" StringChar* \"\\\"\" -> STRING
+    ~[\\\"\\n]               -> StringChar
+    \"\\\\\\\"\"                -> StringChar
+    
+    [\\ \\t\\n\\r] -> LAYOUT
+    
+    [\\*]                             -> CommentChar
+    \"/*\" (~[\\*] | CommentChar)* \"*/\" -> LAYOUT
+    \"//\" ~[\\n\\r]* ([\\n\\r] | EOF)     -> LAYOUT
+    
+    -> EOF
+  
+  lexical restrictions
+  
+    CommentChar -/- [\\/]
+    INT         -/- [0-9]
+    ID          -/- [a-zA-Z0-9\\_]
+    EOF         -/- ~[]
+
+  context-free restrictions
+
+    LAYOUT? -/- [\\ \\t\\n\\r]
+    LAYOUT? -/- [\\/].[\\/]
+    LAYOUT? -/- [\\/].[\\*]
+"
+)
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-manifest.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-manifest.str	2009-07-17 14:45:05 UTC (rev 19736)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-manifest.str	2009-07-17 14:55:44 UTC (rev 19737)
@@ -12,8 +12,8 @@
     package := <BasePackage <+ default-package-name>;
     
     <output-text-file(|["META-INF"], "MANIFEST.MF")>
-    
-<conc-strings> (
+    <conc-strings>
+(
 "Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: ", name, " Plug-in

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-packed-descriptor-file.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-packed-descriptor-file.str	2009-07-17 14:45:05 UTC (rev 19736)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-packed-descriptor-file.str	2009-07-17 14:55:44 UTC (rev 19737)
@@ -10,7 +10,7 @@
   create-packed-descriptor-file =
     {| InputDirPrefix:
       risky(
-        <add-input-dir-prefix> "src/";
+        <add-input-dir-prefix> "editor/";
         filename := <packed-descriptor-file-name>;

(527 diff lines omitted)


From L.C.L.Kats at tudelft.nl  Fri Jul 17 16:57:28 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Jul 2009 14:57:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19738 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib
Message-ID: <200907171455.n6HEtZY4005514@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-17 14:57:28 +0000 (Fri, 17 Jul 2009)
New Revision: 19738

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19738&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/core-sdf-grammar2rtg.meta
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/sdf-desugar.str

Log:
Missing files.

Changes:

Added: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/core-sdf-grammar2rtg.meta
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/core-sdf-grammar2rtg.meta	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/core-sdf-grammar2rtg.meta	2009-07-17 14:57:28 UTC (rev 19738)
@@ -0,0 +1 @@
+Meta([Syntax("Stratego-rtg")])
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/sdf-desugar.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/sdf-desugar.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/sdf-desugar.str	2009-07-17 14:57:28 UTC (rev 19738)
@@ -0,0 +1,42 @@
+/**
+ * sdf-desugar implements the following desugarings:
+ *
+ *   - remove double quotes in String literals: cons, lit
+ *   - replace no-attrs by attrs([])
+ *   - add quotes to generated quoted stings
+ *
+ * @author Martin Bravenboer <martin.bravenboer at gmail.com>
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+module sdf2imp/lib/sdf-desugar
+
+imports
+  libstratego-aterm
+
+strategies
+  
+  sdf-desugar =
+      topdown(repeat(SdfDesugar); try(SdfDesugarOnce))
+
+  SdfDesugar :
+    no-attrs() -> attrs([])
+
+  SdfDesugar :
+    term(default(t)) -> term(t)
+
+rules
+
+  SdfDesugarOnce =
+    alltd(EnsureQuotes);
+    term(implode-aterm)
+
+  SdfDesugarOnce :
+    lit(s) -> lit(<un-double-quote> s)
+
+  SdfDesugarOnce :
+    ci-lit(s) -> ci-lit(<un-single-quote> s)
+  
+  EnsureQuotes :
+    quoted(s) -> quoted(<double-quote> s)
+    where
+      not(<un-double-quote> s)



From L.C.L.Kats at tudelft.nl  Fri Jul 17 17:20:50 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Jul 2009 15:20:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19739 - LennartKats -
	in strategoxt/trunk: . stratego-front/pp stratego-front/syn
	stratego-libraries/lib/spec
	stratego-libraries/sglr/lib/stratego/sglr
	stratego-libraries/tool-doc/lib strc-core/lib
	strc-core/lib/stratego/strc/c strc-core/lib/stratego/strc/front
	strc-core/lib/stratego/strc/lib strc-core/lib/stratego/strc/model
	strc-core/lib/stratego/strc/opt strc-core/lib/stratego/strc/pp
	strc-core/lib/stratego/strc/strc strc-core/spec/front
	strc-core/tools
Message-ID: <200907171518.n6HFIvAa006036@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-17 15:20:48 +0000 (Fri, 17 Jul 2009)
New Revision: 19739

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19739&view=rev

Modified:
   strategoxt/trunk/
   strategoxt/trunk/stratego-front/pp/Stratego-Core-pretty.pp
   strategoxt/trunk/stratego-front/pp/Stratego-Sugar-pretty.pp
   strategoxt/trunk/stratego-front/pp/Stratego-pretty.pp
   strategoxt/trunk/stratego-front/syn/Stratego-Core-Strategies.sdf
   strategoxt/trunk/stratego-front/syn/Stratego-Sugar-Rules.sdf
   strategoxt/trunk/stratego-front/syn/Stratego-Sugar-Strategies.sdf
   strategoxt/trunk/stratego-libraries/lib/spec/Makefile.am
   strategoxt/trunk/stratego-libraries/sglr/lib/stratego/sglr/parse-table.str
   strategoxt/trunk/stratego-libraries/tool-doc/lib/Makefile.am
   strategoxt/trunk/strc-core/lib/Makefile.am
   strategoxt/trunk/strc-core/lib/stratego/strc/c/s2c-ng.str
   strategoxt/trunk/strc-core/lib/stratego/strc/c/s2c.str
   strategoxt/trunk/strc-core/lib/stratego/strc/front/call-graph.str
   strategoxt/trunk/strc-core/lib/stratego/strc/front/check-constructors.str
   strategoxt/trunk/strc-core/lib/stratego/strc/front/desugar.str
   strategoxt/trunk/strc-core/lib/stratego/strc/front/error-reporting.str
   strategoxt/trunk/strc-core/lib/stratego/strc/front/frontend.str
   strategoxt/trunk/strc-core/lib/stratego/strc/front/introduce-congdefs.str
   strategoxt/trunk/strc-core/lib/stratego/strc/front/lift-dynamic-rules.str
   strategoxt/trunk/strc-core/lib/stratego/strc/front/needed-defs.str
   strategoxt/trunk/strc-core/lib/stratego/strc/front/rename-defs.str
   strategoxt/trunk/strc-core/lib/stratego/strc/front/report-ambs.str
   strategoxt/trunk/strc-core/lib/stratego/strc/front/rules-to-sdefs.str
   strategoxt/trunk/strc-core/lib/stratego/strc/front/stratego-warnings.str
   strategoxt/trunk/strc-core/lib/stratego/strc/lib/stratlib.str
   strategoxt/trunk/strc-core/lib/stratego/strc/model/model.str
   strategoxt/trunk/strc-core/lib/stratego/strc/opt/dead-def-elim.str
   strategoxt/trunk/strc-core/lib/stratego/strc/opt/defs-to-external-defs.str
   strategoxt/trunk/strc-core/lib/stratego/strc/opt/inlining.str
   strategoxt/trunk/strc-core/lib/stratego/strc/opt/lift-definitions.str
   strategoxt/trunk/strc-core/lib/stratego/strc/opt/opt-lib.str
   strategoxt/trunk/strc-core/lib/stratego/strc/opt/optimizer.str
   strategoxt/trunk/strc-core/lib/stratego/strc/pp/pp-stratego.str
   strategoxt/trunk/strc-core/lib/stratego/strc/pp/stratego2abox.str
   strategoxt/trunk/strc-core/lib/stratego/strc/strc/strc.str
   strategoxt/trunk/strc-core/spec/front/needed-defs.str
   strategoxt/trunk/strc-core/tools/pp-stratego.str

Log:
Merged the strategoxt-annos branch into the trunk (r19226-19701).

This branch adds new (reserved!) 'override', 'internal', and 'extend'
keywords, which can be used as modifiers for strategies.

- The 'internal' modifier marks a strategy as internal
  to that particular library; it is not exported
  to external applications.

- The 'override' modifier redefines an existing strategy
  in another library.

- The 'extend' modifier extends an existing strategy
  definition in another library, but is not yet supported
  with the C backend.

Other new reserved words are 'sealed', 'extensible', and
'overridable', which may be used in future versions.


Changes (first 1000 lines of the diffs):


Property changes on: strategoxt/trunk
___________________________________________________________________
Modified: svn:mergeinfo
   - /strategoxt/branches/strategoxt-annos:19295,19301,19327
/strategoxt/branches/strategoxt-with:18038-18120
   + /strategoxt/branches/strategoxt-annos:19217-19721
/strategoxt/branches/strategoxt-with:18038-18120

Modified: strategoxt/trunk/stratego-front/pp/Stratego-Core-pretty.pp
===================================================================
--- strategoxt/trunk/stratego-front/pp/Stratego-Core-pretty.pp	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/stratego-front/pp/Stratego-Core-pretty.pp	2009-07-17 15:20:48 UTC (rev 19739)
@@ -14,6 +14,10 @@
    SDefT                     -- _1 KW["("] _2 KW["|"] _3 KW[")"] KW["="] _4,
    SDefT.2:iter-star-sep     -- _1 KW[","],
    SDefT.3:iter-star-sep     -- _1 KW[","],
+   Override                  -- KW["override"],
+   Extend                    -- KW["extend"],
+   Internal                  -- KW["internal"],
+   AnnoDef                   -- H [ _1 _2 ], 
    VarDec                    -- _1 KW[":"] _2,
    SVar                      -- _1,
    CallT                     -- _1 KW["("] _2 KW["|"] _3 KW[")"],

Modified: strategoxt/trunk/stratego-front/pp/Stratego-Sugar-pretty.pp
===================================================================
--- strategoxt/trunk/stratego-front/pp/Stratego-Sugar-pretty.pp	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/stratego-front/pp/Stratego-Sugar-pretty.pp	2009-07-17 15:20:48 UTC (rev 19739)
@@ -151,7 +151,10 @@
    SRDefT.2:iter-star-sep                             -- _1 KW[","],
    SRDefT.3:iter-star-sep                             -- _1 KW[","],
    RuleNoCond                                         -- H hs=1 [_1 KW["->"] _2],
-   Rule                                               -- V  [H hs=1 [_1 KW["->"] _2] H  [KW["where"] _3]],
+   Rule                                               -- V  [H hs=1 [_1 KW["->"] _2] _3],
+   WhereClause                                        -- H [ KW["where"] _1 ],
+   WithClause                                         -- H [ KW["with"] _1 ],
+   Rule.3:iter                                        -- _1,
    StratRuleNoCond                                    -- _1 KW["-->"] _2,
    StratRule                                          -- _1 KW["-->"] _2 KW["where"] _3,
    Fail                                               -- KW["fail"],
@@ -249,6 +252,10 @@
    SDefT                                              -- V is=2 [H  [H hs=0 [_1 KW["("] H  [_2]] KW["|"] H hs=0 [H  [_3] KW[")"]] KW["="]] _4],
    SDefT.2:iter-star-sep                              -- H hs=0 [_1 KW[","]],
    SDefT.3:iter-star-sep                              -- H hs=0 [_1 KW[","]],
+   Override                                           -- KW["override"],
+   Extend                                             -- KW["extend"],
+   Internal                                           -- KW["internal"],
+   AnnoDef                                            -- H [ _1 _2 ], 
    ExtSDefInl                                         -- V is=2 [H  [KW["external"] H hs=0 [_1 KW["("] H  [_2]] KW["|"] H hs=0 [H  [_3] KW[")"]] KW["="]] _4],
    ExtSDefInl.2:iter-star-sep                         -- _1 KW[","],
    ExtSDefInl.3:iter-star-sep                         -- _1 KW[","],

Modified: strategoxt/trunk/stratego-front/pp/Stratego-pretty.pp
===================================================================
--- strategoxt/trunk/stratego-front/pp/Stratego-pretty.pp	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/stratego-front/pp/Stratego-pretty.pp	2009-07-17 15:20:48 UTC (rev 19739)
@@ -197,6 +197,7 @@
    Rec                                                -- H  [KW["rec"] _1 KW["("] _2 KW[")"]],
    Not                                                -- H hs=0 [KW["not"] KW["("] _1 KW[")"]],
    Where                                              -- H hs=0 [KW["where"] KW["("] _1 KW[")"]],
+   With                                               -- H hs=0 [KW["with"] KW["("] _1 KW[")"]],
    Test                                               -- H hs=0 [KW["test"] KW["("] _1 KW[")"]],
    Bagof                                              -- H hs=0 [KW["bagof"] KW["("] _1 KW[")"]],
    PrimNoArgs                                         -- H hs=0 [KW["prim"] KW["("] _1 KW[")"]],
@@ -239,6 +240,10 @@
    SDefT                                              -- V is=2 [H  [H hs=0 [_1 KW["("] H  [_2]] KW["|"] H hs=0 [H  [_3] KW[")"]] KW["="]] _4],
    SDefT.2:iter-star-sep                              -- H hs=0 [_1 KW[","]],
    SDefT.3:iter-star-sep                              -- H hs=0 [_1 KW[","]],
+   Override                                           -- KW["override"],
+   Extend                                             -- KW["extend"],
+   Internal                                           -- KW["internal"],
+   AnnoDef                                            -- H [ _1 _2 ], 
    ExtSDefInl                                         -- V is=2 [H  [KW["external"] H hs=0 [_1 KW["("] H  [_2]] KW["|"] H hs=0 [H  [_3] KW[")"]] KW["="]] _4],
    ExtSDefInl.2:iter-star-sep                         -- _1 KW[","],
    ExtSDefInl.3:iter-star-sep                         -- _1 KW[","],

Modified: strategoxt/trunk/stratego-front/syn/Stratego-Core-Strategies.sdf
===================================================================
--- strategoxt/trunk/stratego-front/syn/Stratego-Core-Strategies.sdf	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/stratego-front/syn/Stratego-Core-Strategies.sdf	2009-07-17 15:20:48 UTC (rev 19739)
@@ -20,6 +20,8 @@
     Id "(" {Typedid ","}* 
        "|" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("SDefT")}
 
+    Anno+ StrategyDef -> Def {cons("AnnoDef")}
+
     "external"
     Id "(" {Typedid ","}* 
        "|" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("ExtSDefInl")}
@@ -29,6 +31,33 @@
        "|" {Typedid ","}* ")"		   -> StrategyDef {cons("ExtSDef")}
 
 
+  sorts Anno
+  context-free syntax
+    "extend"      -> Anno {cons("Extend")}
+    "override"    -> Anno {cons("Override")}
+    "internal"    -> Anno {cons("Internal")}
+%%  "sealed"      -> Anno {cons("Sealed")}
+%%  "extensible"  -> Anno {cons("Extensible")}
+%%  "overridable" -> Anno {cons("Overridable")}
+
+  lexical syntax
+    
+    "extend"      -> Keyword
+    "override"    -> Keyword
+    "internal"    -> Keyword
+    "sealed"      -> Keyword
+    "extensible"  -> Keyword
+    "overridable" -> Keyword
+
+  lexical restrictions
+  
+    "extend"
+    "override"
+    "internal"
+    "sealed"
+    "extensible"
+    "overridable" -/- [a-zA-Z0-9\'\-\_]
+
   sorts Typedid
   context-free syntax
     ID ":" Type 			  -> Typedid {cons("VarDec")}
@@ -40,6 +69,7 @@
 
     "fail" 				  -> Strategy {cons("Fail")}
     "id" 				  -> Strategy {cons("Id")}
+    "override" 			  -> Strategy {cons("Override")}
 
     %% Match and build
 

Modified: strategoxt/trunk/stratego-front/syn/Stratego-Sugar-Rules.sdf
===================================================================
--- strategoxt/trunk/stratego-front/syn/Stratego-Sugar-Rules.sdf	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/stratego-front/syn/Stratego-Sugar-Rules.sdf	2009-07-17 15:20:48 UTC (rev 19739)
@@ -5,6 +5,8 @@
   sorts RuleDef
   context-free syntax
     Id ":" Rule 				-> RuleDef {cons("RDefNoArgs")}
+    
+    Anno+ RuleDef               -> Def {cons("AnnoDef")}
 
     Id "(" {Typedid ","}* ")" ":" Rule 		-> RuleDef {cons("RDef")}
 

Modified: strategoxt/trunk/stratego-front/syn/Stratego-Sugar-Strategies.sdf
===================================================================
--- strategoxt/trunk/stratego-front/syn/Stratego-Sugar-Strategies.sdf	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/stratego-front/syn/Stratego-Sugar-Strategies.sdf	2009-07-17 15:20:48 UTC (rev 19739)
@@ -58,6 +58,7 @@
     %%"(" {Strategy ","}* ")" 		  -> Strategy {cons("TupleCong"),avoid}
 
     Strategy StrategyCurly		  -> Strategy {cons("AnnoCong")}
+    
     "{" Strategy "}"		  	  -> StrategyCurly {cons("StrategyCurly")}
 
     "("  ")" 		  		  -> Strategy {cons("EmptyTupleCong")}

Modified: strategoxt/trunk/stratego-libraries/lib/spec/Makefile.am
===================================================================
--- strategoxt/trunk/stratego-libraries/lib/spec/Makefile.am	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/stratego-libraries/lib/spec/Makefile.am	2009-07-17 15:20:48 UTC (rev 19739)
@@ -73,7 +73,7 @@
 	rm libstratego-lib-posix-xsi.str
 
 libstratego-lib.ctree: $(fullstrategolib:.str=.rtree)
-	$(STRC_UNINSTALLED) $(STRCFLAGS) -O 1 -F -c --library -i stratego-lib-posix-xsi.rtree -o libstratego-lib.ctree
+	$(STRC_UNINSTALLED) $(STRCFLAGS) -O 2 -F -c --library -i stratego-lib-posix-xsi.rtree -o libstratego-lib.ctree
 
 fullstrategolib = \
   libstrategolib.str \

Modified: strategoxt/trunk/stratego-libraries/sglr/lib/stratego/sglr/parse-table.str
===================================================================
--- strategoxt/trunk/stratego-libraries/sglr/lib/stratego/sglr/parse-table.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/stratego-libraries/sglr/lib/stratego/sglr/parse-table.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -16,8 +16,8 @@
    */
   open-parse-table =
     ?tbl
-    ; prim("STRSGLR_open_parse_table", tbl) => internal
-    ; !ParseTable(internal)
+    ; prim("STRSGLR_open_parse_table", tbl) => table
+    ; !ParseTable(table)
 
   /**
    * Close an open parse table.
@@ -26,8 +26,8 @@
    * @type ParseTable -> ()
    */
   close-parse-table =
-    ?ParseTable(internal)
-    ; prim("STRSGLR_close_parse_table", internal)
+    ?ParseTable(table)
+    ; prim("STRSGLR_close_parse_table", table)
     ; !()
 
   /**

Modified: strategoxt/trunk/stratego-libraries/tool-doc/lib/Makefile.am
===================================================================
--- strategoxt/trunk/stratego-libraries/tool-doc/lib/Makefile.am	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/stratego-libraries/tool-doc/lib/Makefile.am	2009-07-17 15:20:48 UTC (rev 19739)
@@ -7,7 +7,7 @@
 	$(SGLRI) --heuristic-filters on -p $(STRATEGOBOXTBL_UNINSTALLED) -i $< | $(METAEXPLODE) -o $@
 
 
-nobase_data_DATA = libstratego-tool-doc.rtree
+nobase_data_DATA = libstratego-tool-doc.rtree libstratego-tool-doc.ctree
 lib_LTLIBRARIES  = libstratego-tool-doc.la
 EXTRA_DIST = $(tooldoclib) $(tooldoclib:.str=.rtree) libstratego-tool-doc.rtree
 CLEANFILES = $(wildcard *.dep) 
@@ -36,3 +36,6 @@
 libstratego-tool-doc.rtree libstratego-tool-doc.c : $(tooldoclib:.str=.rtree) 
 	$(STRC_UNINSTALLED) $(STRINCLUDES) -c --library -i $(srcdir)/stratego-tool-doc.str -o libstratego-tool-doc.rtree --verbose 1 $(STRCFLAGS)
 	rm libstratego-tool-doc.str
+
+libstratego-tool-doc.ctree : $(tooldoclib:.str=.rtree) 
+	$(STRC_UNINSTALLED) $(STRINCLUDES) -F --library -i $(srcdir)/stratego-tool-doc.str -o libstratego-tool-doc.ctree --verbose 1 $(STRCFLAGS)

Modified: strategoxt/trunk/strc-core/lib/Makefile.am
===================================================================
--- strategoxt/trunk/strc-core/lib/Makefile.am	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/Makefile.am	2009-07-17 15:20:48 UTC (rev 19739)
@@ -63,7 +63,7 @@
 
 # stratego/strc/parse/Stratego.tbl
 libstrc.ctree : $(strclib:.str=.rtree) 
-	$(STRC)/bin/strc -F -c --library -i $(srcdir)/strc.str -o libstrc.ctree -O 2 --verbose 1 $(STRCFLAGS) $(STRINCLUDES)
+	$(STRC)/bin/strc -F -c --library -i $(srcdir)/strc.str -o libstrc.ctree -O 1 --verbose 1 $(STRCFLAGS) $(STRINCLUDES)
 
 # stratego/strc/parse/Stratego.tbl : ../../stratego-front/syn/Stratego.tbl
 # 	mkdir -p $(top_builddir)/lib/stratego/strc/parse

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/c/s2c-ng.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/c/s2c-ng.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/c/s2c-ng.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -251,6 +251,7 @@
 
   Translate = //debug(!"Translate: "); 
     SDefIgnore
+    <+ SDefFail
     <+ is-closure-alloc
     <+ fragment(SDefToDeclaration|"FunctionSig")
        ; fragment(SDefToRegistration|"FunctionReg")
@@ -262,12 +263,23 @@
   SDefIgnore =
     ?Def|[ f(a1* | a2*) = s ]|
     ; where( !f => "DYNAMIC__CALLS_0_0" )
+  
+  SDefFail =
+    ?AnnoDef(a*, SDefT(s, _, _, _))
+    ; not(<[Override + Internal]> a*)
+    ; !(a*, s)
+    ; fatal-err(|"strategy modifier is not implemented for this platform")
 
   SDefToDeclaration :
     Def|[ f(a1* | a2*) = s ]| ->
     dec|[ ATerm ~id:f (StrSL sl, ~param-dec*:ps, ATerm t); ]|
     where <not(is-local-function)> f
         ; ps := <map(TranslateVarDec)> [a1*,a2*]
+    
+  SDefToDeclaration :
+    AnnoDef(Internal(), Def|[ f(a1* | a2*) = s ]|) ->
+    dec|[ static ATerm ~id:f (StrSL sl, ~param-dec*:ps, ATerm t); ]|
+    where ps := <map(TranslateVarDec)> [a1*,a2*]
 
   SDefToDeclaration :
     Def|[ f(a1* | a2*) = s ]| ->
@@ -327,7 +339,11 @@
   // TODO: insert escaping strategy arguments in frame
 
   TranslateDef :
-    Def|[ f~{t*}(a1*|a2*) = s ]| -> <try(make-static)> 
+    AnnoDef(Internal(), def) -> def'
+    with def' := <make-internal-static> <TranslateDef> def
+
+  TranslateDef :
+    Def|[ f~{t*}(a1*|a2*) = s ]| -> <try(make-local-static)> 
     |[ 
        ATerm ~id:f{}(StrSL sl, ~param-dec*:args, ATerm t)
        {
@@ -371,16 +387,16 @@
     [Offsets(i,j)|_] -> [ stm|[ sl_vars(~exp:<mk-int-const>j); ]| ]
     where <not(0)> j
 
-
-
-  make-static :
+  make-local-static :
     |[ ATerm ~id:f(~param-dec*:args) { ~stm*:stms } ]| -> 
-    //<debug(!"static: ")> 
     |[ static ATerm ~id:f(~param-dec*:args) { ~stm*:stms } ]|
-    where //debug(!"make-static: ");
+    where
 	  <is-local-function> f
-	//; debug(!"is local fun")
 
+  make-internal-static :
+    |[ ATerm ~id:f(~param-dec*:args) { ~stm*:stms } ]| -> 
+    |[ static ATerm ~id:f(~param-dec*:args) { ~stm*:stms } ]|
+
   is-local-function =
     explode-string
     ; ([is-alpha, '_' | list(is-num)]

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/c/s2c.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/c/s2c.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/c/s2c.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -391,6 +391,9 @@
 
   TranslateStrat(|S,F) :
     Fail() -> stm|[ goto ~id:F; ]|
+  
+  TranslateStrat(|S,F) :
+    Override() -> <fatal-err(|"override call not supported on this platform")>
 
   TranslateStrat(|S,F) :
     Scope(xs, s) -> 

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/front/call-graph.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/front/call-graph.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/front/call-graph.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -62,8 +62,12 @@
      : where(id
          ; <mark-used-defs-and-constructors> ("main_0_0", 0, 0)
          ; <mark-used-defs-and-constructors> ("DYNAMIC_CALLS_0_0", 0, 0)
+         ; <map(mark-used-defs-and-constructors)> <bagof-AlwaysNeeded>
          ; m-get-all-def-sigs
-         ; map(DefIsNeeded <+ m-rm-def)
+         ; map(
+              DefIsNeeded
+           <+ m-rm-def
+           )
 	 ; m-get-all-constructors-sigs
 	 ; map(ConstructorSigNeeded <+ m-rm-constructor)
        )

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/front/check-constructors.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/front/check-constructors.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/front/check-constructors.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -112,6 +112,9 @@
 */
 
   check-constructors =
+    AnnoDef(id, check-constructors)
+
+  check-constructors =
     ?RDefT(f, xs, ys, <id>)
     ; check-constructors'(|(f, <length> xs, <length> ys), "rule")
 

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/front/desugar.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/front/desugar.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/front/desugar.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -32,6 +32,7 @@
     + SDefT(id, id, id, desugar)
     + ExtSDef(id, id, id)
     + ExtSDefInl(id, id, id, id)
+    + AnnoDef(id, desugar-def)
     <+ debug(!"not a definition: "); fail
 
 strategies // Desugaring Strategies

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/front/error-reporting.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/front/error-reporting.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/front/error-reporting.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -11,11 +11,7 @@
    * @type Stratego AST -> String
    */
   pp-stratego-fragment =
-    xtc-temp-files(
-      write-to
-    ; xtc-transform(!"pp-stratego", !["--abstract" | <pass-verbose>])
-    ; ?FILE(<read-text-file>)
-    )
+    pp-stratego-string
     
   /**
    * @param Name of strategy (String)

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/front/frontend.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/front/frontend.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/front/frontend.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -101,7 +101,7 @@
       ; m-transform-external-defs(id
           ; if ?[_,_|_] then
               warn(|"multiple external definitions with same signature")
-	      ; [id | ![]]
+	        ; [rules(SameSigExtDef :+= <id>) | ![]]
             end
           ; [RenameSDef
              ; desugar-DefaultVarDec

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/front/introduce-congdefs.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/front/introduce-congdefs.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/front/introduce-congdefs.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -39,10 +39,11 @@
       Overlays(ols),
       Strategies([<AnnoCongDef> | sdefs])
     ])
-    where <not(fetch(  ?SDefT("Anno_Cong__",_,_,_)
+    where <not(fetch(try(?AnnoDef(_, <id>); 
+             ( ?SDefT("Anno_Cong__",_,_,_)
 		     + ?RDefT("Anno_Cong__",_,_,_)
 		     + ?ExtSDef("Anno_Cong__",_,_)
-		     + ?ExtSDefInl("Anno_Cong__",_,_,_)))> sdefs
+		     + ?ExtSDefInl("Anno_Cong__",_,_,_)))))> sdefs
 
 strategies
 
@@ -50,6 +51,9 @@
   // defined operators
 
   RegisterCongDef =
+    AnnoDef(id, RegisterCongDef)
+
+  RegisterCongDef =
     ?ExtSDef(f, xs, []) 
     ; where(<length> xs => n)
     ; rules(CongDefined : (f, n) -> ())

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/front/lift-dynamic-rules.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/front/lift-dynamic-rules.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/front/lift-dynamic-rules.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -119,9 +119,10 @@
 
   def-tvars =
     <union> (<tvars>,
-             <?SDefT(_,_,<map(?DefaultVarDec(<id>) + ?VarDec(<id>,_))>,_)
+             < try(?AnnoDef(_, <id>));
+              (?SDefT(_,_,<map(?DefaultVarDec(<id>) + ?VarDec(<id>,_))>,_)
               <+ ?RDefT(_,_,<map(?DefaultVarDec(<id>) + ?VarDec(<id>,_))>,_)
-              <+ ![]
+              <+ ![])
              >
             )
 
@@ -1011,6 +1012,9 @@
 strategies
 
   def-name :
+    AnnoDef(_, def) -> <def-name> def
+
+  def-name :
     |[ rules( f(a1*|a2*) : t1 -> t2 where s ) ]| -> (f, (<length> a1*, <length> a2*))
 
   def-name :

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/front/needed-defs.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/front/needed-defs.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/front/needed-defs.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -80,15 +80,29 @@
 strategies
 
   check-ext-overload =
-    let helper =
-          DefinitionName
-          ; if ExtDefinition then
-              sdef-key-to-string
-              ; debug(!"error: redefining external definition: ")
-              ; <exit> 1
-            end
-     in map(where(is-new-def < helper + id))
-    end
+    list-loop(
+      if is-new-def then
+        check-ext-overload-def
+      end
+    )
+  
+  check-ext-overload-def =
+    ?def{a*}
+    ; DefinitionName
+    ; if ExtDefinition then
+        if !a* => [] then
+          sdef-key-to-string
+          ; !def; write-to-string
+          ; debug(!"error: redefining external definition: ")
+          ; <exit> 1
+        end
+      else
+        if !a* => [_ | _] then
+          sdef-key-to-string
+          ; debug(!"error: no external definition found: ")
+          ; <exit> 1
+        end
+      end
 
 strategies
 
@@ -133,7 +147,21 @@
    */
 
   joindefs = 
-    JoinDefs1 <+ JoinDefs2 <+ JoinDefsExt
+    joinannodefs(JoinDefs1 <+ JoinDefs2)
+  <+
+    JoinDefsExt
+  
+  joinannodefs(s) =
+    if filter(?AnnoDef(<id>, _)); concat; not([]); make-set => annos then
+      filter(
+        not(?ExtSDef(_,_,_) + ?ExtSDefInl(_,_,_,_))
+      ; ?AnnoDef(_, <id>)
+      )
+    ; s
+    ; !AnnoDef(annos, <id>)
+    else
+      s
+    end
 
 rules
 

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/front/rename-defs.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/front/rename-defs.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/front/rename-defs.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -22,6 +22,9 @@
 
 rules
 
+  RenameSDef :
+    AnnoDef(a*, def) -> AnnoDef(a*, <RenameSDef> def)
+
   RenameSDef : 
     SDefT(x, args1, args2, s) -> SDefT(y, args1, args2, s)
     where <length> args1 => n

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/front/report-ambs.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/front/report-ambs.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/front/report-ambs.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -16,7 +16,7 @@
     <+ all(report-ambs)
 
   report-amb-definition(s) =
-    (?SDef(name,_,_) <+ ?SDefNoArgs(name,_) <+ ?SDefT(name,_,_,_))
+    (ignore-anno-def(?SDef(name,_,_) <+ ?SDefNoArgs(name,_) <+ ?SDefT(name,_,_,_)))
     ; {| current-definition
        : rules( current-definition : _ -> ("strategy", name) )
        ; all(s)
@@ -32,11 +32,6 @@
   report-amb =
     ?amb(_) 
     ; where( current-definition => (type, name) )
-    ; xtc-temp-files( 
-        write-to
-        ; xtc-transform(!"pp-stratego",!["--abstract"])
-        ; FILE(read-text-file => pp)
-      )
     ; log(|Error(),["Ambiguity found in ",type, " ",name])
-    ; say(!pp) 
+    ; say(pp-stratego-string) 
  

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/front/rules-to-sdefs.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/front/rules-to-sdefs.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/front/rules-to-sdefs.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -8,11 +8,13 @@
 strategies
 
   rules-to-sdefs =
-    alltd(Strategies(map(try(RDtoSD + DeclareVariables); replace-call-and-rdef)))
+    alltd(Strategies(map(try(ignore-anno-def(RDtoSD + DeclareVariables)); replace-call-and-rdef)))
 
   rules-to-sdefs-def =
-    try(RDtoSD <+ DeclareVariables)
-    ; replace-call-and-rdef
+    ignore-anno-def(
+      try(RDtoSD <+ DeclareVariables)
+      ; replace-call-and-rdef
+    )
 
 rules
 
@@ -28,7 +30,7 @@
     SDef(f, xs, s) -> SDefT(f, xs, [], Scope(<tvars> s, s))
 
   DeclareVariables :
-    SDefT(f, xs, ys, s) -> SDefT(f, xs, ys, Scope(<diff>(vs, ys'), s))
+    SDefT(f, xs, ys, s){a*} -> SDefT(f, xs, ys, Scope(<diff>(vs, ys'), s)){a*}
     where <declared-vars> ys => ys'
         ; <tvars> s => vs
 

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/front/stratego-warnings.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/front/stratego-warnings.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/front/stratego-warnings.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -216,7 +216,7 @@
    * Return a list of strategy names which invoke strategy "To"
    */
   caller(To) = 
-    ?SDefT(name, _, _,def)
+    ignore-anno-def(?SDefT(name, _, _,def))
     ; To => to
     ; !def
     ; collect( CallT(SVar(?to), id, id);!to )
@@ -228,7 +228,7 @@
    * "prop" holds 
    */
   sdef-with-property(prop) =
-    ?SDefT(name, _, _, <id>)
+    ignore-anno-def(?SDefT(name, _, _, <id>))
     ; collect(prop)
     ; not([])
     ; map( \ match -> (name, match) \ )

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/lib/stratlib.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/lib/stratlib.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/lib/stratlib.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -18,6 +18,11 @@
   lchoices = 
     foldr(!Fail(), \ (s1, s2) -> LChoice(s1, s2) \ )
 
+strategies
+
+  ignore-anno-def(s) =
+    ?AnnoDef(_, _) < AnnoDef(id, s) + s
+
 rules
 
   Add1 : Var(x)  -> [x]
@@ -46,7 +51,7 @@
 
   Bind0 : Scope(xs, s) -> xs
   Bind0 : LRule(Rule(t1, t2, s)) -> <tvars> t1
-  Bind1 : Let(defs, s2) -> <map(?SDef(<id>,_,_) + ?SDefT(<id>,_,_,_) + ?RDef(<id>,_,_) + ?RDefT(<id>,_,_,_))> defs
+  Bind1 : Let(defs, s2) -> <map(ignore-anno-def(?SDef(<id>,_,_) + ?SDefT(<id>,_,_,_) + ?RDef(<id>,_,_) + ?RDefT(<id>,_,_,_)))> defs
   Bind2 : SDef(f, xs, s) -> <declared-vars> xs
   Bind3 : Rec(x, s) -> [x]
 

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/model/model.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/model/model.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/model/model.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -62,8 +62,14 @@
       else
         rules( IsLocal : sig )
       end
+    ; if AnnoDef(one(Override + Extend), id) then
+        rules( AlwaysNeeded :+= sig )
+      end
     ; rules( ModDefinition :+ sig -> def )
 
+  mark-always-needed(|name,sarity,tarity) =
+    rules( AlwaysNeeded :+= (name,sarity,tarity) )
+
   /**
    * Remove all definitions for a given signature.
    *
@@ -121,7 +127,8 @@
     ; (  \ SDefT(f, xs, ys, s)      -> (f, <length>xs, <length>ys) \
       <+ \ ExtSDef(f, xs, ys)       -> (f, <length>xs, <length>ys) \
       <+ \ ExtSDefInl(f, xs, ys, s) -> (f, <length>xs, <length>ys) \
-      <+ \ RDefT(f, xs, ys, s)      -> (f, <length>xs, <length>ys) \ )
+      <+ \ RDefT(f, xs, ys, s)      -> (f, <length>xs, <length>ys) \
+      <+ \ AnnoDef(a*, def)         -> <m-def-signature> def\)
 
   is-external =
     ?ExtSDef(_, _, _)

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/opt/dead-def-elim.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/opt/dead-def-elim.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/opt/dead-def-elim.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -27,16 +27,22 @@
     ; where(
         <mark-needed-defs> "main_0_0"
       ; try(<mark-needed-defs> "DYNAMIC_CALLS_0_0")
+      ; bagof-AlwaysNeeded
+      ; list-loop(\(x, s, t) -> <mark-needed-defs> x\)
       )
     ; filter(
-        SDefT(DefNeeded,id,id,id) 
+        AnnoDef(one(Override + Extend), id)
+      <+
+        ignore-anno-def(
+           SDefT(DefNeeded,id,id,id) 
         <+ ExtSDefInl(DefNeeded,id,id,id)
         <+ ExtSDef(DefNeeded,id,id)
+        )
       )
 
   RegisterDefinition =
     ?sdef
-    ; where( (?SDefT(<id>,_,_,_) <+ ?ExtSDefInl(<id>,_,_,_) <+ ?ExtSDef(<id>,_,_)) => f )
+    ; where( ignore-anno-def(?SDefT(f,_,_,_) <+ ?ExtSDefInl(f,_,_,_) <+ ?ExtSDef(f,_,_)) )
     ; rules( NameToDefinition : f -> sdef )
   
   mark-needed-defs = 

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/opt/defs-to-external-defs.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/opt/defs-to-external-defs.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/opt/defs-to-external-defs.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -19,7 +19,7 @@
 
   filter-exported-strategies =
     filter(
-      (DefToExtDefInl <+ DefToExtDef /* + ExtSDef(unmangle,id,id) */ )
+      ignore-anno-def(DefToExtDefInl <+ DefToExtDef /* + ExtSDef(unmangle,id,id) */ )
       ; is-exported-definition
     )    
 

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/opt/inlining.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/opt/inlining.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/opt/inlining.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -40,8 +40,13 @@
     Specification([id,Strategies(inline-sdefs)])
 
   inline-sdefs = 
-    map(simplify0; try(inlineable; AddSDef))
-    ; map(SDefT("DYNAMIC_CALLS_0_0",id,id,id) <+ inline-sdef; try(inlineable; AddSDef))
+    try(olevel3(?o3)) // global definition inlining is only done with -O 3
+    ; map(
+        AnnoDef([Internal], simplify0; try(inlineable; AddSDef))
+      <+
+        ignore-anno-def(simplify0; try(where(!o3); inlineable; AddSDef))
+      )
+    ; map(ignore-anno-def(SDefT("DYNAMIC_CALLS_0_0",id,id,id) <+ inline-sdef; try(inlineable; AddSDef)))
 
   inline-sdef =
     DeclareInline(inline-sdef) 

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/opt/lift-definitions.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/opt/lift-definitions.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/opt/lift-definitions.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -4,7 +4,7 @@
 
   lift-definitions =
     declare-standard-strategies
-    ; Specification([id, Strategies(map(DeclareTopLevel); map(lift-sdefs <+ ![<id>]); concat)])
+    ; Specification([id, Strategies(map(ignore-anno-def(DeclareTopLevel)); map(lift-sdefs <+ ![<id>]); concat)])
 
   declare-standard-strategies =
     where(
@@ -25,6 +25,10 @@
     ; rules(TopLevel : f -> ())
 
   lift-sdefs :
+    AnnoDef(a*, SDefT(f, xs, ys, s)) -> <conc>(defs, [AnnoDef(a*, SDefT(f, xs, ys, s'))])
+    where <collect-split(LiftFromLet)> s => (s', defs)
+  
+  lift-sdefs :
     SDefT(f, xs, ys, s) -> <conc>(defs, [SDefT(f, xs, ys, s')])
     where <collect-split(LiftFromLet)> s => (s', defs)
 

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/opt/opt-lib.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/opt/opt-lib.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/opt/opt-lib.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -3,7 +3,7 @@
 strategies
 
   apply-to-bodies(s) = 
-    Specification([id, id, Strategies(map(try(SDefT(id,id,id,s))))])
+    Specification([id, id, Strategies(map(try(ignore-anno-def(SDefT(id,id,id,s)))))])
 
   apply-to-bodies(s) = 
-    Specification([id, Strategies(map(try(SDefT(id,id,id,s))))])
\ No newline at end of file
+    Specification([id, Strategies(map(try(ignore-anno-def(SDefT(id,id,id,s)))))])
\ No newline at end of file

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/opt/optimizer.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/opt/optimizer.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/opt/optimizer.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -71,7 +71,7 @@
     //  )
 
     // PATTERN MATCH COMPILATION
-    ; olevel3(
+    ; olevel4(
 	compile-match
 	; desugar-case
         //; save-as2(!".opt5")

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/pp/pp-stratego.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/pp/pp-stratego.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/pp/pp-stratego.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -1,7 +1,5 @@
-/**
- * @todo We need a main, non-xtc strategy here (see tools/pp-stratego)
- */
 module pp-stratego
+
 imports 
   libstratego-lib
   libstratego-xtc 
@@ -13,6 +11,67 @@
 
 strategies
 
+  io-pp-stratego =
+    xtc-io-wrap(
+      pp-stratego-options <+ io-options
+    ,
+      xtc-pp-and-parse-stratego
+    )
+  
+  xtc-pp-and-parse-stratego =
+    if not(<get-config> "--abstract") then
+      xtc-transform(!"parse-stratego",!["-b" | <pass-includes> ])
+    end
+  ; read-from
+  ; with(
+      file   := <xtc-new-file>
+    ; stream := <open-stream> (file, "w")
+    )
+  ; finally(
+      pp-stratego-stream(|stream), <fclose> stream
+    )
+  ; !FILE(file)
+  
+  pp-stratego-string =
+      pp-stratego-box
+    ; box2text-string(|80)
+  
+  pp-stratego-stream(|stream) =
+      pp-stratego-box
+    ; box2text-stream(|80, stream)
+    ; <fputs> ("\n", stream)
+    ; !stream
+  
+  pp-stratego-box = 
+    Stratego-Ensugar
+    //; try(where(<get-config> "--annotations")
+    //      ; xtc-transform(!"annos-to-term"))
+    ; parenthesize-Stratego
+    ; topdown(try(\ Parenthetical(s) -> ParenStrat(s) \ ))
+    ; try(where(<get-config> "--annotations"); annos-as-comment)
+    ; stratego2abox
+
+  pp-stratego-options =
+    Option("-a" + "--abstract", where(<set-config>("--abstract", ())),
+              !"-a | --abstract  source is abstract syntax")
+
+  + Option("--annotations", where(<set-config>("--annotations", ())),
+              !"--annotations    print annotations on abstract syntax")
+
+  + ArgOption("-I" + "--Include", where(<extend-config>("-I", [<id>])),
+          !"-I p|--Include p   include modules from directory p") 
+
+  + ArgOption("-p" , where(<set-config>("-p", <id>)),
+          !"-p file   use pptable in file instead of Stratego-pretty.pp")
+
+  + ArgOption("-la", id,
+              !"-la <name>         Ignored (for command-line compatibility with strc).")
+
+  pass-includes =
+    <get-config<+![]> "-I" ; foldr(id, conc, !["-I", <id>])
+
+strategies
+
   annos-as-comment =
     bottomup(try(anno-as-comment))
 

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/pp/stratego2abox.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/pp/stratego2abox.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/pp/stratego2abox.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -444,7 +444,20 @@
       <separate-by-comma>args => args'
     ; <separate-by-comma>argt => argt'
 
+  stratego-to-abox : 
+   AnnoDef(annos,def) -> H [~annos' ~def ]
+   where
+     <separate-by-space> annos => annos'
 
+  stratego-to-abox : 
+   Extend() -> KW ["extend"]
+
+  stratego-to-abox : 
+   Override() -> KW ["override"]
+
+  stratego-to-abox : 
+   Internal() -> KW ["internal"]
+
 rules
 
   stratego-to-abox : 
@@ -985,7 +998,18 @@
        }
     )
 
+  separate-by-space =
+    rec x(
+      ?[<id>]
+    <+ \ [] -> H hs=0 [] \
+    <+ {b1, b2:
+         ?[b1 | <x>]
+       ; ?b2
+       ; !H hs=1 [b1  b2]
+       }
+    )
 
+
   stratego-to-abox :
     amb(alts) -> V vs=0[V vs=0 is=2 [ "amb>" ~*alts' ] "<amb"]
     where

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/strc/strc.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/strc/strc.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/strc/strc.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -69,7 +69,7 @@
         ; copy-to(strc-getoutfile(!".rtree") => file1)
 	; log(|Info(), ["Abstract syntax in '", file1, "'"])
 
-        ; xtc-transform(!"pp-stratego", !["--abstract" | <pass-verbose> ] )
+        ; xtc-io-transform(pp-stratego-string)
         ; copy-to(strc-getoutfile(!".str") => file2)
 	; log(|Info(), ["Concrete syntax in '", file2, "'"])
       | "Export of externals succeeded"

Modified: strategoxt/trunk/strc-core/spec/front/needed-defs.str
===================================================================
--- strategoxt/trunk/strc-core/spec/front/needed-defs.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/spec/front/needed-defs.str	2009-07-17 15:20:48 UTC (rev 19739)
@@ -77,15 +77,29 @@
 strategies
 
   check-ext-overload =
-    let helper =
-          DefinitionName
-          ; if ExtDefinition then
-              sdef-key-to-string
-              ; debug(!"error: redefining external definition: ")
-              ; <exit> 1
-            end
-     in map(where(is-new-def < helper + id))
-    end
+    list-loop(
+      if is-new-def then
+        check-ext-overload-def
+      end
+    )
+  
+  check-ext-overload-def =
+    ?def{a*}
+    ; DefinitionName
+    ; if ExtDefinition then
+        if !a* => [] then
+          sdef-key-to-string
+          ; !def; write-to-string
+          ; debug(!"error: redefining external definition!: ")
+          ; <exit> 1
+        end
+      else
+        if !a* => [_ | _] then
+          sdef-key-to-string
+          ; debug(!"error: no external definition found: ")
+          ; <exit> 1
+        end
+      end
 
 strategies
 
@@ -165,8 +179,8 @@
 
   JoinDefsExt =
     fetch(?ExtSDef(f,_,_) + ?ExtSDefInl(f,_,_,_))
-    ; fetch(?SDefT(f,_,_,_))
-    ; <debug(!"error: redefining external definition: ")> f
+    ; fetch(?SDefT(f,_,_,_){} + ?SDefT(f,_,_,_){Annos([])})
+    ; <debug(!"error: redefining external definition2: ")> <write-to-string>
     ; giving-up
 
   choices = 

Modified: strategoxt/trunk/strc-core/tools/pp-stratego.str
===================================================================
--- strategoxt/trunk/strc-core/tools/pp-stratego.str	2009-07-17 14:57:28 UTC (rev 19738)
+++ strategoxt/trunk/strc-core/tools/pp-stratego.str	2009-07-17 15:20:48 UTC (rev 19739)

(42 diff lines omitted)


From L.C.L.Kats at tudelft.nl  Fri Jul 17 17:38:31 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Jul 2009 15:38:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19740 - LennartKats -
	spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907171536.n6HFacFH006268@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-17 15:38:31 +0000 (Fri, 17 Jul 2009)
New Revision: 19740

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19740&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Disambiguator.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FilterException.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLRException.java

Log:
Minor Disambiguator fix.

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Disambiguator.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Disambiguator.java	2009-07-17 15:20:48 UTC (rev 19739)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Disambiguator.java	2009-07-17 15:38:31 UTC (rev 19740)
@@ -13,6 +13,7 @@
 
 import aterm.AFun;
 import aterm.ATerm;
+import aterm.ParseError;
 
 /**
  * @author Karl Trygve Kalleberg <karltk near strategoxt.org>
@@ -259,14 +260,19 @@
         return t;
     }
     
-    private static boolean matchProdOnTopSort(ATerm prod, String sort) {
-        return prod.match("prod([cf(opt(layout)),cf(sort(\"" + sort + "\")),cf(opt(layout))], sort(\"<START>\"),no-attrs)") != null
-            || prod.match("prod([cf(sort(\"" + sort + "\"))], sort(\"<START>\"),no-attrs)") != null
-            || prod.match("prod([lex(sort(\"" + sort + "\"))], sort(\"<START>\"),no-attrs)") != null
-            || prod.match("prod([sort(\"" + sort + "\")], sort(\"<START>\"),no-attrs)") != null;
+    private boolean matchProdOnTopSort(ATerm prod, String sort) throws FilterException {
+        try {
+            sort = sort.replaceAll("\"", "");
+            return prod.match("prod([cf(opt(layout)),cf(sort(\"" + sort + "\")),cf(opt(layout))], sort(\"<START>\"),no-attrs)") != null
+                || prod.match("prod([cf(sort(\"" + sort + "\"))], sort(\"<START>\"),no-attrs)") != null
+                || prod.match("prod([lex(sort(\"" + sort + "\"))], sort(\"<START>\"),no-attrs)") != null
+                || prod.match("prod([sort(\"" + sort + "\")], sort(\"<START>\"),no-attrs)") != null;
+        } catch (ParseError e) {
+            throw new FilterException(parser, "Could not select desired top sort: " + sort, e);
+        }
     }
     
-    private IParseNode selectOnTopSort(IParseNode t, String sort) {
+    private IParseNode selectOnTopSort(IParseNode t, String sort) throws FilterException {
         List<IParseNode> results = new ArrayList<IParseNode>();
 
         if (t instanceof Amb) {
@@ -283,7 +289,7 @@
         }
       }
 
-    private void addTopSortAlternatives(IParseNode t, String sort, List<IParseNode> results) {
+    private void addTopSortAlternatives(IParseNode t, String sort, List<IParseNode> results) throws FilterException {
         for (IParseNode amb : ((Amb) t).getAlternatives()) {
             if (amb instanceof Amb) {
                 addTopSortAlternatives(amb, sort, results);

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FilterException.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FilterException.java	2009-07-17 15:20:48 UTC (rev 19739)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FilterException.java	2009-07-17 15:38:31 UTC (rev 19740)
@@ -11,6 +11,10 @@
 
     private static final long serialVersionUID = -3107849742654999518L;
 
+    public FilterException(SGLR parser, String message, Throwable cause) {
+        super(parser, message, cause);
+    }
+
     public FilterException(SGLR parser, String message) {
         super(parser, message);
     }

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLRException.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLRException.java	2009-07-17 15:20:48 UTC (rev 19739)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLRException.java	2009-07-17 15:38:31 UTC (rev 19740)
@@ -15,16 +15,20 @@
     private static final long serialVersionUID = -8467572969588110480L;
     
     private final SGLR parser;
-
-    public SGLRException(SGLR parser) {
+    
+    public SGLRException(SGLR parser, String message, Throwable cause) {
+        super(message, cause);
         this.parser = parser;
     }
     
     public SGLRException(SGLR parser, String message) {
-        super(message);
-        this.parser = parser;
+        this(parser, message, null);
     }
     
+    public SGLRException(SGLR parser) {
+        this(parser, null, null);
+    }
+    
     public final SGLR getParser() {
         return parser;
     }



From L.C.L.Kats at tudelft.nl  Fri Jul 17 18:12:44 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Jul 2009 16:12:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19741 - LennartKats -
	in strc-java/trunk: .
	java/runtime/org/strategoxt/lang/compat/override
	java/runtime/org/strategoxt/lang/compat/sglr trans
Message-ID: <200907171610.n6HGAptj006708@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-17 16:12:44 +0000 (Fri, 17 Jul 2009)
New Revision: 19741

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19741&view=rev

Modified:
   strc-java/trunk/.classpath
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/xtc-compat.str
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/SGLRCompatLibrary.java
   strc-java/trunk/trans/s2j.str

Log:


Changes:

Modified: strc-java/trunk/.classpath
===================================================================
--- strc-java/trunk/.classpath	2009-07-17 15:38:31 UTC (rev 19740)
+++ strc-java/trunk/.classpath	2009-07-17 16:12:44 UTC (rev 19741)
@@ -2,9 +2,9 @@
 <classpath>
 	<classpathentry kind="src" output="java/runtime" path="java/runtime"/>
 	<classpathentry kind="src" output="strc-java/java/compiler" path="java/compiler"/>
-	<classpathentry exported="true" kind="lib" path="java/strategoxt.jar" sourcepath="java/lib"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry exported="true" kind="lib" path="java/strategoxt.jar" sourcepath="/org.spoofax.interpreter.library.jsglr"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/3"/>
-	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/xtc-compat.str
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/xtc-compat.str	2009-07-17 15:38:31 UTC (rev 19740)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/xtc-compat.str	2009-07-17 16:12:44 UTC (rev 19741)
@@ -12,9 +12,10 @@
 strategies
 
   override xtc-find =
+    warn-msg(|[<whoami <+ !"application">, " uses xtc to find non-local file ", <id>]);
+    override
+  <+
     file-exists
-  <+
-    warn-msg(|[<whoami <+ !"application">, " uses xtc to find non-local file ", <id>])
   
   // TODO: also implement fork-and-wait
   //       (which is more lower-level and probably inlined in call)

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/SGLRCompatLibrary.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/SGLRCompatLibrary.java	2009-07-17 15:38:31 UTC (rev 19740)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/SGLRCompatLibrary.java	2009-07-17 16:12:44 UTC (rev 19741)
@@ -30,6 +30,8 @@
 	}
 
 	private void initFilterSettings() {
+		filterSettings.setFilterAny(true);
+		
 		add(new AbstractFilterSetting(filterSettings, "STRSGLR_set_filter_direct_eagernes_on") {
 			@Override
 			public void set() {

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2009-07-17 15:38:31 UTC (rev 19740)
+++ strc-java/trunk/trans/s2j.str	2009-07-17 16:12:44 UTC (rev 19741)
@@ -330,6 +330,7 @@
     AnnoDef([Override()], def @ SDefT(x, s*, t*, s)) ->
     type-dec |[
        private static final class x' extends x {
+         private static final x outer = x.instance;
          ~(body)
          @Override public String getName() { return "~x"; }
        }



From L.C.L.Kats at tudelft.nl  Mon Jul 20 13:47:51 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 20 Jul 2009 11:47:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19742 - LennartKats - in
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter:
	library/ssl terms
Message-ID: <200907201145.n6KBjrw7002927@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-20 11:47:49 +0000 (Mon, 20 Jul 2009)
New Revision: 19742

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19742&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_mkterm.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java

Log:
Constructor parsing fix.

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_mkterm.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_mkterm.java	2009-07-17 16:12:44 UTC (rev 19741)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_mkterm.java	2009-07-20 11:47:49 UTC (rev 19742)
@@ -64,7 +64,8 @@
         String name = nameTerm.stringValue();
         for (int i = 0; i < name.length(); i++) {
             char c = name.charAt(i);
-            if (!(Character.isLetter(c) || c == '-')) {
+            if (!(Character.isLetter(c) || c == '_' || c == '-'
+                || c == '+' || c == '*' || c == '$')) {
                 name = name.substring(0, i);
                 break;
             }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java	2009-07-17 16:12:44 UTC (rev 19741)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java	2009-07-20 11:47:49 UTC (rev 19742)
@@ -139,7 +139,8 @@
         do {
             sb.append((char)ch);
             ch = bis.read();
-        } while(Character.isLetterOrDigit(ch) || ch == '-');
+        } while(Character.isLetterOrDigit(ch) || ch == '_' || ch == '-'
+            || ch == '+' || ch == '*' || ch == '$');
         
         //System.err.println(" - " + sb.toString());
         



From L.C.L.Kats at tudelft.nl  Mon Jul 20 13:59:11 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 20 Jul 2009 11:59:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19743 - LennartKats -
	in strc-java/trunk: . META-INF java/runtime/org/strategoxt/lang
	java/runtime/org/strategoxt/lang/compat
	java/runtime/org/strategoxt/lang/compat/override trans trans/lib
Message-ID: <200907201157.n6KBvCiv003005@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-20 11:59:11 +0000 (Mon, 20 Jul 2009)
New Revision: 19743

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19743&view=rev

Modified:
   strc-java/trunk/META-INF/MANIFEST.MF
   strc-java/trunk/build.properties
   strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/CompatManager.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/libstrc_compat.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/xtc-compat.str
   strc-java/trunk/trans/lib/dr-scoping.str
   strc-java/trunk/trans/s2j-options.str
   strc-java/trunk/trans/s2j.str

Log:
- Some more build compatibility fixes
- Changed the CompatManager to play nicer with multiple Context instances

Changes:

Modified: strc-java/trunk/META-INF/MANIFEST.MF
===================================================================
--- strc-java/trunk/META-INF/MANIFEST.MF	2009-07-20 11:47:49 UTC (rev 19742)
+++ strc-java/trunk/META-INF/MANIFEST.MF	2009-07-20 11:59:11 UTC (rev 19743)
@@ -14,4 +14,5 @@
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
 Bundle-ActivationPolicy: lazy
 Bundle-ClassPath: .,
- java/strategoxt.jar
+ java/strategoxt.jar,
+ java/runtime/

Modified: strc-java/trunk/build.properties
===================================================================
--- strc-java/trunk/build.properties	2009-07-20 11:47:49 UTC (rev 19742)
+++ strc-java/trunk/build.properties	2009-07-20 11:59:11 UTC (rev 19743)
@@ -3,4 +3,5 @@
 bin.includes = META-INF/,\
                .,\
                plugin.xml,\
-               java/strategoxt.jar
+               java/strategoxt.jar,\
+               java/runtime/

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	2009-07-20 11:47:49 UTC (rev 19742)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	2009-07-20 11:59:11 UTC (rev 19743)
@@ -32,7 +32,7 @@
 
     private final List<IOperatorRegistry> operatorRegistries;
     
-    private final CompatManager compat = new CompatManager();
+    private final CompatManager compat = new CompatManager(this);
     
     private final UncaughtExceptionHandler exceptionHandler =
     	new UncaughtExceptionHandler(this);
@@ -52,6 +52,7 @@
     	operatorRegistryMap.clear();
     	operatorRegistryMap.putAll(other.operatorRegistryMap);
     	operatorRegistries.addAll(other.operatorRegistries);
+    	compat.init();
     }
     
     public Context(ITermFactory factory) {
@@ -108,20 +109,14 @@
         }
     }
     
-    public void postInit(String componentName) {
-    	exceptionHandler.setEnabled(true);
-    	compat.postInit(this, componentName);
+    public void registerComponent(String componentName) {
+    	compat.registerComponent(componentName);
     }
     
-    public void uninit() {
-    	exceptionHandler.setEnabled(false);
+    public void setStandAlone(boolean isStandAlone) {
+    	exceptionHandler.setEnabled(isStandAlone);
     }
     
-    @Override
-    protected void finalize() throws Throwable {
-    	uninit();
-    }
-    
     public IStrategoTerm invokeStrategyCLI(Strategy strategy, String appName, String[] args) {
     	ITermFactory factory = getFactory();    	
     	IStrategoTerm[] termArgs = new IStrategoTerm[args.length + 1];
@@ -156,7 +151,6 @@
 				return null;
 			}
 		} catch (InterpreterExit e) {
-			uninit();
 			throw new StrategoExit(e.getValue());
 		} catch (InterpreterException e) {
 			throw new StrategoException("Exception in execution of primitive '" + primitive.getName() + "'", e);

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/CompatManager.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/CompatManager.java	2009-07-20 11:47:49 UTC (rev 19742)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/CompatManager.java	2009-07-20 11:59:11 UTC (rev 19743)
@@ -1,5 +1,8 @@
 package org.strategoxt.lang.compat;
 
+import java.util.HashSet;
+import java.util.Set;
+
 import org.spoofax.interpreter.adapter.aterm.WrappedATermFactory;
 import org.spoofax.interpreter.library.jsglr.JSGLRLibrary;
 import org.strategoxt.lang.Context;
@@ -10,17 +13,42 @@
 import org.strategoxt.lang.compat.sglr.SGLRCompatLibrary;
 
 /**
+ * Handles per-context library compatibility components.
+ *
  * @author Lennart Kats <lennart add lclnet.nl>
  */
 public class CompatManager {
 	
+	private final Context context;
+	
+	private static Set<String> asyncComponents = new HashSet<String>();
+	
+	public CompatManager(Context context) {
+		this.context = context;
+	}
+	
+	public void init() {
+		synchronized (asyncComponents) {
+			for (String component : asyncComponents) {
+				activateComponent(component);
+			}
+		}
+	}
+	
+	public void registerComponent(String component) {
+		synchronized (asyncComponents) {
+			asyncComponents.add(component);
+			activateComponent(component);
+		}
+	}
+	
 	/**
 	 * Dynamically loads any compatibility library associated with a Stratego library.
 	 * 
 	 * (Note that some libraries need to import additional compatibility components
 	 *  to implement some native functionality, such as libstratego-rtg-compat.) 
 	 */
-	public void postInit(Context context, String component) {
+	public void activateComponent(String component) {
 		if ("libstratego_lib".equals(component)) {
 			context.addOperatorRegistry(new CompatLibrary());
 			performance_tweaks.init(context);
@@ -31,6 +59,9 @@
 			context.addOperatorRegistry(new SGLRCompatLibrary(atermFactory));
 			jsglr_parser.init(context);
 			jsglr_parser_compat.init(context);
+		} else if ("libstrc".equals(component)) {
+			context.addOperatorRegistry(libstrc_compat.getOperatorRegistry());
+			libstrc_compat.init(context);
 		}
 	}
 }

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/libstrc_compat.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/libstrc_compat.java	2009-07-20 11:47:49 UTC (rev 19742)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/libstrc_compat.java	2009-07-20 11:59:11 UTC (rev 19743)
@@ -11,17 +11,20 @@
  * @author Lennart Kats <lennart add lclnet.nl>
  */
 public class libstrc_compat {
-	private static boolean isInitialized;
 	
+	private libstrc_compat() {
+		// No instantiation
+	}
+	
 	public static void init(Context context) {
-		if (isInitialized) return;
-		isInitialized = true;
-		context.addOperatorRegistry(new OperatorRegistry());
 		strc_compat.init(context);
 	}
 	
-	private static class OperatorRegistry extends AbstractStrategoOperatorRegistry {
-		
+	public static AbstractStrategoOperatorRegistry getOperatorRegistry() {
+		return new OperatorRegistry();
+	}
+	
+	private static class OperatorRegistry extends AbstractStrategoOperatorRegistry {		
 		public OperatorRegistry() {
 			add(new StringValuePrimitive("VERSION_TERM", "x.y"));
 			add(new StringValuePrimitive("SVN_REVISION_TERM", "nnnn"));

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str	2009-07-20 11:47:49 UTC (rev 19742)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str	2009-07-20 11:59:11 UTC (rev 19743)
@@ -22,6 +22,7 @@
         case "libstratego-xtc":      import-term(libstratego-xtc.rtree)
         case "libstratego-sglr":     import-term(libstratego-sglr.rtree)
         case "libstratego-rtg":      import-term(libstratego-rtg.rtree)
+        case "libstratego-sdf":      import-term(libstratego-sdf.rtree)
         case "libstratego-aterm":    import-term(libstratego-aterm.rtree)
         case "libstratego-gpp":      import-term(libstratego-gpp.rtree)
         case "libstratego-tool-doc": import-term(libstratego-tool-doc.rtree)

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/xtc-compat.str
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/xtc-compat.str	2009-07-20 11:47:49 UTC (rev 19742)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/xtc-compat.str	2009-07-20 11:59:11 UTC (rev 19743)
@@ -15,7 +15,7 @@
     warn-msg(|[<whoami <+ !"application">, " uses xtc to find non-local file ", <id>]);
     override
   <+
-    file-exists
+    id // HACK: try to find something on the path instead
   
   // TODO: also implement fork-and-wait
   //       (which is more lower-level and probably inlined in call)

Modified: strc-java/trunk/trans/lib/dr-scoping.str
===================================================================
--- strc-java/trunk/trans/lib/dr-scoping.str	2009-07-20 11:47:49 UTC (rev 19742)
+++ strc-java/trunk/trans/lib/dr-scoping.str	2009-07-20 11:59:11 UTC (rev 19743)
@@ -8,6 +8,8 @@
 
 strategies
 
+  // TODO: move out of 'lib' directory
+
   dr-scope-all-verbose(s) =
     {| DrScopedRules :
       dr-scope-all-start
@@ -25,35 +27,3 @@
       end
     |}
 
-  dr-scope-all(s) =
-    {| DrScopedRules :
-      finally(
-        dr-scope-all-start; s
-      , dr-scope-all-end
-      )
-    |}
-
-  dr-scope-all-start =
-    where(
-      table := Hashtable(<dr-rule-sets-hashtable>);
-      names := ["DrScopedRules" | <hashtable-keys> table];
-      
-      dr-begin-scopes(|names);
-      rules(DrScopedRules := names)
-    )
-
-  dr-scope-all-end =
-    where(
-      table := Hashtable(<dr-rule-sets-hashtable>);
-      names := <DrScopedRules>;
-      
-      dr-end-scopes(|names);
-  
-      // Remove other, newly defined rules
-      <diff> (<hashtable-keys> table, names);
-      list-loop(
-        { key: ?key;
-          <hashtable-remove(|key)> table
-        }
-      )
-    )

Modified: strc-java/trunk/trans/s2j-options.str
===================================================================
--- strc-java/trunk/trans/s2j-options.str	2009-07-20 11:47:49 UTC (rev 19742)
+++ strc-java/trunk/trans/s2j-options.str	2009-07-20 11:59:11 UTC (rev 19743)
@@ -20,7 +20,11 @@
     )
   + ArgOption(
       "-la"
-    , <post-extend-config> ("-la", [<translate-default-library>]); !()
+    , if is-substring(!"/") + is-substring(!"\\") then
+        warn(|"Ignoring library import: must follow format packagename.ClassName")
+      else
+        <post-extend-config> ("-la", [<translate-default-library>]); !()
+      end
     , !"-la <name>         Include library <name>"
     )
   + Option(
@@ -64,20 +68,29 @@
     , !"-O n               Optimization level (0 = no optimization)"
     )
     
+  // For compatibility, allow a number of built-in library names
   translate-default-library =
     switch id
       case "stratego-lib" + "stratego-xtc" + "stratego-sglr" + "stratego-rtg" + "stratego-aterm" +
-           "stratego-gpp" + "strc" + "stratego-tool-doc" + "java-front":
+           "stratego-gpp" + "strc" + "stratego-tool-doc" + "stratego-sdf" + "java-front":
         <conc-strings> ("org.strategoxt.lib", <id>)
+
       case "stratego-parallel":
         <conc-strings> ("org.strategoxt.lang.parallel.lib", <id>)
+
+      case not(is-substring(!".")):
+        err(|"Imported libraries must follow format packagename.ClassName"); fail
+      
       otherwise:
         id
     end
-  ; if not(is-substring(!".")) then
-      err(|"Imported libraries must include a package name")
-    ; fail
-    end
+  
+  // For compatibility, ignore all built-in library paths
+  // (e.g., -la /home/.../java-front.la)
+  translate-default-library-path =
+    base-filename;
+    remove-extension;
+    translate-default-library
  
   parse-define-option =
     risky(

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2009-07-20 11:47:49 UTC (rev 19742)
+++ strc-java/trunk/trans/s2j.str	2009-07-20 11:59:11 UTC (rev 19743)
@@ -113,18 +113,23 @@
      ~*cnstr-decls
      ~*prim-decls
      
-     public static void init(Context context) {
+     public static Context init(Context context) {
        ITermFactory termFactory = context.getFactory();
        if (constantFactory == termFactory)
-         return;
+         return context;
        constantFactory = termFactory;
        initConstructors(termFactory);
        initConstants(termFactory);
        ~*import-inits
        ~*def-inits
-       context.postInit("~x_name");
+       context.registerComponent("~x_name");
        initPrimitives(context); // must be last
+       return context;
      }
+     
+     public static Context init() {
+       return init(new Context());
+     }
 
      ~*main
      
@@ -219,35 +224,32 @@
   java-main-methods :
     _ ->
     |[
-     public static String testMain(String inputTerm) {
-        Context context = new Context();
-        init(context);
-        try {
-          IStrategoTerm result = x_main.instance.invoke(context, context.getFactory().parseFromString(inputTerm));
-          context.uninit();
-          return result == null ? null : result.toString();
-        } catch (StrategoExit exit) {
-          return null;
-        }
-     }
-        
      public static void main(String args[]) {
-        Context context = new Context();
-        init(context);
-        try {
-          IStrategoTerm result = context.invokeStrategyCLI(x_main.instance, "~x_name", args);
-          context.uninit();
-          if (result == null) {
-            System.err.println("~x_name" + (TRACES_ENABLED ? ": rewriting failed, trace:" : ": rewriting failed"));
-            context.printStackTrace();
-            System.exit(1); 
-          } else {
-            System.out.println(result);
-          }
-        } catch (StrategoExit exit) {
-          System.exit(exit.getValue());
-        }
+       Context context = init();
+       context.setStandAlone(true);
+       try {
+         IStrategoTerm result = context.invokeStrategyCLI(x_main.instance, "~x_name", args);
+         if (result == null) {
+           System.err.println("~x_name" + (TRACES_ENABLED ? ": rewriting failed, trace:" : ": rewriting failed"));
+           context.printStackTrace();
+           System.exit(1); 
+         } else {
+           System.out.println(result);
+           System.exit(0);
+         }
+       } catch (StrategoExit exit) {
+         System.exit(exit.getValue());
+       }
      }
+     
+     public static IStrategoTerm mainNoExit(String... args) throws StrategoExit {
+       return mainNoExit(new Context(), args);
+     }
+     
+     public static IStrategoTerm mainNoExit(Context context, String... args) throws StrategoExit {
+       init(context);
+       return context.invokeStrategyCLI(x_main.instance, "~x_name", args);
+     }
     ]|
     where
       <get-config> "-m" <+ not(<get-config> "--library")



From L.C.L.Kats at tudelft.nl  Mon Jul 20 14:00:35 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 20 Jul 2009 12:00:35 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19744 - LennartKats -
	in strategoxt/trunk/stratego-libraries/lib:
	native/stratego-lib spec/lang
Message-ID: <200907201158.n6KBwahS003018@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-20 12:00:34 +0000 (Mon, 20 Jul 2009)
New Revision: 19744

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19744&view=rev

Modified:
   strategoxt/trunk/stratego-libraries/lib/native/stratego-lib/term-common.c
   strategoxt/trunk/stratego-libraries/lib/spec/lang/dynamic-rules.str

Log:
- Increased the buffer size in SSL_checksum()
- Added dr-scope-all strategies to the standard library

Changes:

Modified: strategoxt/trunk/stratego-libraries/lib/native/stratego-lib/term-common.c
===================================================================
--- strategoxt/trunk/stratego-libraries/lib/native/stratego-lib/term-common.c	2009-07-20 11:59:11 UTC (rev 19743)
+++ strategoxt/trunk/stratego-libraries/lib/native/stratego-lib/term-common.c	2009-07-20 12:00:34 UTC (rev 19744)
@@ -206,7 +206,7 @@
 ATerm SSL_checksum(ATerm t) {
   unsigned char *digest = ATchecksum(t);
 
-  char buf[32] ;
+  char buf[33] ;
   int i, offset = 0;
 
   for (i=0; i<16 ; i++) {

Modified: strategoxt/trunk/stratego-libraries/lib/spec/lang/dynamic-rules.str
===================================================================
--- strategoxt/trunk/stratego-libraries/lib/spec/lang/dynamic-rules.str	2009-07-20 11:59:11 UTC (rev 19743)
+++ strategoxt/trunk/stratego-libraries/lib/spec/lang/dynamic-rules.str	2009-07-20 12:00:34 UTC (rev 19744)
@@ -123,6 +123,48 @@
       ; dr-set-rule-set(|name)
     )
 
+  /**
+   * Scope all dynamic rules.
+   */
+  dr-scope-all(s) =
+    {| DrScopedRules :
+      finally(
+        dr-scope-all-start; s
+      , dr-scope-all-end
+      )
+    |}
+
+  /**
+   * Start a new scope for all dynamic rules.
+   */
+  dr-scope-all-start =
+    where(
+      table := Hashtable(<dr-rule-sets-hashtable>);
+      names := ["DrScopedRules" | <hashtable-keys> table];
+      
+      dr-begin-scopes(|names);
+      rules(DrScopedRules := names)
+    )
+
+  /**
+   * End a scope for all dynamic rules.
+   */
+  dr-scope-all-end =
+    where(
+      table := Hashtable(<dr-rule-sets-hashtable>);
+      names := <DrScopedRules>;
+      
+      dr-end-scopes(|names);
+  
+      // Remove other, newly defined rules
+      <diff> (<hashtable-keys> table, names);
+      list-loop(
+        { key: ?key;
+          <hashtable-remove(|key)> table
+        }
+      )
+    )
+
   dr-scopes(s | names) =
     dr-begin-scopes(|names)
     ; (s < dr-end-scopes(|names)



From L.C.L.Kats at tudelft.nl  Mon Jul 20 17:42:21 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 20 Jul 2009 15:42:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19745 - LennartKats -
	in strc-java/trunk: java trans/lib
Message-ID: <200907201540.n6KFeMv3006118@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-20 15:42:21 +0000 (Mon, 20 Jul 2009)
New Revision: 19745

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19745&view=rev

Modified:
   strc-java/trunk/java/Makefile.am
   strc-java/trunk/trans/lib/dr-scoping.str

Log:


Changes:

Modified: strc-java/trunk/java/Makefile.am
===================================================================
--- strc-java/trunk/java/Makefile.am	2009-07-20 12:00:34 UTC (rev 19744)
+++ strc-java/trunk/java/Makefile.am	2009-07-20 15:42:21 UTC (rev 19745)
@@ -61,16 +61,17 @@
 JARIN3=`find compiler | grep -E '\.class|\.rtree|\.af|\.tbl' | sed 's!compiler/!-C compiler/ !'`
 
 jar strategoxt.jar : ext-lib # .ALLCLASSES $(RUNTIMEJAVAS) $(LIBARYJAVAS) $(COMPILERJAVAS)
-	$(JAR) cfm strategoxt.jar META-INF/MANIFEST.MF $(JARIN1)
-	$(JAR) ufm strategoxt.jar META-INF/MANIFEST.MF $(JARIN2)
-	$(JAR) ufm strategoxt.jar META-INF/MANIFEST.MF $(JARIN3)
-	$(JAR) ufm strategoxt.jar META-INF/MANIFEST.MF -C ext-lib/ .
-	$(JAR) ufm strategoxt.jar META-INF/MANIFEST.MF -C $(BASEPATH)/org.spoofax.interpreter.core/bin/ .
-	$(JAR) ufm strategoxt.jar META-INF/MANIFEST.MF -C $(BASEPATH)/../../branches/spoofax-recovery/bin/ .
-	$(JAR) ufm strategoxt.jar META-INF/MANIFEST.MF -C $(BASEPATH)/org.spoofax.aterm/bin/ .
-	$(JAR) ufm strategoxt.jar META-INF/MANIFEST.MF -C $(BASEPATH)/org.spoofax.interpreter.adapter.aterm/bin/ .
-	$(JAR) ufm strategoxt.jar META-INF/MANIFEST.MF -C $(BASEPATH)/org.spoofax.interpreter.library.jsglr/bin/ .
-	jar i strategoxt.jar
+	$(JAR) cfm strategoxt.jar.tmp META-INF/MANIFEST.MF $(JARIN1)
+	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF $(JARIN2)
+	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF $(JARIN3)
+	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF -C ext-lib/ .
+	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF -C $(BASEPATH)/org.spoofax.interpreter.core/bin/ .
+	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF -C $(BASEPATH)/../../branches/spoofax-recovery/bin/ .
+	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF -C $(BASEPATH)/org.spoofax.aterm/bin/ .
+	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF -C $(BASEPATH)/org.spoofax.interpreter.adapter.aterm/bin/ .
+	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF -C $(BASEPATH)/org.spoofax.interpreter.library.jsglr/bin/ .
+	jar i strategoxt.jar.tmp
+	mv strategoxt.jar.tmp strategoxt.jar
 
 smalljar :
 	$(JAR) cfm0 strategoxt.jar META-INF/MANIFEST.MF $(JARIN1)

Modified: strc-java/trunk/trans/lib/dr-scoping.str
===================================================================
--- strc-java/trunk/trans/lib/dr-scoping.str	2009-07-20 12:00:34 UTC (rev 19744)
+++ strc-java/trunk/trans/lib/dr-scoping.str	2009-07-20 15:42:21 UTC (rev 19745)
@@ -1,15 +1,13 @@
 /**
  * @author Lennart Kats
  */
-module lib/dr-scoping
+module lib/dr-scoping // TODO: move out of 'lib' directory
 
 imports
   libstratego-lib
 
 strategies
 
-  // TODO: move out of 'lib' directory
-
   dr-scope-all-verbose(s) =
     {| DrScopedRules :
       dr-scope-all-start
@@ -27,3 +25,28 @@
       end
     |}
 
+  // TODO: remove these definitions
+  internal dr-scope-all-start =
+    where(
+      table := Hashtable(<dr-rule-sets-hashtable>);
+      names := ["DrScopedRules" | <hashtable-keys> table];
+      
+      dr-begin-scopes(|names);
+      rules(DrScopedRules' := names)
+    )
+
+  internal dr-scope-all-end =
+    where(
+      table := Hashtable(<dr-rule-sets-hashtable>);
+      names := <DrScopedRules'>;
+      
+      dr-end-scopes(|names);
+  
+      // Remove other, newly defined rules
+      <diff> (<hashtable-keys> table, names);
+      list-loop(
+        { key: ?key;
+          <hashtable-remove(|key)> table
+        }
+      )
+    )



From L.C.L.Kats at tudelft.nl  Mon Jul 20 17:43:11 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 20 Jul 2009 15:43:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19746 - LennartKats -
 in spoofax-imp/trunk: . org.strategoxt.imp.editors.editorservice
 org.strategoxt.imp.editors.editorservice/META-INF
 org.strategoxt.imp.feature org.strategoxt.imp.generator
 org.strategoxt.imp.generator/.externalToolBuilders
 org.strategoxt.imp.generator/META-INF
 org.strategoxt.imp.generator/src/sdf2imp
 org.strategoxt.imp.generator/src/sdf2imp/lib
 org.strategoxt.imp.generator/src/sdf2imp/project
 org.strategoxt.imp.generator/src-gen
 org.strategoxt.imp.generator/src-gen/org
 org.strategoxt.imp.generator/src-gen/org/strategoxt
 org.strategoxt.imp.generator/src-gen/org/strategoxt/imp
 org.strategoxt.imp.metatooling org.strategoxt.imp.metatooling/META-INF
 org.strategoxt.imp.metatooling/src
 org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building
 org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading
 org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards
 org.strategoxt.imp.meta! tooling/src/sdf2imp
 org.strategoxt.imp.metatooling/src/sdf2imp/lib org.strategoxt.imp.runtime
 org.strategoxt.imp.runtime/META-INF org.strategoxt.imp.runtime/src
 org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
 org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter
Message-ID: <200907201541.n6KFfCtJ006124@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-20 15:43:09 +0000 (Mon, 20 Jul 2009)
New Revision: 19746

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19746&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src-gen/org/
   spoofax-imp/trunk/org.strategoxt.imp.generator/src-gen/org/strategoxt/
   spoofax-imp/trunk/org.strategoxt.imp.generator/src-gen/org/strategoxt/imp/
   spoofax-imp/trunk/org.strategoxt.imp.generator/src-gen/org/strategoxt/imp/generator/
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/sdf-options.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/
Removed:
   spoofax-imp/trunk/org.strategoxt.imp.generator/plugin.xml
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/.externalToolBuilders/
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/RTG.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.meta
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/debug.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/xml-doc2abox.meta
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/xml-doc2abox.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/main.meta
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/main.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/options.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/project/
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/services/
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/util/
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/syntax/
   spoofax-imp/trunk/org.strategoxt.imp.runtime/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/stratego-editor-support/
Modified:
   spoofax-imp/trunk/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/.externalToolBuilders/Makefile for Spoofax-IMP generator.launch
   spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.generator/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.generator/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/xml-doc2abox.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-controller.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/.project
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorUpdater.java
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeFactory.java

Log:
* All generator components are now in the org.strategoxt.imp.generator project

* Completed the transition to use STRJ for the Stratego components
  - everything depends on the new org.strategoxt.strcjava plugin
  - sdf2imp is now completely compiled to Java
  - other runtime components are run by the HybridInterpreter,
    which uses compiled libraries (and loads much faster than the pure interpreter)
  - removed all the old Stratego compatibility modules, which
    are now part of the STRJ runtime


Changes (first 1000 lines of the diffs):

Modified: spoofax-imp/trunk/Makefile
===================================================================
--- spoofax-imp/trunk/Makefile	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/Makefile	2009-07-20 15:43:09 UTC (rev 19746)
@@ -1,11 +1,10 @@
 all :
-	$(MAKE) -C org.strategoxt.imp.metatooling all
-	$(MAKE) -C org.strategoxt.imp.runtime all
+	$(MAKE) -C org.strategoxt.imp.generator all
 	$(MAKE) -C org.strategoxt.imp.editors.editorservice all
 
 check : all
-	$(MAKE) -C org.strategoxt.imp.metatooling check
+	$(MAKE) -C org.strategoxt.imp.generator check
 
 clean :
-	$(MAKE) -C org.strategoxt.imp.metatooling clean
+	$(MAKE) -C org.strategoxt.imp.generator clean
 	$(MAKE) -C org.strategoxt.imp.editors.editorservice clean

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/META-INF/MANIFEST.MF	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/META-INF/MANIFEST.MF	2009-07-20 15:43:09 UTC (rev 19746)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: EditorService Plug-in
 Bundle-SymbolicName: org.strategoxt.imp.editors.editorservice; singleton:=true
-Bundle-Version: 0.1.0.2505
+Bundle-Version: 0.1.0.2600
 Bundle-Activator: org.strategoxt.imp.editors.editorservice.Activator
 Import-Package: org.osgi.framework;version="1.3.0"
 Require-Bundle: org.eclipse.core.runtime,

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/Makefile
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/Makefile	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/Makefile	2009-07-20 15:43:09 UTC (rev 19746)
@@ -1,13 +1,11 @@
 SYNTAX     = EditorService
-SOURCE     = ../org.strategoxt.imp.metatooling/src/syntax/$(SYNTAX).def
-PPAF       = ../org.strategoxt.imp.metatooling/src/syntax/$(SYNTAX)-pretty.pp.af
-CTREE      = ../org.strategoxt.imp.metatooling/src/include/sdf2imp.ctree
+SOURCE     = ../org.strategoxt.imp.generator/src/syntax/$(SYNTAX).def
+PPAF       = ../org.strategoxt.imp.generator/src/syntax/$(SYNTAX)-pretty.pp.af
 
-SDF2IMP    = ../org.strategoxt.imp.metatooling/sdf2imp
+SDF2IMP    = ../org.strategoxt.imp.generator/sdf2imp
 ESVS       = ${wildcard src/*.esv}
 
-all : editor/include/$(SYNTAX).packed.esv $(CTREE) editor/include/rtg.tbl editor/include/EditorService-pretty.pp.af
-	cp $(CTREE) editor/include
+all : editor/include/$(SYNTAX).packed.esv editor/include/rtg.tbl editor/include/EditorService-pretty.pp.af
 
 clean :
 	rm -f src/parser/$(SYNTAX)ParseController.java bin/$(SYNTAX).packed.esv

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2009-07-20 15:43:09 UTC (rev 19746)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.1.0.2505"
+      version="0.1.0.2600"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://www.lclnet.nl/software/sdf2imp/">

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/.externalToolBuilders/Makefile for Spoofax-IMP generator.launch
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/.externalToolBuilders/Makefile for Spoofax-IMP generator.launch	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/.externalToolBuilders/Makefile for Spoofax-IMP generator.launch	2009-07-20 15:43:09 UTC (rev 19746)
@@ -2,13 +2,11 @@
 <launchConfiguration type="org.eclipse.ui.externaltools.ProgramBuilderLaunchConfigurationType">
 <stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src-gen&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
 <booleanAttribute key="org.eclipse.debug.core.appendEnvironmentVariables" value="true"/>
-<booleanAttribute key="org.eclipse.debug.core.capture_output" value="false"/>
-<booleanAttribute key="org.eclipse.debug.ui.ATTR_CONSOLE_OUTPUT_ON" value="false"/>
-<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="true"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_BUILD_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;str in metatooling&quot; name=&quot;str in metatooling&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src/syntax&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src/sdf2imp.str&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src/sdf2imp&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="/usr/bin/make"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS" value="full,incremental,"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS" value="java"/>
 <booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.metatooling}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.generator}"/>
 </launchConfiguration>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF	2009-07-20 15:43:09 UTC (rev 19746)
@@ -3,28 +3,20 @@
 Bundle-Name: Spoofax/IMP Metatooling
 Bundle-SymbolicName: org.strategoxt.imp.generator;singleton:=true
 Bundle-Version: 0.1.0.2600
-Bundle-ClassPath: org.strategoxt.imp.metatooling/
-Require-Bundle: org.eclipse.imp.runtime,
- org.spoofax.aterm,
+Bundle-ClassPath: src-gen/
+Require-Bundle: org.spoofax.aterm,
  org.spoofax.jsglr,
  org.spoofax.interpreter.core,
  org.spoofax.interpreter.adapter.aterm,
  org.spoofax.interpreter.library.jsglr,
- lpg.runtime,
  org.eclipse.core.runtime,
  org.eclipse.core.resources,
  org.junit,
  org.eclipse.swt,
- org.eclipse.jface,
- org.eclipse.jface.text,
- org.eclipse.ui.editors,
- org.eclipse.ui.workbench,
- org.eclipse.ui,
  org.spoofax.compiler,
- org.eclipse.ui.ide,
  org.strategoxt.imp.editors.editorservice,
- org.strategoxt.imp.runtime;bundle-version="0.1.0"
+ org.strategoxt.strcjava;bundle-version="0.1.0"
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
-Bundle-Activator: org.strategoxt.imp.metatooling.MetatoolingActivator
 Bundle-ActivationPolicy: lazy
 Bundle-Vendor: Spoofax.org
+Export-Package: org.strategoxt.imp.generator

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/Makefile
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/Makefile	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/Makefile	2009-07-20 15:43:09 UTC (rev 19746)
@@ -21,15 +21,23 @@
     -la stratego-tool-doc \
     -la stratego-sglr \
     -la stratego-rtg \
+    -la stratego-sdf \
     -la stratego-aterm \
-    -la ${HOME}/.nix-profile/lib/libstratego-sdf.la \
-    -la ${HOME}/.nix-profile/lib/libjava-front.la \
+    -I $(HOME)/.nix-profile/share/java-front \
+    -I $(HOME)/.nix-profile/share/gpp \
+    -I $(HOME)/.nix-profile/share/xml-front \
+    -I $(HOME)/.nix-profile/share/sdf-tools \
+    -I $(HOME)/.nix-profile/share/xtc \
     `pkg-config --variable=strcxtcflags strategoxt`
 
-SDFINCLUDES    = -Idef ${HOME}/.nix-profile/share/java-front-syntax/JavaMix.def \
-                 -Idef ${HOME}/.nix-profile/share/java-front/JavaEBlockMix.def \
-                 -Idef ${HOME}/.nix-profile/share/java-front/EmbeddedJavaMix.def
+JAVACFLAGS=-J-Xmx256m -J-Xms100m -J-server -J-XX:+UseParallelGC -cp $(CLASSPATH) -source 5 -nowarn
+JAVAC=`if which ecj >/dev/null; then echo ecj; else echo javac; fi`
 
+SDFINCLUDES = \
+    -Idef $(HOME)/.nix-profile/share/java-front-syntax/JavaMix.def \
+    -Idef $(HOME)/.nix-profile/share/java-front/JavaEBlockMix.def \
+    -Idef $(HOME)/.nix-profile/share/java-front/EmbeddedJavaMix.def
+
 # I don't care much for nullary constructor warnings unless it's about lowercase ones, such as 'start'
 STRCSTFU=2>&1 | grep -vE 'warning ] Nullary constructor .*[A-Z]|warning ] multiple external| \[ExtSDef\(|stratego-trm|module-name-checked|module-name-checked"' \
                  >&2
@@ -45,7 +53,7 @@
 
 all : sdf2imp java syntax
 
-java : src-gen/sdf2imp.java
+java : src-gen/org/strategoxt/imp/generator/sdf2imp.java
 
 check : all \
         tests/EditorService.runtestsuite \
@@ -54,17 +62,21 @@
         tests/test-foo.runsh
 
 sdf2imp : $(RTREES) $(SYNTAX) Makefile src/include/rtg.tbl
-	strc -i src/sdf2imp.str -o $@ $(STRINCLUDES) $(STRCFLAGS) -m main-sdf2imp $(STRCSTFU)
+	strc -i src/sdf2imp.str -o $@ $(STRINCLUDES) $(STRCFLAGS) -m main-sdf2imp \
+	     -la $(HOME)/.nix-profile/lib/libjava-front.la $(STRCSTFU)
 	rm sdf2imp.c sdf2imp.lo sdf2imp.o
 
-src-gen/sdf2imp.java : $(RTREES) $(SYNTAX) Makefile src/include/rtg.tbl
-	[ -e strategoxt.jar ] || (echo "ERROR: Missing file strategoxt.jar. Please copy/link it to this directory"; exit 1)
-	java -server -Xss4m -jar strategoxt.jar -i src/sdf2imp.str -o $@ $(STRINCLUDES) $(STRCFLAGS) -m main-sdf2imp $(STRCSTFU)
+%.class : %.java strategoxt.jar
+	$(JAVAC) $(JAVACFLAGS) -cp strategoxt.jar $<
 
+src-gen/org/strategoxt/imp/generator/sdf2imp.java : $(RTREES) $(SYNTAX) Makefile src/include/rtg.tbl
+	strj -i src/sdf2imp.str -o $@ $(STRINCLUDES) $(STRCFLAGS) -m main-sdf2imp \
+	     --library -la java-front -p org.strategoxt.imp.generator $(STRCSTFU)
+
 syntax : $(SYNTAX)
 
 clean :
-	rm -f src/include/sdf2imp.ctree sdf2imp $(RTREES) $(wildcard src/syntax/*.tbl) $(wildcard src/syntax/*.def) *.dep include/*.dep
+	rm -f src/include/sdf2imp.ctree sdf2imp $(RTREES) $(wildcard src/syntax/*.tbl) $(wildcard src/syntax/*.def) *.dep include/*.dep src-gen/org/strategoxt/imp/generator/sdf2imp.java src-gen/org/strategoxt/imp/generator/sdf2imp.class
 	
 # files:
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/build.properties
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/build.properties	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/build.properties	2009-07-20 15:43:09 UTC (rev 19746)
@@ -1,6 +1,5 @@
-source.org.strategoxt.imp.metatooling/ = src/
 output.org.strategoxt.imp.metatooling/ = bin/
 bin.includes = META-INF/,\
-               org.strategoxt.imp.metatooling/,\
                plugin.xml,\
-               bin/
+               bin/,\
+               src-gen/

Deleted: spoofax-imp/trunk/org.strategoxt.imp.generator/plugin.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/plugin.xml	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/plugin.xml	2009-07-20 15:43:09 UTC (rev 19746)
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<?eclipse version="3.0"?>
-
-<plugin>
-   <extension
-         point="org.eclipse.imp.runtime.languageDescription">
-      <language
-            description="sdf2imp metatooling dynamic language placeholder"
-            extensions="sdf2impbasetoo"
-            language="DynamicRootInitializer"
-            validatorClass="org.strategoxt.imp.metatooling.loading.StartupDescriptorValidator"
-            validator=     "org.strategoxt.imp.metatooling.loading.StartupDescriptorValidator"
-            >
-            <!-- The validator class is used to start the dynamic loader       -->
-            <!-- "validator" is wat imp currently (incorrectly) tries to load) -->
-      </language>
-   </extension>
-   <extension
-         point="org.eclipse.ui.newWizards">
-      <primaryWizard
-            id="org.strategoxt.imp.metatooling.wizards.NewEditorWizard">
-      </primaryWizard>
-      <wizard
-            class="org.strategoxt.imp.metatooling.wizards.NewEditorWizard"
-            icon="icons/sample.gif"
-            id="org.strategoxt.imp.metatooling.wizards.NewEditorWizard"
-            name="Spoofax/IMP editor project"
-            project="true">
-      </wizard>
-   </extension>
-   
-</plugin>

Copied: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/sdf-options.str (from rev 19706, strategoxt/trunk/sdf-front/xtc/sdf-options.str)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/sdf-options.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/sdf-options.str	2009-07-20 15:43:09 UTC (rev 19746)
@@ -0,0 +1,28 @@
+/**
+ * @todo Import sdf/tool/options and remove definitions.
+ */
+module sdf2imp/lib/sdf-options // sdf-options
+strategies
+
+  sdf-main-module-option =
+    sdf-main-module-option(!"Specify main module in sdf definition")
+
+  sdf-main-module-option(s) =
+    ArgOption("-m" + "--main"
+    , where(<set-config> (SdfMainModuleFlag(), <id>))
+    , <concat-strings> ["-m mod | --main mod   ", <s> (), " [Main]"]
+    )
+
+  pass-sdf-main-module =
+    !["--main", <get-sdf-main-module>]
+
+  get-sdf-main-module =
+    <get-config> SdfMainModuleFlag() <+ !"Main"
+
+  sdf-main-module-error =
+      say(!<concat-strings> ["** ERROR -- Specified main module (", <get-sdf-main-module> (), ") not found in definition"])
+    ; fail
+
+signature
+  constructors
+    SdfMainModuleFlag : Flag


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/sdf-options.str
___________________________________________________________________
Added: svn:mergeinfo
   + /strategoxt/branches/strategoxt-annos/sdf-front/xtc/sdf-options.str:19217-19721
/strategoxt/branches/strategoxt-with/sdf-front/xtc/sdf-options.str:18038-18120

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/xml-doc2abox.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/xml-doc2abox.str	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/xml-doc2abox.str	2009-07-20 15:43:09 UTC (rev 19746)
@@ -2,7 +2,7 @@
 
 imports 
   xml-doc 
-  Box 
+  Box
   libstratego-lib
   
 strategies

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	2009-07-20 15:43:09 UTC (rev 19746)
@@ -6,7 +6,6 @@
   libstratego-rtg
 
   libjava-front
-  sdf-options
   
   EditorService
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-controller.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-controller.str	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-controller.str	2009-07-20 15:43:09 UTC (rev 19746)
@@ -3,7 +3,6 @@
 imports
   libstratego-lib
   libstratego-xtc
-  sdf-options
   
   sdf2imp/lib/RTG
     

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/.project
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/.project	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/.project	2009-07-20 15:43:09 UTC (rev 19746)
@@ -20,15 +20,9 @@
 			<arguments>
 			</arguments>
 		</buildCommand>
-		<buildCommand>
-			<name>org.spoofax.editor.builder.stratego</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
 		<nature>org.eclipse.jdt.core.javanature</nature>
-		<nature>org.spoofax.editor.nature.stratego</nature>
 	</natures>
 </projectDescription>

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF	2009-07-20 15:43:09 UTC (rev 19746)
@@ -2,9 +2,11 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: Spoofax/IMP Metatooling
 Bundle-SymbolicName: org.strategoxt.imp.metatooling;singleton:=true
-Bundle-Version: 0.1.0.2505
+Bundle-Version: 0.1.0.2600
 Bundle-ClassPath: org.strategoxt.imp.metatooling/
-Require-Bundle: org.eclipse.imp.runtime,
+Require-Bundle: org.strategoxt.imp.runtime;bundle-version="0.1.0",
+ org.strategoxt.imp.generator;bundle-version="0.1.0",
+ org.eclipse.imp.runtime,
  org.spoofax.aterm,
  org.spoofax.jsglr,
  org.spoofax.interpreter.core,
@@ -23,7 +25,7 @@
  org.spoofax.compiler,
  org.eclipse.ui.ide,
  org.strategoxt.imp.editors.editorservice,
- org.strategoxt.imp.runtime;bundle-version="0.1.0"
+ org.strategoxt.strcjava;bundle-version="0.1.0"
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
 Bundle-Activator: org.strategoxt.imp.metatooling.MetatoolingActivator
 Bundle-ActivationPolicy: lazy

Deleted: spoofax-imp/trunk/org.strategoxt.imp.metatooling/Makefile
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/Makefile	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/Makefile	2009-07-20 15:43:09 UTC (rev 19746)
@@ -1,110 +0,0 @@
-# HACK: Assume nix installation in Makefile
-
-STRS     = $(wildcard src/*.str) \
-           $(wildcard src/sdf2imp/*.str) \
-           $(wildcard src/sdf2imp/lib/*.str) \
-           $(wildcard src/sdf2imp/project/*.str) \
-           $(wildcard src/sdf2imp/parser/*.str) \
-           $(wildcard src/sdf2imp/util/*.str) \
-           $(wildcard src/sdf2imp/services/*.str)           
-
-RTREES = $(STRS:.str=.rtree)
-
-SDFS     = $(wildcard src/syntax/*.sdf)
-
-SYNTAX   = src/syntax/EditorService.tbl src/syntax/EditorService.pp src/syntax/EditorService-pretty.pp.af src/syntax/EditorService.str src/syntax/Stratego-Java-EditorService.tbl
-
-STRCFLAGS = \
-	-la stratego-xtc \
-    -la stratego-lib \
-    -la stratego-gpp \
-    -la stratego-tool-doc \
-    -la stratego-sglr \
-    -la stratego-rtg \
-    -la stratego-aterm \
-    -la ${HOME}/.nix-profile/lib/libstratego-sdf.la \
-    -la ${HOME}/.nix-profile/lib/libjava-front.la \
-    `pkg-config --variable=strcxtcflags strategoxt`
-
-SDFINCLUDES    = -Idef ${HOME}/.nix-profile/share/java-front-syntax/JavaMix.def \
-                 -Idef ${HOME}/.nix-profile/share/java-front/JavaEBlockMix.def \
-                 -Idef ${HOME}/.nix-profile/share/java-front/EmbeddedJavaMix.def
-
-# I don't care much for nullary constructor warnings unless it's about lowercase ones, such as 'start'
-STRCSTFU=2>&1 | grep -vE 'warning ] Nullary constructor .*[A-Z]|warning ] multiple external| \[ExtSDef\(|stratego-trm|module-name-checked|module-name-checked"' \
-                 >&2
-
-STRINCLUDES = \
-	-I $(HOME)/.nix-profile/share/sdf/xml-front \
-	-I $(HOME)/.nix-profile/share/sdf/gpp \
-	-I $(HOME)/.nix-profile/share/sdf/stratego-regular \
-	-I $(HOME)/.nix-profile/share/sdf/sdf-front/ \
-	-I src/syntax \
-    `pkg-config --variable=strcflags java-front`
-
-all : sdf2imp src/include/sdf2imp.ctree syntax
-
-check : all \
-        tests/EditorService.runtestsuite \
-        tests/test-editor-descriptor.runsh \
-        tests/test-stratego-java.runsh \
-        tests/test-foo.runsh
-
-sdf2imp : $(RTREES) $(SYNTAX) Makefile src/include/rtg.tbl
-	strc -i src/sdf2imp.str -o $@ $(STRINCLUDES) $(STRCFLAGS) -m main-sdf2imp $(STRCSTFU)
-	rm sdf2imp.c sdf2imp.lo sdf2imp.o
-
-sdf2imp.java : $(RTREES) $(SYNTAX) Makefile src/include/rtg.tbl
-	[ -e strategoxt.jar ] || (echo "ERROR: Missing file strategoxt.jar. Please copy/link it to this directory"; exit 1)
-	java -server -Xss4m -jar strategoxt.jar -i src/sdf2imp.str -o $@ $(STRINCLUDES) $(STRCFLAGS) -m main-sdf2imp $(STRCSTFU)
-
-syntax : $(SYNTAX)
-
-clean :
-	rm -f src/include/sdf2imp.ctree sdf2imp $(RTREES) $(wildcard src/syntax/*.tbl) $(wildcard src/syntax/*.def) *.dep include/*.dep
-	
-# files:
-
-% : %.str $(STRS)
-
-%.rtree : %.str $(SYNTAX)
-	@parse-stratego -i $< -o $@ $(STRINCLUDES)
-
-src/include/sdf2imp.ctree : sdf2imp
-	strc -F --library -i src/sdf2imp.str -o $@ $(STRINCLUDES) $(STRCSTFU)
-
-%.pp : %.def
-	ppgen -i $< -o $@
-
-%.pp.af : %.pp
-	parse-pp-table -i $< -o $@
-
-%.str : %.rtg
-	rtg2sig -i $< -o $@
-
-%.rtg : %.def
-	sdf2rtg -i $< -o $@ -m `basename $*` --ignore-missing-cons
-
-%.runtestsuite : %.testsuite
-	parse-unit --no-heuristic-filters -i $< -p src/syntax/EditorService.tbl
-
-%.runsh : %.sh
-	sh $<
-
-src/syntax/EditorService.def : src/syntax/EditorService.sdf $(SDFS)
-	pack-sdf -i $< -o $@ -I src/syntax
-
-src/syntax/EditorService.tbl : src/syntax/EditorService.def
-	sdf2table -m EditorService -i $< -o $@
-
-src/syntax/Stratego-Java-EditorService.def : src/syntax/Stratego-Java-EditorService.sdf $(SDFS)
-	pack-sdf -i $< -o $@ -I src/syntax $(SDFINCLUDES)
-
-src/syntax/Stratego-Java-EditorService.tbl : src/syntax/Stratego-Java-EditorService.def
-	sdf2table -m Stratego-Java-EditorService -i $< -o $@
-
-# We need a better solution for this
-src/include/rtg.tbl : ~/.nix-profile/share/sdf/stratego-regular/rtg.tbl
-	[ -e src/include ] || mkdir src/include
-	baf2trm  -i $< -o $@ # cp $< $@
-

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java	2009-07-17 14:32:55 UTC (rev 19735)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java	2009-07-20 15:43:09 UTC (rev 19746)
@@ -12,18 +12,17 @@
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.core.runtime.Path;
-import org.spoofax.interpreter.core.Interpreter;
-import org.spoofax.interpreter.core.InterpreterException;
-import org.spoofax.interpreter.core.InterpreterExit;
-import org.spoofax.interpreter.library.LoggingIOAgent;
 import org.spoofax.interpreter.terms.IStrategoString;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.strj;
 import org.strategoxt.imp.editors.editorservice.EditorServiceParseController;
-import org.strategoxt.imp.metatooling.MetatoolingActivator;
+import org.strategoxt.imp.generator.sdf2imp;
 import org.strategoxt.imp.metatooling.loading.DynamicDescriptorUpdater;
 import org.strategoxt.imp.runtime.Debug;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.parser.ast.AstMessageHandler;
-import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.StrategoExit;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>
@@ -46,25 +45,22 @@
 	private final AstMessageHandler messageHandler =
 		new AstMessageHandler(AstMessageHandler.ANALYSIS_MARKER_TYPE);
 	
-	private final Interpreter builder;
+	private final Context context;
 	
+	private final FileTrackingIOAgent agent;
+	
 	private final DynamicDescriptorUpdater loader;
 	
 	public DynamicDescriptorBuilder(DynamicDescriptorUpdater loader) {
 		try {
 			this.loader = loader;
 			
-			Debug.startTimer("Loading dynamic editor builder");
-			
-			EditorIOAgent agent = new FileTrackingIOAgent();		
+			agent = new FileTrackingIOAgent();		
 			agent.setDescriptor(EditorServiceParseController.getDescriptor());
-			builder = Environment.createInterpreter();
-			builder.setIOAgent(agent);
-			Environment.addToInterpreter(builder, MetatoolingActivator.getResourceAsStream("/include/sdf2imp.ctree"));
+			context = new Context(Environment.getTermFactory());
+			context.setIOAgent(agent);
 			
-			Debug.stopTimer("Successfully loaded dynamic editor builder");
-			
-		} catch (Throwable e) {
+		} catch (Throwable e) { // (catch classes not loading, etc.)
 			Environment.logException("Unable to initialize dynamic builder", e);
 			throw new RuntimeException("Unable to initialize dynamic builder", e);
 		}
@@ -86,8 +82,8 @@
 					}
 				}
 			} else if (!isMainFile(filename)) {
-				// XXX: Find the corresponding main file when a file hasn't been loaded before
-				Environment.logException("Could not resolve dependencies for updated file " + resource.getName());
+				// Simply ignore non main files for now
+				// Environment.logException("Could not resolve dependencies for updated file " + resource.getName());
 			}
 			
 			if (isMainFile(filename) && !upToDateMainFiles.contains(resource)) {
@@ -114,10 +110,9 @@
 		try {
 			Environment.assertLock();
 			messageHandler.clearMarkers(mainFile);
-			boolean success = invokeBuilder(mainFile);
-		
-			if (!success) {
-				String log = ((LoggingIOAgent) builder.getIOAgent()).getLog().trim();
+			IStrategoTerm result = invokeBuilder(mainFile);
+			if (result == null) {
+				String log = agent.getLog().trim();
 				messageHandler.addMarkerFirstLine(mainFile,
 						"Unable to build descriptor: \n" + log, SEVERITY_ERROR);
 				return;
@@ -125,19 +120,16 @@
 			
 			updateDependencies(mainFile);
 			
+			String resultPath = ((IStrategoString) result).stringValue();
+			IResource packedDescriptor = mainFile.getParent().getFile(Path.fromOSString(resultPath));
+			loader.loadPackedDescriptor(packedDescriptor);
+			
 			// XXX: The generated file should be refreshed after rebuilding
 			
-		} catch (InterpreterException e) {
-			Environment.logException("Unable to build descriptor for " + mainFile, e);
-			messageHandler.addMarkerFirstLine(mainFile, "Internal error building descriptor:" + e, SEVERITY_ERROR);
 		} catch (IOException e) {
 			Environment.logException("Unable to build descriptor for " + mainFile, e);
 			messageHandler.addMarkerFirstLine(mainFile, "Internal error building descriptor:" + e, SEVERITY_ERROR);
 		}
-		
-		String result = ((IStrategoString) builder.current()).stringValue();
-		IResource packedDescriptor = mainFile.getParent().getFile(Path.fromOSString(result));
-		loader.loadPackedDescriptor(packedDescriptor);
 	}
 
 	/**
@@ -145,37 +137,29 @@
 	 * 
 	 * @return  <code>true</code> if successful.
 	 */
-	private boolean invokeBuilder(IResource mainFile)
-			throws IOException, InterpreterException {
-		
-		((LoggingIOAgent) builder.getIOAgent()).clearLog();
-		
+	private IStrategoTerm invokeBuilder(IResource mainFile) throws IOException {
 		IPath location = mainFile.getRawLocation();
 		String path = location.removeLastSegments(1).toOSString();
 		String filename = mainFile.getName();
+		IStrategoString input = context.getFactory().makeString(filename);
 		
-		builder.getIOAgent().setWorkingDir(path);
-		builder.setCurrent(builder.getFactory().makeString(filename));
-		builder.invoke("dr-scope-all-start");
+		agent.clearLog();
+		agent.setWorkingDir(path);
+		libstratego_lib.dr_scope_all_start_0_0.instance.invoke(context, input);
 		
-		boolean success;
-		
 		try {
 			Debug.startTimer();
-			success = builder.invoke("sdf2imp-jvm");
-		} catch (InterpreterExit e) {
-			success = e.getValue() == InterpreterExit.SUCCESS;
+			return sdf2imp.sdf2imp_jvm_0_0.instance.invoke(context, input);
+		} catch (StrategoExit e) {
+			Environment.logException("Unexpected exit in dynamic builder", e);
+			return null;
 		} finally {
 			Debug.stopTimer("Invoked descriptor builder for " + mainFile.getName());
-			builder.invoke("dr-scope-all-end");
+			libstratego_lib.dr_scope_all_end_0_0.instance.invoke(context, input);
 		}
-		
-		return success;
 	}
 
 	private void updateDependencies(IResource mainFile) {
-		FileTrackingIOAgent agent = (FileTrackingIOAgent) builder.getIOAgent();
-		
 		// Remove old dependencies		
 		for (String oldDependency : includedEditorFiles.get(mainFile)) {
 			Set<IResource> set = mainEditorFiles.get(oldDependency);
@@ -201,7 +185,7 @@
 	
 	private static boolean isMainFile(String file) {
 		// TODO: Determine if a file is the main descriptor file by its contents?
-		// InputStream stream = builder.getIOAgent().openInputStream(file);
+		// InputStream stream = agent.openInputStream(file);
 		
 		return file.matches(".*(-Main|\\.main)\\.esv");
 	}

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorUpdater.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorUpdater.java	2009-07-17 14:32:55 UTC (rev 19735)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorUpdater.java	2009-07-20 15:43:09 UTC (rev 19746)
@@ -91,7 +91,8 @@
 		// FIXME: The builder should refresh any build resources (i.e., .packed.esv)
 		if (resource.getName().endsWith(".packed.esv")) {
 			monitor.subTask("Loading " + resource.getName());
-			loadPackedDescriptor(resource);
+			if (resource.exists())
+				loadPackedDescriptor(resource);
 		} else if (!startup) {
 			// Re-build descriptor if resource changed (but not if we're starting up)
 			getBuilder().updateResource(resource, monitor);

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-07-17 14:32:55 UTC (rev 19735)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-07-20 15:43:09 UTC (rev 19746)
@@ -20,14 +20,13 @@
 import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.ide.IDE;
-import org.spoofax.interpreter.core.Interpreter;
-import org.spoofax.interpreter.core.InterpreterException;
-import org.spoofax.interpreter.core.InterpreterExit;
 import org.strategoxt.imp.editors.editorservice.EditorServiceParseController;
-import org.strategoxt.imp.metatooling.MetatoolingActivator;
+import org.strategoxt.imp.generator.sdf2imp;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
-import org.strategoxt.imp.runtime.stratego.adapter.WrappedAstNodeFactory;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.StrategoException;
+import org.strategoxt.lang.StrategoExit;
 
 /**
  * 
@@ -81,28 +80,23 @@
 			return false;
 		} catch (InvocationTargetException e) {
 			Throwable realException = e.getTargetException();
-			MessageDialog.openError(getShell(), "Error", realException.getMessage());
+			Environment.logException("Exception while creating new project", realException);
+			MessageDialog.openError(getShell(), "Error: " + realException.getClass().getName(), realException.getMessage());
 			return false;
 		}
 		return true;
 	}
 	
-	/**
-	 * The worker method. It will find the container, create the
-	 * file if missing or just replace its contents, and open
-	 * the editor on the newly created file.
-	 */
-
-	private void doFinish(String name, String packageName, String extensions, IProgressMonitor monitor) throws InterpreterException, IOException, CoreException {
+	private void doFinish(String name, String packageName, String extensions, IProgressMonitor monitor) throws IOException, CoreException {
 		final int TASK_COUNT = 5;
 		monitor.beginTask("Creating " + name + " project", TASK_COUNT);
 		
 		monitor.setTaskName("Preparing project builder...");
-		Interpreter builder = Environment.createInterpreter();
-		Environment.addToInterpreter(builder, MetatoolingActivator.getResourceAsStream("/include/sdf2imp.ctree"));
+		Context context = new Context(Environment.getTermFactory());
+		sdf2imp.init(context);
 		EditorIOAgent agent = new EditorIOAgent();		
-		agent.setDescriptor(EditorServiceParseController.getDescriptor());
-		builder.setIOAgent(agent);
+		agent.setDescriptor(EditorServiceParseController.getDescriptor()); // TODO: remove this?
+		context.setIOAgent(agent);
 		monitor.worked(1);
 
 		monitor.setTaskName("Creating project...");
@@ -111,22 +105,13 @@
 		project.create(null);
 		project.open(null);
 		try {
-			WrappedAstNodeFactory terms = Environment.getTermFactory();
-			builder.setCurrent(terms.makeList(
-				terms.makeString("sdf2imp"),
-				terms.makeString("-m"), terms.makeString(name),
-				terms.makeString("-n"), terms.makeString(packageName),
-				terms.makeString("-e"), terms.makeString(extensions)
-			));
 			agent.setWorkingDir(project.getLocation().toOSString());
-			synchronized (Environment.getSyncRoot()) {
-				try {
-					builder.invoke("main-sdf2imp");
-				} catch (InterpreterExit e) {
-					if (e.getValue() != 0) {
-						throw new InterpreterException("Project builder failed. Log follows\n\n"
-								+ agent.getLog());
-					}
+			try {
+				sdf2imp.mainNoExit(context, "-m", name, "-n", packageName, "-e", extensions);
+			} catch (StrategoExit e) {
+				if (e.getValue() != 0) {
+					throw new StrategoException("Project builder failed. Log follows\n\n"
+							+ agent.getLog(), e);
 				}
 			}
 			project.refreshLocal(IResource.DEPTH_INFINITE, monitor);

Deleted: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/RTG.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/RTG.str	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/RTG.str	2009-07-20 15:43:09 UTC (rev 19746)
@@ -1,45 +0,0 @@
-module sdf2imp/lib/RTG
-
-signature
-  constructors
-    Labelled   : Term * AnnoTreeFN -> Labelled
-    Ref        : NonTerm -> TreeFN
-    Appl       : Term * List(AnnoTreeFN) -> TreeFN
-    Annotated  : TreeFN * List(Labelled) -> AnnoTreeFN
-               : TreeFN -> AnnoTreeFN
-    ProdRule   : NonTerm * List(AnnoTreeFN) -> ProdRule
-    ProdRules  : List(ProdRule) -> ProdRules
-    Start      : List(NonTerm) -> Start
-    RTG        : Start * ProdRules -> RTG
-    Generated  : TreeFN -> NonTerm
-    Set        : List(NonTerm) -> NonTerm
-    Int        : NonTerm
-    String     : NonTerm
-    Nonterm    : Id -> NonTerm
-    IntTerm    : Term
-    StringTerm : Term
-    NoneTerm   : Term
-    SomeTerm   : Term
-    TupleTerm  : IntConst -> Term
-    NilTerm    : Term
-    ConsTerm   : Term
-    ConcTerm   : Term
-    Term       : Id -> Term
-               : String -> IntConst
-    EscapeSeq  : Int -> QuotedIdPart
-    Chars      : String -> QuotedIdPart
-    Quoted     : List(QuotedIdPart) -> Id
-    Plain      : String -> Id
-
-
-signature
-  constructors
-    Some : a -> Option(a)
-    None : Option(a)
-
-
-signature
-  constructors
-    Cons : a * List(a) -> List(a)
-    Nil  : List(a)
-    Conc : List(a) * List(a) -> List(a)

Deleted: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.meta
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.meta	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/core-sdf-grammar2rtg.meta	2009-07-20 15:43:09 UTC (rev 19746)
@@ -1 +0,0 @@
-Meta([Syntax("Stratego-rtg")])
\ No newline at end of file

Deleted: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/debug.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/debug.str	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/debug.str	2009-07-20 15:43:09 UTC (rev 19746)
@@ -1,129 +0,0 @@
-/**
- * Debugging strategies, originally defined in dryad-compiler/lib-ext/debug.
- *
- * @author Lennart Kats <lennart add lclnet.nl>
- */
-module sdf2imp/lib/debug // dryad-compiler/lib-ext/debug
-
-overlays
-  MAX_TINY_LIST_PARTS         = 3
-  MAX_TINY_LIST_PARTS_1       = 4 // += 1
-  MAX_TINY_LIST_PARTS_COMMAS  = 6 // *= 2
-
-strategies
-
-  /**
-   * Writes a message to the standard output, without failing or changing the current term.
-   * Only executed if the verbosity level is 2.
-   */
-  verbose-msg(a) =
-    where(if-verbose2(<debug> <as-string(a)>))
-
-  verbose-msg(a, b) =
-    where(if-verbose2(<verbose-msg> [<as-string(a)>, <as-string(b)>]))
-
-  verbose-msg(a, b, c) =
-    where(if-verbose2(<verbose-msg> [<as-string(a)>, <as-string(b)>, <as-string(c)>]))
-
-  verbose-msg(a, b, c, d) =
-    where(if-verbose2(<verbose-msg> [<as-string(a)>, <as-string(b)>, <as-string(c)>,
-                      <as-string(d)>]))
-
-  verbose-msg(a, b, c, d, e) =
-    where(if-verbose2(<verbose-msg> [<as-string(a)>, <as-string(b)>, <as-string(c)>,
-                     <as-string(d)>, <as-string(e)>]))
-
-  verbose-msg(a, b, c, d, e, f) =
-    where(if-verbose2(<verbose-msg> [<as-string(a)>, <as-string(b)>, <as-string(c)>,
-                     <as-string(d)>, <as-string(e)>, <as-string(f)>]))
-
-  verbose-msg(a, b, c, d, e, f, g) =
-    where(if-verbose2(<verbose-msg> [<as-string(a)>, <as-string(b)>, <as-string(c)>,
-                     <as-string(d)>, <as-string(e)>, <as-string(f)>, <as-string(g)>]))
-
-  verbose-msg(a, b, c, d, e, f, g, h) =
-    where(if-verbose2(<verbose-msg> [<as-string(a)>, <as-string(b)>, <as-string(c)>,
-                     <as-string(d)>, <as-string(e)>, <as-string(f)>, <as-string(g)>,
-                     <as-string(h)>]))
-
-  as-string(s) = s; as-string <+ !"<?>"
-
-  as-string = is-string <+ write-to-string
-
-  verbose-msg = 
-    if-verbose2(
-      map(is-string <+ write-to-string);
-      separate-by(|" ");
-      concat-strings;
-      debug
-    )
-  
-  with(s) = where(verify(s, !"Internal error: with clause failed unexpectedly"))
-
-  verify(s) =
-    ?input; verify(s, !"Internal error: failure unexpected")
-
-  verify(s,message) =
-    s
-  <+
-    log(|Critical(), <as-string(message)>, <id>);
-    prim("SSL_stacktrace_get_all_frame_names");
-    report-failure
-
-  verify(s,m1,m2) =
-    verify(s, <conc-strings> (<as-string(m1)>, " ", <as-string(m2)>))
-
-  verify(s,m1,m2,m3) =
-    verify(s, <conc-strings> (<as-string(m1)>, " ", <as-string(m2)>, " ", <as-string(m3)>))
-
-  /**
-   * Same as debug, but prints a abbreviated representation of the ATerm.
-   * @see to-tiny-string
-   */
-  tiny-debug =
-    where(to-tiny-string; debug)
-  
-  tiny-debug(prefix) = 
-    where(<conc-strings; debug> (<as-string(prefix)>, <to-tiny-string>))
-  to-tiny-string =
-    to-tiny-list;    
-    <conc-strings> ("[", <concat-strings>, "]")
-  <+
-    ?name#(<id>);
-    if [] + () then
-      <strip-annos; as-string> name
-    else
-      to-tiny-list;      
-      <conc-strings> (name, "(", <concat-strings>, ")")
-    end
-
-  to-tiny-list =
-    where(
-      try(
-        overflow-by-one := <length => MAX_TINY_LIST_PARTS_1()>
-      <+
-        overflow := <gt> (<length>, MAX_TINY_LIST_PARTS())
-      )
-    );
-    try(take(|MAX_TINY_LIST_PARTS()));
-    
-    map(to-tiny-substring);
-    separate-by(|",");      
-
-    switch id
-      case !overflow-by-one:
-        <conc> (<id>, [",_"])
-      case !overflow:
-        <conc> (<id>, [",.."])
-      otherwise:
-        id
-    end
-
-  to-tiny-substring =
-     [id]; !"[_]"
-  <+ Hd; !"[..]"
-  <+ Fst; !"(..)"
-  <+ (); !"()"
-  <+ []; !"[]"
-  <+ strip-annos; ?<as-string>#(_)
-

Deleted: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/xml-doc2abox.meta
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/xml-doc2abox.meta	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/xml-doc2abox.meta	2009-07-20 15:43:09 UTC (rev 19746)
@@ -1 +0,0 @@
-Meta([Syntax("Stratego-Box")])

Deleted: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/xml-doc2abox.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/xml-doc2abox.str	2009-07-20 15:42:21 UTC (rev 19745)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/lib/xml-doc2abox.str	2009-07-20 15:43:09 UTC (rev 19746)
@@ -1,135 +0,0 @@
-module sdf2imp/lib/xml-doc2abox // based on xml-front
-
-imports 
-  xml-doc 
-  Box 
-  libstratego-lib
-  
-strategies
-
-  main-xml-doc2abox =
-    io-wrap(xml-doc2abox)
-
-  xml-doc2abox =
-      topdown(try(repeat(xml-to-box)))
-
-rules
-
-  xml-to-box :
-    Document(pro, e, epi) -> box |[ V vs=1 [ ~pro ~e ~epi ] ]|
-
-  xml-to-box :
-    Prologue(xmldec, miscs, doctype) -> box |[ V vs=0 [ ~*lines ] ]|
-      where <concat> 
-              [ <get-prolog-lines> xmldec

(489 diff lines omitted)


From m.dejonge at tudelft.nl  Tue Jul 21 12:12:26 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 21 Jul 2009 10:12:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19749 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907211010.n6LAAPsx021280@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-21 10:12:26 +0000 (Tue, 21 Jul 2009)
New Revision: 19749

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19749&view=rev

Added:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipSuggestion.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java

Log:
refactoring region algorithm

Changes:

Added: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipSuggestion.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipSuggestion.java	                        (rev 0)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipSuggestion.java	2009-07-21 10:12:26 UTC (rev 19749)
@@ -0,0 +1,22 @@
+package org.spoofax.jsglr;
+
+public class StructureSkipSuggestion {
+    
+    private IndentInfo startSkip;
+    private IndentInfo endSkip;   
+    
+    public IndentInfo getStartSkip() {
+        return startSkip;
+    }
+    public void setStartSkip(IndentInfo startSkip) {
+        this.startSkip = startSkip;
+    }
+    public IndentInfo getEndSkip() {
+        return endSkip;
+    }
+    public void setEndSkip(IndentInfo endSkip) {
+        this.endSkip = endSkip;
+    }
+    
+
+}

Added: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	                        (rev 0)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-21 10:12:26 UTC (rev 19749)
@@ -0,0 +1,378 @@
+package org.spoofax.jsglr;
+
+import java.awt.image.IndexColorModel;
+import java.io.IOException;
+import java.util.ArrayList;
+
+public class StructureSkipper {
+    
+    enum indentShift{
+        INDENT,
+        DEDENT,
+        SAME_INDENT
+    }
+    
+    
+    private SGLR myParser;
+    private IndentationHandler skipIndentHandler;
+    
+    private ParserHistory getHistory() {
+        return myParser.getHistory();
+    }
+    
+    public StructureSkipper(SGLR sglr){   
+        myParser=sglr;
+        skipIndentHandler=new IndentationHandler();
+    }
+    
+    public ArrayList<StructureSkipSuggestion> findSkipForwardSuggestions(IndentInfo startLine) throws IOException{
+        ArrayList<IndentInfo> endLocations=getEndOfSkipSuggestions(startLine);
+        ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
+        for (IndentInfo endSkip : endLocations) {
+            StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
+            skipConstruct.setStartSkip(startLine);
+            endSkip.fillStackNodes(startLine.getStackNodes());
+            skipConstruct.setEndSkip(endSkip);
+            skipSuggestions.add(skipConstruct);
+        }
+        return skipSuggestions;
+    }    
+    
+    public ArrayList<StructureSkipSuggestion> findSkipPreviousSuggestions(IndentInfo endOfSkipLine) throws IOException{
+        IndentInfo endLocation=endOfSkipLine;
+        if(isErrorOnClosingLine(endOfSkipLine)){
+            getHistory().setTokenIndex(endOfSkipLine.getTokensSeen());
+            endLocation=skipLine(endOfSkipLine.getLineNumber());
+        }
+        ArrayList<IndentInfo> startLocations=getBeginOfSkipSuggestions(endOfSkipLine);
+        ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
+        for (IndentInfo startSkip : startLocations) {
+            StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
+            skipConstruct.setStartSkip(startSkip);            
+            skipConstruct.setEndSkip(endLocation);
+            skipSuggestions.add(skipConstruct);
+        }
+        return skipSuggestions;
+    } 
+
+    public ArrayList<StructureSkipSuggestion> findSkipParentSuggestions(IndentInfo startLine) throws IOException{
+        ArrayList<IndentInfo> endLocations=getParentEndSuggestions(startLine);
+        ArrayList<IndentInfo> startLocations=getParentBeginSuggestions(startLine);
+        ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
+        for (IndentInfo startSkip : startLocations) {
+            for (IndentInfo endSkip : endLocations) {
+                StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
+                skipConstruct.setStartSkip(startSkip);
+                endSkip.fillStackNodes(startSkip.getStackNodes());
+                skipConstruct.setEndSkip(endSkip);
+                skipSuggestions.add(skipConstruct);
+            }
+        }
+        return skipSuggestions;
+    }    
+    
+    public ArrayList<StructureSkipSuggestion> findForwardSibblingSuggests(IndentInfo startLine) throws IOException{        
+        ArrayList<IndentInfo> startLocations=getBeginOfSkipSuggestions(startLine);
+        ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
+        IndentInfo forwardPosition = startLine;
+        int loopCount=0;
+        while(loopCount<4 && forwardPosition.getIndentValue()==startLine.getIndentValue()) {
+            ArrayList<IndentInfo> endLocations=getEndOfSkipSuggestions(forwardPosition);
+            forwardPosition =endLocations.get(endLocations.size()-1);
+            for (IndentInfo startSkip : startLocations) {
+                for (IndentInfo endSkip : endLocations) {
+                    StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
+                    skipConstruct.setStartSkip(startSkip);
+                    endSkip.fillStackNodes(startSkip.getStackNodes());
+                    skipConstruct.setEndSkip(endSkip);
+                    skipSuggestions.add(skipConstruct);
+                }
+            }
+            loopCount++;
+        }        
+        return skipSuggestions;
+    }   
+    
+    public ArrayList<StructureSkipSuggestion> findBackwardSibblingSuggests(IndentInfo startLine) throws IOException {
+        ArrayList<IndentInfo> endSkipLocations=getEndOfSkipSuggestions(startLine);
+        ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
+        IndentInfo backwardPosition = startLine;
+        int loopCount=0;
+        while(loopCount<4) {
+            ArrayList<IndentInfo> startOfSkipLocations=getBeginOfSkipSuggestions(backwardPosition);
+            if(startOfSkipLocations.isEmpty())
+                break;
+            backwardPosition =startOfSkipLocations.get(startOfSkipLocations.size()-1);
+            for (IndentInfo startSkip : startOfSkipLocations) {
+                for (IndentInfo endSkip : endSkipLocations) {
+                    StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
+                    skipConstruct.setStartSkip(startSkip);
+                    endSkip.fillStackNodes(startSkip.getStackNodes());
+                    skipConstruct.setEndSkip(endSkip);
+                    skipSuggestions.add(skipConstruct);
+                }
+            }
+            loopCount++;
+        }        
+        return skipSuggestions;
+    }
+
+    public ArrayList<StructureSkipSuggestion> findSurroundingSibblingSuggests(IndentInfo startLine) throws IOException {        
+        ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
+        IndentInfo backwardPosition = startLine;
+        IndentInfo forwardPosition = startLine;        
+        ArrayList<IndentInfo> endSkipLocations = getEndOfSkipSuggestions(forwardPosition);
+        ArrayList<IndentInfo> startOfSkipLocations = getBeginOfSkipSuggestions(backwardPosition);
+        boolean forWardsOn=true;
+        boolean backwsEndReached=false;
+        boolean forwardsEndReached=false;
+        int loopCount=0;
+        boolean doNext=false;
+        while(loopCount<8 && !(backwsEndReached && forwardsEndReached)) {
+            doNext=false;
+            if(forWardsOn){
+                if(forwardPosition.getIndentValue()==startLine.getIndentValue()){
+                    endSkipLocations=getEndOfSkipSuggestions(forwardPosition);
+                    forwardPosition =endSkipLocations.get(endSkipLocations.size()-1);
+                    forWardsOn=backwsEndReached;
+                }
+                else{
+                    forWardsOn=false;
+                    forwardsEndReached=true;
+                    doNext=true;
+                }
+            }
+            else{
+                ArrayList<IndentInfo> newStartOfSkipLocations=getBeginOfSkipSuggestions(backwardPosition);
+                if(!newStartOfSkipLocations.isEmpty()){
+                    startOfSkipLocations = newStartOfSkipLocations;
+                    backwardPosition =startOfSkipLocations.get(startOfSkipLocations.size()-1);
+                    forWardsOn=!forwardsEndReached;
+                }
+                else{
+                    backwsEndReached=true;
+                    forWardsOn=true;
+                    doNext=true;
+                }
+            }
+            if(!doNext){
+                for (IndentInfo startSkip : startOfSkipLocations) {
+                    for (IndentInfo endSkip : endSkipLocations) {
+                        StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
+                        skipConstruct.setStartSkip(startSkip);
+                        endSkip.fillStackNodes(startSkip.getStackNodes());
+                        skipConstruct.setEndSkip(endSkip);
+                        skipSuggestions.add(skipConstruct);
+                    }
+                }                
+            loopCount++;
+            }
+        }        
+        return skipSuggestions;
+    }
+
+    /*
+     * * 
+     */
+    private ArrayList<IndentInfo> getEndOfSkipSuggestions(IndentInfo startLine) throws IOException{
+        getHistory().setTokenIndex(startLine.getTokensSeen());
+        int indentStartLine=startLine.getIndentValue();        
+        boolean hasIndentChilds=false;
+        boolean isSecondLine=true;
+        ArrayList<IndentInfo> endLocations=new ArrayList<IndentInfo>();
+        IndentInfo nextLine = skipLine(startLine.getLineNumber());
+        while(myParser.currentToken!=SGLR.EOF){            
+            int indentSkipPosition=nextLine.getIndentValue();
+            indentShift shift=calculateShift(indentStartLine, indentSkipPosition);
+            switch (shift) {
+            case DEDENT:               
+                endLocations.add(nextLine);                
+                return endLocations;                
+            case INDENT:
+                hasIndentChilds=true;
+                break;
+            case SAME_INDENT:
+                if(isSecondLine){
+                    endLocations.add(nextLine); 
+                    if(!isOpeningLine())
+                        return endLocations;
+                }
+                else if(hasIndentChilds){
+                    if(isClosingLine()){
+                        nextLine = skipLine(nextLine.getLineNumber());
+                        if(nextLine==null)
+                            break;
+                    }
+                    endLocations.add(nextLine);
+                    return endLocations;
+                }
+                else{
+                    return endLocations;
+                }
+                break;
+            default:
+                break;
+            }
+            isSecondLine=false;
+            nextLine=skipLine(nextLine.getLineNumber());
+        }
+        endLocations.add(nextLine); //EOF
+        return endLocations;
+    } 
+    
+    private ArrayList<IndentInfo> getBeginOfSkipSuggestions(IndentInfo startLine) throws IOException{        
+        int indentStartLine=startLine.getIndentValue();
+        boolean passedOpeningLine=false;
+        boolean prevLine=true;
+        ArrayList<IndentInfo> startLocations=new ArrayList<IndentInfo>();
+        while(getHistory().getIndexConstruct()>0){
+            getHistory().setIndexConstruct(getHistory().getIndexConstruct()-1);
+            int indentSkipPosition=getHistory().getConstructPoint().getIndentValue();
+            indentShift shift=calculateShift(indentStartLine, indentSkipPosition);
+            switch (shift) {
+            case DEDENT:  
+                if(passedOpeningLine){
+                    int indexOpeningLine=getHistory().getIndexConstruct()+1;
+                    getHistory().setIndexConstruct(indexOpeningLine);
+                    startLocations.add(getHistory().getConstructPoint());                    
+                }  
+                return startLocations;                
+            case INDENT:
+                if(passedOpeningLine){
+                    int indexOpeningLine=getHistory().getIndexConstruct()+1;
+                    getHistory().setIndexConstruct(indexOpeningLine);
+                    startLocations.add(getHistory().getConstructPoint());
+                    return startLocations;
+                }                    
+                break;
+            case SAME_INDENT:
+                if(passedOpeningLine){
+                    startLocations.add(getHistory().getConstructPoint());
+                    return startLocations;
+                }
+                if(!prevLine && isOpeningLine(getHistory().getConstructPoint()))
+                {
+                        passedOpeningLine=true;
+                }
+                else if(!prevLine || !isClosingLine(getHistory().getConstructPoint())){                       
+                    startLocations.add(getHistory().getConstructPoint());
+                    return startLocations;
+                }                
+                break;
+            default:
+                break;
+            }
+            prevLine=false;
+        }
+        startLocations.add(getHistory().getConstructPoint()); //SOF
+        return startLocations;
+    }  
+    
+    private ArrayList<IndentInfo> getParentBeginSuggestions(IndentInfo startLine) throws IOException{        
+        int indentStartLine=startLine.getIndentValue();        
+        ArrayList<IndentInfo> startLocations=new ArrayList<IndentInfo>();
+        while(getHistory().getIndexConstruct()>0){
+            getHistory().setIndexConstruct(getHistory().getIndexConstruct()-1); 
+            IndentInfo currentLine=getHistory().getConstructPoint();
+            int indentSkipPosition=currentLine.getIndentValue();
+            indentShift shift=calculateShift(indentStartLine, indentSkipPosition);
+            if (shift==indentShift.DEDENT){
+                if(isOpeningLine(currentLine))
+                {
+                        IndentInfo prevLine = getHistory().getPreviousLine();
+                        if(calculateShift(currentLine.getIndentValue(), prevLine.getIndentValue())==indentShift.SAME_INDENT){
+                            startLocations.add(prevLine);
+                            return startLocations;
+                        }
+                        else{
+                            startLocations.add(currentLine);
+                            return startLocations;
+                        }
+                }
+                else {                       
+                    startLocations.add(currentLine);
+                    return startLocations;
+                }                
+              
+            }            
+        }
+        startLocations.add(getHistory().getConstructPoint()); //SOF
+        return startLocations;
+    } 
+    
+    private ArrayList<IndentInfo> getParentEndSuggestions(IndentInfo startLine) throws IOException{
+        getHistory().setTokenIndex(startLine.getTokensSeen());
+        int indentStartLine=startLine.getIndentValue();               
+        ArrayList<IndentInfo> endLocations=new ArrayList<IndentInfo>();
+        IndentInfo nextLine=skipLine(startLine.getLineNumber());
+        while(myParser.currentToken!=SGLR.EOF){            
+            int indentSkipPosition=nextLine.getIndentValue();
+            indentShift shift=calculateShift(indentStartLine, indentSkipPosition);
+            if (shift==indentShift.DEDENT) {  
+                if(isClosingLine()){
+                    nextLine=skipLine(nextLine.getLineNumber());
+                    if(nextLine==null)
+                        break;
+                }
+                endLocations.add(nextLine);                
+                return endLocations;                
+            
+            }
+            nextLine=skipLine(nextLine.getLineNumber());
+        }
+        endLocations.add(nextLine); //EOF
+        return endLocations;
+    } 
+    
+
+    private boolean isClosingLine(IndentInfo constructPoint) {
+     // TODO Language independent:
+        return getHistory().recoverTokenStream[constructPoint.getTokensSeen()]=='}';
+    }
+    
+    private boolean isErrorOnClosingLine(IndentInfo constructPoint) {
+        // TODO Language independent:
+        return getHistory().recoverTokenStream[constructPoint.getTokensSeen()]=='}';
+    }
+
+    private boolean isOpeningLine(IndentInfo constructPoint) {
+     // TODO Language independent:
+        return getHistory().recoverTokenStream[constructPoint.getTokensSeen()]=='{';
+    }
+
+    private boolean isOpeningLine() {
+     // TODO Language independent: Length reduction before or after, ATerm inspection (lexical?), settings (?)
+        return myParser.currentToken=='{';
+    }
+
+    private boolean isClosingLine() {
+        // TODO Language independent: Length reduction before or after, ATerm inspection, settings (?)
+        return myParser.currentToken=='}';
+    }    
+
+    private IndentInfo skipLine(int lineNumber) throws IOException {
+        int newLineNumber=lineNumber;
+        skipIndentHandler.setInLeftMargin(false);
+        while(myParser.currentToken!=SGLR.EOF){
+            getHistory().readRecoverToken(myParser);
+            if(myParser.currentToken=='\n')
+                newLineNumber++;
+            skipIndentHandler.updateIndentation(myParser.currentToken);
+            if(skipIndentHandler.lineMarginEnded()){
+                IndentInfo result = new IndentInfo(newLineNumber, getHistory().getTokenIndex()-1, skipIndentHandler.getIndentValue());
+                return result;
+            }            
+        }
+        return new IndentInfo(Integer.MAX_VALUE, getHistory().getTokenIndex()+1, 0);// EOF
+    }
+
+    private indentShift calculateShift(int indentStartLine, int indentSkipPosition) {
+        int difference=indentStartLine-indentSkipPosition;
+        if(difference>0)
+            return indentShift.DEDENT;
+        if(difference<0)
+            return indentShift.INDENT;
+        return indentShift.SAME_INDENT;
+    }    
+    
+}



From m.dejonge at tudelft.nl  Tue Jul 21 14:20:41 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 21 Jul 2009 12:20:41 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19752 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907211218.n6LCIfG8022734@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-21 12:20:41 +0000 (Tue, 21 Jul 2009)
New Revision: 19752

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19752&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipSuggestion.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java

Log:
control of history index to region selector

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipSuggestion.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipSuggestion.java	2009-07-21 11:20:53 UTC (rev 19751)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipSuggestion.java	2009-07-21 12:20:41 UTC (rev 19752)
@@ -3,8 +3,36 @@
 public class StructureSkipSuggestion {
     
     private IndentInfo startSkip;
-    private IndentInfo endSkip;   
+    private IndentInfo endSkip; 
+    private int indexHistoryStart;
+    private int indexHistoryEnd;
     
+    public int getIndexHistoryStart() {
+        return indexHistoryStart;
+    }
+
+
+    public void setIndexHistoryStart(int indexHistoryStart) {
+        this.indexHistoryStart = indexHistoryStart;
+    }
+
+
+    public int getIndexHistoryEnd() {
+        return indexHistoryEnd;
+    }
+
+
+    public void setIndexHistoryEnd(int indexHistoryEnd) {
+        this.indexHistoryEnd = indexHistoryEnd;
+    }
+
+
+    public StructureSkipSuggestion(){
+        indexHistoryEnd=-1;
+        indexHistoryStart=-1;
+    }
+   
+    
     public IndentInfo getStartSkip() {
         return startSkip;
     }

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-21 11:20:53 UTC (rev 19751)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-21 12:20:41 UTC (rev 19752)
@@ -25,8 +25,8 @@
         skipIndentHandler=new IndentationHandler();
     }
     
-    public ArrayList<StructureSkipSuggestion> findSkipForwardSuggestions(IndentInfo startLine) throws IOException{
-        ArrayList<IndentInfo> endLocations=getEndOfSkipSuggestions(startLine);
+    public ArrayList<StructureSkipSuggestion> getCurrentSkipSuggestions(IndentInfo startLine) throws IOException{
+        ArrayList<IndentInfo> endLocations=findCurrentEnd(startLine);
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
         for (IndentInfo endSkip : endLocations) {
             StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
@@ -38,26 +38,27 @@
         return skipSuggestions;
     }    
     
-    public ArrayList<StructureSkipSuggestion> findSkipPreviousSuggestions(IndentInfo endOfSkipLine) throws IOException{
-        IndentInfo endLocation=endOfSkipLine;
-        if(isErrorOnClosingLine(endOfSkipLine)){
-            getHistory().setTokenIndex(endOfSkipLine.getTokensSeen());
-            endLocation=skipLine(endOfSkipLine.getLineNumber());
+    public ArrayList<StructureSkipSuggestion> getPreviousSkipSuggestions(IndentInfo xxxendOfSkipLine) throws IOException{
+        int indexEnd=getHistory().getIndexLastLine();
+        IndentInfo endLocation=getHistory().getLine(indexEnd);
+        if(isErrorOnClosingLine(endLocation)){
+            getHistory().setTokenIndex(endLocation.getTokensSeen());
+            endLocation=skipLine(endLocation.getLineNumber());
         }
-        ArrayList<IndentInfo> startLocations=getBeginOfSkipSuggestions(endOfSkipLine);
+        ArrayList<Integer> startLocations=findPreviousBegin(indexEnd);
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
-        for (IndentInfo startSkip : startLocations) {
+        for (Integer startSkip : startLocations) {
             StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
-            skipConstruct.setStartSkip(startSkip);            
+            skipConstruct.setStartSkip(getHistory().getLine(startSkip));            
             skipConstruct.setEndSkip(endLocation);
             skipSuggestions.add(skipConstruct);
         }
         return skipSuggestions;
     } 
 
-    public ArrayList<StructureSkipSuggestion> findSkipParentSuggestions(IndentInfo startLine) throws IOException{
-        ArrayList<IndentInfo> endLocations=getParentEndSuggestions(startLine);
-        ArrayList<IndentInfo> startLocations=getParentBeginSuggestions(startLine);
+    public ArrayList<StructureSkipSuggestion> getParentSkipSuggestions(IndentInfo startLine) throws IOException{
+        ArrayList<IndentInfo> endLocations=findParentEnd(startLine);
+        ArrayList<IndentInfo> startLocations=findParentBegin(startLine);
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
         for (IndentInfo startSkip : startLocations) {
             for (IndentInfo endSkip : endLocations) {
@@ -71,15 +72,16 @@
         return skipSuggestions;
     }    
     
-    public ArrayList<StructureSkipSuggestion> findForwardSibblingSuggests(IndentInfo startLine) throws IOException{        
-        ArrayList<IndentInfo> startLocations=getBeginOfSkipSuggestions(startLine);
+    public ArrayList<StructureSkipSuggestion> getSibblingForwardSuggestions(IndentInfo startLine) throws IOException{        
+        ArrayList<Integer> startLocations=findPreviousBegin(getHistory().getIndexLastLine());
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
         IndentInfo forwardPosition = startLine;
         int loopCount=0;
         while(loopCount<4 && forwardPosition.getIndentValue()==startLine.getIndentValue()) {
-            ArrayList<IndentInfo> endLocations=getEndOfSkipSuggestions(forwardPosition);
+            ArrayList<IndentInfo> endLocations=findCurrentEnd(forwardPosition);
             forwardPosition =endLocations.get(endLocations.size()-1);
-            for (IndentInfo startSkip : startLocations) {
+            for (Integer startSkipIndex : startLocations) {
+                IndentInfo startSkip=getHistory().getLine(startSkipIndex);
                 for (IndentInfo endSkip : endLocations) {
                     StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
                     skipConstruct.setStartSkip(startSkip);
@@ -93,17 +95,19 @@
         return skipSuggestions;
     }   
     
-    public ArrayList<StructureSkipSuggestion> findBackwardSibblingSuggests(IndentInfo startLine) throws IOException {
-        ArrayList<IndentInfo> endSkipLocations=getEndOfSkipSuggestions(startLine);
+    public ArrayList<StructureSkipSuggestion> getSibblingBackwardSuggestions(IndentInfo startLine) throws IOException {
+        int indexErrorLine=getHistory().getIndexLastLine();
+        ArrayList<IndentInfo> endSkipLocations=findCurrentEnd(startLine);
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
-        IndentInfo backwardPosition = startLine;
+        int backwardPositionIndex = indexErrorLine;
         int loopCount=0;
         while(loopCount<4) {
-            ArrayList<IndentInfo> startOfSkipLocations=getBeginOfSkipSuggestions(backwardPosition);
+            ArrayList<Integer> startOfSkipLocations=findPreviousBegin(backwardPositionIndex);
             if(startOfSkipLocations.isEmpty())
                 break;
-            backwardPosition =startOfSkipLocations.get(startOfSkipLocations.size()-1);
-            for (IndentInfo startSkip : startOfSkipLocations) {
+            backwardPositionIndex = startOfSkipLocations.get(startOfSkipLocations.size()-1);
+            for (int startSkipIndex : startOfSkipLocations) {
+                IndentInfo startSkip = getHistory().getLine(startSkipIndex);
                 for (IndentInfo endSkip : endSkipLocations) {
                     StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
                     skipConstruct.setStartSkip(startSkip);
@@ -117,12 +121,16 @@
         return skipSuggestions;
     }
 
-    public ArrayList<StructureSkipSuggestion> findSurroundingSibblingSuggests(IndentInfo startLine) throws IOException {        
+    public ArrayList<StructureSkipSuggestion> getSibblingSurroundingSuggestions(IndentInfo startLine) throws IOException {        
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
-        IndentInfo backwardPosition = startLine;
+        int indexErrorLine=getHistory().getIndexLastLine();
+        int backwardPosition = indexErrorLine;
         IndentInfo forwardPosition = startLine;        
-        ArrayList<IndentInfo> endSkipLocations = getEndOfSkipSuggestions(forwardPosition);
-        ArrayList<IndentInfo> startOfSkipLocations = getBeginOfSkipSuggestions(backwardPosition);
+        ArrayList<IndentInfo> endSkipLocations = findCurrentEnd(forwardPosition);
+        ArrayList<Integer> startOfSkipLocations = findPreviousBegin(backwardPosition);
+        if(!startOfSkipLocations.isEmpty()){            
+            backwardPosition = startOfSkipLocations.get(startOfSkipLocations.size()-1);            
+        }
         boolean forWardsOn=true;
         boolean backwsEndReached=false;
         boolean forwardsEndReached=false;
@@ -132,7 +140,7 @@
             doNext=false;
             if(forWardsOn){
                 if(forwardPosition.getIndentValue()==startLine.getIndentValue()){
-                    endSkipLocations=getEndOfSkipSuggestions(forwardPosition);
+                    endSkipLocations=findCurrentEnd(forwardPosition);
                     forwardPosition =endSkipLocations.get(endSkipLocations.size()-1);
                     forWardsOn=backwsEndReached;
                 }
@@ -143,7 +151,7 @@
                 }
             }
             else{
-                ArrayList<IndentInfo> newStartOfSkipLocations=getBeginOfSkipSuggestions(backwardPosition);
+                ArrayList<Integer> newStartOfSkipLocations=findPreviousBegin(backwardPosition);
                 if(!newStartOfSkipLocations.isEmpty()){
                     startOfSkipLocations = newStartOfSkipLocations;
                     backwardPosition =startOfSkipLocations.get(startOfSkipLocations.size()-1);
@@ -156,7 +164,8 @@
                 }
             }
             if(!doNext){
-                for (IndentInfo startSkip : startOfSkipLocations) {
+                for (Integer startSkipIndex : startOfSkipLocations) {
+                    IndentInfo startSkip=getHistory().getLine(startSkipIndex);
                     for (IndentInfo endSkip : endSkipLocations) {
                         StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
                         skipConstruct.setStartSkip(startSkip);
@@ -174,7 +183,7 @@
     /*
      * * 
      */
-    private ArrayList<IndentInfo> getEndOfSkipSuggestions(IndentInfo startLine) throws IOException{
+    private ArrayList<IndentInfo> findCurrentEnd(IndentInfo startLine) throws IOException{
         getHistory().setTokenIndex(startLine.getTokensSeen());
         int indentStartLine=startLine.getIndentValue();        
         boolean hasIndentChilds=false;
@@ -220,42 +229,42 @@
         return endLocations;
     } 
     
-    private ArrayList<IndentInfo> getBeginOfSkipSuggestions(IndentInfo startLine) throws IOException{        
+    private ArrayList<Integer> findPreviousBegin(int indexLine) throws IOException{ 
+        IndentInfo startLine=getHistory().getLine(indexLine);
         int indentStartLine=startLine.getIndentValue();
         boolean passedOpeningLine=false;
         boolean prevLine=true;
-        ArrayList<IndentInfo> startLocations=new ArrayList<IndentInfo>();
-        while(getHistory().getIndexConstruct()>0){
-            getHistory().setIndexConstruct(getHistory().getIndexConstruct()-1);
-            int indentSkipPosition=getHistory().getConstructPoint().getIndentValue();
+        ArrayList<Integer> startLocations=new ArrayList<Integer>();
+        int indexHistoryLines=indexLine;
+        while(indexHistoryLines>0){
+            indexHistoryLines-=1;
+            int indentSkipPosition=getHistory().getLine(indexHistoryLines).getIndentValue();
             indentShift shift=calculateShift(indentStartLine, indentSkipPosition);
             switch (shift) {
             case DEDENT:  
                 if(passedOpeningLine){
-                    int indexOpeningLine=getHistory().getIndexConstruct()+1;
-                    getHistory().setIndexConstruct(indexOpeningLine);
-                    startLocations.add(getHistory().getConstructPoint());                    
+                    int indexOpeningLine=indexHistoryLines +1;                    
+                    startLocations.add(new Integer(indexOpeningLine));                    
                 }  
                 return startLocations;                
             case INDENT:
                 if(passedOpeningLine){
-                    int indexOpeningLine=getHistory().getIndexConstruct()+1;
-                    getHistory().setIndexConstruct(indexOpeningLine);
-                    startLocations.add(getHistory().getConstructPoint());
+                    int indexOpeningLine=indexHistoryLines +1;                    
+                    startLocations.add(new Integer(indexOpeningLine)); 
                     return startLocations;
                 }                    
                 break;
             case SAME_INDENT:
                 if(passedOpeningLine){
-                    startLocations.add(getHistory().getConstructPoint());
+                    startLocations.add(new Integer(indexHistoryLines));
                     return startLocations;
                 }
-                if(!prevLine && isOpeningLine(getHistory().getConstructPoint()))
+                if(!prevLine && isOpeningLine(getHistory().getLine(indexHistoryLines)))
                 {
                         passedOpeningLine=true;
                 }
-                else if(!prevLine || !isClosingLine(getHistory().getConstructPoint())){                       
-                    startLocations.add(getHistory().getConstructPoint());
+                else if(!prevLine || !isClosingLine(getHistory().getLine(indexHistoryLines))){                       
+                    startLocations.add(new Integer(indexHistoryLines));
                     return startLocations;
                 }                
                 break;
@@ -264,22 +273,23 @@
             }
             prevLine=false;
         }
-        startLocations.add(getHistory().getConstructPoint()); //SOF
+        startLocations.add(new Integer(indexHistoryLines)); //SOF
         return startLocations;
     }  
     
-    private ArrayList<IndentInfo> getParentBeginSuggestions(IndentInfo startLine) throws IOException{        
+    private ArrayList<IndentInfo> findParentBegin(IndentInfo startLine) throws IOException{        
         int indentStartLine=startLine.getIndentValue();        
         ArrayList<IndentInfo> startLocations=new ArrayList<IndentInfo>();
-        while(getHistory().getIndexConstruct()>0){
-            getHistory().setIndexConstruct(getHistory().getIndexConstruct()-1); 
-            IndentInfo currentLine=getHistory().getConstructPoint();
+        int indexHistoryLines=getHistory().getIndexConstruct();
+        while(indexHistoryLines > 0){
+            indexHistoryLines-=1;
+            IndentInfo currentLine=getHistory().getLine(indexHistoryLines);
             int indentSkipPosition=currentLine.getIndentValue();
             indentShift shift=calculateShift(indentStartLine, indentSkipPosition);
             if (shift==indentShift.DEDENT){
                 if(isOpeningLine(currentLine))
                 {
-                        IndentInfo prevLine = getHistory().getPreviousLine();
+                        IndentInfo prevLine = getHistory().getLine(indexHistoryLines-1);
                         if(calculateShift(currentLine.getIndentValue(), prevLine.getIndentValue())==indentShift.SAME_INDENT){
                             startLocations.add(prevLine);
                             return startLocations;
@@ -296,11 +306,11 @@
               
             }            
         }
-        startLocations.add(getHistory().getConstructPoint()); //SOF
+        startLocations.add(getHistory().getLine(0)); //SOF
         return startLocations;
     } 
     
-    private ArrayList<IndentInfo> getParentEndSuggestions(IndentInfo startLine) throws IOException{
+    private ArrayList<IndentInfo> findParentEnd(IndentInfo startLine) throws IOException{
         getHistory().setTokenIndex(startLine.getTokensSeen());
         int indentStartLine=startLine.getIndentValue();               
         ArrayList<IndentInfo> endLocations=new ArrayList<IndentInfo>();
@@ -324,6 +334,15 @@
         return endLocations;
     } 
     
+    public ArrayList<StructureSkipSuggestion> getZoomOnPreviousSuggestions(StructureSkipSuggestion prevRegion){
+        ArrayList<StructureSkipSuggestion> result = new ArrayList<StructureSkipSuggestion>();
+        IndentInfo startLine = prevRegion.getStartSkip();
+        //IndentInfo endL
+        
+        
+        return result;
+    }
+    
 
     private boolean isClosingLine(IndentInfo constructPoint) {
      // TODO Language independent:
@@ -373,6 +392,5 @@
         if(difference<0)
             return indentShift.INDENT;
         return indentShift.SAME_INDENT;
-    }    
-    
+    } 
 }



From m.dejonge at tudelft.nl  Tue Jul 21 19:59:25 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 21 Jul 2009 17:59:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19754 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907211757.n6LHvONj026271@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-21 17:59:25 +0000 (Tue, 21 Jul 2009)
New Revision: 19754

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19754&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipSuggestion.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java

Log:
Zoom, curlyBrace/LanguageIndependent => openingBrace [Backward]

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipSuggestion.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipSuggestion.java	2009-07-21 13:10:36 UTC (rev 19753)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipSuggestion.java	2009-07-21 17:59:25 UTC (rev 19754)
@@ -10,6 +10,10 @@
     public int getIndexHistoryStart() {
         return indexHistoryStart;
     }
+    
+    public boolean isPreviousRegion(){
+        return indexHistoryStart>=0 && indexHistoryEnd>=0;
+    }
 
 
     public void setIndexHistoryStart(int indexHistoryStart) {

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-21 13:10:36 UTC (rev 19753)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-21 17:59:25 UTC (rev 19754)
@@ -12,7 +12,17 @@
         SAME_INDENT
     }
     
+    private boolean useCurlyBraces;
     
+    
+    public boolean isUsingCurlyBraces() {
+        return useCurlyBraces;
+    }
+
+    public void setUseCurlyBraces(boolean useCurlyBraces) {
+        this.useCurlyBraces = useCurlyBraces;
+    }
+
     private SGLR myParser;
     private IndentationHandler skipIndentHandler;
     
@@ -25,7 +35,8 @@
         skipIndentHandler=new IndentationHandler();
     }
     
-    public ArrayList<StructureSkipSuggestion> getCurrentSkipSuggestions(IndentInfo startLine) throws IOException{
+    public ArrayList<StructureSkipSuggestion> getCurrentSkipSuggestions() throws IOException{
+        IndentInfo startLine = getHistory().getLastLine();
         ArrayList<IndentInfo> endLocations=findCurrentEnd(startLine);
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
         for (IndentInfo endSkip : endLocations) {
@@ -38,10 +49,11 @@
         return skipSuggestions;
     }    
     
-    public ArrayList<StructureSkipSuggestion> getPreviousSkipSuggestions(IndentInfo xxxendOfSkipLine) throws IOException{
+    public ArrayList<StructureSkipSuggestion> getPreviousSkipSuggestions() throws IOException{
         int indexEnd=getHistory().getIndexLastLine();
         IndentInfo endLocation=getHistory().getLine(indexEnd);
-        if(isErrorOnClosingLine(endLocation)){
+        boolean errorOnClosingBrace=isErrorOnClosingLine(endLocation);
+        if(errorOnClosingBrace){
             getHistory().setTokenIndex(endLocation.getTokensSeen());
             endLocation=skipLine(endLocation.getLineNumber());
         }
@@ -49,16 +61,20 @@
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
         for (Integer startSkip : startLocations) {
             StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
-            skipConstruct.setStartSkip(getHistory().getLine(startSkip));            
+            skipConstruct.setStartSkip(getHistory().getLine(startSkip)); 
+            skipConstruct.setIndexHistoryStart(startSkip);
             skipConstruct.setEndSkip(endLocation);
+            skipConstruct.setIndexHistoryEnd(indexEnd);
             skipSuggestions.add(skipConstruct);
         }
         return skipSuggestions;
     } 
 
-    public ArrayList<StructureSkipSuggestion> getParentSkipSuggestions(IndentInfo startLine) throws IOException{
+    public ArrayList<StructureSkipSuggestion> getParentSkipSuggestions() throws IOException{
+        int errorLineIndex=getHistory().getIndexLastLine();
+        IndentInfo startLine = getHistory().getLine(errorLineIndex);
         ArrayList<IndentInfo> endLocations=findParentEnd(startLine);
-        ArrayList<IndentInfo> startLocations=findParentBegin(startLine);
+        ArrayList<IndentInfo> startLocations=findParentBegin(errorLineIndex);
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
         for (IndentInfo startSkip : startLocations) {
             for (IndentInfo endSkip : endLocations) {
@@ -72,9 +88,10 @@
         return skipSuggestions;
     }    
     
-    public ArrayList<StructureSkipSuggestion> getSibblingForwardSuggestions(IndentInfo startLine) throws IOException{        
+    public ArrayList<StructureSkipSuggestion> getSibblingForwardSuggestions() throws IOException{        
         ArrayList<Integer> startLocations=findPreviousBegin(getHistory().getIndexLastLine());
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
+        IndentInfo startLine = getHistory().getLastLine();
         IndentInfo forwardPosition = startLine;
         int loopCount=0;
         while(loopCount<4 && forwardPosition.getIndentValue()==startLine.getIndentValue()) {
@@ -85,6 +102,7 @@
                 for (IndentInfo endSkip : endLocations) {
                     StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
                     skipConstruct.setStartSkip(startSkip);
+                    skipConstruct.setIndexHistoryStart(startSkipIndex);
                     endSkip.fillStackNodes(startSkip.getStackNodes());
                     skipConstruct.setEndSkip(endSkip);
                     skipSuggestions.add(skipConstruct);
@@ -95,9 +113,9 @@
         return skipSuggestions;
     }   
     
-    public ArrayList<StructureSkipSuggestion> getSibblingBackwardSuggestions(IndentInfo startLine) throws IOException {
+    public ArrayList<StructureSkipSuggestion> getSibblingBackwardSuggestions() throws IOException {
         int indexErrorLine=getHistory().getIndexLastLine();
-        ArrayList<IndentInfo> endSkipLocations=findCurrentEnd(startLine);
+        ArrayList<IndentInfo> endSkipLocations=findCurrentEnd(getHistory().getLastLine());
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
         int backwardPositionIndex = indexErrorLine;
         int loopCount=0;
@@ -111,6 +129,7 @@
                 for (IndentInfo endSkip : endSkipLocations) {
                     StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
                     skipConstruct.setStartSkip(startSkip);
+                    skipConstruct.setIndexHistoryStart(startSkipIndex);
                     endSkip.fillStackNodes(startSkip.getStackNodes());
                     skipConstruct.setEndSkip(endSkip);
                     skipSuggestions.add(skipConstruct);
@@ -121,10 +140,11 @@
         return skipSuggestions;
     }
 
-    public ArrayList<StructureSkipSuggestion> getSibblingSurroundingSuggestions(IndentInfo startLine) throws IOException {        
+    public ArrayList<StructureSkipSuggestion> getSibblingSurroundingSuggestions() throws IOException {        
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
         int indexErrorLine=getHistory().getIndexLastLine();
         int backwardPosition = indexErrorLine;
+        IndentInfo startLine = getHistory().getLastLine();
         IndentInfo forwardPosition = startLine;        
         ArrayList<IndentInfo> endSkipLocations = findCurrentEnd(forwardPosition);
         ArrayList<Integer> startOfSkipLocations = findPreviousBegin(backwardPosition);
@@ -169,6 +189,7 @@
                     for (IndentInfo endSkip : endSkipLocations) {
                         StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
                         skipConstruct.setStartSkip(startSkip);
+                        skipConstruct.setIndexHistoryStart(startSkipIndex);
                         endSkip.fillStackNodes(startSkip.getStackNodes());
                         skipConstruct.setEndSkip(endSkip);
                         skipSuggestions.add(skipConstruct);
@@ -231,8 +252,7 @@
     
     private ArrayList<Integer> findPreviousBegin(int indexLine) throws IOException{ 
         IndentInfo startLine=getHistory().getLine(indexLine);
-        int indentStartLine=startLine.getIndentValue();
-        boolean passedOpeningLine=false;
+        int indentStartLine=startLine.getIndentValue();        
         boolean prevLine=true;
         ArrayList<Integer> startLocations=new ArrayList<Integer>();
         int indexHistoryLines=indexLine;
@@ -241,29 +261,17 @@
             int indentSkipPosition=getHistory().getLine(indexHistoryLines).getIndentValue();
             indentShift shift=calculateShift(indentStartLine, indentSkipPosition);
             switch (shift) {
-            case DEDENT:  
-                if(passedOpeningLine){
-                    int indexOpeningLine=indexHistoryLines +1;                    
-                    startLocations.add(new Integer(indexOpeningLine));                    
-                }  
+            case DEDENT:                
                 return startLocations;                
-            case INDENT:
-                if(passedOpeningLine){
-                    int indexOpeningLine=indexHistoryLines +1;                    
-                    startLocations.add(new Integer(indexOpeningLine)); 
-                    return startLocations;
-                }                    
+            case INDENT:                               
                 break;
-            case SAME_INDENT:
-                if(passedOpeningLine){
-                    startLocations.add(new Integer(indexHistoryLines));
+            case SAME_INDENT:                
+                if(!prevLine && isOpeningLine(indexHistoryLines))
+                {
+                    startLocations.add(new Integer(indexHistoryLines - 1)); 
                     return startLocations;
                 }
-                if(!prevLine && isOpeningLine(getHistory().getLine(indexHistoryLines)))
-                {
-                        passedOpeningLine=true;
-                }
-                else if(!prevLine || !isClosingLine(getHistory().getLine(indexHistoryLines))){                       
+                else if(!prevLine || !isClosingLine(indexHistoryLines)){                       
                     startLocations.add(new Integer(indexHistoryLines));
                     return startLocations;
                 }                
@@ -277,17 +285,18 @@
         return startLocations;
     }  
     
-    private ArrayList<IndentInfo> findParentBegin(IndentInfo startLine) throws IOException{        
+    private ArrayList<IndentInfo> findParentBegin(int startLineIndex) throws IOException{
+        IndentInfo startLine = getHistory().getLine(startLineIndex);
         int indentStartLine=startLine.getIndentValue();        
         ArrayList<IndentInfo> startLocations=new ArrayList<IndentInfo>();
-        int indexHistoryLines=getHistory().getIndexConstruct();
+        int indexHistoryLines=startLineIndex;
         while(indexHistoryLines > 0){
             indexHistoryLines-=1;
             IndentInfo currentLine=getHistory().getLine(indexHistoryLines);
             int indentSkipPosition=currentLine.getIndentValue();
             indentShift shift=calculateShift(indentStartLine, indentSkipPosition);
             if (shift==indentShift.DEDENT){
-                if(isOpeningLine(currentLine))
+                if(isOpeningLine(indexHistoryLines))
                 {
                         IndentInfo prevLine = getHistory().getLine(indexHistoryLines-1);
                         if(calculateShift(currentLine.getIndentValue(), prevLine.getIndentValue())==indentShift.SAME_INDENT){
@@ -334,19 +343,73 @@
         return endLocations;
     } 
     
+    //TODO: Level select after zoom
+    //TODO: refactor
+    
     public ArrayList<StructureSkipSuggestion> getZoomOnPreviousSuggestions(StructureSkipSuggestion prevRegion){
         ArrayList<StructureSkipSuggestion> result = new ArrayList<StructureSkipSuggestion>();
-        IndentInfo startLine = prevRegion.getStartSkip();
-        //IndentInfo endL
+        if(!prevRegion.isPreviousRegion() || (prevRegion.getIndexHistoryEnd()-prevRegion.getIndexHistoryStart() < 3)){
+            result.add(prevRegion);
+            return result;
+        }
+        int maxIndent = Integer.MAX_VALUE;
+        int regionIndent=prevRegion.getStartSkip().getIndentValue();
         
-        
+        while (maxIndent > regionIndent) {
+            int bigIndent=-1;
+            int indexBigIndentLine=prevRegion.getIndexHistoryEnd();
+            for (int i = prevRegion.getIndexHistoryEnd(); i >= prevRegion
+                    .getIndexHistoryStart(); i--) {
+                int currentLineIndent = getHistory().getLine(i)
+                        .getIndentValue();
+                if (bigIndent < currentLineIndent
+                        && currentLineIndent < maxIndent) {
+                    bigIndent = currentLineIndent;
+                    indexBigIndentLine = i;
+                }
+            }
+            if(bigIndent!=regionIndent){
+                boolean hasSetRegionEnd = true;
+                StructureSkipSuggestion indentLevelRegion = new StructureSkipSuggestion();
+                IndentInfo currentLine = getHistory().getLine(indexBigIndentLine + 1);
+                indentLevelRegion.setEndSkip(currentLine);
+                for (int i = indexBigIndentLine - 1; i >= prevRegion
+                        .getIndexHistoryStart(); i--) {
+                    currentLine = getHistory().getLine(i);
+                    if (hasSetRegionEnd && currentLine.getIndentValue() < bigIndent) {
+                        indentLevelRegion.setStartSkip(getHistory().getLine(i + 1));
+                        result.add(indentLevelRegion);
+                        hasSetRegionEnd = false;
+                    }
+                    if (!hasSetRegionEnd
+                            && currentLine.getIndentValue() == bigIndent) {
+                        indentLevelRegion = new StructureSkipSuggestion();
+                        indentLevelRegion.setEndSkip(getHistory().getLine(i + 1));
+                        hasSetRegionEnd = true;
+                    }
+                }
+            }
+            maxIndent=bigIndent;
+        }
         return result;
     }
     
 
-    private boolean isClosingLine(IndentInfo constructPoint) {
-     // TODO Language independent:
-        return getHistory().recoverTokenStream[constructPoint.getTokensSeen()]=='}';
+    private boolean isClosingLine(int indexLine) {             
+        IndentInfo currLine=getHistory().getLine(indexLine);        
+        if(useCurlyBraces)
+            return getHistory().recoverTokenStream[currLine.getTokensSeen()]=='}';  
+        if(indexLine==0)
+            return false;
+        IndentInfo prevLine=getHistory().getLine(indexLine - 1);
+        if(prevLine.getIndentValue()<currLine.getIndentValue())
+            return false;
+        IndentInfo nextLine=getHistory().getLine(indexLine + 1);        
+        if (nextLine==null)
+            return true;
+        if(nextLine.structureStartPosition()>=currLine.structureStartPosition())
+            return false;
+        return true;
     }
     
     private boolean isErrorOnClosingLine(IndentInfo constructPoint) {
@@ -354,9 +417,16 @@
         return getHistory().recoverTokenStream[constructPoint.getTokensSeen()]=='}';
     }
 
-    private boolean isOpeningLine(IndentInfo constructPoint) {
-     // TODO Language independent:
-        return getHistory().recoverTokenStream[constructPoint.getTokensSeen()]=='{';
+    private boolean isOpeningLine(int indexLine) {     
+        if(indexLine==0)
+            return false;
+        IndentInfo line = getHistory().getLine(indexLine);
+        if(useCurlyBraces)
+            return getHistory().recoverTokenStream[line.getTokensSeen()]=='{';
+        IndentInfo prevLine = getHistory().getLine(indexLine-1);        
+        boolean sameIndent = prevLine.getIndentValue()==line.getIndentValue();
+        boolean smallReduce = line.structureStartPosition() >= prevLine.getTokensSeen()-1;
+        return sameIndent && smallReduce;
     }
 
     private boolean isOpeningLine() {



From m.dejonge at tudelft.nl  Wed Jul 22 11:20:44 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Wed, 22 Jul 2009 09:20:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19755 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907220918.n6M9Ig3q004568@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-22 09:20:44 +0000 (Wed, 22 Jul 2009)
New Revision: 19755

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19755&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java

Log:
language independent/dependent (curly braces) option

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-21 17:59:25 UTC (rev 19754)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-22 09:20:44 UTC (rev 19755)
@@ -52,7 +52,7 @@
     public ArrayList<StructureSkipSuggestion> getPreviousSkipSuggestions() throws IOException{
         int indexEnd=getHistory().getIndexLastLine();
         IndentInfo endLocation=getHistory().getLine(indexEnd);
-        boolean errorOnClosingBrace=isErrorOnClosingLine(endLocation);
+        boolean errorOnClosingBrace=isErrorOnClosingLine(indexEnd);
         if(errorOnClosingBrace){
             getHistory().setTokenIndex(endLocation.getTokensSeen());
             endLocation=skipLine(endLocation.getLineNumber());
@@ -224,11 +224,11 @@
             case SAME_INDENT:
                 if(isSecondLine){
                     endLocations.add(nextLine); 
-                    if(!isOpeningLine())
+                    if(!isOpeningLine(nextLine))
                         return endLocations;
                 }
                 else if(hasIndentChilds){
-                    if(isClosingLine()){
+                    if(isClosingLine(nextLine)){
                         nextLine = skipLine(nextLine.getLineNumber());
                         if(nextLine==null)
                             break;
@@ -328,7 +328,7 @@
             int indentSkipPosition=nextLine.getIndentValue();
             indentShift shift=calculateShift(indentStartLine, indentSkipPosition);
             if (shift==indentShift.DEDENT) {  
-                if(isClosingLine()){
+                if(isClosingLine(nextLine)){
                     nextLine=skipLine(nextLine.getLineNumber());
                     if(nextLine==null)
                         break;
@@ -352,44 +352,46 @@
             result.add(prevRegion);
             return result;
         }
-        int maxIndent = Integer.MAX_VALUE;
+        int indentOfLevel = Integer.MAX_VALUE; //lower for each loop till same indent as region indent 
         int regionIndent=prevRegion.getStartSkip().getIndentValue();
         
-        while (maxIndent > regionIndent) {
+        while (indentOfLevel > regionIndent) {
+            //find last child with a big indent (smaller then previous level)
             int bigIndent=-1;
             int indexBigIndentLine=prevRegion.getIndexHistoryEnd();
-            for (int i = prevRegion.getIndexHistoryEnd(); i >= prevRegion
-                    .getIndexHistoryStart(); i--) {
-                int currentLineIndent = getHistory().getLine(i)
-                        .getIndentValue();
-                if (bigIndent < currentLineIndent
-                        && currentLineIndent < maxIndent) {
+            for (int i = prevRegion.getIndexHistoryEnd(); i >= prevRegion.getIndexHistoryStart(); i--) {
+                int currentLineIndent = getHistory().getLine(i).getIndentValue();
+                if (bigIndent < currentLineIndent && currentLineIndent < indentOfLevel) {
                     bigIndent = currentLineIndent;
                     indexBigIndentLine = i;
                 }
             }
+            //find all (maximal ...) fragments of sequential code lines with indent = bigIndent 
             if(bigIndent!=regionIndent){
                 boolean hasSetRegionEnd = true;
                 StructureSkipSuggestion indentLevelRegion = new StructureSkipSuggestion();
                 IndentInfo currentLine = getHistory().getLine(indexBigIndentLine + 1);
                 indentLevelRegion.setEndSkip(currentLine);
-                for (int i = indexBigIndentLine - 1; i >= prevRegion
-                        .getIndexHistoryStart(); i--) {
+                int nrOfFragments=0;
+                int maxNr=4;
+                for (int i = indexBigIndentLine - 1; i >= prevRegion.getIndexHistoryStart(); i--) {
                     currentLine = getHistory().getLine(i);
                     if (hasSetRegionEnd && currentLine.getIndentValue() < bigIndent) {
                         indentLevelRegion.setStartSkip(getHistory().getLine(i + 1));
                         result.add(indentLevelRegion);
                         hasSetRegionEnd = false;
+                        nrOfFragments+=1;
                     }
-                    if (!hasSetRegionEnd
-                            && currentLine.getIndentValue() == bigIndent) {
+                    if (!hasSetRegionEnd && currentLine.getIndentValue() == bigIndent) {
                         indentLevelRegion = new StructureSkipSuggestion();
                         indentLevelRegion.setEndSkip(getHistory().getLine(i + 1));
                         hasSetRegionEnd = true;
                     }
+                    if(nrOfFragments>=maxNr)
+                        break;
                 }
             }
-            maxIndent=bigIndent;
+            indentOfLevel=bigIndent;
         }
         return result;
     }
@@ -412,10 +414,31 @@
         return true;
     }
     
-    private boolean isErrorOnClosingLine(IndentInfo constructPoint) {
-        // TODO Language independent:
-        return getHistory().recoverTokenStream[constructPoint.getTokensSeen()]=='}';
+    private boolean isErrorOnClosingLine(int indexLine) {
+        IndentInfo line = getHistory().getLine(indexLine);
+        if(useCurlyBraces)
+            return getHistory().recoverTokenStream[line.getTokensSeen()]=='}';
+        if (indexLine==0)
+            return false;
+        IndentInfo prevLine=getHistory().getLine(indexLine-1);
+        int startTokLine=line.structureStartPosition();
+        if(startTokLine==0)
+            return true;
+        if(getHistory().getLastChar()==SGLR.EOF)
+            return true;
+        return false;
     }
+    
+    private boolean optionalErrorOnClosingLine(int indexLine) throws IOException {
+        IndentInfo line = getHistory().getLine(indexLine);        
+        IndentInfo prevLine=getHistory().getLine(indexLine-1);
+        getHistory().setTokenIndex(line.getTokensSeen());
+        IndentInfo nextLine=skipLine(line.getLineNumber());
+        int startTokLine=line.structureStartPosition();        
+        if(line.getIndentValue() < prevLine.getIndentValue() && line.getIndentValue()>=nextLine.getIndentValue())
+            return true;
+        return false;
+    }
 
     private boolean isOpeningLine(int indexLine) {     
         if(indexLine==0)
@@ -429,14 +452,31 @@
         return sameIndent && smallReduce;
     }
 
-    private boolean isOpeningLine() {
-     // TODO Language independent: Length reduction before or after, ATerm inspection (lexical?), settings (?)
-        return myParser.currentToken=='{';
+    private boolean isOpeningLine(IndentInfo currLine) throws IOException {
+        if(useCurlyBraces)
+            return myParser.currentToken=='{';
+        IndentInfo nextLine = viewNextLine();
+        if(nextLine.getIndentValue()<=currLine.getIndentValue())
+            return false;
+        return true;
     }
 
-    private boolean isClosingLine() {
-        // TODO Language independent: Length reduction before or after, ATerm inspection, settings (?)
-        return myParser.currentToken=='}';
+    private boolean isClosingLine(IndentInfo currLine) throws IOException {        
+        if(useCurlyBraces)
+            return myParser.currentToken=='}';
+        IndentInfo nextLine = viewNextLine();
+        if(nextLine.getIndentValue()>currLine.getIndentValue())
+            return false;
+        if(nextLine.getIndentValue() < currLine.getIndentValue())
+            return true;        
+        return true;//TODO: try parse line, and check closing?
+    }
+
+    private IndentInfo viewNextLine() throws IOException {
+        int currentLocation = getHistory().getTokenIndex();
+        IndentInfo nextLine = skipLine(-1);
+        getHistory().setTokenIndex(currentLocation);
+        return nextLine;
     }    
 
     private IndentInfo skipLine(int lineNumber) throws IOException {



From m.dejonge at tudelft.nl  Wed Jul 22 13:37:03 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Wed, 22 Jul 2009 11:37:03 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19756 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907221135.n6MBZ1Om006607@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-22 11:37:03 +0000 (Wed, 22 Jul 2009)
New Revision: 19756

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19756&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java

Log:
prior-child

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-22 09:20:44 UTC (rev 19755)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-22 11:37:03 UTC (rev 19756)
@@ -4,8 +4,14 @@
 import java.io.IOException;
 import java.util.ArrayList;
 
+import org.omg.CORBA.PRIVATE_MEMBER;
+
 public class StructureSkipper {
     
+    //restrictions on area searched for erroneous region
+    private final static int MAX_NR_OF_LINES=25;
+    private final static int MAX_NR_OF_STRUCTURES=4;
+    
     enum indentShift{
         INDENT,
         DEDENT,
@@ -57,57 +63,75 @@
             getHistory().setTokenIndex(endLocation.getTokensSeen());
             endLocation=skipLine(endLocation.getLineNumber());
         }
-        ArrayList<Integer> startLocations=findPreviousBegin(indexEnd);
-        ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
-        for (Integer startSkip : startLocations) {
+        ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>(); 
+        int startSkip = findPreviousBegin(indexEnd);
+        if(startSkip>=0){
             StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
             skipConstruct.setStartSkip(getHistory().getLine(startSkip)); 
             skipConstruct.setIndexHistoryStart(startSkip);
             skipConstruct.setEndSkip(endLocation);
             skipConstruct.setIndexHistoryEnd(indexEnd);
-            skipSuggestions.add(skipConstruct);
-        }
+            skipSuggestions.add(skipConstruct); 
+        }       
         return skipSuggestions;
     } 
+    
+    public ArrayList<StructureSkipSuggestion> getPriorSkipSuggestions() throws IOException{
+        ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>(); 
+        int indexLastLine=getHistory().getIndexLastLine();        
+        int indexEnd = findPreviousBegin(indexLastLine);        
+        int startSkip = findPreviousBegin(indexEnd);        
+        while(startSkip>=0 && skipSuggestions.size() < MAX_NR_OF_STRUCTURES && (indexLastLine - startSkip)<MAX_NR_OF_LINES){            
+            IndentInfo endLocation=getHistory().getLine(indexEnd);
+            StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
+            skipConstruct.setStartSkip(getHistory().getLine(startSkip)); 
+            skipConstruct.setIndexHistoryStart(startSkip);
+            skipConstruct.setEndSkip(endLocation);
+            skipConstruct.setIndexHistoryEnd(indexEnd);
+            skipSuggestions.add(skipConstruct); 
+            indexEnd=startSkip;
+            startSkip=findPreviousBegin(indexEnd);
+        }       
+        return skipSuggestions;
+    } 
 
     public ArrayList<StructureSkipSuggestion> getParentSkipSuggestions() throws IOException{
         int errorLineIndex=getHistory().getIndexLastLine();
         IndentInfo startLine = getHistory().getLine(errorLineIndex);
         ArrayList<IndentInfo> endLocations=findParentEnd(startLine);
-        ArrayList<IndentInfo> startLocations=findParentBegin(errorLineIndex);
-        ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
-        for (IndentInfo startSkip : startLocations) {
-            for (IndentInfo endSkip : endLocations) {
-                StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
-                skipConstruct.setStartSkip(startSkip);
-                endSkip.fillStackNodes(startSkip.getStackNodes());
-                skipConstruct.setEndSkip(endSkip);
-                skipSuggestions.add(skipConstruct);
-            }
-        }
+        int startSkipIndex=findParentBegin(errorLineIndex);
+        IndentInfo startSkip = getHistory().getLine(startSkipIndex);
+        ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();        
+        for (IndentInfo endSkip : endLocations) {
+            StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
+            skipConstruct.setStartSkip(startSkip);
+            endSkip.fillStackNodes(startSkip.getStackNodes());
+            skipConstruct.setEndSkip(endSkip);
+            skipSuggestions.add(skipConstruct);
+        }        
         return skipSuggestions;
     }    
     
     public ArrayList<StructureSkipSuggestion> getSibblingForwardSuggestions() throws IOException{        
-        ArrayList<Integer> startLocations=findPreviousBegin(getHistory().getIndexLastLine());
+        int startSkipIndex = findPreviousBegin(getHistory().getIndexLastLine());
+        if(startSkipIndex<0)
+            startSkipIndex=getHistory().getIndexLastLine();        
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
         IndentInfo startLine = getHistory().getLastLine();
         IndentInfo forwardPosition = startLine;
         int loopCount=0;
-        while(loopCount<4 && forwardPosition.getIndentValue()==startLine.getIndentValue()) {
+        while(loopCount<MAX_NR_OF_STRUCTURES && forwardPosition.getIndentValue()==startLine.getIndentValue()&& (forwardPosition.getLineNumber()-startLine.getLineNumber()) < MAX_NR_OF_LINES) {
             ArrayList<IndentInfo> endLocations=findCurrentEnd(forwardPosition);
-            forwardPosition =endLocations.get(endLocations.size()-1);
-            for (Integer startSkipIndex : startLocations) {
-                IndentInfo startSkip=getHistory().getLine(startSkipIndex);
-                for (IndentInfo endSkip : endLocations) {
-                    StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
-                    skipConstruct.setStartSkip(startSkip);
-                    skipConstruct.setIndexHistoryStart(startSkipIndex);
-                    endSkip.fillStackNodes(startSkip.getStackNodes());
-                    skipConstruct.setEndSkip(endSkip);
-                    skipSuggestions.add(skipConstruct);
-                }
-            }
+            forwardPosition =endLocations.get(endLocations.size()-1);            
+            IndentInfo startSkip=getHistory().getLine(startSkipIndex);
+            for (IndentInfo endSkip : endLocations) {
+                StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
+                skipConstruct.setStartSkip(startSkip);
+                skipConstruct.setIndexHistoryStart(startSkipIndex);
+                endSkip.fillStackNodes(startSkip.getStackNodes());
+                skipConstruct.setEndSkip(endSkip);
+                skipSuggestions.add(skipConstruct);
+            }            
             loopCount++;
         }        
         return skipSuggestions;
@@ -119,22 +143,20 @@
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
         int backwardPositionIndex = indexErrorLine;
         int loopCount=0;
-        while(loopCount<4) {
-            ArrayList<Integer> startOfSkipLocations=findPreviousBegin(backwardPositionIndex);
-            if(startOfSkipLocations.isEmpty())
+        while(loopCount<MAX_NR_OF_STRUCTURES && (indexErrorLine - backwardPositionIndex)< MAX_NR_OF_LINES) {
+            int startSkipIndex=findPreviousBegin(backwardPositionIndex);
+            if(startSkipIndex<0)
                 break;
-            backwardPositionIndex = startOfSkipLocations.get(startOfSkipLocations.size()-1);
-            for (int startSkipIndex : startOfSkipLocations) {
-                IndentInfo startSkip = getHistory().getLine(startSkipIndex);
-                for (IndentInfo endSkip : endSkipLocations) {
-                    StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
-                    skipConstruct.setStartSkip(startSkip);
-                    skipConstruct.setIndexHistoryStart(startSkipIndex);
-                    endSkip.fillStackNodes(startSkip.getStackNodes());
-                    skipConstruct.setEndSkip(endSkip);
-                    skipSuggestions.add(skipConstruct);
-                }
-            }
+            backwardPositionIndex = startSkipIndex;            
+            IndentInfo startSkip = getHistory().getLine(startSkipIndex);
+            for (IndentInfo endSkip : endSkipLocations) {
+                StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
+                skipConstruct.setStartSkip(startSkip);
+                skipConstruct.setIndexHistoryStart(startSkipIndex);
+                endSkip.fillStackNodes(startSkip.getStackNodes());
+                skipConstruct.setEndSkip(endSkip);
+                skipSuggestions.add(skipConstruct);
+            }            
             loopCount++;
         }        
         return skipSuggestions;
@@ -147,16 +169,17 @@
         IndentInfo startLine = getHistory().getLastLine();
         IndentInfo forwardPosition = startLine;        
         ArrayList<IndentInfo> endSkipLocations = findCurrentEnd(forwardPosition);
-        ArrayList<Integer> startOfSkipLocations = findPreviousBegin(backwardPosition);
-        if(!startOfSkipLocations.isEmpty()){            
-            backwardPosition = startOfSkipLocations.get(startOfSkipLocations.size()-1);            
+        int startSkipIndex = findPreviousBegin(backwardPosition);
+        if(startSkipIndex >=0){            
+            backwardPosition = startSkipIndex;            
         }
         boolean forWardsOn=true;
         boolean backwsEndReached=false;
         boolean forwardsEndReached=false;
         int loopCount=0;
         boolean doNext=false;
-        while(loopCount<8 && !(backwsEndReached && forwardsEndReached)) {
+        int numberOflines=0;
+        while(loopCount<2*MAX_NR_OF_STRUCTURES && !(backwsEndReached && forwardsEndReached)&& numberOflines<MAX_NR_OF_LINES) {
             doNext=false;
             if(forWardsOn){
                 if(forwardPosition.getIndentValue()==startLine.getIndentValue()){
@@ -171,10 +194,10 @@
                 }
             }
             else{
-                ArrayList<Integer> newStartOfSkipLocations=findPreviousBegin(backwardPosition);
-                if(!newStartOfSkipLocations.isEmpty()){
-                    startOfSkipLocations = newStartOfSkipLocations;
-                    backwardPosition =startOfSkipLocations.get(startOfSkipLocations.size()-1);
+                int newStartOfSkipLocation=findPreviousBegin(backwardPosition);
+                if(newStartOfSkipLocation>=0){
+                    startSkipIndex = newStartOfSkipLocation;
+                    backwardPosition =startSkipIndex;
                     forWardsOn=!forwardsEndReached;
                 }
                 else{
@@ -183,20 +206,19 @@
                     doNext=true;
                 }
             }
-            if(!doNext){
-                for (Integer startSkipIndex : startOfSkipLocations) {
-                    IndentInfo startSkip=getHistory().getLine(startSkipIndex);
-                    for (IndentInfo endSkip : endSkipLocations) {
-                        StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
-                        skipConstruct.setStartSkip(startSkip);
-                        skipConstruct.setIndexHistoryStart(startSkipIndex);
-                        endSkip.fillStackNodes(startSkip.getStackNodes());
-                        skipConstruct.setEndSkip(endSkip);
-                        skipSuggestions.add(skipConstruct);
-                    }
-                }                
+            if(!doNext){                
+                IndentInfo startSkip=getHistory().getLine(startSkipIndex);
+                for (IndentInfo endSkip : endSkipLocations) {
+                    StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
+                    skipConstruct.setStartSkip(startSkip);
+                    skipConstruct.setIndexHistoryStart(startSkipIndex);
+                    endSkip.fillStackNodes(startSkip.getStackNodes());
+                    skipConstruct.setEndSkip(endSkip);
+                    skipSuggestions.add(skipConstruct);
+                }                                
             loopCount++;
-            }
+            numberOflines = forwardPosition.getLineNumber() - startSkip.getLineNumber();
+            }            
         }        
         return skipSuggestions;
     }
@@ -250,11 +272,10 @@
         return endLocations;
     } 
     
-    private ArrayList<Integer> findPreviousBegin(int indexLine) throws IOException{ 
+    private int findPreviousBegin(int indexLine) throws IOException{ 
         IndentInfo startLine=getHistory().getLine(indexLine);
         int indentStartLine=startLine.getIndentValue();        
-        boolean prevLine=true;
-        ArrayList<Integer> startLocations=new ArrayList<Integer>();
+        boolean prevLine=true;        
         int indexHistoryLines=indexLine;
         while(indexHistoryLines>0){
             indexHistoryLines-=1;
@@ -262,33 +283,29 @@
             indentShift shift=calculateShift(indentStartLine, indentSkipPosition);
             switch (shift) {
             case DEDENT:                
-                return startLocations;                
+                return -1;                
             case INDENT:                               
                 break;
             case SAME_INDENT:                
                 if(!prevLine && isOpeningLine(indexHistoryLines))
-                {
-                    startLocations.add(new Integer(indexHistoryLines - 1)); 
-                    return startLocations;
+                {                    
+                    return indexHistoryLines - 1;
                 }
-                else if(!prevLine || !isClosingLine(indexHistoryLines)){                       
-                    startLocations.add(new Integer(indexHistoryLines));
-                    return startLocations;
+                else if(!prevLine || !isClosingLine(indexHistoryLines)){
+                    return indexHistoryLines;
                 }                
                 break;
             default:
                 break;
             }
             prevLine=false;
-        }
-        startLocations.add(new Integer(indexHistoryLines)); //SOF
-        return startLocations;
+        }        
+        return 0;//SOF
     }  
     
-    private ArrayList<IndentInfo> findParentBegin(int startLineIndex) throws IOException{
+    private int findParentBegin(int startLineIndex) throws IOException{
         IndentInfo startLine = getHistory().getLine(startLineIndex);
-        int indentStartLine=startLine.getIndentValue();        
-        ArrayList<IndentInfo> startLocations=new ArrayList<IndentInfo>();
+        int indentStartLine=startLine.getIndentValue();
         int indexHistoryLines=startLineIndex;
         while(indexHistoryLines > 0){
             indexHistoryLines-=1;
@@ -299,24 +316,20 @@
                 if(isOpeningLine(indexHistoryLines))
                 {
                         IndentInfo prevLine = getHistory().getLine(indexHistoryLines-1);
-                        if(calculateShift(currentLine.getIndentValue(), prevLine.getIndentValue())==indentShift.SAME_INDENT){
-                            startLocations.add(prevLine);
-                            return startLocations;
+                        if(calculateShift(currentLine.getIndentValue(), prevLine.getIndentValue())==indentShift.SAME_INDENT){                            
+                            return indexHistoryLines-1;
                         }
-                        else{
-                            startLocations.add(currentLine);
-                            return startLocations;
+                        else{                            
+                            return indexHistoryLines;
                         }
                 }
-                else {                       
-                    startLocations.add(currentLine);
-                    return startLocations;
+                else {
+                    return indexHistoryLines;
                 }                
               
             }            
-        }
-        startLocations.add(getHistory().getLine(0)); //SOF
-        return startLocations;
+        }        
+        return 0; //SOF
     } 
     
     private ArrayList<IndentInfo> findParentEnd(IndentInfo startLine) throws IOException{
@@ -354,12 +367,12 @@
         }
         int indentOfLevel = Integer.MAX_VALUE; //lower for each loop till same indent as region indent 
         int regionIndent=prevRegion.getStartSkip().getIndentValue();
-        
+        int startlineIndex=Math.max(prevRegion.getIndexHistoryStart(),prevRegion.getIndexHistoryEnd()-MAX_NR_OF_LINES);
         while (indentOfLevel > regionIndent) {
             //find last child with a big indent (smaller then previous level)
             int bigIndent=-1;
             int indexBigIndentLine=prevRegion.getIndexHistoryEnd();
-            for (int i = prevRegion.getIndexHistoryEnd(); i >= prevRegion.getIndexHistoryStart(); i--) {
+            for (int i = prevRegion.getIndexHistoryEnd(); i >= startlineIndex; i--) {
                 int currentLineIndent = getHistory().getLine(i).getIndentValue();
                 if (bigIndent < currentLineIndent && currentLineIndent < indentOfLevel) {
                     bigIndent = currentLineIndent;
@@ -373,8 +386,7 @@
                 IndentInfo currentLine = getHistory().getLine(indexBigIndentLine + 1);
                 indentLevelRegion.setEndSkip(currentLine);
                 int nrOfFragments=0;
-                int maxNr=4;
-                for (int i = indexBigIndentLine - 1; i >= prevRegion.getIndexHistoryStart(); i--) {
+                for (int i = indexBigIndentLine - 1; i >= startlineIndex; i--) {
                     currentLine = getHistory().getLine(i);
                     if (hasSetRegionEnd && currentLine.getIndentValue() < bigIndent) {
                         indentLevelRegion.setStartSkip(getHistory().getLine(i + 1));
@@ -387,7 +399,7 @@
                         indentLevelRegion.setEndSkip(getHistory().getLine(i + 1));
                         hasSetRegionEnd = true;
                     }
-                    if(nrOfFragments>=maxNr)
+                    if(nrOfFragments>=MAX_NR_OF_STRUCTURES)
                         break;
                 }
             }



From m.dejonge at tudelft.nl  Wed Jul 22 17:37:11 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Wed, 22 Jul 2009 15:37:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19757 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907221535.n6MFZ8Kb009901@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-22 15:37:10 +0000 (Wed, 22 Jul 2009)
New Revision: 19757

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19757&view=rev

Added:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/IRegionRecovery.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java
Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipSuggestion.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java

Log:
refactoring region recovery

Changes:

Added: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/IRegionRecovery.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/IRegionRecovery.java	                        (rev 0)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/IRegionRecovery.java	2009-07-22 15:37:10 UTC (rev 19757)
@@ -0,0 +1,35 @@
+package org.spoofax.jsglr;
+
+import java.io.IOException;
+import java.util.ArrayList;
+
+public interface IRegionRecovery {
+
+    /*
+     * 
+     */
+    public int getEndSkipPosition();
+
+    /*
+     * Parser state before the skipping
+     */
+    public IndentInfo getStartSkipPosition();
+
+    public ArrayList<IndentInfo> getSkippedLines();
+
+    /*
+     * Skipped fragment containing errors, including preceding indentation
+     */
+    public String getErrorFragment();
+
+    /* *
+     * *Start position of skipped fragment containing errors, including preceding indentation
+     */
+    public int getErrorFragmentStartPosition();
+
+    /*
+     * Recovers by skipping (parse as whitespace) part of the input string
+     */
+    public boolean selectErroneousFragment() throws IOException;
+
+}
\ No newline at end of file

Added: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java	                        (rev 0)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java	2009-07-22 15:37:10 UTC (rev 19757)
@@ -0,0 +1,72 @@
+package org.spoofax.jsglr;
+
+import java.io.IOException;
+import java.util.ArrayList;
+
+public class RegionRecovery implements IRegionRecovery {
+
+    private SGLR myParser;
+    StructureSkipper regionSelector;
+    private StructureSkipSuggestion erroneousRegion;
+    private boolean hasFoundErroneousRegion;
+    
+    
+    public RegionRecovery(SGLR sglr){
+        myParser=sglr;
+        regionSelector = new StructureSkipper(sglr);
+    }
+    
+    private ParserHistory getHistory() {
+        return myParser.getHistory();
+    }
+    
+    public IndentInfo getStartSkipPosition() {
+        return erroneousRegion.getStartSkip();
+    }
+    
+    public int getEndSkipPosition() {
+        return erroneousRegion.getEndSkip().getTokensSeen();
+    }
+
+    public String getErrorFragment() {
+        int tokIndexLine=getHistory().getTokensSeenStartLine(getStartSkipPosition().getTokensSeen());
+        return getHistory().getFragment(tokIndexLine, getEndSkipPosition()-1);
+    }
+
+    public int getErrorFragmentStartPosition() {
+        int tokIndexLine=getHistory().getTokensSeenStartLine(getStartSkipPosition().getTokensSeen());
+        return tokIndexLine;
+    }
+
+    public ArrayList<IndentInfo> getSkippedLines() {
+        return getHistory().getLinesFrom(erroneousRegion.getIndexHistoryStart());
+    }    
+
+    public boolean selectErroneousFragment() throws IOException {                
+        hasFoundErroneousRegion=false;
+        ArrayList<StructureSkipSuggestion> currentSkips=regionSelector.getCurrentSkipSuggestions();
+        int indexSkips=0;
+        StructureSkipSuggestion aSkip=regionSelector.getErroneousPrefix();
+        while (indexSkips < currentSkips.size() && !successCriterion()) {
+            aSkip = currentSkips.get(0);
+            IndentInfo endPos=aSkip.getEndSkip();
+            getHistory().setTokenIndex(endPos.getTokensSeen());
+            myParser.activeStacks.clear();
+            myParser.activeStacks.addAll(endPos.getStackNodes());
+            while(myParser.activeStacks.size() > 0) {                        
+                getHistory().readRecoverToken(myParser); 
+                //System.err.append((char)myParser.currentToken);            
+                myParser.doParseStep();
+            }
+            indexSkips++;
+        }
+        hasFoundErroneousRegion=successCriterion();        
+        erroneousRegion=aSkip;        
+        return hasFoundErroneousRegion;
+    }
+
+    private boolean successCriterion() {
+        return myParser.acceptingStack!=null;
+    }
+
+}

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipSuggestion.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipSuggestion.java	2009-07-22 11:37:03 UTC (rev 19756)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipSuggestion.java	2009-07-22 15:37:10 UTC (rev 19757)
@@ -15,40 +15,54 @@
         return indexHistoryStart>=0 && indexHistoryEnd>=0;
     }
 
-
-    public void setIndexHistoryStart(int indexHistoryStart) {
-        this.indexHistoryStart = indexHistoryStart;
-    }
-
-
     public int getIndexHistoryEnd() {
         return indexHistoryEnd;
     }
 
+    public void setStartSkip(IndentInfo startSkip) {
+        this.startSkip = startSkip;
+        if(endSkip!=null)
+            getEndSkip().fillStackNodes(getStartSkip().getStackNodes());
+    }
 
-    public void setIndexHistoryEnd(int indexHistoryEnd) {
-        this.indexHistoryEnd = indexHistoryEnd;
+    public void setEndSkip(IndentInfo endSkip) {
+        this.endSkip = endSkip;
+        if(startSkip!=null)
+            getEndSkip().fillStackNodes(getStartSkip().getStackNodes());
     }
+    
+    public void setStartSkip(IndentInfo startSkip, int indexStart) {
+        indexHistoryStart=indexStart;
+        setStartSkip(startSkip);        
+    }
 
+    public void setEndSkip(IndentInfo endSkip, int indexEnd) {
+        indexHistoryEnd=indexEnd;
+        setEndSkip(endSkip);
+    }
 
     public StructureSkipSuggestion(){
         indexHistoryEnd=-1;
         indexHistoryStart=-1;
-    }
-   
+    }   
     
     public IndentInfo getStartSkip() {
         return startSkip;
     }
-    public void setStartSkip(IndentInfo startSkip) {
-        this.startSkip = startSkip;
-    }
+    
     public IndentInfo getEndSkip() {
         return endSkip;
     }
-    public void setEndSkip(IndentInfo endSkip) {
+    
+    public void setSkipLocations(IndentInfo startSkip, IndentInfo endSkip) {
+        this.startSkip = startSkip;
         this.endSkip = endSkip;
+        getEndSkip().fillStackNodes(getStartSkip().getStackNodes());
     }
     
-
+    public void setSkipLocations(IndentInfo startSkip, IndentInfo endSkip, int indexStart, int indexEnd) {
+        indexHistoryStart= indexStart;
+        indexHistoryEnd=indexEnd;
+        setSkipLocations(startSkip, endSkip);
+    }
 }

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-22 11:37:03 UTC (rev 19756)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-22 15:37:10 UTC (rev 19757)
@@ -40,6 +40,14 @@
         myParser=sglr;
         skipIndentHandler=new IndentationHandler();
     }
+    //TODO: refactor - fill endSkip in class 
+    public StructureSkipSuggestion getErroneousPrefix() throws IOException{
+        getHistory().setTokenIndex(getHistory().getLastLine().getTokensSeen());
+        IndentInfo nextLine = viewNextLine();
+        StructureSkipSuggestion prefix=new StructureSkipSuggestion();        
+        prefix.setSkipLocations(getHistory().getLine(0), nextLine, 0, getHistory().getIndexLastLine());
+        return prefix;
+    }
     
     public ArrayList<StructureSkipSuggestion> getCurrentSkipSuggestions() throws IOException{
         IndentInfo startLine = getHistory().getLastLine();
@@ -47,9 +55,7 @@
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
         for (IndentInfo endSkip : endLocations) {
             StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
-            skipConstruct.setStartSkip(startLine);
-            endSkip.fillStackNodes(startLine.getStackNodes());
-            skipConstruct.setEndSkip(endSkip);
+            skipConstruct.setSkipLocations(startLine, endSkip);            
             skipSuggestions.add(skipConstruct);
         }
         return skipSuggestions;
@@ -66,11 +72,8 @@
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>(); 
         int startSkip = findPreviousBegin(indexEnd);
         if(startSkip>=0){
-            StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
-            skipConstruct.setStartSkip(getHistory().getLine(startSkip)); 
-            skipConstruct.setIndexHistoryStart(startSkip);
-            skipConstruct.setEndSkip(endLocation);
-            skipConstruct.setIndexHistoryEnd(indexEnd);
+            StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();            
+            skipConstruct.setSkipLocations(getHistory().getLine(startSkip), endLocation, startSkip, indexEnd);
             skipSuggestions.add(skipConstruct); 
         }       
         return skipSuggestions;
@@ -83,11 +86,8 @@
         int startSkip = findPreviousBegin(indexEnd);        
         while(startSkip>=0 && skipSuggestions.size() < MAX_NR_OF_STRUCTURES && (indexLastLine - startSkip)<MAX_NR_OF_LINES){            
             IndentInfo endLocation=getHistory().getLine(indexEnd);
-            StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
-            skipConstruct.setStartSkip(getHistory().getLine(startSkip)); 
-            skipConstruct.setIndexHistoryStart(startSkip);
-            skipConstruct.setEndSkip(endLocation);
-            skipConstruct.setIndexHistoryEnd(indexEnd);
+            StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();            
+            skipConstruct.setSkipLocations(getHistory().getLine(startSkip), endLocation, startSkip, indexEnd);
             skipSuggestions.add(skipConstruct); 
             indexEnd=startSkip;
             startSkip=findPreviousBegin(indexEnd);
@@ -98,17 +98,13 @@
     public ArrayList<StructureSkipSuggestion> getParentSkipSuggestions() throws IOException{
         int errorLineIndex=getHistory().getIndexLastLine();
         IndentInfo startLine = getHistory().getLine(errorLineIndex);
-        ArrayList<IndentInfo> endLocations=findParentEnd(startLine);
+        IndentInfo endSkip=findParentEnd(startLine);
         int startSkipIndex=findParentBegin(errorLineIndex);
         IndentInfo startSkip = getHistory().getLine(startSkipIndex);
-        ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();        
-        for (IndentInfo endSkip : endLocations) {
-            StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
-            skipConstruct.setStartSkip(startSkip);
-            endSkip.fillStackNodes(startSkip.getStackNodes());
-            skipConstruct.setEndSkip(endSkip);
-            skipSuggestions.add(skipConstruct);
-        }        
+        ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
+        StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();            
+        skipConstruct.setSkipLocations(startSkip, endSkip, startSkipIndex, -1);
+        skipSuggestions.add(skipConstruct);                
         return skipSuggestions;
     }    
     
@@ -125,11 +121,8 @@
             forwardPosition =endLocations.get(endLocations.size()-1);            
             IndentInfo startSkip=getHistory().getLine(startSkipIndex);
             for (IndentInfo endSkip : endLocations) {
-                StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
-                skipConstruct.setStartSkip(startSkip);
-                skipConstruct.setIndexHistoryStart(startSkipIndex);
-                endSkip.fillStackNodes(startSkip.getStackNodes());
-                skipConstruct.setEndSkip(endSkip);
+                StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();               
+                skipConstruct.setSkipLocations(startSkip, endSkip, startSkipIndex, -1);
                 skipSuggestions.add(skipConstruct);
             }            
             loopCount++;
@@ -150,11 +143,8 @@
             backwardPositionIndex = startSkipIndex;            
             IndentInfo startSkip = getHistory().getLine(startSkipIndex);
             for (IndentInfo endSkip : endSkipLocations) {
-                StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
-                skipConstruct.setStartSkip(startSkip);
-                skipConstruct.setIndexHistoryStart(startSkipIndex);
-                endSkip.fillStackNodes(startSkip.getStackNodes());
-                skipConstruct.setEndSkip(endSkip);
+                StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();                
+                skipConstruct.setSkipLocations(startSkip, endSkip, startSkipIndex, -1);
                 skipSuggestions.add(skipConstruct);
             }            
             loopCount++;
@@ -209,11 +199,8 @@
             if(!doNext){                
                 IndentInfo startSkip=getHistory().getLine(startSkipIndex);
                 for (IndentInfo endSkip : endSkipLocations) {
-                    StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
-                    skipConstruct.setStartSkip(startSkip);
-                    skipConstruct.setIndexHistoryStart(startSkipIndex);
-                    endSkip.fillStackNodes(startSkip.getStackNodes());
-                    skipConstruct.setEndSkip(endSkip);
+                    StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();                    
+                    skipConstruct.setSkipLocations(startSkip, endSkip, startSkipIndex, -1);
                     skipSuggestions.add(skipConstruct);
                 }                                
             loopCount++;
@@ -332,10 +319,9 @@
         return 0; //SOF
     } 
     
-    private ArrayList<IndentInfo> findParentEnd(IndentInfo startLine) throws IOException{
+    private IndentInfo findParentEnd(IndentInfo startLine) throws IOException{
         getHistory().setTokenIndex(startLine.getTokensSeen());
-        int indentStartLine=startLine.getIndentValue();               
-        ArrayList<IndentInfo> endLocations=new ArrayList<IndentInfo>();
+        int indentStartLine=startLine.getIndentValue();
         IndentInfo nextLine=skipLine(startLine.getLineNumber());
         while(myParser.currentToken!=SGLR.EOF){            
             int indentSkipPosition=nextLine.getIndentValue();
@@ -345,18 +331,16 @@
                     nextLine=skipLine(nextLine.getLineNumber());
                     if(nextLine==null)
                         break;
-                }
-                endLocations.add(nextLine);                
-                return endLocations;                
+                }                              
+                return nextLine;                
             
             }
             nextLine=skipLine(nextLine.getLineNumber());
-        }
-        endLocations.add(nextLine); //EOF
-        return endLocations;
+        }         
+        return nextLine; //EOF
     } 
     
-    //TODO: Level select after zoom
+    //TODO: Level select after zoom (See priorSibling)
     //TODO: refactor
     
     public ArrayList<StructureSkipSuggestion> getZoomOnPreviousSuggestions(StructureSkipSuggestion prevRegion){
@@ -383,21 +367,25 @@
             if(bigIndent!=regionIndent){
                 boolean hasSetRegionEnd = true;
                 StructureSkipSuggestion indentLevelRegion = new StructureSkipSuggestion();
-                IndentInfo currentLine = getHistory().getLine(indexBigIndentLine + 1);
-                indentLevelRegion.setEndSkip(currentLine);
+                IndentInfo currentLine = getHistory().getLine(indexBigIndentLine + 1);                
+                indentLevelRegion.setEndSkip(currentLine, indexBigIndentLine + 1);
                 int nrOfFragments=0;
                 for (int i = indexBigIndentLine - 1; i >= startlineIndex; i--) {
                     currentLine = getHistory().getLine(i);
-                    if (hasSetRegionEnd && currentLine.getIndentValue() < bigIndent) {
-                        indentLevelRegion.setStartSkip(getHistory().getLine(i + 1));
-                        result.add(indentLevelRegion);
-                        hasSetRegionEnd = false;
-                        nrOfFragments+=1;
+                    if (hasSetRegionEnd) {
+                        if(currentLine.getIndentValue() < bigIndent){
+                            indentLevelRegion.setStartSkip(getHistory().getLine(i + 1), i+1);
+                            result.add(indentLevelRegion);
+                            hasSetRegionEnd = false;
+                            nrOfFragments+=1;
+                        }
                     }
-                    if (!hasSetRegionEnd && currentLine.getIndentValue() == bigIndent) {
-                        indentLevelRegion = new StructureSkipSuggestion();
-                        indentLevelRegion.setEndSkip(getHistory().getLine(i + 1));
-                        hasSetRegionEnd = true;
+                    else{
+                        if (currentLine.getIndentValue() == bigIndent) {
+                            indentLevelRegion = new StructureSkipSuggestion();
+                            indentLevelRegion.setEndSkip(getHistory().getLine(i + 1), i+1);
+                            hasSetRegionEnd = true;
+                        }
                     }
                     if(nrOfFragments>=MAX_NR_OF_STRUCTURES)
                         break;



From m.dejonge at tudelft.nl  Thu Jul 23 11:14:10 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 23 Jul 2009 09:14:10 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19758 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907230912.n6N9C6M0021981@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-23 09:14:10 +0000 (Thu, 23 Jul 2009)
New Revision: 19758

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19758&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java

Log:


Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java	2009-07-22 15:37:10 UTC (rev 19757)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java	2009-07-23 09:14:10 UTC (rev 19758)
@@ -43,12 +43,38 @@
     }    
 
     public boolean selectErroneousFragment() throws IOException {                
-        hasFoundErroneousRegion=false;
-        ArrayList<StructureSkipSuggestion> currentSkips=regionSelector.getCurrentSkipSuggestions();
+        hasFoundErroneousRegion=false; 
+        ArrayList<StructureSkipSuggestion> prevRegions=regionSelector.getPreviousSkipSuggestions();
+        if(trySetErroneousRegion(prevRegions)){
+            System.err.println("PREVIOUS REGION");
+            return true;
+        }
+        ArrayList<StructureSkipSuggestion> currentRegions=regionSelector.getCurrentSkipSuggestions();
+        if(trySetErroneousRegion(currentRegions)){
+            System.err.println("CURRENT REGION");
+            return true;
+        }
+        ArrayList<StructureSkipSuggestion> priorRegions=regionSelector.getPriorSkipSuggestions();
+        if(trySetErroneousRegion(priorRegions)){
+            System.err.println("PRIOR REGIONS");
+            return true;
+        }
+        else {
+            erroneousRegion=regionSelector.getErroneousPrefix();
+            return false;
+        }
+    }
+
+    private boolean trySetErroneousRegion(ArrayList<StructureSkipSuggestion> regions) throws IOException {
+        StructureSkipSuggestion aSkip=new StructureSkipSuggestion();
         int indexSkips=0;
-        StructureSkipSuggestion aSkip=regionSelector.getErroneousPrefix();
-        while (indexSkips < currentSkips.size() && !successCriterion()) {
-            aSkip = currentSkips.get(0);
+        while (indexSkips < regions.size() && !successCriterion()) {
+            aSkip = regions.get(0);
+            //Debug info
+            System.err.print("**************");
+            erroneousRegion=aSkip;
+            System.err.print(getErrorFragment());
+            
             IndentInfo endPos=aSkip.getEndSkip();
             getHistory().setTokenIndex(endPos.getTokensSeen());
             myParser.activeStacks.clear();
@@ -60,8 +86,9 @@
             }
             indexSkips++;
         }
-        hasFoundErroneousRegion=successCriterion();        
-        erroneousRegion=aSkip;        
+        hasFoundErroneousRegion=successCriterion();
+        if(hasFoundErroneousRegion)
+            erroneousRegion=aSkip;
         return hasFoundErroneousRegion;
     }
 

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-22 15:37:10 UTC (rev 19757)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-23 09:14:10 UTC (rev 19758)
@@ -421,6 +421,8 @@
         if (indexLine==0)
             return false;
         IndentInfo prevLine=getHistory().getLine(indexLine-1);
+        //if(prevLine.getIndentValue()>= line.getIndentValue())
+          //  return false;
         int startTokLine=line.structureStartPosition();
         if(startTokLine==0)
             return true;
@@ -455,7 +457,7 @@
     private boolean isOpeningLine(IndentInfo currLine) throws IOException {
         if(useCurlyBraces)
             return myParser.currentToken=='{';
-        IndentInfo nextLine = viewNextLine();
+        IndentInfo nextLine = viewNextLine(currLine);
         if(nextLine.getIndentValue()<=currLine.getIndentValue())
             return false;
         return true;
@@ -464,7 +466,7 @@
     private boolean isClosingLine(IndentInfo currLine) throws IOException {        
         if(useCurlyBraces)
             return myParser.currentToken=='}';
-        IndentInfo nextLine = viewNextLine();
+        IndentInfo nextLine = viewNextLine(currLine);
         if(nextLine.getIndentValue()>currLine.getIndentValue())
             return false;
         if(nextLine.getIndentValue() < currLine.getIndentValue())
@@ -473,15 +475,24 @@
     }
 
     private IndentInfo viewNextLine() throws IOException {
-        int currentLocation = getHistory().getTokenIndex();
+        int currentLocation = getHistory().getTokenIndex()-1;
         IndentInfo nextLine = skipLine(-1);
         getHistory().setTokenIndex(currentLocation);
         return nextLine;
-    }    
+    }   
+    
+    private IndentInfo viewNextLine(IndentInfo currLine) throws IOException {
+        int currentLocation = getHistory().getTokenIndex()-1;
+        getHistory().setTokenIndex(currLine.getTokensSeen()-1);
+        IndentInfo nextLine = skipLine(currLine.getLineNumber());
+        getHistory().setTokenIndex(currentLocation);
+        return nextLine;
+    }   
 
     private IndentInfo skipLine(int lineNumber) throws IOException {
         int newLineNumber=lineNumber;
         skipIndentHandler.setInLeftMargin(false);
+        getHistory().readRecoverToken(myParser);
         while(myParser.currentToken!=SGLR.EOF){
             getHistory().readRecoverToken(myParser);
             if(myParser.currentToken=='\n')



From L.C.L.Kats at tudelft.nl  Thu Jul 23 15:20:07 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 23 Jul 2009 13:20:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19759 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr
Message-ID: <200907231318.n6NDI2Sw024824@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-23 13:20:07 +0000 (Thu, 23 Jul 2009)
New Revision: 19759

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19759&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_open_parsetable.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java

Log:
Sanity checks and comments.

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_open_parsetable.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_open_parsetable.java	2009-07-23 09:14:10 UTC (rev 19758)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_open_parsetable.java	2009-07-23 13:20:07 UTC (rev 19759)
@@ -35,6 +35,8 @@
 	    IStrategoInt cached = parseTableCache.get(tvars[0]);
 	    if (cached != null) {
 	        env.setCurrent(cached);
+	        if(getLibrary(env).getParseTable(cached.intValue()) == null)
+	        	throw new IllegalStateException("Inconsistent context: wrong JSGLR library instance");
 	        return true;
 	    }
 	    

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java	2009-07-23 09:14:10 UTC (rev 19758)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java	2009-07-23 13:20:07 UTC (rev 19759)
@@ -71,10 +71,10 @@
 		
 		JSGLRLibrary lib = getLibrary(env);
 		ParseTable pt = lib.getParseTable(Tools.asJavaInt(tvars[1]));
+		if (pt == null)
+			return false;
 		
 		SGLR parser = makeSGLR(factory.getFactory(), pt);
-		// parser.setFilter(true);
-		// parser.setHeuristicFilters(false);
 		
 		InputStream is = new ByteArrayInputStream(Tools.asJavaString(tvars[0]).getBytes());
 		try {
@@ -97,6 +97,7 @@
 		return false;
 	}
 
+	// overridden in JSGLR_parse_string_compat
 	protected SGLR makeSGLR(ATermFactory factory, ParseTable table) {
 		return new SGLR(factory, table);
 	}



From L.C.L.Kats at tudelft.nl  Thu Jul 23 15:23:20 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 23 Jul 2009 13:23:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19760 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.generator
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards
	org.strategoxt.imp.runtime
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter
Message-ID: <200907231321.n6NDLGuL024863@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-23 13:23:20 +0000 (Thu, 23 Jul 2009)
New Revision: 19760

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19760&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/IWrappedAstNode.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNode.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeAppl.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeList.java

Log:
- Got the stupid wizard working
- Ensured that org.strategoxt.imp.generator can also be built using strategoxt.jar instead of strj


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/Makefile
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/Makefile	2009-07-23 13:20:07 UTC (rev 19759)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/Makefile	2009-07-23 13:23:20 UTC (rev 19760)
@@ -23,31 +23,32 @@
     -la stratego-rtg \
     -la stratego-sdf \
     -la stratego-aterm \
-    -I $(HOME)/.nix-profile/share/java-front \
-    -I $(HOME)/.nix-profile/share/gpp \
-    -I $(HOME)/.nix-profile/share/xml-front \
-    -I $(HOME)/.nix-profile/share/sdf-tools \
-    -I $(HOME)/.nix-profile/share/xtc \
+    -I ${HOME}/.nix-profile/share/java-front \
+    -I ${HOME}/.nix-profile/share/gpp \
+    -I ${HOME}/.nix-profile/share/xml-front \
+    -I ${HOME}/.nix-profile/share/sdf-tools \
+    -I ${HOME}/.nix-profile/share/xtc \
     `pkg-config --variable=strcxtcflags strategoxt`
 
-JAVACFLAGS=-J-Xmx256m -J-Xms100m -J-server -J-XX:+UseParallelGC -cp $(CLASSPATH) -source 5 -nowarn
+JAVACFLAGS=-J-Xmx256m -J-Xms100m -J-server -J-XX:+UseParallelGC -cp strategoxt.jar -source 5 -nowarn
 JAVAC=`if which ecj >/dev/null; then echo ecj; else echo javac; fi`
+STRJ=`if which strj >/dev/null; then echo strj; elif [ -e strategoxt.jar ]; then echo java -server -Xss4m -jar strategoxt.jar; else echo Please install strj or put strategoxt.jar into the current directory. >&2; exit 1; fi`
 
 SDFINCLUDES = \
-    -Idef $(HOME)/.nix-profile/share/java-front-syntax/JavaMix.def \
-    -Idef $(HOME)/.nix-profile/share/java-front/JavaEBlockMix.def \
-    -Idef $(HOME)/.nix-profile/share/java-front/EmbeddedJavaMix.def
+    -Idef ${HOME}/.nix-profile/share/java-front-syntax/JavaMix.def \
+    -Idef ${HOME}/.nix-profile/share/java-front/JavaEBlockMix.def \
+    -Idef ${HOME}/.nix-profile/share/java-front/EmbeddedJavaMix.def
 
 # I don't care much for nullary constructor warnings unless it's about lowercase ones, such as 'start'
 STRCSTFU=2>&1 | grep -vE 'warning ] Nullary constructor .*[A-Z]|warning ] multiple external| \[ExtSDef\(|stratego-trm|module-name-checked|module-name-checked"' \
                  >&2
 
 STRINCLUDES = \
-	-I $(HOME)/.nix-profile/share/sdf/xml-front \
-	-I $(HOME)/.nix-profile/share/sdf/gpp \
-	-I $(HOME)/.nix-profile/share/sdf/stratego-regular \
-	-I $(HOME)/.nix-profile/share/sdf/sdf-front/ \
-	-I $(HOME)/.nix-profile/share/java-front/ \
+	-I ${HOME}/.nix-profile/share/sdf/xml-front \
+	-I ${HOME}/.nix-profile/share/sdf/gpp \
+	-I ${HOME}/.nix-profile/share/sdf/stratego-regular \
+	-I ${HOME}/.nix-profile/share/sdf/sdf-front \
+	-I ${HOME}/.nix-profile/share/java-front \
 	-I src/syntax \
     `pkg-config --variable=strcflags java-front`
 
@@ -63,15 +64,15 @@
 
 sdf2imp : $(RTREES) $(SYNTAX) Makefile src/include/rtg.tbl
 	strc -i src/sdf2imp.str -o $@ $(STRINCLUDES) $(STRCFLAGS) -m main-sdf2imp \
-	     -la $(HOME)/.nix-profile/lib/libjava-front.la $(STRCSTFU)
+	     -la ${HOME}/.nix-profile/lib/libjava-front.la $(STRCSTFU)
 	rm sdf2imp.c sdf2imp.lo sdf2imp.o
 
 %.class : %.java strategoxt.jar
 	$(JAVAC) $(JAVACFLAGS) -cp strategoxt.jar $<
 
 src-gen/org/strategoxt/imp/generator/sdf2imp.java : $(RTREES) $(SYNTAX) Makefile src/include/rtg.tbl
-	strj -i src/sdf2imp.str -o $@ $(STRINCLUDES) $(STRCFLAGS) -m main-sdf2imp \
-	     --library -la java-front -p org.strategoxt.imp.generator $(STRCSTFU)
+	$(STRJ) -i src/sdf2imp.str -o $@ $(STRINCLUDES) $(STRCFLAGS) -m main-sdf2imp \
+	        -la java-front --library -p org.strategoxt.imp.generator $(STRCSTFU)
 
 syntax : $(SYNTAX)
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java	2009-07-23 13:20:07 UTC (rev 19759)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java	2009-07-23 13:23:20 UTC (rev 19760)
@@ -14,7 +14,7 @@
 import org.eclipse.core.runtime.Path;
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.strategoxt.strj;
+import org.strategoxt.libstratego_lib;
 import org.strategoxt.imp.editors.editorservice.EditorServiceParseController;
 import org.strategoxt.imp.generator.sdf2imp;
 import org.strategoxt.imp.metatooling.loading.DynamicDescriptorUpdater;

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-07-23 13:20:07 UTC (rev 19759)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-07-23 13:23:20 UTC (rev 19760)
@@ -29,6 +29,7 @@
 import org.strategoxt.lang.StrategoExit;
 
 /**
+ * A wizard for creating new Spoofax/IMP projects.
  * 
  * @author Lennart Kats <lennart add lclnet.nl>
  */
@@ -104,6 +105,7 @@
 		IProject project = workspace.getRoot().getProject(name);
 		project.create(null);
 		project.open(null);
+		boolean success = false;
 		try {
 			agent.setWorkingDir(project.getLocation().toOSString());
 			try {
@@ -118,12 +120,16 @@
 			monitor.worked(1);		
 			
 			monitor.setTaskName("Opening files for editing...");
+			openEditor(project, "/editor/" + name +  ".main.esv");
 			openEditor(project, "/syntax/" + name +  ".sdf");
-			openEditor(project, "/editor/" + name +  ".main.esv");
 			monitor.worked(1);
+			monitor.done();
+			success = true;
 		} finally {
-			monitor.setTaskName("Undoing workspace operations...");
-			project.delete(true, null);
+			if (!success) {
+				monitor.setTaskName("Undoing workspace operations...");
+				project.delete(true, null);
+			}
 		}
 	}
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/build.properties
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/build.properties	2009-07-23 13:20:07 UTC (rev 19759)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/build.properties	2009-07-23 13:23:20 UTC (rev 19760)
@@ -3,6 +3,4 @@
 bin.includes = META-INF/,\
                plugin.xml,\
                .,\
-               syntax/EditorService.tbl,\
-               include/
-src.includes = include/
+               syntax/EditorService.tbl

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java	2009-07-23 13:20:07 UTC (rev 19759)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java	2009-07-23 13:23:20 UTC (rev 19760)
@@ -86,7 +86,9 @@
 				}
 				try {
 					Debug.startTimer("Loading Stratego module ", filename);
-					Environment.addToInterpreter(interpreter, descriptor.openAttachment(filename));
+					synchronized (Environment.getSyncRoot()) {
+						interpreter.load(descriptor.openAttachment(filename));
+					}
 					Debug.stopTimer("Successfully loaded " +  filename);
 				} catch (InterpreterException e) {
 					Environment.logException(new BadDescriptorException("Error loading compiler service provider " + filename, e));

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/IWrappedAstNode.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/IWrappedAstNode.java	2009-07-23 13:20:07 UTC (rev 19759)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/IWrappedAstNode.java	2009-07-23 13:23:20 UTC (rev 19760)
@@ -1,7 +1,5 @@
 package org.strategoxt.imp.runtime.stratego.adapter;
 
-import lpg.runtime.IAst;
-
 import org.spoofax.interpreter.terms.IStrategoTerm;
 
 /**

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNode.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNode.java	2009-07-23 13:20:07 UTC (rev 19759)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNode.java	2009-07-23 13:23:20 UTC (rev 19760)
@@ -1,7 +1,5 @@
 package org.strategoxt.imp.runtime.stratego.adapter;
 
-import lpg.runtime.IAst;
-
 import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermPrinter;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeAppl.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeAppl.java	2009-07-23 13:20:07 UTC (rev 19759)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeAppl.java	2009-07-23 13:23:20 UTC (rev 19760)
@@ -1,7 +1,5 @@
 package org.strategoxt.imp.runtime.stratego.adapter;
 
-import lpg.runtime.IAst;
-
 import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.spoofax.interpreter.terms.IStrategoConstructor;
 import org.spoofax.interpreter.terms.IStrategoTerm;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeFactory.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeFactory.java	2009-07-23 13:20:07 UTC (rev 19759)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeFactory.java	2009-07-23 13:23:20 UTC (rev 19760)
@@ -1,20 +1,12 @@
 package org.strategoxt.imp.runtime.stratego.adapter;
 
-import java.io.IOException;
-import java.io.InputStream;
-
-import lpg.runtime.IAst;
-
 import org.spoofax.interpreter.adapter.aterm.BAFBasicTermFactory;
-import org.spoofax.interpreter.terms.BasicTermFactory;
 import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.spoofax.interpreter.terms.IStrategoConstructor;
 import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.IStrategoTuple;
 import org.spoofax.interpreter.terms.ITermFactory;
-import org.spoofax.interpreter.terms.TermConverter;
-import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.parser.ast.IntAstNode;
 import org.strategoxt.imp.runtime.parser.ast.ListAstNode;
 import org.strategoxt.imp.runtime.parser.ast.StringAstNode;
@@ -26,8 +18,6 @@
  * @author Karl Trygve Kalleberg <karltk add strategoxt.org>
  */
 public class WrappedAstNodeFactory extends BAFBasicTermFactory implements ITermFactory {	
-	private final TermConverter converter = new TermConverter(this);
-
 	public IStrategoTerm wrap(IStrategoAstNode node) {
 		if(node instanceof IntAstNode) {
 			return new WrappedAstNodeInt(this, (IntAstNode) node);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeList.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeList.java	2009-07-23 13:20:07 UTC (rev 19759)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeList.java	2009-07-23 13:23:20 UTC (rev 19760)
@@ -2,8 +2,6 @@
 
 import java.util.NoSuchElementException;
 
-import lpg.runtime.IAst;
-
 import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermPrinter;



From m.dejonge at tudelft.nl  Thu Jul 23 17:08:21 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 23 Jul 2009 15:08:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19761 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907231506.n6NF6GLs026560@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-23 15:08:21 +0000 (Thu, 23 Jul 2009)
New Revision: 19761

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19761&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java

Log:
- Deep-zoom
- All Region-selections used for recovery
- Bug-fixing

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java	2009-07-23 13:23:20 UTC (rev 19760)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java	2009-07-23 15:08:21 UTC (rev 19761)
@@ -44,36 +44,75 @@
 
     public boolean selectErroneousFragment() throws IOException {                
         hasFoundErroneousRegion=false; 
+        
         ArrayList<StructureSkipSuggestion> prevRegions=regionSelector.getPreviousSkipSuggestions();
+        //System.err.println("PREVIOUS REGION");
         if(trySetErroneousRegion(prevRegions)){
-            System.err.println("PREVIOUS REGION");
+            ArrayList<StructureSkipSuggestion> decomposedRegions=regionSelector.getZoomOnPreviousSuggestions(erroneousRegion);
+            boolean findSmallerPart= trySetErroneousRegion(decomposedRegions);
+            if(findSmallerPart){
+                ArrayList<StructureSkipSuggestion> childRegions=regionSelector.getPickErroneousChild(erroneousRegion);
+                trySetErroneousRegion(childRegions);
+            }
             return true;
         }
         ArrayList<StructureSkipSuggestion> currentRegions=regionSelector.getCurrentSkipSuggestions();
-        if(trySetErroneousRegion(currentRegions)){
-            System.err.println("CURRENT REGION");
+        //System.err.println("CURRENT REGION");
+        if(trySetErroneousRegion(currentRegions)){            
             return true;
         }
+        //System.err.println("PRIOR REGIONS");
         ArrayList<StructureSkipSuggestion> priorRegions=regionSelector.getPriorSkipSuggestions();
         if(trySetErroneousRegion(priorRegions)){
-            System.err.println("PRIOR REGIONS");
+            ArrayList<StructureSkipSuggestion> decomposedRegions=regionSelector.getZoomOnPreviousSuggestions(erroneousRegion);
+            boolean findSmallerPart=trySetErroneousRegion(decomposedRegions);
+            if(findSmallerPart){
+                ArrayList<StructureSkipSuggestion> childRegions=regionSelector.getPickErroneousChild(erroneousRegion);
+                trySetErroneousRegion(childRegions);
+            }
             return true;
         }
+        //System.err.println("FW-SIB REGIONS");
+        ArrayList<StructureSkipSuggestion> siblingForWardRegions=regionSelector.getSibblingForwardSuggestions();
+        if(trySetErroneousRegion(siblingForWardRegions)){            
+            return true;
+        }
+        System.err.println("BW-SIB REGIONS");
+        ArrayList<StructureSkipSuggestion> siblingBackWardRegions=regionSelector.getSibblingBackwardSuggestions();
+        if(trySetErroneousRegion(siblingBackWardRegions)){            
+            return true;
+        }
+        ArrayList<StructureSkipSuggestion> siblingSurroundingRegions=regionSelector.getSibblingSurroundingSuggestions();
+        if(trySetErroneousRegion(siblingSurroundingRegions)){            
+            return true;
+        }
+        ArrayList<StructureSkipSuggestion> parentRegion=regionSelector.getParentSkipSuggestions();
+        if(trySetErroneousRegion(parentRegion)){            
+            return true;
+        }
         else {
             erroneousRegion=regionSelector.getErroneousPrefix();
-            return false;
+            ArrayList<StructureSkipSuggestion> decomposedRegions=regionSelector.getZoomOnPreviousSuggestions(erroneousRegion);
+            boolean findSmallerPart=trySetErroneousRegion(decomposedRegions);
+            if(findSmallerPart){
+                ArrayList<StructureSkipSuggestion> childRegions=regionSelector.getPickErroneousChild(erroneousRegion);
+                trySetErroneousRegion(childRegions);
+            }
+            return findSmallerPart;
         }
     }
 
     private boolean trySetErroneousRegion(ArrayList<StructureSkipSuggestion> regions) throws IOException {
         StructureSkipSuggestion aSkip=new StructureSkipSuggestion();
         int indexSkips=0;
+        myParser.acceptingStack=null; //undo success
         while (indexSkips < regions.size() && !successCriterion()) {
-            aSkip = regions.get(0);
+            aSkip = regions.get(indexSkips);
             //Debug info
-            System.err.print("**************");
-            erroneousRegion=aSkip;
-            System.err.print(getErrorFragment());
+            //System.err.print("**************");
+            //erroneousRegion=aSkip;
+            //System.err.print(getErrorFragment());
+            //System.err.print(getHistory().getFragment(aSkip.getStartSkip().getTokensSeen(), aSkip.getEndSkip().getTokensSeen()));
             
             IndentInfo endPos=aSkip.getEndSkip();
             getHistory().setTokenIndex(endPos.getTokensSeen());
@@ -84,7 +123,7 @@
                 //System.err.append((char)myParser.currentToken);            
                 myParser.doParseStep();
             }
-            indexSkips++;
+            indexSkips++;            
         }
         hasFoundErroneousRegion=successCriterion();
         if(hasFoundErroneousRegion)

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-23 13:23:20 UTC (rev 19760)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-23 15:08:21 UTC (rev 19761)
@@ -9,8 +9,8 @@
 public class StructureSkipper {
     
     //restrictions on area searched for erroneous region
-    private final static int MAX_NR_OF_LINES=25;
-    private final static int MAX_NR_OF_STRUCTURES=4;
+    private final static int MAX_NR_OF_LINES=30;
+    private final static int MAX_NR_OF_STRUCTURES=20;
     
     enum indentShift{
         INDENT,
@@ -44,13 +44,22 @@
     public StructureSkipSuggestion getErroneousPrefix() throws IOException{
         getHistory().setTokenIndex(getHistory().getLastLine().getTokensSeen());
         IndentInfo nextLine = viewNextLine();
-        StructureSkipSuggestion prefix=new StructureSkipSuggestion();        
-        prefix.setSkipLocations(getHistory().getLine(0), nextLine, 0, getHistory().getIndexLastLine());
+        StructureSkipSuggestion prefix=new StructureSkipSuggestion();
+        IndentInfo startLoc=IndentInfo.cloneIndentInfo(getHistory().getLine(0));        
+        prefix.setSkipLocations(startLoc, nextLine, 0, getHistory().getIndexLastLine());
         return prefix;
     }
     
     public ArrayList<StructureSkipSuggestion> getCurrentSkipSuggestions() throws IOException{
-        IndentInfo startLine = getHistory().getLastLine();
+        int indexLastLine=getHistory().getIndexLastLine();
+        if (isErrorOnClosingLine(indexLastLine))
+            return new ArrayList<StructureSkipSuggestion>();
+        return selectRegion(indexLastLine);
+    }
+
+    private ArrayList<StructureSkipSuggestion> selectRegion(int indexLine)
+            throws IOException {
+        IndentInfo startLine = IndentInfo.cloneIndentInfo(getHistory().getLine(indexLine));
         ArrayList<IndentInfo> endLocations=findCurrentEnd(startLine);
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
         for (IndentInfo endSkip : endLocations) {
@@ -63,7 +72,12 @@
     
     public ArrayList<StructureSkipSuggestion> getPreviousSkipSuggestions() throws IOException{
         int indexEnd=getHistory().getIndexLastLine();
-        IndentInfo endLocation=getHistory().getLine(indexEnd);
+        return selectPreviousRegion(indexEnd);
+    }
+
+    private ArrayList<StructureSkipSuggestion> selectPreviousRegion(int indexEnd)
+            throws IOException {
+        IndentInfo endLocation=IndentInfo.cloneIndentInfo(getHistory().getLine(indexEnd));
         boolean errorOnClosingBrace=isErrorOnClosingLine(indexEnd);
         if(errorOnClosingBrace){
             getHistory().setTokenIndex(endLocation.getTokensSeen());
@@ -72,22 +86,29 @@
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>(); 
         int startSkip = findPreviousBegin(indexEnd);
         if(startSkip>=0){
-            StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();            
-            skipConstruct.setSkipLocations(getHistory().getLine(startSkip), endLocation, startSkip, indexEnd);
+            StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion(); 
+            IndentInfo startLoc = IndentInfo.cloneIndentInfo(getHistory().getLine(startSkip));
+            skipConstruct.setSkipLocations(startLoc, endLocation, startSkip, indexEnd);
             skipSuggestions.add(skipConstruct); 
         }       
         return skipSuggestions;
     } 
     
     public ArrayList<StructureSkipSuggestion> getPriorSkipSuggestions() throws IOException{
-        ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>(); 
-        int indexLastLine=getHistory().getIndexLastLine();        
+        int indexLastLine=getHistory().getIndexLastLine();
+        return selectPriorRegions(indexLastLine);
+    }
+
+    private ArrayList<StructureSkipSuggestion> selectPriorRegions(
+            int indexLastLine) throws IOException {
+        ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();                
         int indexEnd = findPreviousBegin(indexLastLine);        
         int startSkip = findPreviousBegin(indexEnd);        
         while(startSkip>=0 && skipSuggestions.size() < MAX_NR_OF_STRUCTURES && (indexLastLine - startSkip)<MAX_NR_OF_LINES){            
-            IndentInfo endLocation=getHistory().getLine(indexEnd);
-            StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();            
-            skipConstruct.setSkipLocations(getHistory().getLine(startSkip), endLocation, startSkip, indexEnd);
+            IndentInfo endLocation=IndentInfo.cloneIndentInfo(getHistory().getLine(indexEnd));
+            StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
+            IndentInfo startLoc=IndentInfo.cloneIndentInfo(getHistory().getLine(startSkip));
+            skipConstruct.setSkipLocations(startLoc, endLocation, startSkip, indexEnd);
             skipSuggestions.add(skipConstruct); 
             indexEnd=startSkip;
             startSkip=findPreviousBegin(indexEnd);
@@ -100,7 +121,7 @@
         IndentInfo startLine = getHistory().getLine(errorLineIndex);
         IndentInfo endSkip=findParentEnd(startLine);
         int startSkipIndex=findParentBegin(errorLineIndex);
-        IndentInfo startSkip = getHistory().getLine(startSkipIndex);
+        IndentInfo startSkip = IndentInfo.cloneIndentInfo(getHistory().getLine(startSkipIndex));
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
         StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();            
         skipConstruct.setSkipLocations(startSkip, endSkip, startSkipIndex, -1);
@@ -119,7 +140,7 @@
         while(loopCount<MAX_NR_OF_STRUCTURES && forwardPosition.getIndentValue()==startLine.getIndentValue()&& (forwardPosition.getLineNumber()-startLine.getLineNumber()) < MAX_NR_OF_LINES) {
             ArrayList<IndentInfo> endLocations=findCurrentEnd(forwardPosition);
             forwardPosition =endLocations.get(endLocations.size()-1);            
-            IndentInfo startSkip=getHistory().getLine(startSkipIndex);
+            IndentInfo startSkip=IndentInfo.cloneIndentInfo(getHistory().getLine(startSkipIndex));
             for (IndentInfo endSkip : endLocations) {
                 StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();               
                 skipConstruct.setSkipLocations(startSkip, endSkip, startSkipIndex, -1);
@@ -135,20 +156,20 @@
         ArrayList<IndentInfo> endSkipLocations=findCurrentEnd(getHistory().getLastLine());
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
         int backwardPositionIndex = indexErrorLine;
-        int loopCount=0;
+        int loopCount=0;       
         while(loopCount<MAX_NR_OF_STRUCTURES && (indexErrorLine - backwardPositionIndex)< MAX_NR_OF_LINES) {
             int startSkipIndex=findPreviousBegin(backwardPositionIndex);
             if(startSkipIndex<0)
                 break;
-            backwardPositionIndex = startSkipIndex;            
-            IndentInfo startSkip = getHistory().getLine(startSkipIndex);
+            backwardPositionIndex = startSkipIndex;
             for (IndentInfo endSkip : endSkipLocations) {
+                IndentInfo startSkip = IndentInfo.cloneIndentInfo(getHistory().getLine(startSkipIndex));
                 StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();                
-                skipConstruct.setSkipLocations(startSkip, endSkip, startSkipIndex, -1);
+                skipConstruct.setSkipLocations(startSkip, IndentInfo.cloneIndentInfo(endSkip), startSkipIndex, -1);
                 skipSuggestions.add(skipConstruct);
             }            
             loopCount++;
-        }        
+        }
         return skipSuggestions;
     }
 
@@ -163,6 +184,9 @@
         if(startSkipIndex >=0){            
             backwardPosition = startSkipIndex;            
         }
+        else{
+            startSkipIndex=backwardPosition;
+        }
         boolean forWardsOn=true;
         boolean backwsEndReached=false;
         boolean forwardsEndReached=false;
@@ -197,7 +221,7 @@
                 }
             }
             if(!doNext){                
-                IndentInfo startSkip=getHistory().getLine(startSkipIndex);
+                IndentInfo startSkip=IndentInfo.cloneIndentInfo(getHistory().getLine(startSkipIndex));
                 for (IndentInfo endSkip : endSkipLocations) {
                     StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();                    
                     skipConstruct.setSkipLocations(startSkip, endSkip, startSkipIndex, -1);
@@ -260,7 +284,9 @@
     } 
     
     private int findPreviousBegin(int indexLine) throws IOException{ 
-        IndentInfo startLine=getHistory().getLine(indexLine);
+        if(indexLine<0 || indexLine>getHistory().getIndexLastLine())
+            return -1;
+        IndentInfo startLine=IndentInfo.cloneIndentInfo(getHistory().getLine(indexLine));
         int indentStartLine=startLine.getIndentValue();        
         boolean prevLine=true;        
         int indexHistoryLines=indexLine;
@@ -291,7 +317,7 @@
     }  
     
     private int findParentBegin(int startLineIndex) throws IOException{
-        IndentInfo startLine = getHistory().getLine(startLineIndex);
+        IndentInfo startLine = IndentInfo.cloneIndentInfo(getHistory().getLine(startLineIndex));
         int indentStartLine=startLine.getIndentValue();
         int indexHistoryLines=startLineIndex;
         while(indexHistoryLines > 0){
@@ -396,9 +422,17 @@
         return result;
     }
     
+    public ArrayList<StructureSkipSuggestion> getPickErroneousChild(StructureSkipSuggestion prevRegion) throws IOException{
+        ArrayList<StructureSkipSuggestion> result=new ArrayList<StructureSkipSuggestion>();
+        result.addAll(selectRegion(prevRegion.getIndexHistoryEnd()-1));
+        result.addAll(selectPreviousRegion(prevRegion.getIndexHistoryEnd()-1));
+        result.addAll(selectPriorRegions(prevRegion.getIndexHistoryEnd()-1));
+        return result;
+    }
+    
 
     private boolean isClosingLine(int indexLine) {             
-        IndentInfo currLine=getHistory().getLine(indexLine);        
+        IndentInfo currLine= getHistory().getLine(indexLine);        
         if(useCurlyBraces)
             return getHistory().recoverTokenStream[currLine.getTokensSeen()]=='}';  
         if(indexLine==0)
@@ -421,8 +455,8 @@
         if (indexLine==0)
             return false;
         IndentInfo prevLine=getHistory().getLine(indexLine-1);
-        //if(prevLine.getIndentValue()>= line.getIndentValue())
-          //  return false;
+        if(prevLine.getIndentValue()<= line.getIndentValue())
+            return false;
         int startTokLine=line.structureStartPosition();
         if(startTokLine==0)
             return true;



From L.C.L.Kats at tudelft.nl  Fri Jul 24 15:42:47 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 24 Jul 2009 13:42:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19762 - LennartKats -
	in strc-java/trunk: . java/runtime/org/strategoxt
	java/runtime/org/strategoxt/lang
	java/runtime/org/strategoxt/lang/compat/override
	java/runtime/org/strategoxt/lang/parallel test test/basic trans
Message-ID: <200907241340.n6ODefj9009086@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-24 13:42:45 +0000 (Fri, 24 Jul 2009)
New Revision: 19762

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19762&view=rev

Added:
   strc-java/trunk/test/basic/gchoice_2.str
   strc-java/trunk/test/basic/iset_2.str
   strc-java/trunk/test/basic/match_3.str
   strc-java/trunk/test/basic/match_4.str
   strc-java/trunk/test/basic/match_5.str
   strc-java/trunk/test/basic/scopes_1.str
   strc-java/trunk/test/basic/scopes_2.str
   strc-java/trunk/trans/java-dead-assigns.meta
   strc-java/trunk/trans/java-dead-assigns.str
   strc-java/trunk/trans/java-optimize.meta
   strc-java/trunk/trans/java-optimize.str
   strc-java/trunk/trans/java-simplify.meta
   strc-java/trunk/trans/java-simplify.str
Modified:
   strc-java/trunk/build.properties
   strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelContext.java
   strc-java/trunk/test/Makefile.am
   strc-java/trunk/test/basic/gchoice_1.str
   strc-java/trunk/test/basic/iset_1.str
   strc-java/trunk/trans/Makefile.am
   strc-java/trunk/trans/java-postprocess.str
   strc-java/trunk/trans/s2j.str
   strc-java/trunk/trans/shared-constructors.str
   strc-java/trunk/trans/strj.str

Log:
* Fixed compilation of projects that use `strcflags java-front`

* Fixed format checker output on failure behavior

* Optimization tuning:
  - Split up java-postprocess into java-postprocess, java-simplify, and java-optimize
  - Added some new optimizations, and a java-dead-assigns module that
    performs dead assignment elimination

* Other minor fixes


Changes (first 1000 lines of the diffs):

Modified: strc-java/trunk/build.properties
===================================================================
--- strc-java/trunk/build.properties	2009-07-23 15:08:21 UTC (rev 19761)
+++ strc-java/trunk/build.properties	2009-07-24 13:42:45 UTC (rev 19762)
@@ -1,7 +1,6 @@
-source.. = src/java/,\
-           src/test/java/
+source.. = java/runtime,\
+           java/compiler
 bin.includes = META-INF/,\
                .,\
-               plugin.xml,\
                java/strategoxt.jar,\
                java/runtime/

Modified: strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-07-23 15:08:21 UTC (rev 19761)
+++ strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-07-24 13:42:45 UTC (rev 19762)
@@ -8,6 +8,17 @@
 import org.strategoxt.lang.Context;
 
 /**
+ * An interpreter that uses STRJ-compiled versions of the Stratego standard libraries.
+ * 
+ * This interpreter typically loads much faster than the standard interpreter.
+ * Custom libraries can be added using their <code>registerInterop</code>
+ * method:
+ * 
+ * <code>
+ *   HybridInterpreter i = new HybridInterpreter();
+ *   mylib.registerInterop(i.getContext(), i.getCompiledContext());
+ * </code
+ * 
  * @author Lennart Kats <lennart add lclnet.nl>
  */
 public class HybridInterpreter extends Interpreter {
@@ -52,14 +63,14 @@
 	
 	@Override
 	public void addOperatorRegistry(IOperatorRegistry or) {
-		compiledContext.addOperatorRegistry(or);
+		getCompiledContext().addOperatorRegistry(or);
 		getContext().addOperatorRegistry(or);
 	}
 	
 	@Deprecated
 	@Override
 	public void addOperatorRegistry(String domainName, IOperatorRegistry or) {
-		compiledContext.addOperatorRegistry(or);
+		getCompiledContext().addOperatorRegistry(or);
+		getContext().addOperatorRegistry(or);
 	}
-
 }

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	2009-07-23 15:08:21 UTC (rev 19761)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	2009-07-24 13:42:45 UTC (rev 19762)
@@ -47,14 +47,6 @@
     	this(new BAFBasicTermFactory());
     }
     
-    public Context(Context other) {
-    	this(other.getFactory());
-    	operatorRegistryMap.clear();
-    	operatorRegistryMap.putAll(other.operatorRegistryMap);
-    	operatorRegistries.addAll(other.operatorRegistries);
-    	compat.init();
-    }
-    
     public Context(ITermFactory factory) {
     	this(factory, new HashMap<String, IOperatorRegistry>(), new ArrayList<IOperatorRegistry>());
         SSLLibrary ssl = new SSLLibrary();
@@ -66,6 +58,7 @@
     	this.factory = factory;
     	this.operatorRegistryMap = operatorRegistryMap;
     	this.operatorRegistries = operatorRegistries;
+    	compat.init();
     }
 	
 	public final ITermFactory getFactory() {
@@ -107,6 +100,8 @@
         	operatorRegistries.remove(previous);
         	operatorRegistries.add(i, or);
         }
+        lastPrimitiveName1 = null;
+        lastPrimitiveName2 = null;
     }
     
     public void registerComponent(String componentName) {
@@ -164,7 +159,7 @@
 			return lastPrimitive1;
 		} else if (lastPrimitiveName2 == name) {
 			return lastPrimitive2;
-		} else {;
+		} else {
 			for (int i = 0, size = operatorRegistries.size(); i < size; i++) {
 	            AbstractPrimitive p = operatorRegistries.get(i).get(name);
 	            if (p != null) {

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str	2009-07-23 15:08:21 UTC (rev 19761)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str	2009-07-24 13:42:45 UTC (rev 19762)
@@ -14,7 +14,7 @@
   override strc-get-include-dirs =
     <get-config> "-I"
   
-  extend pack-stratego-parse-stratego :
+  extend pack-stratego-parse-stratego:
     (IncludeFromPath(name), includes) -> ("", ast) // (empty result name goes into .dep)
     where
       switch !name
@@ -30,10 +30,14 @@
         case "libstrc":              import-term(libstrc.rtree)
         case "lib":                  import-term(lib.rtree)
         case "liblib":               import-term(liblib.rtree)
-        case "libjava-front":
-          // prefer local (-I) definition
-          override <+ import-term(libjava-front.rtree)
       end => ast
+  
+   extend pack-stratego-parse-stratego:
+     (IncludeFromPath("libjava-front"), includes) -> result
+     where
+       override => result // prefer local (-I) definition
+     <+
+       result := ("", <import-term(libjava-front.rtree)>)
    
    extend xtc-find =
      ?"StrategoRenamed.sdf" // no warning

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelContext.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelContext.java	2009-07-23 15:08:21 UTC (rev 19761)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelContext.java	2009-07-24 13:42:45 UTC (rev 19762)
@@ -65,11 +65,6 @@
 	*/
 	
 	@Override
-	public void postInit(String componentName) {
-		// Do nothing
-	}
-	
-	@Override
 	protected void finalize() throws Throwable {
 		// Do nothing
 	}

Modified: strc-java/trunk/test/Makefile.am
===================================================================
--- strc-java/trunk/test/Makefile.am	2009-07-23 15:08:21 UTC (rev 19761)
+++ strc-java/trunk/test/Makefile.am	2009-07-24 13:42:45 UTC (rev 19762)
@@ -46,10 +46,10 @@
 
 STRC2TESTFILES=$(addprefix strc2/,$(addsuffix .str,$(STRC2TESTS)))
 
-BASICTESTS=build_0 build_1 match_1 match_2 lchoice_1 lchoice_2 gchoice_1 \
-           internal_1 internal_2 override_1 extend_1 \
+BASICTESTS=build_0 build_1 match_1 match_2 match_3 match_4 match_5 lchoice_1 lchoice_2 gchoice_1 gchoice_2 \
+           scopes_1 scopes_2 internal_1 internal_2 override_1 extend_1 \
            shared_var_1 shared_var_2 shared_var_3 shared_var_4 shared_var_5 \
-           dynrules_1 dynrules_2 dynrules_3 dynrules_4 dynrules_5 iset_1 fetch_1 \
+           dynrules_1 dynrules_2 dynrules_3 dynrules_4 dynrules_5 iset_1 iset_2 fetch_1 \
            mapconcat_1 traversal_1 annos_1 annos_2 pp_java5_to_string
 
 BASICTESTFILES=$(addprefix basic/,$(addsuffix .str,$(BASICTESTS)))

Modified: strc-java/trunk/test/basic/gchoice_1.str
===================================================================
--- strc-java/trunk/test/basic/gchoice_1.str	2009-07-23 15:08:21 UTC (rev 19761)
+++ strc-java/trunk/test/basic/gchoice_1.str	2009-07-24 13:42:45 UTC (rev 19762)
@@ -10,10 +10,5 @@
 rules
 
   main =
-    not(
-      id
-      < (id < fail + !3)
-      + !2
-    )
-  ; (id < id + ?never)
+    (id < id + ?never)
   ; not(!never)

Copied: strc-java/trunk/test/basic/gchoice_2.str (from rev 19744, strc-java/trunk/test/basic/gchoice_1.str)
===================================================================
--- strc-java/trunk/test/basic/gchoice_2.str	                        (rev 0)
+++ strc-java/trunk/test/basic/gchoice_2.str	2009-07-24 13:42:45 UTC (rev 19762)
@@ -0,0 +1,17 @@
+module gchoice_2
+
+imports
+  libstratego-lib
+
+signature constructors
+  Nil  : Nil
+  Cons : Term -> Cons
+
+rules
+
+  main =
+    not(
+      id
+      < (id < fail + !3)
+      + !2
+    )


Property changes on: strc-java/trunk/test/basic/gchoice_2.str
___________________________________________________________________
Added: svn:mergeinfo
   + 

Modified: strc-java/trunk/test/basic/iset_1.str
===================================================================
--- strc-java/trunk/test/basic/iset_1.str	2009-07-23 15:08:21 UTC (rev 19761)
+++ strc-java/trunk/test/basic/iset_1.str	2009-07-24 13:42:45 UTC (rev 19762)
@@ -5,11 +5,5 @@
 strategies
 
   main =
-    set := <new-iset>
+    new-iset
   ; iset-add(|1)
-  ; iset-clear
-  ; iset-addlist(|[2,3,4])
-  ; with(iset-get-index(|3); debug => 1)
-  ; with(iset-add(inc | 3); debug => 2)
-  ; with(iset-add(inc | 5))
-  ; iset-elements; debug => [2,3,4,5]

Copied: strc-java/trunk/test/basic/iset_2.str (from rev 19744, strc-java/trunk/test/basic/iset_1.str)
===================================================================
--- strc-java/trunk/test/basic/iset_2.str	                        (rev 0)
+++ strc-java/trunk/test/basic/iset_2.str	2009-07-24 13:42:45 UTC (rev 19762)
@@ -0,0 +1,15 @@
+module iset_2
+
+imports libstratego-lib
+
+strategies
+
+  main =
+    set := <new-iset>
+  ; iset-add(|1)
+  ; iset-clear
+  ; iset-addlist(|[2,3,4])
+  ; with(iset-get-index(|3); debug => 1)
+  ; with(iset-add(inc | 3); debug => 2)
+  ; with(iset-add(inc | 5))
+  ; iset-elements; debug => [2,3,4,5]


Property changes on: strc-java/trunk/test/basic/iset_2.str
___________________________________________________________________
Added: svn:mergeinfo
   + 

Added: strc-java/trunk/test/basic/match_3.str
===================================================================
--- strc-java/trunk/test/basic/match_3.str	                        (rev 0)
+++ strc-java/trunk/test/basic/match_3.str	2009-07-24 13:42:45 UTC (rev 19762)
@@ -0,0 +1,12 @@
+module match_3
+
+imports libstratego-lib
+
+rules
+
+  main =
+    x := 1
+  ; y := x
+  ; z := y
+  ; !x
+    

Added: strc-java/trunk/test/basic/match_4.str
===================================================================
--- strc-java/trunk/test/basic/match_4.str	                        (rev 0)
+++ strc-java/trunk/test/basic/match_4.str	2009-07-24 13:42:45 UTC (rev 19762)
@@ -0,0 +1,11 @@
+module match_4
+
+imports
+  libstratego-lib
+
+strategies
+
+  main =
+    a := 1
+  ; b := 2
+  ; not(?a)

Added: strc-java/trunk/test/basic/match_5.str
===================================================================
--- strc-java/trunk/test/basic/match_5.str	                        (rev 0)
+++ strc-java/trunk/test/basic/match_5.str	2009-07-24 13:42:45 UTC (rev 19762)
@@ -0,0 +1,15 @@
+module match_5
+
+imports
+  libstratego-lib
+
+strategies
+
+  main =
+    x := 0
+  ; !1
+  ; switch !x
+      case fail: !"nested case condition"
+      case is-int: id
+    end
+  ; ?1

Added: strc-java/trunk/test/basic/scopes_1.str
===================================================================
--- strc-java/trunk/test/basic/scopes_1.str	                        (rev 0)
+++ strc-java/trunk/test/basic/scopes_1.str	2009-07-24 13:42:45 UTC (rev 19762)
@@ -0,0 +1,15 @@
+module scopes_1
+
+imports libstratego-lib
+
+rules
+
+  main =
+    { x:
+      { y:
+        y := <debug> 1;
+        x := y
+      };
+      !x
+    }
+    

Added: strc-java/trunk/test/basic/scopes_2.str
===================================================================
--- strc-java/trunk/test/basic/scopes_2.str	                        (rev 0)
+++ strc-java/trunk/test/basic/scopes_2.str	2009-07-24 13:42:45 UTC (rev 19762)
@@ -0,0 +1,17 @@
+module scopes_2
+
+imports libstratego-lib
+
+rules
+
+  main =
+    { x:
+      if debug then
+        { y:
+          y := <debug> 1;
+          x := y
+        }
+      end;
+      !x
+    }
+    

Modified: strc-java/trunk/trans/Makefile.am
===================================================================
--- strc-java/trunk/trans/Makefile.am	2009-07-23 15:08:21 UTC (rev 19761)
+++ strc-java/trunk/trans/Makefile.am	2009-07-24 13:42:45 UTC (rev 19762)
@@ -38,6 +38,8 @@
 %.str : %.astr
 	aster -i $< -o $@
 
+strj$(exeext) : $(STRJSOURCES:.str=.rtree)
+
 strj.ctree : strj.rtree $(STRJSOURCES:.str=.rtree) strj
 	$(SCOMPILE) $(STRINCLUDES) $(STRCFLAGS) $(SCFLAGS) -i $< -o $@ -F -m main-strj
 

Added: strc-java/trunk/trans/java-dead-assigns.meta
===================================================================
--- strc-java/trunk/trans/java-dead-assigns.meta	                        (rev 0)
+++ strc-java/trunk/trans/java-dead-assigns.meta	2009-07-24 13:42:45 UTC (rev 19762)
@@ -0,0 +1 @@
+Meta([Syntax("Stratego-Java-EBlock")])

Added: strc-java/trunk/trans/java-dead-assigns.str
===================================================================
--- strc-java/trunk/trans/java-dead-assigns.str	                        (rev 0)
+++ strc-java/trunk/trans/java-dead-assigns.str	2009-07-24 13:42:45 UTC (rev 19762)
@@ -0,0 +1,157 @@
+/**
+ * Java output dead assignments elimination.
+ *
+ * Assumes all variables are declared only once per method,
+ * and that identifiers are not annotated.
+ *
+ * Treats all blocks as if they can be exited (using a 'break')
+ * at any time.
+ *
+ * @author Lennart Kats
+ */
+module java-dead-assigns
+
+imports
+  libjava-front
+
+strategies
+
+  java-dead-assigns-top =
+    alltd(
+      MethodDec(
+        ?MethodDecHead(_, _, _, Id("invoke"), _, _)
+      , {| IsUsed, IsAssigned:
+          where(x := "term")
+        ; rules(IsUsed+x: x -> <fail>)
+        ; dead-assigns-stm
+        |}
+      )
+    )
+  
+  dead-assigns-stm =
+    dead-assigns-assign-id
+  <+
+    dead-assigns-assign
+  <+
+    dead-assigns-decl
+  <+
+    dead-assigns-control
+  <+
+    [id | dead-assigns-stm]
+  ; [dead-assigns-stm | id]
+  <+
+    []
+  <+
+    fatal-err(|"Internal error: not supported by dead assignments optimization")
+  
+  // IsUsed scoping is used to ignore the effects of reassignments:
+    
+  dead-assigns-control =
+    [is-container-stm | id]
+  ; [id | {| IsUsed: dead-assigns-stm |}] // might not be reachable if breaked from
+  ; [dead-assigns-stm | id]
+  
+  dead-assigns-control =
+    If(id, {| IsUsed: dead-assigns-stm |})
+  ; If(dead-assigns-expr, id)
+  
+  dead-assigns-control =
+    If(id, {| IsUsed: dead-assigns-stm |}, {| IsUsed: dead-assigns-stm |})
+  ; If(dead-assigns-expr, id, id)
+  
+  dead-assigns-control =
+    While(dead-assigns-expr, id)
+  ; While(id, {| IsUsed: dead-assigns-stm |})
+  
+  dead-assigns-control =
+    Block({| IsUsed: dead-assigns-stm |})
+  
+  dead-assigns-control =
+    Labeled(id, {| IsUsed: dead-assigns-stm |})
+  
+  dead-assigns-control =
+    DoWhile(id, {| IsUsed: dead-assigns-stm |})
+  ; While(dead-assigns-expr, id)
+  
+  dead-assigns-control =
+    [Break(id) | {| IsUsed: dead-assigns-stm |}]
+
+  is-container-stm =
+    ?Labeled(_, _) + ?Block(_) + ?If(_, _) + ?If(_, _, _)
+  + ?Try(_, _) + ?Try(_, _, _) + ?Synchronized(_, _)
+  + ?While(_, _) + ?DoWhile(_, _) + ?For(_, _) + ?For(_, _, _, _)
+
+  dead-assigns-control =
+    ExprStm(dead-assigns-expr)
+  + Return(dead-assigns-expr)
+  + Break(id) // (break in container stm)
+  
+  dead-assigns-decl :
+    bstm* |[ t x = e; bstm* ]| -> bstm''*
+    where
+      !e => Lit(_)
+    with
+      rules(IsUsed+x: x -> <fail>)
+    ; bstm'* := <dead-assigns-stm> bstm*
+    ; if <IsAssigned <+ IsUsed> x then
+        bstm''* := bstm* |[ t x = e; bstm'* ]|
+      else
+        bstm''* := bstm* |[          bstm'* ]|
+      end
+  
+  dead-assigns-decl :
+    bstm* |[ t x = e; bstm* ]| -> bstm''*
+    where
+      not(!e => Lit(_))
+    with
+      <dead-assigns-decl>  bstm* |[ t x; x = e; bstm* ]|
+    ; if ?bstm* |[ t x; x = e; bstm'* ]| then
+        bstm''* := bstm* |[ t x = e; bstm'* ]|
+      else
+        ?bstm''*
+      end
+  
+  dead-assigns-decl :
+    bstm* |[ t x; bstm* ]| -> bstm''*
+    with
+      rules(IsUsed+x: x -> <fail>)
+    ; bstm'* := <dead-assigns-stm> bstm*
+    ; if <IsAssigned <+ IsUsed> x then
+        bstm''* := bstm* |[ t x; bstm'* ]|
+      else
+        bstm''* := bstm* |[      bstm'* ]|
+      end
+  
+  dead-assigns-assign-id :
+    bstm* |[ e = e; bstm* ]| -> <dead-assigns-stm> bstm*
+  
+  dead-assigns-assign :
+    bstm* |[ x = e; bstm* ]| -> bstm''*
+    with
+      // rules(IsUsed :- x) // (need to consider all following statements not just bstm*)
+      bstm'* := <dead-assigns-stm> bstm*
+    ; if <IsUsed> x then
+        rules(IsAssigned: x)
+      ; if not(<oncetd(?x)> e) then
+          rules(IsUsed :- x)
+        end
+      ; <dead-assigns-expr> e
+      ; bstm''* := bstm* |[ x = e; bstm'* ]|
+      else
+        bstm''* := bstm* |[        bstm'* ]|
+      end
+
+  dead-assigns-assign :
+    bstm |[ x = e; ]| -> bstm
+    with
+      [bstm | _] := <dead-assigns-assign> [<id>]
+    <+
+      bstm := Empty()
+ 
+  dead-assigns-expr =
+    alltd({
+      (?ExprName(Id(x)) + ?AmbName(Id(x)))
+    ; rules(
+        IsUsed.x: x
+      )
+    })

Copied: strc-java/trunk/trans/java-optimize.meta (from rev 19746, strc-java/trunk/trans/java-postprocess.meta)
===================================================================
--- strc-java/trunk/trans/java-optimize.meta	                        (rev 0)
+++ strc-java/trunk/trans/java-optimize.meta	2009-07-24 13:42:45 UTC (rev 19762)
@@ -0,0 +1 @@
+Meta([Syntax("Stratego-Java-EBlock")])

Copied: strc-java/trunk/trans/java-optimize.str (from rev 19746, strc-java/trunk/trans/java-postprocess.str)
===================================================================
--- strc-java/trunk/trans/java-optimize.str	                        (rev 0)
+++ strc-java/trunk/trans/java-optimize.str	2009-07-24 13:42:45 UTC (rev 19762)
@@ -0,0 +1,222 @@
+/**
+ * Java output optimization.
+ *
+ * @author Lennart Kats
+ */
+module java-optimize
+
+imports
+  libjava-front
+  java-dead-assigns
+
+strategies
+
+  java-optimize =
+    topdown-consnil(
+      try(optimize-match-test + use-lazy-stack-assigns)
+    ; repeat(
+        [id | optimize-assignments] + optimize-assignments
+      )
+    )
+  //; optimize-assignments-top
+  ; java-dead-assigns-top
+  ; bottomup(repeat( // should be done after previous pass
+      optimize-conditionals
+    ))
+
+strategies
+
+  // TODO: Proper copy propagation?
+  
+  optimize-assignments :
+    bstm* |[ x = e; y = x; bstm* ]| ->
+    bstm* |[ x = e; y = e; bstm* ]|
+    where
+      not(!e => ExprName(Id(x)))
+    ; <has-no-side-effects> e
+  
+  optimize-assignments :
+    bstm* |[ x = e1; x = e2;  bstm* ]| ->
+    bstm* |[         x = e2'; bstm* ]|
+    where
+      <has-no-side-effects> e1
+    with
+      e2' := <alltd((ExprName(Id(x)) -> e1))> e2
+  
+  optimize-assignments :
+    bstm* |[ x = y; x = z; bstm* ]| ->
+    bstm* |[        x = z; bstm* ]|
+  
+  optimize-assignments :
+    bstm* |[ x = x; bstm* ]| ->
+    bstm* |[        bstm* ]|
+
+  has-no-side-effects =
+    ?Lit(_)
+  + ?|[ getConstant(e1, e2) ]|
+  + ?ExprName(_)
+  //+ ?|[ termFactory.x(e*) ]|; where(<all(has-no-side-effects)> e*)
+
+  optimize-match-test :
+    bstm* |[
+      IStrategoTerm x_cached = term;
+      Success: {
+        Fail: {
+          ~bstm*:<match-decls-and-appl-test => (bstm_decl*, x_cons, bstm_body*)>
+        }
+        term = x_cached;
+        bstm_othermatch*
+      }
+      bstm_tail*
+    ]| ->
+    bstm* |[
+      IStrategoTerm x_cached = term;
+      IStrategoConstructor x_actualcons = term.getTermType() == IStrategoTerm.APPL
+        ? ((IStrategoAppl) term).getConstructor()
+        : null;
+      Success: {
+        if (x_actualcons == x_cons) {
+          Fail: {
+            bstm_decl*
+            bstm_body*
+          }
+          term = x_cached;
+        }
+        bstm_othermatch'*
+      }
+      bstm_tail*
+    ]|
+    with
+      x_actualcons := <newname> "cons"
+    where
+      bstm_othermatch'* := <replace-match-test1(|x_actualcons, x_cached)> bstm_othermatch*
+
+  replace-match-test1(|x_actualcons, x_cached) :
+    bstm* |[
+      IStrategoTerm x_cached' = term;
+      Success: {
+        Fail: {
+          ~bstm*:<match-decls-and-appl-test => (bstm_decl*, x_cons, bstm_body*)>
+        }
+        term = x_cached';
+        bstm_othermatch*
+      }
+      bstm_tail*
+    ]| ->
+    bstm* |[
+      Success: {
+        if (x_actualcons == x_cons) {
+          Fail: {
+            bstm_decl*
+            bstm_body*
+           }
+          term = x_cached;
+        }
+        bstm_othermatch'*
+      }
+      bstm_tail*
+    ]|
+    with
+      bstm_othermatch'* := <try(replace-match-test1(|x_actualcons, x_cached))> bstm_othermatch*
+  
+  match-decls-and-appl-text :
+    [Block(bstm*) | _] -> <match-decls-and-appl-test> bstm*
+  
+  match-decls-and-appl-test :
+    bstm* |[ IStrategoTerm x = null; bstm* ]| -> ([<Hd> | bstm_decl*], x_cons, bstm_body*)
+    where
+      (bstm_decl*, x_cons, bstm_body*) := <match-decls-and-appl-test> bstm*
+    
+  match-decls-and-appl-test :
+    bstm* |[
+      if (~e:ExprName(Id("term")).getTermType() != IStrategoTerm.APPL || e_cons != ((IStrategoAppl) term).getConstructor())
+        break Fail;
+      bstm_body*
+    ]| ->
+    ([], x_cons, bstm_body*)
+    with
+      !e_cons => |[ x.x_cons ]|
+    <+
+      !e_cons => |[ x_cons ]|
+
+strategies
+
+  optimize-conditionals :
+    bstm |[ Fail: { if (TRUE) break Fail; bstm1* } ]| -> bstm |[ ; ]|
+
+  optimize-conditionals :
+    bstm |[ { if (TRUE) break x; bstm* } ]| -> bstm |[ { if (TRUE) break x; } ]|
+    where
+      not(!bstm* => [])
+  
+  optimize-conditionals :
+    bstm |[ if (e) if (TRUE) stm ]| -> |[ if (e) stm ]|
+  
+  optimize-conditionals :
+    bstm |[ Success: { if (e) break Success; bstm* } ]| -> |[ if (!e) { bstm* } ]|
+  
+  optimize-conditionals :
+    bstm |[ if (!(e1 == e2)) stm ]| -> |[ if (e1 != e2) stm ]|
+  
+  optimize-conditionals :
+    bstm |[ if (e1) { if (e2) stm } ]| -> |[ if (e1 && e2) stm ]|
+    where
+      not(!e2 => expr |[ TRUE ]|)
+  
+  optimize-conditionals :
+    |[ Fail: { bstm* } ]| -> |[ Fail: { bstm'* } ]|
+    where
+      !bstm*
+    ; one(?|[ if (e) break Fail; ]|)
+    ; at-last([remove-if-true]) => bstm'*
+  
+  optimize-conditionals :
+    Block([Block(s)]) -> Block(s)
+  
+  remove-if-true :
+    |[ if (TRUE) break Fail; ]| -> |[ break Fail; ]|
+  
+  remove-if-true :
+    |[ if (TRUE) break Success; ]| -> |[ break Success; ]|
+  
+  remove-if-true :
+    |[ if (TRUE) return e; ]| -> |[ return e; ]|
+
+strategies
+
+  use-lazy-stack-assigns :
+    bstm* |[
+      context.push(e);
+      x_Fail: {
+        bstm*
+      }
+      context.popOnFailure();
+      return null;
+    ]| ->
+    bstm* |[
+      x_Fail: {
+        bstm'*
+      }
+      context.push(e);
+      context.popOnFailure();
+      return null;
+    ]|
+    where
+      bstm'* := <if-no-invokes-remove-stack-pop> bstm*
+  
+  if-no-invokes-remove-stack-pop =
+    if [id, id] then
+      with(
+        ?bstm* |[ context.popOnSuccess(); bstm_return ]|
+      )
+    ; !bstm* |[ bstm_return ]|
+    else
+      if-no-invokes-remove-stack-pop-2
+    end
+  
+  if-no-invokes-remove-stack-pop-2 :
+    [s | s*] -> [s | s'*]
+    where
+      <not(oncetd("invoke"))> s
+    ; s'* := <if-no-invokes-remove-stack-pop> s*
+


Property changes on: strc-java/trunk/trans/java-optimize.str
___________________________________________________________________
Added: svn:mergeinfo
   + 

Modified: strc-java/trunk/trans/java-postprocess.str
===================================================================
--- strc-java/trunk/trans/java-postprocess.str	2009-07-23 15:08:21 UTC (rev 19761)
+++ strc-java/trunk/trans/java-postprocess.str	2009-07-24 13:42:45 UTC (rev 19762)
@@ -1,6 +1,8 @@
 /**
  * Java output postprocessing.
  *
+ * Performs essential Java-to-Java transformations.
+ *
  * @author Lennart Kats
  */
 module java-postprocess
@@ -89,196 +91,3 @@
 
   java-param-to-arg :
     param |[ t x ]| -> expr |[ x ]|
-
-strategies
-
-  java-simplify =
-    topdown-consnil(
-      try(Block(flatten-list))
-    ; repeat(java-simplify-stm + java-simplify-expr)
-    )
-
-  topdown-consnil(s) =
-    rec rec(s; all-consnil(rec))
-  
-  all-consnil(s) =
-    ?[_ | _] < [s | s] + all(s)
-  
-  java-simplify-stm :
-    [<Empty + Semicolon> | s*] -> s*
-  
-  java-simplify-stm :
-    If(e, s1, Empty()) -> If(e, s1)
-  
-  java-simplify-stm :
-    Block([Block(s)]) -> Block(s)
-  
-  java-simplify-stm :
-    |[ if (e1 == e2) ; else stm2 ]| -> |[ if (e1 != e2) stm2 ]|
-  
-  java-simplify-expr :
-    |[ new Strategy[] {} ]| -> |[ NO_STRATEGIES ]|
-  
-  java-simplify-expr :
-    |[ new IStrategoTerm[] {} ]| -> |[ NO_TERMS ]|
-    
-  java-simplify-stm :
-    bstm* |[ if (TRACES_ENABLED) stm bstm* ]| -> bstm* |[ stm bstm* ]|
-    where
-      <get-config> "--stacktrace" => 1
-
-  java-simplify-stm :
-    bstm* |[ if (TRACES_ENABLED) stm bstm* ]| -> bstm*
-    where
-      <get-config> "--stacktrace" => 0
-  
-  java-eliminate-stacktrace =
-    alltd(
-      \bstm |[ if (TRACES_ENABLED) stm ]| -> Empty()\
-    )
-
-strategies
-
-  java-optimize =
-    topdown-consnil(repeat(
-      optimize-match-test
-    + optimize-assignments
-    ))
-  ; bottomup(repeat( // should be done after previous pass
-      optimize-conditionals
-    ))
-
-  optimize-match-test :
-    bstm* |[
-      IStrategoTerm x_cached = term;
-      Success: {
-        Fail: {
-          ~bstm*:<match-decls-and-appl-test => (bstm_decl*, x_cons, bstm_body*)>
-        }
-        term = x_cached;
-        bstm_othermatch*
-      }
-      bstm_tail*
-    ]| ->
-    bstm* |[
-      IStrategoTerm x_cached = term;
-      IStrategoConstructor x_actualcons = term.getTermType() == IStrategoTerm.APPL
-        ? ((IStrategoAppl) term).getConstructor()
-        : null;
-      Success: {
-        if (x_actualcons == x_cons) {
-          Fail: {
-            bstm_decl*
-            bstm_body*
-          }
-          term = x_cached;
-        }
-        bstm_othermatch'*
-      }
-      bstm_tail*
-    ]|
-    with
-      x_actualcons := <newname> "cons"
-    where
-      bstm_othermatch'* := <replace-match-test1(|x_actualcons, x_cached)> bstm_othermatch*
-
-  replace-match-test1(|x_actualcons, x_cached) :
-    bstm* |[
-      IStrategoTerm x_cached' = term;
-      Success: {
-        Fail: {
-          ~bstm*:<match-decls-and-appl-test => (bstm_decl*, x_cons, bstm_body*)>
-        }
-        term = x_cached';
-        bstm_othermatch*
-      }
-      bstm_tail*
-    ]| ->
-    bstm* |[
-      Success: {
-        if (x_actualcons == x_cons) {
-          Fail: {
-            bstm_decl*
-            bstm_body*
-           }
-          term = x_cached;
-        }
-        bstm_othermatch'*
-      }
-      bstm_tail*
-    ]|
-    with
-      bstm_othermatch'* := <try(replace-match-test1(|x_actualcons, x_cached))> bstm_othermatch*
-  
-  match-decls-and-appl-text :
-    [Block(bstm*) | _] -> <match-decls-and-appl-test> bstm*
-  
-  match-decls-and-appl-test :
-    bstm* |[ IStrategoTerm x = null; bstm* ]| -> ([<Hd> | bstm_decl*], x_cons, bstm_body*)
-    where
-      (bstm_decl*, x_cons, bstm_body*) := <match-decls-and-appl-test> bstm*
-    
-  match-decls-and-appl-test :
-    bstm* |[
-      if (~e:ExprName(Id("term")).getTermType() != IStrategoTerm.APPL || e_cons != ((IStrategoAppl) term).getConstructor())
-        break Fail;
-      bstm_body*
-    ]| ->
-    ([], x_cons, bstm_body*)
-    with
-      !e_cons => |[ x.x_cons ]|
-    <+
-      !e_cons => |[ x_cons ]|
-
-  optimize-conditionals :
-    bstm |[ Fail: { if (TRUE) break Fail; bstm1* } ]| -> bstm |[ ; ]|
-
-  optimize-conditionals :
-    bstm |[ { if (TRUE) break x; bstm* } ]| -> bstm |[ { if (TRUE) break x; } ]|
-    where
-      not(!bstm* => [])
-  
-  optimize-conditionals :
-    bstm |[ if (e) if (TRUE) stm ]| -> |[ if (e) stm ]|
-  
-  optimize-conditionals :
-    bstm |[ Success: { if (e) break Success; bstm* } ]| -> |[ if (!e) { bstm* } ]|
-  
-  optimize-conditionals :
-    bstm |[ if (!(e1 == e2)) stm ]| -> |[ if (e1 != e2) stm ]|
-  
-  optimize-conditionals :
-    bstm |[ if (e1) { if (e2) stm } ]| -> |[ if (e1 && e2) stm ]|
-    where
-      not(!e2 => expr |[ TRUE ]|)
-  
-  optimize-conditionals :
-    |[ Fail: { bstm* } ]| -> |[ Fail: { bstm'* } ]|
-    where
-      !bstm*
-    ; one(?|[ if (e) break Fail; ]|)
-    ; at-last([remove-if-true]) => bstm'*
-  
-  optimize-conditionals :
-    Block([Block(s)]) -> Block(s)
-  
-  optimize-assignments :
-    bstm* |[ term = y; x = term; term = z; bstm* ]| ->
-    bstm* |[ x = y; term = z; bstm* ]|
-    where
-      not(!z => expr |[ term ]|)
-  
-  optimize-assignments :
-    bstm* |[ x = y; x = e; bstm* ]| ->
-    bstm* |[ x = e; bstm* ]|
-    where
-      not(<oncetd(?x)> e)
-  
-  remove-if-true :
-    |[ if (TRUE) break Fail; ]| -> |[ break Fail; ]|
-  
-  remove-if-true :
-    |[ if (TRUE) break Success; ]| -> |[ break Success; ]|
-  
-  remove-if-true :
-    |[ if (TRUE) return e; ]| -> |[ return e; ]|

Copied: strc-java/trunk/trans/java-simplify.meta (from rev 19746, strc-java/trunk/trans/java-postprocess.meta)
===================================================================
--- strc-java/trunk/trans/java-simplify.meta	                        (rev 0)

(247 diff lines omitted)


From L.C.L.Kats at tudelft.nl  Fri Jul 24 17:06:21 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 24 Jul 2009 15:06:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19763 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.generator/src/sdf2imp
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.generator/src/sdf2imp/util
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards
Message-ID: <200907241504.n6OF4EUZ010339@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-24 15:06:21 +0000 (Fri, 24 Jul 2009)
New Revision: 19763

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19763&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-strategoxt-jar.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.rtree
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.meta
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/options.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/output.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java

Log:
- Improved generator logging messages
- A copy of strategoxt.jar is now made in new projects
- Made a start with an Ant build file, based on the one from Sander's mmt project


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	2009-07-24 13:42:45 UTC (rev 19762)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	2009-07-24 15:06:21 UTC (rev 19763)
@@ -101,6 +101,8 @@
     create-classpath;
     create-manifest;
     create-plugin-xml;
+    create-build-xml;
+    copy-strategoxt-jar;
     
     <copy-or-create-parse-table> input
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/options.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/options.str	2009-07-24 13:42:45 UTC (rev 19762)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/options.str	2009-07-24 15:06:21 UTC (rev 19763)
@@ -9,6 +9,7 @@
   <+ parse-table-option
   <+ package-name-option
   <+ start-symbol-option
+  <+ jar-option
   <+ reset-files-option
   <+ verbose-option
 
@@ -40,6 +41,17 @@
       get-package-name(fail) // ensure legal
     , !"-n <packagename>      Set base package name (optional)"
     )
+
+  jar-option =
+    ArgOption(
+      "-jar"
+    , rules(JarLocation := <id>);
+      if not(file-exists) then
+        err(|"File does not exist");
+        fail
+      end
+    , !"-jar <path>           Set location of strategoxt.jar (optional)"
+    )
     
   start-symbol-option =
     ArgOption(

Added: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-strategoxt-jar.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-strategoxt-jar.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-strategoxt-jar.str	2009-07-24 15:06:21 UTC (rev 19763)
@@ -0,0 +1,12 @@
+module sdf2imp/project/copy-strategoxt-jar
+
+imports
+  libstratego-lib
+
+strategies
+  
+  copy-strategoxt-jar =
+    if JarLocation then
+      <file-exists <+ mkdir> "lib/";
+      <copy-file> (<id>, "lib/")
+    end

Added: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.rtree
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.rtree
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.meta
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.meta	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.meta	2009-07-24 15:06:21 UTC (rev 19763)
@@ -0,0 +1 @@
+Meta([Syntax("Stratego-xml")])
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-07-24 15:06:21 UTC (rev 19763)
@@ -0,0 +1,186 @@
+module project/create-build-xml
+
+imports
+  sdf2imp/util/-
+
+strategies
+
+  // TODO: create proper build.xml
+
+  create-build-xml =
+    <file-exists> "build.xml"
+  <+
+    name       := <get-sdf-main-module>;
+    classname  := <get-main-class-name>;
+    pkgname    := <BasePackage <+ default-package-name>;
+    
+    <output-xml-file(|[], "build.xml")>
+    %>
+    <?xml version="1.0" encoding="UTF-8"?>
+    <project name="= name " default="buildAll">
+    
+        <!-- Project configuration -->
+        <property name="trans" location="trans"/>
+        <property name="editor" location="editor"/>
+        <property name="syntax" location="syntax"/>
+        <property name="build" location="bin"/>
+        <property name="dist" location="bin/dist"/>
+        
+        <!-- System configuration -->
+        <property name="strategoBinariesLocation" location="${user.home}/.nix-profile/bin"/>
+        <property name="scriptsLocation" location="aux"/>
+        <property name="customImports" value="-I ${src} -I ${src}/detection -I ${src}/statistics -I ${src}/utils  -I ${src}/syntax -I ${lib}/apath -I ${lib}/apath/syntax"/>
+        
+        <target name="init">
+            <mkdir dir="${build}"/>
+            <mkdir dir="${dist}"/>
+        </target>
+    
+        <target name="buildAll">
+            <parallel>
+                <antcall target="strc"/>
+                <antcall target="sdf2table"/>
+            </parallel>
+        </target>
+    
+        <target name="pack-sdf" depends="init">
+            <apply executable="${strategoBinariesLocation}/pack-sdf" dest="${build}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg line="${customImports}"/>
+                <fileset dir="${src}/syntax" includes="*.sdf"/>
+                <mapper type="glob" from="*.sdf" to="*.def"/>
+            </apply>
+        </target>
+    
+        <target name="sdf2table" depends="init,pack-sdf">
+            <apply executable="${scriptsLocation}/applyUsingBasename" dest="${dist}" failonerror="true">
+                <srcfile/>
+                <arg value=".def"/>
+                <arg value="-i"/>
+                <arg value="-m"/>
+                <arg value="${strategoBinariesLocation}/sdf2table"/>
+                <arg value="-o"/>
+                <targetfile/>
+                <fileset dir="${build}" includes="*.def"/>
+                <mapper type="glob" from="*.def" to="*.tbl"/>
+            </apply>
+        </target>
+    
+        <target name="sdf2rtg" depends="init,pack-sdf">
+            <apply executable="${scriptsLocation}/applyUsingBasename" dest="${build}" failonerror="true">
+                <srcfile/>
+                <arg value=".def"/>
+                <arg value="-i"/>
+                <arg value="-m"/>
+                <arg value="${strategoBinariesLocation}/sdf2rtg"/>
+                <arg value="-o"/>
+                <targetfile/>
+                <fileset dir="${build}" includes="*.def"/>
+                <mapper type="glob" from="*.def" to="*.rtg"/>
+            </apply>
+        </target>
+    
+        <target name="rtg2sig" depends="init,sdf2rtg">
+            <apply executable="${scriptsLocation}/applyUsingBasename" dest="${build}" failonerror="true">
+                <srcfile/>
+                <arg value=".rtg"/>
+                <arg value="-i"/>
+                <arg value="--module"/>
+                <arg value="${strategoBinariesLocation}/rtg2sig"/>
+                <arg value="-o"/>
+                <targetfile/>
+                <fileset dir="${build}" includes="*.rtg"/>
+                <mapper type="glob" from="*.rtg" to="*.str"/>
+            </apply>
+        </target>
+    
+        <target name="strc" depends="init,rtg2sig">
+            <antcall target="strc-call">
+                <param name="additionalStrcParameters" value=""/>
+                <param name="additionalStrcExtension" value="*"/>
+            </antcall>
+        </target>
+        
+        <target name="ctrees" depends="init,rtg2sig">
+            <antcall target="strc-call">
+                <param name="additionalStrcParameters" value="-F"/>
+                <param name="additionalStrcExtension" value="*.ctree"/>
+            </antcall>
+        </target>
+        
+        <target name="strc-call" depends="init,rtg2sig">
+            <dependset>
+                <srcfilelist dir = "${src}" files = "**/*.str"/>
+                <srcfilelist dir = "${build}" files = "**/*.str"/>
+                <targetfileset dir = "${dist}" includes = "**/*"/>
+            </dependset>
+            <apply executable="${scriptsLocation}/applyUsingBasename" dest="${dist}" failonerror="true">
+                <srcfile/>
+                <arg value=".str"/>
+                <arg value="-i"/>
+                <arg value="-m"/>
+                <arg value="${strategoBinariesLocation}/strc"/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-S"/>    <!-- Silent mode -->
+                <arg value="${additionalStrcParameters}"/>    <!-- Used for Ctree generation -->
+                <arg value="-I"/>
+                <arg value="${build}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg value="-I"/>
+                <arg value="${user.home}/.nix-profile/share/"/>
+                <arg value="-I"/>
+                <arg value="${user.home}/.nix-profile/share/java-front"/>
+                <arg value="-I"/>
+                <arg value="${user.home}/.nix-profile/share/sdf/gpp"/>
+                <arg value="-I"/>
+                <arg value="${user.home}/.nix-profile/share/sdf/xml-front"/>
+                <arg value="-I"/>
+                <arg value="${user.home}/.nix-profile/share/sdf/sdf-front"/>
+                <arg value="-I"/>
+                <arg value="${user.home}/.nix-profile/share/sdf/stratego-front"/>
+                <arg value="-la"/>
+                <arg value="stratego-lib"/>
+                <arg value="-la"/>
+                <arg value="${user.home}/.nix-profile/lib/libjava-front.la"/>
+                <!--arg value="-la"/>
+                <arg value="${user.home}/.nix-profile/lib/libstrc.la"/-->
+                <!--arg value="-la"/>
+                <arg value="${user.home}/.nix-profile/lib/libstratego-sglr.la"/-->
+    
+                
+                <arg line="${customImports}"/>
+                
+                <fileset dir="${src}">
+                    <include name="**/*.str"/>
+                    <exclude name="**/*Lib*"/>
+                    <exclude name="**/*lib*"/>
+                </fileset>
+                <mapper type="glob" from="*.str" to="${additionalStrcExtension}"/>
+            </apply>
+            <!-- Remove the c files again -->
+            <delete>
+                <fileset dir="${dist}">
+                    <include name="**/*.c"/>
+                    <include name="**/*.dep"/>
+                    <include name="**/*.lo"/>
+                    <include name="**/*.o"/>
+                </fileset>
+            </delete>
+        </target>
+        
+        <target name="clean" description="clean up" >
+            <delete dir="${build}"/>
+        </target>
+    
+        <target name="cleanall" description="clean up" depends="clean" >
+            <delete dir="${dist}"/>
+        </target>
+    </project>
+    <%

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/output.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/output.str	2009-07-24 13:42:45 UTC (rev 19762)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/output.str	2009-07-24 15:06:21 UTC (rev 19763)
@@ -59,6 +59,8 @@
       fullpath := <conc-strings> (path, "/", filename)
     );
     
+    print-filename(|["editor"], filename);
+    
     if ResetFiles <+ <condition> fullpath then
       new-contents;
       risky(
@@ -112,6 +114,8 @@
     output-text-file(|filename)
 
   output-xml-file(|pathparts, filename) =
+    print-filename(|pathparts, filename);
+    
     risky(
       xml-doc2abox; box2text-string(|80)
     | "Illegal XML output"
@@ -120,8 +124,6 @@
     output-text-file(|pathparts, filename)
   
   output-text-file(|pathparts, filename) =
-    print-filename(|pathparts, filename);
-    
     where(path := <create-dirs> pathparts);
     
     output-text-file(|<conc-strings> (path, "/", filename))

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-07-24 13:42:45 UTC (rev 19762)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-07-24 15:06:21 UTC (rev 19763)
@@ -1,7 +1,9 @@
 package org.strategoxt.imp.metatooling.wizards;
 
+import java.io.File;
 import java.io.IOException;
 import java.lang.reflect.InvocationTargetException;
+import java.net.URISyntaxException;
 
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.IProject;
@@ -20,6 +22,7 @@
 import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.ide.IDE;
+import org.strategoxt.libstratego_lib;
 import org.strategoxt.imp.editors.editorservice.EditorServiceParseController;
 import org.strategoxt.imp.generator.sdf2imp;
 import org.strategoxt.imp.runtime.Environment;
@@ -109,7 +112,12 @@
 		try {
 			agent.setWorkingDir(project.getLocation().toOSString());
 			try {
-				sdf2imp.mainNoExit(context, "-m", name, "-n", packageName, "-e", extensions);
+				String jar = getStrategoXTJar();
+				if (new File(jar).exists()) {
+					sdf2imp.mainNoExit(context, "-m", name, "-n", packageName, "-e", extensions, "-jar", jar);
+				} else {
+					sdf2imp.mainNoExit(context, "-m", name, "-n", packageName, "-e", extensions);
+				}
 			} catch (StrategoExit e) {
 				if (e.getValue() != 0) {
 					throw new StrategoException("Project builder failed. Log follows\n\n"
@@ -132,6 +140,10 @@
 			}
 		}
 	}
+
+	private static String getStrategoXTJar() {
+		return libstratego_lib.class.getProtectionDomain().getCodeSource().getLocation().toExternalForm();
+	}
 	
 	private void openEditor(IProject project, String filename) {
 		final IResource file = (IResource) project.findMember(filename);



From m.dejonge at tudelft.nl  Fri Jul 24 18:29:28 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Fri, 24 Jul 2009 16:29:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19764 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907241627.n6OGRMBC011209@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-24 16:29:28 +0000 (Fri, 24 Jul 2009)
New Revision: 19764

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19764&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java

Log:


Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java	2009-07-24 15:06:21 UTC (rev 19763)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java	2009-07-24 16:29:28 UTC (rev 19764)
@@ -9,8 +9,17 @@
     StructureSkipper regionSelector;
     private StructureSkipSuggestion erroneousRegion;
     private boolean hasFoundErroneousRegion;
+    private int errorDetectionLocation;
+    private static int NR_OF_LINES_TILL_SUCCESS=2;
     
     
+    /*
+     * * Only used for testing 
+     */
+    public void setEndOfFileSuccessMode(){
+        NR_OF_LINES_TILL_SUCCESS=Integer.MAX_VALUE;
+    }
+    
     public RegionRecovery(SGLR sglr){
         myParser=sglr;
         regionSelector = new StructureSkipper(sglr);
@@ -42,11 +51,12 @@
         return getHistory().getLinesFrom(erroneousRegion.getIndexHistoryStart());
     }    
 
-    public boolean selectErroneousFragment() throws IOException {                
-        hasFoundErroneousRegion=false; 
-        
+    public boolean selectErroneousFragment() throws IOException { 
+        regionSelector.clear();
+        errorDetectionLocation=getHistory().getIndexLastToken();
+        hasFoundErroneousRegion=false;         
         ArrayList<StructureSkipSuggestion> prevRegions=regionSelector.getPreviousSkipSuggestions();
-        //System.err.println("PREVIOUS REGION");
+        //System.err.println("PREVIOUS REGION");        
         if(trySetErroneousRegion(prevRegions)){
             ArrayList<StructureSkipSuggestion> decomposedRegions=regionSelector.getZoomOnPreviousSuggestions(erroneousRegion);
             boolean findSmallerPart= trySetErroneousRegion(decomposedRegions);
@@ -77,20 +87,23 @@
         if(trySetErroneousRegion(siblingForWardRegions)){            
             return true;
         }
-        System.err.println("BW-SIB REGIONS");
+        //System.err.println("BW-SIB REGIONS");
         ArrayList<StructureSkipSuggestion> siblingBackWardRegions=regionSelector.getSibblingBackwardSuggestions();
         if(trySetErroneousRegion(siblingBackWardRegions)){            
             return true;
         }
+        //System.err.println("SURROUNDING-SIB REGIONS");
         ArrayList<StructureSkipSuggestion> siblingSurroundingRegions=regionSelector.getSibblingSurroundingSuggestions();
         if(trySetErroneousRegion(siblingSurroundingRegions)){            
             return true;
         }
+        //System.err.println("PARENT REGION");
         ArrayList<StructureSkipSuggestion> parentRegion=regionSelector.getParentSkipSuggestions();
         if(trySetErroneousRegion(parentRegion)){            
             return true;
-        }
+        }        
         else {
+            //System.err.println("PREFIX");
             erroneousRegion=regionSelector.getErroneousPrefix();
             ArrayList<StructureSkipSuggestion> decomposedRegions=regionSelector.getZoomOnPreviousSuggestions(erroneousRegion);
             boolean findSmallerPart=trySetErroneousRegion(decomposedRegions);
@@ -98,30 +111,32 @@
                 ArrayList<StructureSkipSuggestion> childRegions=regionSelector.getPickErroneousChild(erroneousRegion);
                 trySetErroneousRegion(childRegions);
             }
-            return findSmallerPart;
+            return false; //findSmallerPart;
         }
     }
 
     private boolean trySetErroneousRegion(ArrayList<StructureSkipSuggestion> regions) throws IOException {
         StructureSkipSuggestion aSkip=new StructureSkipSuggestion();
         int indexSkips=0;
-        myParser.acceptingStack=null; //undo success
+        myParser.acceptingStack=null; 
+        myParser.activeStacks.clear(); //undo success
         while (indexSkips < regions.size() && !successCriterion()) {
             aSkip = regions.get(indexSkips);
             //Debug info
-            //System.err.print("**************");
-            //erroneousRegion=aSkip;
-            //System.err.print(getErrorFragment());
-            //System.err.print(getHistory().getFragment(aSkip.getStartSkip().getTokensSeen(), aSkip.getEndSkip().getTokensSeen()));
+            //System.err.print("**************");            
+            //System.err.print(getHistory().getFragment(aSkip.getStartSkip().getTokensSeen(), aSkip.getEndSkip().getTokensSeen()-1));
             
             IndentInfo endPos=aSkip.getEndSkip();
             getHistory().setTokenIndex(endPos.getTokensSeen());
             myParser.activeStacks.clear();
             myParser.activeStacks.addAll(endPos.getStackNodes());
-            while(myParser.activeStacks.size() > 0) {                        
+            int nrOfParsedLines=0;
+            while((myParser.activeStacks.size() > 0 && nrOfParsedLines<NR_OF_LINES_TILL_SUCCESS) || !getHistory().hasFinishedRecoverTokens()) {                       
                 getHistory().readRecoverToken(myParser); 
                 //System.err.append((char)myParser.currentToken);            
                 myParser.doParseStep();
+                if(getHistory().getTokenIndex()>errorDetectionLocation && myParser.currentToken=='\n')
+                    nrOfParsedLines++;
             }
             indexSkips++;            
         }
@@ -132,7 +147,7 @@
     }
 
     private boolean successCriterion() {
-        return myParser.acceptingStack!=null;
+        return myParser.activeStacks.size() > 0 || myParser.acceptingStack!=null;
     }
 
 }

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-24 15:06:21 UTC (rev 19763)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-24 16:29:28 UTC (rev 19764)
@@ -11,6 +11,7 @@
     //restrictions on area searched for erroneous region
     private final static int MAX_NR_OF_LINES=30;
     private final static int MAX_NR_OF_STRUCTURES=20;
+    private int indexPrevChild;
     
     enum indentShift{
         INDENT,
@@ -39,11 +40,16 @@
     public StructureSkipper(SGLR sglr){   
         myParser=sglr;
         skipIndentHandler=new IndentationHandler();
+        clear();
     }
+
+    public void clear() {
+        indexPrevChild=-1;
+    }
     //TODO: refactor - fill endSkip in class 
     public StructureSkipSuggestion getErroneousPrefix() throws IOException{
         getHistory().setTokenIndex(getHistory().getLastLine().getTokensSeen());
-        IndentInfo nextLine = viewNextLine();
+        IndentInfo nextLine = viewNextLine(getHistory().getLastLine());
         StructureSkipSuggestion prefix=new StructureSkipSuggestion();
         IndentInfo startLoc=IndentInfo.cloneIndentInfo(getHistory().getLine(0));        
         prefix.setSkipLocations(startLoc, nextLine, 0, getHistory().getIndexLastLine());
@@ -81,11 +87,12 @@
         boolean errorOnClosingBrace=isErrorOnClosingLine(indexEnd);
         if(errorOnClosingBrace){
             getHistory().setTokenIndex(endLocation.getTokensSeen());
-            endLocation=skipLine(endLocation.getLineNumber());
+            endLocation=skipLine(endLocation);
         }
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>(); 
         int startSkip = findPreviousBegin(indexEnd);
         if(startSkip>=0){
+            indexPrevChild=startSkip;
             StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion(); 
             IndentInfo startLoc = IndentInfo.cloneIndentInfo(getHistory().getLine(startSkip));
             skipConstruct.setSkipLocations(startLoc, endLocation, startSkip, indexEnd);
@@ -94,15 +101,30 @@
         return skipSuggestions;
     } 
     
+    private ArrayList<StructureSkipSuggestion> selectLastChildRegion(int indexEnd) throws IOException {
+        ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>(); 
+        IndentInfo endLocation=IndentInfo.cloneIndentInfo(getHistory().getLine(indexEnd));
+        int indentChilds=getHistory().getLine(indexEnd-1).getIndentValue();        
+        int startSkip = backwardsSkip(indexEnd, indentChilds);
+        if(startSkip>=0){
+            indexPrevChild=startSkip;
+            StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion(); 
+            IndentInfo startLoc = IndentInfo.cloneIndentInfo(getHistory().getLine(startSkip));
+            skipConstruct.setSkipLocations(startLoc, endLocation, startSkip, indexEnd);
+            skipSuggestions.add(skipConstruct); 
+        }       
+        return skipSuggestions;
+    } 
+    
     public ArrayList<StructureSkipSuggestion> getPriorSkipSuggestions() throws IOException{
-        int indexLastLine=getHistory().getIndexLastLine();
-        return selectPriorRegions(indexLastLine);
+        //int indexLastLine=getHistory().getIndexLastLine();
+        return selectPriorRegions(indexPrevChild);
     }
 
     private ArrayList<StructureSkipSuggestion> selectPriorRegions(
-            int indexLastLine) throws IOException {
-        ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();                
-        int indexEnd = findPreviousBegin(indexLastLine);        
+            int indexLastLine) throws IOException {                     
+        int indexEnd = indexLastLine;//findPreviousBegin(indexLastLine);
+        ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
         int startSkip = findPreviousBegin(indexEnd);        
         while(startSkip>=0 && skipSuggestions.size() < MAX_NR_OF_STRUCTURES && (indexLastLine - startSkip)<MAX_NR_OF_LINES){            
             IndentInfo endLocation=IndentInfo.cloneIndentInfo(getHistory().getLine(indexEnd));
@@ -243,7 +265,7 @@
         boolean hasIndentChilds=false;
         boolean isSecondLine=true;
         ArrayList<IndentInfo> endLocations=new ArrayList<IndentInfo>();
-        IndentInfo nextLine = skipLine(startLine.getLineNumber());
+        IndentInfo nextLine = skipLine(startLine);
         while(myParser.currentToken!=SGLR.EOF){            
             int indentSkipPosition=nextLine.getIndentValue();
             indentShift shift=calculateShift(indentStartLine, indentSkipPosition);
@@ -262,7 +284,7 @@
                 }
                 else if(hasIndentChilds){
                     if(isClosingLine(nextLine)){
-                        nextLine = skipLine(nextLine.getLineNumber());
+                        nextLine = skipLine(nextLine);
                         if(nextLine==null)
                             break;
                     }
@@ -277,7 +299,7 @@
                 break;
             }
             isSecondLine=false;
-            nextLine=skipLine(nextLine.getLineNumber());
+            nextLine=skipLine(nextLine);
         }
         endLocations.add(nextLine); //EOF
         return endLocations;
@@ -288,12 +310,16 @@
             return -1;
         IndentInfo startLine=IndentInfo.cloneIndentInfo(getHistory().getLine(indexLine));
         int indentStartLine=startLine.getIndentValue();        
+        return backwardsSkip(indexLine, indentStartLine);
+    }
+
+    private int backwardsSkip(int indexLine, int indentValue) {
         boolean prevLine=true;        
         int indexHistoryLines=indexLine;
         while(indexHistoryLines>0){
             indexHistoryLines-=1;
             int indentSkipPosition=getHistory().getLine(indexHistoryLines).getIndentValue();
-            indentShift shift=calculateShift(indentStartLine, indentSkipPosition);
+            indentShift shift=calculateShift(indentValue, indentSkipPosition);
             switch (shift) {
             case DEDENT:                
                 return -1;                
@@ -348,20 +374,20 @@
     private IndentInfo findParentEnd(IndentInfo startLine) throws IOException{
         getHistory().setTokenIndex(startLine.getTokensSeen());
         int indentStartLine=startLine.getIndentValue();
-        IndentInfo nextLine=skipLine(startLine.getLineNumber());
+        IndentInfo nextLine=skipLine(startLine);
         while(myParser.currentToken!=SGLR.EOF){            
             int indentSkipPosition=nextLine.getIndentValue();
             indentShift shift=calculateShift(indentStartLine, indentSkipPosition);
             if (shift==indentShift.DEDENT) {  
                 if(isClosingLine(nextLine)){
-                    nextLine=skipLine(nextLine.getLineNumber());
+                    nextLine=skipLine(nextLine);
                     if(nextLine==null)
                         break;
                 }                              
                 return nextLine;                
             
             }
-            nextLine=skipLine(nextLine.getLineNumber());
+            nextLine=skipLine(nextLine);
         }         
         return nextLine; //EOF
     } 
@@ -390,26 +416,30 @@
                 }
             }
             //find all (maximal ...) fragments of sequential code lines with indent = bigIndent 
+            int indexEndFragment = prevRegion.getIndexHistoryEnd();
             if(bigIndent!=regionIndent){
-                boolean hasSetRegionEnd = true;
+                boolean hasSetRegionEnd = false;
                 StructureSkipSuggestion indentLevelRegion = new StructureSkipSuggestion();
-                IndentInfo currentLine = getHistory().getLine(indexBigIndentLine + 1);                
-                indentLevelRegion.setEndSkip(currentLine, indexBigIndentLine + 1);
+                IndentInfo currentLine = getHistory().getLine(indexEndFragment);               
+                indentLevelRegion.setEndSkip(currentLine, indexEndFragment);
                 int nrOfFragments=0;
-                for (int i = indexBigIndentLine - 1; i >= startlineIndex; i--) {
+                for (int i = prevRegion.getIndexHistoryEnd(); i >= startlineIndex; i--) {
                     currentLine = getHistory().getLine(i);
+                    if(currentLine.getIndentValue() < bigIndent)
+                        indexEndFragment=i;
                     if (hasSetRegionEnd) {
                         if(currentLine.getIndentValue() < bigIndent){
                             indentLevelRegion.setStartSkip(getHistory().getLine(i + 1), i+1);
                             result.add(indentLevelRegion);
+                            System.err.print(getHistory().getFragment(indentLevelRegion.getStartSkip().getTokensSeen(), indentLevelRegion.getEndSkip().getTokensSeen()-1));
                             hasSetRegionEnd = false;
-                            nrOfFragments+=1;
+                            nrOfFragments+=1;                            
                         }
                     }
-                    else{
+                    else{                        
                         if (currentLine.getIndentValue() == bigIndent) {
                             indentLevelRegion = new StructureSkipSuggestion();
-                            indentLevelRegion.setEndSkip(getHistory().getLine(i + 1), i+1);
+                            indentLevelRegion.setEndSkip(getHistory().getLine(indexEndFragment), indexEndFragment);
                             hasSetRegionEnd = true;
                         }
                     }
@@ -419,14 +449,21 @@
             }
             indentOfLevel=bigIndent;
         }
+        result.add(prevRegion);
         return result;
     }
     
     public ArrayList<StructureSkipSuggestion> getPickErroneousChild(StructureSkipSuggestion prevRegion) throws IOException{
         ArrayList<StructureSkipSuggestion> result=new ArrayList<StructureSkipSuggestion>();
-        result.addAll(selectRegion(prevRegion.getIndexHistoryEnd()-1));
-        result.addAll(selectPreviousRegion(prevRegion.getIndexHistoryEnd()-1));
+        if(!prevRegion.isPreviousRegion() || (prevRegion.getIndexHistoryEnd()-prevRegion.getIndexHistoryStart() < 2)){            
+            result.add(prevRegion);
+            return result;
+        }        
+        //result.addAll(selectRegion(prevRegion.getIndexHistoryEnd()-1));
+        //result.addAll(selectPreviousRegion(prevRegion.getIndexHistoryEnd()-1));
+        result.addAll(selectLastChildRegion(prevRegion.getIndexHistoryEnd()));        
         result.addAll(selectPriorRegions(prevRegion.getIndexHistoryEnd()-1));
+        result.add(prevRegion);
         return result;
     }
     
@@ -469,7 +506,7 @@
         IndentInfo line = getHistory().getLine(indexLine);        
         IndentInfo prevLine=getHistory().getLine(indexLine-1);
         getHistory().setTokenIndex(line.getTokensSeen());
-        IndentInfo nextLine=skipLine(line.getLineNumber());
+        IndentInfo nextLine=skipLine(line);
         int startTokLine=line.structureStartPosition();        
         if(line.getIndentValue() < prevLine.getIndentValue() && line.getIndentValue()>=nextLine.getIndentValue())
             return true;
@@ -508,23 +545,26 @@
         return true;//TODO: try parse line, and check closing?
     }
 
+    /*
     private IndentInfo viewNextLine() throws IOException {
         int currentLocation = getHistory().getTokenIndex()-1;
         IndentInfo nextLine = skipLine(-1);
         getHistory().setTokenIndex(currentLocation);
         return nextLine;
-    }   
+    } 
+    */  
     
     private IndentInfo viewNextLine(IndentInfo currLine) throws IOException {
         int currentLocation = getHistory().getTokenIndex()-1;
         getHistory().setTokenIndex(currLine.getTokensSeen()-1);
-        IndentInfo nextLine = skipLine(currLine.getLineNumber());
+        IndentInfo nextLine = skipLine(currLine);
         getHistory().setTokenIndex(currentLocation);
         return nextLine;
     }   
 
-    private IndentInfo skipLine(int lineNumber) throws IOException {
-        int newLineNumber=lineNumber;
+    private IndentInfo skipLine(IndentInfo line) throws IOException {
+        getHistory().setTokenIndex(line.getTokensSeen()-1);
+        int newLineNumber=line.getLineNumber();
         skipIndentHandler.setInLeftMargin(false);
         getHistory().readRecoverToken(myParser);
         while(myParser.currentToken!=SGLR.EOF){



From L.C.L.Kats at tudelft.nl  Mon Jul 27 11:56:56 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 27 Jul 2009 09:56:56 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19765 - LennartKats -
	strategoxt/trunk/stratego-libraries/lib/spec/util/config
Message-ID: <200907270954.n6R9sj3D025727@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-27 09:56:56 +0000 (Mon, 27 Jul 2009)
New Revision: 19765

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19765&view=rev

Modified:
   strategoxt/trunk/stratego-libraries/lib/spec/util/config/options.str

Log:
New report-failure overload.

Changes:

Modified: strategoxt/trunk/stratego-libraries/lib/spec/util/config/options.str
===================================================================
--- strategoxt/trunk/stratego-libraries/lib/spec/util/config/options.str	2009-07-24 16:29:28 UTC (rev 19764)
+++ strategoxt/trunk/stratego-libraries/lib/spec/util/config/options.str	2009-07-27 09:56:56 UTC (rev 19765)
@@ -286,9 +286,6 @@
    * @param exit
    *          The exit strategy to use, e.g., xtc-exit.
    */
-  report-failure =
-    report-failure(exit)
-  
   report-failure(exit) =
       ?stacktrace
     ; report-run-time
@@ -296,6 +293,15 @@
     ; <reverse ; map(<fprintnl> (stderr(), ["\t", <id>]))> stacktrace
     ; <exit> 1
   
+  report-failure =
+    report-failure(exit)
+  
+  report-failure(|message, term) =
+    report-failure(
+      log(|Critical(), message, term)
+    ; <exit> 1
+    )
+  
   /**
    * Report the failure of this program, without showing a stack trace.
    *



From L.C.L.Kats at tudelft.nl  Mon Jul 27 12:23:00 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 27 Jul 2009 10:23:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19766 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
Message-ID: <200907271020.n6RAKmej026399@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-27 10:22:59 +0000 (Mon, 27 Jul 2009)
New Revision: 19766

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19766&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-strategoxt-jar.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str

Log:
Tuning build.xml.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-strategoxt-jar.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-strategoxt-jar.str	2009-07-27 09:56:56 UTC (rev 19765)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-strategoxt-jar.str	2009-07-27 10:22:59 UTC (rev 19766)
@@ -7,6 +7,6 @@
   
   copy-strategoxt-jar =
     if JarLocation then
-      <file-exists <+ mkdir> "lib/";
-      <copy-file> (<id>, "lib/")
+      <file-exists <+ mkdir> "aux/";
+      <copy-file> (<id>, "aux/strategoxt.jar")
     end

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-07-27 09:56:56 UTC (rev 19765)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-07-27 10:22:59 UTC (rev 19766)
@@ -17,48 +17,35 @@
     <output-xml-file(|[], "build.xml")>
     %>
     <?xml version="1.0" encoding="UTF-8"?>
-    <project name="= name " default="buildAll">
+    <project name="<%= name %>" default="buildAll">
     
         <!-- Project configuration -->
         <property name="trans" location="trans"/>
+        <property name="syntax" location="syntax"/>
         <property name="editor" location="editor"/>
-        <property name="syntax" location="syntax"/>
         <property name="build" location="bin"/>
         <property name="dist" location="bin/dist"/>
         
-        <!-- System configuration -->
+        <!-- Environment configuration -->
         <property name="strategoBinariesLocation" location="${user.home}/.nix-profile/bin"/>
         <property name="scriptsLocation" location="aux"/>
-        <property name="customImports" value="-I ${src} -I ${src}/detection -I ${src}/statistics -I ${src}/utils  -I ${src}/syntax -I ${lib}/apath -I ${lib}/apath/syntax"/>
-        
-        <target name="init">
-            <mkdir dir="${build}"/>
-            <mkdir dir="${dist}"/>
-        </target>
+        <property name="customImports" value="-I ${trans} -I ${syntax}"/>
     
         <target name="buildAll">
             <parallel>
                 <antcall target="strc"/>
                 <antcall target="sdf2table"/>
             </parallel>
+            <antcall target="sdf2imp"/>
         </target>
-    
-        <target name="pack-sdf" depends="init">
-            <apply executable="${strategoBinariesLocation}/pack-sdf" dest="${build}" failonerror="true">
-                <arg value="-i"/>
-                <srcfile/>
-                <arg value="-o"/>
-                <targetfile/>
-                <arg value="-I"/>
-                <arg value="${lib}"/>
-                <arg line="${customImports}"/>
-                <fileset dir="${src}/syntax" includes="*.sdf"/>
-                <mapper type="glob" from="*.sdf" to="*.def"/>
-            </apply>
+        
+        <target name="init">
+            <mkdir dir="${build}"/>
+            <mkdir dir="${dist}"/>
         </target>
     
         <target name="sdf2table" depends="init,pack-sdf">
-            <apply executable="${scriptsLocation}/applyUsingBasename" dest="${dist}" failonerror="true">
+            <apply executable="${scriptsLocation}/applyUsingBasename.sh" dest="${dist}" failonerror="true">
                 <srcfile/>
                 <arg value=".def"/>
                 <arg value="-i"/>
@@ -70,9 +57,23 @@
                 <mapper type="glob" from="*.def" to="*.tbl"/>
             </apply>
         </target>
-    
+
+        <target name="pack-sdf" depends="init">
+            <apply executable="${strategoBinariesLocation}/pack-sdf" dest="${build}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg line="${customImports}"/>
+                <fileset dir="${syntax}" includes="*.sdf"/>
+                <mapper type="glob" from="*.sdf" to="*.def"/>
+            </apply>
+        </target>
+        
         <target name="sdf2rtg" depends="init,pack-sdf">
-            <apply executable="${scriptsLocation}/applyUsingBasename" dest="${build}" failonerror="true">
+            <apply executable="${scriptsLocation}/applyUsingBasename.sh" dest="${build}" failonerror="true">
                 <srcfile/>
                 <arg value=".def"/>
                 <arg value="-i"/>
@@ -86,7 +87,7 @@
         </target>
     
         <target name="rtg2sig" depends="init,sdf2rtg">
-            <apply executable="${scriptsLocation}/applyUsingBasename" dest="${build}" failonerror="true">
+            <apply executable="${scriptsLocation}/applyUsingBasename.sh" dest="${build}" failonerror="true">
                 <srcfile/>
                 <arg value=".rtg"/>
                 <arg value="-i"/>
@@ -103,28 +104,38 @@
             <antcall target="strc-call">
                 <param name="additionalStrcParameters" value=""/>
                 <param name="additionalStrcExtension" value="*"/>
+                <param name="strcExecutable" value="strc"/>
             </antcall>
         </target>
+    
+        <target name="strj" depends="init,rtg2sig">
+            <antcall target="strc-call">
+                <param name="additionalStrcParameters" value=""/>
+                <param name="additionalStrcExtension" value="*.java"/>
+                <param name="strcExecutable" value="strj"/>
+            </antcall>
+        </target>
         
         <target name="ctrees" depends="init,rtg2sig">
             <antcall target="strc-call">
                 <param name="additionalStrcParameters" value="-F"/>
                 <param name="additionalStrcExtension" value="*.ctree"/>
+                <param name="strcExecutable" value="strc"/>
             </antcall>
         </target>
         
         <target name="strc-call" depends="init,rtg2sig">
             <dependset>
-                <srcfilelist dir = "${src}" files = "**/*.str"/>
-                <srcfilelist dir = "${build}" files = "**/*.str"/>
-                <targetfileset dir = "${dist}" includes = "**/*"/>
+                <srcfilelist dir="${trans}" files="**/*.str"/>   <!-- */-->
+                <srcfilelist dir="${build}" files="**/*.str"/> <!-- */-->
+                <targetfileset dir="${dist}" includes="**/*"/> <!-- */-->
             </dependset>
-            <apply executable="${scriptsLocation}/applyUsingBasename" dest="${dist}" failonerror="true">
+            <apply executable="${scriptsLocation}/applyUsingBasename.sh" dest="${dist}" failonerror="true">
                 <srcfile/>
                 <arg value=".str"/>
                 <arg value="-i"/>
                 <arg value="-m"/>
-                <arg value="${strategoBinariesLocation}/strc"/>
+                <arg value="${strategoBinariesLocation}/{strcExecutable}"/>
                 <arg value="-o"/>
                 <targetfile/>
                 <arg value="-S"/>    <!-- Silent mode -->
@@ -153,24 +164,23 @@
                 <arg value="${user.home}/.nix-profile/lib/libstrc.la"/-->
                 <!--arg value="-la"/>
                 <arg value="${user.home}/.nix-profile/lib/libstratego-sglr.la"/-->
-    
                 
                 <arg line="${customImports}"/>
                 
-                <fileset dir="${src}">
-                    <include name="**/*.str"/>
-                    <exclude name="**/*Lib*"/>
-                    <exclude name="**/*lib*"/>
+                <fileset dir="${trans}">
+                    <include name="**/*.str"/> <!-- */ -->
+                    <exclude name="**/*Lib*"/> <!-- */ -->
+                    <exclude name="**/*lib*"/> <!-- */ -->
                 </fileset>
                 <mapper type="glob" from="*.str" to="${additionalStrcExtension}"/>
             </apply>
             <!-- Remove the c files again -->
             <delete>
                 <fileset dir="${dist}">
-                    <include name="**/*.c"/>
-                    <include name="**/*.dep"/>
-                    <include name="**/*.lo"/>
-                    <include name="**/*.o"/>
+                    <include name="**/*.c"/>   <!-- */ -->
+                    <include name="**/*.dep"/> <!-- */ -->
+                    <include name="**/*.lo"/>  <!-- */ -->
+                    <include name="**/*.o"/>   <!-- */ -->
                 </fileset>
             </delete>
         </target>
@@ -178,9 +188,5 @@
         <target name="clean" description="clean up" >
             <delete dir="${build}"/>
         </target>
-    
-        <target name="cleanall" description="clean up" depends="clean" >
-            <delete dir="${dist}"/>
-        </target>
     </project>
     <%



From L.C.L.Kats at tudelft.nl  Mon Jul 27 14:20:23 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 27 Jul 2009 12:20:23 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19767 - LennartKats -
	spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907271218.n6RCICQN027617@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-27 12:20:23 +0000 (Mon, 27 Jul 2009)
New Revision: 19767

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19767&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Disambiguator.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RangeList.java

Log:
Proper RangeList.toString()

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Disambiguator.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Disambiguator.java	2009-07-27 10:22:59 UTC (rev 19766)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Disambiguator.java	2009-07-27 12:20:23 UTC (rev 19767)
@@ -142,7 +142,7 @@
     }
     
     public final void setDefaultFilters() {
-        filterAny = false;        
+        filterAny = false; // TODO: filter by default
         filterCycles = false; // TODO: filterCycles
         filterDirectPreference = true;        
         filterIndirectPreference = false;        

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RangeList.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RangeList.java	2009-07-27 10:22:59 UTC (rev 19766)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RangeList.java	2009-07-27 12:20:23 UTC (rev 19767)
@@ -103,14 +103,17 @@
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append('[');
-        for (int i = 0; i < ranges.length; i++) {
+        for (int i = 0, end = ranges.length - 1; i < end; i++) {
             int low = ranges[i];
             int high = ranges[i + 1];
             sb.append(low);
+            if (low != high) {
+                sb.append('-');
+                sb.append(high);
+            }
             sb.append(',');
-            sb.append(high);
         }
-        sb.append(']');
+        sb.replace(sb.length() - 1, sb.length(), "]");
         return sb.toString();
     }
 }



From L.C.L.Kats at tudelft.nl  Mon Jul 27 14:27:18 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 27 Jul 2009 12:27:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19768 - LennartKats -
	in spoofax-imp/trunk:
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast
Message-ID: <200907271225.n6RCP6n1027664@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-27 12:27:18 +0000 (Mon, 27 Jul 2009)
New Revision: 19768

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19768&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ImploderException.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java

Log:
- Added support for the "force accepting stack" method which can drop characters from the original input stream.
- Disabled the parser time out in debug mode (i.e., when assertions are enabled)

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-07-27 12:20:23 UTC (rev 19767)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-07-27 12:27:18 UTC (rev 19768)
@@ -3,7 +3,6 @@
 import java.io.File;
 import java.io.IOException;
 import java.lang.reflect.InvocationTargetException;
-import java.net.URISyntaxException;
 
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.IProject;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java	2009-07-27 12:20:23 UTC (rev 19767)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java	2009-07-27 12:27:18 UTC (rev 19768)
@@ -76,8 +76,6 @@
 		
 		// Read stream using tokenizer/lexstream
 		
-		ATerm asfix = parser.parse(inputStream, getStartSymbol()); 
-		
-		return asfix;
+		return parser.parse(inputStream, getStartSymbol());
 	}
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2009-07-27 12:20:23 UTC (rev 19767)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2009-07-27 12:27:18 UTC (rev 19768)
@@ -105,7 +105,8 @@
     
     static {
     	SGLR.setWorkAroundMultipleLookahead(true);
-		Tools.setTimeout(PARSE_TIMEOUT);
+    	if (!Debug.ENABLED)
+    		Tools.setTimeout(PARSE_TIMEOUT);
     }
     
     /**

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java	2009-07-27 12:20:23 UTC (rev 19767)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java	2009-07-27 12:27:18 UTC (rev 19768)
@@ -14,7 +14,6 @@
 
 import org.spoofax.jsglr.RecoveryConnector;
 import org.strategoxt.imp.runtime.Debug;
-import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.parser.ParseErrorHandler;
 import org.strategoxt.imp.runtime.parser.tokens.SGLRTokenizer;
 import org.strategoxt.imp.runtime.parser.tokens.TokenKindManager;
@@ -45,6 +44,8 @@
 
 	protected static final int PROD_ATTRS = 2;
 	
+	private static final int NONE = -1;
+	
 	private static final Map<ATerm, AstNode> implodedCache =
 		Collections.synchronizedMap(new WeakHashMap<ATerm, AstNode>());
 	
@@ -59,6 +60,10 @@
 	/** Character offset for the current implosion. */ 
 	protected int offset;
 	
+	private int nonMatchingOffset = NONE;
+	
+	private char nonMatchingChar, nonMatchingCharExpected;
+	
 	protected boolean inLexicalContext;
 	
     public AsfixImploder(TokenKindManager tokenManager) {
@@ -78,7 +83,8 @@
 		if (!(asfix instanceof ATermAppl || ((ATermAppl) asfix).getName().equals("parsetree")))
 			throw new IllegalArgumentException("Parse tree expected");
 		
-		assert offset == 0 && tokenizer.getStartOffset() == 0 : "Race condition in AsfixImploder";
+		if (offset != 0 || tokenizer.getStartOffset() != 0)
+			throw new IllegalStateException("Race condition in AsfixImploder");
 		
 		ATerm top = (ATerm) asfix.getChildAt(PARSE_TREE);
 		offset = 0;
@@ -89,6 +95,7 @@
 		} finally {
 			tokenizer.endStream();
 			offset = 0;
+			nonMatchingOffset = NONE;
 		}
 		
 		if (Debug.ENABLED) {
@@ -368,12 +375,13 @@
 	/** Implode any appl(_, _) that constructs a lex terminal. */
 	protected void implodeLexical(ATermInt character) {
 		char[] inputChars = tokenizer.getLexStream().getInputChars();
-		if (inputChars.length <= offset) {
-			// TODO: Must throw an exception in this case
-			Environment.logException("Unexpected character in parse tree: " + (char) character.getInt());
-			// offset++;
-			return;
-			// throw new IllegalStateException("Unexpected character in parse tree: " + character);
+		if (offset >= inputChars.length) {
+			if (nonMatchingOffset == NONE)
+				throw new ImploderException("Character in parse tree after end of input stream: " + (char) character.getInt());
+			else
+				throw new ImploderException("Character in parse tree after end of input stream: " + (char) character.getInt()
+						+ " - may be caused by unexcepted character in parse tree at position " + nonMatchingChar
+						+ ": " + nonMatchingChar + " instead of " + nonMatchingCharExpected);
 		}
 		
 		char parsedChar = (char) character.getInt();
@@ -385,12 +393,20 @@
 				// for later error reporting. (Cannot modify the immutable
 				// parse tree here; changing the original stream instead.)
 				inputChars[offset] = ParseErrorHandler.SKIPPED_CHAR;
+				offset++;
 			} else {
-				throw new IllegalStateException("Character from asfix stream (" + parsedChar
-						+ ") must be in lex stream (" + inputChar + ")");
+				// UNDONE: Strict lexical stream checking
+				// throw new IllegalStateException("Character from asfix stream (" + parsedChar
+				//	 	+ ") must be in lex stream (" + inputChar + ")");
+				if (nonMatchingOffset == NONE) {
+					nonMatchingOffset = offset;
+					nonMatchingChar = parsedChar;
+					nonMatchingCharExpected = inputChar;
+				}
+				inputChars[offset] = ParseErrorHandler.SKIPPED_CHAR;
 			}
+		} else {
+			offset++;
 		}
-		
-		offset++;
 	}
 }

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ImploderException.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ImploderException.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ImploderException.java	2009-07-27 12:27:18 UTC (rev 19768)
@@ -0,0 +1,13 @@
+package org.strategoxt.imp.runtime.parser.ast;
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class ImploderException extends RuntimeException {
+	private static final long serialVersionUID = -3899486903481222522L;
+
+	public ImploderException(String s) {
+		super(s);
+	}
+
+}



From L.C.L.Kats at tudelft.nl  Mon Jul 27 14:34:36 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 27 Jul 2009 12:34:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19769 - LennartKats -
	strc-java/trunk/trans
Message-ID: <200907271232.n6RCWP5S027710@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-27 12:34:36 +0000 (Mon, 27 Jul 2009)
New Revision: 19769

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19769&view=rev

Added:
   strc-java/trunk/trans/split-large-strategies.meta

Log:
Missing file.

Changes:

Added: strc-java/trunk/trans/split-large-strategies.meta
===================================================================
--- strc-java/trunk/trans/split-large-strategies.meta	                        (rev 0)
+++ strc-java/trunk/trans/split-large-strategies.meta	2009-07-27 12:34:36 UTC (rev 19769)
@@ -0,0 +1 @@
+Meta([Syntax("Stratego-Sugar-in-Stratego")])



From L.C.L.Kats at tudelft.nl  Mon Jul 27 14:38:14 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 27 Jul 2009 12:38:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19770 - LennartKats -
	in strc-java/trunk: .
	java/runtime/org/strategoxt/lang/parallel test test/basic trans
Message-ID: <200907271236.n6RCa2Ux027730@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-27 12:38:14 +0000 (Mon, 27 Jul 2009)
New Revision: 19770

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19770&view=rev

Added:
   strc-java/trunk/test/basic/build_2.str
Modified:
   strc-java/trunk/.classpath
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelAll.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/PureOperatorSet.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel.java
   strc-java/trunk/test/Makefile.am
   strc-java/trunk/trans/java-dead-assigns.str
   strc-java/trunk/trans/java-optimize.str
   strc-java/trunk/trans/java-simplify.str
   strc-java/trunk/trans/s2j.str
   strc-java/trunk/trans/shared-constructors.str

Log:
Minor tweaks.

Changes:

Modified: strc-java/trunk/.classpath
===================================================================
--- strc-java/trunk/.classpath	2009-07-27 12:34:36 UTC (rev 19769)
+++ strc-java/trunk/.classpath	2009-07-27 12:38:14 UTC (rev 19770)
@@ -3,7 +3,7 @@
 	<classpathentry kind="src" output="java/runtime" path="java/runtime"/>
 	<classpathentry kind="src" output="strc-java/java/compiler" path="java/compiler"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
-	<classpathentry exported="true" kind="lib" path="java/strategoxt.jar" sourcepath="/org.spoofax.interpreter.library.jsglr"/>
+	<classpathentry exported="true" kind="lib" path="java/strategoxt.jar" sourcepath="java/lib"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/3"/>
 	<classpathentry kind="output" path="bin"/>

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelAll.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelAll.java	2009-07-27 12:34:36 UTC (rev 19769)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelAll.java	2009-07-27 12:38:14 UTC (rev 19770)
@@ -50,7 +50,7 @@
 	@Override
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s) {
 		// TODO: The focus thread could actually start more jobs, given a priority job queue
-		if ((ALLOW_NESTED_JOBS || !isParallelActive) && isCandidateTerm(context, current) && ENABLED) {
+		if (ENABLED && (ALLOW_NESTED_JOBS || !isParallelActive) && isCandidateTerm(context, current)) {
 			context.push("<parallel>");
 			IStrategoTerm result = invokeParallel(context, current, s);
 			

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/PureOperatorSet.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/PureOperatorSet.java	2009-07-27 12:34:36 UTC (rev 19769)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/PureOperatorSet.java	2009-07-27 12:38:14 UTC (rev 19770)
@@ -49,7 +49,7 @@
 	}};
 	
 	/**
-	 * Primitives that are thread safe only if not
+	 * Primitives that are only thread safe when only
 	 * combined with other white/gray-listed primitives.
 	 */
 	@SuppressWarnings("serial")
@@ -91,6 +91,10 @@
 		return whiteList.contains(name);
 	}
 	
+	public static void addWhiteListed(String name) {
+		
+	}
+	
 	public static boolean isGrayListed(String name) {
 		return grayList.contains(name);
 	}

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel.java	2009-07-27 12:34:36 UTC (rev 19769)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel.java	2009-07-27 12:38:14 UTC (rev 19770)
@@ -12,7 +12,7 @@
 	
 	protected static final boolean ENABLED = true;
 	
-	protected static final boolean VERBOSE = true;
+	protected static final boolean VERBOSE = false;
 	
 	protected static final boolean DIAGNOSE_SYNCHRONOUS_OPERATIONS = false;
 	
@@ -22,7 +22,7 @@
 	
 	protected static final int DEFAULT_TERM_SIZE_THRESHOLD = 3200;
 	
-	protected static final int DEFAULT_SUBTERM_COUNT_THRESHOLD = 6;
+	protected static final int DEFAULT_SUBTERM_COUNT_THRESHOLD = 12;
 	
 	protected static final double DEFAULT_JOB_LENGTH_MULTIPLIER = .5;
 	
@@ -33,11 +33,20 @@
 	private static boolean isInitialized; 
 	
 	public static void init(Context context) {
-		if (isInitialized) return;
+		if (isInitialized || !ENABLED) return;
 		isInitialized = true;
 		
 		ParallelAll.instance = new ParallelAll();
 		SRTS_all.instance = ParallelAll.instance;
+		
+		System.err.println("[ libstratego-parallel ] using "
+				+ DEFAULT_ACTIVE_THREADS
+				+ (DEFAULT_MAX_THREADS != DEFAULT_ACTIVE_THREADS ? "/" + DEFAULT_MAX_THREADS : "")
+				+ " threads,"
+				+ " jobsize " + DEFAULT_JOB_LENGTH_MULTIPLIER
+				+ (ADJUST_FOCUS_THREAD_PRIORITY ? " (priority focus thread)" : "")
+				+ (DIAGNOSE_SYNCHRONOUS_OPERATIONS ? " (diagnose sync. ops)" : "")
+				);
 	}
 	
 	public static class parallel_unordered_0_0 extends Strategy {

Modified: strc-java/trunk/test/Makefile.am
===================================================================
--- strc-java/trunk/test/Makefile.am	2009-07-27 12:34:36 UTC (rev 19769)
+++ strc-java/trunk/test/Makefile.am	2009-07-27 12:38:14 UTC (rev 19770)
@@ -46,7 +46,7 @@
 
 STRC2TESTFILES=$(addprefix strc2/,$(addsuffix .str,$(STRC2TESTS)))
 
-BASICTESTS=build_0 build_1 match_1 match_2 match_3 match_4 match_5 lchoice_1 lchoice_2 gchoice_1 gchoice_2 \
+BASICTESTS=build_0 build_1 build_2 match_1 match_2 match_3 match_4 match_5 lchoice_1 lchoice_2 gchoice_1 gchoice_2 \
            scopes_1 scopes_2 internal_1 internal_2 override_1 extend_1 \
            shared_var_1 shared_var_2 shared_var_3 shared_var_4 shared_var_5 \
            dynrules_1 dynrules_2 dynrules_3 dynrules_4 dynrules_5 iset_1 iset_2 fetch_1 \

Added: strc-java/trunk/test/basic/build_2.str
===================================================================
--- strc-java/trunk/test/basic/build_2.str	                        (rev 0)
+++ strc-java/trunk/test/basic/build_2.str	2009-07-27 12:38:14 UTC (rev 19770)
@@ -0,0 +1,10 @@
+module build_2
+
+imports libstratego-lib
+
+strategies
+
+  main =
+    !Some("a"){1, 2}
+    ; try(\Some(s){ts*} -> Some(s){Some(ts*)}\)
+    ; ?Some("a"){Some([1,2])}

Modified: strc-java/trunk/trans/java-dead-assigns.str
===================================================================
--- strc-java/trunk/trans/java-dead-assigns.str	2009-07-27 12:34:36 UTC (rev 19769)
+++ strc-java/trunk/trans/java-dead-assigns.str	2009-07-27 12:38:14 UTC (rev 19770)
@@ -67,14 +67,12 @@
     Block({| IsUsed: dead-assigns-stm |})
   
   dead-assigns-control =
-    Labeled(id, {| IsUsed: dead-assigns-stm |})
+    Labeled(id, id)
+  //; Labeled(id, {| IsUsed: dead-assigns-stm |})
+  ; Labeled(id, is-container-stm; dead-assigns-stm)
   
-  dead-assigns-control =
-    DoWhile(id, {| IsUsed: dead-assigns-stm |})
-  ; While(dead-assigns-expr, id)
-  
-  dead-assigns-control =
-    [Break(id) | {| IsUsed: dead-assigns-stm |}]
+  //dead-assigns-control =
+  //  [Break(id) | {| IsUsed: dead-assigns-stm |}]
 
   is-container-stm =
     ?Labeled(_, _) + ?Block(_) + ?If(_, _) + ?If(_, _, _)

Modified: strc-java/trunk/trans/java-optimize.str
===================================================================
--- strc-java/trunk/trans/java-optimize.str	2009-07-27 12:34:36 UTC (rev 19769)
+++ strc-java/trunk/trans/java-optimize.str	2009-07-27 12:38:14 UTC (rev 19770)
@@ -18,7 +18,6 @@
         [id | optimize-assignments] + optimize-assignments
       )
     )
-  //; optimize-assignments-top
   ; java-dead-assigns-top
   ; bottomup(repeat( // should be done after previous pass
       optimize-conditionals
@@ -55,6 +54,7 @@
     ?Lit(_)
   + ?|[ getConstant(e1, e2) ]|
   + ?ExprName(_)
+  //+ ?|[ x.get() ]|
   //+ ?|[ termFactory.x(e*) ]|; where(<all(has-no-side-effects)> e*)
 
   optimize-match-test :

Modified: strc-java/trunk/trans/java-simplify.str
===================================================================
--- strc-java/trunk/trans/java-simplify.str	2009-07-27 12:34:36 UTC (rev 19769)
+++ strc-java/trunk/trans/java-simplify.str	2009-07-27 12:38:14 UTC (rev 19770)
@@ -1,7 +1,7 @@
 /**
  * Java output simplification.
  *
- * Removes all unnecessary statements generated for convenience,
+ * Removes some unnecessary statements and blocks generated for convenience,
  * and makes life (much) easier for the pretty printer.
  *
  * @author Lennart Kats

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2009-07-27 12:34:36 UTC (rev 19769)
+++ strc-java/trunk/trans/s2j.str	2009-07-27 12:38:14 UTC (rev 19770)
@@ -66,12 +66,15 @@
       )
     ; log-timed(
         dr-scope-all-verbose(java-compile-spec)
+      ; java-simplify
       | "Backend transformation succeeded", 1
       )
     ; log-timed(
-        java-simplify
-      ; olevel1(java-optimize)
-      ; java-relabel
+        olevel1(java-optimize)
+      | <conc-strings> ("Backend optimization succeeded -O ", <get-config; int-to-string> "-O"), 1
+      )
+    ; log-timed(
+        java-relabel
       | "Backend postprocessing succeeded", 1
       )
      
@@ -997,12 +1000,12 @@
     ; <not(?Var(_))> pt1
 
   java-ConstructTerm :
-    Op(c, t*) -> expr|[ termFactory.makeAppl(~*[cons | args]) ]|
+    Op(c, t*) -> expr|[ termFactory.makeAppl(e_cons, new IStrategoTerm[] { e_arg* }) ]|
   where
       not(is-ListOp + is-TupleOp)
   with
-      cons := <java-ConstructorName-expr> (c, <length> t*)
-    ; args := <map(java-construct-term)> t*
+      e_cons := <java-ConstructorName-expr> (c, <length> t*)
+    ; e_arg* := <map(java-construct-term)> t*
     
   java-ConstructTerm :
     Explode(t1, t2) -> expr |[ x ]|

Modified: strc-java/trunk/trans/shared-constructors.str
===================================================================
--- strc-java/trunk/trans/shared-constructors.str	2009-07-27 12:34:36 UTC (rev 19769)
+++ strc-java/trunk/trans/shared-constructors.str	2009-07-27 12:38:14 UTC (rev 19770)
@@ -43,6 +43,10 @@
 
 strategies
 
+  // HACK: Need to locally redefine the congruences...
+
+  internal Id(x) = ?Id(a){a*}; !Id(<x> a){a*}
+
   internal If(x, y) = ?If(a, b){a*}; !If(<x> a, <y> b){a*}
 
   internal While(x, y) = ?While(a, b){a*}; !While(<x> a, <y> b){a*}
@@ -52,3 +56,5 @@
   internal Return(x) = ?Return(a){a*}; !Return(<x> a){a*}
 
   internal Break(x) = ?Break(a){a*}; !Break(<x> a){a*}
+  
+  internal VarDec(x, y) = ?VarDec(a, b){a*}; !VarDec(<x> a, <y> b){a*}



From m.dejonge at tudelft.nl  Mon Jul 27 15:55:30 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 27 Jul 2009 13:55:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19771 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907271353.n6RDrI5Q028837@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-27 13:55:30 +0000 (Mon, 27 Jul 2009)
New Revision: 19771

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19771&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParserHistory.java

Log:
index last line

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParserHistory.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParserHistory.java	2009-07-27 12:38:14 UTC (rev 19770)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParserHistory.java	2009-07-27 13:55:30 UTC (rev 19771)
@@ -29,6 +29,10 @@
     public int getTokenIndex() {
         return tokenIndex;
     }
+    
+    public int getIndexLastToken() {
+        return recoverTokenCount-1;
+    }
 
     public void setTokenIndex(int tokenIndex) {
         this.tokenIndex = tokenIndex;
@@ -165,6 +169,17 @@
         }        
         return fragment;
     }
+    
+    public String getFragment(StructureSkipSuggestion skip) {
+        String fragment="";
+        for (int i = skip.getStartSkip().getTokensSeen(); i <= skip.getEndSkip().getTokensSeen()-1; i++) {
+            if(i >= recoverTokenCount)
+                break;
+            fragment+= recoverTokenStream[i];
+        }        
+        return fragment;
+    }
+    
     /*
      * current construct in navigation
      */
@@ -205,13 +220,25 @@
     }
     
     public IndentInfo getLine(int index){
+        if(index < 0 || index > getIndexLastLine())
+            return null;
         return newLinePoints.get(index);
     }
     
+    public IndentInfo getPreviousLine(){
+        if(indexConstruct==0)
+            return null;
+        return newLinePoints.get(indexConstruct-1);
+    }
+    
     public IndentInfo getLastLine(){
         return newLinePoints.get(newLinePoints.size()-1);
     }
     
+    public int getIndexLastLine(){
+        return newLinePoints.size()-1;
+    }
+    
     public void moveToLastConstruct(){
         indexConstruct=newLinePoints.size()-1;        
     }



From L.C.L.Kats at tudelft.nl  Mon Jul 27 15:59:32 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 27 Jul 2009 13:59:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19772 - LennartKats -
	strc-java/trunk/trans
Message-ID: <200907271357.n6RDvKqm028876@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-27 13:59:32 +0000 (Mon, 27 Jul 2009)
New Revision: 19772

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19772&view=rev

Modified:
   strc-java/trunk/trans/java-dead-assigns.str
   strc-java/trunk/trans/java-optimize.str
   strc-java/trunk/trans/s2j.str

Log:
Better support for multiple (Context) instances.

Changes:

Modified: strc-java/trunk/trans/java-dead-assigns.str
===================================================================
--- strc-java/trunk/trans/java-dead-assigns.str	2009-07-27 13:55:30 UTC (rev 19771)
+++ strc-java/trunk/trans/java-dead-assigns.str	2009-07-27 13:59:32 UTC (rev 19772)
@@ -60,19 +60,11 @@
   ; If(dead-assigns-expr, id, id)
   
   dead-assigns-control =
-    While(dead-assigns-expr, id)
-  ; While(id, {| IsUsed: dead-assigns-stm |})
-  
-  dead-assigns-control =
     Block({| IsUsed: dead-assigns-stm |})
   
   dead-assigns-control =
     Labeled(id, id)
-  //; Labeled(id, {| IsUsed: dead-assigns-stm |})
   ; Labeled(id, is-container-stm; dead-assigns-stm)
-  
-  //dead-assigns-control =
-  //  [Break(id) | {| IsUsed: dead-assigns-stm |}]
 
   is-container-stm =
     ?Labeled(_, _) + ?Block(_) + ?If(_, _) + ?If(_, _, _)

Modified: strc-java/trunk/trans/java-optimize.str
===================================================================
--- strc-java/trunk/trans/java-optimize.str	2009-07-27 13:55:30 UTC (rev 19771)
+++ strc-java/trunk/trans/java-optimize.str	2009-07-27 13:59:32 UTC (rev 19772)
@@ -52,7 +52,7 @@
 
   has-no-side-effects =
     ?Lit(_)
-  + ?|[ getConstant(e1, e2) ]|
+  + ?|[ x.getConstant(e1, e2) ]|
   + ?ExprName(_)
   //+ ?|[ x.get() ]|
   //+ ?|[ termFactory.x(e*) ]|; where(<all(has-no-side-effects)> e*)

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2009-07-27 13:55:30 UTC (rev 19771)
+++ strc-java/trunk/trans/s2j.str	2009-07-27 13:59:32 UTC (rev 19772)
@@ -113,21 +113,32 @@
 
      protected static final boolean TRACES_ENABLED = e_traces;
      protected static ITermFactory constantFactory;
+     private static Context initedContext;
+     private static boolean isIniting;
 
      ~*cnst-decls
      ~*cnstr-decls
      
      public static Context init(Context context) {
-       ITermFactory termFactory = context.getFactory();
-       if (constantFactory == termFactory)
+       synchronized (x_name.class) {
+         if (isIniting) return null;
+         isIniting = true;
+         ITermFactory termFactory = context.getFactory();
+         if (constantFactory != termFactory) {
+           initConstructors(termFactory);
+           initConstants(termFactory);
+         }
+         if (context != initedContext) {
+           ~*import-inits
+           ~*def-inits
+           context.registerComponent("~x_name");
+         }
+         // Set these last to trigger failure if getConstant() is called early
+         x_name.initedContext = context;
+         x_name.constantFactory = termFactory;
+         isIniting = false;
          return context;
-       x_name.constantFactory = termFactory;
-       initConstructors(termFactory);
-       initConstants(termFactory);
-       ~*import-inits
-       ~*def-inits
-       context.registerComponent("~x_name");
-       return context;
+       }
      }
      
      public static Context init() {
@@ -255,7 +266,7 @@
       protected static IStrategoTerm getConstant(ITermFactory factory, IStrategoTerm constant) {
         if (factory == constantFactory) {
           return constant;
-        } else if (factory != null) {
+        } else if (constantFactory != null) {
           return new TermConverter(factory).convert(constant);
         } else {
           throw new IllegalStateException("Component not initialized; please call init() first");
@@ -265,7 +276,7 @@
       protected static IStrategoTerm getConstant(ITermFactory factory, TermReference constant) {
         if (factory == constantFactory) {
           return constant.get();
-        } else if (factory != null) {
+        } else if (constantFactory != null) {
           return new TermConverter(factory).convert(constant.get());
         } else {
           throw new IllegalStateException("Component not initialized; please call init() first");
@@ -818,7 +829,7 @@
    *    (minding the 32767 length limit)
    */
   translate-ImportTerm :
-    ImportTerm(file) -> |[ term = getConstant(termFactory, x_constant); ]|
+    ImportTerm(file) -> |[ term = x_main.getConstant(termFactory, x_constant); ]|
     with
       inputfile  := <find-import-term-file> file // (exits on error)
     ; outputfile := <base-filename> file
@@ -901,12 +912,13 @@
        ; (java-CacheConstant-again <+ java-CacheConstant <+ Snd)
 
   java-CacheConstant-again :
-    (t, e1 @ |[ getConstant(termFactory, e2) ]|) -> e1
+    (t, e1 @ |[ x_main.getConstant(termFactory, e2) ]|) -> e1
     with
       rules(java-Cache: t -> e1)
+    ; x_main := <MainClassName>
 
   java-CacheConstant :
-    (t, e1) -> |[ getConstant(termFactory, e2) ]|
+    (t, e1) -> |[ x_main.getConstant(termFactory, e2) ]|
   where
       <(Op(id, map(java-Cache)); java-proper-list 
             + Anno(java-Cache, java-Cache) 
@@ -918,7 +930,8 @@
           x := <newname> "const"
         end
       ; e2 := ExprName(Id(x))
-      ; rules( java-Cache : t -> |[ getConstant(termFactory, e2) ]| )
+      ; x_main := <MainClassName>
+      ; rules( java-Cache : t -> |[ x_main.getConstant(termFactory, e2) ]| )
       ; !(x, e1)
       ; rules(ConstDecl :+= <java-DeclareTermId>)
       ; rules(ConstInit :+= <java-InitTermId>)
@@ -926,7 +939,7 @@
  java-proper-list =
     Op("Nil", [])
     + Op("Cons", [id, java-proper-list])
-    // UNDONE: + Op("Cons", [id, java-proper-list + ?|[ getConstant(e1, e2) ]|])
+    // UNDONE: + Op("Cons", [id, java-proper-list + ?|[ x_main.getConstant(e1, e2) ]|])
     // TODO: Fix constants being generated multiple times
     //       e.g., <conc> ([], []) does this; it's got something to do with annos 
     + Op(id, id)
@@ -941,7 +954,9 @@
     class-body-dec|[ protected static IStrategoTerm x; ]|
 
   java-InitTermId :
-    (x, e) -> bstm*|[ x = e; ]|
+    (x, e) -> bstm*|[ x = e'; ]|
+    with
+      e' := <alltd(\|[ x.getConstant(e_factory, e_const) ]| -> e_const\)> e
 
   java-mk-int-const =
     !Lit(Deci(<try(int-to-string)>))
@@ -1042,7 +1057,7 @@
         ; if <not(Anno(is-ListOp,id))> t2 then 
             java-check-aterm-list 
           else
-              if ?|[ getConstant(e1, e2) ]| + ?expr |[ x ]| then
+              if ?|[ x.getConstant(e1, e2) ]| + ?expr |[ x ]| then
                 !|[ (IStrategoList) ~expr:<id> ]|
               else
                 try(java-UncastATerm)



From L.C.L.Kats at tudelft.nl  Mon Jul 27 16:43:45 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 27 Jul 2009 14:43:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19773 - LennartKats -
	strategoxt/trunk/strc-core/lib/stratego/strc/front
Message-ID: <200907271441.n6REfX0n029470@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-27 14:43:44 +0000 (Mon, 27 Jul 2009)
New Revision: 19773

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19773&view=rev

Modified:
   strategoxt/trunk/strc-core/lib/stratego/strc/front/desugar.str

Log:
Avoid generating a lifted strategy for the report-failure() call of each 'with' clause.

Changes:

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/front/desugar.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/front/desugar.str	2009-07-27 13:59:32 UTC (rev 19772)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/front/desugar.str	2009-07-27 14:43:44 UTC (rev 19773)
@@ -188,10 +188,7 @@
           s
           <+ { x: ?x
            ; prim("SSL_stacktrace_get_all_frame_names",|)
-           ; report-failure(
-               log(|Critical(){^[]}, ~str:message {^[]}, x)
-             ; exit(|)
-             )
+           ; report-failure(|~str:message {^[]}, x)
              }
         )
       ]|
@@ -220,10 +217,7 @@
          s
          <+ { x: ?x
           ; prim("SSL_stacktrace_get_all_frame_names",|)
-          ; report-failure(
-              log(|Critical(){^[]}, ~str:message {^[]}, x)
-            ; exit(|)
-            )
+          ; report-failure(|~str:message {^[]}, x)
             }
        )
     ]|



From m.dejonge at tudelft.nl  Mon Jul 27 18:57:20 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 27 Jul 2009 16:57:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19774 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907271655.n6RGt8Ur030978@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-27 16:57:20 +0000 (Mon, 27 Jul 2009)
New Revision: 19774

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19774&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java

Log:
bug fixing after running testsuite SLE

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java	2009-07-27 14:43:44 UTC (rev 19773)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java	2009-07-27 16:57:20 UTC (rev 19774)
@@ -48,15 +48,17 @@
     }
 
     public ArrayList<IndentInfo> getSkippedLines() {
+        //System.err.println("start index: "+erroneousRegion.getIndexHistoryStart());
         return getHistory().getLinesFrom(erroneousRegion.getIndexHistoryStart());
     }    
 
     public boolean selectErroneousFragment() throws IOException { 
         regionSelector.clear();
+        regionSelector.setFailureIndex(getHistory().getIndexLastLine());
         errorDetectionLocation=getHistory().getIndexLastToken();
         hasFoundErroneousRegion=false;         
         ArrayList<StructureSkipSuggestion> prevRegions=regionSelector.getPreviousSkipSuggestions();
-        //System.err.println("PREVIOUS REGION");        
+        System.err.println("PREVIOUS REGION");        
         if(trySetErroneousRegion(prevRegions)){
             ArrayList<StructureSkipSuggestion> decomposedRegions=regionSelector.getZoomOnPreviousSuggestions(erroneousRegion);
             boolean findSmallerPart= trySetErroneousRegion(decomposedRegions);
@@ -67,11 +69,11 @@
             return true;
         }
         ArrayList<StructureSkipSuggestion> currentRegions=regionSelector.getCurrentSkipSuggestions();
-        //System.err.println("CURRENT REGION");
+        System.err.println("CURRENT REGION");
         if(trySetErroneousRegion(currentRegions)){            
             return true;
         }
-        //System.err.println("PRIOR REGIONS");
+        System.err.println("PRIOR REGIONS");
         ArrayList<StructureSkipSuggestion> priorRegions=regionSelector.getPriorSkipSuggestions();
         if(trySetErroneousRegion(priorRegions)){
             ArrayList<StructureSkipSuggestion> decomposedRegions=regionSelector.getZoomOnPreviousSuggestions(erroneousRegion);
@@ -82,36 +84,37 @@
             }
             return true;
         }
-        //System.err.println("FW-SIB REGIONS");
+        System.err.println("FW-SIB REGIONS");
         ArrayList<StructureSkipSuggestion> siblingForWardRegions=regionSelector.getSibblingForwardSuggestions();
         if(trySetErroneousRegion(siblingForWardRegions)){            
             return true;
         }
-        //System.err.println("BW-SIB REGIONS");
+        System.err.println("BW-SIB REGIONS");
         ArrayList<StructureSkipSuggestion> siblingBackWardRegions=regionSelector.getSibblingBackwardSuggestions();
         if(trySetErroneousRegion(siblingBackWardRegions)){            
             return true;
         }
-        //System.err.println("SURROUNDING-SIB REGIONS");
+        System.err.println("SURROUNDING-SIB REGIONS");
         ArrayList<StructureSkipSuggestion> siblingSurroundingRegions=regionSelector.getSibblingSurroundingSuggestions();
         if(trySetErroneousRegion(siblingSurroundingRegions)){            
             return true;
         }
-        //System.err.println("PARENT REGION");
+        System.err.println("PARENT REGION");
         ArrayList<StructureSkipSuggestion> parentRegion=regionSelector.getParentSkipSuggestions();
         if(trySetErroneousRegion(parentRegion)){            
             return true;
         }        
         else {
-            //System.err.println("PREFIX");
+            System.err.println("PREFIX");
             erroneousRegion=regionSelector.getErroneousPrefix();
+           // System.err.print(getHistory().getFragment(erroneousRegion));
             ArrayList<StructureSkipSuggestion> decomposedRegions=regionSelector.getZoomOnPreviousSuggestions(erroneousRegion);
             boolean findSmallerPart=trySetErroneousRegion(decomposedRegions);
             if(findSmallerPart){
                 ArrayList<StructureSkipSuggestion> childRegions=regionSelector.getPickErroneousChild(erroneousRegion);
                 trySetErroneousRegion(childRegions);
             }
-            return false; //findSmallerPart;
+            return findSmallerPart; //false;
         }
     }
 
@@ -123,12 +126,15 @@
         while (indexSkips < regions.size() && !successCriterion()) {
             aSkip = regions.get(indexSkips);
             //Debug info
-            //System.err.print("**************");            
+            //System.err.print("~~~~~~~~~~~~~");
+            //System.err.println("");
             //System.err.print(getHistory().getFragment(aSkip.getStartSkip().getTokensSeen(), aSkip.getEndSkip().getTokensSeen()-1));
+            //System.err.println("");
             
             IndentInfo endPos=aSkip.getEndSkip();
             getHistory().setTokenIndex(endPos.getTokensSeen());
             myParser.activeStacks.clear();
+            myParser.acceptingStack=null;
             myParser.activeStacks.addAll(endPos.getStackNodes());
             int nrOfParsedLines=0;
             while((myParser.activeStacks.size() > 0 && nrOfParsedLines<NR_OF_LINES_TILL_SUCCESS) || !getHistory().hasFinishedRecoverTokens()) {                       

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-27 14:43:44 UTC (rev 19773)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-27 16:57:20 UTC (rev 19774)
@@ -12,7 +12,12 @@
     private final static int MAX_NR_OF_LINES=30;
     private final static int MAX_NR_OF_STRUCTURES=20;
     private int indexPrevChild;
+    private int failureIndex;
     
+    public void setFailureIndex(int failureIndex) {
+        this.failureIndex = failureIndex;
+    }
+
     enum indentShift{
         INDENT,
         DEDENT,
@@ -70,7 +75,7 @@
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
         for (IndentInfo endSkip : endLocations) {
             StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();
-            skipConstruct.setSkipLocations(startLine, endSkip);            
+            skipConstruct.setSkipLocations(startLine, endSkip, indexLine, -1);            
             skipSuggestions.add(skipConstruct);
         }
         return skipSuggestions;
@@ -101,16 +106,20 @@
         return skipSuggestions;
     } 
     
-    private ArrayList<StructureSkipSuggestion> selectLastChildRegion(int indexEnd) throws IOException {
+    private ArrayList<StructureSkipSuggestion> selectLastChildRegion(int indexEnd, int indentValue) throws IOException {
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>(); 
         IndentInfo endLocation=IndentInfo.cloneIndentInfo(getHistory().getLine(indexEnd));
-        int indentChilds=getHistory().getLine(indexEnd-1).getIndentValue();        
-        int startSkip = backwardsSkip(indexEnd, indentChilds);
+        int indentChilds=indentValue; 
+        int indexStartBWSkip=indexEnd;
+        if(possibleErrorOnClosingLine(indexEnd-1))
+            indexStartBWSkip-=1;
+        int startSkip = backwardsSkip(indexStartBWSkip, indentChilds);
         if(startSkip>=0){
             indexPrevChild=startSkip;
             StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion(); 
             IndentInfo startLoc = IndentInfo.cloneIndentInfo(getHistory().getLine(startSkip));
             skipConstruct.setSkipLocations(startLoc, endLocation, startSkip, indexEnd);
+            //System.err.print(getHistory().getFragment(skipConstruct));
             skipSuggestions.add(skipConstruct); 
         }       
         return skipSuggestions;
@@ -121,8 +130,7 @@
         return selectPriorRegions(indexPrevChild);
     }
 
-    private ArrayList<StructureSkipSuggestion> selectPriorRegions(
-            int indexLastLine) throws IOException {                     
+    private ArrayList<StructureSkipSuggestion> selectPriorRegions(int indexLastLine) throws IOException {                     
         int indexEnd = indexLastLine;//findPreviousBegin(indexLastLine);
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
         int startSkip = findPreviousBegin(indexEnd);        
@@ -132,6 +140,7 @@
             IndentInfo startLoc=IndentInfo.cloneIndentInfo(getHistory().getLine(startSkip));
             skipConstruct.setSkipLocations(startLoc, endLocation, startSkip, indexEnd);
             skipSuggestions.add(skipConstruct); 
+            //System.err.print(getHistory().getFragment(skipConstruct));
             indexEnd=startSkip;
             startSkip=findPreviousBegin(indexEnd);
         }       
@@ -161,14 +170,17 @@
         int loopCount=0;
         while(loopCount<MAX_NR_OF_STRUCTURES && forwardPosition.getIndentValue()==startLine.getIndentValue()&& (forwardPosition.getLineNumber()-startLine.getLineNumber()) < MAX_NR_OF_LINES) {
             ArrayList<IndentInfo> endLocations=findCurrentEnd(forwardPosition);
-            forwardPosition =endLocations.get(endLocations.size()-1);            
+            forwardPosition =endLocations.get(endLocations.size()-1);    
+            if(getHistory().recoverTokenStream[forwardPosition.getTokensSeen()]==SGLR.EOF)
+                break;
             IndentInfo startSkip=IndentInfo.cloneIndentInfo(getHistory().getLine(startSkipIndex));
             for (IndentInfo endSkip : endLocations) {
                 StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();               
                 skipConstruct.setSkipLocations(startSkip, endSkip, startSkipIndex, -1);
-                skipSuggestions.add(skipConstruct);
+                skipSuggestions.add(skipConstruct);                
             }            
             loopCount++;
+            
         }        
         return skipSuggestions;
     }   
@@ -218,7 +230,8 @@
         while(loopCount<2*MAX_NR_OF_STRUCTURES && !(backwsEndReached && forwardsEndReached)&& numberOflines<MAX_NR_OF_LINES) {
             doNext=false;
             if(forWardsOn){
-                if(forwardPosition.getIndentValue()==startLine.getIndentValue()){
+                boolean eofReached=getHistory().recoverTokenStream[forwardPosition.getTokensSeen()]==SGLR.EOF;
+                if(forwardPosition.getIndentValue()==startLine.getIndentValue() && !eofReached){
                     endSkipLocations=findCurrentEnd(forwardPosition);
                     forwardPosition =endSkipLocations.get(endSkipLocations.size()-1);
                     forWardsOn=backwsEndReached;
@@ -248,6 +261,7 @@
                     StructureSkipSuggestion skipConstruct=new StructureSkipSuggestion();                    
                     skipConstruct.setSkipLocations(startSkip, endSkip, startSkipIndex, -1);
                     skipSuggestions.add(skipConstruct);
+                    //System.err.print(getHistory().getFragment(skipConstruct));
                 }                                
             loopCount++;
             numberOflines = forwardPosition.getLineNumber() - startSkip.getLineNumber();
@@ -338,8 +352,10 @@
                 break;
             }
             prevLine=false;
-        }        
-        return 0;//SOF
+        }  
+        if(indexLine != 0)
+            return 0;//SOF
+        return -1;
     }  
     
     private int findParentBegin(int startLineIndex) throws IOException{
@@ -406,13 +422,11 @@
         int startlineIndex=Math.max(prevRegion.getIndexHistoryStart(),prevRegion.getIndexHistoryEnd()-MAX_NR_OF_LINES);
         while (indentOfLevel > regionIndent) {
             //find last child with a big indent (smaller then previous level)
-            int bigIndent=-1;
-            int indexBigIndentLine=prevRegion.getIndexHistoryEnd();
+            int bigIndent=-1;            
             for (int i = prevRegion.getIndexHistoryEnd(); i >= startlineIndex; i--) {
                 int currentLineIndent = getHistory().getLine(i).getIndentValue();
                 if (bigIndent < currentLineIndent && currentLineIndent < indentOfLevel) {
-                    bigIndent = currentLineIndent;
-                    indexBigIndentLine = i;
+                    bigIndent = currentLineIndent;                    
                 }
             }
             //find all (maximal ...) fragments of sequential code lines with indent = bigIndent 
@@ -420,7 +434,7 @@
             if(bigIndent!=regionIndent){
                 boolean hasSetRegionEnd = false;
                 StructureSkipSuggestion indentLevelRegion = new StructureSkipSuggestion();
-                IndentInfo currentLine = getHistory().getLine(indexEndFragment);               
+                IndentInfo currentLine = IndentInfo.cloneIndentInfo(getHistory().getLine(indexEndFragment));               
                 indentLevelRegion.setEndSkip(currentLine, indexEndFragment);
                 int nrOfFragments=0;
                 for (int i = prevRegion.getIndexHistoryEnd(); i >= startlineIndex; i--) {
@@ -429,9 +443,9 @@
                         indexEndFragment=i;
                     if (hasSetRegionEnd) {
                         if(currentLine.getIndentValue() < bigIndent){
-                            indentLevelRegion.setStartSkip(getHistory().getLine(i + 1), i+1);
+                            indentLevelRegion.setStartSkip(IndentInfo.cloneIndentInfo(getHistory().getLine(i + 1)), i+1);
                             result.add(indentLevelRegion);
-                            System.err.print(getHistory().getFragment(indentLevelRegion.getStartSkip().getTokensSeen(), indentLevelRegion.getEndSkip().getTokensSeen()-1));
+                            //System.err.print(getHistory().getFragment(indentLevelRegion.getStartSkip().getTokensSeen(), indentLevelRegion.getEndSkip().getTokensSeen()-1));
                             hasSetRegionEnd = false;
                             nrOfFragments+=1;                            
                         }
@@ -439,7 +453,7 @@
                     else{                        
                         if (currentLine.getIndentValue() == bigIndent) {
                             indentLevelRegion = new StructureSkipSuggestion();
-                            indentLevelRegion.setEndSkip(getHistory().getLine(indexEndFragment), indexEndFragment);
+                            indentLevelRegion.setEndSkip(IndentInfo.cloneIndentInfo(getHistory().getLine(indexEndFragment)), indexEndFragment);
                             hasSetRegionEnd = true;
                         }
                     }
@@ -461,8 +475,11 @@
         }        
         //result.addAll(selectRegion(prevRegion.getIndexHistoryEnd()-1));
         //result.addAll(selectPreviousRegion(prevRegion.getIndexHistoryEnd()-1));
-        result.addAll(selectLastChildRegion(prevRegion.getIndexHistoryEnd()));        
-        result.addAll(selectPriorRegions(prevRegion.getIndexHistoryEnd()-1));
+        result.addAll(selectLastChildRegion(prevRegion.getIndexHistoryEnd(), prevRegion.getStartSkip().getIndentValue()));   
+        if(result.size()>0){
+            StructureSkipSuggestion skipPrev=result.get(0);
+            result.addAll(selectPriorRegions(skipPrev.getIndexHistoryStart()));
+        }
         result.add(prevRegion);
         return result;
     }
@@ -502,12 +519,10 @@
         return false;
     }
     
-    private boolean optionalErrorOnClosingLine(int indexLine) throws IOException {
+    private boolean possibleErrorOnClosingLine(int indexLine) throws IOException {
         IndentInfo line = getHistory().getLine(indexLine);        
-        IndentInfo prevLine=getHistory().getLine(indexLine-1);
-        getHistory().setTokenIndex(line.getTokensSeen());
-        IndentInfo nextLine=skipLine(line);
-        int startTokLine=line.structureStartPosition();        
+        IndentInfo prevLine=getHistory().getLine(indexLine-1);        
+        IndentInfo nextLine=viewNextLine(line);             
         if(line.getIndentValue() < prevLine.getIndentValue() && line.getIndentValue()>=nextLine.getIndentValue())
             return true;
         return false;
@@ -577,7 +592,7 @@
                 return result;
             }            
         }
-        return new IndentInfo(Integer.MAX_VALUE, getHistory().getTokenIndex()+1, 0);// EOF
+        return new IndentInfo(newLineNumber+1, getHistory().getTokenIndex()-1, 0);// EOF
     }
 
     private indentShift calculateShift(int indentStartLine, int indentSkipPosition) {



From m.dejonge at tudelft.nl  Mon Jul 27 22:31:59 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 27 Jul 2009 20:31:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19775 - MaartjeDeJonge -
	sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files
Message-ID: <200907272029.n6RKTlPK001781@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-27 20:31:59 +0000 (Mon, 27 Jul 2009)
New Revision: 19775

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19775&view=rev

Modified:
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/testBridgeFG.java

Log:


Changes:

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/testBridgeFG.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/testBridgeFG.java	2009-07-27 16:57:20 UTC (rev 19774)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/testBridgeFG.java	2009-07-27 20:31:59 UTC (rev 19775)
@@ -13,11 +13,11 @@
 	    if(true)
 	    { 
 	       Line2();
-	       Line3();
+	       Line3(); //}
 	    Line4();
-	    Line5();
+	    Line5(); //}
     Line6();
-    Line7()
+    Line7() //;
   }
     
   private int method1()



From m.dejonge at tudelft.nl  Mon Jul 27 22:34:36 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 27 Jul 2009 20:34:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19776 - MaartjeDeJonge
	- in sglr-recovery/trunk/Evaluation_Recovery: Correct_Files
	Correct_Files/development_files
	Correct_Files/messy_indent_files Error_Files
	Error_Files/development_files Error_Files/messy_indent_files src
Message-ID: <200907272032.n6RKWOsX001807@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-27 20:34:36 +0000 (Mon, 27 Jul 2009)
New Revision: 19776

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19776&view=rev

Added:
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentA.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentB.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentC.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentD.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentE.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentF.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentG.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentA.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentB.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentC.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentD.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentE.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentF.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentG.java
Removed:
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentA.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentB.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentC.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentD.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentE.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentF.java
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentG.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentA.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentB.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentC.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentD.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentE.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentF.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentG.java
Modified:
   sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/sloppyCode.java
   sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/sloppyCode.java
   sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java

Log:
separate tricky indent files

Changes:

Modified: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/sloppyCode.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/sloppyCode.java	2009-07-27 20:31:59 UTC (rev 19775)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/sloppyCode.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -39,8 +39,6 @@
       bla3();
   }
 
-  int j;
-
   private int ErrorMissingClosing(){
      if(bla1()){
        bla();

Deleted: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentA.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentA.java	2009-07-27 20:31:59 UTC (rev 19775)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentA.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -1,21 +0,0 @@
-/* 
- * Correct nonsense program to test indentation
- */
-public class A {
-	public A() {
-		int a = 4;
-		Object obj = new Object();
-	}
-
-	void m(int a) {
-		if (true) {
-			a = 355;
-		} else {
-			a  = 44;
-		}	
-	}
-
-	int n(int a, int p) {
-		return a + p;
-	}
-}

Deleted: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentB.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentB.java	2009-07-27 20:31:59 UTC (rev 19775)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentB.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -1,21 +0,0 @@
-/* 
- * Correct nonsense program to test indentation
- */
-public class A {
-	public A() {
-		int a = 4;
-		Object obj = new Object();
-	}
-
-	void m(int a) {
-		if (true) {
-			a = 355;
-		} else {
-			a  = 44;
-		}	
-	}
-
-	int n(int a, int p) {
-		return a + p;
-	}
-}

Deleted: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentC.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentC.java	2009-07-27 20:31:59 UTC (rev 19775)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentC.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -1,21 +0,0 @@
-/* 
- * Correct nonsense program to test indentation
- */
-public class A {
-	public A() {
-		int a = 4;
-		Object obj = new Object();
-	}
-
-	void m(int a) {
-		if (true) {
-			a = 355;
-		} else {
-			a  = 44;
-		}	
-	}
-
-	int n(int a, int p) {
-		return a + p;
-	}
-}

Deleted: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentD.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentD.java	2009-07-27 20:31:59 UTC (rev 19775)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentD.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -1,21 +0,0 @@
-/* 
- * Correct nonsense program to test indentation
- */
-public class A {
-	public A() {
-		int a = 4;
-		Object obj = new Object();
-	}
-
-	void m(int a) {
-		if (true) {
-			a = 355;
-		} else {
-			a  = 44;
-		}	
-	}
-
-	int n(int a, int p) {
-		return a + p;
-	}
-}

Deleted: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentE.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentE.java	2009-07-27 20:31:59 UTC (rev 19775)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentE.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -1,21 +0,0 @@
-/* 
- * Correct nonsense program to test indentation
- */
-public class A {
-	public A() {
-		int a = 4;
-		Object obj = new Object();
-	}
-
-	void m(int a) {
-		if (true) {
-			a = 355;
-		} else {
-			a  = 44;
-		}	
-	}
-
-	int n(int a, int p) {
-		return a + p;
-	}
-}

Deleted: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentF.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentF.java	2009-07-27 20:31:59 UTC (rev 19775)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentF.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -1,21 +0,0 @@
-/* 
- * Correct nonsense program to test indentation
- */
-public class A {
-	public A() {
-		int a = 4;
-		Object obj = new Object();
-	}
-
-	void m(int a) {
-		if (true) {
-			a = 355;
-		} else {
-			a  = 44;
-		}	
-	}
-
-	int n(int a, int p) {
-		return a + p;
-	}
-}

Deleted: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentG.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentG.java	2009-07-27 20:31:59 UTC (rev 19775)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/development_files/trickyIndentG.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -1,21 +0,0 @@
-/* 
- * Correct nonsense program to test indentation
- */
-public class A {
-	public A() {
-		int a = 4;
-		Object obj = new Object();
-	}
-
-	void m(int a) {
-		if (true) {
-			a = 355;
-		} else {
-			a  = 44;
-		}	
-	}
-
-	int n(int a, int p) {
-		return a + p;
-	}
-}

Added: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentA.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentA.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentA.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -0,0 +1,21 @@
+/* 
+ * Correct nonsense program to test indentation
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentB.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentB.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentB.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -0,0 +1,21 @@
+/* 
+ * Correct nonsense program to test indentation
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentC.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentC.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentC.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -0,0 +1,21 @@
+/* 
+ * Correct nonsense program to test indentation
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentD.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentD.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentD.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -0,0 +1,21 @@
+/* 
+ * Correct nonsense program to test indentation
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentE.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentE.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentE.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -0,0 +1,21 @@
+/* 
+ * Correct nonsense program to test indentation
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentF.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentF.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentF.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -0,0 +1,21 @@
+/* 
+ * Correct nonsense program to test indentation
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentG.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentG.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Correct_Files/messy_indent_files/trickyIndentG.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -0,0 +1,21 @@
+/* 
+ * Correct nonsense program to test indentation
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Modified: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/sloppyCode.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/sloppyCode.java	2009-07-27 20:31:59 UTC (rev 19775)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/sloppyCode.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -42,10 +42,8 @@
     int i;
     int j;
     bla3();
-  }
+  }  
 
-  int j;
-
   private int ErrorMissingClosing()
   { 
     if(bla1())

Deleted: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentA.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentA.java	2009-07-27 20:31:59 UTC (rev 19775)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentA.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -1,21 +0,0 @@
-/* 
- * Indent test: Adding an error along with some indentation shift of both starting and ending brace
- */
-public class A {
-	public A() {
-		int a = 4;
-		Object obj = new Object();
-	}
-
-void m(int a) {
-		if (true) {
-			a = 355;
-		} else {
-			a  = 44;
-		//}	
-}
-
-	int n(int a, int p) {
-		return a + p;
-	}
-}

Deleted: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentB.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentB.java	2009-07-27 20:31:59 UTC (rev 19775)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentB.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -1,22 +0,0 @@
-/* 
- * Testing indentation: Adding error in the middle and shifting the 
- * indentation level of the enclosing braces of the class
- */
-	public class A {
-	public A() {
-		int a = 4;
-		Object obj = new Object();
-	}
-
-	void m(int a) {
-		if (true) {
-			a = 355;
-		} else //{
-			a  = 44;
-		}	
-	}
-
-	int n(int a, int p) {
-		return a + p;
-	}
-	}

Deleted: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentC.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentC.java	2009-07-27 20:31:59 UTC (rev 19775)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentC.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -1,21 +0,0 @@
-/* 
- * Testing indentation: inserting an error and shifting one of the braces
- */
-public class A {
-	public A() {
-		int a = 4;
-		Object obj = new Object();
-	}
-
-	void m(int a) {
-		if (true) //{
-			a = 355;
-		} else {
-			a  = 44;
-		}	
-		}
-
-	int n(int a, int p) {
-		return a + p;
-	}
-}

Deleted: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentD.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentD.java	2009-07-27 20:31:59 UTC (rev 19775)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentD.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -1,21 +0,0 @@
-/* 
- * Testing indentation: inserting an error and shifting one of two otherwise matching braces
- */
-public class A {
-	public A() {
-		int a = 4//;
-		Object obj = new Object();
-}
-
-	void m(int a) {
-		if (true) {
-			a = 355;
-		} else {
-			a  = 44;
-		}	
-	}
-
-	int n(int a, int p) {
-		return a + p;
-	}
-}

Deleted: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentE.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentE.java	2009-07-27 20:31:59 UTC (rev 19775)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentE.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -1,21 +0,0 @@
-/* 
- * Testing indentaion: inserting error, missing only tabs and only ws for one pair of braces for tab size 5
- */
-public class A {
-	public A() {
-		int a = 4;
-		Object obj = new Object();
-	}
-
-	void m(int a) {
-		if (true) {
-			a = 355;
-		} else {
-			a  = 44//;
-		}	
-     }
-
-	int n(int a, int p) {
-		return a + p;
-	}
-}

Deleted: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentF.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentF.java	2009-07-27 20:31:59 UTC (rev 19775)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentF.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -1,21 +0,0 @@
-/* 
- * Indentation test: inserting error, and mixing tabs and ws for tab size 5
- */
-public class A {
-	public A() {
-		int a = 4;
-		Object obj = new Object();
-	}
-
-	void m(int a) {
-	     if (true) { // tabs and ws
-			a = 355//;
-		} else {
-			a  = 44;
-		}	
-	}
-
-	int n(int a, int p) {
-		return a + p;
-	}
-}

Deleted: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentG.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentG.java	2009-07-27 20:31:59 UTC (rev 19775)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/development_files/trickyIndentG.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -1,21 +0,0 @@
-/* 
- * Indentation test: inserting error, and mixing tabs and ws for tab size 3
- */
-public class A {
-	public A() {
-		int a = 4;
-		Object obj = new Object();
-	}
-
-	void m(int a) {
-   	if (true) {
-			a = 355//;
-		} else {
-			a  = 44;
-		}	
-	}
-
-	int n(int a, int p) {
-		return a + p;
-	}
-}

Added: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentA.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentA.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentA.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -0,0 +1,21 @@
+/* 
+ * Indent test: Adding an error along with some indentation shift of both starting and ending brace
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		//}	
+}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentB.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentB.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentB.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -0,0 +1,22 @@
+/* 
+ * Testing indentation: Adding error in the middle and shifting the 
+ * indentation level of the enclosing braces of the class
+ */
+	public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else //{
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+	}

Added: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentC.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentC.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentC.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -0,0 +1,21 @@
+/* 
+ * Testing indentation: inserting an error and shifting one of the braces
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) //{
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+		}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentD.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentD.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentD.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -0,0 +1,21 @@
+/* 
+ * Testing indentation: inserting an error and shifting one of two otherwise matching braces
+ */
+public class A {
+	public A() {
+		int a = 4//;
+		Object obj = new Object();
+}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentE.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentE.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentE.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -0,0 +1,21 @@
+/* 
+ * Testing indentaion: inserting error, missing only tabs and only ws for one pair of braces for tab size 5
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+		if (true) {
+			a = 355;
+		} else {
+			a  = 44//;
+		}	
+     }
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentF.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentF.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentF.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -0,0 +1,21 @@
+/* 
+ * Indentation test: inserting error, and mixing tabs and ws for tab size 5
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+	     if (true) { // tabs and ws
+			a = 355//;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Added: sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentG.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentG.java	                        (rev 0)
+++ sglr-recovery/trunk/Evaluation_Recovery/Error_Files/messy_indent_files/trickyIndentG.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -0,0 +1,21 @@
+/* 
+ * Indentation test: inserting error, and mixing tabs and ws for tab size 3
+ */
+public class A {
+	public A() {
+		int a = 4;
+		Object obj = new Object();
+	}
+
+	void m(int a) {
+   	if (true) {
+			a = 355//;
+		} else {
+			a  = 44;
+		}	
+	}
+
+	int n(int a, int p) {
+		return a + p;
+	}
+}

Modified: sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java	2009-07-27 20:31:59 UTC (rev 19775)
+++ sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java	2009-07-27 20:34:36 UTC (rev 19776)
@@ -21,16 +21,21 @@
 
 public class ProcessFiles extends TestCase {
 	
-	private final static String LOC_CORRECT_INPUTFILES="Correct_Files/input_files";
-	private final static String LOC_CORRECT_JDT_TREES="Correct_Files/jdt_tree";
-	private final static String LOC_ERROR_INPUTFILES="Error_Files/input_files";
+	
+	private final static String LOC_CORRECT_JDT_TREES="Correct_Files/jdt_tree";	
 	private final static String LOC_ERROR_JDT_TREES="Error_Files/jdt_tree";
 	private final static String LOC_CORRECT_SGLR_PARSETREES="Correct_Files/sglr_parsetree";
 	private final static String LOC_ERROR_SGLR_PARSETREES="Error_Files/sglr_parsetree";
+	//BP-files
+	private final static String LOC_CORRECT_INPUTFILES="Correct_Files/input_files";
+	private final static String LOC_ERROR_INPUTFILES="Error_Files/input_files";
+	//Mixed-files
 	private final static String LOC_CORRECT_DEV_FILES="Correct_Files/development_files";
 	private final static String LOC_ERROR_DEV_FILES="Error_Files/development_files";
+	//Tricky-indent files
+	private final static String LOC_CORRECT_TRICKY_INDENT_FILES="Correct_Files/messy_indent_files";
+	private final static String LOC_ERROR_TRICKY_INDENT_FILES="Error_Files/messy_indent_files";
 	
-	
 	//private final static String PARSE_TABLE ="Language_Files/InsertOnly.tbl";
 	//private final static String PARSE_TABLE ="Language_Files/SpecialTokenRecovery.tbl";
 	private final static String PARSE_TABLE ="Language_Files/Recover.tbl";
@@ -41,8 +46,8 @@
 	private StandAloneSGLRI tokenParser;
 	private IRecoveryParser recoveryParser;
 	private InputStream fis;
-	//private boolean useBridgeParser=true;	
-	private boolean useBridgeParser=false;
+	private boolean useBridgeParser=true;	
+	//private boolean useBridgeParser=false;		
 
 	private void createJDT_Tree(String fileName, String inputDir, String outputDir) throws IOException, InterpreterException {	
 		String strippedName=fileName.replace(".java", "");
@@ -76,7 +81,10 @@
 	public void testProcessDevelopmentFiles() throws Exception{		
 		String[] children = collectInputFiles(LOC_ERROR_DEV_FILES);	
 		for (String fileName : children) {        	
-        	if (!fileName.contains("svn")) {
+        	if (!fileName.contains("svn") && !fileName.contains("tricky")) {
+        		System.err.println("");
+        		System.err.println("--------" + fileName.toUpperCase() + "---------");
+        		System.err.println("");
         		Tools.debug("\n#####"+fileName + "#####");
 				createJDT_Tree(fileName,LOC_ERROR_DEV_FILES, LOC_ERROR_JDT_TREES);
 				createSGLRParsetree(fileName, LOC_ERROR_DEV_FILES, LOC_ERROR_SGLR_PARSETREES);
@@ -85,25 +93,49 @@
 		}		
 		String[] childrenC = collectInputFiles(LOC_CORRECT_DEV_FILES);	
 		for (String fileName : childrenC) {        	
-        	if (!fileName.contains("svn")) {
+        	if (!fileName.contains("svn") && !fileName.contains("tricky")) {
 				createJDT_Tree(fileName,LOC_CORRECT_DEV_FILES, LOC_CORRECT_JDT_TREES);
 				createSGLRParsetree(fileName, LOC_CORRECT_DEV_FILES, LOC_CORRECT_SGLR_PARSETREES);
 				setUp();
 			}
-		}
+		}		
 	}
 	
+	public void testProcessTrickyIndentFiles() throws Exception{		
+		String[] children = collectInputFiles(LOC_ERROR_TRICKY_INDENT_FILES);	
+		for (String fileName : children) {        	
+        	if (!fileName.contains("svn")) {
+        		System.err.println("");
+        		System.err.println("--------" + fileName.toUpperCase() + "---------");
+        		System.err.println("");
+        		Tools.debug("\n#####"+fileName + "#####");
+				createJDT_Tree(fileName,LOC_ERROR_TRICKY_INDENT_FILES, LOC_ERROR_JDT_TREES);
+				createSGLRParsetree(fileName, LOC_ERROR_TRICKY_INDENT_FILES, LOC_ERROR_SGLR_PARSETREES);
+				setUp();
+			}
+		}		
+		String[] childrenC = collectInputFiles(LOC_CORRECT_TRICKY_INDENT_FILES);	
+		for (String fileName : childrenC) {        	
+        	if (!fileName.contains("svn") ) {
+				createJDT_Tree(fileName,LOC_CORRECT_TRICKY_INDENT_FILES, LOC_CORRECT_JDT_TREES);
+				createSGLRParsetree(fileName, LOC_CORRECT_TRICKY_INDENT_FILES, LOC_CORRECT_SGLR_PARSETREES);
+				setUp();
+			}
+		}		
+	}
+	
 	public void xxtestFile() throws Exception{
 		//String fileName="testB5.java";
 		//String fileName="doubleClosed_If.java";
 		//String fileName="testB2.java";
 		//createJDT_Tree(fileName, LOC_ERROR_INPUTFILES, LOC_ERROR_JDT_TREES);
-		String fileName="morePartsStructureError.java";
+		//String fileName="testBridgeFG.java";
+		String fileName="multipleErrors2.java";
 		createSGLRParsetree(fileName, LOC_ERROR_DEV_FILES, LOC_ERROR_SGLR_PARSETREES);
 		setUp();
 		createJDT_Tree(fileName,LOC_ERROR_DEV_FILES, LOC_ERROR_JDT_TREES);
 		//createSGLRParsetree(fileName, LOC_ERROR_INPUTFILES, LOC_ERROR_SGLR_PARSETREES);
-		setUp();
+		//setUp();
 		createJDT_Tree(fileName,LOC_CORRECT_DEV_FILES, LOC_CORRECT_JDT_TREES);
 		createSGLRParsetree(fileName, LOC_CORRECT_DEV_FILES, LOC_CORRECT_SGLR_PARSETREES);	
 	}



From m.dejonge at tudelft.nl  Mon Jul 27 22:36:40 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 27 Jul 2009 20:36:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19777 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907272034.n6RKYS4f001821@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-27 20:36:40 +0000 (Mon, 27 Jul 2009)
New Revision: 19777

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19777&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParserHistory.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java

Log:


Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParserHistory.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParserHistory.java	2009-07-27 20:34:36 UTC (rev 19776)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParserHistory.java	2009-07-27 20:36:40 UTC (rev 19777)
@@ -7,7 +7,7 @@
     
     private final static int MAX_SIZE_NEW_LINE_POINTS = 150;
     private final static int MIN_SIZE_NEW_LINE_POINTS = 50;
-    
+    private IndentationHandler indentHandler;
     private int previousBigReduceIndex;
     private int bigReduceIndex;    
     private int indexConstruct; 
@@ -53,6 +53,7 @@
         previousBigReduceIndex=0;
         bigReduceIndex=0;
         reduceIndexesSet=false;
+        indentHandler = new IndentationHandler();
     }
     
     /*
@@ -61,8 +62,11 @@
     public void readRecoverToken(SGLR myParser) throws IOException{        
         if (hasFinishedRecoverTokens()) {
             myParser.readNextToken();                
-            myParser.getIndentHandler().updateIndentation(myParser.currentToken);
+            indentHandler.updateIndentation(myParser.currentToken);
             keepToken((char)myParser.currentToken);
+            
+            if(indentHandler.lineMarginEnded())
+                keepNewLinePoint(myParser, true);
         }
         myParser.currentToken = recoverTokenStream[tokenIndex];
         tokenIndex++;
@@ -81,10 +85,11 @@
     }
 
     public void keepTokenAndState(SGLR myParser) {
+        indentHandler.updateIndentation(myParser.currentToken);
         keepToken((char)myParser.currentToken);
         tokenIndex++;
-        if(myParser.getIndentHandler().lineMarginEnded())
-            keepNewLinePoint(myParser);
+        if(indentHandler.lineMarginEnded())
+            keepNewLinePoint(myParser, false);
     }
 
     private void keepToken(char currentToken) {
@@ -100,13 +105,15 @@
         return getConstructPoint().getLineNumber() > newLinePoints.get(indexConstruct-1).getLineNumber()+1;
     }
     
-    private void keepNewLinePoint(SGLR myParser) {
-        int indent = myParser.getIndentHandler().getIndentValue();
+    private void keepNewLinePoint(SGLR myParser, boolean inRecoverMode) {
+        int indent = indentHandler.getIndentValue();
         IndentInfo newLinePoint= new IndentInfo(myParser.lineNumber, myParser.tokensSeen-1, indent);
-        newLinePoint.fillStackNodes(myParser.activeStacks);
-        newLinePoints.add(newLinePoint);   
-        if(newLinePoints.size()> MAX_SIZE_NEW_LINE_POINTS)
-            removeOldPoints();
+        newLinePoints.add(newLinePoint);
+        if(!inRecoverMode){
+            newLinePoint.fillStackNodes(myParser.activeStacks);           
+            if(newLinePoints.size()> MAX_SIZE_NEW_LINE_POINTS)
+                removeOldPoints();
+        }
     }
     
     private void removeOldPoints() {
@@ -329,6 +336,7 @@
         indexConstruct+=1;
         return result; 
     }
+
     
     /*
     ///////////////////////////////// LOG /////////////////////////////////////////////////////////////////

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java	2009-07-27 20:34:36 UTC (rev 19776)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java	2009-07-27 20:36:40 UTC (rev 19777)
@@ -126,10 +126,10 @@
         while (indexSkips < regions.size() && !successCriterion()) {
             aSkip = regions.get(indexSkips);
             //Debug info
-            //System.err.print("~~~~~~~~~~~~~");
-            //System.err.println("");
-            //System.err.print(getHistory().getFragment(aSkip.getStartSkip().getTokensSeen(), aSkip.getEndSkip().getTokensSeen()-1));
-            //System.err.println("");
+            System.err.print("~~~~~~~~~~~~~");
+            System.err.println("");
+            System.err.print(getHistory().getFragment(aSkip.getStartSkip().getTokensSeen(), aSkip.getEndSkip().getTokensSeen()-1));
+            System.err.println("");
             
             IndentInfo endPos=aSkip.getEndSkip();
             getHistory().setTokenIndex(endPos.getTokensSeen());
@@ -147,8 +147,9 @@
             indexSkips++;            
         }
         hasFoundErroneousRegion=successCriterion();
-        if(hasFoundErroneousRegion)
-            erroneousRegion=aSkip;
+        if(hasFoundErroneousRegion){
+            erroneousRegion=aSkip;            
+        }
         return hasFoundErroneousRegion;
     }
 

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-27 20:34:36 UTC (rev 19776)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-27 20:36:40 UTC (rev 19777)
@@ -17,6 +17,10 @@
     public void setFailureIndex(int failureIndex) {
         this.failureIndex = failureIndex;
     }
+    
+    public IndentInfo getFailureLine() {
+        return getHistory().getLine(failureIndex);
+    }
 
     enum indentShift{
         INDENT,
@@ -53,16 +57,16 @@
     }
     //TODO: refactor - fill endSkip in class 
     public StructureSkipSuggestion getErroneousPrefix() throws IOException{
-        getHistory().setTokenIndex(getHistory().getLastLine().getTokensSeen());
-        IndentInfo nextLine = viewNextLine(getHistory().getLastLine());
+        getHistory().setTokenIndex(getFailureLine().getTokensSeen());
+        IndentInfo nextLine = viewNextLine(getFailureLine());
         StructureSkipSuggestion prefix=new StructureSkipSuggestion();
         IndentInfo startLoc=IndentInfo.cloneIndentInfo(getHistory().getLine(0));        
-        prefix.setSkipLocations(startLoc, nextLine, 0, getHistory().getIndexLastLine());
+        prefix.setSkipLocations(startLoc, nextLine, 0, failureIndex);
         return prefix;
     }
     
     public ArrayList<StructureSkipSuggestion> getCurrentSkipSuggestions() throws IOException{
-        int indexLastLine=getHistory().getIndexLastLine();
+        int indexLastLine=failureIndex;
         if (isErrorOnClosingLine(indexLastLine))
             return new ArrayList<StructureSkipSuggestion>();
         return selectRegion(indexLastLine);
@@ -82,7 +86,7 @@
     }    
     
     public ArrayList<StructureSkipSuggestion> getPreviousSkipSuggestions() throws IOException{
-        int indexEnd=getHistory().getIndexLastLine();
+        int indexEnd=failureIndex;
         return selectPreviousRegion(indexEnd);
     }
 
@@ -126,7 +130,7 @@
     } 
     
     public ArrayList<StructureSkipSuggestion> getPriorSkipSuggestions() throws IOException{
-        //int indexLastLine=getHistory().getIndexLastLine();
+        //int indexLastLine=failureIndex;
         return selectPriorRegions(indexPrevChild);
     }
 
@@ -148,7 +152,7 @@
     } 
 
     public ArrayList<StructureSkipSuggestion> getParentSkipSuggestions() throws IOException{
-        int errorLineIndex=getHistory().getIndexLastLine();
+        int errorLineIndex=failureIndex;
         IndentInfo startLine = getHistory().getLine(errorLineIndex);
         IndentInfo endSkip=findParentEnd(startLine);
         int startSkipIndex=findParentBegin(errorLineIndex);
@@ -161,11 +165,11 @@
     }    
     
     public ArrayList<StructureSkipSuggestion> getSibblingForwardSuggestions() throws IOException{        
-        int startSkipIndex = findPreviousBegin(getHistory().getIndexLastLine());
+        int startSkipIndex = findPreviousBegin(failureIndex);
         if(startSkipIndex<0)
-            startSkipIndex=getHistory().getIndexLastLine();        
+            startSkipIndex=failureIndex;        
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
-        IndentInfo startLine = getHistory().getLastLine();
+        IndentInfo startLine = getFailureLine();
         IndentInfo forwardPosition = startLine;
         int loopCount=0;
         while(loopCount<MAX_NR_OF_STRUCTURES && forwardPosition.getIndentValue()==startLine.getIndentValue()&& (forwardPosition.getLineNumber()-startLine.getLineNumber()) < MAX_NR_OF_LINES) {
@@ -186,8 +190,8 @@
     }   
     
     public ArrayList<StructureSkipSuggestion> getSibblingBackwardSuggestions() throws IOException {
-        int indexErrorLine=getHistory().getIndexLastLine();
-        ArrayList<IndentInfo> endSkipLocations=findCurrentEnd(getHistory().getLastLine());
+        int indexErrorLine=failureIndex;
+        ArrayList<IndentInfo> endSkipLocations=findCurrentEnd(getFailureLine());
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
         int backwardPositionIndex = indexErrorLine;
         int loopCount=0;       
@@ -209,9 +213,9 @@
 
     public ArrayList<StructureSkipSuggestion> getSibblingSurroundingSuggestions() throws IOException {        
         ArrayList<StructureSkipSuggestion> skipSuggestions=new ArrayList<StructureSkipSuggestion>();
-        int indexErrorLine=getHistory().getIndexLastLine();
+        int indexErrorLine=failureIndex;
         int backwardPosition = indexErrorLine;
-        IndentInfo startLine = getHistory().getLastLine();
+        IndentInfo startLine = getFailureLine();
         IndentInfo forwardPosition = startLine;        
         ArrayList<IndentInfo> endSkipLocations = findCurrentEnd(forwardPosition);
         int startSkipIndex = findPreviousBegin(backwardPosition);
@@ -320,7 +324,7 @@
     } 
     
     private int findPreviousBegin(int indexLine) throws IOException{ 
-        if(indexLine<0 || indexLine>getHistory().getIndexLastLine())
+        if(indexLine<0 || indexLine>failureIndex)
             return -1;
         IndentInfo startLine=IndentInfo.cloneIndentInfo(getHistory().getLine(indexLine));
         int indentStartLine=startLine.getIndentValue();        
@@ -492,11 +496,13 @@
         if(indexLine==0)
             return false;
         IndentInfo prevLine=getHistory().getLine(indexLine - 1);
-        if(prevLine.getIndentValue()<currLine.getIndentValue())
+        if(prevLine.getIndentValue()<=currLine.getIndentValue())
             return false;
+        if(currLine.getStackNodes().size()==0)
+            return true;
         IndentInfo nextLine=getHistory().getLine(indexLine + 1);        
         if (nextLine==null)
-            return true;
+            return true;        
         if(nextLine.structureStartPosition()>=currLine.structureStartPosition())
             return false;
         return true;



From m.dejonge at tudelft.nl  Tue Jul 28 09:51:19 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 28 Jul 2009 07:51:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19778 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907280749.n6S7n6Rr010865@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-28 07:51:18 +0000 (Tue, 28 Jul 2009)
New Revision: 19778

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19778&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java

Log:


Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java	2009-07-27 20:36:40 UTC (rev 19777)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java	2009-07-28 07:51:18 UTC (rev 19778)
@@ -81,6 +81,9 @@
             if(newLinePoints.get(newLinePoints.size()-1).getTokensSeen()>=endRecovery){
                 newLinePoints.remove(newLinePoints.size()-1);
             }
+            else if(newLinePoints.get(newLinePoints.size()-1).getStackNodes().size()==0){
+                newLinePoints.remove(newLinePoints.size()-1);
+            }
             else
                 break;
         }



From m.dejonge at tudelft.nl  Tue Jul 28 10:34:43 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 28 Jul 2009 08:34:43 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19779 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907280832.n6S8WUJC011478@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-28 08:34:43 +0000 (Tue, 28 Jul 2009)
New Revision: 19779

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19779&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java

Log:
revised region skip algorithm

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java	2009-07-28 07:51:18 UTC (rev 19778)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RecoveryConnector.java	2009-07-28 08:34:43 UTC (rev 19779)
@@ -1,7 +1,6 @@
 package org.spoofax.jsglr;
 
 import java.io.IOException;
-import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.Map;
 
@@ -9,7 +8,7 @@
 public class RecoveryConnector {
     private SGLR mySGLR;
     private IRecoveryParser recoveryParser;
-    private StructureRecovery skipRecovery;
+    private RegionRecovery skipRecovery;
     private boolean active;
     private boolean useBridgeParser;
     private IRecoveryResult bpResult;
@@ -22,7 +21,7 @@
     public RecoveryConnector(SGLR parser, IRecoveryParser recoveryParser){
         active=false;
         mySGLR=parser;        
-        skipRecovery = new StructureRecovery(mySGLR);
+        skipRecovery = new RegionRecovery(mySGLR); 
         if(recoveryParser!=null){
             this.recoveryParser = recoveryParser;
             useBridgeParser=true;
@@ -69,6 +68,14 @@
     }
     
     public void recover() throws IOException{
+        long startSkip=System.currentTimeMillis();
+        //System.err.print("***************** Recover");
+        doRecoverSteps();
+        long durationSkip=System.currentTimeMillis()-startSkip;
+        //System.err.print(" Recovertime: "+durationSkip);
+    }
+
+    private void doRecoverSteps() throws IOException {
         active=true;
         boolean skipSucceeded = skipRecovery.selectErroneousFragment();
         mySGLR.acceptingStack=null;
@@ -76,7 +83,9 @@
         String errorFragment = skipRecovery.getErrorFragment();
         long durationSkip=System.currentTimeMillis()-startSkip;
         Tools.debug("Skip time: "+ durationSkip);
+        //System.err.print("Skip time: "+ durationSkip+ "  ");
         Tools.debug(errorFragment);
+        //System.err.print(errorFragment);
         mySGLR.activeStacks.clear();
         //BRIDGE REPAIR
         if(useBridgeParser){
@@ -84,6 +93,7 @@
             tryBridgeRepair(errorFragment);
             if(recoverySucceeded()){
                 Tools.debug("Bridge Repair Succeeded");
+                //System.err.print("************** BP-Succeeded");
                 return;
             }
             Tools.debug("Bridge Repair Failed");
@@ -93,28 +103,38 @@
         tryFineGrainedRepair();       
         long durationFG=System.currentTimeMillis()-startFineGrained;
         Tools.debug("Fine-Grained time: "+ durationFG);
+        //System.err.print("Fine-Grained time: "+ durationFG);
         //Tools.debug("Disambiguations: " +  RecoverDisambiguator.testCount);
         if(recoverySucceeded()){
             Tools.debug("Fine-Grained Repair Succeeded");
+            //System.err.print("**************** FG-succeeded");
             return;
         }
         Tools.debug("FineGrained Repair Failed");
         //WHITESPACE REPAIR
         if (skipSucceeded) {            
             whiteSpaceParse(errorFragment); 
-            if(recoverySucceeded())
+            if(recoverySucceeded()){
                 Tools.debug("WhiteSpace Repair Succeeded");
-            else
+                //System.err.print("************* WS-succeeded");
+            }
+            else{
                 Tools.debug("WhiteSpace Repair unexpectly fails");
+                //System.err.print("*************** WS-Fails unexpected");
+            }
         }
         //FORCE PREFIX ACCEPT
         else {            
             EofRecovery eofR = new EofRecovery(mySGLR);
             eofR.enforceAccept(getHistory().getBigReducePoint().getStackNodes());
-            if(recoverySucceeded())
+            if(recoverySucceeded()){
                 Tools.debug("Enforcing Accepting Stack - Succeeded");
-            else
+                //System.err.print("******************* AS-succeeded");
+            }
+            else{
                 Tools.debug("Enforcing Accepting Stack - Failed");
+                Tools.debug("************** AS-Failed");
+            }
         }
         active = false;
     }

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java	2009-07-28 07:51:18 UTC (rev 19778)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java	2009-07-28 08:34:43 UTC (rev 19779)
@@ -3,7 +3,7 @@
 import java.io.IOException;
 import java.util.ArrayList;
 
-public class RegionRecovery implements IRegionRecovery {
+public class RegionRecovery {
 
     private SGLR myParser;
     StructureSkipper regionSelector;
@@ -58,7 +58,7 @@
         errorDetectionLocation=getHistory().getIndexLastToken();
         hasFoundErroneousRegion=false;         
         ArrayList<StructureSkipSuggestion> prevRegions=regionSelector.getPreviousSkipSuggestions();
-        System.err.println("PREVIOUS REGION");        
+        //System.err.println("PREVIOUS REGION");        
         if(trySetErroneousRegion(prevRegions)){
             ArrayList<StructureSkipSuggestion> decomposedRegions=regionSelector.getZoomOnPreviousSuggestions(erroneousRegion);
             boolean findSmallerPart= trySetErroneousRegion(decomposedRegions);
@@ -69,11 +69,11 @@
             return true;
         }
         ArrayList<StructureSkipSuggestion> currentRegions=regionSelector.getCurrentSkipSuggestions();
-        System.err.println("CURRENT REGION");
+        //System.err.println("CURRENT REGION");
         if(trySetErroneousRegion(currentRegions)){            
             return true;
         }
-        System.err.println("PRIOR REGIONS");
+        //System.err.println("PRIOR REGIONS");
         ArrayList<StructureSkipSuggestion> priorRegions=regionSelector.getPriorSkipSuggestions();
         if(trySetErroneousRegion(priorRegions)){
             ArrayList<StructureSkipSuggestion> decomposedRegions=regionSelector.getZoomOnPreviousSuggestions(erroneousRegion);
@@ -84,30 +84,30 @@
             }
             return true;
         }
-        System.err.println("FW-SIB REGIONS");
+        //System.err.println("FW-SIB REGIONS");
         ArrayList<StructureSkipSuggestion> siblingForWardRegions=regionSelector.getSibblingForwardSuggestions();
         if(trySetErroneousRegion(siblingForWardRegions)){            
             return true;
         }
-        System.err.println("BW-SIB REGIONS");
+        //System.err.println("BW-SIB REGIONS");
         ArrayList<StructureSkipSuggestion> siblingBackWardRegions=regionSelector.getSibblingBackwardSuggestions();
         if(trySetErroneousRegion(siblingBackWardRegions)){            
             return true;
         }
-        System.err.println("SURROUNDING-SIB REGIONS");
+        //System.err.println("SURROUNDING-SIB REGIONS");
         ArrayList<StructureSkipSuggestion> siblingSurroundingRegions=regionSelector.getSibblingSurroundingSuggestions();
         if(trySetErroneousRegion(siblingSurroundingRegions)){            
             return true;
         }
-        System.err.println("PARENT REGION");
+        //System.err.println("PARENT REGION");
         ArrayList<StructureSkipSuggestion> parentRegion=regionSelector.getParentSkipSuggestions();
         if(trySetErroneousRegion(parentRegion)){            
             return true;
         }        
         else {
-            System.err.println("PREFIX");
+            //System.err.println("PREFIX");
             erroneousRegion=regionSelector.getErroneousPrefix();
-           // System.err.print(getHistory().getFragment(erroneousRegion));
+           // //System.err.print(getHistory().getFragment(erroneousRegion));
             ArrayList<StructureSkipSuggestion> decomposedRegions=regionSelector.getZoomOnPreviousSuggestions(erroneousRegion);
             boolean findSmallerPart=trySetErroneousRegion(decomposedRegions);
             if(findSmallerPart){
@@ -126,10 +126,10 @@
         while (indexSkips < regions.size() && !successCriterion()) {
             aSkip = regions.get(indexSkips);
             //Debug info
-            System.err.print("~~~~~~~~~~~~~");
-            System.err.println("");
-            System.err.print(getHistory().getFragment(aSkip.getStartSkip().getTokensSeen(), aSkip.getEndSkip().getTokensSeen()-1));
-            System.err.println("");
+            //System.err.print("~~~~~~~~~~~~~");
+            //System.err.println("");
+            //System.err.print(getHistory().getFragment(aSkip.getStartSkip().getTokensSeen(), aSkip.getEndSkip().getTokensSeen()-1));
+            //System.err.println("");
             
             IndentInfo endPos=aSkip.getEndSkip();
             getHistory().setTokenIndex(endPos.getTokensSeen());

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java	2009-07-28 07:51:18 UTC (rev 19778)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java	2009-07-28 08:34:43 UTC (rev 19779)
@@ -1,4 +1,4 @@
-/*
+ /*
  * Created on 03.des.2005
  *
  * Copyright (c) 2005, Karl Trygve Kalleberg <karltk near strategoxt.org>
@@ -24,8 +24,9 @@
 import aterm.ATermFactory;
 import aterm.pure.PureFactory;
 
-public class SGLR {              
-
+public class SGLR {             
+   
+    
     // FIXME: Should probably be put elsewhere
     static final int EOF = 256;
     
@@ -40,7 +41,7 @@
     //handles recover productions 
     private RecoverAlgorithm recoverHandler;
         
-    private Frame startFrame; 
+    public Frame startFrame; 
     
     private long startTime;
     
@@ -50,7 +51,7 @@
     
     private ATermFactory factory;
 
-    protected Frame acceptingStack;
+    public Frame acceptingStack;
 
     public ArrayDeque<Frame> activeStacks;
 
@@ -58,7 +59,7 @@
 
     public int currentToken;
 
-    protected int tokensSeen;
+    public int tokensSeen;
 
     protected int lineNumber;
 
@@ -82,7 +83,7 @@
 
     private AmbiguityManager ambiguityManager;
 
-    private Disambiguator disambiguator;
+    public Disambiguator disambiguator;
 
     private int rejectCount;
 
@@ -97,7 +98,7 @@
     
     // ------------------------------------- Integrated recovery  ------------------------
   //Keeps track of the indentation for each line
-    private IndentationHandler indentHandler;
+   // private IndentationHandler indentHandler;
     
     private ParserHistory history;
     
@@ -108,9 +109,9 @@
     private boolean reduceRecoverOnly;
     
     //Keeps track of the indentation for each line
-    public IndentationHandler getIndentHandler() {
-        return indentHandler;
-    }
+    //public IndentationHandler getIndentHandler() {
+      //  return indentHandler;
+    //}
     
     public ParserHistory getHistory() {
         return history;
@@ -179,7 +180,7 @@
      *      effect when using {@link StructureRecoveryAlgorithm}.
      */
     public void setUseStructureRecovery(boolean useRoughRecovery, IRecoveryParser parser) {
-        useIntegratedRecovery = true;
+        useIntegratedRecovery =useRoughRecovery;
         recoverIntegrator = new RecoveryConnector(this, parser);
     }
     
@@ -212,8 +213,8 @@
         ambiguityManager = new AmbiguityManager(10000);
 
         disambiguator = new Disambiguator();
-        indentHandler = new IndentationHandler();
-        indentTokenHandler = new IndentTokenizer(indentHandler, false);  
+        //indentHandler = new IndentationHandler();
+       // indentTokenHandler = new IndentTokenizer(indentHandler, false);  
         //recoverHandler = new BackTrackRecovery2();
         //recoverHandler = new SimpleRecovering(this);
         recoverHandler = new NoRecovery();
@@ -287,7 +288,7 @@
         try {
             do {
                 readNextToken();                
-                indentHandler.updateIndentation(currentToken);
+                //indentHandler.updateIndentation(currentToken);
                 //indentTokenHandler.handleIndentShifts(this);                
                 //recoverHandler.afterStreamRead(currentToken);
                 history.keepTokenAndState(this);
@@ -296,10 +297,8 @@
                 //  Tools.debug("SGLR: "+(char)currentToken);             
             } while (currentToken != SGLR.EOF && activeStacks.size() > 0);
             
-           // history.logBigReductionList();
-            
-            if(useIntegratedRecovery && acceptingStack==null){
-                recoverIntegrator.recover();                 
+            if(useIntegratedRecovery && acceptingStack==null){                
+                recoverIntegrator.recover();                              
                 if(acceptingStack==null && activeStacks.size()>0)
                     return sglrParse(startSymbol);
             } else if(recoverHandler.meetsRecoverCriteria()){
@@ -307,6 +306,7 @@
                 if(acceptingStack==null)
                     return sglrParse(startSymbol);
             }
+           
         } catch (CancellationException e) {
             throw new ParseTimeoutException(this, currentToken, tokensSeen - 1, lineNumber,
                     columnNumber);



From m.dejonge at tudelft.nl  Tue Jul 28 10:37:01 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 28 Jul 2009 08:37:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19780 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907280834.n6S8YlUJ011681@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-28 08:37:01 +0000 (Tue, 28 Jul 2009)
New Revision: 19780

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19780&view=rev

Removed:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/IRegionRecovery.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java
Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/

Log:
revised region skip algorithm

Changes:


Property changes on: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
___________________________________________________________________
Added: svn:ignore
   + StructureRecovery_Old.java
ParserHistory_Old.java
IRegionRecovery_Old.java


Deleted: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/IRegionRecovery.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/IRegionRecovery.java	2009-07-28 08:34:43 UTC (rev 19779)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/IRegionRecovery.java	2009-07-28 08:37:01 UTC (rev 19780)
@@ -1,35 +0,0 @@
-package org.spoofax.jsglr;
-
-import java.io.IOException;
-import java.util.ArrayList;
-
-public interface IRegionRecovery {
-
-    /*
-     * 
-     */
-    public int getEndSkipPosition();
-
-    /*
-     * Parser state before the skipping
-     */
-    public IndentInfo getStartSkipPosition();
-
-    public ArrayList<IndentInfo> getSkippedLines();
-
-    /*
-     * Skipped fragment containing errors, including preceding indentation
-     */
-    public String getErrorFragment();
-
-    /* *
-     * *Start position of skipped fragment containing errors, including preceding indentation
-     */
-    public int getErrorFragmentStartPosition();
-
-    /*
-     * Recovers by skipping (parse as whitespace) part of the input string
-     */
-    public boolean selectErroneousFragment() throws IOException;
-
-}
\ No newline at end of file

Deleted: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java	2009-07-28 08:34:43 UTC (rev 19779)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureRecovery.java	2009-07-28 08:37:01 UTC (rev 19780)
@@ -1,461 +0,0 @@
-package org.spoofax.jsglr;
-import java.io.IOException;
-import java.util.ArrayList;
-
-/*
- * Coarse-grained recovery by skipping code-fragments near the error.
- * Uses layout to take human intention into account
- */
-public class StructureRecovery {
-    
-    private final int MAX_SIBLING_SKIPS = 400;
-    
-    private boolean isInwardMode;
-    private enum SkipAction{
-        SKIP_PREVIOUS,
-        SKIP_CURRENT,
-        SKIP_SIBLINGS,
-        SKIP_PARENT,
-        SKIP_FORWARD,
-        STOPPED        
-    }    
-    private int startSkipIndex;
-    private SGLR myParser;
-    private IndentationHandler skipIndentHandler;    
-    private IndentInfo skipPoint;
-    private SkipAction recoverAction;    
-    private int errorDetectionPosition;    
-    protected boolean isDebugMode;
-    private ArrayList<IndentInfo> recoverlines;   
-   
-    /*
-     * 
-     */
-    public int getEndSkipPosition() {
-        return skipPoint.getTokensSeen();
-    }
-    
-    /*
-     * Parser state before the skipping
-     */
-    public IndentInfo getStartSkipPosition() {
-        return getHistory().getLine(startSkipIndex);
-    }
-    
-    public ArrayList<IndentInfo> getSkippedLines() {
-        return getHistory().getLinesFrom(startSkipIndex);
-    }
-    
-    /*
-     * Skipped fragment containing errors, including preceding indentation
-     */
-    public String getErrorFragment() { 
-        int tokIndexLine=getHistory().getTokensSeenStartLine(getStartSkipPosition().getTokensSeen());
-        return getHistory().getFragment(tokIndexLine, skipPoint.getTokensSeen()-1);
-    }
-    
-    /* *
-     * *Start position of skipped fragment containing errors, including preceding indentation
-     */
-    public int getErrorFragmentStartPosition() { 
-        int tokIndexLine=getHistory().getTokensSeenStartLine(getStartSkipPosition().getTokensSeen());
-        return tokIndexLine;
-    }
-    
-    
-    /*
-     * Coarse-grained recovery by skipping code-fragments near the error.
-     * Uses layout to take human intention into account
-     */
-    public StructureRecovery(SGLR parser){
-        super();
-        myParser=parser;  
-        initialize();
-        reset();
-        isDebugMode=false;
-        //isDebugMode=true;
-    }
-
-    private void reset() {        
-        errorDetectionPosition=-1;
-        recoverAction =SkipAction.SKIP_PREVIOUS;
-        skipIndentHandler.initEvaluationVariables();
-        skipIndentHandler.setInLeftMargin(false);
-        recoverlines.clear();
-        myParser.setEnforcePrefixAccept(false);
-        isInwardMode=false;
-    }
-
-    private void initialize() {
-        skipPoint=new IndentInfo(0, 0, 0);               
-        skipIndentHandler = new IndentationHandler(); 
-        startSkipIndex=0;            
-        recoverlines=new ArrayList<IndentInfo>();
-    }
-
-    private ParserHistory getHistory() {
-        return myParser.getHistory();
-    }
-    
-    
-
-    /*
-     * Recovers by skipping (parse as whitespace) part of the input string
-     */
-    public boolean selectErroneousFragment() throws IOException {       
-        errorDetectionPosition=myParser.tokensSeen;
-        getHistory().setBigReducePoints();
-        getHistory().moveToLastConstruct(); 
-        recoverInward(getHistory().getConstructPoint().getIndentValue());
-        recoverAction = SkipAction.SKIP_PREVIOUS;        
-        getHistory().moveToLastConstruct(); 
-        while (recoverySucceeded()==false && recoverAction != SkipAction.STOPPED) {
-            if(isDebugMode)
-                Tools.debug("ACTION: "+recoverAction);
-            switch (recoverAction) {
-            case SKIP_PREVIOUS:
-                if(getHistory().moveToPreviousConstruct()){
-                    skipCurrentConstruct();
-                }
-                if(!recoverySucceeded() && getHistory().moveToDirectPreviousConstruct()){ //needed to deal with openings tokens like "{" on single line
-                    skipCurrentConstruct();
-                }
-                getHistory().moveToLastConstruct();
-                recoverAction=SkipAction.SKIP_CURRENT;
-                break;
-            case SKIP_CURRENT:
-                skipCurrentConstruct();
-                recoverAction=SkipAction.SKIP_SIBLINGS;                
-                break;
-            case SKIP_SIBLINGS:  
-                skipChilds();
-                recoverAction=SkipAction.SKIP_PARENT;
-                break;
-            case SKIP_PARENT:
-                boolean movedToParent = getHistory().moveToParentConstruct();
-                if(hasLowIndentation() || !movedToParent)
-                    recoverAction=SkipAction.SKIP_FORWARD;
-                else
-                    recoverAction = SkipAction.SKIP_CURRENT;            
-                break;
-            case SKIP_FORWARD:
-                getHistory().moveToLastConstruct();
-                skipForward();
-                recoverAction = SkipAction.STOPPED;
-                break;
-            case STOPPED:                                
-                break;          
-            }   
-        }
-        //if(recoverySucceeded()){
-          //  getHistory().addRecoverLines(recoverlines);
-        //}
-        if(!recoverySucceeded()){
-            startSkipIndex=0;
-        }
-            
-        reset();
-        return recoverySucceeded();
-    }
-
-    private void recoverInward(int errorLineIndent) throws IOException {
-        isInwardMode=true;
-        recoverAction=SkipAction.SKIP_CURRENT;
-        boolean goOn = getHistory().moveInward();
-        while (recoverySucceeded()==false && goOn) {
-            if(isDebugMode)
-                Tools.debug("(INWARD) ACTION: "+recoverAction);
-            switch (recoverAction) {            
-            case SKIP_CURRENT:
-                skipCurrentConstruct();
-                recoverAction=SkipAction.SKIP_SIBLINGS;                
-                break;
-            case SKIP_SIBLINGS:  
-                skipChilds();
-                recoverAction=SkipAction.SKIP_PARENT;
-                break;
-            case SKIP_PARENT:
-                getHistory().moveToParentConstruct();                
-                recoverAction = SkipAction.SKIP_CURRENT;            
-                break;
-            }
-            goOn=getHistory().getConstructPoint().getIndentValue() > errorLineIndent;
-        }
-        isInwardMode=false;
-        
-    }
-
-    private boolean hasLowIndentation() {
-        boolean smallTokenPos = getHistory().getConstructPoint().getTokensSeen() <= getHistory().getPreviousBigReducePoint().getTokensSeen();
-        boolean smallIndent = getHistory().getConstructPoint().getIndentValue() <= getHistory().getPreviousBigReducePoint().getIndentValue();
-        return smallTokenPos || smallIndent;
-    }
-
-    private boolean recoverySucceeded() {
-        return (myParser.activeStacks.size() > 0 || myParser.acceptingStack!=null);
-    }    
-
-    /*
-     * Skips children around the error
-     */
-    private void skipChilds() throws IOException { 
-        getHistory().moveToPreviousConstruct();
-        boolean lowIndent = hasLowIndentation();
-        int forward=0;
-        boolean movedToPrev=true;        
-        do {            
-            movedToPrev=getHistory().moveToPreviousConstruct(); //&& !getHistory().constructAfterEmptyLine() 
-            if(movedToPrev)
-                forward+=2;            
-            setSkipPoint();
-            int indent = skipPoint.getIndentValue();
-            int childsSkipped=0;
-            while ((childsSkipped < forward || !movedToPrev) && childsSkipped < MAX_SIBLING_SKIPS && !hasDedent(skipPoint.getIndentValue(), indent) && (recoverySucceeded()==false)) { //&& (myParser.currentToken != SGLR.EOF)
-                doSkipRecoverStep();
-                childsSkipped++;                
-            }
-            if(lowIndent && getStartSkipPosition().getLineNumber()<getHistory().getBigReducePoint().getLineNumber()-10)
-                break;//not too far backwards
-        } while (movedToPrev && !recoverySucceeded() && myParser.currentToken != SGLR.EOF);      
-    }
-    
-    private boolean hasDedent(int indentNew, int indentOld) {
-        return indentNew !=indentOld;
-    }
-    
-    /*
-     * Looks for a recovery by skipping forward from Parent, big-reduce or previous big-reduce
-     */
-    private void skipForward() throws IOException {
-        boolean skipFromCurrent=getHistory().getConstructPoint().structureStartPosition()==getHistory().getPreviousBigReducePoint().structureStartPosition();
-        if(skipFromCurrent)
-            setSkipPoint();
-        else {
-            boolean startOnPrevious = getHistory().getBigReducePoint().getIndentValue()>getHistory().getPreviousBigReducePoint().getIndentValue();
-            if(startOnPrevious){
-                getHistory().moveToPreviousBigReducePoint();
-                setSkipPoint(); 
-            }
-            else{
-                getHistory().moveToBigReducePoint();
-                setSkipPoint();
-            }
-        }
-        do {
-           doSkipRecoverStep();
-        } while(recoverySucceeded()==false && myParser.currentToken != SGLR.EOF);  
-    } 
-   
-    private void skipCurrentConstruct() throws IOException{
-        setSkipPoint();
-        doSkipRecoverStep();
-    }
-
-    private void setSkipPoint() {
-        startSkipIndex=getHistory().getIndexConstruct();
-        IndentInfo startPoint =getHistory().getConstructPoint();        
-        skipPoint=IndentInfo.cloneIndentInfo(startPoint);        
-    }
-
-    private void doSkipRecoverStep() throws IOException {
-        myParser.activeStacks.addAll(skipPoint.getStackNodes());
-        skipConstruct(skipPoint);
-        continueParsing();
-    }    
-    
-    private void continueParsing() throws IOException{
-        recoverlines.clear();
-        if (isDebugMode) 
-            Tools.debug("-- RecoverParse started -- ");        
-        //myParser.doParseStep();
-        while(myParser.activeStacks.size() > 0) {                        
-            readNextToken(); 
-           // Tools.debug((char)myParser.currentToken);
-            updateRecoverLinePoint(myParser);
-            myParser.doParseStep();            
-            if(meetsSuccessCriteriaForRecovery())
-                return; //end of attempt                     
-        }       
-    }    
-    
-    private boolean meetsSuccessCriteriaForRecovery() {
-        if(skipIndentHandler.lineMarginEnded() && getHistory().hasFinishedRecoverTokens())
-            return inspectLinePoints();
-        return myParser.acceptingStack!=null;
-    }
-    
-    /*
-     * Criteria: a reduction over the errorDetectionPoin + a non-reduce line 
-     */
-    private boolean inspectLinePoints() {        
-        boolean nonReduceLine = false;
-        for (int i = recoverlines.size()-1; i >=0; i--) {
-            IndentInfo inspectedLine=recoverlines.get(i);
-            if(inspectedLine.structureStartPosition()> errorDetectionPosition)
-                nonReduceLine=true;
-            if(nonReduceLine && inspectedLine.structureStartPosition() < errorDetectionPosition)
-                return true;
-            if(inspectedLine.getTokensSeen() < errorDetectionPosition)
-                return false;
-        }        
-        return false;
-    }    
-    
-    /*
-     * Skips line plus childlines (indentation)
-     */
-    private void skipConstruct(IndentInfo skipP) throws IOException{
-        if (isDebugMode)
-            Tools.debug("-- Skip started --");        
-        getHistory().setTokenIndex(skipP.getTokensSeen()); 
-        skipIndentHandler.setInLeftMargin(false);
-        boolean endSkipFound=false;
-        boolean childFound=false;
-        boolean prevLineEmpty=false;
-        while (endSkipFound==false) {            
-            readNextToken(); 
-            prevLineEmpty=skipIndentHandler.emptyLineParsed();
-            if(childFound(skipP))
-                childFound=true;
-            if (endOfConstruct(skipP)|| myParser.currentToken==SGLR.EOF) {//reachedErrorDetectionLine() && 
-                if(isInwardMode || getHistory().getTokenIndex()>= getHistory().getLastLine().getTokensSeen()-1){
-                    endSkipFound=true;                 
-                    int indent = skipIndentHandler.getIndentValue();                
-                    skipPoint = new IndentInfo(-1, getHistory().getTokenIndex() -1, indent);
-                    skipPoint.fillStackNodes(myParser.activeStacks);
-                }
-                else{
-                    childFound=false;
-                }
-            }            
-        }
-        //Tools.debug("skip try-part1: "+getErrorFragment());
-        if (childFound && skipP.getIndentValue() == skipPoint.getIndentValue() && !prevLineEmpty) {
-            while (myParser.currentToken != SGLR.EOF) {
-                readNextToken();
-                if (endOfConstruct(skipP)) {//next line has same or lower indent: previous line possible closing, thus skip.
-                    skipPoint.setTokensSeen(getHistory().getTokenIndex() - 1);
-                    skipPoint.setIndentValue(skipIndentHandler.getIndentValue());
-                    break;
-                }
-                if (childFound(skipP)) //higher indentation: probably no closing
-                    break;
-            }
-        }
-        getHistory().setTokenIndex(skipPoint.getTokensSeen());
-        //Tools.debug("skip try part2: "+getErrorFragment());
-       
-    }
-
-    private boolean childFound(IndentInfo skipP) {
-        return skipIndentHandler.lineMarginEnded()&& skipIndentHandler.getIndentValue() > skipP.getIndentValue();
-    }
-
-    private boolean endOfConstruct(IndentInfo skipP) {
-        return (skipIndentHandler.lineMarginEnded() && skipIndentHandler.getIndentValue() <= skipP.getIndentValue());
-    }
-
-    private boolean reachedErrorDetectionLine() {
-        return getHistory().getTokenIndex()>=getHistory().getLine(getHistory().nrOfLines()-1).getTokensSeen();
-    }    
-    
-    private void readNextToken() throws IOException {
-        getHistory().readRecoverToken(myParser);
-        skipIndentHandler.updateIndentation(myParser.currentToken);
-        if (isDebugMode)
-            Tools.debug((char)myParser.currentToken); 
-    }       
-       
-    private void updateRecoverLinePoint(SGLR myParser) {
-        if(skipIndentHandler.lineMarginEnded()){
-            int indent = skipIndentHandler.getIndentValue();
-            int lineNumber =-1;
-            if(getHistory().hasFinishedRecoverTokens())
-                lineNumber=myParser.lineNumber;
-            IndentInfo newLinePoint= new IndentInfo(lineNumber, getHistory().getTokenIndex(), indent);
-            newLinePoint.fillStackNodes(myParser.activeStacks);
-            recoverlines.add(newLinePoint);  
-        }      
-    }    
-}
-
-    /*
-    //////////////////////////////////////// LOG INFO ////////////////////////////////////////////////////////////////
-
-    private IndentInfo findNewLinePoint(int tokensSeen){
-        for (int i = newLinePoints.size()-1; i >=0; i--) {
-            if(newLinePoints.get(i).getTokensSeen()<=tokensSeen)
-                return newLinePoints.get(i);            
-        }
-        return null;
-    }
-    
-    private void logRecoverResult() {
-        if (isDebugMode) {
-            if (recoverySucceeded()) {
-                Tools.debug("-- RecoverParse succeeded --");
-            } else {
-                Tools.debug("-- RecoverParse failed --");
-            }
-        }
-    }
-    
-    protected void logBeforeRecover() {        
-        if(isDebugMode){
-            logBigReductionList();
-            logLastParsedFragment();
-        }
-    }
-    
-    private void logRecoverFragment(int tokStart, int tokEnd) {        
-        String errorFragment ="";
-        for (int i = tokStart; i < tokEnd+1; i++) {
-            errorFragment+= recoverTokenStream[i];
-        }
-        Tools.debug(errorFragment);           
-    }
-    
-    private void logLastParsedFragment() {        
-        int tokEnd = recoverTokenCount -1;
-        int tokStart = Math.max(tokEnd - 30, 0);
-        String beforeErrorFragment ="... ";
-        for (int i = tokStart; i < tokEnd+1; i++) {
-            beforeErrorFragment+= recoverTokenStream[i];
-        }
-        Tools.debug(beforeErrorFragment);
-        Tools.debug("**** Before error ****");
-        Tools.debug("***************************");
-    }
-    
-    private void logBigReductionList() {        
-        for (int i = 0; i < newLinePoints.size(); i++) {
-            logBigReduction(newLinePoints.get(i));
-        }
-       // Tools.debug(info);
-        Tools.debug("**** BR-list ****");
-        Tools.debug("***************************");
-    }
-
-    private void logBigReduction(IndentInfo brPoint) {
-        Tools.debug("LINE: " +brPoint.getLineNumber());
-        Tools.debug("INDENT: " +brPoint.getIndentValue());
-        Tools.debug("REDUCE-LENGTH: " +brPoint.maxReduceLength());
-        Tools.debug("TOKEN-POSITION: " +brPoint.getTokensSeen());        
-        Tools.debug("........................");
-    }
-    
-    private void logBigReduceInfo(IndentInfo newLinePoint) {
-        IndentInfo test = findNewLinePoint(newLinePoint.structureStartPosition());
-        Tools.debug("StructurePos" +newLinePoint.structureStartPosition());
-        Tools.debug("current line" +newLinePoint.getLineNumber());
-        if (test !=null) {
-            Tools.debug("line: " + test.getLineNumber());
-            Tools.debug("pos: " + test.getTokensSeen());
-            Tools.debug("indent: " + test.getIndentValue());
-        }
-        else
-            Tools.debug("Null - " + myParser.lineNumber);
-    }
-
-}
-*/
\ No newline at end of file



From L.C.L.Kats at tudelft.nl  Tue Jul 28 11:06:05 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 28 Jul 2009 09:06:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19781 - LennartKats -
	in spoofax-imp/trunk:
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens
Message-ID: <200907280903.n6S93quR012593@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-28 09:06:05 +0000 (Tue, 28 Jul 2009)
New Revision: 19781

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19781&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenIterator.java

Log:
- New work-around for the IMP PrsStream.getTokenIndexAtcharacter() method.
- Added a call to sdf2imp.init in the DynamicBuilder class.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java	2009-07-28 08:37:01 UTC (rev 19780)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java	2009-07-28 09:06:05 UTC (rev 19781)
@@ -59,6 +59,7 @@
 			agent.setDescriptor(EditorServiceParseController.getDescriptor());
 			context = new Context(Environment.getTermFactory());
 			context.setIOAgent(agent);
+			sdf2imp.init(context);
 			
 		} catch (Throwable e) { // (catch classes not loading, etc.)
 			Environment.logException("Unable to initialize dynamic builder", e);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenIterator.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenIterator.java	2009-07-28 08:37:01 UTC (rev 19780)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenIterator.java	2009-07-28 09:06:05 UTC (rev 19781)
@@ -1,6 +1,7 @@
 package org.strategoxt.imp.runtime.parser.tokens;
 
 import java.util.Iterator;
+import java.util.List;
 
 import lpg.runtime.IToken;
 import lpg.runtime.PrsStream;
@@ -31,23 +32,27 @@
 	}
 
 	private static int getLastIndex(PrsStream stream, IRegion region) {
-		// TODO: Just fetch the last token by hand; the IMP interface and this workaround is terrible
-		int result = stream.getTokenIndexAtCharacter(region.getOffset() + region.getLength());
-		if (result < 0)
-			result = -result + 1;
-		if (result >= stream.getTokens().size())
-			result = stream.getTokens().size() - 1;
-		if (result > 0 && stream.getTokenAt(result).getStartOffset() == 0)
-			result--;
-		// while (stream.getTokenAt(result).getKind() == TokenKind.TK_ERROR.ordinal())
-		// 	result--;
+		List tokens = stream.getTokens();
+		int end = region.getOffset() + region.getLength() + 1;
+		
+		int result = stream.getStreamLength();
+		while (result-- > 0) {
+			IToken token = (IToken) tokens.get(result);
+			if (token.getKind() == TokenKind.TK_EOF.ordinal())
+				break;
+		}
+
+		while (result-- > 0) {
+			IToken token = (IToken) tokens.get(result);
+			if (token.getEndOffset() <= end)
+				break;
+		}
+		
 		return result;
 	}
 
 	public boolean hasNext() {
-		return index <= lastIndex
-			&& stream.getTokenAt(index).getKind() != TokenKind.TK_ERROR.ordinal()
-			&& stream.getTokenAt(index).getKind() != TokenKind.TK_UNKNOWN.ordinal();
+		return index <= lastIndex;
 	}
 
 	public IToken next() {



From m.dejonge at tudelft.nl  Tue Jul 28 11:23:37 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 28 Jul 2009 09:23:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19782 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907280921.n6S9LOGg012991@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-28 09:23:37 +0000 (Tue, 28 Jul 2009)
New Revision: 19782

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19782&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParserHistory.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java

Log:
refactoring region recovery: log, comments

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java	2009-07-28 09:06:05 UTC (rev 19781)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/FineGrainedRepair.java	2009-07-28 09:23:37 UTC (rev 19782)
@@ -34,8 +34,7 @@
     public void findRecoverBranch(ArrayList<IndentInfo> lines, int endTokenIndex) throws IOException{
         endRecovery=endTokenIndex;
         indexLineRecovery=-1;
-        newLinePoints=lines;
-        removeUnskippedLines();
+        newLinePoints=lines;       
         if(newLinePoints.size()==0)
             return;         
         myParser.setFineGrainedMode(true);       
@@ -76,19 +75,6 @@
         recoverLineAndContinueParse(true, endRecovery);
     }
 
-    private void removeUnskippedLines() {
-        while (newLinePoints.size()>0) {
-            if(newLinePoints.get(newLinePoints.size()-1).getTokensSeen()>=endRecovery){
-                newLinePoints.remove(newLinePoints.size()-1);
-            }
-            else if(newLinePoints.get(newLinePoints.size()-1).getStackNodes().size()==0){
-                newLinePoints.remove(newLinePoints.size()-1);
-            }
-            else
-                break;
-        }
-    }
-
     private void forwardRecovery() throws IOException {
         if(lastLineRecovered())
             return;    

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParserHistory.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParserHistory.java	2009-07-28 09:06:05 UTC (rev 19781)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParserHistory.java	2009-07-28 09:23:37 UTC (rev 19782)
@@ -315,6 +315,23 @@
         recentHistory.addAll(newLinePoints.subList(startIndex, newLinePoints.size()));
         return recentHistory;
     }
+    
+    public ArrayList<IndentInfo> getLinesFromTo(int startIndex, int endLocation) {
+        int indexLine = startIndex;
+        ArrayList<IndentInfo> result=new ArrayList<IndentInfo>();
+        IndentInfo firstLine = newLinePoints.get(indexLine);
+        while(indexLine < newLinePoints.size()){
+             firstLine = newLinePoints.get(indexLine);
+             if(firstLine.getTokensSeen() < endLocation){
+                 result.add(firstLine);
+                 indexLine++;
+             }
+             else{
+                 indexLine=newLinePoints.size();
+             }
+        }
+        return result;
+    }
 
     public int getLastChar() {        
         return recoverTokenStream[recoverTokenCount-1];

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java	2009-07-28 09:06:05 UTC (rev 19781)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java	2009-07-28 09:23:37 UTC (rev 19782)
@@ -3,6 +3,10 @@
 import java.io.IOException;
 import java.util.ArrayList;
 
+/*
+ * * Supports error recovery by selecting the region containing the error.
+ * * This region can be discarded (parsed as layout) or can be inspected by a refined recover method
+ */
 public class RegionRecovery {
 
     private SGLR myParser;
@@ -11,15 +15,25 @@
     private boolean hasFoundErroneousRegion;
     private int errorDetectionLocation;
     private static int NR_OF_LINES_TILL_SUCCESS=2;
+    private boolean useDebugMode;
     
-    
     /*
-     * * Only used for testing 
+     * * Prints information about the selected regions to the console
      */
+    public void setUseDebugMode(boolean useDebugMode) {
+        this.useDebugMode = useDebugMode;
+    }
+
+    /*
+     * * Used for testing, accepts a recovery only after end of file is reached
+     */
     public void setEndOfFileSuccessMode(){
         NR_OF_LINES_TILL_SUCCESS=Integer.MAX_VALUE;
     }
     
+    /*
+     * * Supports error recovery by selecting the region containing the error
+     */
     public RegionRecovery(SGLR sglr){
         myParser=sglr;
         regionSelector = new StructureSkipper(sglr);
@@ -29,36 +43,50 @@
         return myParser.getHistory();
     }
     
+    /*
+     * * Returns info about the parser configuration at the start of the erroneous region 
+     */
     public IndentInfo getStartSkipPosition() {
         return erroneousRegion.getStartSkip();
     }
     
+    /*
+     * * returns the location of the first non-erroneous character
+     */
     public int getEndSkipPosition() {
         return erroneousRegion.getEndSkip().getTokensSeen();
     }
 
+    /*
+     * *  Returns error fragment including the left margin (needed for bridge-parsing)
+     */
     public String getErrorFragment() {
         int tokIndexLine=getHistory().getTokensSeenStartLine(getStartSkipPosition().getTokensSeen());
         return getHistory().getFragment(tokIndexLine, getEndSkipPosition()-1);
     }
 
+    /*
+     * * Returns location where erroneous region starts, including left margin
+     */
     public int getErrorFragmentStartPosition() {
         int tokIndexLine=getHistory().getTokensSeenStartLine(getStartSkipPosition().getTokensSeen());
         return tokIndexLine;
     }
 
-    public ArrayList<IndentInfo> getSkippedLines() {
-        //System.err.println("start index: "+erroneousRegion.getIndexHistoryStart());
-        return getHistory().getLinesFrom(erroneousRegion.getIndexHistoryStart());
-    }    
+    public ArrayList<IndentInfo> getSkippedLines() {        
+        return getHistory().getLinesFromTo(erroneousRegion.getIndexHistoryStart(), getEndSkipPosition());
+    }      
 
+    /*
+     * * Selects erroneous region based on layout 
+     */
     public boolean selectErroneousFragment() throws IOException { 
         regionSelector.clear();
         regionSelector.setFailureIndex(getHistory().getIndexLastLine());
         errorDetectionLocation=getHistory().getIndexLastToken();
         hasFoundErroneousRegion=false;         
         ArrayList<StructureSkipSuggestion> prevRegions=regionSelector.getPreviousSkipSuggestions();
-        //System.err.println("PREVIOUS REGION");        
+        logRecoverInfo("PREVIOUS REGION");        
         if(trySetErroneousRegion(prevRegions)){
             ArrayList<StructureSkipSuggestion> decomposedRegions=regionSelector.getZoomOnPreviousSuggestions(erroneousRegion);
             boolean findSmallerPart= trySetErroneousRegion(decomposedRegions);
@@ -69,11 +97,11 @@
             return true;
         }
         ArrayList<StructureSkipSuggestion> currentRegions=regionSelector.getCurrentSkipSuggestions();
-        //System.err.println("CURRENT REGION");
+        logRecoverInfo("CURRENT REGION");
         if(trySetErroneousRegion(currentRegions)){            
             return true;
         }
-        //System.err.println("PRIOR REGIONS");
+        logRecoverInfo("PRIOR REGIONS");
         ArrayList<StructureSkipSuggestion> priorRegions=regionSelector.getPriorSkipSuggestions();
         if(trySetErroneousRegion(priorRegions)){
             ArrayList<StructureSkipSuggestion> decomposedRegions=regionSelector.getZoomOnPreviousSuggestions(erroneousRegion);
@@ -84,30 +112,30 @@
             }
             return true;
         }
-        //System.err.println("FW-SIB REGIONS");
+        logRecoverInfo("FW-SIB REGIONS");
         ArrayList<StructureSkipSuggestion> siblingForWardRegions=regionSelector.getSibblingForwardSuggestions();
         if(trySetErroneousRegion(siblingForWardRegions)){            
             return true;
         }
-        //System.err.println("BW-SIB REGIONS");
+        logRecoverInfo("BW-SIB REGIONS");
         ArrayList<StructureSkipSuggestion> siblingBackWardRegions=regionSelector.getSibblingBackwardSuggestions();
         if(trySetErroneousRegion(siblingBackWardRegions)){            
             return true;
         }
-        //System.err.println("SURROUNDING-SIB REGIONS");
+        logRecoverInfo("SURROUNDING-SIB REGIONS");
         ArrayList<StructureSkipSuggestion> siblingSurroundingRegions=regionSelector.getSibblingSurroundingSuggestions();
         if(trySetErroneousRegion(siblingSurroundingRegions)){            
             return true;
         }
-        //System.err.println("PARENT REGION");
+        logRecoverInfo("PARENT REGION");
         ArrayList<StructureSkipSuggestion> parentRegion=regionSelector.getParentSkipSuggestions();
         if(trySetErroneousRegion(parentRegion)){            
             return true;
         }        
         else {
-            //System.err.println("PREFIX");
+            logRecoverInfo("PREFIX");
             erroneousRegion=regionSelector.getErroneousPrefix();
-           // //System.err.print(getHistory().getFragment(erroneousRegion));
+            logRecoverInfo(getHistory().getFragment(erroneousRegion));
             ArrayList<StructureSkipSuggestion> decomposedRegions=regionSelector.getZoomOnPreviousSuggestions(erroneousRegion);
             boolean findSmallerPart=trySetErroneousRegion(decomposedRegions);
             if(findSmallerPart){
@@ -118,28 +146,25 @@
         }
     }
 
+    
     private boolean trySetErroneousRegion(ArrayList<StructureSkipSuggestion> regions) throws IOException {
         StructureSkipSuggestion aSkip=new StructureSkipSuggestion();
         int indexSkips=0;
         myParser.acceptingStack=null; 
         myParser.activeStacks.clear(); //undo success
         while (indexSkips < regions.size() && !successCriterion()) {
-            aSkip = regions.get(indexSkips);
-            //Debug info
-            //System.err.print("~~~~~~~~~~~~~");
-            //System.err.println("");
-            //System.err.print(getHistory().getFragment(aSkip.getStartSkip().getTokensSeen(), aSkip.getEndSkip().getTokensSeen()-1));
-            //System.err.println("");
-            
+            aSkip = regions.get(indexSkips);            
+            logRecoverInfoBlock(getHistory().getFragment(aSkip.getStartSkip().getTokensSeen(), aSkip.getEndSkip().getTokensSeen()-1));           
             IndentInfo endPos=aSkip.getEndSkip();
             getHistory().setTokenIndex(endPos.getTokensSeen());
             myParser.activeStacks.clear();
             myParser.acceptingStack=null;
             myParser.activeStacks.addAll(endPos.getStackNodes());
             int nrOfParsedLines=0;
+            logRecoverInfo("CONTINUE PARSING: ");
             while((myParser.activeStacks.size() > 0 && nrOfParsedLines<NR_OF_LINES_TILL_SUCCESS) || !getHistory().hasFinishedRecoverTokens()) {                       
                 getHistory().readRecoverToken(myParser); 
-                //System.err.append((char)myParser.currentToken);            
+                logRecoverInfo((char)myParser.currentToken);            
                 myParser.doParseStep();
                 if(getHistory().getTokenIndex()>errorDetectionLocation && myParser.currentToken=='\n')
                     nrOfParsedLines++;
@@ -148,7 +173,8 @@
         }
         hasFoundErroneousRegion=successCriterion();
         if(hasFoundErroneousRegion){
-            erroneousRegion=aSkip;            
+            erroneousRegion=aSkip;   
+            logRecoverInfo("Erroneous region set ");
         }
         return hasFoundErroneousRegion;
     }
@@ -156,5 +182,21 @@
     private boolean successCriterion() {
         return myParser.activeStacks.size() > 0 || myParser.acceptingStack!=null;
     }
+    
+    private void logRecoverInfo(Object s) {
+        if(useDebugMode){
+            System.err.println(s);
+        }
+    } 
+    
+    private void logRecoverInfoBlock(Object s) {
+        if(useDebugMode){
+            System.err.println("------------------------");
+            System.err.println("");
+            System.err.println(s);            
+            System.err.println("");
+            System.err.println("------------------------");
+        }
+    } 
 
 }



From L.C.L.Kats at tudelft.nl  Tue Jul 28 11:29:48 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 28 Jul 2009 09:29:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19783 - LennartKats -
	aster/trunk/runtime/aster/decorators
Message-ID: <200907280927.n6S9RZea013041@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-28 09:29:48 +0000 (Tue, 28 Jul 2009)
New Revision: 19783

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19783&view=rev

Modified:
   aster/trunk/runtime/aster/decorators/lookup.astr

Log:


Changes:

Modified: aster/trunk/runtime/aster/decorators/lookup.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/lookup.astr	2009-07-28 09:23:37 UTC (rev 19782)
+++ aster/trunk/runtime/aster/decorators/lookup.astr	2009-07-28 09:29:48 UTC (rev 19783)
@@ -69,7 +69,7 @@
    * @param fetch-decl A local declaration fetching attribute that succeeds
    *                   if a given declares the requested identifier.
    */
-  decorator at-root cached lookup-global(fetch-decl) =
+  decorator cached at-root lookup-global(fetch-decl) =
     id.lookup-unordered(fetch-decl, fail)
   
 decorators
@@ -112,7 +112,7 @@
    * @param fetch-decl A local declaration fetching attribute that succeeds
    *                   if a given declares the requested identifier.
    */
-  decorator at-root cached lookup-multiple-global(fetch-decl) =
+  decorator cached at-root lookup-multiple-global(fetch-decl) =
     id.lookup-multiple-unordered(fetch-decl, fail)
   
 decorators // Collecting declarations for lookup attributes



From L.C.L.Kats at tudelft.nl  Tue Jul 28 11:56:15 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 28 Jul 2009 09:56:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19784 - LennartKats -
	sglr-recovery/trunk/permissive-grammars/trans/make-permissive
Message-ID: <200907280954.n6S9s2Wg013205@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-28 09:56:15 +0000 (Tue, 28 Jul 2009)
New Revision: 19784

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19784&view=rev

Modified:
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr

Log:
Add literal insertion rules for non-nesting start symbol productions.

Changes:

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr	2009-07-28 09:29:48 UTC (rev 19783)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr	2009-07-28 09:56:15 UTC (rev 19784)
@@ -184,6 +184,19 @@
     where
       if-switch(|SEPARATORS_ON())
 
+attributes // Start production literals (e.g., "module")
+
+  eq lexical-insert-prods:
+    lit @ lit(_) -> |[ -> ~lit {recover, cons("INSERTION")} ]|
+    where
+      id.is-start-symbol(|id.current-sort)
+    where
+      if-switch(|OPEN_INSERTIONS_ON())
+    <+
+      not(lit.is-used-as-opening-literal)
+    where
+      not(id.current-prod.is-contained-by(|id.current-sort))
+
 attributes // All-literal insertion
 
   eq lexical-insert-prods:

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr	2009-07-28 09:29:48 UTC (rev 19783)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr	2009-07-28 09:56:15 UTC (rev 19784)
@@ -34,8 +34,11 @@
   def down current-cons:
     prod(_, _, attrs(a*)) -> cons
     where
-      <one(?term(cons(cons)))> a*
+      a*.one(?term(cons(cons)))
   
+  def down current-prod:
+    prod(_, _, _) -> id
+  
   def Test down in-pattern:
     prod(pattern, _, _).pattern -> id
 
@@ -68,8 +71,19 @@
     iter-star-sep(_, _) -> id
     iter-sep(_, _)      -> id
 
+attributes // Start symbols
+
+  def Test lookup-global is-start-symbol(|sort):
+    context-free-start-symbols(s*) -> sort where s*.one(sort(id.eq(|sort)))
+    lexical-start-symbols(s*)      -> sort where s*.one(sort(id.eq(|sort)))
+    kernel-start-symbols(s*)       -> sort where s*.one(sort(id.eq(|sort)))
+
 attributes // Graph structure properties
 
+  /**
+   * Tests if the current production directly or indirectly
+   * is referenced by any production for the given sort.
+   */
   def Type(Prod, Prod) graph-search is-contained-by(|sort):
     prod(_, _, _) -> id
     where
@@ -78,6 +92,10 @@
       <+ one(id.is-contained-by(|sort))
       )
 
+  /**
+   * Tests if the current production directly or indirectly
+   * contains a reference to the given sort.
+   */
   def Type(Prod, Prod) graph-search is-container-of(|sort):
     prod(_, _, _) -> id
     where



From m.dejonge at tudelft.nl  Tue Jul 28 12:57:06 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 28 Jul 2009 10:57:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19785 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907281054.n6SAsrOe013987@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-28 10:57:06 +0000 (Tue, 28 Jul 2009)
New Revision: 19785

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19785&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java

Log:


Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java	2009-07-28 09:56:15 UTC (rev 19784)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/RegionRecovery.java	2009-07-28 10:57:06 UTC (rev 19785)
@@ -3,9 +3,9 @@
 import java.io.IOException;
 import java.util.ArrayList;
 
-/*
- * * Supports error recovery by selecting the region containing the error.
- * * This region can be discarded (parsed as layout) or can be inspected by a refined recover method
+/**
+ * Supports error recovery by selecting the region containing the error.
+ * This region can be discarded (parsed as layout) or can be inspected by a refined recover method
  */
 public class RegionRecovery {
 
@@ -17,22 +17,22 @@
     private static int NR_OF_LINES_TILL_SUCCESS=2;
     private boolean useDebugMode;
     
-    /*
-     * * Prints information about the selected regions to the console
+    /**
+     * Prints information about the selected regions to the console
      */
     public void setUseDebugMode(boolean useDebugMode) {
         this.useDebugMode = useDebugMode;
     }
 
-    /*
-     * * Used for testing, accepts a recovery only after end of file is reached
+    /**
+     * Used for testing, accepts a recovery only after end of file is reached
      */
     public void setEndOfFileSuccessMode(){
         NR_OF_LINES_TILL_SUCCESS=Integer.MAX_VALUE;
     }
     
-    /*
-     * * Supports error recovery by selecting the region containing the error
+    /**
+     * Supports error recovery by selecting the region containing the error
      */
     public RegionRecovery(SGLR sglr){
         myParser=sglr;
@@ -43,30 +43,30 @@
         return myParser.getHistory();
     }
     
-    /*
-     * * Returns info about the parser configuration at the start of the erroneous region 
+    /** *
+     *  Returns info about the parser configuration at the start of the erroneous region 
      */
     public IndentInfo getStartSkipPosition() {
         return erroneousRegion.getStartSkip();
     }
     
-    /*
-     * * returns the location of the first non-erroneous character
+    /**
+     * returns the location of the first non-erroneous character
      */
     public int getEndSkipPosition() {
         return erroneousRegion.getEndSkip().getTokensSeen();
     }
 
-    /*
-     * *  Returns error fragment including the left margin (needed for bridge-parsing)
+    /**
+     *  Returns error fragment including the left margin (needed for bridge-parsing)
      */
     public String getErrorFragment() {
         int tokIndexLine=getHistory().getTokensSeenStartLine(getStartSkipPosition().getTokensSeen());
         return getHistory().getFragment(tokIndexLine, getEndSkipPosition()-1);
     }
 
-    /*
-     * * Returns location where erroneous region starts, including left margin
+    /**
+     * Returns location where erroneous region starts, including left margin
      */
     public int getErrorFragmentStartPosition() {
         int tokIndexLine=getHistory().getTokensSeenStartLine(getStartSkipPosition().getTokensSeen());
@@ -77,8 +77,8 @@
         return getHistory().getLinesFromTo(erroneousRegion.getIndexHistoryStart(), getEndSkipPosition());
     }      
 
-    /*
-     * * Selects erroneous region based on layout 
+    /**
+     * Selects erroneous region based on layout 
      */
     public boolean selectErroneousFragment() throws IOException { 
         regionSelector.clear();



From m.dejonge at tudelft.nl  Tue Jul 28 12:57:58 2009
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 28 Jul 2009 10:57:58 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19786 - MaartjeDeJonge
	- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200907281055.n6SAti6t014002@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2009-07-28 10:57:58 +0000 (Tue, 28 Jul 2009)
New Revision: 19786

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19786&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java

Log:


Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-28 10:57:06 UTC (rev 19785)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/StructureSkipper.java	2009-07-28 10:57:58 UTC (rev 19786)
@@ -1,11 +1,8 @@
 package org.spoofax.jsglr;
 
-import java.awt.image.IndexColorModel;
 import java.io.IOException;
 import java.util.ArrayList;
 
-import org.omg.CORBA.PRIVATE_MEMBER;
-
 public class StructureSkipper {
     
     //restrictions on area searched for erroneous region



From zef at zefhemel.com  Tue Jul 28 13:46:08 2009
From: zef at zefhemel.com (Zef Hemel)
Date: Tue, 28 Jul 2009 11:46:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19787 - zef - in
	pil/trunk/src/lib/db: . java-support
Message-ID: <200907281143.n6SBhsSh014608@proliant.st.ewi.tudelft.nl>

Author: zef
Date: 2009-07-28 11:46:08 +0000 (Tue, 28 Jul 2009)
New Revision: 19787

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19787&view=rev

Modified:
   pil/trunk/src/lib/db/Makefile
   pil/trunk/src/lib/db/java-support/build.xml

Log:


Changes:

Modified: pil/trunk/src/lib/db/Makefile
===================================================================
--- pil/trunk/src/lib/db/Makefile	2009-07-28 10:57:58 UTC (rev 19786)
+++ pil/trunk/src/lib/db/Makefile	2009-07-28 11:46:08 UTC (rev 19787)
@@ -5,10 +5,11 @@
 java: clean
 	mkdir -p java-output/src
 	pilc -i db.pil -d java-output/src --gen-external-classinfos --java
-	pilc -i test.pil -d java-output/src --java
+	#pilc -i test.pil -d java-output/src --java
 	cp -r java-support/* java-output/
 	cp $(PILJAR) java-output/lib
-	cd java-output; ant
+	cd java-output; ant package
+	mv java-output/pil-db.jar .
 
 python: clean
 	mkdir -p python-output

Modified: pil/trunk/src/lib/db/java-support/build.xml
===================================================================
--- pil/trunk/src/lib/db/java-support/build.xml	2009-07-28 10:57:58 UTC (rev 19786)
+++ pil/trunk/src/lib/db/java-support/build.xml	2009-07-28 11:46:08 UTC (rev 19787)
@@ -25,6 +25,10 @@
              classpathref="libraries"
              debug="on"/>            
     </target>
+
+	<target name="package" depends="compile">
+		<jar destfile="pil-db.jar" basedir="${targetdir}" includes="**/*.class"/>
+	</target>
 	
 	<target name="run">
 	      <java classname="Main"



From zef at zefhemel.com  Tue Jul 28 14:47:22 2009
From: zef at zefhemel.com (Zef Hemel)
Date: Tue, 28 Jul 2009 12:47:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19788 - zef - in
	pil/trunk/src/lib/db: . python-support
Message-ID: <200907281245.n6SCj88a015236@proliant.st.ewi.tudelft.nl>

Author: zef
Date: 2009-07-28 12:47:22 +0000 (Tue, 28 Jul 2009)
New Revision: 19788

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19788&view=rev

Added:
   pil/trunk/src/lib/db/python-support/model.pil
Modified:
   pil/trunk/src/lib/db/Makefile
   pil/trunk/src/lib/db/collection.pil
   pil/trunk/src/lib/db/db.pil
   pil/trunk/src/lib/db/model.pil
   pil/trunk/src/lib/db/test.pil
   pil/trunk/src/lib/db/util.pil

Log:
Simple properties now also have a wrapper class. Better for eventual optimization (partially loaded entities).


Changes:

Modified: pil/trunk/src/lib/db/Makefile
===================================================================
--- pil/trunk/src/lib/db/Makefile	2009-07-28 11:46:08 UTC (rev 19787)
+++ pil/trunk/src/lib/db/Makefile	2009-07-28 12:47:22 UTC (rev 19788)
@@ -5,7 +5,7 @@
 java: clean
 	mkdir -p java-output/src
 	pilc -i db.pil -d java-output/src --gen-external-classinfos --java
-	#pilc -i test.pil -d java-output/src --java
+	pilc -i test.pil -d java-output/src --java
 	cp -r java-support/* java-output/
 	cp $(PILJAR) java-output/lib
 	cd java-output; ant package

Modified: pil/trunk/src/lib/db/collection.pil
===================================================================
--- pil/trunk/src/lib/db/collection.pil	2009-07-28 11:46:08 UTC (rev 19787)
+++ pil/trunk/src/lib/db/collection.pil	2009-07-28 12:47:22 UTC (rev 19788)
@@ -6,6 +6,37 @@
 import pil::db::query
 import pil::reflect
 
+class pil::db::model::SimpleValue<T> {
+  Entity self = null;
+  String prop = null;
+  T value = null;
+  Class cls = null;
+  Bool isLoaded = false;
+
+  new(Entity self, String prop, Class cls, T defaultValue) {
+    this.self = self;
+    this.prop = prop;
+    this.cls = cls;
+    this.value = defaultValue;
+    this.isLoaded = true;
+  }
+
+  void set(T value, DatabaseSession session) {
+    this.value = value;
+    this.isLoaded = true;
+  }
+
+  T get(DatabaseSession session) {
+    if(!isLoaded) {
+      println("Lazy loading value ");
+      var mapping = classMappings[self.class];
+      var result = session.query("SELECT `" + prop + "` FROM `" + mapping.tableName + "` WHERE `id` = '" + self.id + "'");
+      setObjectField(this, "value", result[0].getObject(0));
+    }
+    return value;
+  }
+}
+
 class pil::db::model::SimpleReference<T> {
   String id = null;
   T value = null;

Modified: pil/trunk/src/lib/db/db.pil
===================================================================
--- pil/trunk/src/lib/db/db.pil	2009-07-28 11:46:08 UTC (rev 19787)
+++ pil/trunk/src/lib/db/db.pil	2009-07-28 12:47:22 UTC (rev 19788)
@@ -153,7 +153,7 @@
         } else if(f instanceof ManyToOneFieldMapping) {
           getObjectField(o, f.fieldName).as<ManyToOne<Object>>.setId(r.getString(counter));
         } else if(r.getObject(counter) != null) {
-          setObjectField(o, f.fieldName, r.getObject(counter));
+          getObjectField(o, f.fieldName).as<SimpleValue<Object>>.set(r.getObject(counter), this);
         }
         counter++;
       }
@@ -188,7 +188,7 @@
     var valueList = new List<Object>();
     for(String field : values.keys) {
       // if changed...
-      Object value = dbValue(values[field]);
+      Object value = dbValue(values[field], this);
       if(value != e.snap[field]) {
         fieldList.add(field);
         valueList.add(value);

Modified: pil/trunk/src/lib/db/model.pil
===================================================================
--- pil/trunk/src/lib/db/model.pil	2009-07-28 11:46:08 UTC (rev 19787)
+++ pil/trunk/src/lib/db/model.pil	2009-07-28 12:47:22 UTC (rev 19788)
@@ -40,7 +40,7 @@
     var mapping = getClassMapping(session);
     for(FieldMapping fm : mapping.fieldMappings) {
       var value = getObjectField(this, fm.fieldName);
-      snap[fm.fieldName] = dbValue(value);
+      snap[fm.fieldName] = dbValue(value, session);
     }
   }
 

Added: pil/trunk/src/lib/db/python-support/model.pil
===================================================================
--- pil/trunk/src/lib/db/python-support/model.pil	                        (rev 0)
+++ pil/trunk/src/lib/db/python-support/model.pil	2009-07-28 12:47:22 UTC (rev 19788)
@@ -0,0 +1,207 @@
+import "db.pil"
+import "type.pil"
+import "dialect.pil"
+import "util.pil"
+
+import pil::reflect
+
+import pil::db
+import pil::db::util
+import pil::db::model
+import pil::db::type
+import pil::db::dialect
+
+Map<Class, ClassMapping> pil::db::model::classMappings = new Map<Class, ClassMapping>();
+
+class pil::db::model::Entity {
+  String id = genUUID();
+  Bool isNew = true;
+  Map<String, Object> snap = null;
+
+  // Every Entity needs to have an empty constructor
+  new() {
+    snap = new Map<String, Object>();
+  }
+
+  ClassMapping getMapping() {
+    return null;
+  }
+
+  ClassMapping getClassMapping(DatabaseSession session) {
+    var cls = this.class;
+    if(!classMappings.contains(cls)) {
+      classMappings[cls] = getMapping();
+    }
+    return classMappings[cls];
+  }
+
+  void snapshot(DatabaseSession session) {
+    snap = new Map<String, Object>();
+    var mapping = getClassMapping(session);
+    for(FieldMapping fm : mapping.fieldMappings) {
+      var value = getObjectField(this, fm.fieldName);
+      snap[fm.fieldName] = dbValue(value);
+    }
+  }
+
+  Int hashCode() {
+    return id.hashCode();
+  }
+
+  Bool ==(Object o) {
+    if(o == null) {
+      return false;
+    }
+    if(!(o instanceof Entity)) {
+      return false;
+    }
+    return id == o.as<Entity>.id;
+  }
+}
+
+class pil::db::model::ClassMapping {
+  Class cls = null;
+  String tableName = null;
+  Array<FieldMapping> fieldMappings = null;
+  Map<String, FieldMapping> fields = null;
+
+  new(Class cls, String tableName, Array<FieldMapping> fieldMappings) {
+    this.cls = cls;
+    this.tableName = tableName;
+    this.fieldMappings = fieldMappings;
+    this.fields = new Map<String, FieldMapping>();
+    for(FieldMapping fm : fieldMappings) {
+      fields[fm.fieldName] = fm;
+    }
+  }
+
+  List<String> createSQLs(Dialect dialect) {
+    var sqls = new List<String>();
+    var sql = new MutableString();
+    sql.append("CREATE TABLE `" + tableName + "` (\n");
+    sql.append("  `id` " + dialect.getType(stringType, 36) + " NOT NULL,\n");
+    for(FieldMapping fm : fieldMappings) {
+      var sqlPart = fm.createSQL(dialect);
+      if(sqlPart != null) {
+        sql.append("  " + sqlPart);
+        sql.append(",\n");
+      }
+      var tableSql = fm.createTableSQL(dialect);
+      if(tableSql != null) {
+        sqls.add(tableSql);
+      }
+    }
+    sql.append("  PRIMARY KEY  (`id`)\n");
+    sql.append(");");
+    sqls.add(sql.as<String>);
+    return sqls;
+  }
+}
+
+class pil::db::model::FieldMapping {
+  String fieldName = null;
+
+  new(String fieldName) {
+    this.fieldName = fieldName;
+  }
+
+  String createSQL(Dialect dialect) {
+    return null;
+  }
+
+  String createTableSQL(Dialect dialect) {
+    return null;
+  }
+
+  Bool isSelectField() {
+    return true;
+  }
+}
+
+class pil::db::model::ValueFieldMapping extends pil::db::model::FieldMapping {
+  DBType type = null;
+  Int size = 0;
+
+  new(String fieldName, DBType type, Int size) extends super(fieldName) {
+    this.type = type;
+    this.size = size;
+  }
+
+  String createSQL(Dialect dialect) {
+    return "`" + fieldName + "` " + dialect.getType(type, size) + " NOT NULL";
+  }
+}
+
+class pil::db::model::SimpleReferenceFieldMapping extends pil::db::model::FieldMapping {
+  Class cls = null;
+
+  new(String fieldName, Class cls) extends super(fieldName) {
+    this.cls = cls;
+  }
+
+  String createSQL(Dialect dialect) {
+    var foreignTable = classMappings[cls].tableName;
+    return "`" + fieldName + "` " + dialect.getType(stringType, 36) + " DEFAULT NULL"; //, " +
+           //"FOREIGN KEY (`" + fieldName + "`) REFERENCES `" + foreignTable + "`(`id`) ";
+  }
+}
+
+class pil::db::model::OneToOneFieldMapping extends pil::db::model::SimpleReferenceFieldMapping {
+  new(String fieldName, Class cls) extends super(fieldName, cls) {
+  }
+}
+
+class pil::db::model::OneToManyFieldMapping extends pil::db::model::FieldMapping {
+  Class listCls = null;
+
+  new(String fieldName, Class listCls) extends super(fieldName) {
+    this.listCls = listCls;
+  }
+
+  String createSQL(Dialect dialect) {
+    return null;
+  }
+
+  Bool isSelectField() {
+    return false;
+  }
+}
+
+class pil::db::model::ManyToOneFieldMapping extends pil::db::model::OneToOneFieldMapping {
+  new(String fieldName, Class cls) extends super(fieldName, cls) {
+  }
+}
+
+class pil::db::model::ManyToManyFieldMapping extends pil::db::model::FieldMapping {
+  Class fromCls = null;
+  Class toCls = null;
+  String relationName = null;
+  Bool managing = true;
+
+  new(String fieldName, String relationName, Class fromCls, Class toCls, Bool managing) extends super(fieldName) {
+    this.fromCls = fromCls;
+    this.toCls = toCls;
+    this.relationName = relationName;
+    this.managing = managing;
+  }
+
+  Bool isSelectField() {
+    return false;
+  }
+
+  String createTableSQL(Dialect dialect) {
+    if(managing) {
+      var fromMapping = classMappings[fromCls];
+      var toMapping = classMappings[toCls];
+      var sql = new MutableString();
+      var tableName = fromMapping.tableName + "_" + relationName + "_" + toMapping.tableName;
+      sql.append("CREATE TABLE `" + tableName + "` (\n");
+      sql.append("   `" + fromMapping.tableName + "` " + dialect.getType(stringType, 36) + " DEFAULT NULL,\n");
+      sql.append("   `" + toMapping.tableName + "` " + dialect.getType(stringType, 36) + " DEFAULT NULL\n");
+      sql.append(");\n");
+      return sql.as<String>;
+    } else {
+      return null;
+    }
+  }
+}

Modified: pil/trunk/src/lib/db/test.pil
===================================================================
--- pil/trunk/src/lib/db/test.pil	2009-07-28 11:46:08 UTC (rev 19787)
+++ pil/trunk/src/lib/db/test.pil	2009-07-28 12:47:22 UTC (rev 19788)
@@ -14,9 +14,9 @@
 import pil::db::query
 
 class User extends Entity {
-  String name = "";
-  Int age = 0;
-  String bio = "";
+  SimpleValue<String> name = new SimpleValue<String>(this, "name", typeof String, "");
+  SimpleValue<Int> age = new SimpleValue<Int>(this, "age", typeof Int, 0);
+  SimpleValue<String> bio = new SimpleValue<String>(this, "bio", typeof String, "");
   OneToOne<Address> address = new OneToOne<Address>(this, typeof Address, "owner");
   OneToMany<Message> messages = new OneToMany<Message>(this, typeof Message, "sender");
   ManyToMany<User> groups = new ManyToMany<User>(this, typeof Group, "members", "groupMembership");
@@ -34,7 +34,7 @@
 }
 
 class Group extends Entity {
-  String name = "";
+  SimpleValue<String> name = new SimpleValue<String>(this, "name", typeof String, "");
   ManyToMany<User> members = new ManyToMany<User>(this, typeof User, "groups", "groupMembership");
 
   ClassMapping getMapping() {
@@ -47,8 +47,8 @@
 
 class Address extends Entity {
   OneToOne<User> owner = new OneToOne<User>(this, typeof User, "address");
-  String street = "";
-  Int number = 0;
+  SimpleValue<String> street = new SimpleValue<String>(this, "street", typeof String, "");
+  SimpleValue<Int> number = new SimpleValue<Int>(this, "number", typeof Int, 0);
 
   ClassMapping getMapping() {
     var fields = new List<FieldMapping>();
@@ -61,7 +61,7 @@
 
 class Message extends Entity {
   ManyToOne<User> sender = new ManyToOne<User>(this, typeof User, "messages");
-  String message = "";
+  SimpleValue<String> message = new SimpleValue<String>(this, "message", typeof String, "");
 
   ClassMapping getMapping() {
     var fields = new List<FieldMapping>();
@@ -82,26 +82,26 @@
 void testSimple(DatabaseSession session) {
   println("Simple test");
   var u = new User();
-  u.name = "User 1";
-  u.age = 1;
+  u.name.set("User 1", session);
+  u.age.set(1, session);
   session.add(u);
   session.flush();
   var u2 = session.get(typeof User, u.id).as<User>;
   assertEqual(u.id, u2.id, "Id check");
-  assertEqual(u.name, u2.name, "name check");
-  assertEqual(u.age, u2.age, "age check");
+  assertEqual(u.name.get(session), u2.name.get(session), "name check");
+  assertEqual(u.age.get(session), u2.age.get(session), "age check");
 }
 
 void testOneToOne(DatabaseSession session) {
   println("1:1 tests");
   var u = new User();
-  u.name = "Zef Hemel";
-  u.age = 25;
-  u.bio = "He's a nice guy.";
+  u.name.set("Zef Hemel", session);
+  u.age.set(25, session);
+  u.bio.set("He's a nice guy.", session);
   session.add(u);
   var uAddr = new Address();
-  uAddr.street = "Chopinplein";
-  uAddr.number = 64;
+  uAddr.street.set("Chopinplein", session);
+  uAddr.number.set(64, session);
   u.address.set(uAddr, session);
   session.flush();
   assertEqual(u.address.get(session).id, uAddr.id, "reference check");
@@ -119,9 +119,9 @@
 void testOneToMany(DatabaseSession session) {
   println("1:N tests");
   var u = new User();
-  u.name = "User 1";
+  u.name.set("User 1", session);
   var m = new Message();
-  m.message = "Hello world!";
+  m.message.set("Hello world!", session);
   u.messages.add(m, session);
   assertEqual(m.sender.get(session), u, "back reference");
   session.flush();
@@ -139,11 +139,11 @@
 void testPrefetch(DatabaseSession session) {
   println("Testing prefetch");
   var u = new User();
-  u.name = "User 1";
+  u.name.set("User 1", session);
   session.add(u);
   for(Int i = 0; i < 25; i++) {
     var m = new Message();
-    m.message = "Message " + i.as<String>;
+    m.message.set("Message " + i.as<String>, session);
     m.sender.set(u, session);
     session.add(m);
   }
@@ -151,7 +151,7 @@
   var q = new QuerySet<Message>(typeof Message).prefetch(new SimpleFieldName("sender"));
   var qc = session.queryCounter;
   for(Message m : q.list(session)) {
-    assertEqual(m.sender.get(session).name, u.name, "checking sender name");
+    assertEqual(m.sender.get(session).name.get(session), u.name.get(session), "checking sender name");
   }
   assertEqual(session.queryCounter, qc+1, "check query count");
   //println(q.fieldName2Class(typeof Message, new CompositeFieldName(new SimpleFieldName("sender"), "address")));
@@ -160,18 +160,18 @@
 void testManyToMany(DatabaseSession session) {
   println("Testing N:M");
   var g = new Group();
-  g.name = "Group 1";
+  g.name.set("Group 1", session);
   session.add(g);
 
   var g2 = new Group();
-  g2.name = "Group 2";
+  g2.name.set("Group 2", session);
   session.add(g2);
 
   List<User> even = new List<User>();
 
   for(Int i = 0; i < 10; i++) {
     var u = new User();
-    u.name = "User " + i.as<String>;
+    u.name.set("User " + i.as<String>, session);
     session.add(u);
     if(i % 2 == 0) {
       g.members.add(u, session);

Modified: pil/trunk/src/lib/db/util.pil
===================================================================
--- pil/trunk/src/lib/db/util.pil	2009-07-28 11:46:08 UTC (rev 19787)
+++ pil/trunk/src/lib/db/util.pil	2009-07-28 12:47:22 UTC (rev 19788)
@@ -1,6 +1,8 @@
 import "model.pil"
+import "db.pil"
 
 import pil::reflect
+import pil::db
 import pil::db::model
 
 external String pil::db::util::genUUID();
@@ -36,7 +38,7 @@
   return r.as<String>;
 }
 
-Object pil::db::util::dbValue(Object value) {
+Object pil::db::util::dbValue(Object value, DatabaseSession session) {
   if(value == null) {
     return null;
   } else if(value instanceof OneToOne<Object>) {
@@ -47,8 +49,10 @@
     return null;
   } else if(value instanceof ManyToMany<Object>) {
     return null;
+  } else if(value instanceof SimpleValue<Object>) {
+    return value.as<SimpleValue<Object>>.get(session);
   } else {
-    return value;
+    throw new Exception("Unsupported value: " + value.as<String>);
   }
 }
 



From L.C.L.Kats at tudelft.nl  Wed Jul 29 09:33:01 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Jul 2009 07:33:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19789 - LennartKats -
	in sglr-recovery/trunk/permissive-grammars: . trans/make-permissive
Message-ID: <200907290730.n6T7UkBt030298@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-29 07:33:01 +0000 (Wed, 29 Jul 2009)
New Revision: 19789

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19789&view=rev

Modified:
   sglr-recovery/trunk/permissive-grammars/Makefile
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile

Log:
Added 'java' target.

Changes:

Modified: sglr-recovery/trunk/permissive-grammars/Makefile
===================================================================
--- sglr-recovery/trunk/permissive-grammars/Makefile	2009-07-28 12:47:22 UTC (rev 19788)
+++ sglr-recovery/trunk/permissive-grammars/Makefile	2009-07-29 07:33:01 UTC (rev 19789)
@@ -13,6 +13,8 @@
       $(TABLES) \
       grammars/experimental/Minimal.coredef
 
+java : trans/make-permissive/make-permissive.java
+
 # General rules
 
 %.tbl : %.def
@@ -43,7 +45,10 @@
 	gen-sdf-mix -i $< --main languages/sql92/Main --name SQLMix -o $@
 
 trans/make-permissive/make-permissive : .PHONY
-	$(MAKE) -C trans/make-permissive
+	$(MAKE) -C trans/make-permissive make-permissive
+
+trans/make-permissive/make-permissive.java : .PHONY
+	$(MAKE) -C trans/make-permissive make-permissive.java
 	
 %-Permissive.gendef : %.def trans/make-permissive/make-permissive 
 	trans/make-permissive/make-permissive -i $< -o $@ -m `basename $< .def` -mo `basename $@ .gendef` --optimize on

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile	2009-07-28 12:47:22 UTC (rev 19788)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile	2009-07-29 07:33:01 UTC (rev 19789)
@@ -3,14 +3,20 @@
 
 STRS=$(ASTRS:.astr=.str)
 
+STRCFLAGS=\
+  -I . \
+  -I syntax \
+  -la stratego-aterm \
+  -la stratego-lib \
+  -la stratego-xtc \
+  -la stratego-sglr \
+  -la ~/.nix-profile/lib/libstratego-sdf.la
+
 make-permissive : make-permissive.str $(STRS)
-	strc -i $< -m main-make-permissive \
-	     -I . -I syntax \
-	     -la stratego-aterm \
-	     -la stratego-lib \
-	     -la stratego-xtc \
-	     -la stratego-sglr \
-	     -la ~/.nix-profile/lib/libstratego-sdf.la
+	strc -i $< -m main-make-permissive $(STRCFLAGS)
+
+make-permissive.java : make-permissive.str $(STRS)
+	strj -i $< -m main-make-permissive $(STRCFLAGS)
 	     
 make-permissive.str : $(ASTRS) syntax/Stratego-Attributes-Sdf2.tbl syntax/Comments.pp.af
 	aster --verbose 2 -i $(ASTRS) -I syntax



From L.C.L.Kats at tudelft.nl  Wed Jul 29 11:18:22 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Jul 2009 09:18:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19790 - LennartKats -
	in strc-java/trunk: java java/META-INF trans
Message-ID: <200907290916.n6T9G7UR031916@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-29 09:18:22 +0000 (Wed, 29 Jul 2009)
New Revision: 19790

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19790&view=rev

Modified:
   strc-java/trunk/java/META-INF/MANIFEST-repacked.MF
   strc-java/trunk/java/META-INF/MANIFEST.MF
   strc-java/trunk/java/Makefile.am
   strc-java/trunk/trans/strj-options.str
   strc-java/trunk/trans/strj.str

Log:
Better output file name handling.

Changes:

Modified: strc-java/trunk/java/META-INF/MANIFEST-repacked.MF
===================================================================
--- strc-java/trunk/java/META-INF/MANIFEST-repacked.MF	2009-07-29 07:33:01 UTC (rev 19789)
+++ strc-java/trunk/java/META-INF/MANIFEST-repacked.MF	2009-07-29 09:18:22 UTC (rev 19790)
@@ -1,5 +1,4 @@
 Manifest-Version: 1.0
-Created-By: 1.6.0_10 (Sun Microsystems Inc.)
 Main-Class: org.strategoxt.strj
 Class-Path: strategoxt-no-compression.jar
 Export-Package: org.strategoxt
Modified: strc-java/trunk/java/META-INF/MANIFEST.MF
===================================================================
--- strc-java/trunk/java/META-INF/MANIFEST.MF	2009-07-29 07:33:01 UTC (rev 19789)
+++ strc-java/trunk/java/META-INF/MANIFEST.MF	2009-07-29 09:18:22 UTC (rev 19790)
@@ -1,4 +1,3 @@
 Manifest-Version: 1.0
-Created-By: 1.6.0_10 (Sun Microsystems Inc.)
 Main-Class: org.strategoxt.strj
 
Modified: strc-java/trunk/java/Makefile.am
===================================================================
--- strc-java/trunk/java/Makefile.am	2009-07-29 07:33:01 UTC (rev 19789)
+++ strc-java/trunk/java/Makefile.am	2009-07-29 09:18:22 UTC (rev 19790)
@@ -1,5 +1,7 @@
 include $(top_srcdir)/Makefile.xt
 
+EXTRA_DIST=strategoxt.jar
+
 RUNTIMEJAVAS = \
   $(wildcard runtime/org/strategoxt/lang/*.java) \
   $(wildcard runtime/org/strategoxt/lang/compat/*.java) \

Modified: strc-java/trunk/trans/strj-options.str
===================================================================
--- strc-java/trunk/trans/strj-options.str	2009-07-29 07:33:01 UTC (rev 19789)
+++ strc-java/trunk/trans/strj-options.str	2009-07-29 09:18:22 UTC (rev 19790)
@@ -26,19 +26,11 @@
   ; parse-options(
       strj-options
     )
-  ; with(
-      infer-output-option
-    )
+  ; if <get-config> "-o"; not(<eq> (<id>, <jify>)) then
+      <get-config> "-o"
+    ; fatal-err(|"Output file name is not a legal Java name")
+    end
   
-  infer-output-option =
-    <get-config> "-o"
-  <+
-    <get-config> "-i"
-  ; guarantee-extension(|"java")
-  ; <set-config> ("-o", <id>)
-  <+
-    <set-config> ("-o", stdout())
-  
   strj-options =
     input-option
   <+

Modified: strc-java/trunk/trans/strj.str
===================================================================
--- strc-java/trunk/trans/strj.str	2009-07-29 07:33:01 UTC (rev 19789)
+++ strc-java/trunk/trans/strj.str	2009-07-29 09:18:22 UTC (rev 19790)
@@ -22,6 +22,7 @@
 
   main-strj =
     strj-parse-options
+  ; main-module-required
   ; log-timed(
       xtc-input(strj)
     | "Compilation succeeded", 1
@@ -32,8 +33,10 @@
   ; <exit> 1
   
   strj =
-    if <get-extension> <get-config> "-i" => "ctree" then
-      read-from
+    if FILE(get-extension => "ctree") then
+      xtc-ensure-file
+    ; strc-get-infile
+    ; read-from
     <+
       <get-config> "-i"
     ; err(|"File does not exist")
@@ -56,7 +59,8 @@
       | "Pretty printing: preparation succeeded", 2
       )
     ; log-timed(
-        file := <fopen <+ fatal-err(|"Could not open output file")> (<get-config> "-o", "w")
+        name := <get-config <+ strc-getoutfile(!".java"); jify> "-o"
+      ; file := <fopen <+ fatal-err(|"Could not open output file")> (name, "w")
       ; <box2text-stream(|80, file)> box
       ; <fclose> file
       | "Pretty printing: output to stream succeeded", 2



From L.C.L.Kats at tudelft.nl  Wed Jul 29 11:52:51 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Jul 2009 09:52:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19791 - LennartKats - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser:
	. tokens
Message-ID: <200907290950.n6T9oafg032431@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-29 09:52:51 +0000 (Wed, 29 Jul 2009)
New Revision: 19791

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19791&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java

Log:
More JDT-like syntax error messages and marker placement.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	2009-07-29 09:18:22 UTC (rev 19790)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	2009-07-29 09:52:51 UTC (rev 19791)
@@ -92,7 +92,7 @@
 			offset = 0;
 			reportSkippedFragments(tokenizer);
 			ATermAppl asfix = termAt(top, 0);
-			reportRecoveredErrors(tokenizer, asfix, 0);
+			reportRecoveredErrors(tokenizer, asfix, 0, 0);
 		} catch (RuntimeException e) {
 			reportError(tokenizer, e);
 		}
@@ -103,14 +103,14 @@
      * 
 	 * @param outerBeginOffset  The begin offset of the enclosing construct.
      */
-	private void reportRecoveredErrors(SGLRTokenizer tokenizer, ATermAppl term, int outerStartOffset) {
+	private void reportRecoveredErrors(SGLRTokenizer tokenizer, ATermAppl term, int outerStartOffset, int outerStartOffset2) {
 		// TODO: Nicer error messages; merge consecutive error tokens etc.
 		int startOffset = offset;
 		
 		if ("amb".equals(term.getAFun().getName())) {
 			// Report errors in first ambiguous branch and update offset
 			ATermList ambs = termAt(term, 0);
-			reportRecoveredErrors(tokenizer, (ATermAppl) ambs.getFirst(), startOffset);
+			reportRecoveredErrors(tokenizer, (ATermAppl) ambs.getFirst(), startOffset, outerStartOffset);
 			
 			reportAmbiguity(tokenizer, term, startOffset);
 			return;
@@ -132,24 +132,30 @@
 			if (child.getType() == ATerm.INT) {
 				offset += 1;				
 			} else {
-				reportRecoveredErrors(tokenizer, (ATermAppl) child, startOffset);
+				reportRecoveredErrors(tokenizer, (ATermAppl) child, startOffset, outerStartOffset);
 			}
 		}
 		
 		//post visit: report error				
 		if (isErrorProduction(attrs, WATER)) {
 			IToken token = tokenizer.makeErrorToken(startOffset, offset - 1);
-			reportErrorAtTokens(token, token, "'" + token + "' not expected here");
+			reportErrorAtTokens(token, token, "Syntax error, '" + token + "' not expected here");
 		} else if (isErrorProduction(attrs, INSERT_END)) {
 			IToken token = tokenizer.makeErrorToken(startOffset, offset - 1);
-			reportErrorAtTokens(token, token, "Closing of '" + token + "' is expected here");
+			reportErrorAtTokens(token, token, "Syntax error, Closing of '" + token + "' is expected here");
 		} else if (isErrorProduction(attrs, INSERT)) {
-			IToken token = tokenizer.makeErrorTokenSkipLayout(startOffset, offset + 1, outerStartOffset);
-			String inserted = ""; // TODO: Handle this default case better
+			IToken token = tokenizer.makeErrorTokenSkipLayout(startOffset, offset + 1, outerStartOffset2);
+			String inserted = "token";
 			if (rhs.getName() == "lit") {
 				inserted = applAt(rhs, 0).getName();
 			}
-			reportErrorAtTokens(token, token, "Expected: '" + inserted + "'");
+			if (token.getLine() == tokenizer.getLexStream().getLine(outerStartOffset2) && !token.toString().equals(inserted)) {
+				reportErrorAtTokens(token, token, "Syntax error, expected: '" + inserted + "'");
+			} else {
+				// Had to backtrack to the last token of the current line,
+				// (or reporting a missing } at another })
+				reportErrorAtTokens(token, token, "Syntax error, insert '" + inserted + "' to complete construct");
+			}
 		}
 		
 		if (lexicalStart) inLexicalContext = false;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java	2009-07-29 09:18:22 UTC (rev 19790)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java	2009-07-29 09:52:51 UTC (rev 19791)
@@ -158,10 +158,15 @@
 			char c = lexStream.getCharValue(offset);
 			if (!Character.isWhitespace(c)) {
 			    if (newlineSkipLength != -1) {
-                    // Only allow skipping back a few lines if the outer
-                    // construct started on the line we skipped to
-			        if (lexStream.getLine(offset) != lexStream.getLine(outerBeginOffset))
+			        if (lexStream.getLine(offset) != lexStream.getLine(outerBeginOffset)) {
+	                    // Report the error at the next newline
+			        	// if the outer construct started on a different line
 			            skipLength = newlineSkipLength;
+			        } else {
+			        	// Skip to the previous token at the end of this line
+			        	// if the outer construct started on the same line
+			        	return makeErrorTokenBackwards(beginOffset - skipLength);
+			        }
 			    }
 				break;
 			}
@@ -170,7 +175,7 @@
 			    
 		}
 		
-		return makeErrorToken(beginOffset-skipLength, endOffset-skipLength);
+		return makeErrorToken(beginOffset - skipLength, endOffset - skipLength);
 	}
 	
 	/**



From L.C.L.Kats at tudelft.nl  Wed Jul 29 14:14:19 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Jul 2009 12:14:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19792 - LennartKats -
	in strc-java/trunk: . java trans
Message-ID: <200907291212.n6TCC3CS001788@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-29 12:14:19 +0000 (Wed, 29 Jul 2009)
New Revision: 19792

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19792&view=rev

Added:
   strc-java/trunk/java/spoofax-libs.jar
Modified:
   strc-java/trunk/Makefile.am
   strc-java/trunk/configure.ac
   strc-java/trunk/java/Makefile.am
   strc-java/trunk/trans/strj-options.str

Log:
* Added a spoofax-libs.jar file, which contains compiled classes for the
  Spoofax dependencies, in order to make the build process a bit simpler.

* strategoxt.jar is now included in the install dir.

* Added a simple 'strj-jar' script for creating a JAR from an STRJ-compiled
  stratego file.


Changes:

Modified: strc-java/trunk/Makefile.am
===================================================================
--- strc-java/trunk/Makefile.am	2009-07-29 09:52:51 UTC (rev 19791)
+++ strc-java/trunk/Makefile.am	2009-07-29 12:14:19 UTC (rev 19792)
@@ -2,7 +2,7 @@
 
 ACLOCAL_AMFLAGS = -I .
 
-SUBDIRS           = syn trans java test
+SUBDIRS           = syn trans java test tools
 BOOTCLEAN_SUBDIRS = $(SUBDIRS)
 DIST_SUBDIRS      = $(SUBDIRS)
 EXTRA_DIST        = bootstrap Makefile.xt

Modified: strc-java/trunk/configure.ac
===================================================================
--- strc-java/trunk/configure.ac	2009-07-29 09:52:51 UTC (rev 19791)
+++ strc-java/trunk/configure.ac	2009-07-29 12:14:19 UTC (rev 19792)
@@ -31,5 +31,6 @@
   trans/Makefile
   java/Makefile
   test/Makefile
+  tools/Makefile
 ])
 AC_OUTPUT

Modified: strc-java/trunk/java/Makefile.am
===================================================================
--- strc-java/trunk/java/Makefile.am	2009-07-29 09:52:51 UTC (rev 19791)
+++ strc-java/trunk/java/Makefile.am	2009-07-29 12:14:19 UTC (rev 19792)
@@ -1,6 +1,7 @@
 include $(top_srcdir)/Makefile.xt
 
 EXTRA_DIST=strategoxt.jar
+pkgdata_DATA=strategoxt.jar
 
 RUNTIMEJAVAS = \
   $(wildcard runtime/org/strategoxt/lang/*.java) \
@@ -47,11 +48,8 @@
   lib/org/strategoxt/libstratego-xtc.rtree \
   .ALLCLASSES
 
-# HACK: hardcoded, relative classpath
-
-BASEPATH=../../../spoofax/trunk/spoofax
-SPCLASSPATH=$(BASEPATH)/org.spoofax.interpreter.core/bin:$(BASEPATH)/org.spoofax.interpreter.adapter.aterm/bin:$(BASEPATH)/org.spoofax.interpreter.library.jsglr/bin:$(BASEPATH)/../../branches/spoofax-recovery/bin:$(BASEPATH)/org.spoofax.aterm/bin/:$(BASEPATH)/org.spoofax.aterm/lib/jjtraveler-0.4.3.jar:$(BASEPATH)/org.spoofax.aterm/lib/shared-objects-1.4.jar
-CLASSPATH=$(SPCLASSPATH):runtime:lib:.
+SPOOFAX=../../../spoofax/trunk/spoofax
+CLASSPATH=runtime:lib:spoofax-libs.jar:.
 JAVACFLAGS=-J-Xmx256m -J-Xms100m -J-server -J-XX:+UseParallelGC -cp $(CLASSPATH) -source 5 -nowarn
 JAVAC=`if which ecj >/dev/null; then echo ecj; else echo javac; fi`
 
@@ -62,16 +60,11 @@
 JARIN2=`find lib      | grep -E '\.class|\.rtree|\.af|\.tbl' | sed 's!lib/!-C lib/ !'`
 JARIN3=`find compiler | grep -E '\.class|\.rtree|\.af|\.tbl' | sed 's!compiler/!-C compiler/ !'`
 
-jar strategoxt.jar : ext-lib # .ALLCLASSES $(RUNTIMEJAVAS) $(LIBARYJAVAS) $(COMPILERJAVAS)
-	$(JAR) cfm strategoxt.jar.tmp META-INF/MANIFEST.MF $(JARIN1)
+jar strategoxt.jar : spoofax-libs.jar # .ALLCLASSES $(RUNTIMEJAVAS) $(LIBARYJAVAS) $(COMPILERJAVAS)
+	cp spoofax-libs.jar strategoxt.jar.tmp
+	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF $(JARIN1)
 	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF $(JARIN2)
 	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF $(JARIN3)
-	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF -C ext-lib/ .
-	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF -C $(BASEPATH)/org.spoofax.interpreter.core/bin/ .
-	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF -C $(BASEPATH)/../../branches/spoofax-recovery/bin/ .
-	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF -C $(BASEPATH)/org.spoofax.aterm/bin/ .
-	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF -C $(BASEPATH)/org.spoofax.interpreter.adapter.aterm/bin/ .
-	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF -C $(BASEPATH)/org.spoofax.interpreter.library.jsglr/bin/ .
 	jar i strategoxt.jar.tmp
 	mv strategoxt.jar.tmp strategoxt.jar
 
@@ -79,22 +72,26 @@
 	$(JAR) cfm0 strategoxt.jar META-INF/MANIFEST.MF $(JARIN1)
 	$(JAR) ufm0 strategoxt.jar META-INF/MANIFEST.MF $(JARIN2)
 	$(JAR) ufm0 strategoxt.jar META-INF/MANIFEST.MF $(JARIN3)
-	$(JAR) ufm0 strategoxt.jar META-INF/MANIFEST.MF -C ext-lib/ .
-	$(JAR) ufm0 strategoxt.jar META-INF/MANIFEST.MF -C $(BASEPATH)/org.spoofax.interpreter.core/bin/ .
-	$(JAR) ufm0 strategoxt.jar META-INF/MANIFEST.MF -C $(BASEPATH)/../../branches/spoofax-recovery/bin/ .
-	$(JAR) ufm0 strategoxt.jar META-INF/MANIFEST.MF -C $(BASEPATH)/org.spoofax.aterm/bin/ .
-	$(JAR) ufm0 strategoxt.jar META-INF/MANIFEST.MF -C $(BASEPATH)/org.spoofax.interpreter.adapter.aterm/bin/ .
-	$(JAR) ufm0 strategoxt.jar META-INF/MANIFEST.MF -C $(BASEPATH)/org.spoofax.interpreter.library.jsglr/bin/ .
+	$(JAR) ufm0 strategoxt.jar META-INF/MANIFEST.MF -C spoofax-libs/ .
 	mv strategoxt.jar strategoxt-no-compression.jar
 	jar cfm strategoxt.jar META-INF/MANIFEST-repacked.MF strategoxt-no-compression.jar
 	jar i strategoxt.jar
 
-ext-lib : $(BASEPATH)/org.spoofax.aterm/lib/jjtraveler-0.4.3.jar $(BASEPATH)/org.spoofax.aterm/lib/shared-objects-1.4.jar $(BASEPATH)/share/java/junit-3.8.1.jar $(BASEPATH)/share/java/jjtraveler-0.4.3.jar
-	([ -d ext-lib ] || mkdir ext-lib); \
-	cat $(BASEPATH)/org.spoofax.aterm/lib/jjtraveler-0.4.3.jar | (cd ext-lib; $(JAR) x); \
-	cat $(BASEPATH)/org.spoofax.aterm/lib/shared-objects-1.4.jar | (cd ext-lib; $(JAR) x); \
-	cat $(BASEPATH)/share/java/junit-3.8.1.jar | (cd ext-lib; $(JAR) x); \
-	rm -rf ext-lib/META-INF
+new-spoofax-libs :
+	rm -rf spoofax-libs-tmp
+	mkdir spoofax-libs-tmp
+	cat $(SPOOFAX)/org.spoofax.aterm/lib/jjtraveler-0.4.3.jar | (cd spoofax-libs-tmp; $(JAR) x)
+	cat $(SPOOFAX)/org.spoofax.aterm/lib/shared-objects-1.4.jar | (cd spoofax-libs-tmp; $(JAR) x)
+	cat $(SPOOFAX)/share/java/junit-3.8.1.jar | (cd spoofax-libs-tmp; $(JAR) x)
+	rm -rf spoofax-libs-tmp/META-INF
+	$(JAR) cf spoofax-libs.jar.tmp -C spoofax-libs-tmp .
+	$(JAR) uf spoofax-libs.jar.tmp -C $(SPOOFAX)/org.spoofax.interpreter.core/bin/ .
+	$(JAR) uf spoofax-libs.jar.tmp -C $(SPOOFAX)/../../branches/spoofax-recovery/bin/ .
+	$(JAR) uf spoofax-libs.jar.tmp -C $(SPOOFAX)/org.spoofax.aterm/bin/ .
+	$(JAR) uf spoofax-libs.jar.tmp -C $(SPOOFAX)/org.spoofax.interpreter.adapter.aterm/bin/ .
+	$(JAR) uf spoofax-libs.jar.tmp -C $(SPOOFAX)/org.spoofax.interpreter.library.jsglr/bin/ .
+	rm -rf spoofax-libs-tmp
+	mv spoofax-libs.jar.tmp spoofax-libs.jar
 
 ###### LIBRARIES #######
 

Added: strc-java/trunk/java/spoofax-libs.jar
===================================================================
(Binary files differ)


Property changes on: strc-java/trunk/java/spoofax-libs.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Modified: strc-java/trunk/trans/strj-options.str
===================================================================
--- strc-java/trunk/trans/strj-options.str	2009-07-29 09:52:51 UTC (rev 19791)
+++ strc-java/trunk/trans/strj-options.str	2009-07-29 12:14:19 UTC (rev 19792)
@@ -26,7 +26,7 @@
   ; parse-options(
       strj-options
     )
-  ; if <get-config> "-o"; not(<eq> (<id>, <jify>)) then
+  ; if <get-config> "-o"; base-filename; not(<eq> (<id>, <jify>)) then
       <get-config> "-o"
     ; fatal-err(|"Output file name is not a legal Java name")
     end



From L.C.L.Kats at tudelft.nl  Wed Jul 29 14:17:07 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Jul 2009 12:17:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19793 - LennartKats -
	in sglr-recovery/trunk/permissive-grammars: . trans/make-permissive
Message-ID: <200907291214.n6TCEphI001807@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-29 12:17:06 +0000 (Wed, 29 Jul 2009)
New Revision: 19793

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19793&view=rev

Modified:
   sglr-recovery/trunk/permissive-grammars/Makefile
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile

Log:
Make a jar file.

Changes:

Modified: sglr-recovery/trunk/permissive-grammars/Makefile
===================================================================
--- sglr-recovery/trunk/permissive-grammars/Makefile	2009-07-29 12:14:19 UTC (rev 19792)
+++ sglr-recovery/trunk/permissive-grammars/Makefile	2009-07-29 12:17:06 UTC (rev 19793)
@@ -13,7 +13,7 @@
       $(TABLES) \
       grammars/experimental/Minimal.coredef
 
-java : trans/make-permissive/make-permissive.java
+jar java : trans/make-permissive/make_permissive.jar
 
 # General rules
 
@@ -47,8 +47,8 @@
 trans/make-permissive/make-permissive : .PHONY
 	$(MAKE) -C trans/make-permissive make-permissive
 
-trans/make-permissive/make-permissive.java : .PHONY
-	$(MAKE) -C trans/make-permissive make-permissive.java
+trans/make-permissive/make_permissive.jar : .PHONY
+	$(MAKE) -C trans/make-permissive make_permissive.jar
 	
 %-Permissive.gendef : %.def trans/make-permissive/make-permissive 
 	trans/make-permissive/make-permissive -i $< -o $@ -m `basename $< .def` -mo `basename $@ .gendef` --optimize on

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile	2009-07-29 12:14:19 UTC (rev 19792)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile	2009-07-29 12:17:06 UTC (rev 19793)
@@ -10,13 +10,17 @@
   -la stratego-lib \
   -la stratego-xtc \
   -la stratego-sglr \
+  -la stratego-gpp \
   -la ~/.nix-profile/lib/libstratego-sdf.la
 
 make-permissive : make-permissive.str $(STRS)
 	strc -i $< -m main-make-permissive $(STRCFLAGS)
 
-make-permissive.java : make-permissive.str $(STRS)
-	strj -i $< -m main-make-permissive $(STRCFLAGS)
+java make_permissive.java : make-permissive.str $(STRS)
+	strj -i $< -m main-make-permissive -la stratego-sdf $(STRCFLAGS)
+
+jar make_permissive.jar : make_permissive.java
+	strj-jar -i $<
 	     
 make-permissive.str : $(ASTRS) syntax/Stratego-Attributes-Sdf2.tbl syntax/Comments.pp.af
 	aster --verbose 2 -i $(ASTRS) -I syntax



From L.C.L.Kats at tudelft.nl  Wed Jul 29 14:46:18 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Jul 2009 12:46:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19794 - LennartKats -
	sglr-recovery/trunk/permissive-grammars/trans/make-permissive
	strc-java/trunk strc-java/trunk/tools strc-java/trunk/trans
Message-ID: <200907291244.n6TCi3q3002002@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-29 12:46:18 +0000 (Wed, 29 Jul 2009)
New Revision: 19794

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19794&view=rev

Added:
   strc-java/trunk/tools/
   strc-java/trunk/tools/Makefile.am
   strc-java/trunk/tools/strj-jar
Modified:
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile
   strc-java/trunk/trans/strj-options.str

Log:
Use package names.

Changes:

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile	2009-07-29 12:17:06 UTC (rev 19793)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/Makefile	2009-07-29 12:46:18 UTC (rev 19794)
@@ -17,7 +17,7 @@
 	strc -i $< -m main-make-permissive $(STRCFLAGS)
 
 java make_permissive.java : make-permissive.str $(STRS)
-	strj -i $< -m main-make-permissive -la stratego-sdf $(STRCFLAGS)
+	strj -i $< -m main-make-permissive -p org.strategoxt.permissivegrammars -la stratego-sdf $(STRCFLAGS)
 
 jar make_permissive.jar : make_permissive.java
 	strj-jar -i $<

Added: strc-java/trunk/tools/Makefile.am
===================================================================
--- strc-java/trunk/tools/Makefile.am	                        (rev 0)
+++ strc-java/trunk/tools/Makefile.am	2009-07-29 12:46:18 UTC (rev 19794)
@@ -0,0 +1,5 @@
+include $(top_srcdir)/Makefile.xt
+include $(wildcard *.dep)
+
+bin_SCRIPTS      = strj-jar
+

Added: strc-java/trunk/tools/strj-jar
===================================================================
--- strc-java/trunk/tools/strj-jar	                        (rev 0)
+++ strc-java/trunk/tools/strj-jar	2009-07-29 12:46:18 UTC (rev 19794)
@@ -0,0 +1,75 @@
+#!/bin/bash
+
+## SETTINGS
+
+PACKAGE=
+MAINCLASS=
+CLASSPATH=strategoxt.jar
+JAR=`if which fastjar &>/dev/null; then echo fastjar; else echo jar; fi`
+JAVAC=`if which ecj &>/dev/null; then echo ecj; else echo javac; fi`
+JAVACFLAGS1="-source 5 -nowarn"
+JAVACFLAGS2="-J-Xmx256m -J-Xms100m -J-server -J-XX:+UseParallelGC"
+
+[ "$TEMP" != "" ] || TEMP=/tmp
+TEMPDIR=$TEMP/strj-jar-`date +'%N'`
+
+if which strj-jar &>/dev/null; then
+  CLASSPATH=$(dirname $(which strj-jar))/../share/strc-java/strategoxt.jar
+fi
+
+## PARAMETERS
+
+while P=$1; shift; do
+  if [ "$P" == "-cp" ]; then
+    CLASSPATH="$1"
+    shift
+  elif [ "$P" == "-i" ]; then
+    INPUT="$1"
+    shift
+  elif [ "$P" == "-o" ]; then
+    OUTPUT="$1"
+    shift
+  else
+    echo "Illegal argument: $P" >&2
+    INPUT=
+    break
+  fi
+done
+
+if [ "$INPUT" == "" ]; then
+  echo Usage: strj-jar [-p PACKAGE] [-m MAINCLASS] [-cp CLASSPATH] [-runtimecp CLASSPATH] -i INPUT.java [-o OUTPUT.jar]
+  exit 1
+fi
+
+## PARAMETER VALIDATION
+
+if [ ! -e "$INPUT" ]; then
+  echo "File does not exist: $INPUT" >&2
+  exit 1
+elif [ "$CLASSPATH" == "strategoxt.jar" ] && [ ! -e strategoxt.jar ]; then
+  echo "File not found: strategoxt.jar" >&2
+  exit 1
+elif [ "$OUTPUT" == "" ]; then
+  OUTPUT="`dirname $INPUT`/`basename $INPUT .java`.jar"
+fi
+
+## COMPILATION
+
+if head -n1 make_permissive.java | grep 'package ' >/dev/null; then
+  PACKAGE=`head -n1 make_permissive.java | sed 's/package //; s/;//'`
+  PACKAGEDIR=`echo $PACKAGE | sed 's!\.!/!g'`
+fi
+
+( mkdir -p $TEMPDIR/$PACKAGEDIR
+  echo $JAVAC $JAVACFLAGS1 -cp $CLASSPATH `basename $INPUT`
+  $JAVAC $JAVACFLAGS1 $JAVACFLAGS2 -cp $CLASSPATH $INPUT -d $TEMPDIR/$PACKAGEDIR) || exit 1
+
+## JARRING
+
+echo $JAR cf $OUTPUT -C \$TEMPDIR .
+$JAR cf $OUTPUT -C $TEMPDIR .
+RET=$?
+
+rm -rf $TEMPDIR
+
+exit $RET

Modified: strc-java/trunk/trans/strj-options.str
===================================================================
--- strc-java/trunk/trans/strj-options.str	2009-07-29 12:17:06 UTC (rev 19793)
+++ strc-java/trunk/trans/strj-options.str	2009-07-29 12:46:18 UTC (rev 19794)
@@ -30,6 +30,9 @@
       <get-config> "-o"
     ; fatal-err(|"Output file name is not a legal Java name")
     end
+  ; if <get-config> "--library"; not(<get-config> "-p") then
+      warn(|"No package name specified")
+    end
   
   strj-options =
     input-option



From L.C.L.Kats at tudelft.nl  Wed Jul 29 14:48:31 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Jul 2009 12:48:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19795 - LennartKats -
	strc-java/trunk/tools
Message-ID: <200907291246.n6TCkGe7002033@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-29 12:48:31 +0000 (Wed, 29 Jul 2009)
New Revision: 19795

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19795&view=rev

Modified:
   strc-java/trunk/tools/strj-jar

Log:
Simpler package name handling.

Changes:

Modified: strc-java/trunk/tools/strj-jar
===================================================================
--- strc-java/trunk/tools/strj-jar	2009-07-29 12:46:18 UTC (rev 19794)
+++ strc-java/trunk/tools/strj-jar	2009-07-29 12:48:31 UTC (rev 19795)
@@ -55,14 +55,9 @@
 
 ## COMPILATION
 
-if head -n1 make_permissive.java | grep 'package ' >/dev/null; then
-  PACKAGE=`head -n1 make_permissive.java | sed 's/package //; s/;//'`
-  PACKAGEDIR=`echo $PACKAGE | sed 's!\.!/!g'`
-fi
-
-( mkdir -p $TEMPDIR/$PACKAGEDIR
+( mkdir -p $TEMPDIR
   echo $JAVAC $JAVACFLAGS1 -cp $CLASSPATH `basename $INPUT`
-  $JAVAC $JAVACFLAGS1 $JAVACFLAGS2 -cp $CLASSPATH $INPUT -d $TEMPDIR/$PACKAGEDIR) || exit 1
+  $JAVAC $JAVACFLAGS1 $JAVACFLAGS2 -cp $CLASSPATH $INPUT -d $TEMPDIR) || exit 1
 
 ## JARRING
 



From L.C.L.Kats at tudelft.nl  Wed Jul 29 14:54:55 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Jul 2009 12:54:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19796 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.generator
	org.strategoxt.imp.generator/META-INF
	org.strategoxt.imp.generator/lib
	org.strategoxt.imp.generator/src/sdf2imp
	org.strategoxt.imp.generator/src/sdf2imp/lib
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards
Message-ID: <200907291252.n6TCqeJF002076@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-29 12:54:55 +0000 (Wed, 29 Jul 2009)
New Revision: 19796

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19796&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.generator/lib/
   spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/multi-options.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-jars.str
Removed:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-strategoxt-jar.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.generator/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/options.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java

Log:
Include make_permissive.jar.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/.classpath
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/.classpath	2009-07-29 12:48:31 UTC (rev 19795)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/.classpath	2009-07-29 12:54:55 UTC (rev 19796)
@@ -1,6 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <classpath>
 	<classpathentry kind="src" path="src-gen"/>
+	<classpathentry exported="true" kind="lib" path="lib/make_permissive.jar"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
 	<classpathentry kind="output" path="bin"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF	2009-07-29 12:48:31 UTC (rev 19795)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF	2009-07-29 12:54:55 UTC (rev 19796)
@@ -3,7 +3,8 @@
 Bundle-Name: Spoofax/IMP Metatooling
 Bundle-SymbolicName: org.strategoxt.imp.generator;singleton:=true
 Bundle-Version: 0.1.0.2600
-Bundle-ClassPath: src-gen/
+Bundle-ClassPath: src-gen/,
+ lib/make_permissive.jar
 Require-Bundle: org.spoofax.aterm,
  org.spoofax.jsglr,
  org.spoofax.interpreter.core,
@@ -19,4 +20,5 @@
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
 Bundle-ActivationPolicy: lazy
 Bundle-Vendor: Spoofax.org
-Export-Package: org.strategoxt.imp.generator
+Export-Package: org.strategoxt.imp.generator,
+ org.strategoxt.permissivegrammars

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/build.properties
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/build.properties	2009-07-29 12:48:31 UTC (rev 19795)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/build.properties	2009-07-29 12:54:55 UTC (rev 19796)
@@ -2,4 +2,5 @@
 bin.includes = META-INF/,\
                plugin.xml,\
                bin/,\
-               src-gen/
+               src-gen/,\
+               lib/make_permissive.jar

Added: spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Copied: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/multi-options.str (from rev 19734, dryad/trunk/lib/dryad/lib-ext/multi-options.str)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/multi-options.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/multi-options.str	2009-07-29 12:54:55 UTC (rev 19796)
@@ -0,0 +1,40 @@
+/**
+ * Support for implementing tools that have multiple inputs and outputs.
+ *
+ * @author Martin Bravenboer <martin at cs.uu.nl>
+ */
+module sdf2imp/lib/multi-options // dryad/lib-ext/multi-options
+
+rules
+
+  /**
+   * Handles a command-line option that allows multiple values.
+   *
+   * This strategy is similar to ArgOption, but allows multiple
+   * values. e.g. -i A.java B.java. The values are not allowed to
+   * start with a -, since the - distinguishes values from option 
+   * flags.
+   *
+   * Usage is identical to ArgOption. The handle-value will get
+   * a list of values.
+   *
+   * @type  handle-value  List(String) -> _
+   * @type  is-flag       String ->?
+   */
+  MultiArgOption(is-flag, handle-value, usage) :
+    [flag | options] -> [() | rest]
+    where
+      <is-flag> flag
+
+      ; let splitter =
+              split-fetch-keep(where(explode-string => ['-' | _]))
+              ; \ (args, next-opt, tail) -> (args, [next-opt | tail]) \
+              <+ !(<id>, [])
+
+         in <splitter> options => (args, rest)
+          ; <handle-value> args
+        end
+
+  MultiArgOption(is-flag, label, usage) =
+    "register-usage-info"
+    ; register-usage(usage)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/lib/multi-options.str
___________________________________________________________________
Added: svn:mergeinfo
   + 

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/options.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/options.str	2009-07-29 12:48:31 UTC (rev 19795)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/options.str	2009-07-29 12:54:55 UTC (rev 19796)
@@ -43,14 +43,14 @@
     )
 
   jar-option =
-    ArgOption(
+    MultiArgOption(
       "-jar"
     , rules(JarLocation := <id>);
       if not(file-exists) then
         err(|"File does not exist");
         fail
       end
-    , !"-jar <path>           Set location of strategoxt.jar (optional)"
+    , !"-jar <path>           Set jar files to include (optional)"
     )
     
   start-symbol-option =

Copied: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-jars.str (from rev 19766, spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-strategoxt-jar.str)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-jars.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-jars.str	2009-07-29 12:54:55 UTC (rev 19796)
@@ -0,0 +1,12 @@
+module sdf2imp/project/copy-strategoxt-jar
+
+imports
+  libstratego-lib
+
+strategies
+  
+  copy-strategoxt-jar =
+    if JarLocation then
+      <file-exists <+ mkdir> "aux/";
+      <copy-file> (<id>, "aux/strategoxt.jar")
+    end

Deleted: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-strategoxt-jar.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-strategoxt-jar.str	2009-07-29 12:48:31 UTC (rev 19795)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-strategoxt-jar.str	2009-07-29 12:54:55 UTC (rev 19796)
@@ -1,12 +0,0 @@
-module sdf2imp/project/copy-strategoxt-jar
-
-imports
-  libstratego-lib
-
-strategies
-  
-  copy-strategoxt-jar =
-    if JarLocation then
-      <file-exists <+ mkdir> "aux/";
-      <copy-file> (<id>, "aux/strategoxt.jar")
-    end

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-07-29 12:48:31 UTC (rev 19795)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-07-29 12:54:55 UTC (rev 19796)
@@ -5,35 +5,42 @@
 
 strategies
 
-  // TODO: create proper build.xml
-
   create-build-xml =
     <file-exists> "build.xml"
   <+
     name       := <get-sdf-main-module>;
+    name'      := <lower-case; cify; string-replace(|"_", "-")> name;
     classname  := <get-main-class-name>;
     pkgname    := <BasePackage <+ default-package-name>;
     
     <output-xml-file(|[], "build.xml")>
     %>
     <?xml version="1.0" encoding="UTF-8"?>
-    <project name="<%= name %>" default="buildAll">
+    <project name="<%= name %>" default="all">
     
-        <!-- Project configuration -->
+        <!-- Project directories -->
         <property name="trans" location="trans"/>
         <property name="syntax" location="syntax"/>
         <property name="editor" location="editor"/>
+        <property name="lib" location="lib"/>
         <property name="build" location="bin"/>
         <property name="dist" location="bin/dist"/>
         
+        <!-- Key input modules -->
+        <property name="sdfmodule" value="<%= name %>"/>
+        <property name="esvmodule" value="<%= name %>"/>
+        <property name="strmodule" location="<%= name' %>"/>
+        
         <!-- Environment configuration -->
-        <property name="strategoBinariesLocation" location="${user.home}/.nix-profile/bin"/>
-        <property name="scriptsLocation" location="aux"/>
-        <property name="customImports" value="-I ${trans} -I ${syntax}"/>
+        <property name="build.strategoxt" location="${user.home}/.nix-profile/bin"/>
+        <property name="build.strategoxt.sdf.imports"  value=""/>
+        <property name="build.strategoxt.strc.imports" value=""/>
     
-        <target name="buildAll">
+        <target name="all">
             <parallel>
-                <antcall target="strc"/>
+                <available="${trans}/${strmodule}.str">
+                  <antcall target="strc"/>
+                </available>
                 <antcall target="sdf2table"/>
             </parallel>
             <antcall target="sdf2imp"/>
@@ -43,30 +50,38 @@
             <mkdir dir="${build}"/>
             <mkdir dir="${dist}"/>
         </target>
+        
+        <target name="sdf2imp" depends="sdf2table">
+          <!-- HACK: Trigger the Eclipse builder rather than build it here -->
+          <!-- (Eclipse is needed anyway at this time for distribution)    -->
+          <echo message="  Triggering Eclipse build"/> 
+          <touch file="${editor}/${esvmodule}.esv"/>
+        </target>
     
-        <target name="sdf2table" depends="init,pack-sdf">
-            <apply executable="${scriptsLocation}/applyUsingBasename.sh" dest="${dist}" failonerror="true">
+        <target name="sdf2table" depends="pack-sdf">
+            <apply executable="${build.strategoxt}/sdf2table" dest="${dist}" failonerror="true">
+                <arg value="-i"/>
                 <srcfile/>
-                <arg value=".def"/>
-                <arg value="-i"/>
-                <arg value="-m"/>
-                <arg value="${strategoBinariesLocation}/sdf2table"/>
                 <arg value="-o"/>
                 <targetfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
                 <fileset dir="${build}" includes="*.def"/>
                 <mapper type="glob" from="*.def" to="*.tbl"/>
             </apply>
         </target>
 
         <target name="pack-sdf" depends="init">
-            <apply executable="${strategoBinariesLocation}/pack-sdf" dest="${build}" failonerror="true">
+            <apply executable="${build.strategoxt}/pack-sdf" dest="${build}" failonerror="true">
                 <arg value="-i"/>
                 <srcfile/>
                 <arg value="-o"/>
                 <targetfile/>
                 <arg value="-I"/>
+                <arg value="${trans}"/>
+                <arg value="-I"/>
                 <arg value="${lib}"/>
-                <arg line="${customImports}"/>
+                <arg line="${build.strategoxt.sdf.imports}"/>
                 <fileset dir="${syntax}" includes="*.sdf"/>
                 <mapper type="glob" from="*.sdf" to="*.def"/>
             </apply>
@@ -78,7 +93,7 @@
                 <arg value=".def"/>
                 <arg value="-i"/>
                 <arg value="-m"/>
-                <arg value="${strategoBinariesLocation}/sdf2rtg"/>
+                <arg value="${build.strategoxt}/sdf2rtg"/>
                 <arg value="-o"/>
                 <targetfile/>
                 <fileset dir="${build}" includes="*.def"/>
@@ -92,7 +107,7 @@
                 <arg value=".rtg"/>
                 <arg value="-i"/>
                 <arg value="--module"/>
-                <arg value="${strategoBinariesLocation}/rtg2sig"/>
+                <arg value="${build.strategoxt}/rtg2sig"/>
                 <arg value="-o"/>
                 <targetfile/>
                 <fileset dir="${build}" includes="*.rtg"/>
@@ -102,79 +117,71 @@
     
         <target name="strc" depends="init,rtg2sig">
             <antcall target="strc-call">
-                <param name="additionalStrcParameters" value=""/>
-                <param name="additionalStrcExtension" value="*"/>
+                <param name="build.strategoxt.strc.params" value=""/>
+                <param name="build.strategoxt.strc.extension" value="*"/>
                 <param name="strcExecutable" value="strc"/>
             </antcall>
         </target>
     
         <target name="strj" depends="init,rtg2sig">
             <antcall target="strc-call">
-                <param name="additionalStrcParameters" value=""/>
-                <param name="additionalStrcExtension" value="*.java"/>
+                <param name="build.strategoxt.strc.params" value=""/>
+                <param name="build.strategoxt.strc.extension" value="*.java"/>
                 <param name="strcExecutable" value="strj"/>
             </antcall>
         </target>
         
-        <target name="ctrees" depends="init,rtg2sig">
+        <target name="strji" depends="init,rtg2sig">
             <antcall target="strc-call">
-                <param name="additionalStrcParameters" value="-F"/>
-                <param name="additionalStrcExtension" value="*.ctree"/>
+                <param name="build.strategoxt.strc.params" value="-F --library"/>
+                <param name="build.strategoxt.strc.extension" value="*.ctree"/>
                 <param name="strcExecutable" value="strc"/>
             </antcall>
         </target>
         
         <target name="strc-call" depends="init,rtg2sig">
             <dependset>
-                <srcfilelist dir="${trans}" files="**/*.str"/>   <!-- */-->
+                <srcfilelist dir="${trans}" files="**/*.str"/> <!-- */-->
                 <srcfilelist dir="${build}" files="**/*.str"/> <!-- */-->
                 <targetfileset dir="${dist}" includes="**/*"/> <!-- */-->
             </dependset>
-            <apply executable="${scriptsLocation}/applyUsingBasename.sh" dest="${dist}" failonerror="true">
-                <srcfile/>
+            <apply executable="${build.strategoxt}/{strcExecutable}" dest="${dist}" failonerror="true">
                 <arg value=".str"/>
                 <arg value="-i"/>
-                <arg value="-m"/>
-                <arg value="${strategoBinariesLocation}/{strcExecutable}"/>
+                <srcfile/>
                 <arg value="-o"/>
                 <targetfile/>
-                <arg value="-S"/>    <!-- Silent mode -->
-                <arg value="${additionalStrcParameters}"/>    <!-- Used for Ctree generation -->
+                <arg value="-m"/>
+                <!-- <arg value="-S"/> <!-- Silent mode -->
                 <arg value="-I"/>
+                <arg value="${trans}"/>
+                <arg value="-I"/>
                 <arg value="${build}"/>
                 <arg value="-I"/>
                 <arg value="${lib}"/>
                 <arg value="-I"/>
-                <arg value="${user.home}/.nix-profile/share/"/>
-                <arg value="-I"/>
                 <arg value="${user.home}/.nix-profile/share/java-front"/>
-                <arg value="-I"/>
-                <arg value="${user.home}/.nix-profile/share/sdf/gpp"/>
-                <arg value="-I"/>
-                <arg value="${user.home}/.nix-profile/share/sdf/xml-front"/>
-                <arg value="-I"/>
-                <arg value="${user.home}/.nix-profile/share/sdf/sdf-front"/>
-                <arg value="-I"/>
-                <arg value="${user.home}/.nix-profile/share/sdf/stratego-front"/>
                 <arg value="-la"/>
                 <arg value="stratego-lib"/>
                 <arg value="-la"/>
                 <arg value="${user.home}/.nix-profile/lib/libjava-front.la"/>
-                <!--arg value="-la"/>
-                <arg value="${user.home}/.nix-profile/lib/libstrc.la"/-->
-                <!--arg value="-la"/>
-                <arg value="${user.home}/.nix-profile/lib/libstratego-sglr.la"/-->
+                <arg value="-la"/>
+                <arg value="stratego-sglr"/>
+                <arg value="-la"/>
+                <arg value="stratego-gpp"/>
+                <arg value="-la"/>
+                <arg value="stratego-xtc"/>
                 
-                <arg line="${customImports}"/>
+                <arg line="${build.strategoxt.strc.params}"/>
+                <arg line="${build.strategoxt.strc.imports}"/>
                 
                 <fileset dir="${trans}">
-                    <include name="**/*.str"/> <!-- */ -->
-                    <exclude name="**/*Lib*"/> <!-- */ -->
-                    <exclude name="**/*lib*"/> <!-- */ -->
+                    <include name="${trans}/${strmodule}.str"/>
                 </fileset>
-                <mapper type="glob" from="*.str" to="${additionalStrcExtension}"/>
+                <mapper type="glob" from="*.str" to="${build.strategoxt.strc.extension}"/>
             </apply>
-            <!-- Remove the c files again -->
+            
+            <!-- Remove any intermediate files -->
             <delete>
                 <fileset dir="${dist}">
                     <include name="**/*.c"/>   <!-- */ -->

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-07-29 12:48:31 UTC (rev 19795)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-07-29 12:54:55 UTC (rev 19796)
@@ -1,6 +1,5 @@
 package org.strategoxt.imp.metatooling.wizards;
 
-import java.io.File;
 import java.io.IOException;
 import java.lang.reflect.InvocationTargetException;
 
@@ -24,6 +23,7 @@
 import org.strategoxt.libstratego_lib;
 import org.strategoxt.imp.editors.editorservice.EditorServiceParseController;
 import org.strategoxt.imp.generator.sdf2imp;
+import org.strategoxt.permissivegrammars.make_permissive;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
 import org.strategoxt.lang.Context;
@@ -111,12 +111,8 @@
 		try {
 			agent.setWorkingDir(project.getLocation().toOSString());
 			try {
-				String jar = getStrategoXTJar();
-				if (new File(jar).exists()) {
-					sdf2imp.mainNoExit(context, "-m", name, "-n", packageName, "-e", extensions, "-jar", jar);
-				} else {
-					sdf2imp.mainNoExit(context, "-m", name, "-n", packageName, "-e", extensions);
-				}
+				String jars = getJarFiles();
+				sdf2imp.mainNoExit(context, "-m", name, "-n", packageName, "-e", extensions, "-jar", jars);
 			} catch (StrategoExit e) {
 				if (e.getValue() != 0) {
 					throw new StrategoException("Project builder failed. Log follows\n\n"
@@ -140,8 +136,10 @@
 		}
 	}
 
-	private static String getStrategoXTJar() {
-		return libstratego_lib.class.getProtectionDomain().getCodeSource().getLocation().toExternalForm();
+	private static String getJarFiles() {
+		String strategoxt = libstratego_lib.class.getProtectionDomain().getCodeSource().getLocation().toExternalForm();
+		String makePermissive = make_permissive.class.getProtectionDomain().getCodeSource().getLocation().toExternalForm();
+		return strategoxt + " " + makePermissive;
 	}
 	
 	private void openEditor(IProject project, String filename) {



From L.C.L.Kats at tudelft.nl  Wed Jul 29 15:37:14 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Jul 2009 13:37:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19797 - LennartKats -
	in strc-java/trunk: . .externalToolBuilders java
Message-ID: <200907291334.n6TDYwq7002583@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-29 13:37:14 +0000 (Wed, 29 Jul 2009)
New Revision: 19797

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19797&view=rev

Added:
   strc-java/trunk/.externalToolBuilders/
   strc-java/trunk/.externalToolBuilders/Makefile for strc-java.launch
   strc-java/trunk/java/bin/
Modified:
   strc-java/trunk/.project
   strc-java/trunk/java/Makefile.am

Log:
- Build all Java files to java/bin
- Added an Eclipse builder definition that can launch the Makefile for this project

Changes:

Added: strc-java/trunk/.externalToolBuilders/Makefile for strc-java.launch
===================================================================
--- strc-java/trunk/.externalToolBuilders/Makefile for strc-java.launch	                        (rev 0)
+++ strc-java/trunk/.externalToolBuilders/Makefile for strc-java.launch	2009-07-29 13:37:14 UTC (rev 19797)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ui.externaltools.ProgramBuilderLaunchConfigurationType">
+<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src-gen&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
+<booleanAttribute key="org.eclipse.debug.core.appendEnvironmentVariables" value="true"/>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_BUILD_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;str in metatooling&quot; name=&quot;str in metatooling&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src/syntax&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src/sdf2imp.str&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src/sdf2imp&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="/usr/bin/make"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS" value="full,incremental,"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS" value="java"/>
+<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.generator}"/>
+</launchConfiguration>

Modified: strc-java/trunk/.project
===================================================================
--- strc-java/trunk/.project	2009-07-29 12:54:55 UTC (rev 19796)
+++ strc-java/trunk/.project	2009-07-29 13:37:14 UTC (rev 19797)
@@ -6,6 +6,16 @@
 	</projects>
 	<buildSpec>
 		<buildCommand>
+			<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+			<triggers>full,incremental,</triggers>
+			<arguments>
+				<dictionary>
+					<key>LaunchConfigHandle</key>
+					<value>&lt;project&gt;/.externalToolBuilders/Makefile for strc-java.launch</value>
+				</dictionary>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
 			<name>org.eclipse.jdt.core.javabuilder</name>
 			<arguments>
 			</arguments>

Modified: strc-java/trunk/java/Makefile.am
===================================================================
--- strc-java/trunk/java/Makefile.am	2009-07-29 12:54:55 UTC (rev 19796)
+++ strc-java/trunk/java/Makefile.am	2009-07-29 13:37:14 UTC (rev 19797)
@@ -14,15 +14,13 @@
   runtime/org/strategoxt/lang/compat/override/xtc_compat.java \
   runtime/org/strategoxt/lang/compat/override/strc_compat.java
 
-RUNTIMECLASSES = \
-  $(RUNTIMEJAVAS:.java=.class)
+GENRUNTIMEJAVAS= \
+  $(subst runtime/org/strategoxt/lang/compat/libstrc_compat.java,, \
+  $(subst runtime/org/strategoxt/lang/compat/libstratego_rtg_compat.java,,$(LIBRARYJAVAS)))
 
 COMPILERJAVAS = \
   compiler/org/strategoxt/strj.java
 
-COMPILERCLASSES = \
-  $(COMPILERJAVAS:.java=.class)
-
 LIBRARYJAVAS = \
   lib/org/strategoxt/libstratego_lib.java \
   lib/org/strategoxt/libstratego_xtc.java \
@@ -35,15 +33,10 @@
   lib/org/strategoxt/libstrc.java \
   lib/org/strategoxt/libjava_front.java
 
-LIBRARYCLASSES=$(LIBRARYJAVAS:.java=.class)
+nobase_pkgdata_DATA = $(LIBRARYJAVAS) $(COMPILERJAVAS) .ALLCLASSES
 
-nobase_pkgdata_DATA = $(LIBRARYJAVAS) $(COMPILERJAVAS) .ALLCLASSES $(RUNTIMECLASSES) $(LIBRARYCLASSES) $(COMPILERCLASSES)
-
 CLEANFILES = \
-  $(RUNTIMECLASSES) $(LIBRARYCLASSES) $(COMPILERCLASSES) \
-  $(subst runtime/org/strategoxt/lang/compat/libstrc_compat.java,, \
-  $(subst runtime/org/strategoxt/lang/compat/libstratego_rtg_compat.java,,$(LIBRARYJAVAS))) \
-  $(COMPILERJAVAS) \
+  $(LIBRARYJAVAS) $(COMPILERJAVAS) $(GENRUNTIMEJAVAS) $(wildcard bin/*) \
   runtime/org/strategoxt/lang/compat/override/libstratego_aterm_compat.rtree \
   lib/org/strategoxt/libstratego-xtc.rtree \
   .ALLCLASSES
@@ -56,15 +49,14 @@
 STRJOPTIONS=--library -p org.strategoxt --verbose 3 -O 3
 
 JAR=`if which fastjar >/dev/null; then echo fastjar; else echo jar; fi`
-JARIN1=`find runtime  | grep -E '\.class|\.rtree|\.af|\.tbl' | sed 's!runtime/!-C runtime/ !'`
-JARIN2=`find lib      | grep -E '\.class|\.rtree|\.af|\.tbl' | sed 's!lib/!-C lib/ !'`
-JARIN3=`find compiler | grep -E '\.class|\.rtree|\.af|\.tbl' | sed 's!compiler/!-C compiler/ !'`
+JARIN1=`find runtime  | grep -E '\.rtree|\.af|\.tbl' | sed 's!runtime/!-C runtime/ !'`
+JARIN2=`find lib      | grep -E '\.rtree|\.af|\.tbl' | sed 's!lib/!-C lib/ !'`
+JARIN3=`find compiler | grep -E '\.rtree|\.af|\.tbl' | sed 's!compiler/!-C compiler/ !'`
 
 jar strategoxt.jar : spoofax-libs.jar # .ALLCLASSES $(RUNTIMEJAVAS) $(LIBARYJAVAS) $(COMPILERJAVAS)
 	cp spoofax-libs.jar strategoxt.jar.tmp
-	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF $(JARIN1)
-	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF $(JARIN2)
-	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF $(JARIN3)
+	$(JAR) uf strategoxt.jar.tmp $(JARIN1) $(JARIN2) $(JARIN3)
+	$(JAR) uf strategoxt.jar.tmp META-INF/MANIFEST.MF -C bin .
 	jar i strategoxt.jar.tmp
 	mv strategoxt.jar.tmp strategoxt.jar
 
@@ -93,8 +85,14 @@
 	rm -rf spoofax-libs-tmp
 	mv spoofax-libs.jar.tmp spoofax-libs.jar
 
+.ALLCLASSES : $(RUNTIMEJAVAS) $(LIBARYJAVAS) $(COMPILERJAVAS)
+	$(JAVAC) $(JAVACFLAGS) $(RUNTIMEJAVAS) $(LIBRARYJAVAS) $(COMPILERJAVAS) -d bin && touch $@
+
 ###### LIBRARIES #######
 
+bin/org/strategoxt/libstratego_lib.class : lib/org/strategoxt/libstratego_lib.java
+	$(JAVAC) $< -d bin
+
 lib/org/strategoxt/libstratego_lib.java : $(STRATEGOXT)/share/stratego-lib/libstratego-lib.ctree ../trans/strj
 	../trans/strj -I $(STRATEGOXT)/share/stratego-lib -i $< -o $@ $(STRJOPTIONS)
 
@@ -156,19 +154,13 @@
 compiler/org/strategoxt/strj.java : ../trans/strj.ctree ../trans/strj
 	../trans/strj -i $< -o $@ -p org.strategoxt --verbose 3 -la stratego-lib -la stratego-xtc -la stratego-gpp -la org.strategoxt.libstrc -la org.strategoxt.libjava_front # -D DEFAULT_XTC_REPOSITORY="\"$(REPOSITORY)\""
 
-###### GENERAL #######
+###### EXTERNAL #######
 
-%.class : %.java
-	$(JAVAC) $(JAVACFLAGS) $<
-
 ../trans/strj : .PURPLEPONY
 	$(MAKE) -C ../trans strj
 
 ../trans/strj.ctree : .PURPLEPONY
 	$(MAKE) -C ../trans strj.ctree
 
-.ALLCLASSES : $(RUNTIMEJAVAS) $(LIBARYJAVAS) $(COMPILERJAVAS)
-	$(JAVAC) $(JAVACFLAGS) $(RUNTIMEJAVAS) $(LIBRARYJAVAS) $(COMPILERJAVAS) && touch $@
-
 .PURPLEPONY:
 



From L.C.L.Kats at tudelft.nl  Wed Jul 29 17:09:30 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Jul 2009 15:09:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19798 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.generator
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
	spoofax-imp/trunk/org.strategoxt.imp.metatooling/src
	strc-java/trunk/.externalToolBuilders
Message-ID: <200907291507.n6TF7FMA004033@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-07-29 15:09:30 +0000 (Wed, 29 Jul 2009)
New Revision: 19798

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19798&view=rev

Removed:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/sdf2imp/
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   strc-java/trunk/.externalToolBuilders/Makefile for strc-java.launch

Log:


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/build.properties
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/build.properties	2009-07-29 13:37:14 UTC (rev 19797)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/build.properties	2009-07-29 15:09:30 UTC (rev 19798)
@@ -1,6 +1,8 @@
 output.org.strategoxt.imp.metatooling/ = bin/
+source.includes = src,src-gen/
 bin.includes = META-INF/,\
-               plugin.xml,\
+               includes,\
                bin/,\
-               src-gen/,\
                lib/make_permissive.jar
+src.includes = src/,\
+               src-gen/

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-07-29 13:37:14 UTC (rev 19797)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-07-29 15:09:30 UTC (rev 19798)
@@ -38,7 +38,7 @@
     
         <target name="all">
             <parallel>
-                <available="${trans}/${strmodule}.str">
+                <available file="${trans}/${strmodule}.str">
                   <antcall target="strc"/>
                 </available>
                 <antcall target="sdf2table"/>
@@ -152,7 +152,7 @@
                 <arg value="-o"/>
                 <targetfile/>
                 <arg value="-m"/>
-                <!-- <arg value="-S"/> <!-- Silent mode -->
+                <arg value="-S"/> <!-- (Silent mode) -->
                 <arg value="-I"/>
                 <arg value="${trans}"/>
                 <arg value="-I"/>

Modified: strc-java/trunk/.externalToolBuilders/Makefile for strc-java.launch
===================================================================
--- strc-java/trunk/.externalToolBuilders/Makefile for strc-java.launch	2009-07-29 13:37:14 UTC (rev 19797)
+++ strc-java/trunk/.externalToolBuilders/Makefile for strc-java.launch	2009-07-29 15:09:30 UTC (rev 19798)
@@ -3,7 +3,7 @@
 <stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src-gen&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
 <booleanAttribute key="org.eclipse.debug.core.appendEnvironmentVariables" value="true"/>
 <booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_BUILD_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;str in metatooling&quot; name=&quot;str in metatooling&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src/syntax&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src/sdf2imp.str&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src/sdf2imp&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_BUILD_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;str in metatooling&quot; name=&quot;str in metatooling&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src/sdf2imp&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src/sdf2imp.str&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src/syntax&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/strc-!
 java&quot; type=&quot;4&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="/usr/bin/make"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS" value="full,incremental,"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS" value="java"/>



