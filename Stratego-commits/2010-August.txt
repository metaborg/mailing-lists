From E.Visser at tudelft.nl  Tue Aug  3 10:54:28 2010
From: E.Visser at tudelft.nl (Eelco Visser)
Date: Tue, 03 Aug 2010 08:54:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21134 -
	strategoxt/trunk/strc-core/lib/stratego/strc/parse
Message-ID: <201008030854.o738sVDg024560@proliant.st.ewi.tudelft.nl>

Author: visser
Date: Tue Aug  3 08:54:22 2010
New Revision: 21134
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21134&sc=1

Log:
first attempt at giving meaning to ToTerm nested in ToTerm

Modified:
   strategoxt/trunk/strc-core/lib/stratego/strc/parse/meta-explode.str

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/parse/meta-explode.str
==============================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/parse/meta-explode.str	Mon Aug  2 09:58:00 2010	(r21133)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/parse/meta-explode.str	Tue Aug  3 08:54:22 2010	(r21134)
@@ -76,7 +76,8 @@
    )
 
   trm-explode =
-    TrmMetaVar 
+    ToTermToTerm
+    <+ TrmMetaVar 
     <+ LstMetaVar 
     <+ TrmFromTerm 
     <+ TrmFromApp
@@ -92,10 +93,11 @@
 	  <+ TrmNil 
 	  <+ TrmCons 
 	  <+ TrmOp
-        >) 
+        >)
 
   pretrm-explode = 
-    TrmMetaVar 
+    ToTermToTerm
+    <+ TrmMetaVar 
     <+ LstMetaVar 
     <+ TrmInt 
     <+ TrmStr 
@@ -111,6 +113,25 @@
     <+ TrmCons 
     <+ TrmOp
 
+// match ToTerm nested in ToTerm; take structure literally
+
+  // todo: what do various combinations mean
+  // ToTerm(ToTerm(A(FromTerm(x))))
+  // ToTerm(ToTerm(A(FromTerm(FromTerm(x)))))
+
+  // todo: does not cover all variants of quotation constructors 
+ 
+  ToTermToTerm = 
+    ?ToTerm(t); quoted-trm-explode
+
+  quoted-trm-explode =
+    QuotedOp 
+
+  QuotedOp :
+    op#(ts) -> Op(op, <map(quoted-trm-explode)> ts)
+
+// regular explode
+
   TrmOp :	
     op#(ts) -> Op(op, <map(trm-explode)> ts)
 

From L.C.L.Kats at tudelft.nl  Wed Aug  4 15:10:48 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 04 Aug 2010 13:10:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21135 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
Message-ID: <201008041310.o74DAn8G014270@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Wed Aug  4 13:10:38 2010
New Revision: 21135
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21135&sc=1

Log:
Added additional import for generated concrete syntax (per comment in Spoofax/55)

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	Tue Aug  3 08:54:22 2010	(r21134)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	Wed Aug  4 13:10:38 2010	(r21135)
@@ -434,7 +434,7 @@
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaljarflags}"/>
                 <arg line="${externaldefimport}"/>
-                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot;  --cache-dir &quot;${basedir}/.cache&quot;"/>
             </java>
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <mkdir dir="${build}/trans"/>

From L.C.L.Kats at tudelft.nl  Fri Aug  6 15:22:37 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 06 Aug 2010 13:22:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21138 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
Message-ID: <201008061322.o76DMc4r021586@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Fri Aug  6 13:22:26 2010
New Revision: 21138
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21138&sc=1

Log:
- Spoofax/212: Fix Ant build regression (still doesn't work quite as nicely as before 0.5.1, but at least it supports renaming and control-alt-B remains unaffected)
- Ant build classpath sanity checks

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	Thu Aug  5 13:36:28 2010	(r21137)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	Fri Aug  6 13:22:26 2010	(r21138)
@@ -74,8 +74,8 @@
     <project name="build.generated">
 
         <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
-        <target name="spoofaximp.default.ctree" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-        <target name="spoofaximp.default.jar"   depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar"   depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -139,6 +139,22 @@
                 <arg value="${include}/${sdfmodule}.tbl"/>
             </java>
         </target>
+        
+        <target name="check-classpath">
+            <available classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" property="check-classpath.available"/>
+            <antcall target="check-classpath.helper"/>  
+        </target>
+  
+        <target name="check-classpath.helper" unless="check-classpath.available">
+            <echo level="error" message="Could not load the Spoofax plugin loading classes."/>
+            <echo level="error" message="Make sure it is on the class path."/>
+            <echo level="error" message=""/>               
+            <echo level="error" message="In Eclipse, make sure the Ant builder is configured properly:"/>
+            <echo level="error" message="right-click on build.main.xml, go to Run as, Ant build..., JRE tab,"/>
+            <echo level="error" message="and ensure Run in the same JRE as the workspace is selected"/>
+            <echo level="error" message="alternatively, build the project using Build Project in the Project menu"/>
+            <fail/>
+        </target>
     
         <target name="sdf2table" depends="make-permissive">
             <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
@@ -160,6 +176,12 @@
                 <param name="sdfmodule" value="${metasdfmodule}"/>
                 <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
             </antcall>
+            <antcall target="meta-sdf2table.helper"/>
+        </target>
+        
+        <target name="meta-sdf2table.helper" if="eclipse.running">
+           <eclipse.convertPath fileSystemPath="${include}" property="includeresource" />
+           <eclipse.refreshLocal resource="${includeresource}/${metasdfmodule}.tbl" depth="infinite" />
         </target>
         
         <target name="make-permissive" depends="pack-sdf,copy-sdf">

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str	Thu Aug  5 13:36:28 2010	(r21137)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str	Fri Aug  6 13:22:26 2010	(r21138)
@@ -14,10 +14,19 @@
     <file-exists> $[.externalToolBuilders/[<builder-xml-name>]]
   <+
     // We use plain text since the XML pretty printer has problems with this file.
-    // Also, half the time ${project_name} AND ${project_loc} don't work
-    // (they might only work in the context of the project or whatever),
-    // so we're using a compile-time 'project-name' variable instead.
-    // TODO: maybe ${build_project} works? seems tricky for new projects
+    //
+    // - It seems that when a project is initially being built,
+    //   only ${build_project} works, and ${project_loc} doesn't.  
+    // - Variable ${build_project} prevents the Ant builder
+    //   from detecting that this launch file belongs to the
+    //   corresponding build.main.xml.
+    // - Variable ${project_loc} works better with the Ant builder,
+    //   but causes it to ask which project to build if there
+    //   are multiple projects
+    // - PROJECT_ATTR seems to be ignored
+    //
+    // The property org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY may be optional,
+    // at least for Ant builds.
     
     <output-text-file(|[".externalToolBuilders"], <builder-xml-name>)> 
 $[ <?xml version="1.0" encoding="UTF-8" standalone="no"?>

From L.C.L.Kats at tudelft.nl  Fri Aug  6 15:29:22 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 06 Aug 2010 13:29:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21139 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.aster
	org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.pp org....
Message-ID: <201008061329.o76DTNkk021654@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Fri Aug  6 13:29:11 2010
New Revision: 21139
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21139&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	Fri Aug  6 13:22:26 2010	(r21138)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	Fri Aug  6 13:29:11 2010	(r21139)
@@ -3,8 +3,8 @@
 <project name="build.generated">
 
         <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
-        <target name="spoofaximp.default.ctree" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-        <target name="spoofaximp.default.jar" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -68,6 +68,22 @@
                 <arg value="${include}/${sdfmodule}.tbl"/>
             </java>
         </target>
+        
+        <target name="check-classpath">
+            <available classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" property="check-classpath.available"/>
+            <antcall target="check-classpath.helper"/>  
+        </target>
+  
+        <target name="check-classpath.helper" unless="check-classpath.available">
+            <echo level="error" message="Could not load the Spoofax plugin loading classes."/>
+            <echo level="error" message="Make sure it is on the class path."/>
+            <echo level="error" message=""/>               
+            <echo level="error" message="In Eclipse, make sure the Ant builder is configured properly:"/>
+            <echo level="error" message="right-click on build.main.xml, go to Run as, Ant build..., JRE tab,"/>
+            <echo level="error" message="and ensure Run in the same JRE as the workspace is selected"/>
+            <echo level="error" message="alternatively, build the project using Build Project in the Project menu"/>
+            <fail/>
+        </target>
     
         <target name="sdf2table" depends="make-permissive">
             <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
@@ -89,6 +105,12 @@
                 <param name="sdfmodule" value="${metasdfmodule}"/>
                 <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
             </antcall>
+            <antcall target="meta-sdf2table.helper"/>
+        </target>
+        
+        <target name="meta-sdf2table.helper" if="eclipse.running">
+           <eclipse.convertPath fileSystemPath="${include}" property="includeresource"/>
+           <eclipse.refreshLocal resource="${includeresource}/${metasdfmodule}.tbl" depth="infinite"/>
         </target>
         
         <target name="make-permissive" depends="pack-sdf,copy-sdf">
@@ -363,7 +385,7 @@
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaljarflags}"/>
                 <arg line="${externaldefimport}"/>
-                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot;  --cache-dir &quot;${basedir}/.cache&quot;"/>
             </java>
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <mkdir dir="${build}/trans"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	Fri Aug  6 13:22:26 2010	(r21138)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	Fri Aug  6 13:29:11 2010	(r21139)
@@ -3,8 +3,8 @@
 <project name="build.generated">
 
         <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
-        <target name="spoofaximp.default.ctree" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-        <target name="spoofaximp.default.jar" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -68,6 +68,22 @@
                 <arg value="${include}/${sdfmodule}.tbl"/>
             </java>
         </target>
+        
+        <target name="check-classpath">
+            <available classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" property="check-classpath.available"/>
+            <antcall target="check-classpath.helper"/>  
+        </target>
+  
+        <target name="check-classpath.helper" unless="check-classpath.available">
+            <echo level="error" message="Could not load the Spoofax plugin loading classes."/>
+            <echo level="error" message="Make sure it is on the class path."/>
+            <echo level="error" message=""/>               
+            <echo level="error" message="In Eclipse, make sure the Ant builder is configured properly:"/>
+            <echo level="error" message="right-click on build.main.xml, go to Run as, Ant build..., JRE tab,"/>
+            <echo level="error" message="and ensure Run in the same JRE as the workspace is selected"/>
+            <echo level="error" message="alternatively, build the project using Build Project in the Project menu"/>
+            <fail/>
+        </target>
     
         <target name="sdf2table" depends="make-permissive">
             <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
@@ -89,6 +105,12 @@
                 <param name="sdfmodule" value="${metasdfmodule}"/>
                 <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
             </antcall>
+            <antcall target="meta-sdf2table.helper"/>
+        </target>
+        
+        <target name="meta-sdf2table.helper" if="eclipse.running">
+           <eclipse.convertPath fileSystemPath="${include}" property="includeresource"/>
+           <eclipse.refreshLocal resource="${includeresource}/${metasdfmodule}.tbl" depth="infinite"/>
         </target>
         
         <target name="make-permissive" depends="pack-sdf,copy-sdf">
@@ -363,7 +385,7 @@
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaljarflags}"/>
                 <arg line="${externaldefimport}"/>
-                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot;  --cache-dir &quot;${basedir}/.cache&quot;"/>
             </java>
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <mkdir dir="${build}/trans"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	Fri Aug  6 13:22:26 2010	(r21138)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	Fri Aug  6 13:29:11 2010	(r21139)
@@ -3,8 +3,8 @@
 <project name="build.generated">
 
         <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
-        <target name="spoofaximp.default.ctree" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-        <target name="spoofaximp.default.jar" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -68,6 +68,22 @@
                 <arg value="${include}/${sdfmodule}.tbl"/>
             </java>
         </target>
+        
+        <target name="check-classpath">
+            <available classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" property="check-classpath.available"/>
+            <antcall target="check-classpath.helper"/>  
+        </target>
+  
+        <target name="check-classpath.helper" unless="check-classpath.available">
+            <echo level="error" message="Could not load the Spoofax plugin loading classes."/>
+            <echo level="error" message="Make sure it is on the class path."/>
+            <echo level="error" message=""/>               
+            <echo level="error" message="In Eclipse, make sure the Ant builder is configured properly:"/>
+            <echo level="error" message="right-click on build.main.xml, go to Run as, Ant build..., JRE tab,"/>
+            <echo level="error" message="and ensure Run in the same JRE as the workspace is selected"/>
+            <echo level="error" message="alternatively, build the project using Build Project in the Project menu"/>
+            <fail/>
+        </target>
     
         <target name="sdf2table" depends="make-permissive">
             <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
@@ -89,6 +105,12 @@
                 <param name="sdfmodule" value="${metasdfmodule}"/>
                 <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
             </antcall>
+            <antcall target="meta-sdf2table.helper"/>
+        </target>
+        
+        <target name="meta-sdf2table.helper" if="eclipse.running">
+           <eclipse.convertPath fileSystemPath="${include}" property="includeresource"/>
+           <eclipse.refreshLocal resource="${includeresource}/${metasdfmodule}.tbl" depth="infinite"/>
         </target>
         
         <target name="make-permissive" depends="pack-sdf,copy-sdf">
@@ -363,7 +385,7 @@
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaljarflags}"/>
                 <arg line="${externaldefimport}"/>
-                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot;  --cache-dir &quot;${basedir}/.cache&quot;"/>
             </java>
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <mkdir dir="${build}/trans"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	Fri Aug  6 13:22:26 2010	(r21138)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	Fri Aug  6 13:29:11 2010	(r21139)
@@ -3,8 +3,8 @@
 <project name="build.generated">
 
         <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
-        <target name="spoofaximp.default.ctree" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-        <target name="spoofaximp.default.jar" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -68,6 +68,22 @@
                 <arg value="${include}/${sdfmodule}.tbl"/>
             </java>
         </target>
+        
+        <target name="check-classpath">
+            <available classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" property="check-classpath.available"/>
+            <antcall target="check-classpath.helper"/>  
+        </target>
+  
+        <target name="check-classpath.helper" unless="check-classpath.available">
+            <echo level="error" message="Could not load the Spoofax plugin loading classes."/>
+            <echo level="error" message="Make sure it is on the class path."/>
+            <echo level="error" message=""/>               
+            <echo level="error" message="In Eclipse, make sure the Ant builder is configured properly:"/>
+            <echo level="error" message="right-click on build.main.xml, go to Run as, Ant build..., JRE tab,"/>
+            <echo level="error" message="and ensure Run in the same JRE as the workspace is selected"/>
+            <echo level="error" message="alternatively, build the project using Build Project in the Project menu"/>
+            <fail/>
+        </target>
     
         <target name="sdf2table" depends="make-permissive">
             <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
@@ -89,6 +105,12 @@
                 <param name="sdfmodule" value="${metasdfmodule}"/>
                 <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
             </antcall>
+            <antcall target="meta-sdf2table.helper"/>
+        </target>
+        
+        <target name="meta-sdf2table.helper" if="eclipse.running">
+           <eclipse.convertPath fileSystemPath="${include}" property="includeresource"/>
+           <eclipse.refreshLocal resource="${includeresource}/${metasdfmodule}.tbl" depth="infinite"/>
         </target>
         
         <target name="make-permissive" depends="pack-sdf,copy-sdf">
@@ -363,7 +385,7 @@
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaljarflags}"/>
                 <arg line="${externaldefimport}"/>
-                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot;  --cache-dir &quot;${basedir}/.cache&quot;"/>
             </java>
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <mkdir dir="${build}/trans"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	Fri Aug  6 13:22:26 2010	(r21138)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	Fri Aug  6 13:29:11 2010	(r21139)
@@ -3,8 +3,8 @@
 <project name="build.generated">
 
         <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
-        <target name="spoofaximp.default.ctree" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-        <target name="spoofaximp.default.jar" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -68,6 +68,22 @@
                 <arg value="${include}/${sdfmodule}.tbl"/>
             </java>
         </target>
+        
+        <target name="check-classpath">
+            <available classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" property="check-classpath.available"/>
+            <antcall target="check-classpath.helper"/>  
+        </target>
+  
+        <target name="check-classpath.helper" unless="check-classpath.available">
+            <echo level="error" message="Could not load the Spoofax plugin loading classes."/>
+            <echo level="error" message="Make sure it is on the class path."/>
+            <echo level="error" message=""/>               
+            <echo level="error" message="In Eclipse, make sure the Ant builder is configured properly:"/>
+            <echo level="error" message="right-click on build.main.xml, go to Run as, Ant build..., JRE tab,"/>
+            <echo level="error" message="and ensure Run in the same JRE as the workspace is selected"/>
+            <echo level="error" message="alternatively, build the project using Build Project in the Project menu"/>
+            <fail/>
+        </target>
     
         <target name="sdf2table" depends="make-permissive">
             <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
@@ -89,6 +105,12 @@
                 <param name="sdfmodule" value="${metasdfmodule}"/>
                 <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
             </antcall>
+            <antcall target="meta-sdf2table.helper"/>
+        </target>
+        
+        <target name="meta-sdf2table.helper" if="eclipse.running">
+           <eclipse.convertPath fileSystemPath="${include}" property="includeresource"/>
+           <eclipse.refreshLocal resource="${includeresource}/${metasdfmodule}.tbl" depth="infinite"/>
         </target>
         
         <target name="make-permissive" depends="pack-sdf,copy-sdf">
@@ -363,7 +385,7 @@
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaljarflags}"/>
                 <arg line="${externaldefimport}"/>
-                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot;  --cache-dir &quot;${basedir}/.cache&quot;"/>
             </java>
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <mkdir dir="${build}/trans"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	Fri Aug  6 13:22:26 2010	(r21138)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	Fri Aug  6 13:29:11 2010	(r21139)
@@ -3,8 +3,8 @@
 <project name="build.generated">
 
         <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
-        <target name="spoofaximp.default.ctree" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-        <target name="spoofaximp.default.jar" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -68,6 +68,22 @@
                 <arg value="${include}/${sdfmodule}.tbl"/>
             </java>
         </target>
+        
+        <target name="check-classpath">
+            <available classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" property="check-classpath.available"/>
+            <antcall target="check-classpath.helper"/>  
+        </target>
+  
+        <target name="check-classpath.helper" unless="check-classpath.available">
+            <echo level="error" message="Could not load the Spoofax plugin loading classes."/>
+            <echo level="error" message="Make sure it is on the class path."/>
+            <echo level="error" message=""/>               
+            <echo level="error" message="In Eclipse, make sure the Ant builder is configured properly:"/>
+            <echo level="error" message="right-click on build.main.xml, go to Run as, Ant build..., JRE tab,"/>
+            <echo level="error" message="and ensure Run in the same JRE as the workspace is selected"/>
+            <echo level="error" message="alternatively, build the project using Build Project in the Project menu"/>
+            <fail/>
+        </target>
     
         <target name="sdf2table" depends="make-permissive">
             <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
@@ -89,6 +105,12 @@
                 <param name="sdfmodule" value="${metasdfmodule}"/>
                 <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
             </antcall>
+            <antcall target="meta-sdf2table.helper"/>
+        </target>
+        
+        <target name="meta-sdf2table.helper" if="eclipse.running">
+           <eclipse.convertPath fileSystemPath="${include}" property="includeresource"/>
+           <eclipse.refreshLocal resource="${includeresource}/${metasdfmodule}.tbl" depth="infinite"/>
         </target>
         
         <target name="make-permissive" depends="pack-sdf,copy-sdf">
@@ -363,7 +385,7 @@
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaljarflags}"/>
                 <arg line="${externaldefimport}"/>
-                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot;  --cache-dir &quot;${basedir}/.cache&quot;"/>
             </java>
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <mkdir dir="${build}/trans"/>

From L.C.L.Kats at tudelft.nl  Fri Aug  6 15:34:42 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 06 Aug 2010 13:34:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21140 - in
	spoofax-imp/trunk: org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards
Message-ID: <201008061334.o76DYhJj021693@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Fri Aug  6 13:34:30 2010
New Revision: 21140
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21140&sc=1

Log:
Additional update for Spoofax/212: Fix Ant build regression

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str	Fri Aug  6 13:29:11 2010	(r21139)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str	Fri Aug  6 13:34:30 2010	(r21140)
@@ -25,6 +25,9 @@
     //   are multiple projects
     // - PROJECT_ATTR seems to be ignored
     //
+    // To somewhat accomodate for this, we change the variable to project_loc
+    // after the project has been initially built in NewEditorWizard.
+    //
     // The property org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY may be optional,
     // at least for Ant builds.
     

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	Fri Aug  6 13:29:11 2010	(r21139)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	Fri Aug  6 13:34:30 2010	(r21140)
@@ -2,9 +2,14 @@
 
 import static org.eclipse.core.resources.IResource.DEPTH_INFINITE;
 
+import java.io.ByteArrayInputStream;
 import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.Reader;
 import java.lang.reflect.InvocationTargetException;
 
+import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.IProject;
 import org.eclipse.core.resources.IResource;
 import org.eclipse.core.resources.IWorkspace;
@@ -42,7 +47,7 @@
  * @author Lennart Kats <lennart add lclnet.nl>
  */
 public class NewEditorWizard extends Wizard implements INewWizard {
-
+	
 	private final NewEditorWizardPage input = new NewEditorWizardPage();
 	
 	private IProject lastProject;
@@ -159,6 +164,7 @@
 				
 				monitor.setTaskName("Building and loading example editor");
 				project.build(IncrementalProjectBuilder.FULL_BUILD, null);
+				updateProjectBuilder(project, languageName);
 				monitor.worked(6);
 
 				// TODO: Optimize - don't reload editor (already done from Ant file)
@@ -187,8 +193,32 @@
 		refreshProject(project);
 		monitor.done();
 	}
+	
+	/**
+	 * Change the project build configuration to work with the Ant builder after the project
+	 * has been initially built (see create-builder-xml.str).
+	 */
+	private static void updateProjectBuilder(IProject project, String languageName) throws IOException, CoreException {
+		IFile builderConfig = project.getFile(".externalToolBuilders/" + languageName + " build.main.xml.launch");
+		String contents = readString(builderConfig.getContents(true));
+		contents = contents.replaceAll("build_project", "project_loc");
+		builderConfig.setContents(new ByteArrayInputStream(contents.getBytes()), true, false, null);
+	}
+
+	private static String readString(InputStream stream) throws IOException {
+		char[] buffer = new char[2048];
+        StringBuilder result = new StringBuilder();
+		Reader reader = new InputStreamReader(stream);
+		try {
+	        for (int read = 0; read != -1; read = reader.read(buffer))
+	            result.append(buffer, 0, read);
+	        return result.toString();
+		} finally {
+			reader.close();
+		}
+	}
 
-	private void refreshProject(final IProject project) {
+	private static void refreshProject(final IProject project) {
 		// We schedule a project refresh to make all ".generated" files readable
 		Job job = new Job("Refreshing project") {
 			@Override

From L.C.L.Kats at tudelft.nl  Fri Aug  6 15:35:13 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 06 Aug 2010 13:35:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21141 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.editorservice/META-INF
	org.strategoxt.imp.editors.editorservice/editor or...
Message-ID: <201008061335.o76DZDmZ021708@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Fri Aug  6 13:35:11 2010
New Revision: 21141
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21141&sc=1

Log:
Some work on editor services for ESV files

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Syntax.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/editorservice.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/Common.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/META-INF/MANIFEST.MF
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/META-INF/MANIFEST.MF	Fri Aug  6 13:34:30 2010	(r21140)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/META-INF/MANIFEST.MF	Fri Aug  6 13:35:11 2010	(r21141)
@@ -6,15 +6,17 @@
 Bundle-Activator: org.strategoxt.imp.editors.editorservice.Activator
 Import-Package: org.osgi.framework;version="1.3.0"
 Require-Bundle: org.eclipse.core.runtime,
-  org.eclipse.core.resources,
-  org.eclipse.imp.runtime,
-  org.eclipse.ui,
-  lpg.runtime,
-  org.eclipse.jface.text,
-  org.eclipse.ui.editors,
-  org.eclipse.ui.workbench.texteditor,
-  org.strategoxt.imp.runtime,
-  org.spoofax.aterm,
-  org.spoofax.jsglr
+ org.eclipse.core.resources,
+ org.eclipse.imp.runtime,
+ org.eclipse.ui,
+ lpg.runtime,
+ org.eclipse.jface.text,
+ org.eclipse.ui.editors,
+ org.eclipse.ui.workbench.texteditor,
+ org.strategoxt.imp.runtime,
+ org.spoofax.aterm,
+ org.spoofax.jsglr,
+ org.spoofax.interpreter.core,
+ org.strategoxt.strj
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
 Export-Package: org.strategoxt.imp.editors.editorservice

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.main.xml	Fri Aug  6 13:34:30 2010	(r21140)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.main.xml	Fri Aug  6 13:35:11 2010	(r21141)
@@ -20,7 +20,8 @@
         <property name="build.sdf.imports" value=""/>
         <property name="build.stratego.args" value="--library
                         -I &quot;${trans}&quot; -I &quot;${basedir}&quot;
-                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm"/>
+                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm
+                        -la stratego-sdf"/>
         
         <property name="externaldef" location="../org.strategoxt.imp.generator/src/syntax/EditorService.def"/>
         <!-- External .def and .jar locations
@@ -37,5 +38,5 @@
         <import file="build.generated.xml"/>
     
         <!-- Main target -->
-        <target name="all" depends="utils-files,sdf2table,stratego.ctree,sdf2imp"/>
+        <target name="all" depends="spoofaximp.default.jar"/>
     </project>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Builders.esv	Fri Aug  6 13:34:30 2010	(r21140)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Builders.esv	Fri Aug  6 13:35:11 2010	(r21141)
@@ -3,10 +3,14 @@
 imports
   EditorService-Builders.generated
 
-analysis
+builders
   
+  provider : include/editorservice.jar
 
-
+  observer : editor-analyze
+  
+  builder : "Show abstract syntax (for selection" =
+    generate-aterm (openeditor) (realtime) (meta) 
 
 // This file can be used for custom analysis rules.
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv	Fri Aug  6 13:34:30 2010	(r21140)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv	Fri Aug  6 13:35:11 2010	(r21141)
@@ -3,6 +3,12 @@
 imports EditorService-Completions.generated
 
 completions
+
+  completion proposer:
+    editor-complete
+
+  completion trigger:
+    "(completion\s*template|start\s*symbols)\s*:\s+"
   
   completion template:
     "completion template" ":\n\t" <prefix> " \"c\"" (blank)
@@ -22,11 +28,14 @@
   completion template:
   	"observer" ": " <s> (blank)
   
+  completion template : BuilderRule =
+    "provider" ": " <provider.jar> (blank)
+  
   completion template:
   	"builder" ": " <"caption"> " = " <s> (blank)
   
   completion template:
-    "builder" "caption: " <"caption"> (blank)
+    "builder caption" ": " <"caption"> (blank)
   
   completion template:
   	"unmanaged table" ": " <prefix> "*" (blank)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Syntax.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Syntax.esv	Fri Aug  6 13:34:30 2010	(r21140)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Syntax.esv	Fri Aug  6 13:35:11 2010	(r21141)
@@ -10,4 +10,4 @@
     ":" "=" ","
     
   fences        :
-    ( ) // (just for annotations)
\ No newline at end of file
+    ( ) < > // annotations and placeholders
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/editorservice.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/editorservice.str	Fri Aug  6 13:34:30 2010	(r21140)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/editorservice.str	Fri Aug  6 13:35:11 2010	(r21141)
@@ -3,4 +3,64 @@
 // TODO: warn about multi-char highlighted brackets
 // TODO: check if provider/imported/etc. files exist
 // TODO: check if there is _any_ provider for observer etc.
-// TODO: check if the provider is not a .str
\ No newline at end of file
+// TODO: check if the provider is not a .str
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-sdf
+  lib/editor-common.generated
+  include/EditorService
+
+rules
+  
+  editor-analyze:
+    (ast, path, project-path) -> (error*, warning*, [])
+    with
+      <chdir> project-path;
+      <record-all-sdfs> ".";
+      error*   := [];
+      warning* := []
+  
+  generate-aterm:
+    (selected, position, ast, path, project-path) -> (filename, selected)
+    where
+      filename  := <guarantee-extension(|"aterm")> path
+
+  editor-complete:
+    (Sort(x), position, ast, path, project-path) -> proposals
+    where
+      proposals := <all-keys-SortDeclaration>
+
+  editor-complete:
+    (CompletionTemplate(COMPLETION(_), _, _), position, ast, path, project-path) -> proposals
+    where
+      proposals := <map(<conc-strings> (<id>, " = "))> <all-keys-SortDeclaration>
+  
+  record-all-sdfs =
+    <readdir> ".";
+    list-loop(
+      if <isdir> <filemode> then
+        chdir;
+        record-all-sdfs;
+        <chdir> ".."
+      else
+        try(record-sdf)
+      end
+    )
+  
+  record-sdf:
+    filename -> filename
+    where
+      <has-extension(|"sdf")> filename;
+      <open-import(abspath, parse-sdf-module-file, topdown(try(record-prod)))> filename
+   
+  record-prod:
+    prod @ prod(lhs, sort, attrs) -> <id>
+    where
+      !sort;
+      try(?cf(<id>) + ?lex(<id>));
+      repeat(?label(_, <id>));
+      (?sort(x) + ?parameterized-sort(x, _))
+    with
+      rules(SortDeclaration: x -> x)
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml	Fri Aug  6 13:34:30 2010	(r21140)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml	Fri Aug  6 13:35:11 2010	(r21141)
@@ -38,5 +38,5 @@
         <import file="build.generated.xml"/>
     
         <!-- Main target -->
-        <target name="all" depends="utils-files,sdf2table,stratego.jar,sdf2imp,refresh"/>
+        <target name="all" depends="sdf2table,stratego.jar,sdf2imp,refresh"/>
     </project>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv	Fri Aug  6 13:34:30 2010	(r21140)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv	Fri Aug  6 13:35:11 2010	(r21141)
@@ -6,6 +6,9 @@
     "->\s*[A-Za-z0-9]+\s*\{"
 
   completion trigger:
+    "->\s*[A-Za-z0-9]+\s*\{[^}]+, "
+
+  completion trigger:
     "->[\ \t]+"
 
   completion proposer:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	Fri Aug  6 13:34:30 2010	(r21140)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	Fri Aug  6 13:35:11 2010	(r21141)
@@ -68,7 +68,7 @@
     where
       not(<occurrences(?sort(_))> p => 1; occurrences(?lit(_)) => 0);
       if !a* => attrs(a'*) then
-        not(<one(term(default(appl(unquoted("cons"), [id]))))> a'*);
+        not(<one(term(default(appl(unquoted("cons" + "ast"), [id]))))> a'*);
         not(<one(bracket() + reject())> a'*);
         not(!s; (sort("Keyword") + sort("\"Keyword\""))); 
         target := a*

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/Common.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/Common.sdf	Fri Aug  6 13:34:30 2010	(r21140)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/Common.sdf	Fri Aug  6 13:35:11 2010	(r21141)
@@ -51,6 +51,9 @@
     Id     -> Sort {cons("Sort")}
     Id "*" -> Sort {cons("ListSort")}
     STRING -> String {cons("String")}
+    
+    %% nice, but makes C-SGLR fail to parse create-builders-desciptor.str properly
+    %%        -> String {recover, avoid, ast("String(\"\")")}
 
     Sort "." "_" -> Sort {bracket}
     

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf	Fri Aug  6 13:34:30 2010	(r21140)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf	Fri Aug  6 13:35:11 2010	(r21141)
@@ -24,9 +24,12 @@
 
     "completion" "keyword" ":" PropertyValue CompletionAnno -> SemanticRule {cons("CompletionKeyword")}
     
-    "completion" "template" ":" PropertyValue CompletionPart+ CompletionAnno -> SemanticRule {cons("CompletionTemplate")}
+    "completion" "template" ":" String CompletionPart+ CompletionAnno -> SemanticRule {cons("CompletionTemplate")}
     
-    "completion" "template" ":" Sort "=" PropertyValue CompletionPart+ CompletionAnno -> SemanticRule {cons("CompletionTemplateWithSort")}
+    %% Deprecated: conflicts with content completion
+    "completion" "template" ":" PropertyValue CompletionPart+ CompletionAnno -> SemanticRule {cons("CompletionTemplate"), avoid, deprecated("Add quotes to the starting literal")}
+    
+    "completion" "template" ":" Sort "=" String CompletionPart+ CompletionAnno -> SemanticRule {cons("CompletionTemplateWithSort")}
 
     "completion" "trigger" ":" PropertyValue CompletionAnno -> SemanticRule {cons("CompletionTrigger")}
   
@@ -49,6 +52,8 @@
     "(blank)"    -> CompletionAnno {cons("Blank")}
     "(blank)"    -> PropertyValue {reject}
     "(disable)"  -> PropertyValue {reject}
+    "completion" -> PropertyValue {reject}
+    "identifier" -> PropertyValue {reject}
 
   lexical syntax
     

From L.C.L.Kats at tudelft.nl  Fri Aug  6 15:38:47 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 06 Aug 2010 13:38:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21142 - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	. dynamicloading parser parser/ast services
Message-ID: <201008061338.o76DclMB021725@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Fri Aug  6 13:38:42 2010
New Revision: 21142
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21142&sc=1

Log:
Fixed Spoofax/150: Recover rules do not result in an error, and other minor problems.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ContentProposerFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstAnnoImploder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java	Fri Aug  6 13:35:11 2010	(r21141)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java	Fri Aug  6 13:38:42 2010	(r21142)
@@ -75,8 +75,11 @@
 		assert !(parseController instanceof SGLRParseController)
 			|| !((SGLRParseController) parseController).isReplaced();
 		
-		if (parseController instanceof SGLRParseController)
+		if (parseController instanceof SGLRParseController
+				&& ((SGLRParseController) parseController).getEditor() != null) {
 			return ((SGLRParseController) parseController).getEditor();
+		}
+		
 		if (parseController instanceof DynamicParseController) {
 			EditorState result = ((DynamicParseController) parseController).getLastEditor();
 			if (result != null) return result;
@@ -93,8 +96,6 @@
 					IWorkbenchPart editor = reference.getPart(false);
 					if (editor instanceof UniversalEditor
 							&& ((UniversalEditor) editor).getParseController() == parseController) {
-						// HACK: showChangeInformation(false)
-						((UniversalEditor) editor).showChangeInformation(false);
 						return new EditorState((UniversalEditor) editor);
 					}
 				}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ContentProposerFactory.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ContentProposerFactory.java	Fri Aug  6 13:35:11 2010	(r21141)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ContentProposerFactory.java	Fri Aug  6 13:38:42 2010	(r21142)
@@ -10,6 +10,7 @@
 import java.util.regex.Pattern;
 import java.util.regex.PatternSyntaxException;
 
+import org.eclipse.imp.editor.UniversalEditor;
 import org.eclipse.imp.parser.IParseController;
 import org.eclipse.imp.services.IContentProposer;
 import org.eclipse.jface.text.source.ISourceViewer;
@@ -71,9 +72,15 @@
 
 	private static void registerListener(Descriptor descriptor, SGLRParseController controller)
 			throws BadDescriptorException {
-		ISourceViewer viewer = controller.getEditor().getEditor().getServiceControllerManager().getSourceViewer();
-		Set<Pattern> triggers = readTriggers(descriptor);
-		ContentProposerListener.register(triggers, viewer);
+		
+		try {
+			UniversalEditor editor = controller.getEditor().getEditor();
+			ISourceViewer viewer = editor.getServiceControllerManager().getSourceViewer();
+			Set<Pattern> triggers = readTriggers(descriptor);
+			ContentProposerListener.register(triggers, viewer);
+		} catch (RuntimeException e) {
+			Environment.logWarning("Exception while trying to register content proposer listener", e);
+		}
 	}
 
 	private static Set<String> readCompletionKeywords(Descriptor descriptor) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java	Fri Aug  6 13:35:11 2010	(r21141)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java	Fri Aug  6 13:38:42 2010	(r21142)
@@ -152,11 +152,8 @@
 		super.reinitialize(newDescriptor);
 		isReinitialized = true;
 		if (lastEditor != null) {
+			initializeEagerServices(getWrapped());
 			lastEditor.scheduleParserUpdate(REINIT_PARSE_DELAY);
-			Descriptor descriptor = Environment.getDescriptor(getLanguage());
-			ContentProposerFactory.eagerInit(descriptor, getWrapped(), lastEditor);
-			AutoEditStrategyFactory.eagerInit(descriptor, getWrapped(), lastEditor);
-			OnSaveServiceFactory.eagerInit(descriptor, getWrapped(), lastEditor);
 		}
 	}
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	Fri Aug  6 13:35:11 2010	(r21141)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	Fri Aug  6 13:38:42 2010	(r21142)
@@ -31,6 +31,7 @@
 import org.strategoxt.imp.runtime.parser.ast.AsfixAnalyzer;
 import org.strategoxt.imp.runtime.parser.ast.AstMessageHandler;
 import org.strategoxt.imp.runtime.parser.ast.MarkerSignature;
+import org.strategoxt.imp.runtime.parser.ast.ProductionAttributeReader;
 import org.strategoxt.imp.runtime.parser.tokens.SGLRTokenizer;
 import org.strategoxt.imp.runtime.parser.tokens.TokenKind;
 import org.strategoxt.imp.runtime.services.StrategoObserver;
@@ -96,6 +97,8 @@
 	
 	private final AstMessageHandler handler = new AstMessageHandler(AstMessageHandler.PARSE_MARKER_TYPE);
 	
+	private final ProductionAttributeReader prodReader = new ProductionAttributeReader();
+
 	private final SGLRParseController source;
 	
 	private volatile boolean isRecoveryFailed = true;
@@ -291,22 +294,30 @@
 			}
 		}
 		
-		//post visit: report error				
-		if (isErrorProduction(attrs, WATER) || isRejectProduction(attrs)) {
+		//post visit: report error
+		String cons = prodReader.getConsAttribute(attrs);
+		if (WATER.equals(cons)
+				|| prodReader.getAttribute(attrs, "reject") != null) {
 			IToken token = tokenizer.makeErrorToken(startOffset, offset - 1);
 			tokenizer.changeTokenKinds(startOffset, offset - 1, TokenKind.TK_LAYOUT, TokenKind.TK_ERROR);
 			reportErrorAtTokens(token, token, UNEXPECTED_TOKEN_PREFIX + token + UNEXPECTED_TOKEN_POSTFIX);
-		} else if (isErrorProduction(attrs, INSERT_END)) {
+		} else if (INSERT_END.equals(cons)) {
 			IToken token = tokenizer.makeErrorToken(startOffset, offset - 1);
 			tokenizer.changeTokenKinds(startOffset, offset - 1, TokenKind.TK_LAYOUT, TokenKind.TK_ERROR);
 			reportErrorAtTokens(token, token, "Syntax error, closing of '" + token + "' is expected here");
-		} else if (isErrorProduction(attrs, INSERT)) {
+		} else if (INSERT.equals(cons)
+				|| (prodReader.getAttribute(attrs, "recover") != null
+				    && !prodReader.getSort(rhs).startsWith(WATER))) {
 			IToken token = tokenizer.makeErrorTokenSkipLayout(startOffset, offset, outerStartOffset2);
-			String inserted = "token";
+			String inserted;
 			if (rhs.getName().equals("lit")) {
 				inserted = applAt(rhs, 0).getName();
 			} else if (rhs.getName().equals("char-class")) {
 				inserted = toString(listAt(rhs, 0));
+			} else {
+				inserted = prodReader.getSort(rhs);
+				if (inserted == null)
+					inserted = "token";
 			}
 			if (token.getLine() == tokenizer.getLexStream().getLine(outerStartOffset2) && !token.toString().equals(inserted)) {
 				reportErrorAtTokens(token, token, "Syntax error, expected: '" + inserted + "'");
@@ -545,39 +556,6 @@
 		return message2;
 	}
 	
-	private static boolean isErrorProduction(ATermAppl attrs, String consName) {		
-		if ("attrs".equals(attrs.getName())) {
-			ATermList attrList = termAt(attrs, 0);
-		
-			while (!attrList.isEmpty()) {
-				ATermAppl attr = (ATermAppl) attrList.getFirst();
-				attrList = attrList.getNext();
-				if (attr.getChildCount() == 1 && attr.getName().equals("term")) {
-					ATermAppl details = applAt(attr, 0);
-					if (details.getName().equals("cons")) {
-						details = applAt(details, 0);					
-						return details.getName().equals(consName);
-					}
-				}
-			}
-		}
-		return false;
-	}
-	
-	private static boolean isRejectProduction(ATermAppl attrs) {	
-		if ("attrs".equals(attrs.getName())) {
-			ATermList attrList = termAt(attrs, 0);
-		
-			while (!attrList.isEmpty()) {
-				ATermAppl attr = (ATermAppl) attrList.getFirst();
-				attrList = attrList.getNext();
-				if (attr.getChildCount() == 0 &&  attr.getName().equals("reject"))
-					return true;
-			}
-		}
-		return false;
-	}
-	
 	private static String getDeprecatedProductionMessage(ATermAppl attrs) {
 		if ("attrs".equals(attrs.getName())) {
 			ATermList attrList = termAt(attrs, 0);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java	Fri Aug  6 13:35:11 2010	(r21141)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java	Fri Aug  6 13:38:42 2010	(r21142)
@@ -261,6 +261,10 @@
 				}
 			} else if (children.size() == 1) {
 				// Injection
+				// TODO: efficiently store injection sort for use by content completion?
+				//       would be needed to distinguish FoldingRules and Sorts in "folding" sections...
+				//       maybe only if the content proposer demands it?
+				// TODO: also, avoid semantics for deprecated?
 				return children.get(0);
 			} else {
 				// Constructor-less application (tuple)

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstAnnoImploder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstAnnoImploder.java	Fri Aug  6 13:35:11 2010	(r21141)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstAnnoImploder.java	Fri Aug  6 13:38:42 2010	(r21142)
@@ -46,6 +46,7 @@
 		String astString = ast.toString();
 		if (astString.startsWith("\"") && astString.endsWith("\"")) {
 			astString = astString.substring(1, astString.length() - 1);
+			astString = astString.replace("\\\\", "\\").replace("\\\"", "\"");
 			ast = Environment.getATermFactory().parse(astString);
 		}
 		
@@ -106,7 +107,11 @@
 		for (int i = 0; i < appl.getChildCount(); i++) {
 			children.add(toAstNode(termAt(appl, i), null));
 		}
-		return factory.createNonTerminal(sort, appl.getName(), leftToken, rightToken, children);
+		if (appl.isQuoted()) {
+			return factory.createStringTerminal(appl.getName(), sort, leftToken);
+		} else {
+			return factory.createNonTerminal(sort, appl.getName(), leftToken, rightToken, children);
+		}
 	}
 	
 	private AstNode listToAstNode(ATerm term, String sort) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java	Fri Aug  6 13:35:11 2010	(r21141)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java	Fri Aug  6 13:38:42 2010	(r21142)
@@ -71,7 +71,7 @@
 	}
 
 	/** Return the contents of a term attribute (e.g., "cons"), or null if not found. */
-	private static ATerm getAttribute(ATermAppl attrs, String attrName) {
+	public ATerm getAttribute(ATermAppl attrs, String attrName) {
 		if (attrs.getAFun() == NO_ATTRS_FUN)
 			return null;
 		

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java	Fri Aug  6 13:35:11 2010	(r21141)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java	Fri Aug  6 13:38:42 2010	(r21142)
@@ -345,7 +345,8 @@
 	private UniversalEditor getEditor() {
 		assert controller != null;
 		if (editor == null) {
-			editor = EditorState.getEditorFor(controller).getEditor();
+			EditorState editorState = EditorState.getEditorFor(controller);
+			editor = editorState.getEditor();
 			lastEditor = editor;
 		}
 		return editor;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Fri Aug  6 13:35:11 2010	(r21141)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Fri Aug  6 13:38:42 2010	(r21142)
@@ -41,6 +41,7 @@
 import org.strategoxt.imp.runtime.parser.ast.ListAstNode;
 import org.strategoxt.imp.runtime.parser.ast.RootAstNode;
 import org.strategoxt.imp.runtime.parser.ast.StringAstNode;
+import org.strategoxt.imp.runtime.stratego.StrategoConsole;
 import org.strategoxt.imp.runtime.stratego.adapter.WrappedAstNodeFactory;
 import org.strategoxt.lang.terms.TermFactory;
 
@@ -121,14 +122,26 @@
 			return createErrorProposal("No proposals available - completion lexical must allow letters and numbers", offset);
 		
 		RootAstNode ast = constructAst(getParser(controller), offset, document);
-		
+		Set<String> sorts = getSortsAtCursor(controller, ast, offset);
 		if (currentCompletionNode == null) {
+			// TODO: allow syntactic completions for start symbol
 			if (lastCompletionAst == null && lastParserAst == null)
 				return createErrorProposal("No proposals available - syntax errors", offset);
 			else
 				return createErrorProposal("No proposals available - could not identify proposal context", offset);
 		}
 
+		if (Environment.getDescriptor(controller.getLanguage()).isDynamicallyLoaded()) {
+			try {
+				StrategoConsole.getOutputWriter().write(
+					":: Completion triggered for: " + currentCompletionNode
+					+ (Debug.ENABLED ? " (candidate sorts: " + sorts + ")\n" : ""));
+			} catch (IOException e) {
+				// No matter
+			}
+		}
+
+
 		ICompletionProposal[] results = toProposals(invokeCompletionFunction(controller), document, offset);
 		
 		/* UNDONE: automatic proposal insertion
@@ -140,8 +153,6 @@
 			return null;
 		}
 		*/
-		if (Debug.ENABLED)
-			System.out.println("SORTS: " + getSortsAtCursor(controller, ast, offset));
 		
 		return results;
     }
@@ -590,7 +601,7 @@
 		return;
 	}
 	
-	// TODO: get *all* sorts at cursor by looking at the parse tree?
+	// TODO: get *all* sorts at cursor by looking at the parse tree? or by storing injections in the AST?
 	private Set<String> getSortsAtCursor(IParseController controller, RootAstNode ast, int offset) {
 		//if (node.getConstructor().equals(COMPLETION_UNKNOWN))
 		//	return Collections.emptySet();

From L.C.L.Kats at tudelft.nl  Fri Aug  6 17:11:30 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 06 Aug 2010 15:11:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21143 - in
	spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.updatesite
Message-ID: <201008061511.o76FBVTf022990@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Fri Aug  6 15:11:24 2010
New Revision: 21143
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21143&sc=1

Log:
Release 0.5.2.92

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Fri Aug  6 13:38:42 2010	(r21142)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Fri Aug  6 15:11:24 2010	(r21143)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.5.2.91"
+      version="0.5.2.92"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	Fri Aug  6 13:38:42 2010	(r21142)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	Fri Aug  6 15:11:24 2010	(r21143)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.5.2.91.jar" id="org.strategoxt.imp" version="0.5.2.91">
+   <feature url="features/org.strategoxt.imp_0.5.2.92.jar" id="org.strategoxt.imp" version="0.5.2.92">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">

From m.dejonge at tudelft.nl  Mon Aug  9 10:57:55 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 09 Aug 2010 08:57:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21144 -
	refactoring/lib-reconstruction
Message-ID: <201008090857.o798vtJA006939@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: Mon Aug  9 08:57:54 2010
New Revision: 21144
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21144&sc=1

Log:
robustness against loosing origin info:
- origin relation OF origin relation via children + geen alternatieve origin relation
- unmodified list checked in list checking

Modified:
   refactoring/lib-reconstruction/diff-ast.str

Modified: refactoring/lib-reconstruction/diff-ast.str
==============================================================================
--- refactoring/lib-reconstruction/diff-ast.str	Fri Aug  6 15:11:24 2010	(r21143)
+++ refactoring/lib-reconstruction/diff-ast.str	Mon Aug  9 08:57:54 2010	(r21144)
@@ -41,7 +41,7 @@
 	(old-node, new-node) -> change-list
 	where
 		(<eq>(old-node, <origin-term> new-node) <+ <not(origin-term)> new-node);
-		<same-signature <+ unmodified-list> (old-node, new-node);
+		<same-signature> (old-node, new-node);
 		zip-list:=<zip> (<get-arguments> old-node, <get-arguments> new-node);
 		zip-list-with-context:=<map-with-index(add-context(|new-node))>; 
 		change-list:=<map(collect-changes); flatten-list> zip-list-with-context
@@ -101,11 +101,10 @@
 split-matching-nodes(|arg-matched-childs, arg-insertions, arg-deletions):
 	(old-list, new-list) -> result
 	where
-		if <?[h|tail]> old-list then
-			loc-h:=<origin-offset> h; 
-			if <fetch(?h <+ (origin-offset; ?loc-h))> new-list then
-				matching-h:=<fetch-elem(where(?h <+ (origin-offset; ?loc-h)))> new-list;
-				(insertions-before, remaining):=<split-fetch(?h <+ (origin-offset; ?loc-h))> new-list;
+		if <?[h|tail]> old-list then 
+			if <fetch(check-origin-relation(|h))> new-list then
+				matching-h:=<fetch-elem(where(check-origin-relation(|h)))> new-list;
+				(insertions-before, remaining):=<split-fetch(check-origin-relation(|h))> new-list;
 				if <not(?[])> insertions-before then
 					insertions:=<conc>(arg-insertions, [INSERT_BEFORE(h, insertions-before)])
 				else
@@ -130,10 +129,27 @@
 		end
 
 rules //other helper functions
+
+has-origin-relation=
+	?(old-element, new-element);
+	<origin-equal(|old-element)> (<origin-term> new-element)
 	
-unmodified-list=
-	?(list-old, list-new);
-	<eq> (list-old, <map(origin-term)> list-new)
+has-origin-relation-via-args=
+	?(old-element, new-element); debug(!"check1: ");
+	<not(origin-term)> new-element; debug(!"check2: ");
+	<same-signature <+ is-list-tuple> (old-element, new-element) ;debug(!"check3: ");
+	zipped:=<zip> (<get-arguments> old-element, <get-arguments> new-element); debug(!"zipped: ");
+	<map(has-origin-relation <+ (Snd; not(origin-term)))> zipped;
+	<fetch(has-origin-relation)> zipped	
+
+check-origin-relation(|old-element)=
+	<has-origin-relation>(old-element, <id>) <+
+	<has-origin-relation-via-args> (old-element, <id>)
+
+is-list-tuple=
+	?(old-list, new-list);
+	<is-list> old-list;
+	<is-list> new-list
 
 same-signature=
 	?(term-A, term-B); 

From m.dejonge at tudelft.nl  Tue Aug 10 11:59:32 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 10 Aug 2010 09:59:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21145 -
	refactoring/lib-reconstruction
Message-ID: <201008100959.o7A9xWej025540@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue Aug 10 09:59:31 2010
New Revision: 21145
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21145&sc=1

Log:


Modified:
   refactoring/lib-reconstruction/diff-ast.str

Modified: refactoring/lib-reconstruction/diff-ast.str
==============================================================================
--- refactoring/lib-reconstruction/diff-ast.str	Mon Aug  9 08:57:54 2010	(r21144)
+++ refactoring/lib-reconstruction/diff-ast.str	Tue Aug 10 09:59:31 2010	(r21145)
@@ -132,7 +132,7 @@
 
 has-origin-relation=
 	?(old-element, new-element);
-	<origin-equal(|old-element)> (<origin-term> new-element)
+	<eq> (old-element, <origin-term> new-element)
 	
 has-origin-relation-via-args=
 	?(old-element, new-element); debug(!"check1: ");

From g.h.wachsmuth at tudelft.nl  Wed Aug 11 11:00:45 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 11 Aug 2010 09:00:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21146 - tiger-spoofax
Message-ID: <201008110900.o7B90jZa010354@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Wed Aug 11 09:00:42 2010
New Revision: 21146
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21146&sc=1

Log:
Initial import.

Added:
   tiger-spoofax/

From g.h.wachsmuth at tudelft.nl  Wed Aug 11 11:06:54 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 11 Aug 2010 09:06:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21147 - in
	tiger-spoofax: . .externalToolBuilders META-INF bin bin/dist
	bin/trans editor editor/java editor/java/org
	editor/java/org/strategoxt editor/java/org/strategoxt/...
Message-ID: <201008110906.o7B96srJ010594@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Wed Aug 11 09:06:41 2010
New Revision: 21147
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21147&sc=1

Log:
Initial version, just syntax

Added:
   tiger-spoofax/.classpath
   tiger-spoofax/.externalToolBuilders/
   tiger-spoofax/.externalToolBuilders/Tiger build.main.xml.launch
   tiger-spoofax/.project
   tiger-spoofax/META-INF/
   tiger-spoofax/META-INF/MANIFEST.MF
   tiger-spoofax/bin/
   tiger-spoofax/bin/dist/
   tiger-spoofax/bin/trans/
   tiger-spoofax/build.generated.xml
   tiger-spoofax/build.main.xml
   tiger-spoofax/build.properties
   tiger-spoofax/editor/
   tiger-spoofax/editor/Tiger-Builders.esv
   tiger-spoofax/editor/Tiger-Colorer.esv
   tiger-spoofax/editor/Tiger-Completions.esv
   tiger-spoofax/editor/Tiger-Folding.esv
   tiger-spoofax/editor/Tiger-Outliner.esv
   tiger-spoofax/editor/Tiger-References.esv
   tiger-spoofax/editor/Tiger-Syntax.esv
   tiger-spoofax/editor/Tiger.main.esv
   tiger-spoofax/editor/java/
   tiger-spoofax/editor/java/org/
   tiger-spoofax/editor/java/org/strategoxt/
   tiger-spoofax/editor/java/org/strategoxt/spoofax/
   tiger-spoofax/editor/java/org/strategoxt/spoofax/tiger/
   tiger-spoofax/editor/java/org/strategoxt/spoofax/tiger/Activator.java
   tiger-spoofax/editor/java/org/strategoxt/spoofax/tiger/TigerParseController.java
   tiger-spoofax/editor/java/org/strategoxt/spoofax/tiger/TigerValidator.java
   tiger-spoofax/lib/
   tiger-spoofax/lib/editor-common.generated.str
   tiger-spoofax/plugin.xml
   tiger-spoofax/syntax/
   tiger-spoofax/syntax/Tiger-Comments.sdf
   tiger-spoofax/syntax/Tiger-Constants.sdf
   tiger-spoofax/syntax/Tiger-Declarations.sdf
   tiger-spoofax/syntax/Tiger-Expressions.sdf
   tiger-spoofax/syntax/Tiger-Identifiers.sdf
   tiger-spoofax/syntax/Tiger-Statements.sdf
   tiger-spoofax/syntax/Tiger-Whitespace.sdf
   tiger-spoofax/syntax/Tiger.generated.pp
   tiger-spoofax/syntax/Tiger.pp
   tiger-spoofax/syntax/Tiger.sdf
   tiger-spoofax/test/
   tiger-spoofax/test/example.tig
   tiger-spoofax/trans/
   tiger-spoofax/trans/tiger.str

Added: tiger-spoofax/.classpath
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/.classpath	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<classpath>
+	<classpathentry kind="src" excluding="trans/**" path="editor/java"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
\ No newline at end of file

Added: tiger-spoofax/.externalToolBuilders/Tiger build.main.xml.launch
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/.externalToolBuilders/Tiger build.main.xml.launch	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
+<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
+<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES"/>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+</listAttribute>
+<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value=""/>
+<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="all,"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${none}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${build_project}/build.main.xml"/>
+<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${build_project}"/>
+<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
+</launchConfiguration>

Added: tiger-spoofax/.project
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/.project	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<projectDescription>
+      <name>org.strategoxt.spoofax.tiger</name>
+      <comment></comment>
+      <buildSpec>
+		<buildCommand>
+			<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+			<triggers>full,incremental,</triggers>
+			<arguments>
+				<dictionary>
+					<key>LaunchConfigHandle</key>
+					<value>&lt;project&gt;/.externalToolBuilders/Tiger build.main.xml.launch</value>
+				</dictionary>
+			</arguments>
+		</buildCommand>
+        <buildCommand>
+          <name>org.eclipse.jdt.core.javabuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.ManifestBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.SchemaBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+      </buildSpec>
+      <natures>
+        <nature>org.eclipse.pde.PluginNature</nature>
+        <nature>org.eclipse.jdt.core.javanature</nature>
+      </natures>
+    </projectDescription>
\ No newline at end of file

Added: tiger-spoofax/META-INF/MANIFEST.MF
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/META-INF/MANIFEST.MF	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,21 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Tiger Plug-in
+Bundle-SymbolicName: org.strategoxt.spoofax.tiger; singleton:=true
+Bundle-Version: 1.0.0
+Bundle-Activator: org.strategoxt.spoofax.tiger.Activator
+Import-Package: org.osgi.framework;version="1.3.0"
+Require-Bundle: org.eclipse.core.runtime,
+  org.eclipse.core.resources,
+  org.eclipse.imp.runtime,
+  org.eclipse.ui,
+  lpg.runtime,
+  org.eclipse.jface.text,
+  org.eclipse.ui.editors,
+  org.eclipse.ui.workbench.texteditor,
+  org.strategoxt.imp.runtime,
+  org.spoofax.aterm,
+  org.spoofax.jsglr
+Bundle-RequiredExecutionEnvironment: J2SE-1.5
+Bundle-ActivationPolicy: lazy
+Export-Package: org.strategoxt.spoofax.tiger

Added: tiger-spoofax/build.generated.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/build.generated.xml	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,401 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="build.generated">
+
+        <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
+        <target name="spoofaximp.default.ctree" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
+    
+        <!-- Initialization -->
+        <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
+        <dirname property="externaldefdir" file="${externaldef}"/>
+        <condition property="externaldefimport" value="-I ${externaldefdir}" else="">
+            <isset property="externaldef"/>
+        </condition>
+        <condition property="externaljarimport" value=":${externaljar}" else="">
+            <isset property="externaljar"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <isset property="eclipse.running"/>
+        </condition>
+        <condition property="externaljarflags" value="${externaljarflags}" else="">
+            <isset property="externaljarflags"/>
+        </condition>
+        <condition property="metasdfmodule.available" value="1">
+            <available file="${syntax}/${metasdfmodule}.sdf"/>
+        </condition>
+        <mkdir dir="${build}"/>
+        <mkdir dir="${src-gen}"/>
+        <mkdir dir="${dist}"/>
+        <mkdir dir="${include}"/>
+        <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
+
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+        
+        <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
+                <arg value="${include}/${esvmodule}.packed.esv"/>
+            </java>
+        </target>
+        
+        <target name="refresh" if="eclipse.running">
+            <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+            <eclipse.refreshLocal resource="${projectdir}/lib" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Builders.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Colorer.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Completions.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+            <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
+            <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+        </target>
+        
+        <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
+                <arg value="-p"/>
+                <arg value="${include}/${sdfmodule}.tbl"/>
+            </java>
+        </target>
+    
+        <target name="sdf2table" depends="make-permissive">
+            <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                
+                <fileset file="${include}/${sdfmodule}-Permissive.def"/>
+                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+            </apply>
+        </target>
+        
+        <target name="meta-sdf2table" if="metasdfmodule.available">
+            <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+            <antcall target="sdf2table">
+                <param name="sdfmodule" value="${metasdfmodule}"/>
+                <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+            </antcall>
+        </target>
+        
+        <target name="make-permissive" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-Permissive.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <antcall target="make-permissive.helper"/>
+        </target>
+    
+        <target name="make-permissive.helper" unless="permissive-grammar.available">
+            <java classname="org.strategoxt.permissivegrammars.make_permissive" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-Permissive.def"/>
+                <arg line="--optimize on"/>
+            </java>
+        </target>
+
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
+            <mkdir dir="utils"/>
+            <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/aster.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.strategojar}" todir="utils" failonerror="false"/>
+        </target>
+    
+        <target name="pack-sdf" unless="externaldef">
+            <dependset>
+                <srcfileset dir="${syntax}">
+                    <include name="**/*.sdf"/>
+                </srcfileset>
+                <targetfileset file="${include}/${sdfmodule}.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.def" property="pack-sdf.available"/>
+            <antcall target="pack-sdf.helper"/>
+        </target>
+    
+        <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <condition property="utils-include" value="-I ${utils}" else="">
+                <available file="${utils}"/>
+            </condition>
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-pack-sdf"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.sdf"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-I"/>
+                <arg value="${syntax}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg line="${utils-include}"/>
+                <arg line="${build.sdf.imports}"/>
+            </java>
+        </target>
+    
+        <target name="copy-sdf" if="externaldef">
+            <copy file="${externaldef}" tofile="${include}/${sdfmodule}.def" preservelastmodified="true"/>
+        </target>
+    
+        <target name="copy-jar" if="externaljar">
+            <copy file="${externaljar}" todir="${include}" preservelastmodified="true"/>
+        </target>
+    
+        <target name="rtg2sig" if="build.stratego.enabled" depends="sdf2rtg">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.rtg"/>
+                <targetfileset file="${include}/${sdfmodule}.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.str" property="rtg2sig.available"/>
+            <antcall target="rtg2sig.helper"/>
+        </target>
+    
+        <target name="rtg2sig.helper" unless="rtg2sig.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-rtg2sig"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.str"/>
+                <arg value="--module"/>
+                <arg value="${sdfmodule}"/>
+            </java>
+        </target>
+        
+        <target name="sdf2rtg" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}.rtg"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.rtg" property="sdf2rtg.available"/>
+            <antcall target="sdf2rtg.helper"/>
+        </target>
+    
+        <target name="sdf2rtg.helper" unless="sdf2rtg.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-sdf2rtg"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="--ignore-missing-cons"/>
+                <arg value="-Xnativepath"/>
+                <arg value="${build.strategoxt.sdf}"/>
+            </java>
+        </target>
+        
+        <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${syntax}/${sdfmodule}.generated.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.generated.pp.af"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
+        </target>
+    
+        <target name="ppgen.helper" unless="ppgen.available">
+            <!-- Any failures here are ignored; they are only a problem when imported from Stratego -->
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-ppgen"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+                <arg value="-t"/>
+            </java>
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-pp-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+                <arg value="-o"/>
+                <arg value="${syntax}/${sdfmodule}.generated.pp"/>
+            </java>
+        </target>
+    
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
+        
+        <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${syntax}/${sdfmodule}.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+            </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
+        </target>
+    
+        <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-parse-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.pp"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.pp.af"/>
+            </java>
+        </target>
+    
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+    
+        <!-- Aster to Stratego -->
+        <target name="stratego.aster">
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <pathconvert property="aster-input" setonempty="false" pathsep=" ">
+                <path><fileset dir="${basedir}" includes="*.astr"/></path>
+            </pathconvert>
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.astr"/>
+                </srcfileset>
+                <targetfileset file="${trans}/${strmodule}.rtree"/>
+            </dependset>
+            <condition property="aster-output.uptodate">
+                <and>
+                    <isset property="aster-output.available"/>
+                    <available file="${trans}/${strmodule}.rtree"/>
+                </and>
+            </condition>
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.uptodate"/>
+            <antcall target="stratego.aster.helper"/>
+        </target>
+    
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
+                <arg value="-i"/>
+                <fileset dir="${basedir}">
+                    <include name="**/*.astr"/>
+                </fileset>
+            </java>
+        </target>
+    
+        <!-- Stratego to Java interpreter -->
+        <target name="stratego.ctree" depends="rtg2sig">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${include}/${strmodule}.ctree"/>
+            </dependset>
+            <available file="${include}/${strmodule}.ctree" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputpath" value="${include}"/>
+                <param name="build.stratego.extraargs" value="-F"/>
+                <param name="build.stratego.extension" value="ctree"/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+    
+        <!-- Stratego to Java compiler -->
+        <target name="stratego.jar" depends="rtg2sig,utils-files">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputpath" value="${src-gen}/trans"/>
+                <param name="build.stratego.extraargs" value="-la java-front"/>
+                <param name="build.stratego.extension" value="java"/>
+            </antcall>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="trans/**"/>
+                <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+        </target>
+            
+        <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans}/${strmodule}.str"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputpath}/${strmodule}.${build.stratego.extension}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
+                
+        <!-- Stratego to C-based native executable -->
+        <target name="stratego.c">
+            <antcall target="stratego.c.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/include"/>
+                <param name="build.stratego.extraargs" value=""/>
+                <param name="build.stratego.extension" value=""/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+        
+        <!-- Helper target for calling the stratego compiler -->
+        <target name="stratego.c.helper" depends="rtg2sig" if="build.stratego.enabled">
+            <apply executable="${build.strategoxt.stratego}/${build.stratego.compiler}" dest="${build.stratego.outputpath}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                
+                <fileset file="${trans}/${strmodule}.str"/>
+                <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>
+            </apply>
+        </target>
+        
+        <target name="clean" description="clean up">
+            <delete dir="${build}"/>
+            <delete file="${src-gen}/trans/Main.java"/>
+        </target>
+    </project>
\ No newline at end of file

Added: tiger-spoofax/build.main.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/build.main.xml	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="Tiger" default="all">
+        
+        <!-- Key input modules -->
+        <property name="sdfmodule" value="Tiger"/>
+        <property name="metasdfmodule" value="Stratego-Tiger"/>
+        <property name="esvmodule" value="Tiger"/>
+        <property name="strmodule" value="tiger"/>
+    
+        <!-- Project directories -->
+        <property name="trans" location="trans"/>
+        <property name="src-gen" location="editor/java"/>
+        <property name="syntax" location="syntax"/>
+        <property name="include" location="include"/>
+        <property name="lib" location="lib"/>
+        <property name="build" location="bin"/>
+        <property name="dist" location="bin/dist"/>
+        
+        <!-- Imports -->
+        <property name="build.sdf.imports" value=""/>
+        <property name="build.stratego.args" value="
+                        --library
+                        -I &quot;${trans}&quot;
+                        -I &quot;${basedir}&quot;
+                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm"/>
+        
+        <!-- External .def and .jar locations
+        <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+        <property name="externaljar" value="../lib.jar"/>
+        <property name="externaljarflags" value="-la org.lib"/>
+        -->
+    
+        <!-- Environment configuration for command-line builds -->
+        <condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
+            <isset property="eclipse.spoofaximp.nativeprefix"/>
+        </condition>
+        <property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin"/>
+    
+        <import file="build.generated.xml"/>
+    
+        <!-- Main target -->
+        <target name="all" depends="spoofaximp.default.ctree"/>
+    </project>
\ No newline at end of file

Added: tiger-spoofax/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/build.properties	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,8 @@
+source.. = editor/java/
+output.. = bin/
+bin.includes = META-INF/,\
+               plugin.xml,\
+               include/,\
+               bin/,\
+               lib/,\
+               .

Added: tiger-spoofax/editor/Tiger-Builders.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/editor/Tiger-Builders.esv	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,20 @@
+
+module Tiger-Builders
+
+imports Tiger-Builders.generated
+
+builders
+                                                                      
+  // This file can be used for custom analysis and builder rules.     
+  //                                                                  
+  // See the imported file for a brief introduction and examples.     
+
+builders
+                                                                                                               
+  provider                  : include/tiger.ctree                                                              
+                                                                                                               
+  observer                  : editor-analyze                                                                   
+                                                                                                               
+  builder                   : "Show abstract syntax" = generate-aterm (openeditor) (realtime) (meta) (source)  
+                                                                                                               
+  // on save: generate-java                                                                                    
\ No newline at end of file

Added: tiger-spoofax/editor/Tiger-Colorer.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/editor/Tiger-Colorer.esv	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,9 @@
+module Tiger-Colorer
+
+imports Tiger-Colorer.generated
+
+colorer
+                                                                      
+  // This file can be used for custom colorer rules.                  
+  //                                                                  
+  // See the imported file for a brief introduction and examples.     
\ No newline at end of file

Added: tiger-spoofax/editor/Tiger-Completions.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/editor/Tiger-Completions.esv	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,12 @@
+module Tiger-Completions
+
+imports Tiger-Completions.generated
+
+completions
+                                                                   
+  // This file is used to define content completion.               
+  //                                                               
+  // See the imported file for a brief introduction and examples.  
+                                                                   
+                                         
+  
\ No newline at end of file

Added: tiger-spoofax/editor/Tiger-Folding.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/editor/Tiger-Folding.esv	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,9 @@
+module Tiger-Folding
+
+imports Tiger-Folding.generated
+
+folding
+  
+  // This file can be used for custom folding rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Added: tiger-spoofax/editor/Tiger-Outliner.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/editor/Tiger-Outliner.esv	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,9 @@
+module Tiger-Outliner
+
+imports Tiger-Outliner.generated
+
+outliner
+  
+  // This file can be used for custom outliner rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Added: tiger-spoofax/editor/Tiger-References.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/editor/Tiger-References.esv	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,10 @@
+module Tiger-References
+
+imports Tiger-References.generated
+
+references
+                                                                                                   
+  // This file can be used to specify reference resolving and hover help, and content completion.  
+  //                                                                                               
+  // See the imported file for a brief introduction and examples.                                  
+                                                                                                   
\ No newline at end of file

Added: tiger-spoofax/editor/Tiger-Syntax.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/editor/Tiger-Syntax.esv	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,9 @@
+module Tiger-Syntax
+
+imports Tiger-Syntax.generated
+
+language
+                                                                   
+  // This file can be used for custom syntax rules.                
+  //                                                               
+  // See the imported file for a brief introduction and examples.  
\ No newline at end of file

Added: tiger-spoofax/editor/Tiger.main.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/editor/Tiger.main.esv	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,16 @@
+module Tiger.main
+
+imports Tiger-Builders Tiger-Colorer Tiger-Completions Tiger-Folding Tiger-Outliner Tiger-References Tiger-Syntax
+
+language General properties
+                  
+  name          : Tiger
+  id            : org.strategoxt.spoofax.tiger
+  extends       : Root
+                  
+  description   : "Spoofax/IMP-generated editor for the Tiger language"
+  url           : http://strategoxt.org
+                  
+  extensions    : tig
+  table         : include/Tiger.tbl
+  start symbols : Start
\ No newline at end of file

Added: tiger-spoofax/editor/java/org/strategoxt/spoofax/tiger/Activator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/editor/java/org/strategoxt/spoofax/tiger/Activator.java	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,44 @@
+package org.strategoxt.spoofax.tiger;
+
+import org.eclipse.imp.preferences.PreferencesService;
+import org.eclipse.imp.runtime.PluginBase;
+import org.osgi.framework.BundleContext;
+
+public class Activator extends PluginBase 
+{ 
+  public static final String kPluginID = "Tiger";
+
+  public static final String kLanguageName = "Tiger";
+
+  protected static Activator sPlugin;
+
+  public static Activator getInstance()
+  { 
+    if(sPlugin == null)
+      return new Activator();
+    return sPlugin;
+  }
+
+  public Activator () 
+  { 
+    super();
+    sPlugin = this;
+  }
+
+  @Override public void start(BundleContext context) throws Exception
+  { 
+    super.start(context);
+  }
+
+  @Override public String getID()
+  { 
+    return kPluginID;
+  }
+
+  @Override public String getLanguageID()
+  { 
+    return kLanguageName;
+  }
+
+  protected static PreferencesService preferencesService = null;
+}
\ No newline at end of file

Added: tiger-spoofax/editor/java/org/strategoxt/spoofax/tiger/TigerParseController.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/editor/java/org/strategoxt/spoofax/tiger/TigerParseController.java	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,89 @@
+package org.strategoxt.spoofax.tiger;
+
+import java.io.InputStream;
+import java.io.IOException;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class TigerParseController extends DynamicParseController 
+{ 
+  public static final String LANGUAGE = new String("Tiger");
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static volatile Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static synchronized Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  private static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = TigerParseController.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = TigerParseController.class.getResourceAsStream(TABLE);
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
+      descriptor = DescriptorFactory.load(descriptorStream, table, null);
+      descriptor.setAttachmentProvider(TigerParseController.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  private static String getPluginLocation()
+  { 
+    return TigerParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(this, getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Added: tiger-spoofax/editor/java/org/strategoxt/spoofax/tiger/TigerValidator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/editor/java/org/strategoxt/spoofax/tiger/TigerValidator.java	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,12 @@
+package org.strategoxt.spoofax.tiger;
+
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
+
+public class TigerValidator extends MetaFileLanguageValidator 
+{ 
+  @Override public Descriptor getDescriptor()
+  { 
+    return TigerParseController.getDescriptor();
+  }
+}
\ No newline at end of file

Added: tiger-spoofax/lib/editor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/lib/editor-common.generated.str	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,247 @@
+module lib/editor-common.generated
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-gpp
+
+strategies
+
+  parse-file = parse-tiger-file
+  parse-tiger-file =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(include/Tiger.tbl)>
+    )
+
+  parse-string = parse-tiger-string
+  parse-tiger-string =
+    parse-string(
+      strsglr-report-parse-error
+    | <import-term(include/Tiger.tbl)>
+    )
+  
+  parse-stream = parse-tiger-stream
+  parse-tiger-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(include/Tiger.tbl)>
+    )
+
+  pp-tiger-string =
+    ast2abox(|[<import-term(include/Tiger.generated.pp.af)>,
+               <import-term(include/Tiger.pp.af)>]);
+    box2text-string(|100)
+
+strategies
+  
+  /**
+   * Processes an import during semantic analysis.
+   * Ensures proper caching of files and prevents
+   * processing duplicate imports more than once.
+   *
+   * @param resolve-path  Resolves the filesystem path of this import
+   * @param parse-file    Parses a file (optionally removing definition bodies
+   *                      so only signatures are stored in the cache)
+   * @param record-declarations
+   *                      Performs semantic analysis on a tree
+   */
+  open-import(resolve-path, parse-file, record-declarations):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path       := <resolve-path> import;
+        cache-path := <import-cache-path> path;
+        if not(<IsImported> path) then
+          rules(
+            IsImported: path
+          );
+          ( <is-newer> (cache-path, path);
+            file := <ReadFromFile> cache-path
+          <+
+            file := <parse-file> path;
+            if <file-exists> path then
+              // Only cache if on filesystem (e.g., ignore libstratego-lib)
+              <WriteToBinaryFile> (cache-path, file)
+            end        
+          );
+          {| CurrentFile:
+            rules(CurrentFile := path);
+            <record-declarations> file
+          |}
+        end
+      end
+
+  open-wildcard-import(resolve-path, parse-file, record-declarations, is-source-file):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path := <resolve-path> import;
+        readdir;
+        list-loop(
+          if is-source-file then
+            <open-import(id, parse-file, record-declarations)>
+              $[[path]/[<id>]]
+          <+
+            try(?one-failed)
+          end
+        );
+        not(!one-failed)
+      end
+  
+  import-cache-path:
+    full-path -> cache-path
+    with
+      project-path := <project-path>;
+      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
+      full-path'   := <string-replace(|"/", "+"); string-replace(|"\\", "+"); string-replace(|":", "+")> full-path;
+      cache-path   := $[[cache-dir]/[full-path'].sig]
+
+  project-path = prim("SSL_EXT_projectpath")
+
+  is-newer:
+    (file1, file2) -> <id>
+    where
+      <gt> (<file-exists; modification-time> file1, <file-exists; modification-time> file2) 
+
+strategies
+  
+  editor-init =
+    // Ensure all dynamic rules are properly scoped
+    try(dr-scope-all-end);
+    dr-scope-all-start
+  
+  refresh-workspace-file:
+    path -> <prim("SSL_EXT_refreshresource", path)>
+
+strategies
+  
+  origin-term      = prim("SSL_EXT_origin_term", <id>)
+  origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-location  = prim("SSL_EXT_origin_location", <id>)
+  origin-line      = origin-location => (<id>, _, _, _)
+  origin-column    = origin-location => (_, <id>, _, _)
+  origin-strip     = prim("SSL_EXT_origin_strip", <id>)
+  origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+  
+  origin-surrounding-comments =
+    prim("SSL_EXT_origin_surrounding_comments", "Tiger", <id>)
+    
+  origin-documentation-comment =
+    origin-surrounding-comments;
+    filter(string-as-chars(documentation-comment-chars));
+    concat-strings
+  
+  documentation-comment-chars:
+    ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
+  
+  origin-track-forced(s) =
+    !Some(<id>); all(s); ?Some(<id>)
+
+strategies
+
+  desugar-position(desugar|ast):
+    position -> position'
+    where
+      ast'  := <at-position(!<id>{MARKER()}|position)> ast;
+      ast'' := <topdown(repeat(preserve-annos({?x; desugar; not(?x)})))> ast';
+      position' := <position-of-term({?_{a*}; <one(?MARKER())> a*})> ast''
+   
+  at-position(s|position):
+    c#(t*) -> t'
+    where
+      !position => [i | position']
+    where
+      t' := c#(<at-index(at-position(s|position'))> (i, t*))
+
+  at-position(s|position):
+    t -> t'
+    where
+      !position => [];
+      t' := <s> t
+
+  position-of-term(is-term):
+    t -> []
+    where
+      is-term
+  
+  position-of-term(is-term):
+    _#(t*) -> <position-of-term(is-term|0)> t*
+  
+  position-of-term(is-term|start-index):
+    [t | t*] -> position
+    where
+      if i* := <position-of-term(is-term)> t then
+        position := [start-index | i*]
+      else
+        position := <position-of-term(is-term | <inc> start-index)> t*
+      end
+
+  term-at-position(|position):
+    t -> t'
+    where
+      at-position(?t'|position) 
+
+  parent-at-position(|position):
+    t -> t'
+    where
+      !position => [i, _];
+      t' := <subterm-at(|i)> t
+  
+  parent-at-position(|position):
+    t -> <parent-at-position(|position')> t'
+    where
+      !position => [i | position' @ [_, _ | _]];
+      t' := <subterm-at(|i)> t
+
+  subterm-at(|index):
+    _#(t*) -> <index(|<inc> index)> t*
+  
+signature constructors
+
+  COMPLETION : String -> Term
+  NOCONTEXT  : Term   -> Term
+  MARKER     : Term
+
+  // Below are copies of the signatures of the terms used in example
+  // trans/tiger.str file. These definitions should also be automatically 
+  // generated in the imported include/Tiger.str module. However,
+  // to ensure that the example transformation doesn't break when the
+  // syntax is changed, we also hard-coded them here.
+          
+  Module   : ID * List(Entity)   -> Module
+  Entity   : ID * List(Property) -> Entity
+  Property : ID * Type           -> Property
+  Type     : ID                  -> Type
+
+strategies
+  
+  // Set markers for a given file. Use when checking files from a queued strategy.
+  // Current term: (ast-desugared, errors, warnings, notes) tuple
+  // ast: the root node of the file to set markers on 
+  set-markers(|ast) = prim("SSL_EXT_set_markers", ast)
+
+  // Indicate that one or more files need analysis. 
+  // Current term: ss a list of absolute file paths, or a single absolute file path to analyze
+  queue-analysis = 
+       (is-list; list-loop(queue-analysis))
+    <+ prim("SSL_EXT_queue_analysis")
+
+  // Set the total number of work units to complete. Can be called multiple times. 
+  // Current term: number of work units (int).
+  set-total-work-units = prim("SSL_EXT_set_total_work_units")
+  
+  // Complete one work unit and update progress monitors.
+  // Current term: ignored
+  complete-work-unit = prim("SSL_EXT_complete_work_unit")
+  
+  // Queue a strategy for background processing with a progress indicator.
+  // Current term: the term to pass to the background strategy
+  // s: the strategy, as string
+  // description: name of the task (will be shown in progress view)
+  queue-strategy(|s,description) = prim("SSL_EXT_queue_strategy", s, description)
+  
+  // Return the result of this strategy to indicate a non-completed (backgrounded) analysis.
+  // Editor services (hover, resolve) will be delayed until a complete analysis is performed. 
+  set-analysis-backgrounded = !"BACKGROUNDED"
+  

Added: tiger-spoofax/plugin.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/plugin.xml	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<?eclipse version="3.0"?>
+
+<plugin>
+       <extension point="org.eclipse.imp.runtime.languageDescription">
+          <language extensions="tig" description="Tiger" language="Tiger" derivedFrom="DynamicRoot" validator="org.strategoxt.spoofax.tiger.TigerValidator" validatorClass="org.strategoxt.spoofax.tiger.TigerValidator"></language>
+       </extension>
+       <extension id="org.strategoxt.spoofax.tiger.parser" name="Tiger Parser" point="org.eclipse.imp.runtime.parser">
+          <parser class="org.strategoxt.spoofax.tiger.TigerParseController" language="Tiger">
+          </parser>
+       </extension>    
+    </plugin>
\ No newline at end of file

Added: tiger-spoofax/syntax/Tiger-Comments.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/syntax/Tiger-Comments.sdf	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,16 @@
+module Tiger-Comments
+
+exports
+
+	lexical syntax
+    	
+		"/*" CommChar* "*/"	-> LAYOUT
+		"//" ~[\n]* [\n]	-> LAYOUT
+		~[\*]				-> CommChar 
+    	Asterisk			-> CommChar
+    	[\*]				-> Asterisk
+
+	lexical restrictions
+		
+		Asterisk -/- [\/]
+

Added: tiger-spoofax/syntax/Tiger-Constants.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/syntax/Tiger-Constants.sdf	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,27 @@
+module Tiger-Constants
+
+exports
+
+	lexical syntax
+		
+		[0-9]+					-> IntConst
+		
+		IntConst "." IntConst					-> RealConst {cons("RealConstNoExp")}
+		IntConst "." IntConst "e" Sign IntConst -> RealConst {cons("RealConst")}
+		
+		"+"						-> Sign
+		"-"						-> Sign
+		
+		"\"" StrChar* "\""		-> StrConst
+
+		~[\\\"\n]				-> StrChar
+		[\\] [n]				-> StrChar
+		[\\] [t]				-> StrChar
+		[\\] [\^] [A-Z]			-> StrChar
+		[\\] [0-9][0-9][0-9]	-> StrChar
+		[\\] [\"]				-> StrChar
+		[\\] [\\]				-> StrChar
+		[\\] [\"]				-> StrChar
+		[\\] [\ \t\n]+ [\\]		-> StrChar
+		
+		
\ No newline at end of file

Added: tiger-spoofax/syntax/Tiger-Declarations.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/syntax/Tiger-Declarations.sdf	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,42 @@
+module Tiger-Declarations
+
+imports 
+	Tiger-Expressions 
+	Tiger-Statements
+	
+exports
+	
+	sorts 
+		Module
+  
+  	context-free syntax
+		"module" Id Dec* "end"		-> Module {cons("Module")}
+		"import" Id					-> Dec    {cons("Import")}
+
+  	sorts 
+  		Declarations
+  
+	context-free syntax
+
+		"declarations" Dec*					-> Declarations {cons("Declarations")}
+
+		"var" Id TypeAn ":=" Exp							-> Dec  {cons("VarDec")}
+		"var" Id TypeAn										-> Dec  {cons("VarDecNoInit")}
+		"type" Id "=" Type									-> Dec {cons("TypeDec")}
+		"function" Id "(" {FArg ","}* ")" TypeAn "=" Exp	-> Dec {cons("FunDec")}
+
+		"let" Dec* "in" {Exp ";"}* "end"	-> Exp  {cons("Let")}
+    
+		Id TypeAn				-> FArg {cons("FArg")}
+
+								-> TypeAn {cons("NoTp")}
+		":" TypeId				-> TypeAn {cons("Tp")}
+
+		%%"<" TypeId ">"			-> TypeId {cons("Code")}
+		Id						-> TypeId {cons("Tid")}
+
+		TypeId					-> Type   {cons("NameTy")}
+		"{" {Field ","}* "}"	-> Type   {cons("RecordTy")}
+		"array" "of" TypeId	 	-> Type   {cons("ArrayTy")}
+
+		Id ":" TypeId	 		-> Field  {cons("Field")}
\ No newline at end of file

Added: tiger-spoofax/syntax/Tiger-Expressions.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/syntax/Tiger-Expressions.sdf	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,89 @@
+module Tiger-Expressions
+
+imports 
+	Tiger-Constants
+	Tiger-Identifiers 
+	
+exports
+
+	sorts 
+		Exp 
+		Var
+		
+	context-free syntax
+		
+		IntConst					-> Exp {cons("Int")}
+		RealConst					-> Exp {cons("Real")}
+		StrConst					-> Exp {cons("String")}
+		"nil"						-> Exp {cons("NilExp")}
+		
+		"-" Exp			-> Exp {cons("Uminus")}
+		
+		Exp "**" Exp	-> Exp {cons("Power")}
+		Exp "*"  Exp	-> Exp {cons("Times")}
+		Exp "/"  Exp	-> Exp {cons("Divide")}
+		Exp "+"  Exp	-> Exp {cons("Plus")}
+		Exp "-"  Exp	-> Exp {cons("Minus")}
+		
+		Exp "="  Exp	-> Exp {cons("Eq")}
+		Exp "<>" Exp	-> Exp {cons("Neq")}
+		Exp ">"  Exp	-> Exp {cons("Gt")}
+		Exp "<"  Exp	-> Exp {cons("Lt")}
+		Exp ">=" Exp	-> Exp {cons("Geq")}
+		Exp "<=" Exp	-> Exp {cons("Leq")}
+		
+		"true"			-> Exp {cons("True")}
+		"false"			-> Exp {cons("False")}
+		Exp "&"  Exp	-> Exp {cons("And")}
+		Exp "|"  Exp	-> Exp {cons("Or")}
+  
+		LValue						-> Exp
+		Id "(" {Exp ","}* ")" 		-> Exp {cons("Call")}
+		
+		TypeId "[" {Exp ","}+ "]" "of" Exp	-> Exp {cons("Array")}
+		TypeId "{" {InitField ","}* "}"		-> Exp {cons("Record")}
+	
+	    Id "=" Exp					-> InitField {cons("InitField")}
+
+		Var							-> LValue 
+		LValue "." Id				-> LValue {cons("FieldVar")}
+		LValue "[" {Sub ","}+ "]"	-> LValue {cons("Subscript")}
+	
+		Exp							-> Sub {cons("Scalar")}
+		Exp ":" Exp					-> Sub {cons("Range")}
+	
+		Id							-> Var {cons("Var")}
+
+	context-free priorities
+		{
+		  	"-" Exp						-> Exp
+			LValue "." Id				-> LValue
+			LValue "[" {Sub ","}+ "]"	-> LValue 
+		}
+		> {left:
+			Exp "**"  Exp 	-> Exp 
+	    } 
+		> {left:
+			Exp "*"  Exp 	-> Exp 
+			Exp "/"  Exp 	-> Exp
+		} 
+		> {left:
+			Exp "+"  Exp 	-> Exp
+			Exp "-"  Exp 	-> Exp
+	    }
+		> {non-assoc:
+			Exp "="  Exp 	-> Exp
+			Exp "<>" Exp	-> Exp
+			Exp ">"  Exp	-> Exp
+			Exp "<"  Exp	-> Exp
+			Exp ">=" Exp	-> Exp
+			Exp "<=" Exp	-> Exp
+		} 
+		> {left:
+			Exp "&"  Exp	-> Exp 
+	    }
+	    > {left:
+			Exp "|"  Exp	-> Exp 
+	    } 
+		>  TypeId "[" {Exp ","}+ "]"  "of" Exp	-> Exp
+

Added: tiger-spoofax/syntax/Tiger-Identifiers.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/syntax/Tiger-Identifiers.sdf	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,17 @@
+module Tiger-Identifiers
+
+exports
+
+	lexical syntax
+
+		[a-zA-Z][a-zA-Z0-9\_]*	-> Id
+  
+	lexical restrictions
+
+		Id -/- [a-zA-Z0-9\_]
+
+  	lexical syntax
+
+		"nil" -> Id {reject}
+
+

Added: tiger-spoofax/syntax/Tiger-Statements.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/syntax/Tiger-Statements.sdf	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,37 @@
+module Tiger-Statements
+
+imports 
+	Tiger-Expressions 
+
+exports
+
+	context-free syntax
+
+		LValue ":=" Exp					-> Exp {cons("Assign")}
+		"(" {Exp ";"}* ")"				-> Exp {cons("Seq")}
+		
+		"if" Exp "then" Exp "else" Exp	-> Exp {cons("IfThenElse")}
+		"if" Exp "then" Exp				-> Exp {cons("IfThen")}
+		"if" Exp "goto" Id				-> Exp {cons("IfGoto")}
+		
+		"while" Exp "do" Exp							-> Exp {cons("While")}
+		"repeat" Exp "whilst" Exp						-> Exp {cons("DoWhile")}  		
+		"for" Var ":=" Exp "to" Exp "do" Exp 			-> Exp {cons("For")}
+		"break" 			         					-> Exp {cons("Break")}
+		
+		"[" {LValue ","}* "]" ":=" "[" {Exp ","}* "]" 	-> Exp {cons("ParAssign")}
+		
+	context-free priorities
+
+		  Exp "|" Exp			-> Exp {left}
+		> LValue ":=" Exp		-> Exp 
+		> {right:
+			  "if" Exp "then" Exp "else" Exp		-> Exp
+			  "if" Exp "then" Exp					-> Exp
+			  "while" Exp "do" Exp					-> Exp
+			  "repeat" Exp "whilst" Exp				-> Exp
+			  "for" Var ":=" Exp "to" Exp "do" Exp 	-> Exp
+	      }
+		> {Exp ";"}+ ";" {Exp ";"}+ -> {Exp ";"}+
+
+

Added: tiger-spoofax/syntax/Tiger-Whitespace.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/syntax/Tiger-Whitespace.sdf	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,11 @@
+module Tiger-Whitespace
+exports
+
+	lexical syntax
+		
+		[\ \t\n\13] -> LAYOUT
+  
+	context-free restrictions
+    
+		LAYOUT? -/- [\ \t\n]
+

Added: tiger-spoofax/syntax/Tiger.generated.pp
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/syntax/Tiger.generated.pp	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,70 @@
+[
+   Assign                    -- _1 KW[":="] _2,
+   Seq                       -- KW["("] _1 KW[")"],
+   Seq.1:iter-star-sep       -- _1 KW[";"],
+   IfThenElse                -- KW["if"] _1 KW["then"] _2 KW["else"] _3,
+   IfThen                    -- KW["if"] _1 KW["then"] _2,
+   IfGoto                    -- KW["if"] _1 KW["goto"] _2,
+   While                     -- KW["while"] _1 KW["do"] _2,
+   DoWhile                   -- KW["repeat"] _1 KW["whilst"] _2,
+   For                       -- KW["for"] _1 KW[":="] _2 KW["to"] _3 KW["do"] _4,
+   Break                     -- KW["break"],
+   ParAssign                 -- KW["["] _1 KW["]"] KW[":="] KW["["] _2 KW["]"],
+   ParAssign.1:iter-star-sep -- _1 KW[","],
+   ParAssign.2:iter-star-sep -- _1 KW[","],
+   Int                       -- _1,
+   Real                      -- _1,
+   String                    -- _1,
+   NilExp                    -- KW["nil"],
+   Uminus                    -- KW["-"] _1,
+   Power                     -- _1 KW["**"] _2,
+   Times                     -- _1 KW["*"] _2,
+   Divide                    -- _1 KW["/"] _2,
+   Plus                      -- _1 KW["+"] _2,
+   Minus                     -- _1 KW["-"] _2,
+   Eq                        -- _1 KW["="] _2,
+   Neq                       -- _1 KW["<>"] _2,
+   Gt                        -- _1 KW[">"] _2,
+   Lt                        -- _1 KW["<"] _2,
+   Geq                       -- _1 KW[">="] _2,
+   Leq                       -- _1 KW["<="] _2,
+   True                      -- KW["true"],
+   False                     -- KW["false"],
+   And                       -- _1 KW["&"] _2,
+   Or                        -- _1 KW["|"] _2,
+   Call                      -- _1 KW["("] _2 KW[")"],
+   Call.2:iter-star-sep      -- _1 KW[","],
+   Array                     -- _1 KW["["] _2 KW["]"] KW["of"] _3,
+   Array.2:iter-sep          -- _1 KW[","],
+   Record                    -- _1 KW["{"] _2 KW["}"],
+   Record.2:iter-star-sep    -- _1 KW[","],
+   InitField                 -- _1 KW["="] _2,
+   FieldVar                  -- _1 KW["."] _2,
+   Subscript                 -- _1 KW["["] _2 KW["]"],
+   Subscript.2:iter-sep      -- _1 KW[","],
+   Scalar                    -- _1,
+   Range                     -- _1 KW[":"] _2,
+   Var                       -- _1,
+   Module                    -- KW["module"] _1 _2 KW["end"],
+   Module.2:iter-star        -- _1,
+   Import                    -- KW["import"] _1,
+   Declarations              -- V  [H  [KW["declarations"]] _1],
+   Declarations.1:iter-star  -- _1,
+   VarDec                    -- KW["var"] _1 _2 KW[":="] _3,
+   VarDecNoInit              -- KW["var"] _1 _2,
+   TypeDec                   -- KW["type"] _1 KW["="] _2,
+   FunDec                    -- KW["function"] _1 KW["("] _2 KW[")"] _3 KW["="] _4,
+   FunDec.2:iter-star-sep    -- _1 KW[","],
+   Let                       -- KW["let"] _1 KW["in"] _2 KW["end"],
+   Let.1:iter-star           -- _1,
+   Let.2:iter-star-sep       -- _1 KW[";"],
+   FArg                      -- _1 _2,
+   NoTp                      -- ,
+   Tp                        -- KW[":"] _1,
+   Tid                       -- _1,
+   NameTy                    -- _1,
+   RecordTy                  -- KW["{"] _1 KW["}"],
+   RecordTy.1:iter-star-sep  -- _1 KW[","],
+   ArrayTy                   -- KW["array"] KW["of"] _1,
+   Field                     -- _1 KW[":"] _2
+]
\ No newline at end of file

Added: tiger-spoofax/syntax/Tiger.pp
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/syntax/Tiger.pp	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,2 @@
+%% Pretty printing table (see also Tiger.generated.pp)
+[]

Added: tiger-spoofax/syntax/Tiger.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/syntax/Tiger.sdf	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,19 @@
+module Tiger
+
+imports
+	Tiger-Whitespace
+	Tiger-Comments
+	Tiger-Constants
+	Tiger-Identifiers
+	Tiger-Declarations
+	
+exports
+
+	context-free start-symbols
+		Start
+
+	context-free syntax
+  
+    Module			-> Start
+    Declarations	-> Start
+    Exp				-> Start
\ No newline at end of file

Added: tiger-spoofax/test/example.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/example.tig	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1 @@
+let var x := 42 in x end
\ No newline at end of file

Added: tiger-spoofax/trans/tiger.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/tiger.str	Wed Aug 11 09:06:41 2010	(r21147)
@@ -0,0 +1,30 @@
+module tiger
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/Tiger
+  lib/editor-common.generated
+
+rules // Main editor interface (defined by editor/Tiger-Builders and -References.esv)
+  
+  // Analyzes the current program, returning a tuple with errors, warnings, and notes;
+  // each a list of (term, message) tuples or simply (message) terms.
+  editor-analyze:
+    (ast, path, project-path) -> (errors, warnings, notes)
+    with
+      editor-init;
+      //analyze;
+      errors   := <collect-all(fail, conc)> ast;
+      warnings := <collect-all(fail, conc)> ast;
+      notes    := <collect-all(fail, conc)> ast
+  
+  // Prints the abstract syntax ATerm of a selection.
+  generate-aterm:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"aterm")> path;
+      result   := selected // we just return the input term
+  
+  
\ No newline at end of file

From g.h.wachsmuth at tudelft.nl  Wed Aug 11 11:10:22 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 11 Aug 2010 09:10:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21148 -
	tiger-spoofax/test
Message-ID: <201008110910.o7B9AMox010716@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Wed Aug 11 09:10:17 2010
New Revision: 21148
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21148&sc=1

Log:
added examples from the old project

Added:
   tiger-spoofax/test/a.tig
   tiger-spoofax/test/arrays.tig
   tiger-spoofax/test/aterm.tig
   tiger-spoofax/test/break.tig
   tiger-spoofax/test/eval-test1.tig
   tiger-spoofax/test/eval-test2.tig
   tiger-spoofax/test/extract.tig
   tiger-spoofax/test/fac-input.tig
   tiger-spoofax/test/fac.tig
   tiger-spoofax/test/for.tig
   tiger-spoofax/test/kmp1.tig
   tiger-spoofax/test/kmp2.tig
   tiger-spoofax/test/merge.tig
   tiger-spoofax/test/multi-arg.tig
   tiger-spoofax/test/mytest4.tig
   tiger-spoofax/test/mytest5.tig
   tiger-spoofax/test/nestedfunctions.tig
   tiger-spoofax/test/prettyprint.tig
   tiger-spoofax/test/queens.tig
   tiger-spoofax/test/record-io.tig
   tiger-spoofax/test/renaming1.tig
   tiger-spoofax/test/test1.tig
   tiger-spoofax/test/test12.tig
   tiger-spoofax/test/test16.tig
   tiger-spoofax/test/test17.tig
   tiger-spoofax/test/test2.tig
   tiger-spoofax/test/test27.tig
   tiger-spoofax/test/test3.tig
   tiger-spoofax/test/test30.tig
   tiger-spoofax/test/test37.tig
   tiger-spoofax/test/test38.tig
   tiger-spoofax/test/test39.tig
   tiger-spoofax/test/test4.tig
   tiger-spoofax/test/test41.tig
   tiger-spoofax/test/test42.tig
   tiger-spoofax/test/test44.tig
   tiger-spoofax/test/test47.tig
   tiger-spoofax/test/test48.tig
   tiger-spoofax/test/test5.tig
   tiger-spoofax/test/test6.tig
   tiger-spoofax/test/test7.tig
   tiger-spoofax/test/test8.tig
   tiger-spoofax/test/test9.tig
   tiger-spoofax/test/trtest1.tig
   tiger-spoofax/test/trtest2.tig
   tiger-spoofax/test/trtest3.tig
   tiger-spoofax/test/trtest4.tig

Added: tiger-spoofax/test/a.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/a.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1 @@
+printint(0)

Added: tiger-spoofax/test/arrays.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/arrays.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,18 @@
+let 
+
+type vector  = array of int
+
+type matrix = array of vector
+
+var v : vector := vector[3] of 1
+
+var t : matrix := matrix[2] of nil
+
+in for i := 0 to 1 do 
+     t[i] := vector[3] of i;
+   for i := 0 to 1 do
+     for j := 0 to 2 do
+       t[i][j] := i + j;
+   printint(t[1][1])
+   
+end

Added: tiger-spoofax/test/aterm.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/aterm.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,32 @@
+let
+
+type aterm = {fun : string, args : alist}
+type alist = {hd : aterm, tl : alist}
+
+function app(fun: string, args : alist) : aterm =
+  aterm{fun = fun, args = args}
+
+function match(x : aterm, y : aterm) : int =
+  if x = nil then 0
+  else if y = nil then 0
+  else if x.fun = y.fun then match_args(x.args, y.args)
+  else 0
+
+function match_args(xs : alist, ys : alist) : int =
+  if xs <> nil & ys <> nil then
+     match(xs.hd, ys.hd) & match_args(xs.tl,ys.tl)
+  else if xs = nil & ys = nil then 1
+  else 0
+
+function test1() : aterm =
+  app("Succ", alist{hd = app("Zero", nil), tl = nil})
+
+var term : aterm
+
+in
+ 
+   term := test1();
+   print(term.fun)
+   
+
+end

Added: tiger-spoofax/test/break.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/break.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,20 @@
+let 
+
+  function mod(i : int, j : int) : int =
+    i - ((i / j) * j)                                                             
+
+  function inttostring(n : int) : string =
+    if n < 10
+    then chr(48 + n)
+    else concat(inttostring(n / 10), inttostring(mod(n, 10)))                     
+
+  var x := 1
+
+in
+
+  while x < 10 do
+    (x := x + 1; print(inttostring(x)); break);
+  print(inttostring(x))
+
+end
+

Added: tiger-spoofax/test/eval-test1.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/eval-test1.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,3 @@
+let var x : int := 1
+ in printint(x + 2)
+end

Added: tiger-spoofax/test/eval-test2.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/eval-test2.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,6 @@
+let 
+	var n := 0  
+	function fact(n : int) : int =
+      if n = 0 then 1 else n * fact(n - 1)
+ in printint(fact(5))
+end

Added: tiger-spoofax/test/extract.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/extract.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,32 @@
+/* A program to solve the 8-queens problem */
+
+let
+    var N := 8
+
+    type intArray = array of int
+
+    var row := intArray [ N ] of 0
+    var col := intArray [ N ] of 0
+    var diag1 := intArray [N+N-1] of 0
+    var diag2 := intArray [N+N-1] of 0
+
+    function printboard() =
+       (for i := 0 to N-1
+	 do (for j := 0 to N-1 
+	      do print(if col[i]=j then " O" else " .");
+	     print("\n"));
+         print("\n"))
+
+    function try(c:int) = 
+(    if c=N
+     then printboard()
+     else for r := 0 to N-1
+	   do if row[r]=0 & diag1[r+c]=0 & diag2[r+7-c]=0
+	      then (row[r]:=1; diag1[r+c]:=1; diag2[r+7-c]:=1;
+		    col[c]:=r;
+	            try(c+1);
+		    row[r]:=0; diag1[r+c]:=0; diag2[r+7-c]:=0)
+)
+ in try(0)
+end
+	

Added: tiger-spoofax/test/fac-input.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/fac-input.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,6 @@
+/* factorial function; example from SPIM manual */
+
+let function fact(n : int) : int = 
+      if n < 1 then 1 else (n * fact(n - 1))
+ in printint(fact(string2int(argv(1))))
+end

Added: tiger-spoofax/test/fac.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/fac.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,6 @@
+/* factorial function; example from SPIM manual */
+
+let function fact(n : int) : int =
+      if n < 1 then 1 else (n * fact(n - 1))
+ in printint(fact(10))
+end

Added: tiger-spoofax/test/for.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/for.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,15 @@
+let 
+  var i := 1
+  var j := i
+
+  type vec = array of int
+
+  var v : vec := vec [5] of 0
+
+in 
+
+  for i := 0 to 4 do
+    v[i] := i * i
+  ; printint(v[4])
+
+end

Added: tiger-spoofax/test/kmp1.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/kmp1.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,61 @@
+/*
+
+Naive string pattern matching algorithm with complexity O(m * n) with
+m = size(pat) and n = size(str). See p.265 of [JGS93]
+
+Usage:
+
+  kmp1 pat string
+
+with interpreter
+
+  run-tiger -i kmp1.tig --arg1 pat --arg2 string
+
+*/
+
+
+let
+
+type intlist = {hd : int, tl : intlist}
+
+function string2intlist(str : string) : intlist =
+  let var sz := size(str)
+   in if sz = 0 then nil
+      else if sz = 1 then intlist{hd = ord(str), tl = nil}
+      else intlist{hd = ord(substring(str, 0, 1))
+		  ,tl = string2intlist(substring(str, 1, sz - 1))}
+  end
+
+function print_intlist(xs : intlist) =
+  if xs = nil then
+    print("[]")
+  else
+    (printint(xs.hd);
+     print(" : ");
+     print_intlist(xs.tl))
+
+function kmp(pat : string, str : string) : int =
+  kmp_il(string2intlist(pat), string2intlist(str))
+
+function kmp_il(pat : intlist, str : intlist) : int =
+  kmp_loop(pat, str, pat, str)
+
+function kmp_loop(pat : intlist, str : intlist, patb : intlist, strb : intlist) : int =
+  if pat = nil then 
+    1
+  else if str = nil then 
+    0
+  else if pat.hd = str.hd then 
+    kmp_loop(pat.tl, str.tl, patb, strb)
+  else 
+    kmp_il(patb, strb.tl)
+
+function main() =
+  let var pat : string := argv(1)
+      var str : string := argv(2)
+   in printint(kmp(pat, str))
+  end
+
+in main() end
+
+

Added: tiger-spoofax/test/kmp2.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/kmp2.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,61 @@
+/*
+
+Naive string pattern matching algorithm with complexity O(m * n) with
+m = size(pat) and n = size(str). See p.265 of [JGS93]
+
+Usage:
+
+  kmp1 pat string
+
+with interpreter
+
+  run-tiger -i kmp1.tig --arg1 pat --arg2 string
+
+*/
+
+let
+
+type intlist = {hd : int, tl : intlist}
+
+function string2intlist(str : string) : intlist =
+  let var sz := size(str)
+   in if sz = 0 then nil
+      else if sz = 1 then intlist{hd = ord(str), tl = nil}
+      else intlist{hd = ord(substring(str, 0, 1))
+		  ,tl = string2intlist(substring(str, 1, sz - 1))}
+  end
+
+function print_intlist(xs : intlist) =
+  if xs = nil then
+    print("[]")
+  else
+    (printint(xs.hd);
+     print(" : ");
+     print_intlist(xs.tl))
+
+function kmp(pat : string, str : string) : int =
+  kmp_il(string2intlist(pat), string2intlist(str))
+
+function kmp_il(pat : intlist, str : intlist) : int =
+  kmp_loop(pat, str, pat, nil, nil)
+
+function kmp_loop(pat : intlist, str : intlist
+	         ,patb : intlist, f : intlist, ff : intlist) : int =
+  if pat = nil then 
+    1
+  else if f = nil then
+    (
+
+    )
+  else if pat.hd = f.hd then
+    kmp_loop(pat.tl, str)
+
+function main() =
+  let var pat : string := argv(1)
+      var str : string := argv(2)
+   in printint(kmp(pat, str))
+  end
+
+in main() end
+
+

Added: tiger-spoofax/test/merge.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/merge.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,65 @@
+/* merge: 
+	
+   Reads in two lists of integers from standard input, merges
+   them, and prints the resulting list.
+ 
+   If the initial lists are sorted the result list is sorted
+   as well.
+
+*/
+
+let 
+
+ type any = {any : int}
+ var buffer := getchar()
+
+ function readint(any: any) : int =
+ let var i := 0
+     function isdigit(s : string) : int = 
+		  ord(buffer)>=ord("0") & ord(buffer)<=ord("9")
+     function skipto() =
+       while buffer=" " | buffer="\n"
+         do buffer := getchar()
+  in skipto();
+     any.any := isdigit(buffer);
+     while isdigit(buffer)
+       do (i := i*10+ord(buffer)-ord("0"); buffer := getchar());
+     i
+ end
+
+ type list = {first: int, rest: list}
+
+ function readlist() : list =
+    let var any := any{any=0}
+        var i := readint(any)
+     in if any.any
+         then list{first=i,rest=readlist()}
+         else nil
+    end
+
+ function merge(a: list, b: list) : list =
+   if a=nil then b
+   else if b=nil then a
+   else if a.first < b.first 
+      then list{first=a.first,rest=merge(a.rest,b)}
+      else list{first=b.first,rest=merge(a,b.rest)}
+
+ function printint(i: int) =
+  let function f(i:int) = if i>0 
+	     then (f(i/10); print(chr(i-i/10*10+ord("0"))))
+   in if i<0 then (print("-"); f(-i))
+      else if i>0 then f(i)
+      else print("0")
+  end
+
+ function printlist(l: list) =
+   if l=nil then print("\n")
+   else (printint(l.first); print(" "); printlist(l.rest))
+
+   var list1 := readlist()
+   var list2 := (buffer:=getchar(); readlist())
+
+  /* BODY OF MAIN PROGRAM */
+ in printlist(merge(list1,list2))
+end
+

Added: tiger-spoofax/test/multi-arg.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/multi-arg.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,7 @@
+/* function with many (more than four) arguments */
+
+let function multi(arg1 : int, arg2 : int, arg3 : int, arg4 : int, arg5 : int) : int =
+      arg1 + arg2 + arg3 + arg4 + arg5
+ in
+    printint(multi(1,2,3,4,5))
+end

Added: tiger-spoofax/test/mytest4.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/mytest4.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,8 @@
+let function f(x : int, z : int) : int = 
+    let function g(y : int) : int = 
+          (x + y) - z
+     in g(x)
+    end
+ in printint(f(4, 6))
+end
+ 
\ No newline at end of file

Added: tiger-spoofax/test/mytest5.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/mytest5.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,17 @@
+/* factorial function; example from SPIM manual */
+
+let 
+
+  var x := 0
+
+  function fact(n : int) : int = 
+      if n < 1 then 1 else (n * fact(n - 1))
+
+in 
+
+  for i := 1 to 3 do 
+    (x := x + fact(i);
+     printint(x);
+     print(" "))
+
+end

Added: tiger-spoofax/test/nestedfunctions.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/nestedfunctions.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,15 @@
+let var x := 1
+ in let var x := x + 3
+     in let function x(x : int, y : int) : int =
+              let var i := 3 var z := 0
+               in for i := 0 to x do z := z + i * y;
+                  z
+              end
+         in x(3,4)
+        end;
+        x + 5
+    end;
+    let var y := 3
+     in printint((x + 6) + y)
+    end
+end
\ No newline at end of file

Added: tiger-spoofax/test/prettyprint.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/prettyprint.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,41 @@
+let
+
+type tree = {key: string, left : tree, right: tree}
+
+function prettyprint(tree: tree) : string =
+let
+
+  var output := ""
+
+  function write(s: string) =
+    output := concat(output, s)
+
+  function show(n: int, t: tree) =
+  let function indent(s: string) =
+        (write("\n");
+         for i := 1 to n
+          do write(" ");
+         output := concat(output, s))
+   in if t = nil then indent(".")
+      else (indent(t.key);
+            show(n+1, t.left);
+            show(n+1, t.right))
+  end
+
+ in show(0, tree); 
+    output
+end
+
+function node(x : string, l : tree, r : tree) : tree =
+  tree{key = x, left = l, right = r}
+
+function printnl(x : string) =
+  (print(x); print("\n"))
+
+in let var t := node("a",node("b",nil,nil),
+                         node("c",nil,node("d",nil,nil)))
+    in printnl("start");
+       printnl(prettyprint(t));
+       printnl("end")
+   end
+end

Added: tiger-spoofax/test/queens.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/queens.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,32 @@
+/* A program to solve the 8-queens problem */
+
+let
+    var N := 8
+
+    type intArray = array of int
+
+    var row := intArray [ N ] of 0
+    var col := intArray [ N ] of 0
+    var diag1 := intArray [N+N-1] of 0
+    var diag2 := intArray [N+N-1] of 0
+
+    function printboard() =
+       (for i := 0 to N-1
+	 do (for j := 0 to N-1 
+	      do print(if col[i]=j then " O" else " .");
+	     print("\n"));
+         print("\n"))
+
+    function try(c:int) = 
+(    if c=N
+     then printboard()
+     else for r := 0 to N-1
+	   do if row[r]=0 & diag1[r+c]=0 & diag2[r+7-c]=0
+	      then (row[r]:=1; diag1[r+c]:=1; diag2[r+7-c]:=1;
+		    col[c]:=r;
+	            try(c+1);
+		    row[r]:=0; diag1[r+c]:=0; diag2[r+7-c]:=0)
+)
+ in try(0)
+end
+	

Added: tiger-spoofax/test/record-io.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/record-io.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,21 @@
+let
+
+  type stringintpair = { left : string, right : int }
+
+  type intstringpair = { left : string, right : int }
+
+  function swap(p : stringintpair) : intstringpair =
+    intstringpair{ left = p.right, right = p.left }
+
+  function main() =
+    if not(argc(1)) then 
+      print("no first argument")
+    else if argv(1) = "generate" then
+      writeval(argv(2), stringintpair{left = "a", right = 1})
+    else if argv(1) = "read/write" then
+      writeval(argv(3), swap(readval(argv(2))))
+    else
+      print("no such command: ")
+
+in main()
+end
\ No newline at end of file

Added: tiger-spoofax/test/renaming1.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/renaming1.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,7 @@
+let var i var i := 4
+ in printint(
+	(let var i := (i + 2)
+         in i
+         end + i)
+    )
+end

Added: tiger-spoofax/test/test1.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test1.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,7 @@
+/* an array type and an array variable */ 
+let
+	type  arrtype = array of int
+	var arr1:arrtype := arrtype [10] of 0
+in
+	arr1
+end

Added: tiger-spoofax/test/test12.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test12.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,9 @@
+/* valid for and let */
+
+let
+	var a:= 0
+	var a:= 1
+in 
+	for i:=0 to 100 do (a:=a+1;())
+	; printint(a)
+end

Added: tiger-spoofax/test/test16.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test16.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,11 @@
+/* error: mutually recursive types thet do not pass through record or array */
+let 
+
+type a=c
+type b=a
+type c=d
+type d=a
+
+in
+ ""
+end

Added: tiger-spoofax/test/test17.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test17.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,10 @@
+/* error: definition of recursive types is interrupted */
+let
+/* define a tree */
+type tree ={key: int, children: treelist}
+var d:int :=0
+type treelist = {hd: tree, tl: treelist}
+
+in
+    printint(d)
+end

Added: tiger-spoofax/test/test2.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test2.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,9 @@
+/* arr1 is valid since expression 0 is int = myint */
+let
+	type myint = int
+	type  arrtype = array of myint
+
+	var arr1:arrtype := arrtype [10] of 0
+in
+	arr1
+end

Added: tiger-spoofax/test/test27.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test27.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,10 @@
+/* locals hide globals */
+let
+	var a:=0
+
+	function g(a:int):int = a * 4
+in
+ printint(g(2))
+ ; print(" outer scope a: ")
+ ; printint(a)
+end

Added: tiger-spoofax/test/test3.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test3.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,11 @@
+/* a record type and a record variable */
+let
+ type  rectype = {name:string, age:int}
+ var rec1:rectype := rectype {name="Nobody", age=1000}
+in
+ rec1.name := "Somebody";
+ print(rec1.name);
+ rec1;
+ printint(rec1.age)
+end
+ 

Added: tiger-spoofax/test/test30.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test30.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,10 @@
+/* synonyms are fine */
+
+let 
+ type a = array of int
+ type b = a
+
+ var arr1:a := b [10] of 0
+in
+  printint( arr1[2])
+end

Added: tiger-spoofax/test/test37.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test37.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,8 @@
+/* redeclaration of variable; this is legal, there are two different
+   variables with the same name.  The second one hides the first.  */
+let
+	var a := 0
+	var a := " "
+in
+	0
+end

Added: tiger-spoofax/test/test38.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test38.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,9 @@
+/* This is illegal, since there are two types with the same name
+    in the same (consecutive) batch of mutually recursive types. 
+    See also test47  */
+let
+	type a = int
+	type a = string
+in
+	0
+end

Added: tiger-spoofax/test/test39.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test39.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,9 @@
+/* This is illegal, since there are two functions with the same name
+    in the same (consecutive) batch of mutually recursive functions.
+   See also test48 */
+let
+	function g(a:int):int = a
+	function g(a:int):int = a
+in
+	0
+end

Added: tiger-spoofax/test/test4.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test4.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,22 @@
+/* define a recursive function */
+let
+
+function printnl(x : string) =
+  (print(x); print("\n"))
+
+function mod(i : int, j : int) : int =
+  i - ((i / j) * j)
+
+function inttostring(n : int) : string =
+  if n < 10 
+  then chr(48 + n)
+  else concat(inttostring(n / 10), inttostring(mod(n, 10)))
+
+/* calculate n! */
+function nfactor(n: int): int =
+  if n = 0 then 1 else (n * nfactor(n-1))
+
+in
+   printnl(inttostring(nfactor(10)))
+end
+

Added: tiger-spoofax/test/test41.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test41.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,10 @@
+/* local types hide global */
+let
+	type a = int
+in
+	let
+		type a = string
+	in
+		printint(0)
+	end
+end

Added: tiger-spoofax/test/test42.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test42.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,34 @@
+/* correct declarations */
+let 
+
+type arrtype1 = array of int
+type rectype1 = {name:string, address:string, id: int , age: int}
+type arrtype2 = array of rectype1
+type rectype2 = {name : string, dates: arrtype1}
+
+type arrtype3 = array of string
+
+var arr1 := arrtype1 [10] of 0
+var arr2  := arrtype2 [5] of rectype1 {name="aname", address="somewhere", id=0, age=0}
+var arr3:arrtype3 := arrtype3 [100] of ""
+
+var rec1 := rectype1 {name="Kapoios", address="Kapou", id=02432, age=44}
+var rec2 := rectype2 {name="Allos", dates= arrtype1 [3] of 1900}
+
+in
+
+arr1[0] := 1; 
+arr1[9] := 3;
+arr2[3].name := "kati";
+arr2[1].age := 23;
+arr3[34] := "sfd";
+print(arr3[34]);
+print(" ");
+
+rec1.name := "sdf";
+rec2.dates[0] := 2323;
+rec2.dates[2] := 2323;
+
+printint(rec2.dates[2])
+
+end

Added: tiger-spoofax/test/test44.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test44.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,12 @@
+/* valid nil initialization and assignment */
+let 
+
+ type rectype = {name:string, id:int}
+ var b:rectype := nil
+
+in
+
+ b := nil;
+ print("nil ")
+
+end

Added: tiger-spoofax/test/test47.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test47.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,11 @@
+/* This is legal.  The second type "a" simply hides the first one.
+   Because of the intervening variable declaration, the two "a" types
+   are not in the same  batch of mutually recursive types.
+   See also test38 */
+let
+ type a = int
+ var  b := 4
+ type a = string
+in
+ printint(0)
+end

Added: tiger-spoofax/test/test48.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test48.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,11 @@
+/* This is legal.  The second function "g" simply hides the first one.
+   Because of the intervening variable declaration, the two "g" functions
+   are not in the same  batch of mutually recursive functions. 
+   See also test39 */
+let
+	function g(a:int):int = a
+	type t = int
+	function g(a:int):int = a
+in
+	printint(0)
+end

Added: tiger-spoofax/test/test5.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test5.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,14 @@
+/* define valid recursive types */
+let
+/* define a list */
+type intlist = {hd: int, tl: intlist} 
+
+/* define a tree */
+type tree ={key: int, children: treelist}
+type treelist = {hd: tree, tl: treelist}
+
+var lis:intlist := intlist { hd=24, tl= nil } 
+
+in
+  printint(lis.hd)
+end

Added: tiger-spoofax/test/test6.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test6.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,15 @@
+/* define valid mutually recursive procedures */
+let
+
+function do_nothing1(a: int, b: string)=
+	   if a < 25 then
+		do_nothing2(a+1)
+
+function do_nothing2(d: int) =
+		do_nothing1(d, "str")
+
+in
+	do_nothing1(0, "str2")
+	; print("end of exec ")
+end
+

Added: tiger-spoofax/test/test7.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test7.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,14 @@
+/* define valid mutually recursive functions */
+let
+
+function do_nothing1(a: int, b: string):int=
+		(if a < 25 then do_nothing2(a+1) else 1;0)
+
+function do_nothing2(d: int):string =
+		(do_nothing1(d, "str");" ")
+
+in
+	do_nothing1(0, "str2")
+	; print("end of exec ")
+end
+

Added: tiger-spoofax/test/test8.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test8.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,2 @@
+/* correct if */
+if (10 > 20) then printint(30) else printint(40)

Added: tiger-spoofax/test/test9.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/test9.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,3 @@
+/* error : types of then - else differ */
+
+if (5>4) then printint(13) else  print(" empty ")

Added: tiger-spoofax/test/trtest1.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/trtest1.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,6 @@
+let function f() : int =
+    let var x : int := 1
+     in x + 1
+    end
+in printint(f())
+end
\ No newline at end of file

Added: tiger-spoofax/test/trtest2.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/trtest2.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,6 @@
+let function f() : int =
+    let var x : int := 1
+     in x + 1
+    end
+in printint(f())
+end
\ No newline at end of file

Added: tiger-spoofax/test/trtest3.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/trtest3.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,6 @@
+let var x := 3
+ in while x < 10 do (
+      x := x + 1
+    )
+    ; printint(x)
+end
\ No newline at end of file

Added: tiger-spoofax/test/trtest4.tig
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/trtest4.tig	Wed Aug 11 09:10:17 2010	(r21148)
@@ -0,0 +1,3 @@
+let var x : string := "abc"
+ in print(x)
+end
\ No newline at end of file

From g.h.wachsmuth at tudelft.nl  Wed Aug 11 11:39:51 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 11 Aug 2010 09:39:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21149 - in
	tiger-spoofax: editor trans
Message-ID: <201008110939.o7B9dpQ6011176@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Wed Aug 11 09:39:41 2010
New Revision: 21149
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21149&sc=1

Log:
added renaming, simple name-based checks

Added:
   tiger-spoofax/trans/analyze.str
   tiger-spoofax/trans/check.str
   tiger-spoofax/trans/rename.str
Modified:
   tiger-spoofax/editor/Tiger-Builders.esv
   tiger-spoofax/trans/tiger.str

Modified: tiger-spoofax/editor/Tiger-Builders.esv
==============================================================================
--- tiger-spoofax/editor/Tiger-Builders.esv	Wed Aug 11 09:10:17 2010	(r21148)
+++ tiger-spoofax/editor/Tiger-Builders.esv	Wed Aug 11 09:39:41 2010	(r21149)
@@ -16,5 +16,6 @@
   observer                  : editor-analyze                                                                   
                                                                                                                
   builder                   : "Show abstract syntax" = generate-aterm (openeditor) (realtime) (meta) (source)  
+  builder                   : "Show renamed AST" = generate-renamed-aterm (openeditor) (realtime) (meta) 
                                                                                                                
-  // on save: generate-java                                                                                    
\ No newline at end of file
+  
\ No newline at end of file

Added: tiger-spoofax/trans/analyze.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/analyze.str	Wed Aug 11 09:39:41 2010	(r21149)
@@ -0,0 +1,23 @@
+module analyze
+
+imports
+	libstratego-lib
+	lib/editor-common.generated
+
+imports	
+	include/Tiger
+	rename
+	
+rules
+	
+	analyze : 
+		ast -> ast'
+		where
+			editor-init ; 
+			<rename-all> ast => ast' ;
+			rules(Analyzed: ast -> ast')
+	
+strategies	
+ 	lazy-analyze = 
+ 		Analyzed <+ analyze 
+ 

Added: tiger-spoofax/trans/check.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/check.str	Wed Aug 11 09:39:41 2010	(r21149)
@@ -0,0 +1,38 @@
+module check
+
+imports
+	include/Tiger
+	rename
+
+rules
+	
+	editor-error:
+		e at Tid(t) -> (e, $[Type [t] is not declared.])
+		where
+			not (<TypeDecl> t)
+	
+	editor-error:
+		e at Var(x) -> (e, $[Variable [x] is not declared.])
+		where
+			<debug(!"check ")> e ;
+			not (<VarDecl> x)
+	
+	editor-error:
+		e at Call(f, _) -> (e, $[Function [f] is not declared.])
+		where
+			not (<FunDecl> f)
+	
+	editor-warning: 
+		d at VarDec(x, _, _) -> (d, $[Variable [x] is never used.])
+		where
+			not (<UsedVar> x)
+	
+	editor-warning: 
+		d at VarDecNoInit(x, _) -> (d, $[Variable [x] is never used.])
+		where
+			not (<UsedVar> x)
+			
+	editor-warning: 
+		d at FunDec(f, _, _, _) -> (d, $[Function [f] is never called.])
+		where
+			not (<UsedFun> f)

Added: tiger-spoofax/trans/rename.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/rename.str	Wed Aug 11 09:39:41 2010	(r21149)
@@ -0,0 +1,111 @@
+module rename
+
+imports 
+	include/Tiger 
+
+strategies
+
+	rename-all = alltd(rename)
+	
+rules // type declarations
+
+	new-tid : 
+		x -> x{y} 
+		where 
+			<newname> x  => y ; 
+			rules(RenamedTid: x -> x{y})
+				
+	rename :	
+		Tid(x) -> Tid(y) 
+		where 	
+			<RenamedTid> x => y ;
+			rules (UsedType: y -> y)
+
+	rename :
+		d at TypeDec(x, t) -> TypeDec(y, t')
+		where 
+			<new-tid> x => y ;
+			<rename-all> t => t' ;
+			rules(TypeDecl: y -> d)
+
+rules // variables and their declarations
+
+	new-var: 
+		x -> x{y}
+		where 
+			<newname> x  => y ; 
+			rules(RenamedVar: x -> x{y})
+	
+	rename:	
+		Var(x) -> Var(y) 
+		where 	
+			<RenamedVar> x => y ;
+			rules (UsedVar: y -> y)
+
+	rename:
+    	d at VarDec(x, t, e) -> VarDec(y, t', e')
+    	where 
+    		<rename-all> t => t';
+    		<rename-all> e => e';
+    		<new-var> x => y ;
+    		<debug(!"declare ")> (y, d) ;
+			rules(VarDecl: y -> d)
+    		
+	rename:
+    	d at VarDecNoInit(x, t) -> VarDecNoInit(y, t')
+    	where 
+    		<rename-all> t => t' ;
+    		<new-var> x => y ;
+    		rules(VarDecl: y -> d)
+
+	rename:
+		Let(ds, es) -> Let(ds', es')
+		where
+			{| RenamedVar, RenamedTid, RenamedFun : 
+				<rename-all> ds => ds' ;
+				<rename-all> es => es' 
+			|}
+
+	rename :
+		d at For(x, e1, e2, e3) -> For(y, e1', e2', e3')
+		where 
+			<rename-all> e1 => e1' ;
+			<rename-all> e1 => e2' ;
+			{| RenamedVar: 
+				<new-var> x => y ;
+				<rename-all> e3 => e3'
+			|} ;
+			rules(VarDecl: y -> d)
+
+rules // functions
+
+	new-fun : 
+		x -> x{y}
+		where 
+			<newname> x  => y ; 
+			rules(RenamedFun : x -> x{y})
+		
+	rename :
+		d at FunDec(f, as, t, e) -> FunDec(g, as', t', e')
+    	where 
+    		<new-fun> f => g ;
+    		<rename-all> t => t' ;
+    		{| RenamedVar: 
+    			<rename-all> as => as' ;
+    			<rename-all> e => e' 
+    		|} ;
+    		rules(FunDecl: g -> d)
+
+	rename :
+		d at FArg(x, t) -> FArg(y, t')
+		where
+			<new-var> x => y ;
+			<rename-all> t => t' ;
+			rules(VarDecl: y -> d)
+			
+	rename :
+		Call(f, es) -> Call(g, es')
+		where
+			<RenamedFun> f => g ;
+			<rename-all> es => es' ;
+			rules (UsedFun: g -> g)

Modified: tiger-spoofax/trans/tiger.str
==============================================================================
--- tiger-spoofax/trans/tiger.str	Wed Aug 11 09:10:17 2010	(r21148)
+++ tiger-spoofax/trans/tiger.str	Wed Aug 11 09:39:41 2010	(r21149)
@@ -1,30 +1,38 @@
 module tiger
 
 imports
-  libstratego-lib
-  libstratego-gpp
-  libstratego-aterm
-  include/Tiger
-  lib/editor-common.generated
+	libstratego-lib
+	libstratego-gpp
+	libstratego-aterm
+	lib/editor-common.generated
 
+imports
+	include/Tiger
+	analyze
+	check
+	
 rules // Main editor interface (defined by editor/Tiger-Builders and -References.esv)
   
-  // Analyzes the current program, returning a tuple with errors, warnings, and notes;
-  // each a list of (term, message) tuples or simply (message) terms.
-  editor-analyze:
-    (ast, path, project-path) -> (errors, warnings, notes)
-    with
-      editor-init;
-      //analyze;
-      errors   := <collect-all(fail, conc)> ast;
-      warnings := <collect-all(fail, conc)> ast;
-      notes    := <collect-all(fail, conc)> ast
+	// Analyzes the current program, returning a tuple with errors, warnings, and notes;
+	// each a list of (term, message) tuples or simply (message) terms.
+	editor-analyze:
+		(ast, path, project-path) -> (errors, warnings, notes)
+		with
+			editor-init;
+			<analyze> ast => ast';
+			<collect-all(editor-error, conc)> ast' 		=> errors;
+			<collect-all(editor-warning, conc)> ast' 	=> warnings;
+			<collect-all(fail, conc)> ast'				=> notes
   
-  // Prints the abstract syntax ATerm of a selection.
-  generate-aterm:
+	// Prints the abstract syntax ATerm of a selection.
+	generate-aterm:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       filename := <guarantee-extension(|"aterm")> path;
       result   := selected // we just return the input term
   
-  
\ No newline at end of file
+   	generate-renamed-aterm:
+		(selected, position, ast, path, project-path) -> (filename, result)
+		where
+			<guarantee-extension(|"aterm")> path => filename ;
+			<lazy-analyze> ast => result

From g.h.wachsmuth at tudelft.nl  Wed Aug 11 12:02:26 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 11 Aug 2010 10:02:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21150 -
	tiger-spoofax/trans
Message-ID: <201008111002.o7BA2QXx011738@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Wed Aug 11 10:02:20 2010
New Revision: 21150
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21150&sc=1

Log:
removed debugging

Modified:
   tiger-spoofax/trans/check.str

Modified: tiger-spoofax/trans/check.str
==============================================================================
--- tiger-spoofax/trans/check.str	Wed Aug 11 09:39:41 2010	(r21149)
+++ tiger-spoofax/trans/check.str	Wed Aug 11 10:02:20 2010	(r21150)
@@ -14,7 +14,6 @@
 	editor-error:
 		e at Var(x) -> (e, $[Variable [x] is not declared.])
 		where
-			<debug(!"check ")> e ;
 			not (<VarDecl> x)
 	
 	editor-error:

From g.h.wachsmuth at tudelft.nl  Wed Aug 11 12:03:49 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 11 Aug 2010 10:03:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21151 -
	tiger-spoofax/trans
Message-ID: <201008111003.o7BA3ndB011742@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Wed Aug 11 10:03:42 2010
New Revision: 21151
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21151&sc=1

Log:
removed debugging

Modified:
   tiger-spoofax/trans/rename.str

Modified: tiger-spoofax/trans/rename.str
==============================================================================
--- tiger-spoofax/trans/rename.str	Wed Aug 11 10:02:20 2010	(r21150)
+++ tiger-spoofax/trans/rename.str	Wed Aug 11 10:03:42 2010	(r21151)
@@ -48,8 +48,7 @@
     		<rename-all> t => t';
     		<rename-all> e => e';
     		<new-var> x => y ;
-    		<debug(!"declare ")> (y, d) ;
-			rules(VarDecl: y -> d)
+    		rules(VarDecl: y -> d)
     		
 	rename:
     	d at VarDecNoInit(x, t) -> VarDecNoInit(y, t')

From g.h.wachsmuth at tudelft.nl  Wed Aug 11 12:05:27 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 11 Aug 2010 10:05:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21152 -
	tiger-spoofax/syntax
Message-ID: <201008111005.o7BA5RmT011754@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Wed Aug 11 10:05:26 2010
New Revision: 21152
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21152&sc=1

Log:
removed Id -> Var indirection in definition of for-loops

Modified:
   tiger-spoofax/syntax/Tiger-Statements.sdf

Modified: tiger-spoofax/syntax/Tiger-Statements.sdf
==============================================================================
--- tiger-spoofax/syntax/Tiger-Statements.sdf	Wed Aug 11 10:03:42 2010	(r21151)
+++ tiger-spoofax/syntax/Tiger-Statements.sdf	Wed Aug 11 10:05:26 2010	(r21152)
@@ -16,7 +16,7 @@
 		
 		"while" Exp "do" Exp							-> Exp {cons("While")}
 		"repeat" Exp "whilst" Exp						-> Exp {cons("DoWhile")}  		
-		"for" Var ":=" Exp "to" Exp "do" Exp 			-> Exp {cons("For")}
+		"for" Id ":=" Exp "to" Exp "do" Exp 			-> Exp {cons("For")}
 		"break" 			         					-> Exp {cons("Break")}
 		
 		"[" {LValue ","}* "]" ":=" "[" {Exp ","}* "]" 	-> Exp {cons("ParAssign")}
@@ -30,7 +30,7 @@
 			  "if" Exp "then" Exp					-> Exp
 			  "while" Exp "do" Exp					-> Exp
 			  "repeat" Exp "whilst" Exp				-> Exp
-			  "for" Var ":=" Exp "to" Exp "do" Exp 	-> Exp
+			  "for" Id ":=" Exp "to" Exp "do" Exp 	-> Exp
 	      }
 		> {Exp ";"}+ ";" {Exp ";"}+ -> {Exp ";"}+
 

From g.h.wachsmuth at tudelft.nl  Wed Aug 11 12:07:16 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 11 Aug 2010 10:07:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21153 -
	tiger-spoofax/trans
Message-ID: <201008111007.o7BA7GsZ011756@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Wed Aug 11 10:07:14 2010
New Revision: 21153
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21153&sc=1

Log:
added check for unused arguments

Modified:
   tiger-spoofax/trans/check.str

Modified: tiger-spoofax/trans/check.str
==============================================================================
--- tiger-spoofax/trans/check.str	Wed Aug 11 10:05:26 2010	(r21152)
+++ tiger-spoofax/trans/check.str	Wed Aug 11 10:07:14 2010	(r21153)
@@ -26,10 +26,16 @@
 		where
 			not (<UsedVar> x)
 	
+	
 	editor-warning: 
 		d at VarDecNoInit(x, _) -> (d, $[Variable [x] is never used.])
 		where
 			not (<UsedVar> x)
+	
+	editor-warning: 
+		d at FArg(x, _) -> (d, $[Argument [x] is never used.])
+		where
+			not (<UsedVar> x)
 			
 	editor-warning: 
 		d at FunDec(f, _, _, _) -> (d, $[Function [f] is never called.])

From g.h.wachsmuth at tudelft.nl  Wed Aug 11 12:08:38 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 11 Aug 2010 10:08:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21154 -
	tiger-spoofax/trans
Message-ID: <201008111008.o7BA8cEl011761@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Wed Aug 11 10:08:38 2010
New Revision: 21154
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21154&sc=1

Log:
generating renamed AST now works on selections

Modified:
   tiger-spoofax/trans/tiger.str

Modified: tiger-spoofax/trans/tiger.str
==============================================================================
--- tiger-spoofax/trans/tiger.str	Wed Aug 11 10:07:14 2010	(r21153)
+++ tiger-spoofax/trans/tiger.str	Wed Aug 11 10:08:38 2010	(r21154)
@@ -10,6 +10,7 @@
 	include/Tiger
 	analyze
 	check
+	resolve
 	
 rules // Main editor interface (defined by editor/Tiger-Builders and -References.esv)
   
@@ -31,8 +32,11 @@
       filename := <guarantee-extension(|"aterm")> path;
       result   := selected // we just return the input term
   
-   	generate-renamed-aterm:
+   	// Prints the renamed abstract syntax ATerm of a selection.
+	generate-renamed-aterm:
 		(selected, position, ast, path, project-path) -> (filename, result)
 		where
 			<guarantee-extension(|"aterm")> path => filename ;
-			<lazy-analyze> ast => result
+			<lazy-analyze> ast => ast' ;
+			<term-at-position(|position)> ast' => result
+

From g.h.wachsmuth at tudelft.nl  Wed Aug 11 12:10:02 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 11 Aug 2010 10:10:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21155 - in
	tiger-spoofax: editor test trans
Message-ID: <201008111010.o7BAA2vv011788@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Wed Aug 11 10:10:00 2010
New Revision: 21155
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21155&sc=1

Log:
added service for resolving variables, functions, and types

Added:
   tiger-spoofax/test/nestedfunctions.aterm
   tiger-spoofax/trans/project-names.str
   tiger-spoofax/trans/resolve.str
Modified:
   tiger-spoofax/editor/Tiger-References.esv
   tiger-spoofax/trans/tiger.str

Modified: tiger-spoofax/editor/Tiger-References.esv
==============================================================================
--- tiger-spoofax/editor/Tiger-References.esv	Wed Aug 11 10:08:38 2010	(r21154)
+++ tiger-spoofax/editor/Tiger-References.esv	Wed Aug 11 10:10:00 2010	(r21155)
@@ -4,7 +4,9 @@
 
 references
                                                                                                    
-  // This file can be used to specify reference resolving and hover help, and content completion.  
-  //                                                                                               
-  // See the imported file for a brief introduction and examples.                                  
-                                                                                                   
\ No newline at end of file
+	// This file can be used to specify reference resolving and hover help, and content completion.  
+	//                                                                                               
+	// See the imported file for a brief introduction and examples.                                  
+    
+    reference _ : editor-resolve
+                                                                                                 
\ No newline at end of file

Added: tiger-spoofax/test/nestedfunctions.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/test/nestedfunctions.aterm	Wed Aug 11 10:10:00 2010	(r21155)
@@ -0,0 +1,9 @@
+For(
+  Var("i"){"Var0"}
+, Int("0")
+, Int("0")
+, Assign(
+    Var("z"{"z0"})
+  , Plus(Var("z"{"z0"}), Times(Var("i"{"i3"}), Var("y"{"y0"})))
+  )
+)
\ No newline at end of file

Added: tiger-spoofax/trans/project-names.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/project-names.str	Wed Aug 11 10:10:00 2010	(r21155)
@@ -0,0 +1,25 @@
+module project-names
+
+imports
+	include/Tiger
+	
+rules
+	
+	type-name:
+		TypeDec(x, _) -> x
+
+	var-name:
+		VarDec(x, _, _) -> x
+	
+	var-name:
+		VarDecNoInit(x, _) -> x
+	
+	var-name:
+		For(x, _, _, _) -> x
+	
+	var-name:
+		FArg(x, _) -> x
+		
+	fun-name:
+		FunDec(f, _, _, _) -> f
+			
\ No newline at end of file

Added: tiger-spoofax/trans/resolve.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/resolve.str	Wed Aug 11 10:10:00 2010	(r21155)
@@ -0,0 +1,27 @@
+module resolve
+
+imports
+	include/Tiger
+	rename
+	project-names
+	
+rules
+	
+	resolve:
+		Tid(t) -> t'
+		where
+			<TypeDecl> t => dec ;
+			<type-name> dec => t'
+
+	resolve:
+		Var(x) -> y
+		where
+			<VarDecl> x => dec ;
+			<var-name> dec => y
+	
+	resolve:
+		Call(f, _) -> g
+		where
+			<FunDecl> f => dec ;
+			<fun-name> dec => g
+

Modified: tiger-spoofax/trans/tiger.str
==============================================================================
--- tiger-spoofax/trans/tiger.str	Wed Aug 11 10:08:38 2010	(r21154)
+++ tiger-spoofax/trans/tiger.str	Wed Aug 11 10:10:00 2010	(r21155)
@@ -40,3 +40,11 @@
 			<lazy-analyze> ast => ast' ;
 			<term-at-position(|position)> ast' => result
 
+	// Resolves a reference when the user control-clicks or presses F3 in the editor.
+	editor-resolve:
+		(node, position, ast, path, project-path) -> target
+    	where
+			<lazy-analyze> ast => ast' ;
+			<term-at-position(|position)> ast' => node' ;
+			//<debug(!"Resolve: ")> node';
+			<resolve> node' => target

From g.h.wachsmuth at tudelft.nl  Wed Aug 11 12:33:20 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 11 Aug 2010 10:33:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21156 - in
	tiger-spoofax: editor trans
Message-ID: <201008111033.o7BAXLxB011993@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Wed Aug 11 10:33:08 2010
New Revision: 21156
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21156&sc=1

Log:
added desugaring of expressions

Added:
   tiger-spoofax/trans/desugar.str
Modified:
   tiger-spoofax/editor/Tiger-Builders.esv
   tiger-spoofax/trans/tiger.str

Modified: tiger-spoofax/editor/Tiger-Builders.esv
==============================================================================
--- tiger-spoofax/editor/Tiger-Builders.esv	Wed Aug 11 10:10:00 2010	(r21155)
+++ tiger-spoofax/editor/Tiger-Builders.esv	Wed Aug 11 10:33:08 2010	(r21156)
@@ -11,11 +11,12 @@
 
 builders
                                                                                                                
-  provider                  : include/tiger.ctree                                                              
+	provider                  : include/tiger.ctree                                                              
                                                                                                                
-  observer                  : editor-analyze                                                                   
+	observer                  : editor-analyze                                                                   
                                                                                                                
-  builder                   : "Show abstract syntax" = generate-aterm (openeditor) (realtime) (meta) (source)  
-  builder                   : "Show renamed AST" = generate-renamed-aterm (openeditor) (realtime) (meta) 
+	builder                   : "Show abstract syntax" = generate-aterm (openeditor) (realtime) (meta) (source)  
+	builder                   : "Show renamed AST" = rename-aterm (openeditor) (realtime) (meta) 
+    builder                   : "Show desugared AST" = desugar-aterm (openeditor) (realtime) (meta) 
                                                                                                                
   
\ No newline at end of file

Added: tiger-spoofax/trans/desugar.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/desugar.str	Wed Aug 11 10:33:08 2010	(r21156)
@@ -0,0 +1,78 @@
+module desugar
+
+imports 
+	include/Tiger
+
+signature constructors
+	PLUS: 	BinOp
+	MINUS: 	BinOp
+	MUL: 	BinOp
+	DIV: 	BinOp
+	POW: 	BinOp
+	
+	EQ: 	RelOp
+	NE: 	RelOp
+	LE: 	RelOp
+	LT: 	RelOp
+	GE: 	RelOp
+	GT: 	RelOp
+	
+	Bop: BinOp * Expr * Expr -> Expr
+	Rop: RelOp * Expr * Expr -> Expr
+
+strategies
+	
+	desugar-all =
+		topdown(repeat(desugar))	
+		
+rules
+
+	desugar:
+		And(e1, e2) -> IfThenElse(e1, e2, Int("0"))
+	
+	desugar:
+		Or(e1, e2) -> IfThenElse(e1, Int("1"), e2)
+	
+	desugar:
+		Uminus(e) -> Bop(MINUS(), Int("0"), e)
+	
+	desugar:
+		Plus(e1, e2) -> Bop(PLUS(), e1, e2)
+				
+	desugar:
+		Minus(e1, e2) -> Bop(MINUS(), e1, e2)
+				
+	desugar:
+		Times(e1, e2) -> Bop(MUL(), e1, e2)
+				
+	desugar:
+		Divide(e1, e2) -> Bop(DIV(), e1, e2)
+				
+	desugar:
+		Power(e1, e2) -> Bop(POW(), e1, e2)
+				
+	desugar:
+		Eq(e1, e2) -> Rop(EQ(), e1, e2)
+
+	desugar:
+		Neq(e1, e2) -> Rop(NE(), e1, e2)
+
+	desugar:
+		Leq(e1, e2) -> Rop(LE(), e1, e2)
+
+	desugar:
+		Lt(e1, e2) -> Rop(LT(), e1, e2)
+
+	desugar:
+		Geq(e1, e2) -> Rop(GE(), e1, e2)
+
+	desugar:
+		Gt(e1, e2) -> Rop(GT(), e1, e2)
+
+/*
+	desugar:
+		Seq([e]) -> e
+		
+	desugar :
+    	Let([], es) -> Seq(es)
+*/
\ No newline at end of file

Modified: tiger-spoofax/trans/tiger.str
==============================================================================
--- tiger-spoofax/trans/tiger.str	Wed Aug 11 10:10:00 2010	(r21155)
+++ tiger-spoofax/trans/tiger.str	Wed Aug 11 10:33:08 2010	(r21156)
@@ -11,6 +11,7 @@
 	analyze
 	check
 	resolve
+	desugar
 	
 rules // Main editor interface (defined by editor/Tiger-Builders and -References.esv)
   
@@ -33,12 +34,19 @@
       result   := selected // we just return the input term
   
    	// Prints the renamed abstract syntax ATerm of a selection.
-	generate-renamed-aterm:
+	rename-aterm:
 		(selected, position, ast, path, project-path) -> (filename, result)
 		where
 			<guarantee-extension(|"aterm")> path => filename ;
 			<lazy-analyze> ast => ast' ;
 			<term-at-position(|position)> ast' => result
+	
+	// Prints the desugared abstract syntax ATerm of a selection.
+	desugar-aterm:
+		(selected, position, ast, path, project-path) -> (filename, result)
+		where
+			<guarantee-extension(|"aterm")> path => filename ;
+			<desugar-all> selected => result
 
 	// Resolves a reference when the user control-clicks or presses F3 in the editor.
 	editor-resolve:

From g.h.wachsmuth at tudelft.nl  Wed Aug 11 12:35:26 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 11 Aug 2010 10:35:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21157 -
	tiger-spoofax/test
Message-ID: <201008111035.o7BAZQe6012026@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Wed Aug 11 10:35:23 2010
New Revision: 21157
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21157&sc=1

Log:
should not be in the SVN

Deleted:
   tiger-spoofax/test/nestedfunctions.aterm

From L.C.L.Kats at tudelft.nl  Wed Aug 11 12:39:45 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 11 Aug 2010 10:39:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21158 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans
Message-ID: <201008111039.o7BAdjoB012050@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Wed Aug 11 10:39:41 2010
New Revision: 21158
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21158&sc=1

Log:
SDF editor fixes and additions (Spoofax/221).

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	Wed Aug 11 10:35:23 2010	(r21157)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	Wed Aug 11 10:39:41 2010	(r21158)
@@ -66,7 +66,7 @@
   context-free-syntax-warning:
     prod(p, s, a*) -> (target, $[Missing {cons("Label")} attribute to label the abstract syntax])
     where
-      not(<occurrences(?sort(_))> p => 1; occurrences(?lit(_)) => 0);
+      not(<occurrences(?sort(_))> p => 1; <occurrences(?lit(_))> p => 0);
       if !a* => attrs(a'*) then
         not(<one(term(default(appl(unquoted("cons" + "ast"), [id]))))> a'*);
         not(<one(bracket() + reject())> a'*);
@@ -75,7 +75,15 @@
       else
         target := s
       end
-   
+  
+  context-free-syntax-warning:
+    t @ term(default(appl(unquoted("cons"), a*))) -> (t, $[Single argument expected for {cons("Name")} attribute])
+    where
+      not(<length> a* => 1)
+  
+  context-free-syntax-warning:
+    t @ term(default(annotated(_, _))) -> (t, $[Use round parentheses () for attribute arguments])
+  
   context-free-syntax-error:
     prod([x], s, attrs(a*)) -> (a*, $[Illegal use of {bracket} attribute])
     where

From L.C.L.Kats at tudelft.nl  Wed Aug 11 15:22:12 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 11 Aug 2010 13:22:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21159 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.aster
	org.strategoxt.imp.editors.aster/lib
	org.strategoxt.imp.editors.aster/trans
	org.strategoxt.imp.editors.aterm...
Message-ID: <201008111322.o7BDMCZP014513@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Wed Aug 11 13:22:02 2010
New Revision: 21159
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21159&sc=1

Log:
Clean build fixes

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/lib/
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/lib/
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Colorer.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Folding.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Outliner.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-References.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Syntax.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP.main.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/java/
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/lib/
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/lib/editor-common.generated.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/trans/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/trans/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/trans/stratego_attributes.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	Wed Aug 11 10:39:41 2010	(r21158)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	Wed Aug 11 13:22:02 2010	(r21159)
@@ -70,7 +70,7 @@
         </target>
         
         <target name="check-classpath">
-            <available classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" property="check-classpath.available"/>
+            <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
             <antcall target="check-classpath.helper"/>  
         </target>
   

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/lib/editor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/lib/editor-common.generated.str	Wed Aug 11 13:22:02 2010	(r21159)
@@ -0,0 +1,252 @@
+module lib/editor-common.generated
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-gpp
+
+strategies
+
+  parse-file = parse-stratego_attributes-file
+  parse-stratego_attributes-file =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(include/Stratego-Attributes.tbl)>
+    )
+
+  parse-string = parse-stratego_attributes-string
+  parse-stratego_attributes-string =
+    parse-string(
+      strsglr-report-parse-error
+    | <import-term(include/Stratego-Attributes.tbl)>
+    )
+  
+  parse-stream = parse-stratego_attributes-stream
+  parse-stratego_attributes-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(include/Stratego-Attributes.tbl)>
+    )
+
+  pp-stratego_attributes-string =
+    ast2abox(|[<import-term(include/Stratego-Attributes.generated.pp.af)>,
+               <import-term(include/Stratego-Attributes.pp.af)>]);
+    box2text-string(|100)
+
+strategies
+  
+  /**
+   * Processes an import during semantic analysis.
+   * Ensures proper caching of files and prevents
+   * processing duplicate imports more than once.
+   *
+   * @param resolve-path  Resolves the filesystem path of this import
+   * @param parse-file    Parses a file (optionally removing definition bodies
+   *                      so only signatures are stored in the cache)
+   * @param record-declarations
+   *                      Performs semantic analysis on a tree
+   */
+  open-import(resolve-path, parse-file, record-declarations):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path       := <resolve-path> import;
+        cache-path := <import-cache-path> path;
+        if not(<IsImported> path) then
+          rules(
+            IsImported: path
+          );
+          ( <is-newer> (cache-path, path);
+            file := <ReadFromFile> cache-path
+          <+
+            file := <parse-file> path;
+            if <file-exists> path then
+              // Only cache if on filesystem (e.g., ignore libstratego-lib)
+              <WriteToBinaryFile> (cache-path, file)
+            end        
+          );
+          {| CurrentFile:
+            rules(CurrentFile := path);
+            <record-declarations> file
+          |}
+        end
+      end
+
+  open-wildcard-import(resolve-path, parse-file, record-declarations, is-source-file):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path := <resolve-path> import;
+        readdir;
+        list-loop(
+          if is-source-file then
+            <open-import(id, parse-file, record-declarations)>
+              $[[path]/[<id>]]
+          <+
+            try(?one-failed)
+          end
+        );
+        not(!one-failed)
+      end
+  
+  import-cache-path:
+    full-path -> cache-path
+    with
+      project-path := <project-path>;
+      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
+      full-path'   := <string-replace(|"/", "+"); string-replace(|"\\", "+"); string-replace(|":", "+")> full-path;
+      cache-path   := $[[cache-dir]/[full-path'].sig]
+
+  project-path = prim("SSL_EXT_projectpath")
+  
+  plugin-path = prim("SSL_EXT_pluginpath")
+
+  is-newer:
+    (file1, file2) -> <id>
+    where
+      <gt> (<file-exists; modification-time> file1, <file-exists; modification-time> file2) 
+
+strategies
+  
+  editor-init =
+    // Ensure all dynamic rules are properly scoped
+    try(dr-scope-all-end);
+    dr-scope-all-start
+  
+  refresh-workspace-file:
+    path -> <prim("SSL_EXT_refreshresource", path)>
+  
+  string-starts-with-capital =
+    explode-string; Hd; is-upper
+
+strategies
+  
+  origin-term      = prim("SSL_EXT_origin_term", <id>)
+  origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-location  = prim("SSL_EXT_origin_location", <id>)
+  origin-line      = origin-location => (<id>, _, _, _)
+  origin-column    = origin-location => (_, <id>, _, _)
+  origin-strip     = prim("SSL_EXT_origin_strip", <id>)
+  origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+  
+  origin-surrounding-comments =
+    prim("SSL_EXT_origin_surrounding_comments", "Stratego-Attributes", <id>)
+    
+  origin-documentation-comment =
+    origin-surrounding-comments;
+    filter(string-as-chars(documentation-comment-chars));
+    concat-strings
+  
+  documentation-comment-chars:
+    ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
+  
+  origin-track-forced(s) =
+    !Some(<id>); all(s); ?Some(<id>)
+
+strategies
+
+  desugar-position(desugar|ast):
+    position -> position'
+    where
+      ast'  := <at-position(!<id>{MARKER()}|position)> ast;
+      ast'' := <topdown(repeat(preserve-annos({?x; desugar; not(?x)})))> ast';
+      position' := <position-of-term({?_{a*}; <one(?MARKER())> a*})> ast''
+   
+  at-position(s|position):
+    c#(t*) -> t'
+    where
+      !position => [i | position']
+    where
+      t' := c#(<at-index(at-position(s|position'))> (i, t*))
+
+  at-position(s|position):
+    t -> t'
+    where
+      !position => [];
+      t' := <s> t
+
+  position-of-term(is-term):
+    t -> []
+    where
+      is-term
+  
+  position-of-term(is-term):
+    _#(t*) -> <position-of-term(is-term|0)> t*
+  
+  position-of-term(is-term|start-index):
+    [t | t*] -> position
+    where
+      if i* := <position-of-term(is-term)> t then
+        position := [start-index | i*]
+      else
+        position := <position-of-term(is-term | <inc> start-index)> t*
+      end
+
+  term-at-position(|position):
+    t -> t'
+    where
+      at-position(?t'|position) 
+
+  parent-at-position(|position):
+    t -> t'
+    where
+      !position => [i, _];
+      t' := <subterm-at(|i)> t
+  
+  parent-at-position(|position):
+    t -> <parent-at-position(|position')> t'
+    where
+      !position => [i | position' @ [_, _ | _]];
+      t' := <subterm-at(|i)> t
+
+  subterm-at(|index):
+    _#(t*) -> <index(|<inc> index)> t*
+  
+signature constructors
+
+  COMPLETION : String -> Term
+  NOCONTEXT  : Term   -> Term
+  MARKER     : Term
+
+  // Below are copies of the signatures of the terms used in example
+  // trans/stratego_attributes.str file. These definitions should also be automatically 
+  // generated in the imported include/Stratego-Attributes.str module. However,
+  // to ensure that the example transformation doesn't break when the
+  // syntax is changed, we also hard-coded them here.
+          
+  Module   : ID * List(Entity)   -> Module
+  Entity   : ID * List(Property) -> Entity
+  Property : ID * Type           -> Property
+  Type     : ID                  -> Type
+
+strategies
+  
+  // Set markers for a given file. Use when checking files from a queued strategy.
+  // Current term: (ast-desugared, errors, warnings, notes) tuple
+  // ast: the root node of the file to set markers on 
+  set-markers(|ast) = prim("SSL_EXT_set_markers", ast)
+
+  // Indicate that one or more files need analysis. 
+  // Current term: ss a list of absolute file paths, or a single absolute file path to analyze
+  queue-analysis = 
+       (is-list; list-loop(queue-analysis))
+    <+ prim("SSL_EXT_queue_analysis")
+
+  // Set the total number of work units to complete. Can be called multiple times. 
+  // Current term: number of work units (int).
+  set-total-work-units = prim("SSL_EXT_set_total_work_units")
+  
+  // Complete one work unit and update progress monitors.
+  // Current term: ignored
+  complete-work-unit = prim("SSL_EXT_complete_work_unit")
+  
+  // Queue a strategy for background processing with a progress indicator.
+  // Current term: the term to pass to the background strategy
+  // s: the strategy, as string
+  // description: name of the task (will be shown in progress view)
+  queue-strategy(|s,description) = prim("SSL_EXT_queue_strategy", s, description)
+  
+  // Return the result of this strategy to indicate a non-completed (backgrounded) analysis.
+  // Editor services (hover, resolve) will be delayed until a complete analysis is performed. 
+  set-analysis-backgrounded = !"BACKGROUNDED"
+  

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/trans/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/trans/check.str	Wed Aug 11 10:39:41 2010	(r21158)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/trans/check.str	Wed Aug 11 13:22:02 2010	(r21159)
@@ -3,7 +3,7 @@
 imports
   libstratego-lib
   include/Stratego-Attributes
-  lib/editor-common
+  lib/editor-common.generated
 
 rules
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/trans/generate.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/trans/generate.str	Wed Aug 11 10:39:41 2010	(r21158)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/trans/generate.str	Wed Aug 11 13:22:02 2010	(r21159)
@@ -5,7 +5,7 @@
   libstratego-gpp
   libstratego-aterm
   include/Stratego-Attributes
-  lib/editor-common
+  lib/editor-common.generated
 
 rules
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/trans/stratego_attributes.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/trans/stratego_attributes.str	Wed Aug 11 10:39:41 2010	(r21158)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/trans/stratego_attributes.str	Wed Aug 11 13:22:02 2010	(r21159)
@@ -5,7 +5,7 @@
   libstratego-gpp
   libstratego-aterm
   include/Stratego-Attributes
-  lib/editor-common
+  lib/editor-common.generated
   check
   generate
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	Wed Aug 11 10:39:41 2010	(r21158)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	Wed Aug 11 13:22:02 2010	(r21159)
@@ -70,7 +70,7 @@
         </target>
         
         <target name="check-classpath">
-            <available classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" property="check-classpath.available"/>
+            <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
             <antcall target="check-classpath.helper"/>  
         </target>
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	Wed Aug 11 10:39:41 2010	(r21158)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	Wed Aug 11 13:22:02 2010	(r21159)
@@ -70,7 +70,7 @@
         </target>
         
         <target name="check-classpath">
-            <available classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" property="check-classpath.available"/>
+            <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
             <antcall target="check-classpath.helper"/>  
         </target>
   

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/lib/editor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/lib/editor-common.generated.str	Wed Aug 11 13:22:02 2010	(r21159)
@@ -0,0 +1,252 @@
+module lib/editor-common.generated
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-gpp
+
+strategies
+
+  parse-file = parse-editorservice-file
+  parse-editorservice-file =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(include/EditorService.tbl)>
+    )
+
+  parse-string = parse-editorservice-string
+  parse-editorservice-string =
+    parse-string(
+      strsglr-report-parse-error
+    | <import-term(include/EditorService.tbl)>
+    )
+  
+  parse-stream = parse-editorservice-stream
+  parse-editorservice-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(include/EditorService.tbl)>
+    )
+
+  pp-editorservice-string =
+    ast2abox(|[<import-term(include/EditorService.generated.pp.af)>,
+               <import-term(include/EditorService.pp.af)>]);
+    box2text-string(|100)
+
+strategies
+  
+  /**
+   * Processes an import during semantic analysis.
+   * Ensures proper caching of files and prevents
+   * processing duplicate imports more than once.
+   *
+   * @param resolve-path  Resolves the filesystem path of this import
+   * @param parse-file    Parses a file (optionally removing definition bodies
+   *                      so only signatures are stored in the cache)
+   * @param record-declarations
+   *                      Performs semantic analysis on a tree
+   */
+  open-import(resolve-path, parse-file, record-declarations):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path       := <resolve-path> import;
+        cache-path := <import-cache-path> path;
+        if not(<IsImported> path) then
+          rules(
+            IsImported: path
+          );
+          ( <is-newer> (cache-path, path);
+            file := <ReadFromFile> cache-path
+          <+
+            file := <parse-file> path;
+            if <file-exists> path then
+              // Only cache if on filesystem (e.g., ignore libstratego-lib)
+              <WriteToBinaryFile> (cache-path, file)
+            end        
+          );
+          {| CurrentFile:
+            rules(CurrentFile := path);
+            <record-declarations> file
+          |}
+        end
+      end
+
+  open-wildcard-import(resolve-path, parse-file, record-declarations, is-source-file):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path := <resolve-path> import;
+        readdir;
+        list-loop(
+          if is-source-file then
+            <open-import(id, parse-file, record-declarations)>
+              $[[path]/[<id>]]
+          <+
+            try(?one-failed)
+          end
+        );
+        not(!one-failed)
+      end
+  
+  import-cache-path:
+    full-path -> cache-path
+    with
+      project-path := <project-path>;
+      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
+      full-path'   := <string-replace(|"/", "+"); string-replace(|"\\", "+"); string-replace(|":", "+")> full-path;
+      cache-path   := $[[cache-dir]/[full-path'].sig]
+
+  project-path = prim("SSL_EXT_projectpath")
+  
+  plugin-path = prim("SSL_EXT_pluginpath")
+
+  is-newer:
+    (file1, file2) -> <id>
+    where
+      <gt> (<file-exists; modification-time> file1, <file-exists; modification-time> file2) 
+
+strategies
+  
+  editor-init =
+    // Ensure all dynamic rules are properly scoped
+    try(dr-scope-all-end);
+    dr-scope-all-start
+  
+  refresh-workspace-file:
+    path -> <prim("SSL_EXT_refreshresource", path)>
+  
+  string-starts-with-capital =
+    explode-string; Hd; is-upper
+
+strategies
+  
+  origin-term      = prim("SSL_EXT_origin_term", <id>)
+  origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-location  = prim("SSL_EXT_origin_location", <id>)
+  origin-line      = origin-location => (<id>, _, _, _)
+  origin-column    = origin-location => (_, <id>, _, _)
+  origin-strip     = prim("SSL_EXT_origin_strip", <id>)
+  origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+  
+  origin-surrounding-comments =
+    prim("SSL_EXT_origin_surrounding_comments", "EditorService", <id>)
+    
+  origin-documentation-comment =
+    origin-surrounding-comments;
+    filter(string-as-chars(documentation-comment-chars));
+    concat-strings
+  
+  documentation-comment-chars:
+    ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
+  
+  origin-track-forced(s) =
+    !Some(<id>); all(s); ?Some(<id>)
+
+strategies
+
+  desugar-position(desugar|ast):
+    position -> position'
+    where
+      ast'  := <at-position(!<id>{MARKER()}|position)> ast;
+      ast'' := <topdown(repeat(preserve-annos({?x; desugar; not(?x)})))> ast';
+      position' := <position-of-term({?_{a*}; <one(?MARKER())> a*})> ast''
+   
+  at-position(s|position):
+    c#(t*) -> t'
+    where
+      !position => [i | position']
+    where
+      t' := c#(<at-index(at-position(s|position'))> (i, t*))
+
+  at-position(s|position):
+    t -> t'
+    where
+      !position => [];
+      t' := <s> t
+
+  position-of-term(is-term):
+    t -> []
+    where
+      is-term
+  
+  position-of-term(is-term):
+    _#(t*) -> <position-of-term(is-term|0)> t*
+  
+  position-of-term(is-term|start-index):
+    [t | t*] -> position
+    where
+      if i* := <position-of-term(is-term)> t then
+        position := [start-index | i*]
+      else
+        position := <position-of-term(is-term | <inc> start-index)> t*
+      end
+
+  term-at-position(|position):
+    t -> t'
+    where
+      at-position(?t'|position) 
+
+  parent-at-position(|position):
+    t -> t'
+    where
+      !position => [i, _];
+      t' := <subterm-at(|i)> t
+  
+  parent-at-position(|position):
+    t -> <parent-at-position(|position')> t'
+    where
+      !position => [i | position' @ [_, _ | _]];
+      t' := <subterm-at(|i)> t
+
+  subterm-at(|index):
+    _#(t*) -> <index(|<inc> index)> t*
+  
+signature constructors
+
+  COMPLETION : String -> Term
+  NOCONTEXT  : Term   -> Term
+  MARKER     : Term
+
+  // Below are copies of the signatures of the terms used in example
+  // trans/editorservice.str file. These definitions should also be automatically 
+  // generated in the imported include/EditorService.str module. However,
+  // to ensure that the example transformation doesn't break when the
+  // syntax is changed, we also hard-coded them here.
+          
+  Module   : ID * List(Entity)   -> Module
+  Entity   : ID * List(Property) -> Entity
+  Property : ID * Type           -> Property
+  Type     : ID                  -> Type
+
+strategies
+  
+  // Set markers for a given file. Use when checking files from a queued strategy.
+  // Current term: (ast-desugared, errors, warnings, notes) tuple
+  // ast: the root node of the file to set markers on 
+  set-markers(|ast) = prim("SSL_EXT_set_markers", ast)
+
+  // Indicate that one or more files need analysis. 
+  // Current term: ss a list of absolute file paths, or a single absolute file path to analyze
+  queue-analysis = 
+       (is-list; list-loop(queue-analysis))
+    <+ prim("SSL_EXT_queue_analysis")
+
+  // Set the total number of work units to complete. Can be called multiple times. 
+  // Current term: number of work units (int).
+  set-total-work-units = prim("SSL_EXT_set_total_work_units")
+  
+  // Complete one work unit and update progress monitors.
+  // Current term: ignored
+  complete-work-unit = prim("SSL_EXT_complete_work_unit")
+  
+  // Queue a strategy for background processing with a progress indicator.
+  // Current term: the term to pass to the background strategy
+  // s: the strategy, as string
+  // description: name of the task (will be shown in progress view)
+  queue-strategy(|s,description) = prim("SSL_EXT_queue_strategy", s, description)
+  
+  // Return the result of this strategy to indicate a non-completed (backgrounded) analysis.
+  // Editor services (hover, resolve) will be delayed until a complete analysis is performed. 
+  set-analysis-backgrounded = !"BACKGROUNDED"
+  

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	Wed Aug 11 10:39:41 2010	(r21158)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	Wed Aug 11 13:22:02 2010	(r21159)
@@ -70,7 +70,7 @@
         </target>
         
         <target name="check-classpath">
-            <available classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" property="check-classpath.available"/>
+            <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
             <antcall target="check-classpath.helper"/>  
         </target>
   

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Builders.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Builders.esv	Wed Aug 11 13:22:02 2010	(r21159)
@@ -0,0 +1,21 @@
+
+module BoxPP-Builders
+
+imports BoxPP-Builders.generated
+
+builders
+                                                                      
+  // This file can be used for custom analysis and builder rules.     
+  //                                                                  
+  // See the imported file for a brief introduction and examples.     
+
+builders
+                                                                                                               
+  provider                  : include/boxpp.ctree                                                              
+                                                                                                               
+  observer                  : editor-analyze                                                                   
+                                                                                                               
+  builder                   : "Generate Java code"   = generate-java (openeditor) (realtime)                   
+  builder                   : "Show abstract syntax" = generate-aterm (openeditor) (realtime) (meta) (source)  
+                                                                                                               
+  // on save: generate-java                                                                                    
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Colorer.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Colorer.esv	Wed Aug 11 13:22:02 2010	(r21159)
@@ -0,0 +1,9 @@
+module BoxPP-Colorer
+
+imports BoxPP-Colorer.generated
+
+colorer
+                                                                      
+  // This file can be used for custom colorer rules.                  
+  //                                                                  
+  // See the imported file for a brief introduction and examples.     
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Completions.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Completions.esv	Wed Aug 11 13:22:02 2010	(r21159)
@@ -0,0 +1,20 @@
+module BoxPP-Completions
+
+imports BoxPP-Completions.generated
+
+completions
+                                                                   
+  // This file is used to define content completion.               
+  //                                                               
+  // See the imported file for a brief introduction and examples.  
+                                                                   
+
+completions
+                                         
+  // Syntax completion:                  
+  completion template                  : "module " <m> (blank)
+  completion template                  : "entity " <e> " {}" (blank)
+                                         
+  // Semantic (identifier) completion:   
+  completion proposer                  : editor-complete
+  completion trigger                   : ": "
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Folding.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Folding.esv	Wed Aug 11 13:22:02 2010	(r21159)
@@ -0,0 +1,9 @@
+module BoxPP-Folding
+
+imports BoxPP-Folding.generated
+
+folding
+  
+  // This file can be used for custom folding rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Outliner.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Outliner.esv	Wed Aug 11 13:22:02 2010	(r21159)
@@ -0,0 +1,9 @@
+module BoxPP-Outliner
+
+imports BoxPP-Outliner.generated
+
+outliner
+  
+  // This file can be used for custom outliner rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-References.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-References.esv	Wed Aug 11 13:22:02 2010	(r21159)
@@ -0,0 +1,15 @@
+module BoxPP-References
+
+imports BoxPP-References.generated
+
+references
+                                                                                                   
+  // This file can be used to specify reference resolving and hover help, and content completion.  
+  //                                                                                               
+  // See the imported file for a brief introduction and examples.                                  
+                                                                                                   
+
+references
+                
+  reference _ : editor-resolve
+  hover _     : editor-hover
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Syntax.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Syntax.esv	Wed Aug 11 13:22:02 2010	(r21159)
@@ -0,0 +1,9 @@
+module BoxPP-Syntax
+
+imports BoxPP-Syntax.generated
+
+language
+                                                                   
+  // This file can be used for custom syntax rules.                
+  //                                                               
+  // See the imported file for a brief introduction and examples.  
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP.main.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP.main.esv	Wed Aug 11 13:22:02 2010	(r21159)
@@ -0,0 +1,16 @@
+module BoxPP.main
+
+imports BoxPP-Builders BoxPP-Colorer BoxPP-Completions BoxPP-Folding BoxPP-Outliner BoxPP-References BoxPP-Syntax
+
+language General properties
+                  
+  name          : BoxPP
+  id            : org.strategoxt.imp.editors.pp
+  extends       : Root
+                  
+  description   : "Spoofax/IMP-generated editor for the BoxPP language"
+  url           : http://strategoxt.org
+                  
+  extensions    : pp
+  table         : include/BoxPP.tbl
+  start symbols : PP-Table

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/lib/editor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/lib/editor-common.generated.str	Wed Aug 11 13:22:02 2010	(r21159)
@@ -0,0 +1,252 @@
+module lib/editor-common.generated
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-gpp
+
+strategies
+
+  parse-file = parse-boxpp-file
+  parse-boxpp-file =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(include/BoxPP.tbl)>
+    )
+
+  parse-string = parse-boxpp-string
+  parse-boxpp-string =
+    parse-string(
+      strsglr-report-parse-error
+    | <import-term(include/BoxPP.tbl)>
+    )
+  
+  parse-stream = parse-boxpp-stream
+  parse-boxpp-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(include/BoxPP.tbl)>
+    )
+
+  pp-boxpp-string =
+    ast2abox(|[<import-term(include/BoxPP.generated.pp.af)>,
+               <import-term(include/BoxPP.pp.af)>]);
+    box2text-string(|100)
+
+strategies
+  
+  /**
+   * Processes an import during semantic analysis.
+   * Ensures proper caching of files and prevents
+   * processing duplicate imports more than once.
+   *
+   * @param resolve-path  Resolves the filesystem path of this import
+   * @param parse-file    Parses a file (optionally removing definition bodies
+   *                      so only signatures are stored in the cache)
+   * @param record-declarations
+   *                      Performs semantic analysis on a tree
+   */
+  open-import(resolve-path, parse-file, record-declarations):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path       := <resolve-path> import;
+        cache-path := <import-cache-path> path;
+        if not(<IsImported> path) then
+          rules(
+            IsImported: path
+          );
+          ( <is-newer> (cache-path, path);
+            file := <ReadFromFile> cache-path
+          <+
+            file := <parse-file> path;
+            if <file-exists> path then
+              // Only cache if on filesystem (e.g., ignore libstratego-lib)
+              <WriteToBinaryFile> (cache-path, file)
+            end        
+          );
+          {| CurrentFile:
+            rules(CurrentFile := path);
+            <record-declarations> file
+          |}
+        end
+      end
+
+  open-wildcard-import(resolve-path, parse-file, record-declarations, is-source-file):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path := <resolve-path> import;
+        readdir;
+        list-loop(
+          if is-source-file then
+            <open-import(id, parse-file, record-declarations)>
+              $[[path]/[<id>]]
+          <+
+            try(?one-failed)
+          end
+        );
+        not(!one-failed)
+      end
+  
+  import-cache-path:
+    full-path -> cache-path
+    with
+      project-path := <project-path>;
+      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
+      full-path'   := <string-replace(|"/", "+"); string-replace(|"\\", "+"); string-replace(|":", "+")> full-path;
+      cache-path   := $[[cache-dir]/[full-path'].sig]
+
+  project-path = prim("SSL_EXT_projectpath")
+  
+  plugin-path = prim("SSL_EXT_pluginpath")
+
+  is-newer:
+    (file1, file2) -> <id>
+    where
+      <gt> (<file-exists; modification-time> file1, <file-exists; modification-time> file2) 
+
+strategies
+  
+  editor-init =
+    // Ensure all dynamic rules are properly scoped
+    try(dr-scope-all-end);
+    dr-scope-all-start
+  
+  refresh-workspace-file:
+    path -> <prim("SSL_EXT_refreshresource", path)>
+  
+  string-starts-with-capital =
+    explode-string; Hd; is-upper
+
+strategies
+  
+  origin-term      = prim("SSL_EXT_origin_term", <id>)
+  origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-location  = prim("SSL_EXT_origin_location", <id>)
+  origin-line      = origin-location => (<id>, _, _, _)
+  origin-column    = origin-location => (_, <id>, _, _)
+  origin-strip     = prim("SSL_EXT_origin_strip", <id>)
+  origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+  
+  origin-surrounding-comments =
+    prim("SSL_EXT_origin_surrounding_comments", "BoxPP", <id>)
+    
+  origin-documentation-comment =
+    origin-surrounding-comments;
+    filter(string-as-chars(documentation-comment-chars));
+    concat-strings
+  
+  documentation-comment-chars:
+    ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
+  
+  origin-track-forced(s) =
+    !Some(<id>); all(s); ?Some(<id>)
+
+strategies
+
+  desugar-position(desugar|ast):
+    position -> position'
+    where
+      ast'  := <at-position(!<id>{MARKER()}|position)> ast;
+      ast'' := <topdown(repeat(preserve-annos({?x; desugar; not(?x)})))> ast';
+      position' := <position-of-term({?_{a*}; <one(?MARKER())> a*})> ast''
+   
+  at-position(s|position):
+    c#(t*) -> t'
+    where
+      !position => [i | position']
+    where
+      t' := c#(<at-index(at-position(s|position'))> (i, t*))
+
+  at-position(s|position):
+    t -> t'
+    where
+      !position => [];
+      t' := <s> t
+
+  position-of-term(is-term):
+    t -> []
+    where
+      is-term
+  
+  position-of-term(is-term):
+    _#(t*) -> <position-of-term(is-term|0)> t*
+  
+  position-of-term(is-term|start-index):
+    [t | t*] -> position
+    where
+      if i* := <position-of-term(is-term)> t then
+        position := [start-index | i*]
+      else
+        position := <position-of-term(is-term | <inc> start-index)> t*
+      end
+
+  term-at-position(|position):
+    t -> t'
+    where
+      at-position(?t'|position) 
+
+  parent-at-position(|position):
+    t -> t'
+    where
+      !position => [i, _];
+      t' := <subterm-at(|i)> t
+  
+  parent-at-position(|position):
+    t -> <parent-at-position(|position')> t'
+    where
+      !position => [i | position' @ [_, _ | _]];
+      t' := <subterm-at(|i)> t
+
+  subterm-at(|index):
+    _#(t*) -> <index(|<inc> index)> t*
+  
+signature constructors
+
+  COMPLETION : String -> Term
+  NOCONTEXT  : Term   -> Term
+  MARKER     : Term
+
+  // Below are copies of the signatures of the terms used in example
+  // trans/boxpp.str file. These definitions should also be automatically 
+  // generated in the imported include/BoxPP.str module. However,
+  // to ensure that the example transformation doesn't break when the
+  // syntax is changed, we also hard-coded them here.
+          
+  Module   : ID * List(Entity)   -> Module
+  Entity   : ID * List(Property) -> Entity
+  Property : ID * Type           -> Property
+  Type     : ID                  -> Type
+
+strategies
+  
+  // Set markers for a given file. Use when checking files from a queued strategy.
+  // Current term: (ast-desugared, errors, warnings, notes) tuple
+  // ast: the root node of the file to set markers on 
+  set-markers(|ast) = prim("SSL_EXT_set_markers", ast)
+
+  // Indicate that one or more files need analysis. 
+  // Current term: ss a list of absolute file paths, or a single absolute file path to analyze
+  queue-analysis = 
+       (is-list; list-loop(queue-analysis))
+    <+ prim("SSL_EXT_queue_analysis")
+
+  // Set the total number of work units to complete. Can be called multiple times. 
+  // Current term: number of work units (int).
+  set-total-work-units = prim("SSL_EXT_set_total_work_units")
+  
+  // Complete one work unit and update progress monitors.
+  // Current term: ignored
+  complete-work-unit = prim("SSL_EXT_complete_work_unit")
+  
+  // Queue a strategy for background processing with a progress indicator.
+  // Current term: the term to pass to the background strategy
+  // s: the strategy, as string
+  // description: name of the task (will be shown in progress view)
+  queue-strategy(|s,description) = prim("SSL_EXT_queue_strategy", s, description)
+  
+  // Return the result of this strategy to indicate a non-completed (backgrounded) analysis.
+  // Editor services (hover, resolve) will be delayed until a complete analysis is performed. 
+  set-analysis-backgrounded = !"BACKGROUNDED"
+  

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	Wed Aug 11 10:39:41 2010	(r21158)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	Wed Aug 11 13:22:02 2010	(r21159)
@@ -70,7 +70,7 @@
         </target>
         
         <target name="check-classpath">
-            <available classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" property="check-classpath.available"/>
+            <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
             <antcall target="check-classpath.helper"/>  
         </target>
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	Wed Aug 11 10:39:41 2010	(r21158)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	Wed Aug 11 13:22:02 2010	(r21159)
@@ -70,7 +70,7 @@
         </target>
         
         <target name="check-classpath">
-            <available classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" property="check-classpath.available"/>
+            <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
             <antcall target="check-classpath.helper"/>  
         </target>
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	Wed Aug 11 10:39:41 2010	(r21158)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	Wed Aug 11 13:22:02 2010	(r21159)
@@ -147,7 +147,7 @@
     copy-jars;
     copy-def-file;
     
-    say(!"Completed with 0 fatal errors.")
+    say(!"Build succesful.")
 
   is-heuristic-services-needed =
     not(

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	Wed Aug 11 10:39:41 2010	(r21158)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	Wed Aug 11 13:22:02 2010	(r21159)
@@ -141,7 +141,7 @@
         </target>
         
         <target name="check-classpath">
-            <available classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" property="check-classpath.available"/>
+            <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
             <antcall target="check-classpath.helper"/>  
         </target>
   

From L.C.L.Kats at tudelft.nl  Wed Aug 11 15:48:02 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 11 Aug 2010 13:48:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21160 - in
	spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.updatesite
Message-ID: <201008111348.o7BDm22B014795@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Wed Aug 11 13:47:33 2010
New Revision: 21160
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21160&sc=1

Log:
Release 0.5.2.93; fixed feature.xml "unpack" configuration.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Wed Aug 11 13:22:02 2010	(r21159)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Wed Aug 11 13:47:33 2010	(r21160)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.5.2.92"
+      version="0.5.2.93"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">
@@ -171,7 +171,7 @@
          download-size="0"
          install-size="0"
          version="0.1.1.qualifier"
-         unpack="false"/>
+         unpack="true"/>
 
    <plugin
          id="com.ibm.wala.shrike"
@@ -224,13 +224,15 @@
          id="org.strategoxt.imp.editors.sdf"
          download-size="0"
          install-size="0"
-         version="0.1.1.qualifier"/>
+         version="0.1.1.qualifier"
+         unpack="true"/>
 
    <plugin
          id="org.strategoxt.imp.editors.stratego"
          download-size="0"
          install-size="0"
-         version="0.1.1.qualifier"/>
+         version="0.1.1.qualifier"
+         unpack="true"/>
 
    <plugin
          id="org.strategoxt.imp.editors.aterm"
@@ -243,7 +245,8 @@
          id="org.strategoxt.imp.nativebundle"
          download-size="0"
          install-size="0"
-         version="0.1.1.qualifier"/>
+         version="0.1.1.qualifier"
+         unpack="true"/>
 
    <plugin
          id="org.eclipse.imp.java.hosted"

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	Wed Aug 11 13:22:02 2010	(r21159)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	Wed Aug 11 13:47:33 2010	(r21160)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.5.2.92.jar" id="org.strategoxt.imp" version="0.5.2.92">
+   <feature url="features/org.strategoxt.imp_0.5.2.93.jar" id="org.strategoxt.imp" version="0.5.2.93">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">

From L.C.L.Kats at tudelft.nl  Wed Aug 11 16:02:44 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 11 Aug 2010 14:02:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21161 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.aster
	org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.editors...
Message-ID: <201008111402.o7BE2itg015157@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Wed Aug 11 14:02:37 2010
New Revision: 21161
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21161&sc=1

Log:
Working on Spoofax/222: syntax awareness for the editor descriptor editor,
Spoofax/223: context-sensitive syntactic completions,
and changed the Environment.getSyncRoot() synchronization lock to a ReentrantLock getStrategoLock().

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstSortInspector.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/editorservice.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-completions-descriptor.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/OutlinerService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/Stratego-Java-EditorService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/AntDescriptorBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/StartupDescriptorLoader.java
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/SWTSafeLock.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ContentProposerFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposal.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/CustomStrategyBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverUpdateJob.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoReferenceResolver.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/DialogPrimitive.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/.classpath
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/.classpath	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/.classpath	Wed Aug 11 14:02:37 2010	(r21161)
@@ -1,9 +1,9 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
 <classpath>
-	<classpathentry kind="src" path="editor/java"/>
+	<classpathentry kind="src" excluding="trans/**" path="editor/java"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
 	<classpathentry kind="lib" path="utils/strategoxt.jar"/>
 	<classpathentry kind="output" path="bin"/>
-</classpath>
\ No newline at end of file
+</classpath>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/.classpath
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/.classpath	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/.classpath	Wed Aug 11 14:02:37 2010	(r21161)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <classpath>
-	<classpathentry kind="src" path="editor/java"/>
+	<classpathentry kind="src" excluding="trans/**" path="editor/java"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
 	<classpathentry kind="output" path="bin"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.classpath
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.classpath	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.classpath	Wed Aug 11 14:02:37 2010	(r21161)
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
 <classpath>
-	<classpathentry kind="src" path="editor/java"/>
+	<classpathentry kind="src" excluding="trans/**" path="editor/java"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
 	<classpathentry kind="output" path="bin"/>
-</classpath>
\ No newline at end of file
+</classpath>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv	Wed Aug 11 14:02:37 2010	(r21161)
@@ -8,58 +8,82 @@
     editor-complete
 
   completion trigger:
-    "(completion\s*template|start\s*symbols)\s*:\s+"
+    "(completion\s*template|start\s*symbols)\s*:(\s+|\n)"
+
+  completion trigger:
+    "(completion\s*template|start\s*symbols)\s*:\s*[^\s]+\s*=\s+"
+  
+  completion template : Section =
+    "builders" "\n\t" (blank)
+  
+  completion template : Section =
+    "colorer" "\n\t" (blank)
+  
+  completion template : Section =
+    "folding" "\n\t" (blank)
+  
+  completion template : Section =
+    "outliner" "\n\t" (blank)
+  
+  completion template : Section =
+    "completions" "\n\t" (blank)
+  
+  completion template : Section =
+    "language" "\n\t" (blank)
+  
+  completion template : Section =
+    "references" "\n\t" (blank)
   
-  completion template:
+  completion template : SemanticRule =
     "completion template" ":\n\t" <prefix> " \"c\"" (blank)
   
-  completion template:
+  completion template : SemanticRule =
     "completion lexical" ":\n\t" <regex> (blank)
   
-  completion template:
+  completion template : SemanticRule =
     "completion proposer" ":\n\t" <s> (blank)
   
-  completion template:
+  completion template : SemanticRule =
     "completion keyword" ":\n\t" <k> (blank)
   
-  completion template:
+  completion template : SemanticRule =
     "completion trigger" ":\n\t" <regex> (blank)
     
-  completion template:
+  completion template : SemanticRule =
   	"observer" ": " <s> (blank)
   
-  completion template : BuilderRule =
+  completion template : SemanticRule =
     "provider" ": " <provider.jar> (blank)
   
-  completion template:
+  completion template : SemanticRule =
   	"builder" ": " <"caption"> " = " <s> (blank)
   
-  completion template:
+  completion template : SemanticRule =
     "builder caption" ": " <"caption"> (blank)
   
-  completion template:
+  completion template : LanguageProperty = 
   	"unmanaged table" ": " <prefix> "*" (blank)
   
-  completion template:
+  completion template : LanguageProperty =
   	"line comment" ": " <prefix> (blank)
   
-  completion template:
+  completion template : LanguageProperty = 
   	"block comment" ":\n\t" <prefix> " " <middle> " " <end> (blank)
   
-  completion template:
+  completion template : LanguageProperty = 
   	"fences" ":\n\t" <f> " " <g> (blank)
  
-  completion template:
+  completion template : LanguageProperty = 
   	"indent after" ":\n\t" <keyword> (blank)
   
-  completion template:
+  completion template : SemanticRule = 
   	"reference" " _ : " <s> (blank)
   
-  completion template:
+  completion template : SemanticRule = 
     "occurrence" " _ : " <s> (blank)
   
-  completion template:
+  completion template : SemanticRule = 
     "hover" " _ : " <s> (blank)
 
-  completion template:
+  completion template : SemanticRule = 
     "on save" ": " <s> (blank)
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/editorservice.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/editorservice.str	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/editorservice.str	Wed Aug 11 14:02:37 2010	(r21161)
@@ -3,7 +3,6 @@
 // TODO: warn about multi-char highlighted brackets
 // TODO: check if provider/imported/etc. files exist
 // TODO: check if there is _any_ provider for observer etc.
-// TODO: check if the provider is not a .str
 
 imports
   libstratego-lib
@@ -19,7 +18,7 @@
     with
       <chdir> project-path;
       <record-all-sdfs> ".";
-      error*   := [];
+      error*   := <collect-all(constraint-error, conc)> ast;
       warning* := []
   
   generate-aterm:
@@ -33,7 +32,24 @@
       proposals := <all-keys-SortDeclaration>
 
   editor-complete:
-    (CompletionTemplate(COMPLETION(_), _, _), position, ast, path, project-path) -> proposals
+    (CompletionTemplate(COMPLETION(_), parts, _), position, ast, path, project-path) -> proposals
+    where
+      if [] := parts then
+        suffix := " =\n\t\t"
+      else
+        suffix := " = "
+      end;
+      proposals := <map(<conc-strings> (<id>, suffix))> <all-keys-SortDeclaration>
+
+  editor-complete:
+    (CompletionTemplateWithSort(Sort(sort), COMPLETION(_), _, _), position, ast, path, project-path) -> proposals
+    where
+      lhs*      := <bagof-SortProductionLHS> sort;
+      lhs'*     := <topdown(repeat(remove-completion-irrelevant))> lhs*;
+      proposals := <make-set> <filter(to-completion-parts-top)> lhs'*
+
+  editor-complete:
+    (Sort(COMPLETION(_)), position, ast, path, project-path) -> proposals
     where
       proposals := <map(<conc-strings> (<id>, " = "))> <all-keys-SortDeclaration>
   
@@ -54,6 +70,12 @@
     where
       <has-extension(|"sdf")> filename;
       <open-import(abspath, parse-sdf-module-file, topdown(try(record-prod)))> filename
+  
+  record-sdf:
+    filename -> filename
+    where
+      <has-extension(|"def")> filename;
+      <open-import(abspath, parse-sdf-definition-file, topdown(try(record-prod)))> filename
    
   record-prod:
     prod @ prod(lhs, sort, attrs) -> <id>
@@ -63,4 +85,65 @@
       repeat(?label(_, <id>));
       (?sort(x) + ?parameterized-sort(x, _))
     with
-      rules(SortDeclaration: x -> x)
\ No newline at end of file
+      rules(
+        SortDeclaration   :  x -> x
+        SortProductionLHS :+ x -> lhs
+      )
+  
+  to-completion-parts:
+    [lit(x) | tail] -> ["\"", lits', "\" " | tail']
+    where
+      lits  := <map(?lit(<id>))> <take-while(?lit(_))>;
+      lits' := <escape> <concat-strings> <separate-by(|" ")> lits;
+      tail' := <to-completion-parts> <drop-while(?lit(_))> tail
+  
+  to-completion-parts-top:
+    [lit(first) | tail] -> $[[trigger'] [rest']]
+    where
+      trigger  := [lit(first) | <take-while(?lit(<is-alpha>))> tail];
+      trigger' := <to-completion-parts> trigger;
+      rest     := <drop-while(?lit(<is-alpha>))> tail;
+      rest'    := <to-completion-parts> <separate-by(|lit(" "))> rest
+  
+  to-completion-parts:
+    [sort(x) | tail] -> ["<", x, "> " | <to-completion-parts> tail]
+  
+  to-completion-parts:
+    [iter-star(sort(x)) | tail] -> ["<", x, "*> " | <to-completion-parts> tail]
+  
+  to-completion-parts:
+    [iter-star-sep(sort(x), _) | tail] -> ["<", x, "*> " | <to-completion-parts> tail]
+  
+  to-completion-parts:
+    [iter(sort(x)) | tail] -> ["<", x, "*> " | <to-completion-parts> tail]
+  
+  to-completion-parts:
+    [iter-sep(sort(x), _) | tail] -> ["<", x, "*> " | <to-completion-parts> tail]
+  
+  to-completion-parts:
+    [opt(sort(x)) | tail] -> ["<", x, "> " | <to-completion-parts> tail]
+  
+  to-completion-parts:
+    [] -> []
+  
+  remove-completion-irrelevant:
+    parameterized-sort(x, _) -> sort(x)
+  
+  remove-completion-irrelevant:
+    cf(x) -> x
+  
+  remove-completion-irrelevant:
+    lex(x) -> x
+  
+  remove-completion-irrelevant:
+    opt(layout()) -> lit(" ")
+  
+  constraint-error:
+    Sort(x) -> (x, $[Unknown sort [x]])
+    where
+      not(<SortDeclaration> x)
+  
+  constraint-error:
+    SemanticProvider(x) -> (x, $[Must be a generated .ctree or .jar file])
+    where
+      not(<string-ends-with(|".jar") + string-ends-with(|".ctree")> x)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/.classpath
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/.classpath	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/.classpath	Wed Aug 11 14:02:37 2010	(r21161)
@@ -1,9 +1,9 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
 <classpath>
-	<classpathentry kind="src" path="editor/java"/>
+	<classpathentry kind="src" excluding="trans/**" path="editor/java"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
 	<classpathentry kind="lib" path="utils/strategoxt.jar"/>
 	<classpathentry kind="output" path="bin"/>
-</classpath>
\ No newline at end of file
+</classpath>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.classpath
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.classpath	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.classpath	Wed Aug 11 14:02:37 2010	(r21161)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <classpath>
-	<classpathentry excluding="trans/**" kind="src" path="editor/java"/>
+	<classpathentry kind="src" excluding="trans/**" path="editor/java"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
 	<classpathentry kind="lib" path="utils/strategoxt.jar"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/.classpath
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/.classpath	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/.classpath	Wed Aug 11 14:02:37 2010	(r21161)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <classpath>
-	<classpathentry kind="src" path="editor/java"/>
+	<classpathentry kind="src" excluding="trans/**" path="editor/java"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
 	<classpathentry kind="lib" path="utils/strategoxt.jar"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv	Wed Aug 11 14:02:37 2010	(r21161)
@@ -28,19 +28,19 @@
 
   hover _ : editor-hover
   
-  completion template:
+  completion template : Strategy =
     "if" " " <e> " then\n\t" <s> "\nend"
       
-  completion template:
+  completion template : Strategy = 
     "switch" " " <s> "\n\tcase " <c> ":" " " <s> "\n\totherwise: " <id> "\nend"
 
-  completion template:
+  completion template : Strategy =
   	"let" "\n\t" <x> " = " <s> "\nin\n\t" <s> "\nend"
 
-  completion template:
+  completion template : Decl = // Actually: Def
   	"where" "\n\t" (blank)
   	
-  completion template:
+  completion template : Decl = // Actually: Def
   	"with" "\n\t" (blank)
   
   completion template:
@@ -49,6 +49,9 @@
   completion template:
     "rules" "\n\t" (blank)
   
+  completion template : Decl =
+    "imports" "\n\t" <Module> (blank)
+  
   completion template:
     "signature constructors" "\n\t" (blank)
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-completions-descriptor.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-completions-descriptor.str	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-completions-descriptor.str	Wed Aug 11 14:02:37 2010	(r21161)
@@ -32,11 +32,11 @@
           ~~
         completions
           ~~
-          ~// Syntax completion:
+          ~~// Syntax completion:
           completion template: "module " <m>        (blank)
           completion template: "entity " <e> " {}"  (blank)
           ~~
-          ~// Semantic (identifier) completion:
+          ~~// Semantic (identifier) completion:
           completion proposer: editor-complete
           completion trigger: ":"
       ]|

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf	Wed Aug 11 14:02:37 2010	(r21161)
@@ -24,12 +24,16 @@
 
     "completion" "keyword" ":" PropertyValue CompletionAnno -> SemanticRule {cons("CompletionKeyword")}
     
-    "completion" "template" ":" String CompletionPart+ CompletionAnno -> SemanticRule {cons("CompletionTemplate")}
+    "completion" "template" ":" String CompletionPart* CompletionAnno -> SemanticRule {cons("CompletionTemplate")}
     
     %% Deprecated: conflicts with content completion
     "completion" "template" ":" PropertyValue CompletionPart+ CompletionAnno -> SemanticRule {cons("CompletionTemplate"), avoid, deprecated("Add quotes to the starting literal")}
     
-    "completion" "template" ":" Sort "=" String CompletionPart+ CompletionAnno -> SemanticRule {cons("CompletionTemplateWithSort")}
+    "completion" "template" ":" Sort "=" String CompletionPart* CompletionAnno -> SemanticRule {cons("CompletionTemplateWithSort")}
+    
+    %% Used as content completion triggers
+    "completion" "template" ":" PropertyValue CompletionPart* CompletionAnno -> SemanticRule {cons("CompletionTemplate"), recover, avoid}
+    "completion" "template" ":" Sort "=" PropertyValue CompletionPart* CompletionAnno -> SemanticRule {cons("CompletionTemplateWithSort"), recover, avoid}
 
     "completion" "trigger" ":" PropertyValue CompletionAnno -> SemanticRule {cons("CompletionTrigger")}
   
@@ -53,6 +57,8 @@
     "(blank)"    -> PropertyValue {reject}
     "(disable)"  -> PropertyValue {reject}
     "completion" -> PropertyValue {reject}
+    "template"   -> PropertyValue {reject}
+    "trigger"    -> PropertyValue {reject}
     "identifier" -> PropertyValue {reject}
 
   lexical syntax

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/OutlinerService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/OutlinerService.sdf	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/OutlinerService.sdf	Wed Aug 11 14:02:37 2010	(r21161)
@@ -18,4 +18,4 @@
   context-free syntax
 
     Node                 -> OutlineRule {cons("OutlineRule"), prefer}
-    Term[[StrategoExpr]] -> OutlineRule {cons("OutlineRule")}
+    %% TODO: Term[[StrategoExpr]] -> OutlineRule {cons("OutlineRule")}

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/Stratego-Java-EditorService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/Stratego-Java-EditorService.sdf	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/Stratego-Java-EditorService.sdf	Wed Aug 11 14:02:37 2010	(r21161)
@@ -42,7 +42,7 @@
     QuotedTerm -> Color {cons("FromMetaExpr")}
     QuotedTerm -> Font  {cons("FromMetaExpr")}
     QuotedTerm -> SectionName {cons("FromMetaExpr")}
-    QuotedTerm -> SemanticRule {cons("FromMetaExpr")}
+    QuotedTerm -> SemanticRule {cons("FromMetaExpr"), avoid}
     
     QuotedTerms -> OutlineRule*   {cons("FromMetaExpr")}
     QuotedTerms -> ColorRule*     {cons("FromMetaExpr")}

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/AntDescriptorBuilder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/AntDescriptorBuilder.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/AntDescriptorBuilder.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -29,7 +29,8 @@
 		if (builder.isAntBuildDisallowed())
 			throw new IllegalStateException("Cannot load new editor at this time: try again after background loading is completed");
 		
-		synchronized (Environment.getSyncRoot()) {
+		Environment.getStrategoLock().lock();
+		try {
 			active = true;
 			try {
 				String descriptor = args[0];
@@ -41,6 +42,8 @@
 			} finally {
 				active = false;
 			}
+		} finally {
+			Environment.getStrategoLock().unlock();
 		}
 	}
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -73,10 +73,13 @@
 	 * and ignore it at the next resource event arrives.
 	 */
 	public void forceUpdate(IResource resource) {
-		synchronized (Environment.getSyncRoot()) {
+		Environment.getStrategoLock().lock();
+		try {
 			assert resource.toString().endsWith(".packed.esv");
 			forceNoUpdate(resource);
 			loadPackedDescriptor(resource);
+		} finally {
+			Environment.getStrategoLock().unlock();
 		}
 	}
 
@@ -91,8 +94,11 @@
 	 * Ignores the specified descriptor at the next resource event arrives.
 	 */
 	public void forceNoUpdate(String file) {
-		synchronized (Environment.getSyncRoot()) {
+		Environment.getStrategoLock().lock();
+		try {
 			asyncIgnoreOnce.add(file);
+		} finally {
+			Environment.getStrategoLock().unlock();
 		}
 	}
 
@@ -114,7 +120,8 @@
 			@Override
 			public IStatus runInWorkspace(IProgressMonitor monitor) {
 				// TODO: Finer-grained locking? (that seems to lead to deadlocks)
-				synchronized (Environment.getSyncRoot()) {
+				Environment.getStrategoLock().lock();
+				try {
 					for (;;) {
 	 					IResourceChangeEvent event;
 						synchronized (asyncEventQueue) {
@@ -128,6 +135,8 @@
 						monitor.beginTask("Scanning workspace", IProgressMonitor.UNKNOWN);
 						postResourceChanged(event.getDelta(), monitor);
 					}
+				} finally {
+					Environment.getStrategoLock().unlock();
 				}
 			}
 		};

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/StartupDescriptorLoader.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/StartupDescriptorLoader.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/StartupDescriptorLoader.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -55,7 +55,8 @@
 	*/
 	
 	private static void loadAllServices() {
-		synchronized (Environment.getSyncRoot()) {
+		Environment.getStrategoLock().lock();
+		try {
 			for (final IProject project : ResourcesPlugin.getWorkspace().getRoot().getProjects()) {
 				if (project.isOpen()) {
 					try {
@@ -70,6 +71,8 @@
 					}
 				}
 			}
+		} finally {
+			Environment.getStrategoLock().unlock();
 		}
 	}
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -157,7 +157,8 @@
 		try {
 			monitor.setTaskName("Acquiring environment lock");
 			monitor.worked(1);
-			synchronized (Environment.getSyncRoot()) { // avoid background editor loading
+			Environment.getStrategoLock().lock();
+			try { // avoid background editor loading
 				monitor.setTaskName("Loading new resources");
 				project.refreshLocal(IResource.DEPTH_INFINITE, new NullProgressMonitor());
 				monitor.worked(1);
@@ -176,6 +177,8 @@
 
 				//project.refreshLocal(DEPTH_INFINITE, new NullProgressMonitor());
 				monitor.worked(1);
+			} finally {
+				Environment.getStrategoLock().unlock();
 			}
 		} finally {
 			Job.getJobManager().endRule(root);
@@ -223,7 +226,9 @@
 		Job job = new Job("Refreshing project") {
 			@Override
 			protected IStatus run(IProgressMonitor monitor) {
-				synchronized (Environment.getSyncRoot()) {}; // wait for update thread
+				// Wait for update thread
+				Environment.getStrategoLock().lock();
+				Environment.getStrategoLock().unlock();
 				try {
 					project.refreshLocal(DEPTH_INFINITE, new NullProgressMonitor());
 				} catch (CoreException e) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -9,6 +9,7 @@
 import java.util.HashSet;
 import java.util.Map;
 import java.util.Set;
+import java.util.concurrent.locks.ReentrantLock;
 
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.runtime.CoreException;
@@ -77,6 +78,8 @@
 	
 	private static boolean isInitialized;
 	
+	private static SWTSafeLock lock = new SWTSafeLock();
+	
 	static {
 		wrappedFactory = new UnsharedWrappedATermFactory();
 		factory = new PureFactory();
@@ -109,24 +112,24 @@
 	}
 	
 	// TODO: Split up shared and non-shared environment entities?
-	
-	// LOCKING
-	
-	/**
-	 * Gets the object to lock on for environment entities shared
-	 * between the main thread and the workspace thread.
-	 */
+
+	@Deprecated
 	public static Object getSyncRoot() {
-		// TODO: disallow main thread locking everywhere except in the startup loader?
-		if (!isInitialized && EditorState.isUIThread())
+		throw new UnsupportedOperationException("Use getStrategoLock() instead with a try/finally clause for locking");
+	}
+	
+	public static ReentrantLock getStrategoLock() {
+		if (!isInitialized && EditorState.isUIThread()) {
 			isInitialized = true;
-		else if (!Thread.holdsLock(Environment.class) && EditorState.isUIThread() && Debug.ENABLED)
+		} else if (Debug.ENABLED && !lock.isHeldByCurrentThread() && EditorState.isUIThread()) {
 			Environment.logWarning("Acquired environment lock from main thread");
-		return Environment.class;
+		}
+		return lock;
 	}
 	
 	public static void assertLock() {
-		assert Thread.holdsLock(getSyncRoot()) : "Please use the course-grained Environment.getSyncRoot() lock";
+		assert getStrategoLock().isHeldByCurrentThread() :
+			"Please use the course-grained Environment.getStrategoLock() lock";
 	}
 	
 	private static void initMainThread() {
@@ -161,6 +164,7 @@
 	}
 	
 	public static ATermConverter getATermConverter() {
+		assert getStrategoLock().isHeldByCurrentThread();
 	    return atermConverter;
 	}
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/SWTSafeLock.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/SWTSafeLock.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/SWTSafeLock.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -18,6 +18,8 @@
 public class SWTSafeLock extends ReentrantLock {
 
 	private static final long serialVersionUID = 1448450448343689240L;
+	
+	private static final long INITIAL_TIMEOUT = 30000;
 
 	private static final long EVENT_RATE = 50;
 	
@@ -34,8 +36,11 @@
 		if (Environment.isMainThread()) {
 			try {
 				// TODO: Could the SWTSafeLock cause trouble, e.g. by launching multiple content proposers?
-				while (!tryLock(EVENT_RATE, TimeUnit.MILLISECONDS)) {
-					while (Display.getCurrent().readAndDispatch());
+				//       Let's use an INITIAL_TIMEOUT to be safe
+				if (!tryLock(INITIAL_TIMEOUT, TimeUnit.MILLISECONDS)) {
+					do {
+						while (Display.getCurrent().readAndDispatch());
+					} while (!tryLock(EVENT_RATE, TimeUnit.MILLISECONDS));
 				}
 			} catch (InterruptedException e) {
 				throw new RuntimeException(e);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ContentProposerFactory.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ContentProposerFactory.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ContentProposerFactory.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -110,9 +110,9 @@
 		}
 
 		for (IStrategoAppl template : collectTerms(descriptor.getDocument(), "CompletionTemplateWithSort")) {
-			IStrategoTerm prefixTerm = termAt(template, 0);
+			String sort = termContents(termAt(template, 0));
+			IStrategoTerm prefixTerm = termAt(template, 1);
 			String prefix = termContents(prefixTerm);
-			String sort = termContents(termAt(template, 1));
 			IStrategoList completionParts = termAt(template, 2);
 			IStrategoTerm anno = termAt(template, 3);
 			completionParts = Environment.getTermFactory().makeListCons(prefixTerm, completionParts);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -167,7 +167,7 @@
 		//     at least for files with an in-workspace editor(?)
 		//   - also see SGLRParseController.onParseCompleted
 		assert source.getParseLock().isHeldByCurrentThread();
-		assert !Thread.holdsLock(Environment.getSyncRoot()) : "Potential deadlock";
+		assert !Environment.getStrategoLock().isHeldByCurrentThread() : "Potential deadlock";
 		
 		processErrorReportsQueue();
 		handler.commitDeletions();
@@ -179,7 +179,7 @@
 	public void commitMultiErrorLineAdditions() {
 		// Threading concerns: see commitDeletions()
 		assert source.getParseLock().isHeldByCurrentThread();
-		assert !Thread.holdsLock(Environment.getSyncRoot()) : "Potential deadlock";
+		assert !Environment.getStrategoLock().isHeldByCurrentThread() : "Potential deadlock";
 
 		processErrorReportsQueue();
 		handler.commitMultiErrorLineAdditions();
@@ -191,7 +191,7 @@
 	public void commitAdditions() {
 		// Threading concerns: see commitDeletions()
 		assert source.getParseLock().isHeldByCurrentThread();
-		assert !Thread.holdsLock(Environment.getSyncRoot()) : "Potential deadlock";
+		assert !Environment.getStrategoLock().isHeldByCurrentThread() : "Potential deadlock";
 		
 		handler.commitAdditions();
 	}
@@ -363,7 +363,7 @@
 			sdf2imp.init(asyncAmbReportingContext);
 		}
 
-		if (Thread.holdsLock(Environment.getSyncRoot())) {
+		if (Environment.getStrategoLock().isHeldByCurrentThread()) {
 			// Potential deadlock (occurs when parsing a file for the first time, when it's probably safe)
 			return amb.toString();
 		}
@@ -372,8 +372,11 @@
 			ITermFactory factory = asyncAmbReportingContext.getFactory();
 			IStrategoTerm result;
 			
-			synchronized (Environment.getSyncRoot()) {
+			Environment.getStrategoLock().lock();
+			try {
 				result = TermConverter.convert(factory, Environment.getATermConverter().convert(amb));
+			} finally {
+				Environment.getStrategoLock().unlock();
 			}
 			
 			result = factory.makeAppl(factory.makeConstructor("parsetree", 2), result, factory.makeInt(2));

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -404,7 +404,7 @@
 		// - must not acquire resource locks when Eclipse is starting
 		
 		if (!Environment.isMainThread()) {
-			if (!monitor.isCanceled() && !Thread.holdsLock(Environment.getSyncRoot())) {
+			if (!monitor.isCanceled() && !Environment.getStrategoLock().isHeldByCurrentThread()) {
 				// Note that a resource lock is acquired here
 				errorHandler.commitMultiErrorLineAdditions();
 				errorHandler.commitDeletions();

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -87,8 +87,11 @@
 	public IStrategoAstNode parse(char[] input, String filename)
 			throws TokenExpectedException, BadTokenException, SGLRException, IOException {
 		
-		synchronized (Environment.getSyncRoot()) {
+		Environment.getStrategoLock().lock();
+		try {
 			return parser.parse(input, filename);
+		} finally {
+			Environment.getStrategoLock().unlock();
 		}
 	}
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -536,7 +536,7 @@
 	 */
 	@Deprecated
 	public static void processEditorRecolorEvents(UniversalEditor universalEditor) {
-		assert !Thread.holdsLock(Environment.getSyncRoot()) : "Potential deadlock";
+		assert !Environment.getStrategoLock().isHeldByCurrentThread() : "Potential deadlock";
 		try {
 			IModelListener presentation = universalEditor.getServiceControllerManager().getPresentationController();
 			presentation.update(universalEditor.getParseController(), new NullProgressMonitor());

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstSortInspector.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstSortInspector.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -0,0 +1,120 @@
+package org.strategoxt.imp.runtime.parser.ast;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.LinkedHashSet;
+import java.util.Set;
+
+import lpg.runtime.IPrsStream;
+
+import org.eclipse.imp.parser.ISourcePositionLocator;
+import org.strategoxt.imp.runtime.parser.tokens.TokenKind;
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class AstSortInspector {
+	
+	private final RootAstNode ast;
+
+	public AstSortInspector(RootAstNode ast) {
+		this.ast = ast;
+	}
+
+	
+	// TODO: get *all* sorts at cursor by looking at the parse tree? or by storing injections in the AST?
+	//       (see AsfixImploder)
+	public Set<String> getSortsAtOffset(int offset) {
+		//if (node.getConstructor().equals(COMPLETION_UNKNOWN))
+		//	return Collections.emptySet();
+		
+		if (ast == null) return Collections.emptySet();
+		ISourcePositionLocator locator = ast.getParseController().getSourcePositionLocator();
+		AstNode node = (AstNode) locator.findNode(ast, offset);
+		if (node == null) node = ast;
+
+		int startToken = getLayoutStartTokenOffset(node);
+		int endToken = getLayoutEndTokenOffset(node);
+		Set<String> results = getSortsOfOptionalChildren(node, offset);
+		boolean isOptNode = false;
+
+		// Follow the (labeled) injection chain upwards
+		do {
+			AstNode parent = node.getParent();
+			if (node.getLeftIToken().getTokenIndex() > startToken) {
+				if (node.isList()) {
+					isOptNode = true;
+					results.add(((ListAstNode) node).getElementSort());
+				} else if (node.getSort() != null) {
+					if (node.getSort().equals("Some")) isOptNode = true;
+					results.add(node.getSort());
+				}
+			} else if (parent != null && parent.isList()) {
+				results.add(((ListAstNode) parent).getElementSort());
+			}
+			// HACK: include element sort of sibling list
+			if (isOptNode && (node = getNextSibling(node)) != null) {
+				if (node.isList()) results.add(((ListAstNode) node).getElementSort());
+			}
+			node = parent;
+		} while (node != null && node.getRightIToken().getTokenIndex() < endToken);
+		
+		if (node != null && node.isList()) {
+			// Add sort of container list with elements after current node
+			results.add(((ListAstNode) node).getElementSort());
+		}
+		
+		results.remove(null);
+		return results;
+	}
+
+	private Set<String> getSortsOfOptionalChildren(AstNode node, int offset) {
+		// TODO: detect 'opt' optionals in addition to list children?
+		// TODO: somehow behave differently in case the completion resulted in a syntax error?
+		IPrsStream tokens = ast.getRightIToken().getIPrsStream();
+		Set<String> results = new LinkedHashSet<String>();
+		for (AstNode child : node.getChildren()) {
+			if (child.isList()) {
+				int startToken = getLayoutStartTokenOffset(child);
+				int endToken = getLayoutEndTokenOffset(child);
+				
+				if ((startToken < 0 || tokens.getTokenAt(startToken).getEndOffset() <= offset)
+						&& (endToken >= tokens.getStreamLength() || tokens.getTokenAt(endToken).getStartOffset() >= offset)) {
+					results.add(((ListAstNode) child).getElementSort());
+				}
+			}
+		}
+		return results;
+	}
+
+	private int getLayoutStartTokenOffset(AstNode node) {
+		int result = node.getLeftIToken().getTokenIndex();
+		IPrsStream tokens = ast.getRightIToken().getIPrsStream();
+		while (--result >= 0) {
+			int kind = tokens.getTokenAt(result).getKind();
+			if (kind != TokenKind.TK_LAYOUT.ordinal() && kind != TokenKind.TK_ERROR.ordinal())
+				break;
+		}
+		return result;
+	}
+
+	private int getLayoutEndTokenOffset(AstNode node) {
+		int result = node.getRightIToken().getTokenIndex();
+		IPrsStream tokens = ast.getRightIToken().getIPrsStream();
+		while (++result < tokens.getStreamLength()) {
+			int kind = tokens.getTokenAt(result).getKind();
+			if (kind != TokenKind.TK_LAYOUT.ordinal() && kind != TokenKind.TK_ERROR.ordinal())
+				break;
+		}
+		return result;
+	}
+
+	private static AstNode getNextSibling(AstNode node) {
+		AstNode parent = node.getParent();
+		if (parent == null) return null;
+		ArrayList<AstNode> children = parent.getChildren();
+		int siblingIndex = children.indexOf(node) + 1;
+		if (siblingIndex >= children.size()) return null;
+		return children.get(siblingIndex);
+	}
+}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -39,7 +39,7 @@
  */
 public class AutoEditStrategy implements IAutoEditStrategy, VerifyKeyListener {
 	
-	private static boolean justReceivedKeyEvent;
+	private static boolean justProcessedKeyEvent;
 		
 	private final ILanguageSyntaxProperties syntax;
 	
@@ -107,28 +107,29 @@
 			String input = new String(new char[] { event.character });
 			Point selection = getEditor().getSelection();
 			ISourceViewer viewer = getEditor().getServiceControllerManager().getSourceViewer();
-			if (event.widget instanceof StyledText && indentAfterNewline(viewer, viewer.getDocument(), selection.x, selection.y, input)) {
+			if (event.widget instanceof StyledText
+					&& indentAfterNewline(viewer, viewer.getDocument(), selection.x, selection.y, input)) {
 				// Make sure caret is visible (urgh)
 				((StyledText) event.widget).invokeAction(ST.LINE_UP);
 				((StyledText) event.widget).invokeAction(ST.LINE_DOWN);
 				event.doit = false;
-				justReceivedKeyEvent = true;
 			} else if (insertClosingFence(viewer, viewer.getDocument(), selection.x, selection.y, input)
 					|| skipClosingFence(viewer, viewer.getDocument(), selection.x, selection.y, input)
 					|| undoClosingFence(viewer, viewer.getDocument(), selection.x, selection.y, input)) {
 				event.doit = false;
-				justReceivedKeyEvent = true;
 			}
 		} catch (BadLocationException e) {
 			Environment.logException("Could not determine auto edit strategy", e);
+			justProcessedKeyEvent = false;
 		} catch (RuntimeException e) {
 			Environment.logException("Could not apply auto edit strategy", e);
+			justProcessedKeyEvent = false;
 		}
 	}
 	
-	protected static boolean pollJustReceivedKeyEvent() {
-		boolean result = justReceivedKeyEvent;
-		justReceivedKeyEvent = false;
+	protected static boolean pollJustProcessedKeyEvent() {
+		boolean result = justProcessedKeyEvent;
+		justProcessedKeyEvent = false;
 		return result;
 	}
 
@@ -161,6 +162,7 @@
 		//   "\"" "\""
 		//   (may be very tricky, when detecting if something is a closing " or opening ")
 		if (input.equals("\n") || input.equals("\r") || input.equals("\r\n")) {
+			justProcessedKeyEvent = true;
 			String lineStart = getLineBeforeOffset(document, offset);
 			String lineEnd = getLineAfterOffset(document, offset, length);
 			String upToCursor;
@@ -210,6 +212,7 @@
 							|| isIdentifierAfterOffset(document, offset)
 							|| isFenceAfterOffset(document, offset, openFence))
 						return false;
+					justProcessedKeyEvent = true;
 					String lineStart = getLineBeforeOffset(document, offset);
 					closeFence = formatInsertedText(closeFence, lineStart);
 					document.replace(offset, 0, input + closeFence);
@@ -298,6 +301,7 @@
 			if (lastAutoInsertedFenceLineEnd.startsWith(input)
 					&& lineEnd.equals(lastAutoInsertedFenceLineEnd)
 					&& getLineBeforeOffset(document, offset).startsWith(lastAutoInsertedFenceLineStart)) {
+				justProcessedKeyEvent = true;
 				lastAutoInsertedFenceLineEnd = lastAutoInsertedFenceLineEnd.substring(input.length());
 				lastAutoInsertedFencesLength--;
 				if (!lastAutoInsertionOpenFences.isEmpty())
@@ -327,6 +331,7 @@
 				String closeFence = document.get(offset, 1);
 				String expectedCloseFence = getMatchingCloseFence(deletedChar);
 				if (offset == lastAutoInsertionOpenFences.peek() && closeFence.equals(expectedCloseFence)) {
+					justProcessedKeyEvent = true;
 					lastAutoInsertedFencesLength--;
 					lastAutoInsertedFenceLineEnd = lastAutoInsertedFenceLineEnd.substring(1);
 					lastAutoInsertionOpenFences.pop();

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposal.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposal.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposal.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -42,6 +42,8 @@
 	
 	private static Font keywordFont;
 	
+	private static volatile boolean justApplied; 
+	
 	private final ContentProposer proposer;
 	
 	private final IStrategoList newTextParts;
@@ -153,6 +155,7 @@
 			String newText = newTextParts == null
 					? getNewText()
 					: proposalPartsToString(document, newTextParts);
+			justApplied = true;
 			document.replace(range.getOffset(), range.getLength(), newText.substring(getPrefix().length()));
 		} catch (BadLocationException e) {
 			Environment.logException("Could not apply content proposal", e);
@@ -162,6 +165,12 @@
 		proposer.getParser().scheduleParserUpdate(0, false);
 	}
 	
+	protected static boolean pollJustApplied() {
+		boolean result = justApplied;
+		justApplied = false;
+		return result;
+	}
+	
 	@Override
 	public String getNewText() {
 		assert newTextParts == null : "Don't use me if newTextParts != null";

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -9,7 +9,6 @@
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Arrays;
-import java.util.Collections;
 import java.util.Comparator;
 import java.util.HashSet;
 import java.util.Random;
@@ -22,7 +21,6 @@
 import org.eclipse.core.runtime.NullProgressMonitor;
 import org.eclipse.imp.editor.ErrorProposal;
 import org.eclipse.imp.parser.IParseController;
-import org.eclipse.imp.parser.ISourcePositionLocator;
 import org.eclipse.imp.services.IContentProposer;
 import org.eclipse.jface.text.ITextViewer;
 import org.eclipse.jface.text.Region;
@@ -38,6 +36,7 @@
 import org.strategoxt.imp.runtime.parser.SGLRParseController;
 import org.strategoxt.imp.runtime.parser.ast.AbstractVisitor;
 import org.strategoxt.imp.runtime.parser.ast.AstNode;
+import org.strategoxt.imp.runtime.parser.ast.AstSortInspector;
 import org.strategoxt.imp.runtime.parser.ast.ListAstNode;
 import org.strategoxt.imp.runtime.parser.ast.RootAstNode;
 import org.strategoxt.imp.runtime.parser.ast.StringAstNode;
@@ -122,7 +121,7 @@
 			return createErrorProposal("No proposals available - completion lexical must allow letters and numbers", offset);
 		
 		RootAstNode ast = constructAst(getParser(controller), offset, document);
-		Set<String> sorts = getSortsAtCursor(controller, ast, offset);
+		Set<String> sorts = new AstSortInspector(ast).getSortsAtOffset(offset);
 		if (currentCompletionNode == null) {
 			// TODO: allow syntactic completions for start symbol
 			if (lastCompletionAst == null && lastParserAst == null)
@@ -135,14 +134,15 @@
 			try {
 				StrategoConsole.getOutputWriter().write(
 					":: Completion triggered for: " + currentCompletionNode
-					+ (Debug.ENABLED ? " (candidate sorts: " + sorts + ")\n" : ""));
+					+ " (candidate sorts: " + sorts + ")\n");
+				StrategoConsole.activateConsole(true);
 			} catch (IOException e) {
-				// No matter
+				Environment.logWarning("Could not write to console", e);
 			}
 		}
 
 
-		ICompletionProposal[] results = toProposals(invokeCompletionFunction(controller), document, offset);
+		ICompletionProposal[] results = toProposals(invokeCompletionFunction(controller), document, offset, sorts);
 		
 		/* UNDONE: automatic proposal insertion
 		if (results.length == 1 && results[0] instanceof SourceProposal) {
@@ -221,11 +221,15 @@
 		if (completionFunction == null) {
 			return Environment.getTermFactory().makeList();
 		} else {
-			// TODO: is using this lock in the main thread a deadlock risk?
+			// FIXME: Using the environment lock for content completion
+			//        The problem here is really that content completion shouldn't
+			//        run in the main thread. It might be possible to spawn a new
+			//        thread and then invoke content completion again when it's done.
 			class Runner implements Runnable {
 				IStrategoTerm result;
 				public void run() {
-					synchronized (observer.getSyncRoot()) {
+					observer.getLock().lock();
+					try {
 						if (!observer.isUpdateScheduled()) {
 							observer.update(controller, new NullProgressMonitor());
 						}
@@ -235,6 +239,8 @@
 							observer.reportRewritingFailed();
 							result = TermFactory.EMPTY_LIST;
 						}
+					} finally {
+						observer.getLock().unlock();
 					}
 				}
 			}
@@ -251,7 +257,7 @@
 		}
 	}
 	
-	private ICompletionProposal[] toProposals(IStrategoTerm proposals, String document, int offset) {
+	private ICompletionProposal[] toProposals(IStrategoTerm proposals, String document, int offset, Set<String> sorts) {
 		Debug.startTimer();
 		
 		String error = "No proposals available - '" + completionFunction
@@ -265,7 +271,7 @@
 		Region offsetRegion = new Region(offset, 0);
 		String prefix = currentCompletionPrefix;
 		
-		Set<ICompletionProposal> results = getKeywordAndTemplateProposals(document, prefix, offsetRegion, offset);
+		Set<ICompletionProposal> results = getKeywordAndTemplateProposals(document, prefix, offsetRegion, offset, sorts);
 
 		for (IStrategoList cons = (IStrategoList) proposals; !cons.isEmpty(); cons = cons.tail()) {
 			IStrategoTerm proposal = cons.head();
@@ -344,7 +350,9 @@
 		return resultArray;
 	}
 	
-	private Set<ICompletionProposal> getKeywordAndTemplateProposals(String document, String prefix, Region offsetRegion, int offset) {
+	private Set<ICompletionProposal> getKeywordAndTemplateProposals(String document, String prefix,
+			Region offsetRegion, int offset, Set<String> sorts) {
+		
 		Set<ICompletionProposal> results = new HashSet<ICompletionProposal>();
 		boolean backTrackResultsOnly = false;
 		
@@ -378,6 +386,8 @@
 		
 		for (ContentProposalTemplate proposal : templates) {
 			String proposalPrefix = proposal.getPrefix();
+			if (proposal.getSort() != null && !sorts.contains(proposal.getSort()))
+				continue;
 			if (!backTrackResultsOnly && proposalPrefix.regionMatches(IGNORE_TEMPLATE_PREFIX_CASE, 0, prefix, 0, prefix.length())) {
 				if (!proposal.isBlankLineRequired() || isBlankBeforeOffset(document, offset - prefix.length()))
 					if (prefix.length() > 0 || identifierLexical.matcher(proposal.getPrefix()).lookingAt())
@@ -579,57 +589,27 @@
 	
 	private void insertNewCompletionNode(AstNode node, String prefix) {
 		// Create a new UNKNOWN(COMPLETION(prefix)) node
-		AstNode newNode = createCompletionNode(prefix, node.getLeftIToken(), node.getRightIToken());
+		AstNode result = createCompletionNode(prefix, node.getLeftIToken(), node.getRightIToken());
 		ArrayList<AstNode> newNodeContainer = new ArrayList<AstNode>(1);
-		newNodeContainer.add(newNode);
-		currentCompletionNode = newNode = new AstNode(null, node.getLeftIToken(), node.getRightIToken(), COMPLETION_UNKNOWN, newNodeContainer);
+		newNodeContainer.add(result);
+		currentCompletionNode = result = new AstNode(null, node.getLeftIToken(), node.getRightIToken(), COMPLETION_UNKNOWN, newNodeContainer);
 		
 		// Insert the node in a list near the textual input location
 		if (node instanceof ListAstNode) {
-			node.getChildren().add(newNode);
-			newNode.setParent(node);
+			node.getChildren().add(result);
+			result.setParent(node);
 			return;
 		}
 		for (AstNode parent = node.getParent(); parent != null; node = parent, parent = parent.getParent()) {
 			if (parent instanceof ListAstNode) {
 				int i = parent.getChildren().indexOf(node);
-				parent.getChildren().add(i + 1, newNode);
-				newNode.setParent(parent);
+				parent.getChildren().add(i + 1, result);
+				result.setParent(parent);
 				return;
 			}
 		}
+		result.setParent(node.getRoot());
 		return;
 	}
 	
-	// TODO: get *all* sorts at cursor by looking at the parse tree? or by storing injections in the AST?
-	private Set<String> getSortsAtCursor(IParseController controller, RootAstNode ast, int offset) {
-		//if (node.getConstructor().equals(COMPLETION_UNKNOWN))
-		//	return Collections.emptySet();
-		
-		ISourcePositionLocator locator = controller.getSourcePositionLocator();
-		AstNode node = (AstNode) locator.findNode(ast, offset);
-		if (node == null) return Collections.emptySet();
-		
-		Set<String> results = new HashSet<String>();
-
-		IToken rightToken = node.getRightIToken();
-
-		// Follow the (labeled) injection chain upwards
-		do {
-			if (node.isList()) {
-				results.add(((ListAstNode) node).getElementSort());
-			} else if (node.getSort() != null) {
-				results.add(node.getSort());
-			}
-			node = node.getParent();
-		} while (node != null && node.getRightIToken() == rightToken);
-		
-		if (node != null && node.isList()) {
-			// Add sort of container list with elements after current node
-			results.add(((ListAstNode) node).getElementSort());
-		}
-		
-		return results;
-	}
-	
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -54,9 +54,10 @@
 			if (event.getDocumentEvent() != null // not just a visual change
 					&& event.getText() != null
 					&& (event.getText().length() == 1 // single keypress
-							|| AutoEditStrategy.pollJustReceivedKeyEvent())
-					&& matchesPatterns(event.getDocumentEvent().getDocument(), event.getOffset())) {
-				viewer.setSelectedRange(event.getOffset() + 1, 0);
+							|| AutoEditStrategy.pollJustProcessedKeyEvent()
+							|| ContentProposal.pollJustApplied())
+					&& matchesPatterns(event.getDocumentEvent().getDocument(), event.getOffset() + event.getText().length())) {
+				viewer.setSelectedRange(event.getOffset() + event.getText().length(), 0);
 				((ITextOperationTarget) viewer).doOperation(ISourceViewer.CONTENTASSIST_PROPOSALS);
 			}
 		} catch (BadLocationException e) {
@@ -69,8 +70,8 @@
 	private boolean matchesPatterns(IDocument document, int offset) throws BadLocationException {
 		for (Pattern pattern : patterns) {
 			boolean foundNewLine = false;
-			for (int startOffset = offset; startOffset >= 0; startOffset--) {
-				String substring = document.get(startOffset, offset - startOffset + 1);
+			for (int startOffset = offset - 1; startOffset >= 0; startOffset--) {
+				String substring = document.get(startOffset, offset - startOffset);
 				if (pattern.matcher(substring).matches()) {
 					return true;
 				}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/CustomStrategyBuilder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/CustomStrategyBuilder.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/CustomStrategyBuilder.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -62,7 +62,8 @@
 				}
 			};
 		
-		synchronized (getObserver().getSyncRoot()) {
+		getObserver().getLock().lock();
+		try {
 			InputDialog dialog = new InputDialog(null, "Apply custom rule", "Enter the name of the rewrite rule or strategy to apply", getInitialValue(editor), validator);
 			if (dialog.open() == InputDialog.OK) {
 				setInitialValue(editor, dialog.getValue());
@@ -70,6 +71,8 @@
 			} else {
 				return null;
 			}
+		} finally {
+			getObserver().getLock().unlock();
 		}
 	}
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -51,7 +51,8 @@
 		if (function == null) return;
 		
 		try {
-			synchronized (Environment.getSyncRoot()) {
+			Environment.getStrategoLock().lock();
+			try {
 				AstNode ast = editor.getCurrentAst();
 				if (ast == null) return;
 				
@@ -82,6 +83,8 @@
 					if (editor.getDescriptor().isDynamicallyLoaded())
 						Environment.logWarning("Unexpected result from 'on save' strategy: should be None() or (\"filename\", \"contents\"): " + result);
 				}
+			} finally {
+				Environment.getStrategoLock().unlock();
 			}
 		} catch (RuntimeException e) {
 			Environment.logException("Exception in OnSaveService", e);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -159,7 +159,8 @@
 		String result = null;
 		String errorReport = null;
 		
-		synchronized (observer.getSyncRoot()) {
+		observer.getLock().lock();
+		try {
 			try {
 				if (node == null) {
 					openError(editor, "Editor is still analyzing");
@@ -203,6 +204,8 @@
 			} catch (Error e) {
 				reportGenericException(editor, e);
 			}
+		} finally {
+			observer.getLock().unlock();
 		}
 
 		try {
@@ -329,7 +332,7 @@
 	}
 
 	private void setFileContents(final EditorState editor, IFile file, final String contents) throws CoreException {
-		assert !Thread.holdsLock(observer.getSyncRoot()) && !Thread.holdsLock(Environment.getSyncRoot())
+		assert !observer.getLock().isHeldByCurrentThread() && !Environment.getStrategoLock().isHeldByCurrentThread()
 			: "Acquiring a resource lock can cause a deadlock";
 
 		/* TODO: update editor contents instead of file?
@@ -360,7 +363,7 @@
 	}
 
 	public static void setFileContentsDirect(IFile file, final String contents) throws CoreException {
-		assert !Thread.holdsLock(Environment.getSyncRoot());
+		assert !Environment.getStrategoLock().isHeldByCurrentThread();
 		InputStream resultStream = new ByteArrayInputStream(contents.getBytes());
 		if (file.exists()) {
 			file.setContents(resultStream, true, true, null);
@@ -372,7 +375,7 @@
 	}
 	
 	private static void createDirs(IContainer dir) throws CoreException {
-		assert !Thread.holdsLock(Environment.getSyncRoot());
+		assert !Environment.getStrategoLock().isHeldByCurrentThread();
 		if (dir == null) {
 			return;
 		} else if (!dir.exists()) {
@@ -390,7 +393,7 @@
 	 * (Asynchronous) exceptions are swallowed and logged.
 	 */
 	private IEditorPart openEditor(IFile file, boolean realTime) throws PartInitException {
-		assert !Thread.holdsLock(observer.getSyncRoot()) || Thread.holdsLock(Environment.getSyncRoot())
+		assert !observer.getLock().isHeldByCurrentThread() || Environment.getStrategoLock().isHeldByCurrentThread()
 			: "Opening a new editor and acquiring a resource lock can cause a deadlock";
 		
 		// TODO: non-persistent editor: WorkBenchPage.openEditor with a custom IEditorInput?

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -15,6 +15,7 @@
 import java.util.Map;
 import java.util.WeakHashMap;
 import java.util.concurrent.locks.Lock;
+import java.util.concurrent.locks.ReentrantLock;
 
 import lpg.runtime.IAst;
 
@@ -123,22 +124,18 @@
 		this.rushNextUpdate = rushNextUpdate;
 	}
 	
-	public AstMessageHandler getMessages() {
-		return messages;
-	}
-	
-	public Object getSyncRoot() {
+	public ReentrantLock getLock() {
 		 // TODO: *maybe* use descriptor as syncroot? deadlocky?
-		return Environment.getSyncRoot();
+		return Environment.getStrategoLock();
 	}
 
 	public String getLog() {
-		assert Thread.holdsLock(getSyncRoot());
+		assert getLock().isHeldByCurrentThread();
 		return ((EditorIOAgent) runtime.getIOAgent()).getLog().trim();
 	}
 	
 	private void initialize(IProgressMonitor monitor) {
-		assert Thread.holdsLock(getSyncRoot());
+		assert getLock().isHeldByCurrentThread();
 		
 		HybridInterpreter prototype = runtimePrototypes.get(descriptor);
 		if (prototype != null) {
@@ -185,11 +182,11 @@
 	}
 
 	private void createEmptyRuntime(IProgressMonitor monitor) {
-		assert Thread.holdsLock(getSyncRoot());
+		assert getLock().isHeldByCurrentThread();
 		
 		if (runtime == null) {
 			Debug.startTimer();
-			runtime = Environment.createInterpreter(getSyncRoot() != Environment.getSyncRoot());
+			runtime = Environment.createInterpreter(getLock() != Environment.getStrategoLock());
 			runtime.init();
 			Debug.stopTimer("Created new Stratego runtime instance");
 			monitor.subTask("Loading analysis runtime components");
@@ -199,9 +196,12 @@
 	private void loadCTree(String filename) {
 		try {
 			Debug.startTimer("Loading Stratego module ", filename);
-			assert getSyncRoot() == Environment.getSyncRoot() || !Thread.holdsLock(Environment.getSyncRoot());
-			synchronized (Environment.getSyncRoot()) {
+			assert getLock() == Environment.getStrategoLock() || !Environment.getStrategoLock().isHeldByCurrentThread();
+			Environment.getStrategoLock().lock();
+			try {
 				runtime.load(descriptor.openAttachment(filename));
+			} finally {
+				Environment.getStrategoLock().unlock();
 			}
 			Debug.stopTimer("Successfully loaded " +  filename);
 		} catch (InterpreterException e) {
@@ -284,7 +284,7 @@
 		IStrategoTerm feedback = null;
 		
 		try {
-			synchronized (getSyncRoot()) {
+			synchronized (getLock()) {
 				resultingAsts.remove(ast.getResource());
 				feedback = invokeSilent(feedbackFunction, makeInputTerm(ast, false), ast.getResource());
 	
@@ -296,11 +296,12 @@
 					messages.clearMarkers(ast.getResource());
 					messages.addMarkerFirstLine(ast.getResource(), "Analysis failed (see error log)", IMarker.SEVERITY_ERROR);
 					messages.commitAllChanges();
-				} else if (!monitor.isCanceled()) {
-					// TODO: figure out how this was supposed to be synchronized??
-					presentToUser(ast.getResource(), feedback);
 				}
 			}
+		 	if (feedback != null && !monitor.isCanceled()) {
+				// TODO: figure out how this was supposed to be synchronized??
+				presentToUser(ast.getResource(), feedback);
+		 	}
 		} finally {
 			// System.out.println("OBSERVED " + System.currentTimeMillis()); // DEBUG
 			// processEditorRecolorEvents(parseController);
@@ -314,7 +315,7 @@
 	}
 
 	public void reportRewritingFailed() {
-		assert Thread.holdsLock(getSyncRoot());
+		assert getLock().isHeldByCurrentThread();
 		StackTracer trace = runtime.getContext().getStackTracer();
 		runtime.getIOAgent().printError(
 				trace.getTraceDepth() != 0 ? "rewriting failed, trace:" : "rewriting failed");
@@ -341,7 +342,7 @@
 	*/
 
 	public void presentToUser(IResource resource, IStrategoTerm feedback) {
-		assert Thread.holdsLock(getSyncRoot());
+		assert getLock().isHeldByCurrentThread();
 		assert feedback != null;
 
 		if (feedback instanceof IStrategoString) {
@@ -397,7 +398,7 @@
 	}
 	
 	private final void feedbackToMarkers(IResource resource, IStrategoList feedbacks, int severity) {
-		assert Thread.holdsLock(getSyncRoot());
+		assert getLock().isHeldByCurrentThread();
 		
 		Context context = runtime.getCompiledContext();
 		sdf2imp.init(context);
@@ -445,7 +446,7 @@
 	 * Create an input term for a control rule.
 	 */
 	public IStrategoTuple makeInputTerm(IStrategoAstNode node, boolean includeSubNode, boolean useSourceAst) {
-		assert Thread.holdsLock(getSyncRoot());
+		assert getLock().isHeldByCurrentThread();
 		
 		Context context = getRuntime().getCompiledContext();
 		IStrategoTerm resultingAst = useSourceAst ? null : resultingAsts.get(node.getResource());
@@ -490,7 +491,7 @@
 	 * based on the ATerm syntax of the AST of the source file.
 	 */
 	public IStrategoTuple makeATermInputTerm(IStrategoAstNode node, boolean includeSubNode, IResource resource) {
-		assert Thread.holdsLock(getSyncRoot());
+		assert getLock().isHeldByCurrentThread();
 		stratego_aterm.init(runtime.getCompiledContext());
 		
 		ITermFactory factory = Environment.getTermFactory();
@@ -533,7 +534,8 @@
 	public IStrategoTerm invoke(String function, IStrategoTerm term, IResource resource)
 			throws UndefinedStrategyException, InterpreterErrorExit, InterpreterExit, InterpreterException {
 		
-		synchronized (getSyncRoot()) {
+		getLock().lock();
+		try {
 			if (runtime == null) initialize(new NullProgressMonitor());
 			if (runtime == null) return null;
 			
@@ -555,6 +557,8 @@
 			
 			Debug.stopTimer("Evaluated strategy " + function + (success ? "" : " (failed)"));
 			return success ? result : null;
+		} finally {
+			getLock().unlock();
 		}
 	}
 
@@ -581,7 +585,7 @@
 	 * Logs and swallows all exceptions.
 	 */
 	public IStrategoTerm invokeSilent(String function, IStrategoTerm input, IResource resource) {
-		assert Thread.holdsLock(getSyncRoot());
+		assert getLock().isHeldByCurrentThread();
 		IStrategoTerm result = null;
 		
 		try {
@@ -647,7 +651,7 @@
 	}
 	
 	private void configureRuntime(IResource resource) {
-		assert Thread.holdsLock(getSyncRoot());
+		assert getLock().isHeldByCurrentThread();
 		
 		try {
 			ITermFactory factory = runtime.getFactory();
@@ -677,7 +681,7 @@
 	}
 	
 	public HybridInterpreter getRuntime() {
-		assert Thread.holdsLock(getSyncRoot());
+		assert getLock().isHeldByCurrentThread();
 		if (runtime == null) initialize(new NullProgressMonitor());
 		if (runtime == null) createEmptyRuntime(new NullProgressMonitor()); // create empty runtime
 		return runtime;
@@ -688,10 +692,13 @@
 	}
 
 	public void reinitialize(Descriptor newDescriptor) throws BadDescriptorException {
-		synchronized (getSyncRoot()) {
+		getLock().lock();
+		try {
 			runtimePrototypes.remove(descriptor);
 			runtime = null;
 			descriptor = newDescriptor;
+		} finally {
+			getLock().unlock();
 		}
 	}
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverUpdateJob.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverUpdateJob.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverUpdateJob.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -23,11 +23,14 @@
 	
 	public IStatus analyze(IProgressMonitor monitor) {
 		
-		synchronized (observer.getSyncRoot()) {
+		observer.getLock().lock();
+		try {
 			this.progress = new StrategoProgressMonitor(monitor);
 			((EditorIOAgent)observer.getRuntime().getIOAgent()).setJob(this);
 			observer.update(parseController, monitor);
 			return Status.OK_STATUS;
+		} finally {
+			observer.getLock().unlock();
 		}
 		
 	}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoReferenceResolver.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoReferenceResolver.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoReferenceResolver.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -1,6 +1,6 @@
 package org.strategoxt.imp.runtime.services;
 
-import static org.spoofax.interpreter.core.Tools.*;
+import static org.spoofax.interpreter.core.Tools.isTermString;
 
 import java.util.List;
 
@@ -12,7 +12,6 @@
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.imp.runtime.Debug;
-import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
 
 /**
@@ -48,12 +47,15 @@
 			return null;
 		}
 		
-		synchronized (Environment.getSyncRoot()) {
+		observer.getLock().lock();
+		try {
 			if (!observer.isUpdateScheduled()) {
 				observer.update(parseController, new NullProgressMonitor());
 			}
 			IStrategoTerm resultTerm = observer.invokeSilent(function, node);
 			return observer.getAstNode(resultTerm, true);
+		} finally {
+			observer.getLock().unlock();
 		}
 	}
 
@@ -69,7 +71,8 @@
 			return null;
 		}
 		
-		synchronized (observer.getSyncRoot()) {
+		observer.getLock().lock();
+		try {
 			IStrategoTerm result = observer.invokeSilent(function, node);
 			if (result == null) {
 				return null;
@@ -78,6 +81,8 @@
 			} else {
 				return result.toString();
 			}
+		} finally {
+			observer.getLock().unlock();
 		}
 	}
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/DialogPrimitive.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/DialogPrimitive.java	Wed Aug 11 13:47:33 2010	(r21160)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/DialogPrimitive.java	Wed Aug 11 14:02:37 2010	(r21161)
@@ -40,17 +40,21 @@
 		IStrategoString input = (IStrategoString)tvars[2]; 
 		
 		
-		synchronized (Environment.getSyncRoot()) {
+		Environment.getStrategoLock().lock();
+		try {
 			InputDialog dialog = new InputDialog(null, title.stringValue(), message.stringValue(), input.stringValue(), null);
 			if (dialog.open() == InputDialog.OK) {
 				String userInput=dialog.getValue();		
 				env.setCurrent(env.getFactory().makeString(userInput));
 				return true;
 			} 
+		} finally {
+			Environment.getStrategoLock().unlock();
 		}
 		return false;
 		/*
-		synchronized (Environment.getSyncRoot()) {
+		Environment.getStrategoLock().lock();
+		try {
 			//open dialog
 			Display display = new Display();
 		    final Shell shell = new Shell(display);

From L.C.L.Kats at tudelft.nl  Thu Aug 12 11:00:32 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 12 Aug 2010 09:00:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21162 -
	spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr
	strc-java/trunk/java
Message-ID: <201008120900.o7C90WBY028907@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Thu Aug 12 09:00:21 2010
New Revision: 21162
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21162&sc=1

Log:
- Changed the Disambiguator to avoid allocating many many iterators in recursion
- Added the '-s' option to command-line JSGLR

Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Disambiguator.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Main.java
   strc-java/trunk/java/spoofax-libs.jar

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Disambiguator.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Disambiguator.java	Wed Aug 11 14:02:37 2010	(r21161)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Disambiguator.java	Thu Aug 12 09:00:21 2010	(r21162)
@@ -325,7 +325,9 @@
       }
 
     private void addTopSortAlternatives(IParseNode t, String sort, List<IParseNode> results) throws FilterException {
-        for (IParseNode amb : ((Amb) t).getAlternatives()) {
+        List<IParseNode> alternatives = ((Amb) t).getAlternatives();
+        for (int i = 0, max = alternatives.size(); i < max; i++) {
+            IParseNode amb = alternatives.get(i);
             if (amb instanceof Amb) {
                 addTopSortAlternatives(amb, sort, results);
             } else {
@@ -390,7 +392,8 @@
         List<IParseNode> newArgs = new ArrayList<IParseNode>();
         // boolean changed = false;
 
-        for (IParseNode n : args) {
+        for (int i = 0, max = args.size(); i < max; i++) {
+            IParseNode n = args.get(i);
             IParseNode filtered = filterTree(n, false);
             
             // changed = !filtered.equals(n) || changed;
@@ -405,8 +408,10 @@
 
         if (filterAny) {
             List<IParseNode> filtered = new ArrayList<IParseNode>();
-            for (IParseNode n : newArgs)
+            for (int i = 0, max = newArgs.size(); i < max; i++) {
+                IParseNode n = newArgs.get(i);
                 filtered.add(applyAssociativityPriorityFilter(n));
+            }
             return filtered;
         } else {
             return newArgs;
@@ -475,7 +480,8 @@
             List<IParseNode> ambs = ((Amb)firstKid).getAlternatives();
             List<IParseNode> restKids = kids.subList(1, t.kids.size() - 1);
             
-            for(IParseNode amb : ambs) {
+            for (int i = 0, max = ambs.size(); i < max; i++) {
+                IParseNode amb = ambs.get(i);
                 if(((ParseNode)amb).getLabel() != prodLabel.labelNumber) {
                     newAmbiguities.add(amb);
                 }
@@ -516,15 +522,17 @@
         int l0 = prodLabel.labelNumber;
         int kidnumber = 0;
 
-        for (IParseNode kid : kids) {
+        for (int i = 0, max = kids.size(); i < max; i++) {
+            final IParseNode kid = kids.get(i);
             IParseNode newKid = kid;
-            IParseNode injection = jumpOverInjections(kid);
+            final IParseNode injection = jumpOverInjections(kid);
 
             if (injection instanceof Amb) {
                 List<IParseNode> ambs = ((Amb) injection).getAlternatives();
 
                 newAmbiguities.clear();
-                for (IParseNode amb : ambs) {
+                for (int j = 0, jmax = ambs.size(); j < jmax; j++) {
+                    IParseNode amb = ambs.get(j);
                     IParseNode injAmb = jumpOverInjections(amb);
 
                     if (injAmb instanceof ParseNode) {
@@ -650,7 +658,9 @@
             rest.remove(rest.size() - 1);
 
             List<IParseNode> ambs = ((Amb) last).getAlternatives();
-            for (IParseNode amb : ambs) {
+
+            for (int i = 0, max = ambs.size(); i < max; i++) {
+                IParseNode amb = ambs.get(i);
                 if (amb instanceof Amb
                         || !parseTable.getLabel(((ParseNode) amb).getLabel()).equals(prodLabel)) {
                     newAmbiguities.add(amb);
@@ -700,7 +710,8 @@
 
         List<IParseNode> newAmbiguities = new ArrayList<IParseNode>();
 
-        for (IParseNode amb : ambs) {
+        for (int i = 0, max = ambs.size(); i < max; i++) {
+            IParseNode amb = ambs.get(i);
             IParseNode newAmb = filterTree(amb, true);
             if (newAmb != null) newAmbiguities.add(newAmb);
         }
@@ -709,7 +720,8 @@
             /* Handle ambiguities inside this ambiguity cluster */
             List<IParseNode> oldAmbiguities = new LinkedList<IParseNode>();
             oldAmbiguities.addAll(newAmbiguities);
-            for (IParseNode amb : oldAmbiguities) {
+            for (int i = 0, max = oldAmbiguities.size(); i < max; i++) {
+                IParseNode amb = oldAmbiguities.get(i);
                 if (newAmbiguities.remove(amb)) {
                     newAmbiguities = filterAmbiguityList(newAmbiguities, amb);
                 }
@@ -725,19 +737,19 @@
         return new Amb(newAmbiguities);
     }
 
-    private List<IParseNode> filterAmbiguityList(List<IParseNode> ambiguities, IParseNode t) {
+    private List<IParseNode> filterAmbiguityList(List<IParseNode> ambs, IParseNode t) {
         // SG_FilterAmbList
         
         boolean keepT = true;
         List<IParseNode> r = new ArrayList<IParseNode>();
 
-        if (ambiguities.isEmpty()) {
+        if (ambs.isEmpty()) {
             r.add(t);
             return r;
         }
 
-        for (IParseNode amb : ambiguities) {
-
+        for (int i = 0, max = ambs.size(); i < max; i++) {
+            IParseNode amb = ambs.get(i);
             switch (filter(t, amb)) {
             case FILTER_DRAW:
                 r.add(amb);
@@ -852,8 +864,10 @@
         // SG_CountAllInjectionsInTree
         // - ok
         int r = 0;
-        for (IParseNode n : ls)
+        for (int i = 0, max = ls.size(); i < max; i++) {
+            IParseNode n = ls.get(i);
             r += countAllInjections(n);
+        }
         return r;
     }
 
@@ -917,8 +931,10 @@
         // SG_CountPrefersInTree
         // - ok
         int r = 0;
-        for (IParseNode n : ls)
+        for (int i = 0, max = ls.size(); i < max; i++) {
+            IParseNode n = ls.get(i);
             r += countPrefers(n);
+        }
         return r;
     }
 
@@ -942,8 +958,10 @@
         // SG_CountAvoidsInTree
         // - ok
         int r = 0;
-        for (IParseNode n : ls)
+        for (int i = 0, max = ls.size(); i < max; i++) {
+            IParseNode n = ls.get(i);
             r += countAvoids(n);
+        }
         return r;
     }
 
@@ -1165,8 +1183,11 @@
     private List<IParseNode> computeCyclicTermInAmbiguityCluster(Amb ambiguities,
             PositionMap visited) {
 
-        for (IParseNode n : ambiguities.getAlternatives()) {
-            List<IParseNode> cycle = computeCyclicTerm(n, true, visited);
+
+        List<IParseNode> ambs = ambiguities.getAlternatives();
+        for (int i = 0, max = ambs.size(); i < max; i++) {
+            IParseNode amb = ambs.get(i);
+            List<IParseNode> cycle = computeCyclicTerm(amb, true, visited);
             if (cycle != null)
                 return cycle;
         }
@@ -1176,7 +1197,9 @@
     
     private List<IParseNode> computeCyclicTerm(List<IParseNode> kids, boolean b, PositionMap visited) {
 
-        for (IParseNode kid : kids) {
+
+        for (int i = 0, max = kids.size(); i < max; i++) {
+            IParseNode kid = kids.get(i);
             List<IParseNode> cycle = computeCyclicTerm(kid, false, visited);
             if (cycle != null)
                 return cycle;

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Main.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Main.java	Wed Aug 11 14:02:37 2010	(r21161)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Main.java	Thu Aug 12 09:00:21 2010	(r21162)
@@ -28,6 +28,7 @@
         String parseTable = null;
         String input = null;
         String output = null;
+        String startSymbol = null;
         boolean debugging = false;
         boolean logging = false;
         boolean detectCycles = true;
@@ -51,6 +52,8 @@
                 filter = false;
             } else if(args[i].equals("-c")) {
                 detectCycles = false;
+            } else if(args[i].equals("-s")) {
+                startSymbol = args[++i];
             } else if(args[i].equals("--heuristic-filters")) {
                 heuristicFilters = args[++i].equals("on");
             } else if(args[i].equals("--wait-for-profiler")) {
@@ -79,7 +82,7 @@
         sglr.getDisambiguator().setFilterAny(filter);
         sglr.getDisambiguator().setHeuristicFilters(heuristicFilters);
         
-        long parsingTime = parseFile(input, output, sglr, null);
+        long parsingTime = parseFile(input, output, sglr, startSymbol);
         
         if(waitForProfiler)
             System.in.read();

Modified: strc-java/trunk/java/spoofax-libs.jar
==============================================================================
Binary file (source and/or target). No diff available.

From L.C.L.Kats at tudelft.nl  Thu Aug 12 11:01:31 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 12 Aug 2010 09:01:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21163 - in
	strc-java/trunk: java/runtime/org/strategoxt
	java/runtime/org/strategoxt/lang/terms trans
Message-ID: <201008120901.o7C91V33029112@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Thu Aug 12 09:01:25 2010
New Revision: 21163
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21163&sc=1

Log:


Modified:
   strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoString.java
   strc-java/trunk/trans/s2j.str

Modified: strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
==============================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	Thu Aug 12 09:00:21 2010	(r21162)
+++ strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	Thu Aug 12 09:01:25 2010	(r21163)
@@ -238,7 +238,7 @@
 	}
 
 	private void registerJar(URLClassLoader classLoader, URL jar)
-			throws SecurityException, IncompatibleJarException, IOException {
+			throws SecurityException, IncompatibleJarException, IOException, RuntimeException {
 
 		URL protocolfulUrl = new URL("jar", "", jar + "!/");
 		JarURLConnection connection = (JarURLConnection) protocolfulUrl.openConnection();
@@ -269,7 +269,12 @@
 					} catch (IllegalAccessException e) {
 						throw new IncompatibleJarException(jar, e);
 					} catch (ClassNotFoundException e) {
-						throw new RuntimeException("Could not load listed class", e);
+						throw new IncompatibleJarException(jar, e);
+					} catch (RuntimeException e) {
+						throw new IncompatibleJarException(jar, e);
+					} catch (Error e) {
+						// e.g. thrown by Eclipse when sources could not be compiled
+						throw new IncompatibleJarException(jar, e);
 					}
 				}
 			}

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoString.java
==============================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoString.java	Thu Aug 12 09:00:21 2010	(r21162)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoString.java	Thu Aug 12 09:01:25 2010	(r21163)
@@ -69,7 +69,7 @@
         IStrategoList annotations = getAnnotations();
         IStrategoList secondAnnotations = second.getAnnotations();
         if (annotations == secondAnnotations) {
-            assert annotations.isEmpty() ? this == second : true : "Maximal sharing contract broken";
+            // assert annotations.isEmpty() ? this == second : true : "Maximal sharing contract broken";
         	return true;
         } else if (annotations.match(secondAnnotations)) {
         	if (commonStorageType == SHARABLE) internalSetAnnotations(secondAnnotations);

Modified: strc-java/trunk/trans/s2j.str
==============================================================================
--- strc-java/trunk/trans/s2j.str	Thu Aug 12 09:00:21 2010	(r21162)
+++ strc-java/trunk/trans/s2j.str	Thu Aug 12 09:01:25 2010	(r21163)
@@ -139,20 +139,23 @@
      public static Context init(Context context) {
        synchronized (x_name.class) {
          if (isIniting) return null;
-         isIniting = true;
-         ITermFactory termFactory = context.getFactory();
-         if (constantFactory == null) { // don't reinit constants by default
-           initConstructors(termFactory);
-           initConstants(termFactory);
-         }
-         if (initedContext == null || initedContext.get() != context) {
-           ~*import-inits
-           ~*def-inits
-           context.registerComponent("~x_name'");
+         try {
+           isIniting = true;
+           ITermFactory termFactory = context.getFactory();
+           if (constantFactory == null) { // don't reinit constants by default
+             initConstructors(termFactory);
+             initConstants(termFactory);
+           }
+           if (initedContext == null || initedContext.get() != context) {
+             ~*import-inits
+             ~*def-inits
+             context.registerComponent("~x_name'");
+           }
+           initedContext = new WeakReference<Context>(context);
+           constantFactory = termFactory;
+         } finally {
+           isIniting = false;
          }
-         initedContext = new WeakReference<Context>(context);
-         constantFactory = termFactory;
-         isIniting = false;
          return context;
        }
      }

From L.C.L.Kats at tudelft.nl  Thu Aug 12 13:49:42 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 12 Aug 2010 11:49:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21164 - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	. services
Message-ID: <201008121149.o7CBngBs031447@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Thu Aug 12 11:49:33 2010
New Revision: 21164
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21164&sc=1

Log:
Spoofax/227: Spoofax reports that an operation was canceled

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/MonitorStateWatchDog.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/MonitorStateWatchDog.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/MonitorStateWatchDog.java	Thu Aug 12 09:01:25 2010	(r21163)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/MonitorStateWatchDog.java	Thu Aug 12 11:49:33 2010	(r21164)
@@ -20,20 +20,39 @@
 	private final IProgressMonitor progressMonitor;
 
 	private final IAsyncCancellable canceller;
+	
+	private volatile boolean isProtecting;
 
-	private MonitorStateWatchDog(Job runningJob, IProgressMonitor progressMonitor, IAsyncCancellable canceller) {
+	public MonitorStateWatchDog(Job runningJob, IProgressMonitor progressMonitor, IAsyncCancellable canceller) {
 		this.runningJob = runningJob;
 		this.progressMonitor = progressMonitor;
 		this.canceller = canceller;
 	}
 	
-	public static void protect(Job runningJob, IProgressMonitor progressMonitor, IAsyncCancellable canceller) {
-		MonitorStateWatchDog watchDog = new MonitorStateWatchDog(runningJob, progressMonitor, canceller);
-		Job job = watchDog.new WatchDogJob();
+	/**
+	 * Begins protecting this job, cancelling it if the monitor is cancelled.
+	 * Must be balanced with a call to {@link #endProtect()}.
+	 */
+	public void beginProtect() {
+		if (isProtecting)
+			throw new IllegalStateException("Already protecting");
+		if (progressMonitor.isCanceled())
+			return; // already cancelled; no need to kill it
+		isProtecting = true;
+		Job job = new WatchDogJob();
 		job.setSystem(true);
 		job.schedule(RUNNING_CHECK_INTERVAL);
 	}
 	
+	/**
+	 * Ends the protection of a job. Does not throw any exception.
+	 */
+	public void endProtect() {
+		// Won't check this since we're likely being executed in a finally clause
+		// if (!isProtecting) throw new IllegalStateException("Not protecting");
+		isProtecting = false;
+	}
+	
 	private class WatchDogJob extends Job {
 		
 		public WatchDogJob() {
@@ -42,8 +61,8 @@
 
 		@Override
 		protected IStatus run(IProgressMonitor monitor) {
-			while (runningJob.getState() != Job.NONE) {
-				if (progressMonitor.isCanceled()) {
+			while (isProtecting && runningJob.getState() != Job.NONE) {
+				if (progressMonitor.isCanceled() && isProtecting) {
 					asyncCancel();
 					break;
 				}
@@ -59,7 +78,7 @@
 
 	private void asyncCancel() {
 		canceller.asyncCancel();
-		while (runningJob.getState() != Job.NONE) {
+		while (runningJob.getState() != Job.NONE && isProtecting) {
 			try {
 				Thread.sleep(CANCELLED_CHECK_INTERVAL);
 			} catch (InterruptedException e) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java	Thu Aug 12 09:01:25 2010	(r21163)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java	Thu Aug 12 11:49:33 2010	(r21164)
@@ -70,8 +70,9 @@
 		protected IStatus run(IProgressMonitor monitor) {
 
 			running = true;
+			MonitorStateWatchDog protector = new MonitorStateWatchDog(this, monitor, job.getObserver());
 			if (!isSystem())
-				MonitorStateWatchDog.protect(this, monitor, job.getObserver());
+				protector.beginProtect();
 
 			IStatus status;
 			try {
@@ -84,6 +85,9 @@
 			} catch (Error e) {
 				Environment.logException("Error running scheduled analysis", e);
 				status = Status.CANCEL_STATUS;
+			} finally {
+				if (!isSystem())
+					protector.endProtect();
 			}
 
 			// Run next task

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	Thu Aug 12 09:01:25 2010	(r21163)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	Thu Aug 12 11:49:33 2010	(r21164)
@@ -141,9 +141,13 @@
 		Job job = new Job("Executing " + displayCaption) {
 			@Override
 			protected IStatus run(IProgressMonitor monitor) {
-				MonitorStateWatchDog.protect(this, monitor, observer);
-				execute(editor, node2, errorReportFile, isRebuild);
-				return monitor.isCanceled() ? Status.CANCEL_STATUS : Status.OK_STATUS;
+				MonitorStateWatchDog protector = new MonitorStateWatchDog(this, monitor, observer);
+				try {
+					execute(editor, node2, errorReportFile, isRebuild);
+					return monitor.isCanceled() ? Status.CANCEL_STATUS : Status.OK_STATUS;
+				} finally {
+					protector.endProtect();
+				}
 			}
 		};
 		job.setUser(true);

From L.C.L.Kats at tudelft.nl  Thu Aug 12 13:51:39 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 12 Aug 2010 11:51:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21165 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.pp: .
	editor/java/org editor/java/org/strategoxt
	editor/java/org/strategoxt/imp
	editor/java/org/strategoxt/imp/edit...
Message-ID: <201008121151.o7CBpdOM031476@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Thu Aug 12 11:51:30 2010
New Revision: 21165
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21165&sc=1

Log:


Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/java/org/
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/java/org/strategoxt/
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/java/org/strategoxt/imp/
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/java/org/strategoxt/imp/editors/
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/java/org/strategoxt/imp/editors/pp/
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/java/org/strategoxt/imp/editors/pp/Activator.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/java/org/strategoxt/imp/editors/pp/BoxPPParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/java/org/strategoxt/imp/editors/pp/BoxPPValidator.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	Thu Aug 12 11:49:33 2010	(r21164)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	Thu Aug 12 11:51:30 2010	(r21165)
@@ -70,7 +70,7 @@
         </target>
         
         <target name="check-classpath">
-            <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
+            <available classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" property="check-classpath.available"/>
             <antcall target="check-classpath.helper"/>  
         </target>
   

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/java/org/strategoxt/imp/editors/pp/Activator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/java/org/strategoxt/imp/editors/pp/Activator.java	Thu Aug 12 11:51:30 2010	(r21165)
@@ -0,0 +1,44 @@
+package org.strategoxt.imp.editors.pp;
+
+import org.eclipse.imp.preferences.PreferencesService;
+import org.eclipse.imp.runtime.PluginBase;
+import org.osgi.framework.BundleContext;
+
+public class Activator extends PluginBase 
+{ 
+  public static final String kPluginID = "BoxPP";
+
+  public static final String kLanguageName = "BoxPP";
+
+  protected static Activator sPlugin;
+
+  public static Activator getInstance()
+  { 
+    if(sPlugin == null)
+      return new Activator();
+    return sPlugin;
+  }
+
+  public Activator () 
+  { 
+    super();
+    sPlugin = this;
+  }
+
+  @Override public void start(BundleContext context) throws Exception
+  { 
+    super.start(context);
+  }
+
+  @Override public String getID()
+  { 
+    return kPluginID;
+  }
+
+  @Override public String getLanguageID()
+  { 
+    return kLanguageName;
+  }
+
+  protected static PreferencesService preferencesService = null;
+}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/java/org/strategoxt/imp/editors/pp/BoxPPParseController.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/java/org/strategoxt/imp/editors/pp/BoxPPParseController.java	Thu Aug 12 11:51:30 2010	(r21165)
@@ -0,0 +1,89 @@
+package org.strategoxt.imp.editors.pp;
+
+import java.io.InputStream;
+import java.io.IOException;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class BoxPPParseController extends DynamicParseController 
+{ 
+  public static final String LANGUAGE = new String("BoxPP");
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static volatile Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static synchronized Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  private static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = BoxPPParseController.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = BoxPPParseController.class.getResourceAsStream(TABLE);
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
+      descriptor = DescriptorFactory.load(descriptorStream, table, null);
+      descriptor.setAttachmentProvider(BoxPPParseController.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  private static String getPluginLocation()
+  { 
+    return BoxPPParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(this, getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/java/org/strategoxt/imp/editors/pp/BoxPPValidator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/java/org/strategoxt/imp/editors/pp/BoxPPValidator.java	Thu Aug 12 11:51:30 2010	(r21165)
@@ -0,0 +1,12 @@
+package org.strategoxt.imp.editors.pp;
+
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
+
+public class BoxPPValidator extends MetaFileLanguageValidator 
+{ 
+  @Override public Descriptor getDescriptor()
+  { 
+    return BoxPPParseController.getDescriptor();
+  }
+}
\ No newline at end of file

From L.C.L.Kats at tudelft.nl  Thu Aug 12 17:31:15 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 12 Aug 2010 15:31:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21166 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
	strc-java/trunk/java/runtime/org/strategoxt
Message-ID: <201008121531.o7CFVGMl001850@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Thu Aug 12 15:30:59 2010
New Revision: 21166
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21166&sc=1

Log:
Spoofax/226: Support including JAR files in editors that are not Stratego JARs

Added:
   strc-java/trunk/java/runtime/org/strategoxt/NoInteropRegistererJarException.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	Thu Aug 12 11:51:30 2010	(r21165)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	Thu Aug 12 15:30:59 2010	(r21166)
@@ -205,13 +205,11 @@
 			}
 			Debug.stopTimer("Successfully loaded " +  filename);
 		} catch (InterpreterException e) {
-			Environment.logException(new BadDescriptorException("Error loading compiler service provider " + filename, e));
-			if (descriptor.isDynamicallyLoaded())
-				Environment.asynOpenErrorDialog("Dynamic descriptor loading", "Error loading compiler service provider " + filename, e);
+			reportLoadException(e, filename);
 		} catch (IOException e) {
-			Environment.logException(new BadDescriptorException("Could not load compiler service provider " + filename, e));
-			if (descriptor.isDynamicallyLoaded())
-				Environment.asynOpenErrorDialog("Dynamic descriptor loading", "Error loading compiler service provider " + filename, e);
+			reportLoadException(e, filename);
+		} catch (RuntimeException e) {
+			reportLoadException(e, filename);
 		}
 	}
 	
@@ -228,20 +226,24 @@
 			runtime.loadJars(classpath);
 			Debug.stopTimer("Successfully loaded " + jars);
 		} catch (SecurityException e) {
-			Environment.logException("Error loading compiler service providers " + jars, e);
-			if (descriptor.isDynamicallyLoaded())
-				Environment.asynOpenErrorDialog("Dynamic descriptor loading", "Error loading compiler service providers " + jars, e);
+			reportLoadException(e, jars);
 		} catch (IncompatibleJarException e) {
-			Environment.logException("Error loading compiler service providers " + jars, e);
-			if (descriptor.isDynamicallyLoaded())
-				Environment.asynOpenErrorDialog("Dynamic descriptor loading", "Error loading compiler service providers " + jars, e);
+			reportLoadException(e, jars);
 		} catch (IOException e) {
-			Environment.logException("Error loading compiler service providers " + jars, e);
-			if (descriptor.isDynamicallyLoaded())
-				Environment.asynOpenErrorDialog("Dynamic descriptor loading", "Error loading compiler service providers " + jars, e);
+			reportLoadException(e, jars);
+		} catch (Error e) {
+			reportLoadException(e, jars);
+		} catch (RuntimeException e) {
+			reportLoadException(e, jars);
 		}
 	}
 
+	private void reportLoadException(Throwable e, Object source) {
+		Environment.logException(new BadDescriptorException("Could not load compiler service provider(s): " + source, e));
+		if (descriptor.isDynamicallyLoaded())
+			Environment.asynOpenErrorDialog("Dynamic descriptor loading", "Error loading compiler service provider(s): " + source, e);
+	}
+
 	/**
 	 * Starts a new update() operation, asynchronously.
 	 * Can be called from multiple threads.

Modified: strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
==============================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	Thu Aug 12 11:51:30 2010	(r21165)
+++ strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	Thu Aug 12 15:30:59 2010	(r21166)
@@ -221,24 +221,29 @@
 	}
 
 	public void loadJars(URL... jars)
-			throws SecurityException, IncompatibleJarException, IOException {
+			throws SecurityException, NoInteropRegistererJarException, IncompatibleJarException, IOException {
 		
 		loadJars(HybridInterpreter.class.getClassLoader(), jars);
 	}
 	
 	public void loadJars(ClassLoader parentClassLoader, URL... jars)
-			throws SecurityException, IncompatibleJarException, IOException {
+			throws SecurityException, NoInteropRegistererJarException, IncompatibleJarException, IOException {
 
 		URLClassLoader classLoader = new URLClassLoader(jars, parentClassLoader);
+		boolean foundRegisterer = false;
 		loadedJars = true;
 		
 		for (URL jar : jars) {
-		    registerJar(classLoader, jar);
+			foundRegisterer |=
+				registerJar(classLoader, jar);
 		}
+		
+		if (!foundRegisterer)
+			throw new NoInteropRegistererJarException(jars);
 	}
 
-	private void registerJar(URLClassLoader classLoader, URL jar)
-			throws SecurityException, IncompatibleJarException, IOException, RuntimeException {
+	private boolean registerJar(URLClassLoader classLoader, URL jar)
+			throws SecurityException, IncompatibleJarException, IOException {
 
 		URL protocolfulUrl = new URL("jar", "", jar + "!/");
 		JarURLConnection connection = (JarURLConnection) protocolfulUrl.openConnection();
@@ -254,9 +259,8 @@
 					final int POSTFIX = ".class".length();
 					String className = entry.substring(0, entry.length() - POSTFIX);
 					className = className.replace('/', '.');
-					Class<?> registerClass;
 					try {
-						registerClass = classLoader.loadClass(className);
+						Class<?> registerClass = classLoader.loadClass(className);
 						Object registerObject = registerClass.newInstance();
 						if (registerObject instanceof InteropRegisterer) {
 							((InteropRegisterer) registerObject).registerLazy(getContext(), getCompiledContext(), classLoader);
@@ -281,8 +285,7 @@
 		} finally {
 			jarFile.close();
 		}
-		if (!foundRegisterer)
-			throw new IncompatibleJarException(jar, "No STRJ InteropRegisterer classes found");
+		return foundRegisterer;
 	}
 
 	/**

Added: strc-java/trunk/java/runtime/org/strategoxt/NoInteropRegistererJarException.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ strc-java/trunk/java/runtime/org/strategoxt/NoInteropRegistererJarException.java	Thu Aug 12 15:30:59 2010	(r21166)
@@ -0,0 +1,32 @@
+package org.strategoxt;
+
+import java.net.URL;
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class NoInteropRegistererJarException extends IncompatibleJarException {
+
+	private static final long serialVersionUID = 6326660901768281135L;
+
+	private final URL[] jars;
+
+	public NoInteropRegistererJarException(URL[] jars) {
+		super(jars.length == 0 ? null : jars[0],
+				"No STRJ InteropRegisterer classes found in JAR files: " + jars);
+		this.jars = jars;
+	}
+
+	public URL[] getJars() {
+		return jars;
+	}
+	
+	@Override @Deprecated
+	/**
+	 * @deprecated Use getJars() instead to get all jar files
+	 *             this exception applies to.
+	 */
+	public URL getJar() {
+		return super.getJar();
+	}
+}

From L.C.L.Kats at tudelft.nl  Fri Aug 13 10:14:04 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 13 Aug 2010 08:14:04 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21167 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.sdf/editor
	org.strategoxt.imp.editors.sdf/trans
	org.strategoxt.imp.editors.stratego/editor
	org.strategoxt.imp.gene...
Message-ID: <201008130814.o7D8E4mw015844@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Fri Aug 13 08:13:54 2010
New Revision: 21167
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21167&sc=1

Log:
- Added warning for character class iteration in SDF concrete syntax (Spoofax/225)
- Spoofax/161: content-completion error on blank example file

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-completions-descriptor.str
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ParseControllerFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstSortInspector.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv	Thu Aug 12 15:30:59 2010	(r21166)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv	Fri Aug 13 08:13:54 2010	(r21167)
@@ -62,14 +62,14 @@
   completion template:
   	"priorities" "\n\t" (blank)
 
-  completion template:
+  completion template : Module =
   	"module" " " <x> "\n\t\nexports\n\t" (blank)
 
-  completion template:
+  completion template: 
   	"lexical variables" "\n\t" (blank)
 
   completion template:
-    "{cons" "(\"" <x> "\")"
+    "{cons" "(\"" <Name> "\")"
 
   completion template:
     "{deprecated" "(\"" <explanation> "\")"
@@ -99,7 +99,7 @@
     "{recover"
 
   completion template:
-    ", cons" "(\"" <x> "\")"
+    ", cons" "(\"" <Name> "\")"
 
   completion template:
     ", deprecated" "(\"" <explanation> "\")"

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	Thu Aug 12 15:30:59 2010	(r21166)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	Fri Aug 13 08:13:54 2010	(r21167)
@@ -27,8 +27,8 @@
         error'*   := error*;
         warning'* := <conc> (serror*, warning*)
       else
-        error'*   := <conc> (serror*, warning*);
-        warning'* := error*
+        error'*   := <conc> (serror*, error*);
+        warning'* := warning*
       end 
 
   editor-complete:
@@ -149,7 +149,17 @@
 
   context-free-syntax-warning:
     [_ | t*] -> <context-free-syntax-warning> t*
-  
+
+  context-free-syntax-warning:
+    iter-star(cs) -> (<id>, $[Character class iteration should be in lexical syntax section])
+    where
+      <oncetd(?range(_, _))> cs
+
+  context-free-syntax-warning:
+    iter(cs) -> (<id>, $[Character class iteration should be in lexical syntax section])
+    where
+      <oncetd(?range(_, _))> cs
+    
   context-free-syntax-warning:
     iter-sep(_, bad @ sort(_)) -> (bad, "Non-terminal used as a list separator (use round braces for grouping non-terminals)") 
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv	Thu Aug 12 15:30:59 2010	(r21166)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv	Fri Aug 13 08:13:54 2010	(r21167)
@@ -58,3 +58,5 @@
   completion template:
     "signature sorts" "\n\t" (blank)
 
+  completion template : Module = 
+    "module " <name> "\n\nstrategies\n\n\t" 

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-completions-descriptor.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-completions-descriptor.str	Thu Aug 12 15:30:59 2010	(r21166)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-completions-descriptor.str	Fri Aug 13 08:13:54 2010	(r21167)
@@ -33,11 +33,17 @@
         completions
           ~~
           ~~// Syntax completion:
-          completion template: "module " <m>        (blank)
-          completion template: "entity " <e> " {}"  (blank)
+          ~~
+          completion template : Module =
+            "module " <m> (blank)
+          ~~
+          completion template : Definition =
+            "entity " <e> " {}"  (blank)
           ~~
           ~~// Semantic (identifier) completion:
+          ~~
           completion proposer: editor-complete
+          ~~
           completion trigger: ":"
       ]|
     );
@@ -69,7 +75,13 @@
           ~// Use the (blank) annotation if you want a template completion only to
           ~// appear on blank lines:
           ~//
-          ~//   completion template: "section" <title> "\n\t" (blank)
+          ~//   completion template: "section " <title> "\n\t" (blank)
+          ~//
+          ~// Finally, you can specify a specific SDF sort for which a completion
+          ~// rule should trigger as follows:
+          ~//
+          ~//   completion template : Section =
+          ~//     "section " <title> "\n\t" (blank)
           ~//
           ~// Semantic content completion can be defined as follows:
           ~//

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	Thu Aug 12 15:30:59 2010	(r21166)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	Fri Aug 13 08:13:54 2010	(r21167)
@@ -230,7 +230,7 @@
 		return basePath;
 	}
 	
-	public String getStartSymbols() {
+	public String getStartSymbol() {
 		return getProperty("StartSymbols", null);
 	}
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ParseControllerFactory.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ParseControllerFactory.java	Thu Aug 12 15:30:59 2010	(r21166)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ParseControllerFactory.java	Fri Aug 13 08:13:54 2010	(r21167)
@@ -35,7 +35,7 @@
 		} catch (RuntimeException e) {
 			throw new BadDescriptorException("Could not load parse table for " + language.getName(), e);
 		}
-		return new SGLRParseController(language, table, syntaxProperties, descriptor.getStartSymbols());
+		return new SGLRParseController(language, table, syntaxProperties, descriptor.getStartSymbol());
 	}
 
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstSortInspector.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstSortInspector.java	Thu Aug 12 15:30:59 2010	(r21166)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstSortInspector.java	Fri Aug 13 08:13:54 2010	(r21167)
@@ -1,7 +1,7 @@
 package org.strategoxt.imp.runtime.parser.ast;
 
 import java.util.ArrayList;
-import java.util.Collections;
+import java.util.HashSet;
 import java.util.LinkedHashSet;
 import java.util.Set;
 
@@ -28,7 +28,7 @@
 		//if (node.getConstructor().equals(COMPLETION_UNKNOWN))
 		//	return Collections.emptySet();
 		
-		if (ast == null) return Collections.emptySet();
+		if (ast == null) return new HashSet<String>();
 		ISourcePositionLocator locator = ast.getParseController().getSourcePositionLocator();
 		AstNode node = (AstNode) locator.findNode(ast, offset);
 		if (node == null) node = ast;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Thu Aug 12 15:30:59 2010	(r21166)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Fri Aug 13 08:13:54 2010	(r21167)
@@ -122,25 +122,10 @@
 		
 		RootAstNode ast = constructAst(getParser(controller), offset, document);
 		Set<String> sorts = new AstSortInspector(ast).getSortsAtOffset(offset);
-		if (currentCompletionNode == null) {
-			// TODO: allow syntactic completions for start symbol
-			if (lastCompletionAst == null && lastParserAst == null)
-				return createErrorProposal("No proposals available - syntax errors", offset);
-			else
-				return createErrorProposal("No proposals available - could not identify proposal context", offset);
-		}
-
-		if (Environment.getDescriptor(controller.getLanguage()).isDynamicallyLoaded()) {
-			try {
-				StrategoConsole.getOutputWriter().write(
-					":: Completion triggered for: " + currentCompletionNode
-					+ " (candidate sorts: " + sorts + ")\n");
-				StrategoConsole.activateConsole(true);
-			} catch (IOException e) {
-				Environment.logWarning("Could not write to console", e);
-			}
-		}
+		if (currentCompletionNode == null)
+			return getParseFailureProposals(controller, document, offset, sorts);
 
+		printCompletionTip(controller, sorts);
 
 		ICompletionProposal[] results = toProposals(invokeCompletionFunction(controller), document, offset, sorts);
 		
@@ -156,6 +141,38 @@
 		
 		return results;
     }
+
+	private ICompletionProposal[] getParseFailureProposals(IParseController controller,
+			String document, int offset, Set<String> sorts) {
+		
+		String startSymbol = Environment.getDescriptor(controller.getLanguage()).getStartSymbol();
+		
+		if (startSymbol != null && document.trim().indexOf('\n') == -1) {
+			currentCompletionPrefix = getPrefix(offset, document);
+			sorts.add(startSymbol);
+			printCompletionTip(controller, sorts);
+			ICompletionProposal[] proposals = toProposals(TermFactory.EMPTY_LIST, document, offset, sorts);
+			if (proposals.length != 0) return proposals;
+		}
+		if (lastCompletionAst == null && lastParserAst == null) {
+			return createErrorProposal("No proposals available - syntax errors", offset);
+		} else {
+			return createErrorProposal("No proposals available - could not identify proposal context", offset);
+		}
+	}
+
+	private void printCompletionTip(IParseController controller, Set<String> sorts) {
+		if (Environment.getDescriptor(controller.getLanguage()).isDynamicallyLoaded()) {
+			try {
+				StrategoConsole.getOutputWriter().write(
+					":: Completion triggered for: " + currentCompletionNode
+					+ " (candidate sorts: " + sorts + ")\n");
+				StrategoConsole.activateConsole(true);
+			} catch (IOException e) {
+				Environment.logWarning("Could not write to console", e);
+			}
+		}
+	}
 	
 	protected Pattern getCompletionLexical() {
 		return identifierLexical;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java	Thu Aug 12 15:30:59 2010	(r21166)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java	Fri Aug 13 08:13:54 2010	(r21167)
@@ -51,13 +51,15 @@
 
 	public void textChanged(TextEvent event) {
 		try {
+			boolean keyPressEvent = AutoEditStrategy.pollJustProcessedKeyEvent();
+			boolean insertionEvent = ContentProposal.pollJustApplied();
+			int eventLength = event.getText() == null || !insertionEvent ? 1 : event.getText().length();
 			if (event.getDocumentEvent() != null // not just a visual change
 					&& event.getText() != null
 					&& (event.getText().length() == 1 // single keypress
-							|| AutoEditStrategy.pollJustProcessedKeyEvent()
-							|| ContentProposal.pollJustApplied())
-					&& matchesPatterns(event.getDocumentEvent().getDocument(), event.getOffset() + event.getText().length())) {
-				viewer.setSelectedRange(event.getOffset() + event.getText().length(), 0);
+							|| keyPressEvent || insertionEvent)
+					&& matchesPatterns(event.getDocumentEvent().getDocument(), event.getOffset() + eventLength)) {
+				viewer.setSelectedRange(event.getOffset() + eventLength, 0);
 				((ITextOperationTarget) viewer).doOperation(ISourceViewer.CONTENTASSIST_PROPOSALS);
 			}
 		} catch (BadLocationException e) {

From L.C.L.Kats at tudelft.nl  Fri Aug 13 15:48:28 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 13 Aug 2010 13:48:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21168 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.editorservice/editor
	org.strategoxt.imp.editors.pp org.strategoxt.imp.editors.pp/editor
	org.strategoxt.imp.editors...
Message-ID: <201008131348.o7DDmSOq020951@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Fri Aug 13 13:48:25 2010
New Revision: 21168
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21168&sc=1

Log:
- Content completion tweaking
- Spoofax/218: updates to Stratego-X.sdf only become visible after Eclipse restart

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ContentProposerFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstSortInspector.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposalTemplate.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv	Fri Aug 13 08:13:54 2010	(r21167)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv	Fri Aug 13 13:48:25 2010	(r21168)
@@ -13,6 +13,12 @@
   completion trigger:
     "(completion\s*template|start\s*symbols)\s*:\s*[^\s]+\s*=\s+"
   
+  completion template : Module =
+    "module " <Module> 
+  
+  completion template : Section =
+    "imports" "\n\t" (blank)
+  
   completion template : Section =
     "builders" "\n\t" (blank)
   
@@ -35,7 +41,7 @@
     "references" "\n\t" (blank)
   
   completion template : SemanticRule =
-    "completion template" ":\n\t" <prefix> " \"c\"" (blank)
+    "completion template" " : " <Sort> " =\n\t" <"prefix"> " " <"completion"> (blank)
   
   completion template : SemanticRule =
     "completion lexical" ":\n\t" <regex> (blank)
@@ -75,6 +81,27 @@
  
   completion template : LanguageProperty = 
   	"indent after" ":\n\t" <keyword> (blank)
+ 
+  completion template : LanguageProperty = 
+    "name" ":\n\t" <Name> (blank)
+ 
+  completion template : LanguageProperty = 
+    "url" ":\n\thttp://" <url> (blank)
+ 
+  completion template : LanguageProperty = 
+    "id" ":\n\t" <id> (blank)
+ 
+  completion template : LanguageProperty = 
+    "extends" ":\n\t" <Language> (blank)
+ 
+  completion template : LanguageProperty = 
+    "extensions" ":\n\t" <ext> (blank)
+ 
+  completion template : LanguageProperty = 
+    "start symbols" ":\n\t" <Start> (blank)
+ 
+  completion template : LanguageProperty = 
+    "description" ":\n\t" <description> (blank)
   
   completion template : SemanticRule = 
   	"reference" " _ : " <s> (blank)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	Fri Aug 13 08:13:54 2010	(r21167)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	Fri Aug 13 13:48:25 2010	(r21168)
@@ -70,7 +70,7 @@
         </target>
         
         <target name="check-classpath">
-            <available classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" property="check-classpath.available"/>
+            <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
             <antcall target="check-classpath.helper"/>  
         </target>
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Builders.esv	Fri Aug 13 08:13:54 2010	(r21167)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Builders.esv	Fri Aug 13 13:48:25 2010	(r21168)
@@ -12,10 +12,7 @@
 builders
                                                                                                                
   provider                  : include/boxpp.ctree                                                              
-                                                                                                               
-  observer                  : editor-analyze                                                                   
-                                                                                                               
-  builder                   : "Generate Java code"   = generate-java (openeditor) (realtime)                   
+              
   builder                   : "Show abstract syntax" = generate-aterm (openeditor) (realtime) (meta) (source)  
                                                                                                                
   // on save: generate-java                                                                                    
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Completions.esv	Fri Aug 13 08:13:54 2010	(r21167)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Completions.esv	Fri Aug 13 13:48:25 2010	(r21168)
@@ -10,11 +10,29 @@
                                                                    
 
 completions
-                                         
-  // Syntax completion:                  
-  completion template                  : "module " <m> (blank)
-  completion template                  : "entity " <e> " {}" (blank)
-                                         
-  // Semantic (identifier) completion:   
-  completion proposer                  : editor-complete
-  completion trigger                   : ": "
\ No newline at end of file
+
+  completion trigger : "--\s+"
+
+  completion template : BOX = "H " "[" <> "]"
+
+  completion template : BOX = "V " "[" <> "]"
+
+  completion template : BOX = "HV " "[" <> "]"
+
+  completion template  : BOX = "A " "[" <> "]"
+
+  completion template  : BOX = "KW" "[\"" <keyword> "\"]"
+
+  completion template  : BOX = "_" <1>
+  
+  completion template : S-OPTION =
+		"hs=" <0>
+  
+  completion template : S-OPTION =
+    "vs=" <0>
+  
+  completion template : S-OPTION =
+    "is=" <0>
+  
+  completion template : PP-Entry = 
+    "," "\n\t" <Constructor> "--," 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv	Fri Aug 13 08:13:54 2010	(r21167)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv	Fri Aug 13 13:48:25 2010	(r21168)
@@ -6,7 +6,7 @@
     "->\s*[A-Za-z0-9]+\s*\{"
 
   completion trigger:
-    "->\s*[A-Za-z0-9]+\s*\{[^}]+, "
+    "->\s*[A-Za-z0-9]+\s*\{[^}]+,[\ \t]*"
 
   completion trigger:
     "->[\ \t]+"
@@ -127,3 +127,33 @@
 
   completion keyword:
     ", recover"
+
+  completion template:
+    ",cons" "(\"" <Name> "\")"
+
+  completion template:
+    ",deprecated" "(\"" <explanation> "\")"
+
+  completion keyword:
+    ",reject"
+
+  completion keyword:
+    ",left"
+
+  completion keyword:
+    ",right"
+
+  completion keyword:
+    ",non-assoc"
+
+  completion keyword:
+    ",avoid"
+
+  completion keyword:
+    ",prefer"
+
+  completion keyword:
+    ",bracket"
+
+  completion keyword:
+    ",recover"

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java	Fri Aug 13 08:13:54 2010	(r21167)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java	Fri Aug 13 13:48:25 2010	(r21168)
@@ -1,10 +1,7 @@
 package org.strategoxt.imp.metatooling.loading;
 
 import static org.eclipse.core.resources.IMarker.SEVERITY_ERROR;
-import static org.eclipse.core.resources.IResourceDelta.CONTENT;
-import static org.eclipse.core.resources.IResourceDelta.MOVED_FROM;
-import static org.eclipse.core.resources.IResourceDelta.MOVED_TO;
-import static org.eclipse.core.resources.IResourceDelta.REPLACED;
+import static org.eclipse.core.resources.IResourceDelta.*;
 
 import java.io.File;
 import java.io.FileNotFoundException;
@@ -103,8 +100,8 @@
 	}
 
 	public void resourceChanged(final IResourceChangeEvent event) {
-		if (event.getType() == IResourceChangeEvent.POST_CHANGE && isSignificantChange(event.getDelta())) {
-			// TODO: aggregate multiple events into a single job?
+		if (event.getType() == IResourceChangeEvent.POST_CHANGE  && isSignificantChangeDeep(event.getDelta())) {
+			// TODO: Optimize - aggregate multiple events into a single job?
 			//       this seems to spawn way to many threads
 			synchronized (asyncEventQueue) {
 				asyncEventQueue.add(event);
@@ -165,9 +162,20 @@
 		return (flags & CONTENT) == CONTENT
 			|| (flags & MOVED_TO) == MOVED_TO
 			|| (flags & MOVED_FROM) == MOVED_FROM
-			|| (flags & REPLACED) == REPLACED;
+			|| (flags & REPLACED) == REPLACED
+			|| (flags & ADDED) == ADDED;
 			// UNDONE: || (flags == 0) (one known instance: when markers were added/removed)
 	}
+
+	private static boolean isSignificantChangeDeep(IResourceDelta delta) {
+		if (isSignificantChange(delta)) {
+			return true;
+		} else {
+			for (IResourceDelta child : delta.getAffectedChildren())
+				if (isSignificantChangeDeep(child)) return true;
+		}
+		return false;
+	}
 	
 	public void updateResource(IResource resource, IProgressMonitor monitor, boolean startup) {
 		Environment.assertLock();

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	Fri Aug 13 08:13:54 2010	(r21167)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	Fri Aug 13 13:48:25 2010	(r21168)
@@ -281,6 +281,7 @@
 		for (Descriptor descriptor : currentDescriptors) {
 			if (descriptor.isUsedForUnmanagedParseTable(name)) {
 				try {
+					descriptor.prepareForReinitialize();
 					descriptor.reinitialize(descriptor);
 				} catch (BadDescriptorException e) {
 					Environment.logException("Could not reinitialize descriptor", e);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ContentProposerFactory.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ContentProposerFactory.java	Fri Aug 13 08:13:54 2010	(r21167)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ContentProposerFactory.java	Fri Aug 13 13:48:25 2010	(r21168)
@@ -24,6 +24,7 @@
 import org.strategoxt.imp.runtime.services.ContentProposer;
 import org.strategoxt.imp.runtime.services.ContentProposerListener;
 import org.strategoxt.imp.runtime.services.StrategoObserver;
+import org.strategoxt.imp.runtime.stratego.adapter.WrappedAstNodeFactory;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>
@@ -99,23 +100,30 @@
 
 	private static ContentProposalTemplate[] readCompletionTemplates(Descriptor descriptor) {
 		Set<ContentProposalTemplate> results = new HashSet<ContentProposalTemplate>();
-
+		WrappedAstNodeFactory factory = Environment.getTermFactory();
+		
 		for (IStrategoAppl template : collectTerms(descriptor.getDocument(), "CompletionTemplate")) {
 			IStrategoTerm prefixTerm = termAt(template, 0);
-			String prefix = termContents(prefixTerm);
+			boolean noPrefix = "Placeholder".equals(cons(prefixTerm));
+			String prefix = noPrefix ? "" : termContents(prefixTerm);
 			IStrategoList completionParts = termAt(template, 1);
 			IStrategoTerm anno = termAt(template, 2);
-			completionParts = Environment.getTermFactory().makeListCons(prefixTerm, completionParts);
+			completionParts = factory.makeListCons(prefixTerm, completionParts);
+			if (noPrefix)
+				completionParts = factory.makeListCons(factory.makeString(""), completionParts);
 			results.add(new ContentProposalTemplate(prefix, null, completionParts, "Blank".equals(cons(anno))));
 		}
 
 		for (IStrategoAppl template : collectTerms(descriptor.getDocument(), "CompletionTemplateWithSort")) {
 			String sort = termContents(termAt(template, 0));
 			IStrategoTerm prefixTerm = termAt(template, 1);
-			String prefix = termContents(prefixTerm);
+			boolean noPrefix = "Placeholder".equals(cons(prefixTerm));
+			String prefix = noPrefix ? "" : termContents(prefixTerm);
 			IStrategoList completionParts = termAt(template, 2);
 			IStrategoTerm anno = termAt(template, 3);
-			completionParts = Environment.getTermFactory().makeListCons(prefixTerm, completionParts);
+			completionParts = factory.makeListCons(prefixTerm, completionParts);
+			if (noPrefix)
+				completionParts = factory.makeListCons(factory.makeString(""), completionParts);
 			results.add(new ContentProposalTemplate(prefix, sort, completionParts, "Blank".equals(cons(anno))));
 		}
 		

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	Fri Aug 13 08:13:54 2010	(r21167)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	Fri Aug 13 13:48:25 2010	(r21168)
@@ -112,6 +112,8 @@
 	 * Uninitialize all dynamic activeServices associated with this Descriptor,
 	 * and lazily initializes them to use the given new Descriptor.
 	 * 
+	 * Must be preceded by a call to {@link #prepareForReinitialize()}. 
+	 * 
 	 * @see AbstractService#reinitialize(Descriptor)
 	 */
 	public void reinitialize(Descriptor newDescriptor) throws BadDescriptorException {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstSortInspector.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstSortInspector.java	Fri Aug 13 08:13:54 2010	(r21167)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstSortInspector.java	Fri Aug 13 13:48:25 2010	(r21168)
@@ -11,6 +11,9 @@
 import org.strategoxt.imp.runtime.parser.tokens.TokenKind;
 
 /**
+ * Identifies the possible sorts of a symbol inserted at
+ * a particular offset in an abstract syntax tree.
+ * 
  * @author Lennart Kats <lennart add lclnet.nl>
  */
 public class AstSortInspector {
@@ -20,28 +23,26 @@
 	public AstSortInspector(RootAstNode ast) {
 		this.ast = ast;
 	}
-
 	
 	// TODO: get *all* sorts at cursor by looking at the parse tree? or by storing injections in the AST?
 	//       (see AsfixImploder)
-	public Set<String> getSortsAtOffset(int offset) {
-		//if (node.getConstructor().equals(COMPLETION_UNKNOWN))
-		//	return Collections.emptySet();
-		
+	public Set<String> getSortsAtOffset(int startOffset, int endOffset) {
 		if (ast == null) return new HashSet<String>();
 		ISourcePositionLocator locator = ast.getParseController().getSourcePositionLocator();
-		AstNode node = (AstNode) locator.findNode(ast, offset);
+		AstNode node = (AstNode) locator.findNode(ast, endOffset);
 		if (node == null) node = ast;
 
-		int startToken = getLayoutStartTokenOffset(node);
-		int endToken = getLayoutEndTokenOffset(node);
-		Set<String> results = getSortsOfOptionalChildren(node, offset);
+		int startToken = getNonLayoutTokenLeftOf(node);
+		int endToken = getNonLayoutTokenRightOf(node);
+		Set<String> results = getSortsOfOptionalChildren(node, startOffset, endOffset);
+		
 		boolean isOptNode = false;
+		boolean skipNonOptNodes = node.getRightIToken().getEndOffset() > endOffset && !results.isEmpty();
 
 		// Follow the (labeled) injection chain upwards
 		do {
 			AstNode parent = node.getParent();
-			if (node.getLeftIToken().getTokenIndex() > startToken) {
+			if (!skipNonOptNodes && node.getLeftIToken().getTokenIndex() > startToken) {
 				if (node.isList()) {
 					isOptNode = true;
 					results.add(((ListAstNode) node).getElementSort());
@@ -50,7 +51,8 @@
 					results.add(node.getSort());
 				}
 			} else if (parent != null && parent.isList()) {
-				results.add(((ListAstNode) parent).getElementSort());
+				if (!skipNonOptNodes)
+					results.add(((ListAstNode) parent).getElementSort());
 			}
 			// HACK: include element sort of sibling list
 			if (isOptNode && (node = getNextSibling(node)) != null) {
@@ -59,7 +61,7 @@
 			node = parent;
 		} while (node != null && node.getRightIToken().getTokenIndex() < endToken);
 		
-		if (node != null && node.isList()) {
+		if (node != null && node.isList() && !skipNonOptNodes) {
 			// Add sort of container list with elements after current node
 			results.add(((ListAstNode) node).getElementSort());
 		}
@@ -68,18 +70,19 @@
 		return results;
 	}
 
-	private Set<String> getSortsOfOptionalChildren(AstNode node, int offset) {
+	private Set<String> getSortsOfOptionalChildren(AstNode node, int startOffset, int endOffset) {
 		// TODO: detect 'opt' optionals in addition to list children?
 		// TODO: somehow behave differently in case the completion resulted in a syntax error?
+		//       the skipNonOptNodes thing which mosly addresses this
 		IPrsStream tokens = ast.getRightIToken().getIPrsStream();
 		Set<String> results = new LinkedHashSet<String>();
 		for (AstNode child : node.getChildren()) {
 			if (child.isList()) {
-				int startToken = getLayoutStartTokenOffset(child);
-				int endToken = getLayoutEndTokenOffset(child);
+				int startToken = getNonLayoutTokenLeftOf(child);
+				int endToken = getNonLayoutTokenRightOf(child);
 				
-				if ((startToken < 0 || tokens.getTokenAt(startToken).getEndOffset() <= offset)
-						&& (endToken >= tokens.getStreamLength() || tokens.getTokenAt(endToken).getStartOffset() >= offset)) {
+				if ((startToken < 0 || tokens.getTokenAt(startToken).getEndOffset() < startOffset)
+						&& (endToken >= tokens.getStreamLength() || tokens.getTokenAt(endToken).getStartOffset() >= endOffset)) {
 					results.add(((ListAstNode) child).getElementSort());
 				}
 			}
@@ -87,7 +90,7 @@
 		return results;
 	}
 
-	private int getLayoutStartTokenOffset(AstNode node) {
+	private int getNonLayoutTokenLeftOf(AstNode node) {
 		int result = node.getLeftIToken().getTokenIndex();
 		IPrsStream tokens = ast.getRightIToken().getIPrsStream();
 		while (--result >= 0) {
@@ -98,7 +101,7 @@
 		return result;
 	}
 
-	private int getLayoutEndTokenOffset(AstNode node) {
+	private int getNonLayoutTokenRightOf(AstNode node) {
 		int result = node.getRightIToken().getTokenIndex();
 		IPrsStream tokens = ast.getRightIToken().getIPrsStream();
 		while (++result < tokens.getStreamLength()) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposalTemplate.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposalTemplate.java	Fri Aug 13 08:13:54 2010	(r21167)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposalTemplate.java	Fri Aug 13 13:48:25 2010	(r21168)
@@ -63,6 +63,6 @@
 	}
 	
 	public String getName() {
-		return getPrefix();
+		return getPrefix().length() == 0 ? getDescription() : getPrefix().replace("\\n", "").replace("\\t", "  ");
 	}
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Fri Aug 13 08:13:54 2010	(r21167)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Fri Aug 13 13:48:25 2010	(r21168)
@@ -121,7 +121,7 @@
 			return createErrorProposal("No proposals available - completion lexical must allow letters and numbers", offset);
 		
 		RootAstNode ast = constructAst(getParser(controller), offset, document);
-		Set<String> sorts = new AstSortInspector(ast).getSortsAtOffset(offset);
+		Set<String> sorts = new AstSortInspector(ast).getSortsAtOffset(offset - currentCompletionPrefix.length(), offset);
 		if (currentCompletionNode == null)
 			return getParseFailureProposals(controller, document, offset, sorts);
 
@@ -407,7 +407,7 @@
 				continue;
 			if (!backTrackResultsOnly && proposalPrefix.regionMatches(IGNORE_TEMPLATE_PREFIX_CASE, 0, prefix, 0, prefix.length())) {
 				if (!proposal.isBlankLineRequired() || isBlankBeforeOffset(document, offset - prefix.length()))
-					if (prefix.length() > 0 || identifierLexical.matcher(proposal.getPrefix()).lookingAt())
+					if (prefix.length() > 0 || identifierLexical.matcher(proposalPrefix).lookingAt() || proposalPrefix.length() == 0)
 						results.add(new ContentProposal(this, proposal.getPrefix(), proposal, prefix, offsetRegion));
 			} /*else*/ {
 				Matcher matcher = identifierLexical.matcher(proposalPrefix);

From L.C.L.Kats at tudelft.nl  Wed Aug 18 10:48:27 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 18 Aug 2010 08:48:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21169 - in
	spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.generator/src/sdf2imp/services
	org.strategoxt.imp.generator/src/syntax org.strategoxt.imp.updat...
Message-ID: <201008180848.o7I8mRMJ019038@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Wed Aug 18 08:48:24 2010
New Revision: 21169
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21169&sc=1

Log:
Release 0.5.3

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/configure-main-descriptor.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-completions-descriptor.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/LanguageDescription.sdf
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Fri Aug 13 13:48:25 2010	(r21168)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Wed Aug 18 08:48:24 2010	(r21169)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.5.2.93"
+      version="0.5.3"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">
@@ -170,8 +170,7 @@
          id="org.strategoxt.imp.editors.editorservice"
          download-size="0"
          install-size="0"
-         version="0.1.1.qualifier"
-         unpack="true"/>
+         version="0.1.1.qualifier"/>
 
    <plugin
          id="com.ibm.wala.shrike"
@@ -224,15 +223,13 @@
          id="org.strategoxt.imp.editors.sdf"
          download-size="0"
          install-size="0"
-         version="0.1.1.qualifier"
-         unpack="true"/>
+         version="0.1.1.qualifier"/>
 
    <plugin
          id="org.strategoxt.imp.editors.stratego"
          download-size="0"
          install-size="0"
-         version="0.1.1.qualifier"
-         unpack="true"/>
+         version="0.1.1.qualifier"/>
 
    <plugin
          id="org.strategoxt.imp.editors.aterm"
@@ -245,8 +242,7 @@
          id="org.strategoxt.imp.nativebundle"
          download-size="0"
          install-size="0"
-         version="0.1.1.qualifier"
-         unpack="true"/>
+         version="0.1.1.qualifier"/>
 
    <plugin
          id="org.eclipse.imp.java.hosted"

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/configure-main-descriptor.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/configure-main-descriptor.str	Fri Aug 13 13:48:25 2010	(r21168)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/configure-main-descriptor.str	Wed Aug 18 08:48:24 2010	(r21169)
@@ -27,6 +27,7 @@
     verbose-msg(!"Using main module", get-sdf-main-module);
     
     require-option(
+      // Still compulsory for sdf2rtg (StrategoXT/8??)
       where(StartSymbol) <+ rules(StartSymbol := <parameterized-sort-to-rtg-sort> <find-start-symbol>)
     | <NoExistingDescriptor < !"Start symbols (-s)" + !"language start symbols">
     );
@@ -77,7 +78,9 @@
     collect-one(?LanguageName(<id>))
 
   find-start-symbol =
-    collect-one(?StartSymbols(Values(<id>)));
+    collect-one(?StartSymbols(<id>));
+    try(?Values(<id>));
+    try(map(?Sort(<id>)));
     separate-by(|",");
     concat-strings
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-completions-descriptor.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-completions-descriptor.str	Fri Aug 13 13:48:25 2010	(r21168)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-completions-descriptor.str	Wed Aug 18 08:48:24 2010	(r21169)
@@ -34,12 +34,16 @@
           ~~
           ~~// Syntax completion:
           ~~
-          completion template : Module =
+          completion template : Start =
             "module " <m> (blank)
           ~~
           completion template : Definition =
             "entity " <e> " {}"  (blank)
           ~~
+          completion template : Property =
+            <x> " : " <T>  (blank)
+          ~~
+        completions
           ~~// Semantic (identifier) completion:
           ~~
           completion proposer: editor-complete

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf	Fri Aug 13 13:48:25 2010	(r21168)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf	Wed Aug 18 08:48:24 2010	(r21169)
@@ -24,12 +24,12 @@
 
     "completion" "keyword" ":" PropertyValue CompletionAnno -> SemanticRule {cons("CompletionKeyword")}
     
-    "completion" "template" ":" String CompletionPart* CompletionAnno -> SemanticRule {cons("CompletionTemplate")}
+    "completion" "template" ":" CompletionPart CompletionPart* CompletionAnno -> SemanticRule {cons("CompletionTemplate")}
     
     %% Deprecated: conflicts with content completion
-    "completion" "template" ":" PropertyValue CompletionPart+ CompletionAnno -> SemanticRule {cons("CompletionTemplate"), avoid, deprecated("Add quotes to the starting literal")}
+    "completion" "template" ":" Id CompletionPart+ CompletionAnno -> SemanticRule {cons("CompletionTemplate"), avoid, deprecated("Add quotes to the starting literal")}
     
-    "completion" "template" ":" Sort "=" String CompletionPart* CompletionAnno -> SemanticRule {cons("CompletionTemplateWithSort")}
+    "completion" "template" ":" Sort "=" CompletionPart CompletionPart* CompletionAnno -> SemanticRule {cons("CompletionTemplateWithSort")}
     
     %% Used as content completion triggers
     "completion" "template" ":" PropertyValue CompletionPart* CompletionAnno -> SemanticRule {cons("CompletionTemplate"), recover, avoid}
@@ -65,4 +65,4 @@
     
     "<" PlaceholderChar* ">" -> Placeholder
     ~[\>\n]                  -> PlaceholderChar
-    
\ No newline at end of file
+    

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp	Fri Aug 13 13:48:25 2010	(r21168)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp	Wed Aug 18 08:48:24 2010	(r21169)
@@ -8,7 +8,8 @@
    CompletionKeyword    -- R [ H [ KW["completion"] KW["keyword"] ] KW[":"] H [ _1 _2 ] ],
    CompletionTemplate   -- R [ H [ KW["completion"] KW["template"] ] KW[":"] H [ _1 _2 _3 ] ],
    CompletionTemplate.2:iter-star -- _1,
-   CompletionTemplateWithSort   -- R [ H [ KW["completion"] KW["template"] ] KW[":"] H [ _1 KW["="] _1 _2 _3 ] ],
+   CompletionTemplateWithSort   -- R [ V is=2 [ H [ KW["completion"] KW["template"] KW[":"] _1 KW["="]] ]
+                                                H [ _2 _3 _4 ] ],
    CompletionTemplateWithSort.3:iter-star -- _1,
    CompletionTrigger    -- R [ H [ KW["completion"] KW["trigger"] ] KW[":"] H [ _1 _2 ] ],
    HoverRule            -- R [ H [ KW["hover"]     _1 ] KW[":"] _2 ],

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/LanguageDescription.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/LanguageDescription.sdf	Fri Aug 13 13:48:25 2010	(r21168)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/LanguageDescription.sdf	Wed Aug 18 08:48:24 2010	(r21169)
@@ -7,7 +7,7 @@
   sorts
   
     LanguageProperty PropertyValue NoContinuation PropertyValues URL
-    FenceDef BlockCommentDef PropertyKeyword IndentDedf
+    FenceDef BlockCommentDef IndentDef
   
   syntax
   
@@ -30,7 +30,6 @@
   
     { PropertyValue ","}* -> PropertyValues {cons("Values")}
     String                -> PropertyValue
-    PropertyKeyword       -> PropertyValue {reject}
   
   	%% General language properties
   
@@ -39,7 +38,8 @@
     "extensions"      ":" PropertyValues -> LanguageProperty {cons("Extensions")}
     "description"     ":" PropertyValue  -> LanguageProperty {cons("Description")}
     "table"           ":" PropertyValue  -> LanguageProperty {cons("Table")}
-    "start" "symbols" ":" PropertyValues -> LanguageProperty {cons("StartSymbols")}
+    "start" "symbols" ":" Sort*          -> LanguageProperty {cons("StartSymbols")}
+    "start" "symbols" ":" PropertyValues -> LanguageProperty {cons("StartSymbols"), avoid}
     "url"             ":" URL            -> LanguageProperty {cons("URL")}
     "extends"         ":" PropertyValues -> LanguageProperty {cons("Extends")}
     "aliases"         ":" PropertyValues -> LanguageProperty {cons("Aliases")} %% deprecated

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	Fri Aug 13 13:48:25 2010	(r21168)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	Wed Aug 18 08:48:24 2010	(r21169)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.5.2.93.jar" id="org.strategoxt.imp" version="0.5.2.93">
+   <feature url="features/org.strategoxt.imp_0.5.3.jar" id="org.strategoxt.imp" version="0.5.3">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">

From L.C.L.Kats at tudelft.nl  Fri Aug 20 10:57:27 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 20 Aug 2010 08:57:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21170 - in
	spoofax-imp/trunk: org.eclipse.imp
	org.strategoxt.imp.editors.stratego/editor
	org.strategoxt.imp.editors.stratego/trans
	org.strategoxt.imp.generator/src/sdf2imp...
Message-ID: <201008200857.o7K8vRfr023123@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Fri Aug 20 08:57:18 2010
New Revision: 21170
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21170&sc=1

Log:
- New candidate-sorts helper strategy for content completion
- Avoid spawning "loading editor descriptors" job for non-significant workspace changes
- Spoofax/95: files outside the workspace cannot be opened

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/CandidateSortsPrimitive.java
Modified:
   spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java

Modified: spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch
==============================================================================
--- spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch	Wed Aug 18 08:48:24 2010	(r21169)
+++ spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch	Fri Aug 20 08:57:18 2010	(r21170)
@@ -349,16 +349,24 @@
  
      public Object getAdapter(Class required) {
          if (IContentOutlinePage.class.equals(required)) {
-@@ -697,7 +743,8 @@
+@@ -696,13 +742,14 @@
+         IEditorInput editorInput= getEditorInput();
          IFile file= EditorInputUtils.getFile(editorInput);
          IPath filePath= EditorInputUtils.getPath(editorInput);
++    	// LK: initialize parse controller even if project cannot be determined
++        ISourceProject srcProject = null;
          try {
 -            ISourceProject srcProject= (file != null) ? ModelFactory.open(file.getProject()) : null;
-+        	// LK: check file.getProject() for null for out-of-workspace files
-+            ISourceProject srcProject= (file != null && file.getProject() != null) ? ModelFactory.open(file.getProject()) : null;
- 
-             fLanguageServiceManager.getParseController().initialize(filePath, srcProject, fAnnotationCreator);
+-
+-            fLanguageServiceManager.getParseController().initialize(filePath, srcProject, fAnnotationCreator);
++           srcProject = ModelFactory.open(file.getProject());
          } catch (ModelException e) {
+             ErrorHandler.reportError("Error initializing parser for input " + editorInput.getName() + ":", e);
+         }
++        fLanguageServiceManager.getParseController().initialize(filePath, srcProject, fAnnotationCreator);
+     }
+ 
+     private void findLanguageSpecificPreferences() {
 @@ -1099,6 +1146,10 @@
            fActionBars = null;
          }

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv	Wed Aug 18 08:48:24 2010	(r21169)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv	Fri Aug 20 08:57:18 2010	(r21170)
@@ -37,10 +37,10 @@
   completion template : Strategy =
   	"let" "\n\t" <x> " = " <s> "\nin\n\t" <s> "\nend"
 
-  completion template : Decl = // Actually: Def
+  completion template : Def =
   	"where" "\n\t" (blank)
   	
-  completion template : Decl = // Actually: Def
+  completion template : Def =
   	"with" "\n\t" (blank)
   
   completion template:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	Wed Aug 18 08:48:24 2010	(r21169)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	Fri Aug 20 08:57:18 2010	(r21170)
@@ -549,7 +549,7 @@
     where
       <gt> (n, 0)
     with
-      t* := <separate-by(|", ")> <copy> (n, "t") // TODO: number
+      t* := <separate-by(|", ")> <copy> (n, "t") // TODO: number (Spoofax/231)
 
   signature-to-proposal:
     (x, 0, 0) -> [x, ""]

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str	Wed Aug 18 08:48:24 2010	(r21169)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str	Fri Aug 20 08:57:18 2010	(r21170)
@@ -113,6 +113,8 @@
   project-path = prim("SSL_EXT_projectpath")
   
   plugin-path = prim("SSL_EXT_pluginpath")
+  
+  candidate-sorts = prim("SSL_EXT_candidatesorts")
 
   is-newer:
     (file1, file2) -> <id>

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java	Wed Aug 18 08:48:24 2010	(r21169)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java	Fri Aug 20 08:57:18 2010	(r21170)
@@ -101,8 +101,6 @@
 
 	public void resourceChanged(final IResourceChangeEvent event) {
 		if (event.getType() == IResourceChangeEvent.POST_CHANGE  && isSignificantChangeDeep(event.getDelta())) {
-			// TODO: Optimize - aggregate multiple events into a single job?
-			//       this seems to spawn way to many threads
 			synchronized (asyncEventQueue) {
 				asyncEventQueue.add(event);
 				if (!isAsyncEventHandlerActive)
@@ -171,37 +169,45 @@
 		if (isSignificantChange(delta)) {
 			return true;
 		} else {
-			for (IResourceDelta child : delta.getAffectedChildren())
-				if (isSignificantChangeDeep(child)) return true;
+			for (IResourceDelta child : delta.getAffectedChildren()) {
+				if (isSignificantChangeDeep(child) && isSignificantName(delta.getResource().getName()))
+					return true;
+			}
 		}
 		return false;
 	}
+
+	private static boolean isSignificantName(String name) {
+		return name.endsWith(".packed.esv") || name.endsWith(".tbl");
+	}
 	
 	public void updateResource(IResource resource, IProgressMonitor monitor, boolean startup) {
 		Environment.assertLock();
 		
 		String name = resource.getName();
-		if (name.endsWith(".packed.esv")) {
-			IResource source = getSourceDescriptor(resource);
-			
-			if (asyncIgnoreOnce.remove(resource.getFullPath().toString()))
-				return;
-			
-			if (!source.equals(resource) && source.exists() && !startup) {
-				// Try to build using the .main.esv instead;
-				// the build.xml file may touch the .packed.esv file
-				// to signal a rebuild is necessary
-				// TODO: Prevent duplicate builds triggered this way...?
-				DynamicDescriptorBuilder.getInstance().updateResource(source, monitor);
-			} else if (resource.exists()) {
-				monitor.setTaskName("Loading " + name);
-				loadPackedDescriptor(resource);
-				monitor.setTaskName(null);
+		if (isSignificantName(name)) {
+			if (name.endsWith(".packed.esv")) {
+				IResource source = getSourceDescriptor(resource);
+				
+				if (asyncIgnoreOnce.remove(resource.getFullPath().toString()))
+					return;
+				
+				if (!source.equals(resource) && source.exists() && !startup) {
+					// Try to build using the .main.esv instead;
+					// the build.xml file may touch the .packed.esv file
+					// to signal a rebuild is necessary
+					// TODO: Prevent duplicate builds triggered this way...?
+					DynamicDescriptorBuilder.getInstance().updateResource(source, monitor);
+				} else if (resource.exists()) {
+					monitor.setTaskName("Loading " + name);
+					loadPackedDescriptor(resource);
+					monitor.setTaskName(null);
+				}
+			} else if (name.endsWith(".tbl")) {
+				name = name.substring(0, name.length() - 4);
+				if (resource instanceof IFile)
+					Environment.registerUnmanagedParseTable(name, (IFile) resource);
 			}
-		} else if (name.endsWith(".tbl")) {
-			name = name.substring(0, name.length() - 4);
-			if (resource instanceof IFile)
-				Environment.registerUnmanagedParseTable(name, (IFile) resource);
 		}
 	}
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	Wed Aug 18 08:48:24 2010	(r21169)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	Fri Aug 20 08:57:18 2010	(r21170)
@@ -98,7 +98,7 @@
 		boolean mxOption = false;
 		
 		for (String arg : ManagementFactory.getRuntimeMXBean().getInputArguments()) {
-			if (arg.startsWith("-server")) serverOption = true;
+			if (arg.startsWith("-Xserver") || arg.startsWith("-server")) serverOption = true;
 			if (arg.startsWith("-Xss") || arg.startsWith("-ss")) ssOption = true;
 			if (arg.startsWith("-Xmx") || arg.startsWith("-mx")) mxOption = true;
 		}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java	Wed Aug 18 08:48:24 2010	(r21169)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java	Fri Aug 20 08:57:18 2010	(r21170)
@@ -135,12 +135,15 @@
 		}
 		
 		// (Re)store these inputs in case the parse controller has been dynamically reloaded
-		if (filePath == null) filePath = this.filePath;
-		else this.filePath = filePath;
-		if (project == null) project = this.project;
-		else this.project = project;
-		if (handler == null) handler = this.handler;
-		else this.handler = handler;
+		if (filePath == null) {
+			filePath = this.filePath;
+			project = this.project; // might be null if not an ISourceProject
+			handler = this.handler;
+		} else {
+			this.filePath = filePath;
+			this.project = project;
+			this.handler = handler;
+		}
 		
 		super.getWrapped().initialize(filePath, project, handler);
 	}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	Wed Aug 18 08:48:24 2010	(r21169)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	Fri Aug 20 08:57:18 2010	(r21170)
@@ -156,7 +156,8 @@
     public IFile getResource() {
     	IPath path = getPath();
     	if (getProject() == null) {
-    		return ResourcesPlugin.getWorkspace().getRoot().getFile(path);	// TODO: out-of-workspace files
+    		// HACK: out-of-project resource (Spoofax/95)
+    		return ResourcesPlugin.getWorkspace().getRoot().getFile(path);
     	} else {
     		IProject project = getProject().getRawProject();
     		path = path.removeFirstSegments(path.matchingFirstSegments(project.getLocation()));

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java	Wed Aug 18 08:48:24 2010	(r21169)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java	Fri Aug 20 08:57:18 2010	(r21170)
@@ -278,7 +278,7 @@
 				if (marker.getResource().equals(file)) markersToAdd.remove(); 
 			}
 		} catch (CoreException e) {
-			Environment.logException("Unable to clear existing markers for file:" + file.getName(), e);
+			Environment.logException("Unable to clear existing markers for file: " + file.getName(), e);
 		}		
 	}
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Wed Aug 18 08:48:24 2010	(r21169)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Fri Aug 20 08:57:18 2010	(r21170)
@@ -40,6 +40,7 @@
 import org.strategoxt.imp.runtime.parser.ast.ListAstNode;
 import org.strategoxt.imp.runtime.parser.ast.RootAstNode;
 import org.strategoxt.imp.runtime.parser.ast.StringAstNode;
+import org.strategoxt.imp.runtime.stratego.CandidateSortsPrimitive;
 import org.strategoxt.imp.runtime.stratego.StrategoConsole;
 import org.strategoxt.imp.runtime.stratego.adapter.WrappedAstNodeFactory;
 import org.strategoxt.lang.terms.TermFactory;
@@ -127,7 +128,7 @@
 
 		printCompletionTip(controller, sorts);
 
-		ICompletionProposal[] results = toProposals(invokeCompletionFunction(controller), document, offset, sorts);
+		ICompletionProposal[] results = toProposals(invokeCompletionFunction(controller, sorts), document, offset, sorts);
 		
 		/* UNDONE: automatic proposal insertion
 		if (results.length == 1 && results[0] instanceof SourceProposal) {
@@ -234,7 +235,7 @@
 		return result;
 	}
 
-	private IStrategoTerm invokeCompletionFunction(final IParseController controller) {
+	private IStrategoTerm invokeCompletionFunction(final IParseController controller, final Set<String> sorts) {
 		if (completionFunction == null) {
 			return Environment.getTermFactory().makeList();
 		} else {
@@ -247,6 +248,7 @@
 				public void run() {
 					observer.getLock().lock();
 					try {
+						CandidateSortsPrimitive.setCandidateSorts(sorts);
 						if (!observer.isUpdateScheduled()) {
 							observer.update(controller, new NullProgressMonitor());
 						}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	Wed Aug 18 08:48:24 2010	(r21169)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	Fri Aug 20 08:57:18 2010	(r21170)
@@ -451,7 +451,8 @@
 		assert getLock().isHeldByCurrentThread();
 		
 		Context context = getRuntime().getCompiledContext();
-		IStrategoTerm resultingAst = useSourceAst ? null : resultingAsts.get(node.getResource());
+		IResource resource = node.getResource();
+		IStrategoTerm resultingAst = useSourceAst ? null : resultingAsts.get(resource);
 		IStrategoList termPath = StrategoTermPath.getTermPathWithOrigin(context, resultingAst, node);
 		IStrategoTerm targetTerm;
 		IStrategoTerm rootTerm;
@@ -466,8 +467,8 @@
 		}
 		
 		ITermFactory factory = Environment.getTermFactory();
-		String path = node.getResource().getProjectRelativePath().toPortableString();
-		String absolutePath = node.getResource().getProject().getLocation().toOSString();
+		String path = resource.getProjectRelativePath().toPortableString();
+		String absolutePath = tryGetProjectPath(resource);
 		
 		if (includeSubNode) {
 			IStrategoTerm[] inputParts = {
@@ -488,6 +489,12 @@
 		}
 	}
 
+	private static String tryGetProjectPath(IResource resource) {
+		return resource.getProject() != null && resource.getProject().exists()
+				? resource.getProject().getLocation().toOSString()
+				: resource.getFullPath().removeLastSegments(1).toOSString();
+	}
+
 	/**
 	 * Create an input term for a control rule,
 	 * based on the ATerm syntax of the AST of the source file.
@@ -667,8 +674,8 @@
 		
 		try {
 			EditorIOAgent io = (EditorIOAgent) runtime.getIOAgent();
-			io.setWorkingDir(resource.getProject().getLocation().toOSString());
-			io.setProjectPath(resource.getProject().getLocation().toOSString());
+			io.setWorkingDir(tryGetProjectPath(resource));
+			io.setProjectPath(tryGetProjectPath(resource));
 			io.setDescriptor(descriptor);
 		} catch (IOException e) {
 			Environment.logException("Could not set Stratego working directory", e);

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/CandidateSortsPrimitive.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/CandidateSortsPrimitive.java	Fri Aug 20 08:57:18 2010	(r21170)
@@ -0,0 +1,39 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Set;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.AbstractPrimitive;
+import org.spoofax.interpreter.stratego.Strategy;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.Environment;
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class CandidateSortsPrimitive extends AbstractPrimitive {
+	
+	private static Set<String> candidateSorts;
+
+	public CandidateSortsPrimitive() {
+		super("SSL_EXT_candidatesorts", 0, 0);
+	}
+	
+	public static void setCandidateSorts(Set<String> sorts) {
+		Environment.assertLock();
+		candidateSorts = sorts;
+	}
+
+	@Override
+	public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
+		Environment.assertLock();
+		List<IStrategoTerm> sortTerms = new ArrayList<IStrategoTerm>();
+		for (String sort : candidateSorts)
+			sortTerms.add(env.getFactory().makeString(sort));
+		env.setCurrent(env.getFactory().makeList(sortTerms));
+		return true;
+	}
+
+}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	Wed Aug 18 08:48:24 2010	(r21169)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	Fri Aug 20 08:57:18 2010	(r21170)
@@ -34,6 +34,7 @@
 		add(new QueueAnalysisPrimitive());
 		add(new QueueStrategyPrimitive());
 		add(new SetMarkersPrimitive());
+		add(new CandidateSortsPrimitive());
 		
 		add(new SetTotalWorkUnitsPrimitive());
 		add(new CompleteWorkUnitPrimitive());

From L.C.L.Kats at tudelft.nl  Tue Aug 24 12:49:55 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 24 Aug 2010 10:49:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21171 - in
	strc-java/trunk/java: . runtime/org/strategoxt
	runtime/org/strategoxt/lang
Message-ID: <201008241049.o7OAnuWl005816@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Tue Aug 24 10:49:48 2010
New Revision: 21171
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21171&sc=1

Log:
Minor improvements/fixes for Java-based strategy implementations

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/JavaInteropRegisterer.java
   strc-java/trunk/java/spoofax-libs.jar

Modified: strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
==============================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	Fri Aug 20 08:57:18 2010	(r21170)
+++ strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	Tue Aug 24 10:49:48 2010	(r21171)
@@ -429,6 +429,28 @@
 		protected void internalAddOperatorRegistry(IOperatorRegistry or) {
 			super.addOperatorRegistry(or);
 		}
+		
+		@Override
+		public IStrategoTerm invokeStrategy(String strategy, IStrategoTerm input)
+				throws MissingStrategyException, StrategoErrorExit, StrategoExit, StrategoException {
+			
+			IStrategoTerm oldCurrent = current();
+			try {
+				setCurrent(input);
+				invoke(strategy);
+				return current();
+			} catch (InterpreterErrorExit e) {
+				throw new StrategoErrorExit(e.getMessage(), e.getTerm(), e);
+			} catch (InterpreterExit e) {
+				throw new StrategoExit(e.getValue(), e);
+			} catch (UndefinedStrategyException e) {
+				throw new MissingStrategyException(e.getMessage(), e);
+			} catch (InterpreterException e) {
+				throw new StrategoException(e.getMessage(), e);
+			} finally {
+				setCurrent(oldCurrent);
+			}
+		}
 	}
 
 	public void asyncCancel() {

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java
==============================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	Fri Aug 20 08:57:18 2010	(r21170)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	Tue Aug 24 10:49:48 2010	(r21171)
@@ -176,14 +176,18 @@
     }
     
     public IStrategoTerm invokeStrategyCLI(String strategy, String appName, String... args)
-    		throws MissingStrategyException, StrategoExit, StrategoException {
+    		throws MissingStrategyException, StrategoErrorExit, StrategoExit, StrategoException {
     	
-    	IStrategoList input = toCLITerm(appName, args);
+    	return invokeStrategy(strategy, toCLITerm(appName, args));
+    }
 
-    	SSL_EXT_java_call caller = (SSL_EXT_java_call) lookupPrimitive("SSL_EXT_java_call");
+	public IStrategoTerm invokeStrategy(String strategy, IStrategoTerm input) 
+			throws MissingStrategyException, StrategoErrorExit, StrategoExit, StrategoException {
+		
+		SSL_EXT_java_call caller = (SSL_EXT_java_call) lookupPrimitive("SSL_EXT_java_call");
     	if (caller == null) caller = new SSL_EXT_java_call();
     	return caller.call(this, strategy, input, false);
-    }
+	}
 
 	private IStrategoList toCLITerm(String appName, String... args) {
 		ITermFactory factory = getFactory();    	

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/JavaInteropRegisterer.java
==============================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/JavaInteropRegisterer.java	Fri Aug 20 08:57:18 2010	(r21170)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/JavaInteropRegisterer.java	Tue Aug 24 10:49:48 2010	(r21171)
@@ -1,5 +1,7 @@
 package org.strategoxt.lang;
 
+import java.util.regex.Pattern;
+
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.VarScope;
 import org.strategoxt.HybridInterpreter;
@@ -15,13 +17,16 @@
  */
 public class JavaInteropRegisterer extends InteropRegisterer {
 	
+	private static final Pattern BINARY_STRATEGY_NAME =
+		Pattern.compile("[A-Za-z_$]+_[0-9]+_[0-9+]");
+	
 	private final Strategy[] strategies;
 	
 	public JavaInteropRegisterer(Strategy[] strategies) {
 		if (strategies == null)
 			throw new IllegalArgumentException("strategies");
-		if (!this.getClass().getName().equals("InteropRegister"))
-			throw new IllegalStateException("Class must be named InteropRegisterer");
+		if (!getClass().getSimpleName().equals("InteropRegisterer"))
+			throw new IllegalStateException("Class must be named InteropRegisterer: " + getClass().getSimpleName());
 		this.strategies = strategies;
 	}
 
@@ -29,9 +34,15 @@
 	public void register(IContext context, Context compiledContext) {
 		VarScope registered = context.getVarScope();
 		for (Strategy strategy : strategies) {
-			// Note that strategy.getName() may use getClass().getName(),
+			// Note that strategy.getName() usually uses getClass().getName(),
 			// but for small Java libraries the performance penalty is acceptable
-			registered.addSVar(strategy.getName(), new InteropSDefT(strategy, context));
+			String className = strategy.getClass().getSimpleName();
+			String givenName = strategy.getName();
+			if (!BINARY_STRATEGY_NAME.matcher(className).matches())
+				throw new IllegalArgumentException("Strategy class must encode number of strategy and term arguments in name (e.g. foo_0_0): " + className);
+			if (!BINARY_STRATEGY_NAME.matcher(givenName).matches())
+				throw new IllegalArgumentException("Strategy name must encode number of strategy and term arguments in name (e.g. foo_0_0): " + givenName);
+			registered.addSVar(givenName, new InteropSDefT(strategy, context));
 		}
 	}
 	

Modified: strc-java/trunk/java/spoofax-libs.jar
==============================================================================
Binary file (source and/or target). No diff available.

From L.C.L.Kats at tudelft.nl  Wed Aug 25 12:48:21 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 25 Aug 2010 10:48:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21172 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter
	strc-java/trunk/java/runtime/org/strategoxt/lang
Message-ID: <201008251048.o7PAmLO8026077@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Wed Aug 25 10:48:06 2010
New Revision: 21172
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21172&sc=1

Log:
Fixed a subtle bug encountered by Rob and Zef where the contents of a list was inadvertently changed

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_all.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java	Tue Aug 24 10:49:48 2010	(r21171)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java	Wed Aug 25 10:48:06 2010	(r21172)
@@ -37,7 +37,7 @@
 		assert wrapped.getTermType() != LIST || origin.getTermType() != LIST
 				|| wrapped.getSubtermCount() == 0
 				|| wrapped.getSubtermCount() != origin.getSubtermCount()
-				: "Track lists using WrappedAstNodeList / WrappedAstNOdeFactory.makeLink()";
+				: "Track lists using WrappedAstNodeList / WrappedAstNodeFactory.makeLink()";
 	}
 	
 	public final IStrategoTerm getWrapped() {
@@ -76,7 +76,7 @@
 	public IStrategoTerm[] getAllSubterms() {
 		if (subterms == null)
 			subterms = ensureChildLinks(wrapped.getAllSubterms());
-		return subterms;
+		return getTermType() == LIST ? subterms.clone() : subterms; // IStrategoList contract is to copy the array
 	}
 
 	/**
@@ -101,7 +101,8 @@
 	}
 	
 	private IStrategoTerm ensureChildLink(IStrategoTerm kid, int index) {
-		if (kid instanceof IWrappedAstNode) {
+		if (kid instanceof IWrappedAstNode
+				|| index >= origin.getSubtermCount()) {
 			return kid;
 		} else {
 			return factory.ensureLink(kid, origin.getSubterm(index));

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_all.java
==============================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_all.java	Tue Aug 24 10:49:48 2010	(r21171)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_all.java	Wed Aug 25 10:48:06 2010	(r21172)
@@ -98,7 +98,7 @@
 
 	private static IStrategoList mapIgnoreAnnos(Context context, IStrategoTerm head2, IStrategoList list, Strategy s) {
 		IStrategoTerm[] items = list.getAllSubterms();
-		assert (items[0] = null) == null && list.head() != null : "List implementation must not expose internal array";
+		assert (items[0] = null) == null && list.head() != null && list.get(0) != null : "List implementation must not expose internal array";
 		items[0] = head2;
 		for (int i = 1; i < items.length; i++) {
 			IStrategoTerm item = items[i];

From L.C.L.Kats at tudelft.nl  Wed Aug 25 14:22:01 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 25 Aug 2010 12:22:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21173 - in
	spoofax/trunk/spoofax:
	org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core
	org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/...
Message-ID: <201008251222.o7PCM1x6027237@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Wed Aug 25 12:22:00 2010
New Revision: 21173
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21173&sc=1

Log:


Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Interpreter.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_int_to_string.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/ArrayDeque.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/FineGrainedOnRegion.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Goto.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IndentInfo.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IndentTokenizer.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Main.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/RangeList.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/SGLR.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Interpreter.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Interpreter.java	Wed Aug 25 10:48:06 2010	(r21172)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Interpreter.java	Wed Aug 25 12:22:00 2010	(r21173)
@@ -52,7 +52,10 @@
      * @throws InterpreterExit
      *             If the interpreter is exited.
      * @throws InterpreterException
-     *             In case of an internal error or other interpreter exception.
+     *             In case of an internal error or other interpreter exception.
+     *             
+     * @see #setCurrent(IStrategoTerm)
+     *             Sets the input term for the invoked strategy.
      */
     public boolean invoke(String name)
             throws InterpreterErrorExit, InterpreterExit, UndefinedStrategyException, InterpreterException {

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_int_to_string.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_int_to_string.java	Wed Aug 25 10:48:06 2010	(r21172)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_int_to_string.java	Wed Aug 25 12:22:00 2010	(r21173)
@@ -27,8 +27,8 @@
             return false;
 
         IStrategoInt a = (IStrategoInt) tvars[0];
-        Integer i = new Integer(a.intValue());
-        env.setCurrent(env.getFactory().makeString(i.toString()));
+        String s = String.valueOf(a.intValue());
+        env.setCurrent(env.getFactory().makeString(s));
         return true;
     }
 }

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/ArrayDeque.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/ArrayDeque.java	Wed Aug 25 10:48:06 2010	(r21172)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/ArrayDeque.java	Wed Aug 25 12:22:00 2010	(r21173)
@@ -719,6 +719,14 @@
             } while (i != t);
         }
     }
+    
+    public void clear(boolean skipCellNulling) {
+        if (skipCellNulling) {
+            head = tail = 0;
+        } else {
+            clear();
+        }
+    }
 
     /**
      * Returns an array containing all of the elements in this deque

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/FineGrainedOnRegion.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/FineGrainedOnRegion.java	Wed Aug 25 10:48:06 2010	(r21172)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/FineGrainedOnRegion.java	Wed Aug 25 12:22:00 2010	(r21173)
@@ -62,7 +62,7 @@
         if (indexChoichePoints >= choicePoints.size())
             return false;
         BacktrackPosition btPosition=choicePoints.get(indexChoichePoints);
-        mySGLR.activeStacks.clear();
+        mySGLR.activeStacks.clear(true);
         mySGLR.activeStacks.addAll(btPosition.recoverStacks);
         getHistory().deleteLinesFrom(btPosition.getIndexHistory());
         getHistory().setTokenIndex(btPosition.tokensSeen);
@@ -77,7 +77,7 @@
                 stacks.addAll(mySGLR.activeStacks);
                 mySGLR.setFineGrainedOnRegion(false);
                 //extra set of recover stacks
-                mySGLR.activeStacks.clear();
+                mySGLR.activeStacks.clear(true);
                 mySGLR.activeStacks.addAll(btPosition.recoverStacks);
                 getHistory().setTokenIndex(btPosition.tokensSeen);
                 recoverParse(newCandidates, endPos, false);

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Goto.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Goto.java	Wed Aug 25 10:48:06 2010	(r21172)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Goto.java	Wed Aug 25 12:22:00 2010	(r21173)
@@ -22,7 +22,7 @@
         this.nextState = nextState;
     }
 
-    public boolean hasProd(int label) {
+    public final boolean hasProd(int label) {
         return ranges.within(label);
     }
     
@@ -52,4 +52,8 @@
         sb.append(")");
         return sb.toString(); 
     }
+
+    public RangeList getRangeList() {
+        return ranges;
+    }
 }

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IndentInfo.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IndentInfo.java	Wed Aug 25 10:48:06 2010	(r21172)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IndentInfo.java	Wed Aug 25 12:22:00 2010	(r21173)
@@ -19,7 +19,7 @@
     }   
     
     public void fillStackNodes(ArrayDeque<Frame> nodes) {
-        stackNodes.clear();        
+        stackNodes.clear(true);        
         stackNodes.addAll(nodes);        
     } 
 

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IndentTokenizer.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IndentTokenizer.java	Wed Aug 25 10:48:06 2010	(r21172)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IndentTokenizer.java	Wed Aug 25 12:22:00 2010	(r21173)
@@ -14,7 +14,7 @@
         
     private static final char INDENT_TOK = 244; //char used to represent indentation in syntax definition
     private static final char DEDENT_TOK = 245; //char used to represent 'dedentation' in syntax definition
-    private Stack<Integer> indentStack;
+    private ArrayDeque<Integer> indentStack;
     private int dedentCount;
     private boolean indentShift;
     private boolean strictMode;
@@ -25,7 +25,7 @@
      */
     public IndentTokenizer(IndentationHandler indentInfo, boolean isStrictMode)
     {
-        indentStack = new Stack<Integer>();
+        indentStack = new ArrayDeque<Integer>();
         this.strictMode=isStrictMode;
         myIndentHandler = indentInfo;
         initEvaluationVariables();
@@ -33,7 +33,7 @@
  
     private void initEvaluationVariables() {
         myIndentHandler.initEvaluationVariables();
-        indentStack.clear();
+        indentStack.clear(true);
         indentStack.push(0);
         resetForNextLine();
     }

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Main.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Main.java	Wed Aug 25 10:48:06 2010	(r21172)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Main.java	Wed Aug 25 12:22:00 2010	(r21173)
@@ -117,7 +117,7 @@
             // Detailed message for other exceptions
             System.err.println("Parsing failed : " + e);
         }
-        if(t != null && !"-".equals(ous)){            
+        if(t != null && !"-".equals(output)){            
             String outputString=t.toString();
             ous.write(outputString.getBytes());
         }

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/RangeList.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/RangeList.java	Wed Aug 25 10:48:06 2010	(r21172)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/RangeList.java	Wed Aug 25 12:22:00 2010	(r21173)
@@ -11,7 +11,7 @@
  */
 public class RangeList {
     
-    private static final int NONE = -1;
+    public static final int NONE = -1;
     
     private final int[] ranges;
     
@@ -65,7 +65,7 @@
         return results;
     }
     
-    public boolean within(int c) {
+    public final boolean within(int c) {
         if (singularRange != NONE) return c == singularRange;
         for (int i = 0; i < ranges.length; i += 2) {
             int low = ranges[i];
@@ -84,7 +84,7 @@
     /**
      * Gets the character of a single-character range.
      * 
-     * @return  The single range character, or -1 if not applicable.
+     * @return  The single range character, or {@link NONE} if not applicable.
      */
     public int getSingularRange() {
         return singularRange;

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/SGLR.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/SGLR.java	Wed Aug 25 10:48:06 2010	(r21172)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/SGLR.java	Wed Aug 25 12:22:00 2010	(r21173)
@@ -122,7 +122,7 @@
     }
 
     public void clearRecoverStacks(){
-        recoverStacks.clear();
+        recoverStacks.clear(false);
     }
     
     private ArrayDeque<Frame> recoverStacks;
@@ -749,10 +749,7 @@
             }
             int pos = activeStacks.size() - sz + i;
             Frame st2 = activeStacks.get(pos);
-            boolean b0 = st2.allLinksRejected();
-            boolean b1 = inReduceStacks(forActor, st2);
-            boolean b2 = inReduceStacks(forActorDelayed, st2);
-            if (b0 || b1 || b2)
+            if (st2.allLinksRejected() || inReduceStacks(forActor, st2) || inReduceStacks(forActorDelayed, st2))
                 continue; //stacknode will find reduction in regular process
 
             for (Action action : st2.peek().getActions()) {
@@ -918,7 +915,7 @@
                 frame.clear();
             }
         }
-        forActorDelayed.clear();
+        forActorDelayed.clear(true);
     }
 
     private void clearActiveStacks(boolean all) {
@@ -927,7 +924,7 @@
                 frame.clear();
             }
         }
-        activeStacks.clear();
+        activeStacks.clear(true);
     }
 
     ParseTable getParseTable() {

From L.C.L.Kats at tudelft.nl  Wed Aug 25 14:26:00 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 25 Aug 2010 12:26:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21174 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.aster
	org.strategoxt.imp.editors.aster/lib
	org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.editorservi...
Message-ID: <201008251226.o7PCQ042027277@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Wed Aug 25 12:26:00 2010
New Revision: 21174
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21174&sc=1

Log:
Release 0.5.3.1
- Spoofax/210: Add an example Java method to the entities editor
- Spoofax/238: Prevent generating empty directories when invoking build.generated.xml directly

Added:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-java-strategy.meta
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-java-strategy.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-manifest.str
   spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	Wed Aug 25 12:22:00 2010	(r21173)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	Wed Aug 25 12:26:00 2010	(r21174)
@@ -3,8 +3,8 @@
 <project name="build.generated">
 
         <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
-        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-        <target name="spoofaximp.default.jar" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,java.jar,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  java.jar,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -314,6 +314,10 @@
                 </fileset>
             </java>
         </target>
+        
+        <target name="java.jar">
+            <jar basedir="${build}" excludes="trans/**" update="true" destfile="${include}/${strmodule}-java.jar"/>
+        </target>
     
         <!-- Stratego to Java interpreter -->
         <target name="stratego.ctree" depends="rtg2sig">

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/lib/editor-common.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/lib/editor-common.generated.str	Wed Aug 25 12:22:00 2010	(r21173)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/lib/editor-common.generated.str	Wed Aug 25 12:26:00 2010	(r21174)
@@ -100,6 +100,8 @@
   project-path = prim("SSL_EXT_projectpath")
   
   plugin-path = prim("SSL_EXT_pluginpath")
+  
+  candidate-sorts = prim("SSL_EXT_candidatesorts")
 
   is-newer:
     (file1, file2) -> <id>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	Wed Aug 25 12:22:00 2010	(r21173)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	Wed Aug 25 12:26:00 2010	(r21174)
@@ -3,8 +3,8 @@
 <project name="build.generated">
 
         <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
-        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-        <target name="spoofaximp.default.jar" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,java.jar,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  java.jar,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -314,6 +314,10 @@
                 </fileset>
             </java>
         </target>
+        
+        <target name="java.jar">
+            <jar basedir="${build}" excludes="trans/**" update="true" destfile="${include}/${strmodule}-java.jar"/>
+        </target>
     
         <!-- Stratego to Java interpreter -->
         <target name="stratego.ctree" depends="rtg2sig">

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	Wed Aug 25 12:22:00 2010	(r21173)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	Wed Aug 25 12:26:00 2010	(r21174)
@@ -3,8 +3,8 @@
 <project name="build.generated">
 
         <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
-        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-        <target name="spoofaximp.default.jar" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,java.jar,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  java.jar,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -314,6 +314,10 @@
                 </fileset>
             </java>
         </target>
+        
+        <target name="java.jar">
+            <jar basedir="${build}" excludes="trans/**" update="true" destfile="${include}/${strmodule}-java.jar"/>
+        </target>
     
         <!-- Stratego to Java interpreter -->
         <target name="stratego.ctree" depends="rtg2sig">

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/lib/editor-common.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/lib/editor-common.generated.str	Wed Aug 25 12:22:00 2010	(r21173)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/lib/editor-common.generated.str	Wed Aug 25 12:26:00 2010	(r21174)
@@ -100,6 +100,8 @@
   project-path = prim("SSL_EXT_projectpath")
   
   plugin-path = prim("SSL_EXT_pluginpath")
+  
+  candidate-sorts = prim("SSL_EXT_candidatesorts")
 
   is-newer:
     (file1, file2) -> <id>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	Wed Aug 25 12:22:00 2010	(r21173)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	Wed Aug 25 12:26:00 2010	(r21174)
@@ -3,8 +3,8 @@
 <project name="build.generated">
 
         <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
-        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-        <target name="spoofaximp.default.jar" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,java.jar,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  java.jar,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -314,6 +314,10 @@
                 </fileset>
             </java>
         </target>
+        
+        <target name="java.jar">
+            <jar basedir="${build}" excludes="trans/**" update="true" destfile="${include}/${strmodule}-java.jar"/>
+        </target>
     
         <!-- Stratego to Java interpreter -->
         <target name="stratego.ctree" depends="rtg2sig">

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/lib/editor-common.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/lib/editor-common.generated.str	Wed Aug 25 12:22:00 2010	(r21173)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/lib/editor-common.generated.str	Wed Aug 25 12:26:00 2010	(r21174)
@@ -100,6 +100,8 @@
   project-path = prim("SSL_EXT_projectpath")
   
   plugin-path = prim("SSL_EXT_pluginpath")
+  
+  candidate-sorts = prim("SSL_EXT_candidatesorts")
 
   is-newer:
     (file1, file2) -> <id>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	Wed Aug 25 12:22:00 2010	(r21173)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	Wed Aug 25 12:26:00 2010	(r21174)
@@ -3,8 +3,8 @@
 <project name="build.generated">
 
         <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
-        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-        <target name="spoofaximp.default.jar" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,java.jar,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  java.jar,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -314,6 +314,10 @@
                 </fileset>
             </java>
         </target>
+        
+        <target name="java.jar">
+            <jar basedir="${build}" excludes="trans/**" update="true" destfile="${include}/${strmodule}-java.jar"/>
+        </target>
     
         <!-- Stratego to Java interpreter -->
         <target name="stratego.ctree" depends="rtg2sig">

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str	Wed Aug 25 12:22:00 2010	(r21173)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str	Wed Aug 25 12:26:00 2010	(r21174)
@@ -100,6 +100,8 @@
   project-path = prim("SSL_EXT_projectpath")
   
   plugin-path = prim("SSL_EXT_pluginpath")
+  
+  candidate-sorts = prim("SSL_EXT_candidatesorts")
 
   is-newer:
     (file1, file2) -> <id>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	Wed Aug 25 12:22:00 2010	(r21173)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	Wed Aug 25 12:26:00 2010	(r21174)
@@ -3,8 +3,8 @@
 <project name="build.generated">
 
         <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
-        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-        <target name="spoofaximp.default.jar" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,java.jar,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  java.jar,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -314,6 +314,10 @@
                 </fileset>
             </java>
         </target>
+        
+        <target name="java.jar">
+            <jar basedir="${build}" excludes="trans/**" update="true" destfile="${include}/${strmodule}-java.jar"/>
+        </target>
     
         <!-- Stratego to Java interpreter -->
         <target name="stratego.ctree" depends="rtg2sig">

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str	Wed Aug 25 12:22:00 2010	(r21173)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str	Wed Aug 25 12:26:00 2010	(r21174)
@@ -100,6 +100,8 @@
   project-path = prim("SSL_EXT_projectpath")
   
   plugin-path = prim("SSL_EXT_pluginpath")
+  
+  candidate-sorts = prim("SSL_EXT_candidatesorts")
 
   is-newer:
     (file1, file2) -> <id>

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Wed Aug 25 12:22:00 2010	(r21173)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Wed Aug 25 12:26:00 2010	(r21174)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.5.3"
+      version="0.5.3.1"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	Wed Aug 25 12:22:00 2010	(r21173)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	Wed Aug 25 12:26:00 2010	(r21174)
@@ -144,6 +144,7 @@
     create-builder-xml;
     create-example-file;
     create-common-trans;
+    create-java-strategy;
     copy-jars;
     copy-def-file;
     

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	Wed Aug 25 12:22:00 2010	(r21173)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	Wed Aug 25 12:26:00 2010	(r21174)
@@ -74,8 +74,8 @@
     <project name="build.generated">
 
         <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
-        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-        <target name="spoofaximp.default.jar"   depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,java.jar,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar"   depends="check-classpath,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  java.jar,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -95,6 +95,8 @@
         <condition property="metasdfmodule.available" value="1">
             <available file="${syntax}/${metasdfmodule}.sdf"/>
         </condition>
+        
+        <fail unless="build" message="Please use build.main.xml to build this project or configure the required properties manually"/>
         <mkdir dir="${build}"/>
         <mkdir dir="${src-gen}"/>
         <mkdir dir="${dist}"/>
@@ -385,6 +387,10 @@
                 </fileset>
             </java>
         </target>
+        
+        <target name="java.jar">
+            <jar basedir="${build}" excludes="trans/**" update="true" destfile="${include}/${strmodule}-java.jar"/>
+        </target>
     
         <!-- Stratego to Java interpreter -->
         <target name="stratego.ctree" depends="rtg2sig">

Added: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-java-strategy.meta
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-java-strategy.meta	Wed Aug 25 12:26:00 2010	(r21174)
@@ -0,0 +1 @@
+Meta([Syntax("Stratego-Java-15")])

Added: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-java-strategy.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-java-strategy.str	Wed Aug 25 12:26:00 2010	(r21174)
@@ -0,0 +1,56 @@
+module sdf2imp/project/create-java-strategy
+
+imports
+  sdf2imp/util/-
+
+strategies
+  
+  create-java-strategy =
+    create-java-strategy-1;
+    create-java-strategy-2
+
+  create-java-strategy-1 =
+    <file-exists> "editor/java/InteropRegisterer.java"
+  <+
+    pkgname := <get-package-name>;
+    
+    <output-java-file> |[
+       package pkgname;
+
+       import org.strategoxt.lang.JavaInteropRegisterer;
+       import org.strategoxt.lang.Strategy;
+
+       public class InteropRegisterer extends JavaInteropRegisterer {
+
+         public InteropRegisterer() {
+           super(new Strategy[] { java_strategy_0_0.instance });
+         }
+       }
+    ]|
+  
+  create-java-strategy-2 =
+    <file-exists> "editor/java/java_strategy_0_0.java"
+  <+
+    pkgname := <get-package-name>;
+    
+    <output-java-file>
+    |[ package pkgname;
+
+       import org.spoofax.interpreter.terms.IStrategoTerm;
+       import org.spoofax.interpreter.terms.ITermFactory;
+       import org.strategoxt.lang.Context;
+       import org.strategoxt.lang.Strategy;
+       
+       public class java_strategy_0_0 extends Strategy {
+         
+         public static java_strategy_0_0 instance = new java_strategy_0_0();
+       
+         @Override
+         public IStrategoTerm invoke(Context context, IStrategoTerm current) {
+           context.getIOAgent().printError("Input for java-strategy: " + current);
+           ITermFactory factory = context.getFactory();
+           return factory.makeString("Goodbye world");
+         }
+       
+       }
+    ]|
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-manifest.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-manifest.str	Wed Aug 25 12:22:00 2010	(r21173)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-manifest.str	Wed Aug 25 12:26:00 2010	(r21174)
@@ -31,7 +31,8 @@
   org.eclipse.ui.workbench.texteditor,
   org.strategoxt.imp.runtime,
   org.spoofax.aterm,
-  org.spoofax.jsglr
+  org.spoofax.jsglr,
+  org.strategoxt.strj
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
 Bundle-ActivationPolicy: lazy
 Export-Package: ", package, "

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch	Wed Aug 25 12:22:00 2010	(r21173)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch	Wed Aug 25 12:26:00 2010	(r21174)
@@ -14,7 +14,7 @@
 <booleanAttribute key="includeOptional" value="true"/>
 <stringAttribute key="location" value="${workspace_loc}/../runtime-spoofax-imp"/>
 <stringAttribute key="org.eclipse.debug.core.source_locator_id" value="org.eclipse.pde.ui.launcher.PDESourceLookupDirector"/>
-<stringAttribute key="org.eclipse.debug.core.source_locator_memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;sourceLookupDirector&gt;&#10;&lt;sourceContainers duplicates=&quot;false&quot;&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;folder nest=&amp;quot;false&amp;quot; path=&amp;quot;/webdsl/src/bin&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.folder&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;folder nest=&amp;quot;false&amp;quot; path=&amp;quot;/nwl/editor/java&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.folder&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml !
 version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;default/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.default&quot;/&gt;&#10;&lt;/sourceContainers&gt;&#10;&lt;/sourceLookupDirector&gt;&#10;"/>
+<stringAttribute key="org.eclipse.debug.core.source_locator_memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;sourceLookupDirector&gt;&#10;&lt;sourceContainers duplicates=&quot;false&quot;&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;folder nest=&amp;quot;false&amp;quot; path=&amp;quot;/webdsl/src/bin&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.folder&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;folder nest=&amp;quot;false&amp;quot; path=&amp;quot;/mobl/editor/java/trans&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.folder&quot;/&gt;&#10;&lt;container memento=&quot;&amp;l!
 t;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;folder nest=&amp;quot;false&amp;quot; path=&amp;quot;/nwl/editor/java&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.folder&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;default/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.default&quot;/&gt;&#10;&lt;/sourceContainers&gt;&#10;&lt;/sourceLookupDirector&gt;&#10;"/>
 <listAttribute key="org.eclipse.debug.ui.favoriteGroups">
 <listEntry value="org.eclipse.debug.ui.launchGroup.debug"/>
 <listEntry value="org.eclipse.debug.ui.launchGroup.run"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	Wed Aug 25 12:22:00 2010	(r21173)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	Wed Aug 25 12:26:00 2010	(r21174)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.5.3.jar" id="org.strategoxt.imp" version="0.5.3">
+   <feature url="features/org.strategoxt.imp_0.5.3.1.jar" id="org.strategoxt.imp" version="0.5.3.1">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">

From L.C.L.Kats at tudelft.nl  Thu Aug 26 15:30:25 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 26 Aug 2010 13:30:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21175 - in
	spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.nativebundle org.strategoxt.imp.nativebundle/n...
Message-ID: <201008261330.o7QDUP5m018656@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: Thu Aug 26 13:30:15 2010
New Revision: 21175
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21175&sc=1

Log:
Release 0.5.3.2:
- Eliminated cygwin (Spoofax/114) with new executables built by Rob Vermaas
- Eliminating cygwin also addresses Spoofax/6 and Spoofax/47.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str
   spoofax-imp/trunk/org.strategoxt.imp.nativebundle/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.nativebundle/native/linux/implodePT
   spoofax-imp/trunk/org.strategoxt.imp.nativebundle/native/linux/sdf2table
   spoofax-imp/trunk/org.strategoxt.imp.nativebundle/native/windows/implodePT.exe
   spoofax-imp/trunk/org.strategoxt.imp.nativebundle/native/windows/sdf2table.exe
   spoofax-imp/trunk/org.strategoxt.imp.nativebundle/src/org/strategoxt/imp/nativebundle/SDFBundleCommand.java
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Wed Aug 25 12:26:00 2010	(r21174)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Thu Aug 26 13:30:15 2010	(r21175)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.5.3.1"
+      version="0.5.3.2"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str	Wed Aug 25 12:26:00 2010	(r21174)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str	Thu Aug 26 13:30:15 2010	(r21175)
@@ -75,7 +75,6 @@
     (node, position, ast, path, project-path) ->
     ["String", "Int" | proposals]
     where
-      <debug(!"Complete: ")> node;
       if !node => Type(COMPLETION(prefix)) then
         proposals := <all-keys-GetEntity>
       end

Modified: spoofax-imp/trunk/org.strategoxt.imp.nativebundle/build.properties
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.nativebundle/build.properties	Wed Aug 25 12:26:00 2010	(r21174)
+++ spoofax-imp/trunk/org.strategoxt.imp.nativebundle/build.properties	Thu Aug 26 13:30:15 2010	(r21175)
@@ -5,6 +5,5 @@
                native/
 bin.excludes = native/macosx/.svn/,\
                native/linux/.svn/,\
-               native/cygwin/.svn/,\
-               native/.svn/,\
-               native/windows
+               native/windows/.svn/,\
+               native/.svn/

Modified: spoofax-imp/trunk/org.strategoxt.imp.nativebundle/native/linux/implodePT
==============================================================================
Binary file (source and/or target). No diff available.

Modified: spoofax-imp/trunk/org.strategoxt.imp.nativebundle/native/linux/sdf2table
==============================================================================
Binary file (source and/or target). No diff available.

Modified: spoofax-imp/trunk/org.strategoxt.imp.nativebundle/native/windows/implodePT.exe
==============================================================================
Binary file (source and/or target). No diff available.

Modified: spoofax-imp/trunk/org.strategoxt.imp.nativebundle/native/windows/sdf2table.exe
==============================================================================
Binary file (source and/or target). No diff available.

Modified: spoofax-imp/trunk/org.strategoxt.imp.nativebundle/src/org/strategoxt/imp/nativebundle/SDFBundleCommand.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.nativebundle/src/org/strategoxt/imp/nativebundle/SDFBundleCommand.java	Wed Aug 25 12:26:00 2010	(r21174)
+++ spoofax-imp/trunk/org.strategoxt.imp.nativebundle/src/org/strategoxt/imp/nativebundle/SDFBundleCommand.java	Thu Aug 26 13:30:15 2010	(r21175)
@@ -9,9 +9,6 @@
 import java.io.Writer;
 import java.net.URL;
 import java.util.Arrays;
-import java.util.HashMap;
-import java.util.Map;
-import java.util.Map.Entry;
 
 import org.eclipse.core.runtime.FileLocator;
 import org.eclipse.core.runtime.Platform;
@@ -42,8 +39,6 @@
 	
 	private final xtc_command_1_0 proceed = xtc_command_1_0.instance;
 	
-	private final String[] windowsEnvironment = createWindowsEnvironment();
-	
 	private String binaryPath;
 	
 	private String binaryExtension;
@@ -75,11 +70,11 @@
 		if (os.equals(Platform.OS_LINUX)) {
 			subdir = "linux";
 		} else if (os.equals(Platform.OS_WIN32)){
-			subdir = "cygwin";
+			subdir = "windows";
 		} else if (os.equals(Platform.OS_MACOSX)) {
 			subdir = "macosx";
 		} else {
-			throw new UnsupportedOperationException("Platform is not supported"); // TODO: print platform
+			throw new UnsupportedOperationException("Platform is not supported: " + Platform.getOS());
 		}
 		
 		URL url = Activator.getInstance().getContext().getBundle().getResource(NATIVE_PATH + subdir);
@@ -146,11 +141,6 @@
 
 	private boolean invoke(Context context, String command, IStrategoTerm[] argList) {
 		String[] commandArgs = SSL_EXT_call.toCommandArgs(binaryPath + command, argList);
-		// Disabled this check since Windows x64 might identify differently?
-		//String[] environment = Platform.getOS() == Platform.OS_WIN32
-		//	? createWindowsEnvironment()
-		//	: null;
-		String[] environment = windowsEnvironment;
 		IOAgent io = context.getIOAgent();
 		
 		try {
@@ -159,40 +149,26 @@
 			Writer err = io.getWriter(IOAgent.CONST_STDERR);
 			
 			err.write("Invoking native tool " + binaryPath + command + binaryExtension + " " + Arrays.toString(argList) + "\n");
-			int result = new NativeCallHelper().call(commandArgs, environment, new File(io.getWorkingDir()), out, err);
+			int result = new NativeCallHelper().call(commandArgs, new File(io.getWorkingDir()), out, err);
 			if (result != 0) {
 				Environment.logException("Native tool " + command
 						+ " exited with error code " + result
 						+ "\nCommand:\n  " + Arrays.toString(commandArgs)
-						+ "\nEnvironment:\n " + Arrays.toString(environment)
 						+ "\nWorking dir:\n  " + io.getWorkingDir());
 			}
 			return result == 0;
 		} catch (IOException e) {
 			throw new StrategoException("Could not call native tool " + command
 					+ "\nCommand:\n  " + Arrays.toString(commandArgs)
-					+ "\nEnvironment:\n " + Arrays.toString(environment)
 					+ "\nWorking dir:\n  " + io.getWorkingDir(), e);
 		} catch (InterruptedException e) {
 			throw new StrategoException("Could not call " + command, e);
 		} catch (RuntimeException e) {
 			throw new StrategoException("Could not call native tool " + command
 					+ "\nCommand:\n  " + Arrays.toString(commandArgs)
-					+ "\nEnvironment:\n " + Arrays.toString(environment)
 					+ "\nWorking dir:\n  " + io.getWorkingDir(), e);
 		}
 	}
-	
-	private static String[] createWindowsEnvironment() {
-		Map<String, String> envp = new HashMap<String, String>(System.getenv());
-		envp.put("CYGWIN", "nodosfilewarning");
-		String[] result = new String[envp.size()];
-		int i = 0;
-		for (Entry<String, String> entry : envp.entrySet()) {
-			result[i++] = entry.getKey() + "=" + entry.getValue();
-		}
-		return result;
-	}
 
 	private boolean makeExecutable(IOAgent io, String command) {
 		try {

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	Wed Aug 25 12:26:00 2010	(r21174)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	Thu Aug 26 13:30:15 2010	(r21175)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.5.3.1.jar" id="org.strategoxt.imp" version="0.5.3.1">
+   <feature url="features/org.strategoxt.imp_0.5.3.2.jar" id="org.strategoxt.imp" version="0.5.3.2">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">

From g.h.wachsmuth at tudelft.nl  Fri Aug 27 15:41:19 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Fri, 27 Aug 2010 13:41:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21178 - in
	tiger-spoofax/syntax: . lexical
Message-ID: <201008271341.o7RDfJP1008660@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Fri Aug 27 13:41:18 2010
New Revision: 21178
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21178&sc=1

Log:
reduced syntax definition to cover only constructs from the book "Modern Compiler Implementation in ML"

Added:
   tiger-spoofax/syntax/lexical/
   tiger-spoofax/syntax/lexical/Tiger-Comments.sdf
      - copied, changed from r21147, tiger-spoofax/syntax/Tiger-Comments.sdf
   tiger-spoofax/syntax/lexical/Tiger-Constants.sdf
      - copied, changed from r21147, tiger-spoofax/syntax/Tiger-Constants.sdf
   tiger-spoofax/syntax/lexical/Tiger-Identifiers.sdf
      - copied, changed from r21147, tiger-spoofax/syntax/Tiger-Identifiers.sdf
   tiger-spoofax/syntax/lexical/Tiger-Whitespace.sdf
      - copied, changed from r21147, tiger-spoofax/syntax/Tiger-Whitespace.sdf
Deleted:
   tiger-spoofax/syntax/Tiger-Comments.sdf
   tiger-spoofax/syntax/Tiger-Constants.sdf
   tiger-spoofax/syntax/Tiger-Identifiers.sdf
   tiger-spoofax/syntax/Tiger-Whitespace.sdf
Modified:
   tiger-spoofax/syntax/Tiger-Declarations.sdf
   tiger-spoofax/syntax/Tiger-Expressions.sdf
   tiger-spoofax/syntax/Tiger-Statements.sdf
   tiger-spoofax/syntax/Tiger.sdf

Modified: tiger-spoofax/syntax/Tiger-Declarations.sdf
==============================================================================
--- tiger-spoofax/syntax/Tiger-Declarations.sdf	Fri Aug 27 13:06:07 2010	(r21177)
+++ tiger-spoofax/syntax/Tiger-Declarations.sdf	Fri Aug 27 13:41:18 2010	(r21178)
@@ -1,42 +1,43 @@
 module Tiger-Declarations
 
 imports 
+	lexical/Tiger-Identifiers
 	Tiger-Expressions 
 	Tiger-Statements
 	
 exports
-	
-	sorts 
-		Module
-  
-  	context-free syntax
-		"module" Id Dec* "end"		-> Module {cons("Module")}
-		"import" Id					-> Dec    {cons("Import")}
-
-  	sorts 
-  		Declarations
-  
+	sorts
+		Decs
+		Dec
+		TypeId
+		
 	context-free syntax
 
-		"declarations" Dec*					-> Declarations {cons("Declarations")}
-
-		"var" Id TypeAn ":=" Exp							-> Dec  {cons("VarDec")}
-		"var" Id TypeAn										-> Dec  {cons("VarDecNoInit")}
-		"type" Id "=" Type									-> Dec {cons("TypeDec")}
-		"function" Id "(" {FArg ","}* ")" TypeAn "=" Exp	-> Dec {cons("FunDec")}
+		Dec* 	-> Decs
+		
+	context-free syntax	%% Data Types
+		
+		"type" Id "=" Type 		-> Dec {cons("TypeDec")}
+		
+		TypeId					-> Type   {cons("NameTy")}
+		"{" {Field ","}* "}"	-> Type   {cons("RecordTy")}
+		"array" "of" TypeId	 	-> Type   {cons("ArrayTy")}
+		
+		Id ":" TypeId	 		-> Field  {cons("Field")}
+		
+		Id						-> TypeId {cons("Tid")}
 
-		"let" Dec* "in" {Exp ";"}* "end"	-> Exp  {cons("Let")}
-    
-		Id TypeAn				-> FArg {cons("FArg")}
+	context-free syntax %% Variables
+		
+		"var" Id TypeAn ":=" Exp	-> Dec  {cons("VarDec")}
 
-								-> TypeAn {cons("NoTp")}
-		":" TypeId				-> TypeAn {cons("Tp")}
+									-> TypeAn {cons("NoTy")}
+		":" TypeId					-> TypeAn {cons("Ty")}
 
-		%%"<" TypeId ">"			-> TypeId {cons("Code")}
-		Id						-> TypeId {cons("Tid")}
 
-		TypeId					-> Type   {cons("NameTy")}
-		"{" {Field ","}* "}"	-> Type   {cons("RecordTy")}
-		"array" "of" TypeId	 	-> Type   {cons("ArrayTy")}
+	context-free syntax %% Functions
+		
+		"function" Id "(" {FArg ","}* ")" TypeAn "=" Exp	-> Dec {cons("FunDec")}
 
-		Id ":" TypeId	 		-> Field  {cons("Field")}
\ No newline at end of file
+		Id ":" TypeId				-> FArg {cons("FArg")}
+		
\ No newline at end of file

Modified: tiger-spoofax/syntax/Tiger-Expressions.sdf
==============================================================================
--- tiger-spoofax/syntax/Tiger-Expressions.sdf	Fri Aug 27 13:06:07 2010	(r21177)
+++ tiger-spoofax/syntax/Tiger-Expressions.sdf	Fri Aug 27 13:41:18 2010	(r21178)
@@ -1,77 +1,72 @@
 module Tiger-Expressions
 
 imports 
-	Tiger-Constants
-	Tiger-Identifiers 
+	lexical/Tiger-Constants
+	lexical/Tiger-Identifiers 
 	
 exports
 
-	sorts 
-		Exp 
-		Var
+	sorts
+		LValue
+		Exp
+		
+	context-free syntax %% L-Values
+		
+		Id							-> LValue {cons("Var")}
+		LValue "." Id				-> LValue {cons("FieldVar")}
+		LValue "[" {Exp ","}+ "]"	-> LValue {cons("Subscript")}
+
+	context-free syntax %% Expressions
+		
 		
 	context-free syntax
 		
-		IntConst					-> Exp {cons("Int")}
-		RealConst					-> Exp {cons("Real")}
-		StrConst					-> Exp {cons("String")}
-		"nil"						-> Exp {cons("NilExp")}
-		
-		"-" Exp			-> Exp {cons("Uminus")}
-		
-		Exp "**" Exp	-> Exp {cons("Power")}
-		Exp "*"  Exp	-> Exp {cons("Times")}
-		Exp "/"  Exp	-> Exp {cons("Divide")}
-		Exp "+"  Exp	-> Exp {cons("Plus")}
-		Exp "-"  Exp	-> Exp {cons("Minus")}
-		
-		Exp "="  Exp	-> Exp {cons("Eq")}
-		Exp "<>" Exp	-> Exp {cons("Neq")}
-		Exp ">"  Exp	-> Exp {cons("Gt")}
-		Exp "<"  Exp	-> Exp {cons("Lt")}
-		Exp ">=" Exp	-> Exp {cons("Geq")}
-		Exp "<=" Exp	-> Exp {cons("Leq")}
-		
-		"true"			-> Exp {cons("True")}
-		"false"			-> Exp {cons("False")}
-		Exp "&"  Exp	-> Exp {cons("And")}
-		Exp "|"  Exp	-> Exp {cons("Or")}
-  
-		LValue						-> Exp
-		Id "(" {Exp ","}* ")" 		-> Exp {cons("Call")}
+		LValue				-> Exp
+		"nil"				-> Exp {cons("NilExp")}
+		"(" {Exp ";"}* ")"	-> Exp {cons("Seq")}
+		
+		IntConst			-> Exp {cons("Int")}
+		StrConst			-> Exp {cons("String")}
+		
+		"-" Exp				-> Exp {cons("Uminus")}
+		
+		Id "(" {Exp ","}* ")" 	-> Exp {cons("Call")}
+		
+		Exp "+"  Exp		-> Exp {left, cons("Plus")}
+		Exp "-"  Exp		-> Exp {left, cons("Minus")}
+		Exp "*"  Exp		-> Exp {left, cons("Times")}
+		Exp "/"  Exp		-> Exp {left, cons("Divide")}
+		
+		Exp "="  Exp		-> Exp {non-assoc, cons("Eq")}
+		Exp "<>" Exp		-> Exp {non-assoc, cons("Neq")}
+		Exp ">"  Exp		-> Exp {non-assoc, cons("Gt")}
+		Exp "<"  Exp		-> Exp {non-assoc, cons("Lt")}
+		Exp ">=" Exp		-> Exp {non-assoc, cons("Geq")}
+		Exp "<=" Exp		-> Exp {non-assoc, cons("Leq")}
 		
+		Exp "&"  Exp		-> Exp {left, cons("And")}
+		Exp "|"  Exp		-> Exp {left, cons("Or")}
+  
 		TypeId "[" {Exp ","}+ "]" "of" Exp	-> Exp {cons("Array")}
 		TypeId "{" {InitField ","}* "}"		-> Exp {cons("Record")}
 	
-	    Id "=" Exp					-> InitField {cons("InitField")}
-
-		Var							-> LValue 
-		LValue "." Id				-> LValue {cons("FieldVar")}
-		LValue "[" {Sub ","}+ "]"	-> LValue {cons("Subscript")}
-	
-		Exp							-> Sub {cons("Scalar")}
-		Exp ":" Exp					-> Sub {cons("Range")}
-	
-		Id							-> Var {cons("Var")}
+	    Id "=" Exp			-> InitField {cons("InitField")}
 
 	context-free priorities
 		{
 		  	"-" Exp						-> Exp
 			LValue "." Id				-> LValue
-			LValue "[" {Sub ","}+ "]"	-> LValue 
+			LValue "[" {Exp ","}+ "]"	-> LValue 
 		}
-		> {left:
-			Exp "**"  Exp 	-> Exp 
-	    } 
-		> {left:
+		> {
 			Exp "*"  Exp 	-> Exp 
 			Exp "/"  Exp 	-> Exp
 		} 
-		> {left:
+		> {
 			Exp "+"  Exp 	-> Exp
 			Exp "-"  Exp 	-> Exp
 	    }
-		> {non-assoc:
+		> {
 			Exp "="  Exp 	-> Exp
 			Exp "<>" Exp	-> Exp
 			Exp ">"  Exp	-> Exp
@@ -79,10 +74,10 @@
 			Exp ">=" Exp	-> Exp
 			Exp "<=" Exp	-> Exp
 		} 
-		> {left:
+		> {
 			Exp "&"  Exp	-> Exp 
 	    }
-	    > {left:
+	    > {
 			Exp "|"  Exp	-> Exp 
 	    } 
 		>  TypeId "[" {Exp ","}+ "]"  "of" Exp	-> Exp

Modified: tiger-spoofax/syntax/Tiger-Statements.sdf
==============================================================================
--- tiger-spoofax/syntax/Tiger-Statements.sdf	Fri Aug 27 13:06:07 2010	(r21177)
+++ tiger-spoofax/syntax/Tiger-Statements.sdf	Fri Aug 27 13:41:18 2010	(r21178)
@@ -1,35 +1,35 @@
 module Tiger-Statements
 
 imports 
+	lexical/Tiger-Identifiers
 	Tiger-Expressions 
-
+	Tiger-Declarations
+	
 exports
 
 	context-free syntax
 
 		LValue ":=" Exp					-> Exp {cons("Assign")}
-		"(" {Exp ";"}* ")"				-> Exp {cons("Seq")}
 		
 		"if" Exp "then" Exp "else" Exp	-> Exp {cons("IfThenElse")}
-		"if" Exp "then" Exp				-> Exp {cons("IfThen")}
-		"if" Exp "goto" Id				-> Exp {cons("IfGoto")}
+		"if" Exp "then" Exp				-> Exp {prefer, cons("IfThen")}
 		
-		"while" Exp "do" Exp							-> Exp {cons("While")}
-		"repeat" Exp "whilst" Exp						-> Exp {cons("DoWhile")}  		
-		"for" Id ":=" Exp "to" Exp "do" Exp 			-> Exp {cons("For")}
-		"break" 			         					-> Exp {cons("Break")}
+		"while" Exp "do" Exp				-> Exp {cons("While")}
+		"for" Id ":=" Exp "to" Exp "do" Exp -> Exp {cons("For")}
+		"break"								-> Exp {cons("Break")}
 		
 		"[" {LValue ","}* "]" ":=" "[" {Exp ","}* "]" 	-> Exp {cons("ParAssign")}
 		
+		"let" Decs "in" {Exp ";"}* "end"	-> Exp {cons("Let")}
+		
 	context-free priorities
 
-		  Exp "|" Exp			-> Exp {left}
+		  Exp "|" Exp			-> Exp 
 		> LValue ":=" Exp		-> Exp 
-		> {right:
+		> {
 			  "if" Exp "then" Exp "else" Exp		-> Exp
 			  "if" Exp "then" Exp					-> Exp
 			  "while" Exp "do" Exp					-> Exp
-			  "repeat" Exp "whilst" Exp				-> Exp
 			  "for" Id ":=" Exp "to" Exp "do" Exp 	-> Exp
 	      }
 		> {Exp ";"}+ ";" {Exp ";"}+ -> {Exp ";"}+

Modified: tiger-spoofax/syntax/Tiger.sdf
==============================================================================
--- tiger-spoofax/syntax/Tiger.sdf	Fri Aug 27 13:06:07 2010	(r21177)
+++ tiger-spoofax/syntax/Tiger.sdf	Fri Aug 27 13:41:18 2010	(r21178)
@@ -1,11 +1,10 @@
 module Tiger
 
 imports
-	Tiger-Whitespace
-	Tiger-Comments
-	Tiger-Constants
-	Tiger-Identifiers
-	Tiger-Declarations
+	lexical/Tiger-Whitespace
+	lexical/Tiger-Comments
+	Tiger-Expressions
+	Tiger-Statements
 	
 exports
 
@@ -14,6 +13,4 @@
 
 	context-free syntax
   
-    Module			-> Start
-    Declarations	-> Start
-    Exp				-> Start
\ No newline at end of file
+		Exp				-> Start
\ No newline at end of file

Copied and modified: tiger-spoofax/syntax/lexical/Tiger-Comments.sdf (from r21147, tiger-spoofax/syntax/Tiger-Comments.sdf)
==============================================================================
--- tiger-spoofax/syntax/Tiger-Comments.sdf	Wed Aug 11 09:06:41 2010	(r21147, copy source)
+++ tiger-spoofax/syntax/lexical/Tiger-Comments.sdf	Fri Aug 27 13:41:18 2010	(r21178)
@@ -1,16 +1,24 @@
-module Tiger-Comments
+module lexical/Tiger-Comments
 
 exports
-
 	lexical syntax
     	
-		"/*" CommChar* "*/"	-> LAYOUT
-		"//" ~[\n]* [\n]	-> LAYOUT
+		Comment        		-> LAYOUT
+		
+		"/*" CommChar* "*/"	-> Comment
 		~[\*]				-> CommChar 
     	Asterisk			-> CommChar
     	[\*]				-> Asterisk
 
+	lexical syntax
+		
+		Comment				-> CommChar
+		
 	lexical restrictions
 		
 		Asterisk -/- [\/]
 
+	context-free restrictions
+  
+		LAYOUT? -/- [\/].[\*]
+

Copied and modified: tiger-spoofax/syntax/lexical/Tiger-Constants.sdf (from r21147, tiger-spoofax/syntax/Tiger-Constants.sdf)
==============================================================================
--- tiger-spoofax/syntax/Tiger-Constants.sdf	Wed Aug 11 09:06:41 2010	(r21147, copy source)
+++ tiger-spoofax/syntax/lexical/Tiger-Constants.sdf	Fri Aug 27 13:41:18 2010	(r21178)
@@ -1,17 +1,12 @@
-module Tiger-Constants
+module lexical/Tiger-Constants
 
 exports
-
+	sorts IntConst StrConst
+	
 	lexical syntax
 		
 		[0-9]+					-> IntConst
 		
-		IntConst "." IntConst					-> RealConst {cons("RealConstNoExp")}
-		IntConst "." IntConst "e" Sign IntConst -> RealConst {cons("RealConst")}
-		
-		"+"						-> Sign
-		"-"						-> Sign
-		
 		"\"" StrChar* "\""		-> StrConst
 
 		~[\\\"\n]				-> StrChar
@@ -21,7 +16,8 @@
 		[\\] [0-9][0-9][0-9]	-> StrChar
 		[\\] [\"]				-> StrChar
 		[\\] [\\]				-> StrChar
-		[\\] [\"]				-> StrChar
 		[\\] [\ \t\n]+ [\\]		-> StrChar
-		
-		
\ No newline at end of file
+
+	lexical restrictions
+
+		IntConst -/- [0-9]    

Copied and modified: tiger-spoofax/syntax/lexical/Tiger-Identifiers.sdf (from r21147, tiger-spoofax/syntax/Tiger-Identifiers.sdf)
==============================================================================
--- tiger-spoofax/syntax/Tiger-Identifiers.sdf	Wed Aug 11 09:06:41 2010	(r21147, copy source)
+++ tiger-spoofax/syntax/lexical/Tiger-Identifiers.sdf	Fri Aug 27 13:41:18 2010	(r21178)
@@ -1,7 +1,8 @@
-module Tiger-Identifiers
+module lexical/Tiger-Identifiers
 
 exports
-
+	sorts Id
+	
 	lexical syntax
 
 		[a-zA-Z][a-zA-Z0-9\_]*	-> Id

Copied and modified: tiger-spoofax/syntax/lexical/Tiger-Whitespace.sdf (from r21147, tiger-spoofax/syntax/Tiger-Whitespace.sdf)
==============================================================================
--- tiger-spoofax/syntax/Tiger-Whitespace.sdf	Wed Aug 11 09:06:41 2010	(r21147, copy source)
+++ tiger-spoofax/syntax/lexical/Tiger-Whitespace.sdf	Fri Aug 27 13:41:18 2010	(r21178)
@@ -1,11 +1,11 @@
-module Tiger-Whitespace
+module lexical/Tiger-Whitespace
 exports
 
 	lexical syntax
 		
-		[\ \t\n\13] -> LAYOUT
+		[\ \t\n\r] -> LAYOUT
   
 	context-free restrictions
     
-		LAYOUT? -/- [\ \t\n]
+		LAYOUT? -/- [\ \t\n\r]
 

From g.h.wachsmuth at tudelft.nl  Sat Aug 28 11:30:51 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Sat, 28 Aug 2010 09:30:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21179 -
	tiger-spoofax/syntax
Message-ID: <201008280930.o7S9UpcP026212@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Sat Aug 28 09:30:50 2010
New Revision: 21179
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21179&sc=1

Log:
reduced syntax definition to cover only constructs from the book "Modern Compiler Implementation in ML"

Deleted:
   tiger-spoofax/syntax/Tiger.generated.pp
Modified:
   tiger-spoofax/syntax/Tiger-Declarations.sdf
   tiger-spoofax/syntax/Tiger-Expressions.sdf
   tiger-spoofax/syntax/Tiger-Statements.sdf
   tiger-spoofax/syntax/Tiger.sdf

Modified: tiger-spoofax/syntax/Tiger-Declarations.sdf
==============================================================================
--- tiger-spoofax/syntax/Tiger-Declarations.sdf	Fri Aug 27 13:41:18 2010	(r21178)
+++ tiger-spoofax/syntax/Tiger-Declarations.sdf	Sat Aug 28 09:30:50 2010	(r21179)
@@ -6,10 +6,7 @@
 	Tiger-Statements
 	
 exports
-	sorts
-		Decs
-		Dec
-		TypeId
+	sorts Dec TypeId
 		
 	context-free syntax
 
@@ -29,15 +26,12 @@
 
 	context-free syntax %% Variables
 		
-		"var" Id TypeAn ":=" Exp	-> Dec  {cons("VarDec")}
-
-									-> TypeAn {cons("NoTy")}
-		":" TypeId					-> TypeAn {cons("Ty")}
-
+		"var" Id            ":=" Exp	-> Dec  {cons("VarDec")}
+		"var" Id ":" TypeId ":=" Exp	-> Dec  {cons("VarDec")}
 
 	context-free syntax %% Functions
 		
-		"function" Id "(" {FArg ","}* ")" TypeAn "=" Exp	-> Dec {cons("FunDec")}
+		"function" Id "(" {FArg ","}* ")"            "=" Exp	-> Dec {cons("FunDec")}
+		"function" Id "(" {FArg ","}* ")" ":" TypeId "=" Exp	-> Dec {cons("FunDec")}
 
-		Id ":" TypeId				-> FArg {cons("FArg")}
-		
\ No newline at end of file
+		Id ":" TypeId				-> FArg {cons("FArg")}
\ No newline at end of file

Modified: tiger-spoofax/syntax/Tiger-Expressions.sdf
==============================================================================
--- tiger-spoofax/syntax/Tiger-Expressions.sdf	Fri Aug 27 13:41:18 2010	(r21178)
+++ tiger-spoofax/syntax/Tiger-Expressions.sdf	Sat Aug 28 09:30:50 2010	(r21179)
@@ -5,25 +5,22 @@
 	lexical/Tiger-Identifiers 
 	
 exports
-
-	sorts
-		LValue
-		Exp
+	sorts LValue Exp
 		
 	context-free syntax %% L-Values
 		
-		Id							-> LValue {cons("Var")}
-		LValue "." Id				-> LValue {cons("FieldVar")}
-		LValue "[" {Exp ","}+ "]"	-> LValue {cons("Subscript")}
+		Id					-> LValue {cons("Var")}
+		LValue "." Id		-> LValue {cons("FieldVar")}
+		LValue "[" Exp "]"	-> LValue {cons("Subscript")}
 
 	context-free syntax %% Expressions
 		
-		
-	context-free syntax
-		
 		LValue				-> Exp
 		"nil"				-> Exp {cons("NilExp")}
-		"(" {Exp ";"}* ")"	-> Exp {cons("Seq")}
+		
+		"(" ")"				-> Exp {cons("NoVal")}
+		"(" Exp ")"	        -> Exp {bracket, prefer}
+		"(" {Exp ";"}+ ")"	-> Exp {cons("Seq")}
 		
 		IntConst			-> Exp {cons("Int")}
 		StrConst			-> Exp {cons("String")}
@@ -47,17 +44,13 @@
 		Exp "&"  Exp		-> Exp {left, cons("And")}
 		Exp "|"  Exp		-> Exp {left, cons("Or")}
   
-		TypeId "[" {Exp ","}+ "]" "of" Exp	-> Exp {cons("Array")}
-		TypeId "{" {InitField ","}* "}"		-> Exp {cons("Record")}
-	
+		TypeId "{" {InitField ","}* "}"	-> Exp {cons("Record")}
+		TypeId "[" Exp "]" "of" Exp		-> Exp {cons("Array")}
+			
 	    Id "=" Exp			-> InitField {cons("InitField")}
 
 	context-free priorities
-		{
-		  	"-" Exp						-> Exp
-			LValue "." Id				-> LValue
-			LValue "[" {Exp ","}+ "]"	-> LValue 
-		}
+			"-" Exp			-> Exp
 		> {
 			Exp "*"  Exp 	-> Exp 
 			Exp "/"  Exp 	-> Exp
@@ -74,11 +67,8 @@
 			Exp ">=" Exp	-> Exp
 			Exp "<=" Exp	-> Exp
 		} 
-		> {
+		> 
 			Exp "&"  Exp	-> Exp 
-	    }
-	    > {
+	    > 
 			Exp "|"  Exp	-> Exp 
-	    } 
-		>  TypeId "[" {Exp ","}+ "]"  "of" Exp	-> Exp
-
+	   

Modified: tiger-spoofax/syntax/Tiger-Statements.sdf
==============================================================================
--- tiger-spoofax/syntax/Tiger-Statements.sdf	Fri Aug 27 13:41:18 2010	(r21178)
+++ tiger-spoofax/syntax/Tiger-Statements.sdf	Sat Aug 28 09:30:50 2010	(r21179)
@@ -6,22 +6,22 @@
 	Tiger-Declarations
 	
 exports
-
+	
+	sorts Exp
+	
 	context-free syntax
 
-		LValue ":=" Exp					-> Exp {cons("Assign")}
+		LValue ":=" Exp						-> Exp {cons("Assign")}
 		
-		"if" Exp "then" Exp "else" Exp	-> Exp {cons("IfThenElse")}
-		"if" Exp "then" Exp				-> Exp {prefer, cons("IfThen")}
+		"let" Dec* "in" {Exp ";"}* "end" 	-> Exp {cons("Let")}
+		
+		"if" Exp "then" Exp "else" Exp		-> Exp {avoid, cons("IfThenElse")}
+		"if" Exp "then" Exp					-> Exp {cons("IfThen")}
 		
 		"while" Exp "do" Exp				-> Exp {cons("While")}
 		"for" Id ":=" Exp "to" Exp "do" Exp -> Exp {cons("For")}
 		"break"								-> Exp {cons("Break")}
 		
-		"[" {LValue ","}* "]" ":=" "[" {Exp ","}* "]" 	-> Exp {cons("ParAssign")}
-		
-		"let" Decs "in" {Exp ";"}* "end"	-> Exp {cons("Let")}
-		
 	context-free priorities
 
 		  Exp "|" Exp			-> Exp 

Modified: tiger-spoofax/syntax/Tiger.sdf
==============================================================================
--- tiger-spoofax/syntax/Tiger.sdf	Fri Aug 27 13:41:18 2010	(r21178)
+++ tiger-spoofax/syntax/Tiger.sdf	Sat Aug 28 09:30:50 2010	(r21179)
@@ -5,6 +5,7 @@
 	lexical/Tiger-Comments
 	Tiger-Expressions
 	Tiger-Statements
+	Tiger-Declarations
 	
 exports
 

From g.h.wachsmuth at tudelft.nl  Sat Aug 28 11:31:25 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Sat, 28 Aug 2010 09:31:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21180 -
	tiger-spoofax/editor
Message-ID: <201008280931.o7S9VPjX026216@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Sat Aug 28 09:31:25 2010
New Revision: 21180
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21180&sc=1

Log:
syntactic editor services

Modified:
   tiger-spoofax/editor/Tiger-Colorer.esv
   tiger-spoofax/editor/Tiger-Completions.esv
   tiger-spoofax/editor/Tiger-Folding.esv
   tiger-spoofax/editor/Tiger-Outliner.esv

Modified: tiger-spoofax/editor/Tiger-Colorer.esv
==============================================================================
--- tiger-spoofax/editor/Tiger-Colorer.esv	Sat Aug 28 09:30:50 2010	(r21179)
+++ tiger-spoofax/editor/Tiger-Colorer.esv	Sat Aug 28 09:31:25 2010	(r21180)
@@ -2,8 +2,14 @@
 
 imports Tiger-Colorer.generated
 
-colorer
+colorer TU Delft colors
+
+TUDlavender		= 123 160 201
+
+colorer token-based highlighting
                                                                       
-  // This file can be used for custom colorer rules.                  
-  //                                                                  
-  // See the imported file for a brief introduction and examples.     
\ No newline at end of file
+	layout		: TUDlavender
+	StrConst	: darkgreen
+	TypeId		: blue
+	
+	
\ No newline at end of file

Modified: tiger-spoofax/editor/Tiger-Completions.esv
==============================================================================
--- tiger-spoofax/editor/Tiger-Completions.esv	Sat Aug 28 09:30:50 2010	(r21179)
+++ tiger-spoofax/editor/Tiger-Completions.esv	Sat Aug 28 09:31:25 2010	(r21180)
@@ -4,9 +4,6 @@
 
 completions
                                                                    
-  // This file is used to define content completion.               
-  //                                                               
-  // See the imported file for a brief introduction and examples.  
-                                                                   
-                                         
-  
\ No newline at end of file
+	completion keyword	: "function"
+	
+	completion template : "if " <e> " then\n\t" <s>
\ No newline at end of file

Modified: tiger-spoofax/editor/Tiger-Folding.esv
==============================================================================
--- tiger-spoofax/editor/Tiger-Folding.esv	Sat Aug 28 09:30:50 2010	(r21179)
+++ tiger-spoofax/editor/Tiger-Folding.esv	Sat Aug 28 09:31:25 2010	(r21180)
@@ -3,7 +3,6 @@
 imports Tiger-Folding.generated
 
 folding
-  
-  // This file can be used for custom folding rules.
-  //
-  // See the imported file for a brief introduction and examples.
\ No newline at end of file
+
+	Dec*
+	Dec.FunDec
\ No newline at end of file

Modified: tiger-spoofax/editor/Tiger-Outliner.esv
==============================================================================
--- tiger-spoofax/editor/Tiger-Outliner.esv	Sat Aug 28 09:30:50 2010	(r21179)
+++ tiger-spoofax/editor/Tiger-Outliner.esv	Sat Aug 28 09:31:25 2010	(r21180)
@@ -3,7 +3,9 @@
 imports Tiger-Outliner.generated
 
 outliner
-  
-  // This file can be used for custom outliner rules.
-  //
-  // See the imported file for a brief introduction and examples.
\ No newline at end of file
+
+	Dec*
+	Dec
+	Field
+	FArg
+	
\ No newline at end of file

From g.h.wachsmuth at tudelft.nl  Sat Aug 28 14:14:29 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Sat, 28 Aug 2010 12:14:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21181 - in
	tiger-spoofax/syntax: . lexical
Message-ID: <201008281214.o7SCETfe028260@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Sat Aug 28 12:14:29 2010
New Revision: 21181
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21181&sc=1

Log:
reduced syntax definition to cover only constructs from the book "Modern Compiler Implementation in ML"

Modified:
   tiger-spoofax/syntax/Tiger-Declarations.sdf
   tiger-spoofax/syntax/Tiger-Expressions.sdf
   tiger-spoofax/syntax/Tiger-Statements.sdf
   tiger-spoofax/syntax/lexical/Tiger-Comments.sdf

Modified: tiger-spoofax/syntax/Tiger-Declarations.sdf
==============================================================================
--- tiger-spoofax/syntax/Tiger-Declarations.sdf	Sat Aug 28 09:31:25 2010	(r21180)
+++ tiger-spoofax/syntax/Tiger-Declarations.sdf	Sat Aug 28 12:14:29 2010	(r21181)
@@ -14,7 +14,9 @@
 		
 	context-free syntax	%% Data Types
 		
-		"type" Id "=" Type 		-> Dec {cons("TypeDec")}
+		TypeDec+ -> Dec {cons("TypeDecs")}
+		
+		"type" Id "=" Type 		-> TypeDec {cons("TypeDec")}
 		
 		TypeId					-> Type   {cons("NameTy")}
 		"{" {Field ","}* "}"	-> Type   {cons("RecordTy")}
@@ -31,7 +33,11 @@
 
 	context-free syntax %% Functions
 		
-		"function" Id "(" {FArg ","}* ")"            "=" Exp	-> Dec {cons("FunDec")}
-		"function" Id "(" {FArg ","}* ")" ":" TypeId "=" Exp	-> Dec {cons("FunDec")}
+		FunDec+					-> Dec {avoid, cons("FunDecs")}
+		
+		"function" Id "(" {FArg ","}* ")"            "=" Exp	-> FunDec {cons("FunDec")}
+		"function" Id "(" {FArg ","}* ")" ":" TypeId "=" Exp	-> FunDec {cons("FunDec")}
 
-		Id ":" TypeId				-> FArg {cons("FArg")}
\ No newline at end of file
+		Id ":" TypeId				-> FArg {cons("FArg")}
+		
+	
\ No newline at end of file

Modified: tiger-spoofax/syntax/Tiger-Expressions.sdf
==============================================================================
--- tiger-spoofax/syntax/Tiger-Expressions.sdf	Sat Aug 28 09:31:25 2010	(r21180)
+++ tiger-spoofax/syntax/Tiger-Expressions.sdf	Sat Aug 28 12:14:29 2010	(r21181)
@@ -51,15 +51,15 @@
 
 	context-free priorities
 			"-" Exp			-> Exp
-		> {
+		> {left:
 			Exp "*"  Exp 	-> Exp 
 			Exp "/"  Exp 	-> Exp
 		} 
-		> {
+		> {left:
 			Exp "+"  Exp 	-> Exp
 			Exp "-"  Exp 	-> Exp
 	    }
-		> {
+		> {non-assoc:
 			Exp "="  Exp 	-> Exp
 			Exp "<>" Exp	-> Exp
 			Exp ">"  Exp	-> Exp

Modified: tiger-spoofax/syntax/Tiger-Statements.sdf
==============================================================================
--- tiger-spoofax/syntax/Tiger-Statements.sdf	Sat Aug 28 09:31:25 2010	(r21180)
+++ tiger-spoofax/syntax/Tiger-Statements.sdf	Sat Aug 28 12:14:29 2010	(r21181)
@@ -13,7 +13,7 @@
 
 		LValue ":=" Exp						-> Exp {cons("Assign")}
 		
-		"let" Dec* "in" {Exp ";"}* "end" 	-> Exp {cons("Let")}
+		"let" Decs "in" {Exp ";"}* "end" 	-> Exp {cons("Let")}
 		
 		"if" Exp "then" Exp "else" Exp		-> Exp {avoid, cons("IfThenElse")}
 		"if" Exp "then" Exp					-> Exp {cons("IfThen")}

Modified: tiger-spoofax/syntax/lexical/Tiger-Comments.sdf
==============================================================================
--- tiger-spoofax/syntax/lexical/Tiger-Comments.sdf	Sat Aug 28 09:31:25 2010	(r21180)
+++ tiger-spoofax/syntax/lexical/Tiger-Comments.sdf	Sat Aug 28 12:14:29 2010	(r21181)
@@ -6,9 +6,11 @@
 		Comment        		-> LAYOUT
 		
 		"/*" CommChar* "*/"	-> Comment
-		~[\*]				-> CommChar 
+		~[\/\*]				-> CommChar 
     	Asterisk			-> CommChar
+    	Slash				-> CommChar
     	[\*]				-> Asterisk
+		[\/]				-> Asterisk
 
 	lexical syntax
 		
@@ -17,6 +19,7 @@
 	lexical restrictions
 		
 		Asterisk -/- [\/]
+		Slash -/- [\*]
 
 	context-free restrictions
   

From g.h.wachsmuth at tudelft.nl  Sat Aug 28 14:18:51 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Sat, 28 Aug 2010 12:18:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21182 -
	tiger-spoofax/trans
Message-ID: <201008281218.o7SCIpTD028285@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Sat Aug 28 12:18:50 2010
New Revision: 21182
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21182&sc=1

Log:


Added:
   tiger-spoofax/trans/predefined.str
   tiger-spoofax/trans/project-types.str
   tiger-spoofax/trans/typing.str
Modified:
   tiger-spoofax/trans/analyze.str
   tiger-spoofax/trans/check.str
   tiger-spoofax/trans/desugar.str
   tiger-spoofax/trans/project-names.str
   tiger-spoofax/trans/rename.str
   tiger-spoofax/trans/tiger.str

Modified: tiger-spoofax/trans/analyze.str
==============================================================================
--- tiger-spoofax/trans/analyze.str	Sat Aug 28 12:14:29 2010	(r21181)
+++ tiger-spoofax/trans/analyze.str	Sat Aug 28 12:18:50 2010	(r21182)
@@ -8,16 +8,7 @@
 	include/Tiger
 	rename
 	
-rules
+strategies
 	
-	analyze : 
-		ast -> ast'
-		where
-			editor-init ; 
-			<rename-all> ast => ast' ;
-			rules(Analyzed: ast -> ast')
-	
-strategies	
- 	lazy-analyze = 
- 		Analyzed <+ analyze 
- 
+	analyse = rename-all
+

Modified: tiger-spoofax/trans/check.str
==============================================================================
--- tiger-spoofax/trans/check.str	Sat Aug 28 12:14:29 2010	(r21181)
+++ tiger-spoofax/trans/check.str	Sat Aug 28 12:18:50 2010	(r21182)
@@ -3,13 +3,14 @@
 imports
 	include/Tiger
 	rename
-
+	predefined
+	
 rules
 	
 	editor-error:
 		e at Tid(t) -> (e, $[Type [t] is not declared.])
 		where
-			not (<TypeDecl> t)
+			not (<primitive-type <+ TypeDecl> t)
 	
 	editor-error:
 		e at Var(x) -> (e, $[Variable [x] is not declared.])
@@ -19,19 +20,14 @@
 	editor-error:
 		e at Call(f, _) -> (e, $[Function [f] is not declared.])
 		where
-			not (<FunDecl> f)
-	
+			not (<standard-lib-fun <+ FunDecl> f)
+
+rules	
 	editor-warning: 
 		d at VarDec(x, _, _) -> (d, $[Variable [x] is never used.])
 		where
 			not (<UsedVar> x)
 	
-	
-	editor-warning: 
-		d at VarDecNoInit(x, _) -> (d, $[Variable [x] is never used.])
-		where
-			not (<UsedVar> x)
-	
 	editor-warning: 
 		d at FArg(x, _) -> (d, $[Argument [x] is never used.])
 		where

Modified: tiger-spoofax/trans/desugar.str
==============================================================================
--- tiger-spoofax/trans/desugar.str	Sat Aug 28 12:14:29 2010	(r21181)
+++ tiger-spoofax/trans/desugar.str	Sat Aug 28 12:18:50 2010	(r21182)
@@ -47,10 +47,7 @@
 				
 	desugar:
 		Divide(e1, e2) -> Bop(DIV(), e1, e2)
-				
-	desugar:
-		Power(e1, e2) -> Bop(POW(), e1, e2)
-				
+								
 	desugar:
 		Eq(e1, e2) -> Rop(EQ(), e1, e2)
 

Added: tiger-spoofax/trans/predefined.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/predefined.str	Sat Aug 28 12:18:50 2010	(r21182)
@@ -0,0 +1,54 @@
+module predefined
+
+imports
+	typing
+	
+rules
+	
+	primitive-type : 
+		"int" -> INT()
+	
+	primitive-type : 
+		"string" -> STRING()
+		
+	standard-lib-fun :
+		"print" -> ([STRING()], UNIT())
+		
+	standard-lib-fun :
+		"printint" -> ([INT()], UNIT())
+	
+	standard-lib-fun :
+		"flush" -> ([], UNIT())
+	
+	standard-lib-fun :
+		"getchar" -> ([], STRING())
+	
+	standard-lib-fun :
+		"ord" -> ([STRING()], INT())
+	
+	standard-lib-fun :
+		"chr" -> ([INT()], STRING())
+	
+	standard-lib-fun :
+		"size" -> ([STRING()], INT())
+	
+	standard-lib-fun :
+		"substring" -> ([STRING(), INT(), INT()], STRING())
+	
+	standard-lib-fun :
+		"concat" -> ([STRING(), STRING()], STRING())
+	
+	standard-lib-fun :
+		"not" -> ([INT()], INT())
+	
+	standard-lib-fun :
+		"exit" -> ([INT()], UNIT())
+	
+	standard-lib-fun :
+		"argv" -> ([INT()], STRING())
+	
+	standard-lib-fun :
+		"readval" -> ([STRING()], IGNORE())
+	
+	standard-lib-fun :
+		"writeval" -> ([STRING(), IGNORE()], INT())
\ No newline at end of file

Modified: tiger-spoofax/trans/project-names.str
==============================================================================
--- tiger-spoofax/trans/project-names.str	Sat Aug 28 12:14:29 2010	(r21181)
+++ tiger-spoofax/trans/project-names.str	Sat Aug 28 12:18:50 2010	(r21182)
@@ -10,10 +10,7 @@
 
 	var-name:
 		VarDec(x, _, _) -> x
-	
-	var-name:
-		VarDecNoInit(x, _) -> x
-	
+		
 	var-name:
 		For(x, _, _, _) -> x
 	

Added: tiger-spoofax/trans/project-types.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/project-types.str	Sat Aug 28 12:18:50 2010	(r21182)
@@ -0,0 +1,26 @@
+module project-types
+
+imports
+	include/Tiger
+	typing
+	
+rules
+	
+	type-type:
+		TypeDec(_, t) -> t
+
+	var-type:
+		VarDec(_, t, _) -> t
+		
+	var-type:
+		For(_, _, _, _) -> Tid("int")
+	
+	var-type:
+		FArg(_, t) -> t
+		
+	fun-type:
+		FunDec(_, as, t, _) -> (ts, t)
+		where
+			<map(var-type)> as => ts
+	
+		
\ No newline at end of file

Modified: tiger-spoofax/trans/rename.str
==============================================================================
--- tiger-spoofax/trans/rename.str	Sat Aug 28 12:14:29 2010	(r21181)
+++ tiger-spoofax/trans/rename.str	Sat Aug 28 12:18:50 2010	(r21182)
@@ -51,7 +51,7 @@
     		rules(VarDecl: y -> d)
     		
 	rename:
-    	d at VarDecNoInit(x, t) -> VarDecNoInit(y, t')
+    	d at VarDec(x, t) -> VarDec(y, t')
     	where 
     		<rename-all> t => t' ;
     		<new-var> x => y ;

Modified: tiger-spoofax/trans/tiger.str
==============================================================================
--- tiger-spoofax/trans/tiger.str	Sat Aug 28 12:14:29 2010	(r21181)
+++ tiger-spoofax/trans/tiger.str	Sat Aug 28 12:18:50 2010	(r21182)
@@ -18,10 +18,10 @@
 	// Analyzes the current program, returning a tuple with errors, warnings, and notes;
 	// each a list of (term, message) tuples or simply (message) terms.
 	editor-analyze:
-		(ast, path, project-path) -> (errors, warnings, notes)
+		(ast, path, project-path) -> (ast', errors, warnings, notes)
 		with
 			editor-init;
-			<analyze> ast => ast';
+			<analyse> ast => ast';
 			<collect-all(editor-error, conc)> ast' 		=> errors;
 			<collect-all(editor-warning, conc)> ast' 	=> warnings;
 			<collect-all(fail, conc)> ast'				=> notes
@@ -38,8 +38,7 @@
 		(selected, position, ast, path, project-path) -> (filename, result)
 		where
 			<guarantee-extension(|"aterm")> path => filename ;
-			<lazy-analyze> ast => ast' ;
-			<term-at-position(|position)> ast' => result
+			<term-at-position(|position)> ast => result
 	
 	// Prints the desugared abstract syntax ATerm of a selection.
 	desugar-aterm:
@@ -52,7 +51,7 @@
 	editor-resolve:
 		(node, position, ast, path, project-path) -> target
     	where
-			<lazy-analyze> ast => ast' ;
-			<term-at-position(|position)> ast' => node' ;
+			//<lazy-analyze> ast => ast' ;
+			//<term-at-position(|position)> ast' => node' ;
 			//<debug(!"Resolve: ")> node';
-			<resolve> node' => target
+			<resolve> node => target

Added: tiger-spoofax/trans/typing.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/typing.str	Sat Aug 28 12:18:50 2010	(r21182)
@@ -0,0 +1,151 @@
+module typing
+
+imports
+	include/Tiger
+	rename
+	desugar
+	project-types
+	
+signature constructors
+	
+	INT:	Ty
+	STRING:	Ty
+	UNIT:	Ty
+	IGNORE: Ty
+	NIL:	Ty
+	
+	RECORD: Ty * Id -> Ty
+	ARRAY:	Ty * Id -> Ty
+
+rules
+	
+	type-of :
+		Int(_) -> INT()
+		
+	type-of :
+		String(_) -> STRING()
+		
+  	type-of :
+  		NilExp() -> NIL()
+  	
+  	type-of : 
+  		Var(x) -> t
+  		where
+  			<VarDecl> x => dec ;
+  			<var-type> dec => t
+  				
+  	type-of : 
+		Bop(_, e1, e2) -> INT()
+		where
+			<type-of> e1 => INT() ;
+			<type-of> e2 => INT() 
+	
+	type-of : 
+		Rop(EQ(), e1, e2) -> INT()
+		where
+			<type-of> e1 => STRING() ;
+			<type-of> e2 => STRING() 
+
+	type-of : 
+		Rop(NE(), e1, e2) -> INT()
+		where
+			<type-of> e1 => STRING() ;
+			<type-of> e2 => STRING() 
+
+  	type-of :
+  		Seq([]) -> UNIT()
+ 
+ 	type-of :
+ 		Seq([e|es]) -> t
+ 		where
+ 			<map(type-of)> [e|es] => ts ;
+ 			<last> ts => t
+ 	
+ 	type-of :
+ 		Assign(l, e) -> UNIT()
+ 		where
+ 			<type-of> l => t1 ;
+ 			<type-of> e => t2 ;
+ 			<eq-or-nil> (t1, t2)
+
+	type-of :
+		IfThenElse(e1, e2, e3) -> t
+		where
+			<type-of> e1 => INT() ;
+			<type-of> e2 => t1 ;
+ 			<type-of> e3 => t2 ;
+ 			( <eq-or-nil> (t1, t2) <+ !UNIT() ) => t
+	
+	type-of :
+		IfThen(e1, e2) -> UNIT()
+		where
+			<type-of> e1 => INT() ;
+			<type-of> e2 => _ 
+ 			
+	type-of :
+		While(e1, e2) -> UNIT()
+		where
+			<type-of> e1 => INT() ;
+			<type-of> e2 => UNIT()
+
+	type-of :
+		For(x, e1, e2, e3) -> UNIT()
+		where
+			<type-of> x => INT() ;
+			<type-of> e1 => INT() ;
+			<type-of> e2 => INT() ;
+			<type-of> e3 => UNIT()
+			
+	type-of :
+		Break() -> UNIT()
+
+	type-of :
+		Let(ds, es) -> t
+		where
+			<type-of> Seq(es) => t
+			
+/*	  TcExp :
+
+  TcExp :
+    |[ lv :: RECORD {F*} z . f ]| -> |[ lv' . f :: ty ]|
+    where <fetch(?FIELD(f, t))> [F*] // <fetch(?|[ f : ty ]|)> [F*]
+        ; <?|[ lv'' :: ty']| <+ !|[ lv :: RECORD {F*} z ]|> lv => lv'
+        ; <norm-type> t => ty
+
+  TcExp :
+    |[ lv :: ARRAY ty z [ e :: INT ] ]| -> |[ lv'[e] :: ty ]|
+    where <?|[lv'' :: ty']| <+ !|[ lv :: ARRAY ty z ]|> lv => lv'
+
+  TcExp :
+    |[ tid{f*} ]| -> |[ tid{f'*} :: ty :: ty ]|
+    where <norm-type> tid => ty@|[ RECORD {F1*} z ]|
+        ; <unzip(\ InitField|[ f = e :: ty ]| -> 
+                  (InitField|[ f = e ]|, FIELD(f, ty)  ) \ )> [f*] => ([f'*], [F2*])
+        ; <zip(FieldCompatible)> ([F1*], [F2*])
+
+  TcExp :
+    |[ tid[e1 :: INT] of [e2 :: ty2] ]| -> |[ [tid[e1] of e2] :: ty4 :: ty4 ]|
+    where  <norm-type> tid => ty4@|[ ARRAY ty3 z ]|
+        ; <eq-or-nil-r>(ty3,ty2)
+
+*/
+
+	eq-or-nil :
+		(t, t) -> t
+		
+	eq-or-nil :
+		(r at RECORD(_,_), NIL()) -> r
+	
+	eq-or-nil :
+		(NIL(), r at RECORD(_,_)) -> r
+		
+	eq-or-nil :
+		(r at ARRAY(_,_), NIL()) -> r
+		
+	eq-or-nil :
+		(NIL(), r at ARRAY(_,_)) -> r
+		
+	eq-or-nil :
+		(r at ARRAY(t1,_), ARRAY(t2,_)) -> r 
+		where
+			<eq-or-nil> (t1,t2)

From g.h.wachsmuth at tudelft.nl  Sat Aug 28 14:50:45 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Sat, 28 Aug 2010 12:50:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21183 -
	tiger-spoofax/syntax
Message-ID: <201008281250.o7SCojwC028502@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Sat Aug 28 12:50:44 2010
New Revision: 21183
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21183&sc=1

Log:
back to flat lists of declarations

Modified:
   tiger-spoofax/syntax/Tiger-Declarations.sdf
   tiger-spoofax/syntax/Tiger-Statements.sdf

Modified: tiger-spoofax/syntax/Tiger-Declarations.sdf
==============================================================================
--- tiger-spoofax/syntax/Tiger-Declarations.sdf	Sat Aug 28 12:18:50 2010	(r21182)
+++ tiger-spoofax/syntax/Tiger-Declarations.sdf	Sat Aug 28 12:50:44 2010	(r21183)
@@ -7,16 +7,10 @@
 	
 exports
 	sorts Dec TypeId
-		
-	context-free syntax
-
-		Dec* 	-> Decs
-		
+				
 	context-free syntax	%% Data Types
 		
-		TypeDec+ -> Dec {cons("TypeDecs")}
-		
-		"type" Id "=" Type 		-> TypeDec {cons("TypeDec")}
+		"type" Id "=" Type 		-> Dec {cons("TypeDec")}
 		
 		TypeId					-> Type   {cons("NameTy")}
 		"{" {Field ","}* "}"	-> Type   {cons("RecordTy")}
@@ -33,10 +27,8 @@
 
 	context-free syntax %% Functions
 		
-		FunDec+					-> Dec {avoid, cons("FunDecs")}
-		
-		"function" Id "(" {FArg ","}* ")"            "=" Exp	-> FunDec {cons("FunDec")}
-		"function" Id "(" {FArg ","}* ")" ":" TypeId "=" Exp	-> FunDec {cons("FunDec")}
+		"function" Id "(" {FArg ","}* ")"            "=" Exp	-> Dec {cons("FunDec")}
+		"function" Id "(" {FArg ","}* ")" ":" TypeId "=" Exp	-> Dec {cons("FunDec")}
 
 		Id ":" TypeId				-> FArg {cons("FArg")}
 		

Modified: tiger-spoofax/syntax/Tiger-Statements.sdf
==============================================================================
--- tiger-spoofax/syntax/Tiger-Statements.sdf	Sat Aug 28 12:18:50 2010	(r21182)
+++ tiger-spoofax/syntax/Tiger-Statements.sdf	Sat Aug 28 12:50:44 2010	(r21183)
@@ -13,7 +13,7 @@
 
 		LValue ":=" Exp						-> Exp {cons("Assign")}
 		
-		"let" Decs "in" {Exp ";"}* "end" 	-> Exp {cons("Let")}
+		"let" Dec* "in" {Exp ";"}* "end" 	-> Exp {cons("Let")}
 		
 		"if" Exp "then" Exp "else" Exp		-> Exp {avoid, cons("IfThenElse")}
 		"if" Exp "then" Exp					-> Exp {cons("IfThen")}

From g.h.wachsmuth at tudelft.nl  Mon Aug 30 01:05:18 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Sun, 29 Aug 2010 23:05:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21184 -
	tiger-spoofax/test
Message-ID: <201008292305.o7TN5Itc002381@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Sun Aug 29 23:05:18 2010
New Revision: 21184
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21184&sc=1

Log:
removed tests with calls to non-standard functions

Deleted:
   tiger-spoofax/test/fac-input.tig
   tiger-spoofax/test/kmp1.tig
   tiger-spoofax/test/kmp2.tig
   tiger-spoofax/test/record-io.tig
   tiger-spoofax/test/renaming1.tig
Modified:
   tiger-spoofax/test/aterm.tig

Modified: tiger-spoofax/test/aterm.tig
==============================================================================
--- tiger-spoofax/test/aterm.tig	Sat Aug 28 12:50:44 2010	(r21183)
+++ tiger-spoofax/test/aterm.tig	Sun Aug 29 23:05:18 2010	(r21184)
@@ -21,7 +21,7 @@
 function test1() : aterm =
   app("Succ", alist{hd = app("Zero", nil), tl = nil})
 
-var term : aterm
+var term : aterm := nil
 
 in
  

From g.h.wachsmuth at tudelft.nl  Mon Aug 30 01:06:20 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Sun, 29 Aug 2010 23:06:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21185 - in
	tiger-spoofax: editor lib trans trans/analysis
	trans/analysis/names trans/analysis/types
Message-ID: <201008292306.o7TN6Klb002385@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Sun Aug 29 23:06:20 2010
New Revision: 21185
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21185&sc=1

Log:
re-organised static analysis

Added:
   tiger-spoofax/lib/namespace.str
   tiger-spoofax/trans/analysis/
   tiger-spoofax/trans/analysis/main.str
      - copied, changed from r21182, tiger-spoofax/trans/analyze.str
   tiger-spoofax/trans/analysis/names/
   tiger-spoofax/trans/analysis/names/check.str
      - copied, changed from r21182, tiger-spoofax/trans/check.str
   tiger-spoofax/trans/analysis/names/map.str
   tiger-spoofax/trans/analysis/names/namespaces.str
   tiger-spoofax/trans/analysis/names/project.str
      - copied, changed from r21182, tiger-spoofax/trans/project-names.str
   tiger-spoofax/trans/analysis/names/rename.str
      - copied, changed from r21182, tiger-spoofax/trans/rename.str
   tiger-spoofax/trans/analysis/types/
   tiger-spoofax/trans/analysis/types/check.str
   tiger-spoofax/trans/analysis/types/desugar-ops.str
   tiger-spoofax/trans/analysis/types/predefined.str
      - copied, changed from r21182, tiger-spoofax/trans/predefined.str
   tiger-spoofax/trans/analysis/types/project.str
      - copied, changed from r21182, tiger-spoofax/trans/typing.str
   tiger-spoofax/trans/analysis/types/types.str
   tiger-spoofax/trans/hover.str
Deleted:
   tiger-spoofax/trans/analyze.str
   tiger-spoofax/trans/check.str
   tiger-spoofax/trans/desugar.str
   tiger-spoofax/trans/predefined.str
   tiger-spoofax/trans/project-names.str
   tiger-spoofax/trans/project-types.str
   tiger-spoofax/trans/rename.str
   tiger-spoofax/trans/typing.str
Modified:
   tiger-spoofax/editor/Tiger-Builders.esv
   tiger-spoofax/editor/Tiger-References.esv
   tiger-spoofax/trans/resolve.str
   tiger-spoofax/trans/tiger.str

Modified: tiger-spoofax/editor/Tiger-Builders.esv
==============================================================================
--- tiger-spoofax/editor/Tiger-Builders.esv	Sun Aug 29 23:05:18 2010	(r21184)
+++ tiger-spoofax/editor/Tiger-Builders.esv	Sun Aug 29 23:06:20 2010	(r21185)
@@ -13,7 +13,7 @@
                                                                                                                
 	provider                  : include/tiger.ctree                                                              
                                                                                                                
-	observer                  : editor-analyze                                                                   
+	observer                  : editor-analyse                                                                   
                                                                                                                
 	builder                   : "Show abstract syntax" = generate-aterm (openeditor) (realtime) (meta) (source)  
 	builder                   : "Show renamed AST" = rename-aterm (openeditor) (realtime) (meta) 

Modified: tiger-spoofax/editor/Tiger-References.esv
==============================================================================
--- tiger-spoofax/editor/Tiger-References.esv	Sun Aug 29 23:05:18 2010	(r21184)
+++ tiger-spoofax/editor/Tiger-References.esv	Sun Aug 29 23:06:20 2010	(r21185)
@@ -9,4 +9,5 @@
 	// See the imported file for a brief introduction and examples.                                  
     
     reference _ : editor-resolve
-                                                                                                 
\ No newline at end of file
+	
+	hover _ : editor-hover
\ No newline at end of file

Added: tiger-spoofax/lib/namespace.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/lib/namespace.str	Sun Aug 29 23:06:20 2010	(r21185)
@@ -0,0 +1,59 @@
+module lib/namespace
+
+rules
+	
+	new-scope(s) :
+		x -> y
+		where
+			<newname> x => scope ;
+			{| Renamed, RenamedInScope, CurrentScope:
+				rules (CurrentScope: _ -> scope) ;
+				<s> x => y
+			|} 
+			
+	rename-declaration : 
+		(namespace, x) -> x'
+		where 
+			CurrentScope => scope ;
+			(
+				<RenamedInScope> (namespace, scope, x) => x' <+
+				x' := x{<newname> x}
+			)
+		where rules(
+			RenamedInScope: (namespace, scope, x) -> x' 
+			Renamed: (namespace, x) -> x'
+		)
+	
+	rename-reference :
+		(namespace, x) -> x'
+		where
+			<Renamed> (namespace, x) => x'
+	
+	store-declaration :
+		(namespace, x, d) -> x
+		where rules(
+			Declared:+ (namespace, x) -> d
+		)
+		
+	store-reference :
+		(namespace, x) -> x
+		where rules (
+			Referred:+ (namespace, x) -> x
+		)	
+		
+strategies
+	
+	get-declarations = bagof-Declared
+	
+	get-unique-declaration = get-declarations ; ?[<id>]
+	
+	is-declared = get-declarations ; ?[_|_]
+	
+	get-declaration(s) = get-declarations ; fetch-elem(where(s)) 
+	
+	project-declaration(s) = get-declarations ; fetch-elem(s) 
+	 
+	get-references = bagof-Referred
+	
+	is-referred = get-references ; ?[_|_]
+	
\ No newline at end of file

Copied and modified: tiger-spoofax/trans/analysis/main.str (from r21182, tiger-spoofax/trans/analyze.str)
==============================================================================
--- tiger-spoofax/trans/analyze.str	Sat Aug 28 12:18:50 2010	(r21182, copy source)
+++ tiger-spoofax/trans/analysis/main.str	Sun Aug 29 23:06:20 2010	(r21185)
@@ -1,14 +1,30 @@
-module analyze
+module analysis/main
 
 imports
 	libstratego-lib
 	lib/editor-common.generated
 
 imports	
-	include/Tiger
-	rename
+	analysis/names/rename
+	analysis/names/map
+	analysis/names/check
 	
+	analysis/types/desugar-ops
+	analysis/types/check
+		
 strategies
-	
-	analyse = rename-all
 
+	desugar-all = topdown(repeat(desugar-op))	
+			
+	analyse = rename-all ; store-all ; desugar-all
+
+rules
+	
+	editor-analyse:
+		(ast, path, project-path) -> (ast', errors, warnings, notes)
+		with
+			editor-init;
+			<analyse> ast => ast';
+			<collect-all(editor-error, conc)> ast' 		=> errors;
+			<collect-all(editor-warning, conc)> ast' 	=> warnings;
+			<collect-all(fail, conc)> ast'				=> notes

Copied and modified: tiger-spoofax/trans/analysis/names/check.str (from r21182, tiger-spoofax/trans/check.str)
==============================================================================
--- tiger-spoofax/trans/check.str	Sat Aug 28 12:18:50 2010	(r21182, copy source)
+++ tiger-spoofax/trans/analysis/names/check.str	Sun Aug 29 23:06:20 2010	(r21185)
@@ -1,39 +1,58 @@
-module check
+module analysis/names/check
+
+imports
+	lib/namespace
 
 imports
 	include/Tiger
-	rename
-	predefined
-	
-rules
+
+imports
+	analysis/names/namespaces
+	analysis/names/project
+	analysis/types/predefined
+		
+rules // undeclared elements
 	
 	editor-error:
 		e at Tid(t) -> (e, $[Type [t] is not declared.])
-		where
-			not (<primitive-type <+ TypeDecl> t)
-	
+		where not ( <is-declared> (Types(), t) )
+		where not ( <primitive-type> t )
+		
 	editor-error:
 		e at Var(x) -> (e, $[Variable [x] is not declared.])
-		where
-			not (<VarDecl> x)
+		where not ( <get-declaration(var-name)> (Vars(), x) )
 	
 	editor-error:
 		e at Call(f, _) -> (e, $[Function [f] is not declared.])
-		where
-			not (<standard-lib-fun <+ FunDecl> f)
+		where not ( <get-declaration(fun-name)> (Vars(), f) )
+		where not ( <standard-lib-fun> f )
+		
+rules // multiple declarations
+	
+	editor-error:
+		d -> (d, $[Multiple declarations for variable or function name [x].])
+		where <var-name <+ fun-name> d => x 
+		where not ( <get-unique-declaration> (Vars(), x) )
 
-rules	
-	editor-warning: 
-		d at VarDec(x, _, _) -> (d, $[Variable [x] is never used.])
-		where
-			not (<UsedVar> x)
+	editor-error:
+		d at TypeDec(t, _) -> (d, $[Multiple declarations for type name [t].])
+		where not ( <get-unique-declaration> (Types(), t) )
+	
+rules // unused declarations
 	
 	editor-warning: 
-		d at FArg(x, _) -> (d, $[Argument [x] is never used.])
-		where
-			not (<UsedVar> x)
-			
+		d -> (d, $[Type [t] is never used.])
+		where <type-name> d => t 
+		where not ( <is-referred> (Types(), t) )
+				
+	editor-warning: 
+		d -> (d, $[Variable [x] is never used.])
+		where <var-name> d => x 
+		where not ( <?For(_, _, _, _)> d )
+		where not ( <is-referred> (Vars(), x) )
+				
 	editor-warning: 
-		d at FunDec(f, _, _, _) -> (d, $[Function [f] is never called.])
-		where
-			not (<UsedFun> f)
+		d -> (d, $[Function [f] is never called.])
+		where <fun-name> d => f 
+		where not ( <is-referred> (Vars(), f) )
+			
\ No newline at end of file

Added: tiger-spoofax/trans/analysis/names/map.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/analysis/names/map.str	Sun Aug 29 23:06:20 2010	(r21185)
@@ -0,0 +1,70 @@
+module analysis/names/map
+
+imports
+	lib/namespace
+
+imports	
+	include/Tiger
+
+imports
+	analysis/names/namespaces
+	
+strategies
+	
+	store-all = topdown(try(store))
+
+rules // declarations
+	
+	store :
+		d at TypeDec(t, _) -> d
+		where
+			<store-declaration> (Types(), t, d)
+			
+	store :
+		d at VarDec(x, _, _) -> d
+		where
+			<store-declaration> (Vars(), x, d) 	
+
+	store :
+		d at VarDec(x, _) -> d
+		where
+			<store-declaration> (Vars(), x, d) 	
+
+	store :
+		d at FArg(x, _) -> d
+		where
+			<store-declaration> (Vars(), x, d) 	
+
+	store :
+		d at For(x, _, _, _) -> d
+		where
+			<store-declaration> (Vars(), x, d) 	
+
+	store :
+		d at FunDec(f, _, _, _) -> d
+		where
+			<store-declaration> (Vars(), f, d) 	
+
+	store :
+		d at FunDec(f, _, _) -> d
+		where
+			<store-declaration> (Vars(), f, d) 
+			
+rules // references
+	
+	store :
+		r at Tid(t) -> r
+		where
+			<store-reference> (Types(), t)
+	
+	store :
+		r at Var(x) -> r
+		where
+			<store-reference> (Vars(), x)
+	
+	store :
+		r at Call(f, _) -> r
+		where
+			<store-reference> (Vars(), f)
+	
+

Added: tiger-spoofax/trans/analysis/names/namespaces.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/analysis/names/namespaces.str	Sun Aug 29 23:06:20 2010	(r21185)
@@ -0,0 +1,7 @@
+module analysis/names/namespaces
+
+signature constructors // namespaces
+	
+	Types : Namespace
+	Vars  : Namespace
+

Copied and modified: tiger-spoofax/trans/analysis/names/project.str (from r21182, tiger-spoofax/trans/project-names.str)
==============================================================================
--- tiger-spoofax/trans/project-names.str	Sat Aug 28 12:18:50 2010	(r21182, copy source)
+++ tiger-spoofax/trans/analysis/names/project.str	Sun Aug 29 23:06:20 2010	(r21185)
@@ -1,22 +1,18 @@
-module project-names
+module analysis/names/project
 
 imports
 	include/Tiger
 	
-rules
+rules // name declarations
 	
-	type-name:
-		TypeDec(x, _) -> x
+	type-name 	: TypeDec(x, _) -> x
 
-	var-name:
-		VarDec(x, _, _) -> x
+	var-name	: VarDec(x, _) -> x
+	var-name	: VarDec(x, _, _) -> x
+	var-name	: For(x, _, _, _) -> x
+	var-name	: FArg(x, _) -> x
 		
-	var-name:
-		For(x, _, _, _) -> x
-	
-	var-name:
-		FArg(x, _) -> x
+	fun-name	: FunDec(f, _, _) -> f
+	fun-name	: FunDec(f, _, _, _) -> f
 		
-	fun-name:
-		FunDec(f, _, _, _) -> f
-			
\ No newline at end of file
+	

Copied and modified: tiger-spoofax/trans/analysis/names/rename.str (from r21182, tiger-spoofax/trans/rename.str)
==============================================================================
--- tiger-spoofax/trans/rename.str	Sat Aug 28 12:18:50 2010	(r21182, copy source)
+++ tiger-spoofax/trans/analysis/names/rename.str	Sun Aug 29 23:06:20 2010	(r21185)
@@ -1,110 +1,151 @@
-module rename
+module analysis/names/rename
 
 imports 
+	lib/namespace
+
+imports
 	include/Tiger 
 
+imports
+	analysis/names/namespaces
+	
 strategies
 
 	rename-all = alltd(rename)
 	
+rules
+	
+	rename-decl-group :
+		ds@[_|_] ->  <rename-all> <map(rename-decl-group)> ds
+	
 rules // type declarations
 
-	new-tid : 
-		x -> x{y} 
+	rename-decl-group :
+		TypeDec(x, t) -> TypeDec(y, t)
 		where 
-			<newname> x  => y ; 
-			rules(RenamedTid: x -> x{y})
-				
+			<rename-declaration> (Types(), x) => y 
+
 	rename :	
 		Tid(x) -> Tid(y) 
 		where 	
-			<RenamedTid> x => y ;
-			rules (UsedType: y -> y)
-
-	rename :
-		d at TypeDec(x, t) -> TypeDec(y, t')
-		where 
-			<new-tid> x => y ;
-			<rename-all> t => t' ;
-			rules(TypeDecl: y -> d)
+			<rename-reference> (Types(), x) => y 
 
 rules // variables and their declarations
-
-	new-var: 
-		x -> x{y}
-		where 
-			<newname> x  => y ; 
-			rules(RenamedVar: x -> x{y})
-	
-	rename:	
-		Var(x) -> Var(y) 
-		where 	
-			<RenamedVar> x => y ;
-			rules (UsedVar: y -> y)
-
-	rename:
-    	d at VarDec(x, t, e) -> VarDec(y, t', e')
+			 
+	rename-decl-group :
+    	VarDec(x, t, e) -> VarDec(y, t', e')
     	where 
     		<rename-all> t => t';
     		<rename-all> e => e';
-    		<new-var> x => y ;
-    		rules(VarDecl: y -> d)
+    		<rename-declaration> (Vars(), x) => y
     		
-	rename:
-    	d at VarDec(x, t) -> VarDec(y, t')
+	rename-decl-group :
+    	VarDec(x, t) -> VarDec(y, t')
     	where 
     		<rename-all> t => t' ;
-    		<new-var> x => y ;
-    		rules(VarDecl: y -> d)
+    		<rename-declaration> (Vars(), x) => y 
+
+	rename:	
+		Var(x) -> Var(y) 
+		where 	
+			<rename-reference> (Vars(), x) => y  
 
 	rename:
 		Let(ds, es) -> Let(ds', es')
 		where
-			{| RenamedVar, RenamedTid, RenamedFun : 
-				<rename-all> ds => ds' ;
-				<rename-all> es => es' 
-			|}
+			new-scope (
+				<group-decls> ds => gs ;
+				<map(rename-decl-group)> gs => gs' ;
+				<flatten-list> gs' => ds' ;
+				<rename-all> es => es'
+			)
 
 	rename :
-		d at For(x, e1, e2, e3) -> For(y, e1', e2', e3')
+		For(x, e1, e2, e3) -> For(y, e1', e2', e3')
 		where 
 			<rename-all> e1 => e1' ;
 			<rename-all> e1 => e2' ;
-			{| RenamedVar: 
-				<new-var> x => y ;
+			new-scope (
+				<rename-declaration> (Vars(), x) => y ;
 				<rename-all> e3 => e3'
-			|} ;
-			rules(VarDecl: y -> d)
+			)
 
 rules // functions
+    		
+	rename-decl-group :
+		FunDec(f, as, t, e) -> FunDec(g, as, t, e)
+    	where 
+    		<rename-declaration> (Vars(), f) => g 
+    
+    rename-decl-group :
+		FunDec(f, as, e) -> FunDec(g, as, e)
+    	where 
+    		<rename-declaration> (Vars(), f) => g 
 
-	new-fun : 
-		x -> x{y}
-		where 
-			<newname> x  => y ; 
-			rules(RenamedFun : x -> x{y})
-		
 	rename :
-		d at FunDec(f, as, t, e) -> FunDec(g, as', t', e')
+		FunDec(f, as, t, e) -> FunDec(f, as', t', e')
     	where 
-    		<new-fun> f => g ;
     		<rename-all> t => t' ;
-    		{| RenamedVar: 
+    		new-scope ( 
     			<rename-all> as => as' ;
     			<rename-all> e => e' 
-    		|} ;
-    		rules(FunDecl: g -> d)
-
+    		)
+    	
+    rename :
+    	FunDec(f, as, e) -> FunDec(f, as', e')
+    	where 
+    		new-scope ( 
+    			<rename-all> as => as' ;
+    			<rename-all> e => e' 
+    		)
+    	
 	rename :
-		d at FArg(x, t) -> FArg(y, t')
+		FArg(x, t) -> FArg(y, t')
 		where
-			<new-var> x => y ;
 			<rename-all> t => t' ;
-			rules(VarDecl: y -> d)
+			<rename-declaration> (Vars(), x) => y 
 			
 	rename :
 		Call(f, es) -> Call(g, es')
 		where
-			<RenamedFun> f => g ;
 			<rename-all> es => es' ;
-			rules (UsedFun: g -> g)
+			<rename-reference> (Vars(), f) => g
+			
+rules
+	
+	group-decls :
+		[] -> []
+		
+	group-decls :
+		[d at VarDec(_, _) | ds] -> [d | <group-decls> ds]
+	
+	group-decls :
+		[d at VarDec(_, _, _) | ds] -> [d | <group-decls> ds]
+		
+	group-decls :
+		[d at TypeDec(_, _) | ds] -> r
+		where
+			(
+				<split-fetch-keep(not(?TypeDec(_, _)))> [d | ds] => (tds, rd, rds) ;
+				![tds | <group-decls> [rd | rds]] => r
+			) <+ 
+			![[d | ds]] => r
+			
+	group-decls :
+		[d at FunDec(_, _, _) | ds] -> r
+		where
+			(
+				<split-fetch-keep(not(?FunDec(_, _, _) <+ ?FunDec(_, _, _, _)))> [d | ds] => (tds, rd, rds) ;
+				![tds | <group-decls> [rd | rds]] => r
+			) <+ 
+			![[d | ds]] => r
+
+	group-decls :
+		[d at FunDec(_, _, _, _) | ds] -> r
+		where
+			(
+				<split-fetch-keep(not(?FunDec(_, _, _) <+ ?FunDec(_, _, _, _)))> [d | ds] => (tds, rd, rds) ;
+				![tds | <group-decls> [rd | rds]] => r
+			) <+ 
+			![[d | ds]] => r
+			 
\ No newline at end of file

Added: tiger-spoofax/trans/analysis/types/check.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/analysis/types/check.str	Sun Aug 29 23:06:20 2010	(r21185)
@@ -0,0 +1,150 @@
+module analysis/types/check
+
+imports
+	lib/namespace
+	
+imports
+	include/Tiger
+
+imports
+	analysis/types/desugar-ops
+	analysis/types/types
+	analysis/types/project
+	analysis/types/predefined
+		
+rules // lvalues
+	
+	editor-error:
+		VarDec(_, t, e) -> error
+		where <type-of> t => t'
+		where <check-exp(eq-or-nil)> (e, t') => error
+		
+	editor-error:
+		VarDec(_, e) ->(e, $[Expression is of type [<pp> t].])
+		where <type-of> e => t
+		where <elem> (t, [ NO_VAL(), NIL() ])
+
+	editor-error:
+		FieldVar(e, f) -> (e, $[Expression is of type [<pp> t] (no record type).])
+		where <type-of> e => t
+		where not ( <?RECORD(_, _)> t )
+
+	editor-error:
+		FieldVar(e, f) -> (f, $[Field [f] not declared by type [<pp> t].])
+		where <type-of> e => t at RECORD(_, fs)
+		where not ( <fetch-elem(?FIELD(f, _))> fs )
+
+	editor-error:
+		Subscript(e1, e2) -> (e1, $[Expression is of type [<pp> t] (no array type).])
+		where <type-of> e1 => t
+		where not ( <?ARRAY(_, _)> t )
+
+	editor-error:
+		Subscript(e1, e2) -> error
+		where <type-of> e1 => ARRAY(_, _)
+		where <check-exp(eq)> (e2, INT()) => error
+
+rules // record and array creation
+	
+	editor-error:
+		e at Record(t, fs) -> (t, $[Type [<pp> t] is not a record type.])
+		where <type-of> t => t'
+		where not ( <?RECORD(_, _)> t' )
+		
+	editor-error:
+		Record(t, fs) -> errors
+		where <type-of> t => RECORD(_, fdefs)
+		where <filter(editor-error)> <zip> (fs, fdefs) => errors
+
+	editor-error:
+		(InitField(f, e), FIELD(g, t)) -> (f, $[Field [g] expected.])
+		where not ( <eq> (f, g) )
+
+	editor-error:
+		(InitField(f, e), FIELD(g, t)) -> error
+		where <type-of> t => t'
+		where <filter(check-exp(eq-or-nil))> (e, t') => error
+
+	editor-error:
+		Array(t, e1, e2) -> (t, $[Type [<pp> t] is not an array type.])
+		where <type-of> t => t'
+		where not ( <?ARRAY(_, _)> t' )
+
+	editor-error:
+		Array(t, e1, e2) -> errors
+		where <type-of> t => ARRAY(_, tn)
+		where <type-of> tn => t2
+		where <filter(check-exp(eq-or-nil))> [(e1, INT()), (e2, t2)] => errors
+
+rules // function calls
+	
+	editor-error:
+		e at Call(f, es) -> (e, "Wrong number of arguments.")
+		where <project-declaration(fun-type) <+ standard-lib-fun> f => (ts, t)
+		where not( <eq> (<length> es, <length> ts) ) 
+
+	editor-error:
+		Call(f, es) -> errors
+		
+		where <project-declaration(fun-type) <+ standard-lib-fun> f => (ts, t)
+		where <zip(check-exp(eq-or-nil))> (es, ts) => errors 
+				
+rules // binary expressions
+	
+	editor-error:
+		Bop(_, e1, e2) -> errors
+		where <filter(check-exp(eq))> [(e1, INT()), (e2, INT())] => errors
+
+	editor-error:
+		Rop(op, e1, e2) -> error
+		where <elem> (op, [EQ(), NE()])
+		where <type-of> e1 => t
+		where <check-exp(eq-or-nil)> (e2, t) => error
+	
+	editor-error:
+		Rop(op, e1, e2) -> (e1, $[Expression is of type [<pp> t] instead of type [<pp> INT()] or [<pp> STRING()].])
+		where <elem> (op, [LT(), GT()])
+		where <type-of> e1 => t
+		where not (<int-or-string> t)
+	
+	editor-error:
+		Rop(op, e1, e2) -> error
+		where <elem> (op, [LT(), GT()])
+		where <int-or-string> <type-of> e1 => t
+		where <check-exp(eq)> (e2, t) => error
+	
+	editor-error:
+		Rop(op, e1, e2) -> errors
+		where <elem> (op, [LE(), GE()])
+		where <filter(check-exp(eq))> [(e1, INT()), (e2, INT())] => errors
+
+rules // statements
+	
+	editor-error:
+		Assign(e1, e2) -> error
+		where <type-of> e1 => t
+		where <check-exp(eq-or-nil)> (e2, t) => error
+
+	editor-error:
+		IfThenElse(e1, e2, e3) -> errors
+		where <type-of> e2 => t
+		where <filter(check-exp(eq-or-nil <+ noval-noval))> [(e1, INT()), (e3, t)] => errors
+
+	editor-error:
+		IfThen(e1, e2) -> errors
+		where <filter(check-exp(eq))> [(e1, INT()), (e2, NO_VAL())] => errors
+
+	editor-error:
+		While(e1, e2) -> errors
+		where <filter(check-exp(eq))> [(e1, INT()), (e2, NO_VAL())] => errors
+
+	editor-error:
+		For(v, e1, e2, e3) -> errors
+		where <filter(check-exp(eq))> [(e1, INT()), (e2, INT()), (e3, NO_VAL())] => errors
+	
+rules
+		
+	check-exp(eq):
+		(e, t) -> (e, $[Expression is of type [<pp> t'] instead of type [<pp> t].])
+		where <type-of> e => t'
+		where not (<eq> (t, t'))		

Added: tiger-spoofax/trans/analysis/types/desugar-ops.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/analysis/types/desugar-ops.str	Sun Aug 29 23:06:20 2010	(r21185)
@@ -0,0 +1,40 @@
+module analysis/types/desugar-ops
+
+imports 
+	include/Tiger
+
+signature constructors // operators
+	PLUS: 	BinOp
+	MINUS: 	BinOp
+	MUL: 	BinOp
+	DIV: 	BinOp
+	
+	EQ: 	RelOp
+	NE: 	RelOp
+	LE: 	RelOp
+	LT: 	RelOp
+	GE: 	RelOp
+	GT: 	RelOp
+	
+	Bop: BinOp * Expr * Expr -> Expr
+	Rop: RelOp * Expr * Expr -> Expr
+
+rules // operators
+
+	desugar-op: Uminus(e) 		-> Bop(MINUS(), Int("0"), e)
+	
+	desugar-op: Plus(e1, e2) 	-> Bop(PLUS(), e1, e2)
+	desugar-op: Minus(e1, e2) 	-> Bop(MINUS(), e1, e2)
+	desugar-op: Times(e1, e2) 	-> Bop(MUL(), e1, e2)
+	desugar-op: Divide(e1, e2)	-> Bop(DIV(), e1, e2)
+	
+	desugar-op: Eq(e1, e2) 		-> Rop(EQ(), e1, e2)
+	desugar-op: Neq(e1, e2) 	-> Rop(NE(), e1, e2)
+	desugar-op: Leq(e1, e2) 	-> Rop(LE(), e1, e2)
+	desugar-op: Lt(e1, e2) 		-> Rop(LT(), e1, e2)
+	desugar-op: Geq(e1, e2) 	-> Rop(GE(), e1, e2)
+	desugar-op: Gt(e1, e2) 		-> Rop(GT(), e1, e2)
+
+	desugar-op: And(e1, e2) 	-> IfThenElse(e1, e2, Int("0"))
+	desugar-op: Or(e1, e2) 		-> IfThenElse(e1, Int("1"), e2)
+	
\ No newline at end of file

Copied and modified: tiger-spoofax/trans/analysis/types/predefined.str (from r21182, tiger-spoofax/trans/predefined.str)
==============================================================================
--- tiger-spoofax/trans/predefined.str	Sat Aug 28 12:18:50 2010	(r21182, copy source)
+++ tiger-spoofax/trans/analysis/types/predefined.str	Sun Aug 29 23:06:20 2010	(r21185)
@@ -1,54 +1,23 @@
-module predefined
+module analysis/types/predefined
 
 imports
-	typing
+	analysis/types/types
 	
-rules
+rules // predefined types
 	
-	primitive-type : 
-		"int" -> INT()
-	
-	primitive-type : 
-		"string" -> STRING()
-		
-	standard-lib-fun :
-		"print" -> ([STRING()], UNIT())
-		
-	standard-lib-fun :
-		"printint" -> ([INT()], UNIT())
-	
-	standard-lib-fun :
-		"flush" -> ([], UNIT())
-	
-	standard-lib-fun :
-		"getchar" -> ([], STRING())
-	
-	standard-lib-fun :
-		"ord" -> ([STRING()], INT())
-	
-	standard-lib-fun :
-		"chr" -> ([INT()], STRING())
-	
-	standard-lib-fun :
-		"size" -> ([STRING()], INT())
-	
-	standard-lib-fun :
-		"substring" -> ([STRING(), INT(), INT()], STRING())
-	
-	standard-lib-fun :
-		"concat" -> ([STRING(), STRING()], STRING())
-	
-	standard-lib-fun :
-		"not" -> ([INT()], INT())
-	
-	standard-lib-fun :
-		"exit" -> ([INT()], UNIT())
-	
-	standard-lib-fun :
-		"argv" -> ([INT()], STRING())
-	
-	standard-lib-fun :
-		"readval" -> ([STRING()], IGNORE())
-	
-	standard-lib-fun :
-		"writeval" -> ([STRING(), IGNORE()], INT())
\ No newline at end of file
+	primitive-type : "int" 		-> INT()
+	primitive-type : "string" 	-> STRING()
+
+rules // predefined functions
+			
+	standard-lib-fun : "print" 		-> ([STRING()], NO_VAL())
+	standard-lib-fun : "printint" 	-> ([INT()], NO_VAL())
+	standard-lib-fun : "flush" 		-> ([], NO_VAL())
+	standard-lib-fun : "getchar" 	-> ([], STRING())
+	standard-lib-fun : "ord" 		-> ([STRING()], INT())
+	standard-lib-fun : "chr" 		-> ([INT()], STRING())
+	standard-lib-fun : "size" 		-> ([STRING()], INT())
+	standard-lib-fun : "substring" 	-> ([STRING(), INT(), INT()], STRING())
+	standard-lib-fun : "concat" 	-> ([STRING(), STRING()], STRING())
+	standard-lib-fun : "not" 		-> ([INT()], INT())
+	standard-lib-fun : "exit" 		-> ([INT()], NO_VAL())
\ No newline at end of file

Copied and modified: tiger-spoofax/trans/analysis/types/project.str (from r21182, tiger-spoofax/trans/typing.str)
==============================================================================
--- tiger-spoofax/trans/typing.str	Sat Aug 28 12:18:50 2010	(r21182, copy source)
+++ tiger-spoofax/trans/analysis/types/project.str	Sun Aug 29 23:06:20 2010	(r21185)
@@ -1,68 +1,133 @@
-module typing
+module analysis/types/project
 
 imports
-	include/Tiger
-	rename
-	desugar
-	project-types
-	
-signature constructors
-	
-	INT:	Ty
-	STRING:	Ty
-	UNIT:	Ty
-	IGNORE: Ty
-	NIL:	Ty
+	lib/namespace
 	
-	RECORD: Ty * Id -> Ty
-	ARRAY:	Ty * Id -> Ty
+imports
+	include/Tiger
 
-rules
+	analysis/names/namespaces
+
+	analysis/types/types
+	analysis/types/desugar-ops
+	analysis/types/predefined
+	
+rules // declarations
+	
+	type-type	: TypeDec(_, t) -> t
+	
+	var-type	: VarDec(_, e) 		-> <type-of> e
+	var-type	: VarDec(_, t, _) 	-> <type-of> t
+	var-type	: For(_, _, _, _) 	-> INT()
+	var-type	: FArg(_, t) 		-> <type-of> t
+		
+	fun-type	: FunDec(_, as, _) 		-> (<map(var-type)> as, NO_VAL())
+	fun-type	: FunDec(_, as, t, _) 	-> (<map(var-type)> as, <type-of> t)
+
+rules // types
+	
+	type-of:
+		tn at Tid(i) -> t
+		where
+			(
+				<project-declaration(type-type)> (Types(), i) => d ; 
+				<declared-type> (tn, tn, d) => t
+			) <+ 
+			<primitive-type> i => t
+
+	declared-type : 
+		(t1, t2, NameTy(Tid(t3))) -> t
+		where 
+			(
+				not( <eq> (t1, t3) ) ;
+				<project-declaration(type-type)> (Types(), t3) => d ;
+				<declared-type> (t1, t3, d) => t
+			) <+  
+			<primitive-type> t3 => t 
+				
+	declared-type : (t1, t2, ArrayTy(t3)) 	-> ARRAY(t2, t3)
+	declared-type : (_, t, RecordTy(fs)) 	-> RECORD(t, <map(declared-field)> fs)
 	
-	type-of :
-		Int(_) -> INT()
-		
-	type-of :
-		String(_) -> STRING()
+	declared-field : Field(f, t) -> FIELD(f, t)
 		
+rules // lvalues
+	
+	type-of : 
+		Var(x) 	-> <project-declaration(var-type)> (Vars(), x) 
+  	
   	type-of :
-  		NilExp() -> NIL()
+  		FieldVar(e, f) -> t
+  		where
+  			<type-of> e => RECORD(_, fields) ;
+  			<fetch-elem(?FIELD(f, <type-of>))> fields => t
   	
-  	type-of : 
-  		Var(x) -> t
+  	type-of :
+  		Subscript(e1, e2) -> t
   		where
-  			<VarDecl> x => dec ;
-  			<var-type> dec => t
-  				
-  	type-of : 
+  			<type-of> e1 => ARRAY(_, tn) ;
+  			<type-of> tn => t ;
+  			<type-of> e2 => INT()
+ 
+rules // expressions
+	
+	type-of : 
+		Call(f, es) -> t
+		where
+			<project-declaration(fun-type) <+ standard-lib-fun> f => (ts, t) ;
+			<zip(eq-or-nil)> (ts, <map(type-of)> es)
+								
+  	type-of : NilExp() 	-> NIL()
+	type-of : NoVal() 	-> NO_VAL()
+	type-of : Seq(es) 	-> <last> <map(type-of)> es 
+  	type-of : Int(_) 	-> INT()
+	type-of : String(_) -> STRING()		
+ 	
+	type-of : 
 		Bop(_, e1, e2) -> INT()
 		where
 			<type-of> e1 => INT() ;
 			<type-of> e2 => INT() 
 	
 	type-of : 
-		Rop(EQ(), e1, e2) -> INT()
+		Rop(op, e1, e2) -> INT()
 		where
-			<type-of> e1 => STRING() ;
-			<type-of> e2 => STRING() 
-
-	type-of : 
-		Rop(NE(), e1, e2) -> INT()
+			<type-of> e1 => t1 ;
+			<type-of> e2 => t2 ; 
+			<check-rop> (op, t1, t2)
+			
+	check-rop : (EQ(), t1, t2) -> <eq-or-nil> (t1, t2)
+	check-rop : (NE(), t1, t2) -> <eq-or-nil> (t1, t2)
+	check-rop : (LT(), t, t) -> <int-or-string> t
+	check-rop : (GT(), t, t) -> <int-or-string> t
+	check-rop : (LE(), INT(), INT()) -> INT()
+	check-rop : (GE(), INT(), INT()) -> INT()
+	
+	type-of :
+		Record(tn, inits) -> t
 		where
-			<type-of> e1 => STRING() ;
-			<type-of> e2 => STRING() 
-
-  	type-of :
-  		Seq([]) -> UNIT()
- 
- 	type-of :
- 		Seq([e|es]) -> t
- 		where
- 			<map(type-of)> [e|es] => ts ;
- 			<last> ts => t
- 	
+			<type-of> tn => t at RECORD(tn, fields) ;
+			<zip(check-field)> (inits, fields)
+			
+	check-field :
+		(InitField(fn, e), FIELD(fn, tn)) -> t
+		where
+			<type-of> tn => t1 ;
+			<type-of> e => t2 ;
+			<eq-or-nil> (t1, t2) => t
+			
+	type-of :
+		Array(tn, e1, e2) -> t
+		where
+			<type-of> tn => t at ARRAY(tn, vtn) ;
+			<type-of> vtn => vt1 ;
+			<type-of> e1 => INT() ;
+			<type-of> e2 => vt2 ;
+			<eq-or-nil> (vt1, vt2)
+			
+rules // statements
+		
  	type-of :
- 		Assign(l, e) -> UNIT()
+ 		Assign(l, e) -> NO_VAL()
  		where
  			<type-of> l => t1 ;
  			<type-of> e => t2 ;
@@ -74,78 +139,47 @@
 			<type-of> e1 => INT() ;
 			<type-of> e2 => t1 ;
  			<type-of> e3 => t2 ;
- 			( <eq-or-nil> (t1, t2) <+ !UNIT() ) => t
+ 			<eq-or-nil <+ noval-noval> (t1, t2) => t 
 	
 	type-of :
-		IfThen(e1, e2) -> UNIT()
+		IfThen(e1, e2) -> NO_VAL()
 		where
 			<type-of> e1 => INT() ;
-			<type-of> e2 => _ 
+			<type-of> e2 => NO_VAL()
  			
 	type-of :
-		While(e1, e2) -> UNIT()
+		While(e1, e2) -> NO_VAL()
 		where
 			<type-of> e1 => INT() ;
-			<type-of> e2 => UNIT()
+			<type-of> e2 => NO_VAL()
 
 	type-of :
-		For(x, e1, e2, e3) -> UNIT()
+		For(x, e1, e2, e3) -> NO_VAL()
 		where
-			<type-of> x => INT() ;
 			<type-of> e1 => INT() ;
 			<type-of> e2 => INT() ;
-			<type-of> e3 => UNIT()
-			
-	type-of :
-		Break() -> UNIT()
-
-	type-of :
-		Let(ds, es) -> t
-		where
-			<type-of> Seq(es) => t
+			<type-of> e3 => NO_VAL()
 			
-/*	  TcExp :
-
-  TcExp :
-    |[ lv :: RECORD {F*} z . f ]| -> |[ lv' . f :: ty ]|
-    where <fetch(?FIELD(f, t))> [F*] // <fetch(?|[ f : ty ]|)> [F*]
-        ; <?|[ lv'' :: ty']| <+ !|[ lv :: RECORD {F*} z ]|> lv => lv'
-        ; <norm-type> t => ty
-
-  TcExp :
-    |[ lv :: ARRAY ty z [ e :: INT ] ]| -> |[ lv'[e] :: ty ]|
-    where <?|[lv'' :: ty']| <+ !|[ lv :: ARRAY ty z ]|> lv => lv'
-
-  TcExp :
-    |[ tid{f*} ]| -> |[ tid{f'*} :: ty :: ty ]|
-    where <norm-type> tid => ty@|[ RECORD {F1*} z ]|
-        ; <unzip(\ InitField|[ f = e :: ty ]| -> 
-                  (InitField|[ f = e ]|, FIELD(f, ty)  ) \ )> [f*] => ([f'*], [F2*])
-        ; <zip(FieldCompatible)> ([F1*], [F2*])
-
-  TcExp :
-    |[ tid[e1 :: INT] of [e2 :: ty2] ]| -> |[ [tid[e1] of e2] :: ty4 :: ty4 ]|
-    where  <norm-type> tid => ty4@|[ ARRAY ty3 z ]|
-        ; <eq-or-nil-r>(ty3,ty2)
-
-*/
-
-	eq-or-nil :
-		(t, t) -> t
-		
-	eq-or-nil :
-		(r at RECORD(_,_), NIL()) -> r
+	type-of : Break() -> NO_VAL()
 	
-	eq-or-nil :
-		(NIL(), r at RECORD(_,_)) -> r
+	type-of : Let(_, []) 		-> NO_VAL()
+	type-of : Let(_, es@[_|_]) 	-> <last> <map(type-of)> es	
+
+strategies 
 		
-	eq-or-nil :
-		(r at ARRAY(_,_), NIL()) -> r
+	int-or-string = ?INT() <+ ?STRING()	
+	noval-or-nil = ?NO_VAL() <+ ?NIL()		
 		
-	eq-or-nil :
-		(NIL(), r at ARRAY(_,_)) -> r
+rules
+	
+	noval-noval : (NO_VAL(), NO_VAL()) -> NO_VAL()
 		
-	eq-or-nil :
-		(r at ARRAY(t1,_), ARRAY(t2,_)) -> r 
-		where
-			<eq-or-nil> (t1,t2)
+	eq-or-nil : (t, t) -> t
+		where not ( <noval-or-nil> t )
+	
+	eq-or-nil : (r at RECORD(_, _), NIL()) -> r
+	eq-or-nil : (r at ARRAY(_, _), NIL()) -> r	
+	eq-or-nil : (NIL(), r at RECORD(_, _)) -> r
+	eq-or-nil : (NIL(), r at ARRAY(_, _)) -> r
+	
+	
\ No newline at end of file

Added: tiger-spoofax/trans/analysis/types/types.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/analysis/types/types.str	Sun Aug 29 23:06:20 2010	(r21185)
@@ -0,0 +1,30 @@
+module analysis/types/types
+
+imports
+	include/Tiger
+	
+signature constructors // types
+	
+	INT		: Ty
+	STRING 	: Ty
+	NO_VAL 	: Ty
+
+	NIL 	: Ty	
+	RECORD 	: Id * List(FEntry) -> Ty
+	ARRAY 	: Tid * Tid -> Ty
+	
+	FIELD	: Id * Tid -> FEntry
+
+rules
+	
+	pp: Tid(i)		-> $["[i]"]
+	
+	pp: INT() 		-> $["int"]
+	pp: STRING() 	-> $["string"]
+	pp: NO_VAL()	-> $["no-val"]
+	pp: NIL()		-> $["nil"]
+	
+	pp: RECORD(Tid(i), _) -> $["record [i]"]
+	pp: ARRAY(Tid(i), _) -> $["array [i]"]
+	
+	
\ No newline at end of file

Added: tiger-spoofax/trans/hover.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/hover.str	Sun Aug 29 23:06:20 2010	(r21185)
@@ -0,0 +1,14 @@
+module hover
+
+imports
+	include/Tiger
+
+imports	
+	analysis/types/types
+	analysis/types/project
+	
+rules
+
+	editor-hover: (node, position, ast, path, project-path) -> $[type: [<pp> t]]
+		where 
+			<type-of <+ var-type <+ fun-type> node => t

Modified: tiger-spoofax/trans/resolve.str
==============================================================================
--- tiger-spoofax/trans/resolve.str	Sun Aug 29 23:05:18 2010	(r21184)
+++ tiger-spoofax/trans/resolve.str	Sun Aug 29 23:06:20 2010	(r21185)
@@ -1,27 +1,45 @@
 module resolve
 
 imports
+	lib/editor-common.generated
+	lib/namespace
+
+imports
 	include/Tiger
-	rename
-	project-names
+
+imports
+	analysis/names/namespaces
+	analysis/names/project
+	
+	analysis/types/types
+	analysis/types/project
 	
 rules
+
+	editor-resolve: (node, position, ast, path, project-path) -> elem
+		where 
+			<resolve> node => elem
+
+	editor-resolve: (node, position, ast, path, project-path) -> elem
+		where 
+			<parent-at-position(|<at-last(![])> position)> ast => grandparent ;		
+			<gp-resolve> (grandparent, node) => elem
+
+rules
 	
-	resolve:
-		Tid(t) -> t'
-		where
-			<TypeDecl> t => dec ;
-			<type-name> dec => t'
+	resolve : Tid(t) 	 -> <project-declaration(type-name)> (Types(), t)  
+	resolve : Var(x) 	 -> <project-declaration(var-name)> (Vars(), x)  
+	resolve : Call(f, _) -> <project-declaration(fun-name)> (Vars(), f)  
 
-	resolve:
-		Var(x) -> y
+	resolve : 
+		FieldVar(e, f) -> fdef
 		where
-			<VarDecl> x => dec ;
-			<var-name> dec => y
-	
-	resolve:
-		Call(f, _) -> g
+			<type-of> e => RECORD(_, fs) ;
+			<fetch-elem(?FIELD(f, _))> fs => fdef
+			
+	gp-resolve :
+		(Record(r, _), InitField(f, e)) -> fdef
 		where
-			<FunDecl> f => dec ;
-			<fun-name> dec => g
-
+			<type-of> r => RECORD(_, fs) ;
+			<fetch-elem(?FIELD(f, _))> fs => fdef
+		
\ No newline at end of file

Modified: tiger-spoofax/trans/tiger.str
==============================================================================
--- tiger-spoofax/trans/tiger.str	Sun Aug 29 23:05:18 2010	(r21184)
+++ tiger-spoofax/trans/tiger.str	Sun Aug 29 23:06:20 2010	(r21185)
@@ -8,23 +8,12 @@
 
 imports
 	include/Tiger
-	analyze
-	check
+	analysis/main
 	resolve
-	desugar
+	hover
 	
 rules // Main editor interface (defined by editor/Tiger-Builders and -References.esv)
   
-	// Analyzes the current program, returning a tuple with errors, warnings, and notes;
-	// each a list of (term, message) tuples or simply (message) terms.
-	editor-analyze:
-		(ast, path, project-path) -> (ast', errors, warnings, notes)
-		with
-			editor-init;
-			<analyse> ast => ast';
-			<collect-all(editor-error, conc)> ast' 		=> errors;
-			<collect-all(editor-warning, conc)> ast' 	=> warnings;
-			<collect-all(fail, conc)> ast'				=> notes
   
 	// Prints the abstract syntax ATerm of a selection.
 	generate-aterm:
@@ -38,8 +27,8 @@
 		(selected, position, ast, path, project-path) -> (filename, result)
 		where
 			<guarantee-extension(|"aterm")> path => filename ;
-			<term-at-position(|position)> ast => result
-	
+			result := ast
+			
 	// Prints the desugared abstract syntax ATerm of a selection.
 	desugar-aterm:
 		(selected, position, ast, path, project-path) -> (filename, result)
@@ -47,11 +36,3 @@
 			<guarantee-extension(|"aterm")> path => filename ;
 			<desugar-all> selected => result
 
-	// Resolves a reference when the user control-clicks or presses F3 in the editor.
-	editor-resolve:
-		(node, position, ast, path, project-path) -> target
-    	where
-			//<lazy-analyze> ast => ast' ;
-			//<term-at-position(|position)> ast' => node' ;
-			//<debug(!"Resolve: ")> node';
-			<resolve> node => target

From g.h.wachsmuth at tudelft.nl  Mon Aug 30 01:06:53 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Sun, 29 Aug 2010 23:06:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21186 -
	tiger-spoofax/syntax
Message-ID: <201008292306.o7TN6rPx002389@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Sun Aug 29 23:06:53 2010
New Revision: 21186
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21186&sc=1

Log:
generated pp table

Added:
   tiger-spoofax/syntax/Tiger.generated.pp

Added: tiger-spoofax/syntax/Tiger.generated.pp
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/syntax/Tiger.generated.pp	Sun Aug 29 23:06:53 2010	(r21186)
@@ -0,0 +1,53 @@
+[
+   TypeDec                  -- KW["type"] _1 KW["="] _2,
+   NameTy                   -- _1,
+   RecordTy                 -- KW["{"] _1 KW["}"],
+   RecordTy.1:iter-star-sep -- _1 KW[","],
+   ArrayTy                  -- KW["array"] KW["of"] _1,
+   Field                    -- _1 KW[":"] _2,
+   Tid                      -- _1,
+   VarDec                   -- KW["var"] _1 KW[":="] _2,
+   VarDec                   -- KW["var"] _1 KW[":"] _2 KW[":="] _3,
+   FunDec                   -- KW["function"] _1 KW["("] _2 KW[")"] KW["="] _3,
+   FunDec.2:iter-star-sep   -- _1 KW[","],
+   FunDec                   -- KW["function"] _1 KW["("] _2 KW[")"] KW[":"] _3 KW["="] _4,
+   FunDec.2:iter-star-sep   -- _1 KW[","],
+   FArg                     -- _1 KW[":"] _2,
+   Assign                   -- _1 KW[":="] _2,
+   Let                      -- KW["let"] _1 KW["in"] _2 KW["end"],
+   Let.1:iter-star          -- _1,
+   Let.2:iter-star-sep      -- _1 KW[";"],
+   IfThenElse               -- KW["if"] _1 KW["then"] _2 KW["else"] _3,
+   IfThen                   -- KW["if"] _1 KW["then"] _2,
+   While                    -- KW["while"] _1 KW["do"] _2,
+   For                      -- KW["for"] _1 KW[":="] _2 KW["to"] _3 KW["do"] _4,
+   Break                    -- KW["break"],
+   Var                      -- _1,
+   FieldVar                 -- _1 KW["."] _2,
+   Subscript                -- _1 KW["["] _2 KW["]"],
+   NilExp                   -- KW["nil"],
+   NoVal                    -- KW["("] KW[")"],
+   Seq                      -- KW["("] _1 KW[")"],
+   Seq.1:iter-sep           -- _1 KW[";"],
+   Int                      -- _1,
+   String                   -- _1,
+   Uminus                   -- KW["-"] _1,
+   Call                     -- _1 KW["("] _2 KW[")"],
+   Call.2:iter-star-sep     -- _1 KW[","],
+   Plus                     -- _1 KW["+"] _2,
+   Minus                    -- _1 KW["-"] _2,
+   Times                    -- _1 KW["*"] _2,
+   Divide                   -- _1 KW["/"] _2,
+   Eq                       -- _1 KW["="] _2,
+   Neq                      -- _1 KW["<>"] _2,
+   Gt                       -- _1 KW[">"] _2,
+   Lt                       -- _1 KW["<"] _2,
+   Geq                      -- _1 KW[">="] _2,
+   Leq                      -- _1 KW["<="] _2,
+   And                      -- _1 KW["&"] _2,
+   Or                       -- _1 KW["|"] _2,
+   Record                   -- _1 KW["{"] _2 KW["}"],
+   Record.2:iter-star-sep   -- _1 KW[","],
+   Array                    -- _1 KW["["] _2 KW["]"] KW["of"] _3,
+   InitField                -- _1 KW["="] _2
+]
\ No newline at end of file

From g.h.wachsmuth at tudelft.nl  Mon Aug 30 02:04:25 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Mon, 30 Aug 2010 00:04:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21187 - in
	tiger-spoofax: editor lib trans trans/analysis/names
Message-ID: <201008300004.o7U04PVa003024@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Mon Aug 30 00:04:25 2010
New Revision: 21187
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21187&sc=1

Log:
added support for content completion

Added:
   tiger-spoofax/trans/complete.str
Modified:
   tiger-spoofax/editor/Tiger-Completions.esv
   tiger-spoofax/lib/namespace.str
   tiger-spoofax/trans/analysis/names/rename.str
   tiger-spoofax/trans/tiger.str

Modified: tiger-spoofax/editor/Tiger-Completions.esv
==============================================================================
--- tiger-spoofax/editor/Tiger-Completions.esv	Sun Aug 29 23:06:53 2010	(r21186)
+++ tiger-spoofax/editor/Tiger-Completions.esv	Mon Aug 30 00:04:25 2010	(r21187)
@@ -6,4 +6,6 @@
                                                                    
 	completion keyword	: "function"
 	
-	completion template : "if " <e> " then\n\t" <s>
\ No newline at end of file
+	completion template : "if " <e> " then\n\t" <s>
+	
+	completion proposer : editor-complete
\ No newline at end of file

Modified: tiger-spoofax/lib/namespace.str
==============================================================================
--- tiger-spoofax/lib/namespace.str	Sun Aug 29 23:06:53 2010	(r21186)
+++ tiger-spoofax/lib/namespace.str	Mon Aug 30 00:04:25 2010	(r21187)
@@ -45,12 +45,16 @@
 	
 	get-declarations = bagof-Declared
 	
+	get-all-renames = ?ns ; all-keys-Renamed ; filter(?(ns, <id>))
+	
 	get-unique-declaration = get-declarations ; ?[<id>]
 	
 	is-declared = get-declarations ; ?[_|_]
 	
 	get-declaration(s) = get-declarations ; fetch-elem(where(s)) 
 	
+	project-declarations(s) = get-declarations ; filter(s) 
+	
 	project-declaration(s) = get-declarations ; fetch-elem(s) 
 	 
 	get-references = bagof-Referred

Modified: tiger-spoofax/trans/analysis/names/rename.str
==============================================================================
--- tiger-spoofax/trans/analysis/names/rename.str	Sun Aug 29 23:06:53 2010	(r21186)
+++ tiger-spoofax/trans/analysis/names/rename.str	Mon Aug 30 00:04:25 2010	(r21187)
@@ -1,6 +1,7 @@
 module analysis/names/rename
 
 imports 
+	lib/editor-common.generated
 	lib/namespace
 
 imports
@@ -8,10 +9,12 @@
 
 imports
 	analysis/names/namespaces
+	analysis/names/project
+	complete
 	
 strategies
 
-	rename-all = alltd(rename)
+	rename-all = alltd(propose <+ rename)
 	
 rules
 	

Added: tiger-spoofax/trans/complete.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/complete.str	Mon Aug 30 00:04:25 2010	(r21187)
@@ -0,0 +1,42 @@
+module complete
+
+imports
+	lib/editor-common.generated
+	lib/namespace
+	
+	analysis/names/namespaces
+	
+imports
+	include/Tiger
+  
+	analysis/main
+	analysis/names/rename
+	
+rules 
+	
+	editor-complete:
+		(node, position, ast, path, project-path) -> proposals
+    	where
+			editor-init ;
+			<analyse> ast ;
+			<Propose> node => proposals
+
+rules
+	
+	propose:	
+		n at Var(COMPLETION(p)) -> Var(COMPLETION(p)) 
+		where 	
+			<get-all-renames> Vars() => proposals  
+		where rules (
+			Propose: n -> proposals
+		)
+		
+	propose:	
+		n at Tid(COMPLETION(p)) -> Tid(COMPLETION(p)) 
+		where 	
+			<get-all-renames> Types() => proposals  
+		where rules (
+			Propose: n -> proposals
+		)
+		
+	
\ No newline at end of file

Modified: tiger-spoofax/trans/tiger.str
==============================================================================
--- tiger-spoofax/trans/tiger.str	Sun Aug 29 23:06:53 2010	(r21186)
+++ tiger-spoofax/trans/tiger.str	Mon Aug 30 00:04:25 2010	(r21187)
@@ -11,6 +11,7 @@
 	analysis/main
 	resolve
 	hover
+	complete
 	
 rules // Main editor interface (defined by editor/Tiger-Builders and -References.esv)
   

From g.h.wachsmuth at tudelft.nl  Mon Aug 30 13:08:06 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Mon, 30 Aug 2010 11:08:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21188 - in
	tiger-spoofax: lib trans trans/analysis trans/analysis/names
	trans/analysis/types trans/editor trans/generation
Message-ID: <201008301108.o7UB86Xn013707@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: Mon Aug 30 11:08:05 2010
New Revision: 21188
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21188&sc=1

Log:
some bug fixes and reorganisation

Added:
   tiger-spoofax/lib/JavaBytecode.str
   tiger-spoofax/trans/analysis/types/desugar.str
      - copied, changed from r21185, tiger-spoofax/trans/analysis/types/desugar-ops.str
   tiger-spoofax/trans/analysis/types/operators.str
   tiger-spoofax/trans/editor/
   tiger-spoofax/trans/editor/complete.str
      - copied, changed from r21187, tiger-spoofax/trans/complete.str
   tiger-spoofax/trans/editor/hover.str
      - copied, changed from r21185, tiger-spoofax/trans/hover.str
   tiger-spoofax/trans/editor/resolve.str
      - copied, changed from r21185, tiger-spoofax/trans/resolve.str
   tiger-spoofax/trans/generation/
   tiger-spoofax/trans/generation/generate.str
Deleted:
   tiger-spoofax/trans/analysis/types/desugar-ops.str
   tiger-spoofax/trans/complete.str
   tiger-spoofax/trans/hover.str
   tiger-spoofax/trans/resolve.str
Modified:
   tiger-spoofax/trans/analysis/main.str
   tiger-spoofax/trans/analysis/names/rename.str
   tiger-spoofax/trans/analysis/types/check.str
   tiger-spoofax/trans/analysis/types/project.str
   tiger-spoofax/trans/tiger.str

Added: tiger-spoofax/lib/JavaBytecode.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/lib/JavaBytecode.str	Mon Aug 30 11:08:05 2010	(r21188)
@@ -0,0 +1,272 @@
+module JavaBytecode
+
+signature
+  constructors
+                       : InstructionList -> Start
+                       : ClassFile -> Start
+    InnerClasses       : ListStarOfInnerClass1 -> ClassAttribute
+    Attributes         : List(ClassAttribute) -> ClassAttributes
+    Interfaces         : Interfaces
+    Interfaces         : List(InterfaceRef) -> Interfaces
+    None               : Extends
+    Some               : ClassRef -> Extends
+    SuperClass         : Extends -> SuperClass
+    ThisClass          : Id -> ThisClass
+    MinorVersion       : DefaultMinorVersion
+    MajorVersion       : UInt -> OptMajorVersion
+    ClassFile          : DefaultMinorVersion * OptMajorVersion * AccessFlags * ThisClass * SuperClass * Interfaces * Fields * Methods * ClassAttributes -> ClassFile
+    LabelRef           : LabelId -> LabelRef
+    FieldRef           : ClassRef * FieldName * FieldDescriptor -> FieldRef
+    InterfaceMethodRef : InterfaceRef * MethodName * MethodDescriptor -> InterfaceMethodRef
+    MethodRef          : ClassRef * MethodName * MethodDescriptor -> MethodRef
+    Class              : ClassTypeId -> ClassRef
+    Interface          : ClassTypeId -> InterfaceRef
+                       : Id -> LabelId
+    Name               : Id -> FieldName
+    Name               : InitId -> MethodName
+    Name               : Id -> MethodName
+    ConstantValue      : Constant -> FieldAttribute
+    Attributes         : List(FieldAttribute) -> FieldAttributes
+    FieldDescriptor    : Type -> FieldDescriptor
+    Field              : AccessFlags * FieldName * FieldDescriptor * FieldAttributes -> Field
+    Fields             : List(Field) -> Fields
+    ExceptionTable     : ExceptionTable
+    Attributes         : CodeAttributes
+    Some               : Int -> SomeInt
+    MaxLocals          : SomeInt -> MaxLocals
+    MaxStack           : SomeInt -> MaxStack
+    Code               : MaxStack * MaxLocals * Instructions * ExceptionTable * CodeAttributes -> MethodAttribute
+    Synthetic          : MethodAttribute
+    Exceptions         : List(ObjectType) -> MethodAttribute
+    Attributes         : List(MethodAttribute) -> MethodAttributes
+    Param              : Type * Id -> Param
+                       : Type -> Param
+    Void               : ReturnType
+                       : Type -> ReturnType
+    MethodDescriptor   : List(Param) * ReturnType -> MethodDescriptor
+    Method             : AccessFlags * MethodName * MethodDescriptor * MethodAttributes -> Method
+    Methods            : List(Method) -> Methods
+    Instructions       : InstructionList -> Instructions
+                       : List(ListedInstruction) -> InstructionList
+                       : Instruction -> ListedInstruction
+                       : Id -> VarRef
+    BREAKPOINT         : Instruction
+    NOP                : Instruction
+    MONITOREXIT        : Instruction
+    MONITORENTER       : Instruction
+    ATHROW             : Instruction
+    ARETURN            : Instruction
+    DRETURN            : Instruction
+    FRETURN            : Instruction
+    LRETURN            : Instruction
+    IRETURN            : Instruction
+    RETURN             : Instruction
+    INVOKEINTERFACE    : InterfaceMethodRef -> Instruction
+    INVOKESTATIC       : MethodRef -> Instruction
+    INVOKEVIRTUAL      : MethodRef -> Instruction
+    INVOKESPECIAL      : MethodRef -> Instruction
+    GOTO               : LabelRef -> Instruction
+    IF_ACMPNE          : LabelRef -> Instruction
+    IF_ACMPEQ          : LabelRef -> Instruction
+    IF_ICMPGE          : LabelRef -> Instruction
+    IF_ICMPGT          : LabelRef -> Instruction
+    IF_ICMPNE          : LabelRef -> Instruction
+    IF_ICMPLE          : LabelRef -> Instruction
+    IF_ICMPLT          : LabelRef -> Instruction
+    IF_ICMPEQ          : LabelRef -> Instruction
+    IFNONNULL          : LabelRef -> Instruction
+    IFNULL             : LabelRef -> Instruction
+    IFGE               : LabelRef -> Instruction
+    IFGT               : LabelRef -> Instruction
+    IFNE               : LabelRef -> Instruction
+    IFLE               : LabelRef -> Instruction
+    IFLT               : LabelRef -> Instruction
+    IFEQ               : LabelRef -> Instruction
+    Label              : LabelId -> Instruction
+    SWAP               : Instruction
+    DUP2_X2            : Instruction
+    DUP_X2             : Instruction
+    DUP2_X1            : Instruction
+    DUP_X1             : Instruction
+    DUP2               : Instruction
+    DUP                : Instruction
+    POP2               : Instruction
+    POP                : Instruction
+    INSTANCEOF         : ObjectType -> Instruction
+    CHECKCAST          : ObjectType -> Instruction
+    ARRAYLENGTH        : Instruction
+    AASTORE            : Instruction
+    DASTORE            : Instruction
+    FASTORE            : Instruction
+    SASTORE            : Instruction
+    CASTORE            : Instruction
+    BASTORE            : Instruction
+    LASTORE            : Instruction
+    IASTORE            : Instruction
+    AALOAD             : Instruction
+    DALOAD             : Instruction
+    FALOAD             : Instruction
+    SALOAD             : Instruction
+    CALOAD             : Instruction
+    BALOAD             : Instruction
+    LALOAD             : Instruction
+    IALOAD             : Instruction
+    PUTSTATIC          : FieldRef -> Instruction
+    GETSTATIC          : FieldRef -> Instruction
+    PUTFIELD           : FieldRef -> Instruction
+    GETFIELD           : FieldRef -> Instruction
+    MULTIANEWARRAY     : ObjectType * Int -> Instruction
+    ANEWARRAY          : ObjectType -> Instruction
+    NEWARRAY           : PrimitiveType -> Instruction
+    NEW                : ObjectType -> Instruction
+    D2F                : Instruction
+    D2L                : Instruction
+    D2I                : Instruction
+    F2L                : Instruction
+    F2I                : Instruction
+    L2I                : Instruction
+    I2C                : Instruction
+    I2S                : Instruction
+    I2B                : Instruction
+    F2D                : Instruction
+    L2D                : Instruction
+    L2F                : Instruction
+    I2D                : Instruction
+    I2F                : Instruction
+    I2L                : Instruction
+    LCMP               : Instruction
+    DCMPL              : Instruction
+    DCMPG              : Instruction
+    FCMPL              : Instruction
+    FCMPG              : Instruction
+    IINC               : VarRef * Int -> Instruction
+    DSUB               : Instruction
+    DREM               : Instruction
+    DNEG               : Instruction
+    DMUL               : Instruction
+    DDIV               : Instruction
+    DADD               : Instruction
+    FSUB               : Instruction
+    FREM               : Instruction
+    FNEG               : Instruction
+    FMUL               : Instruction
+    FDIV               : Instruction
+    FADD               : Instruction
+    LXOR               : Instruction
+    LUSHR              : Instruction
+    LSUB               : Instruction
+    LSHR               : Instruction
+    LSHL               : Instruction
+    LREM               : Instruction
+    LOR                : Instruction
+    LNEG               : Instruction
+    LMUL               : Instruction
+    LDIV               : Instruction
+    LAND               : Instruction
+    LADD               : Instruction
+    IXOR               : Instruction
+    IUSHR              : Instruction
+    ISUB               : Instruction
+    ISHR               : Instruction
+    ISHL               : Instruction
+    IREM               : Instruction
+    IOR                : Instruction
+    INEG               : Instruction
+    IMUL               : Instruction
+    IDIV               : Instruction
+    IAND               : Instruction
+    IADD               : Instruction
+    ASTORE             : Id -> Instruction
+    DSTORE             : Id -> Instruction
+    FSTORE             : Id -> Instruction
+    LSTORE             : Id -> Instruction
+    ISTORE             : Id -> Instruction
+    ALOAD              : Id -> Instruction
+    DLOAD              : Id -> Instruction
+    FLOAD              : Id -> Instruction
+    LLOAD              : Id -> Instruction
+    ILOAD              : Id -> Instruction
+    LDC                : TwoWordConstant -> Instruction
+    LDC                : OneWordConstant -> Instruction
+    ACONST_NULL        : Instruction
+    DCONST_1           : Instruction
+    DCONST_0           : Instruction
+    FCONST_2           : Instruction
+    FCONST_1           : Instruction
+    FCONST_0           : Instruction
+    LCONST_1           : Instruction
+    LCONST_0           : Instruction
+    ICONST_5           : Instruction
+    ICONST_4           : Instruction
+    ICONST_3           : Instruction
+    ICONST_2           : Instruction
+    ICONST_1           : Instruction
+    ICONST_0           : Instruction
+    ICONST_M1          : Instruction
+    SIPUSH             : Int -> Instruction
+    BIPUSH             : Int -> Instruction
+                       : PrimitiveType -> Type
+                       : NonPrimitiveType -> Type
+                       : ObjectType -> NonPrimitiveType
+                       : ArrayType -> NonPrimitiveType
+    ObjectType         : ClassTypeId -> ObjectType
+    ArrayType          : Type -> ArrayType
+    Boolean            : PrimitiveType
+    Short              : PrimitiveType
+    Long               : PrimitiveType
+    Int                : PrimitiveType
+    Float              : PrimitiveType
+    Double             : PrimitiveType
+    Char               : PrimitiveType
+    Byte               : PrimitiveType
+                       : String -> InitId
+                       : String -> Id
+    Enum               : AccessFlag
+    Annotation         : AccessFlag
+    Synthetic          : AccessFlag
+    Strict             : AccessFlag
+    Abstract           : AccessFlag
+    Interface          : AccessFlag
+    Native             : AccessFlag
+    Transient          : AccessFlag
+    Varargs            : AccessFlag
+    Volatile           : AccessFlag
+    Bridge             : AccessFlag
+    Super              : AccessFlag
+    Synchronized       : AccessFlag
+    Final              : AccessFlag
+    Static             : AccessFlag
+    Protected          : AccessFlag
+    Private            : AccessFlag
+    Public             : AccessFlag
+    AccessFlags        : List(AccessFlag) -> AccessFlags
+    Null               : Constant
+                       : TwoWordConstant -> Constant
+                       : OneWordConstant -> Constant
+    Double             : Float -> TwoWordConstant
+    Long               : Int -> TwoWordConstant
+    Float              : Float -> OneWordConstant
+    Int                : Int -> OneWordConstant
+    Short              : Int -> OneWordConstant
+    Char               : Int -> OneWordConstant
+    Byte               : Int -> OneWordConstant
+    Boolean            : Boolean -> OneWordConstant
+    False              : Boolean
+    True               : Boolean
+                       : String -> ClassTypeId
+                       : String -> Float
+                       : String -> Int
+                       : String -> UInt
+
+
+signature
+  constructors
+    Some : a -> Option(a)
+    None : Option(a)
+
+
+signature
+  constructors
+    Cons : a * List(a) -> List(a)
+    Nil  : List(a)
+    Conc : List(a) * List(a) -> List(a)

Modified: tiger-spoofax/trans/analysis/main.str
==============================================================================
--- tiger-spoofax/trans/analysis/main.str	Mon Aug 30 00:04:25 2010	(r21187)
+++ tiger-spoofax/trans/analysis/main.str	Mon Aug 30 11:08:05 2010	(r21188)
@@ -9,14 +9,14 @@
 	analysis/names/map
 	analysis/names/check
 	
-	analysis/types/desugar-ops
+	analysis/types/desugar
 	analysis/types/check
 		
 strategies
 
-	desugar-all = topdown(repeat(desugar-op))	
+	desugar-all = topdown(repeat(desugar))	
 			
-	analyse = rename-all ; store-all ; desugar-all
+	analyse = desugar-all ; rename-all ; store-all
 
 rules
 	

Modified: tiger-spoofax/trans/analysis/names/rename.str
==============================================================================
--- tiger-spoofax/trans/analysis/names/rename.str	Mon Aug 30 00:04:25 2010	(r21187)
+++ tiger-spoofax/trans/analysis/names/rename.str	Mon Aug 30 11:08:05 2010	(r21188)
@@ -10,7 +10,7 @@
 imports
 	analysis/names/namespaces
 	analysis/names/project
-	complete
+	editor/complete
 	
 strategies
 
@@ -67,7 +67,7 @@
 		For(x, e1, e2, e3) -> For(y, e1', e2', e3')
 		where 
 			<rename-all> e1 => e1' ;
-			<rename-all> e1 => e2' ;
+			<rename-all> e2 => e2' ;
 			new-scope (
 				<rename-declaration> (Vars(), x) => y ;
 				<rename-all> e3 => e3'

Modified: tiger-spoofax/trans/analysis/types/check.str
==============================================================================
--- tiger-spoofax/trans/analysis/types/check.str	Mon Aug 30 00:04:25 2010	(r21187)
+++ tiger-spoofax/trans/analysis/types/check.str	Mon Aug 30 11:08:05 2010	(r21188)
@@ -7,7 +7,7 @@
 	include/Tiger
 
 imports
-	analysis/types/desugar-ops
+	analysis/types/operators
 	analysis/types/types
 	analysis/types/project
 	analysis/types/predefined
@@ -80,13 +80,13 @@
 	
 	editor-error:
 		e at Call(f, es) -> (e, "Wrong number of arguments.")
-		where <project-declaration(fun-type) <+ standard-lib-fun> f => (ts, t)
+		where <project-declaration(type-of) <+ standard-lib-fun> f => (ts, t)
 		where not( <eq> (<length> es, <length> ts) ) 
 
 	editor-error:
 		Call(f, es) -> errors
 		
-		where <project-declaration(fun-type) <+ standard-lib-fun> f => (ts, t)
+		where <project-declaration(type-of) <+ standard-lib-fun> f => (ts, t)
 		where <zip(check-exp(eq-or-nil))> (es, ts) => errors 
 				
 rules // binary expressions
@@ -103,21 +103,16 @@
 	
 	editor-error:
 		Rop(op, e1, e2) -> (e1, $[Expression is of type [<pp> t] instead of type [<pp> INT()] or [<pp> STRING()].])
-		where <elem> (op, [LT(), GT()])
+		where <elem> (op, [LT(), LE()])
 		where <type-of> e1 => t
 		where not (<int-or-string> t)
 	
 	editor-error:
 		Rop(op, e1, e2) -> error
-		where <elem> (op, [LT(), GT()])
+		where <elem> (op, [LT(), LE()])
 		where <int-or-string> <type-of> e1 => t
 		where <check-exp(eq)> (e2, t) => error
 	
-	editor-error:
-		Rop(op, e1, e2) -> errors
-		where <elem> (op, [LE(), GE()])
-		where <filter(check-exp(eq))> [(e1, INT()), (e2, INT())] => errors
-
 rules // statements
 	
 	editor-error:
@@ -147,4 +142,12 @@
 	check-exp(eq):
 		(e, t) -> (e, $[Expression is of type [<pp> t'] instead of type [<pp> t].])
 		where <type-of> e => t'
-		where not (<eq> (t, t'))		
+		where not (<eq> (t, t'))	
+		
+rules
+	
+	editor-warning:
+		e -> (e, $[Untyped expression.])
+		where fail
+		where not ( <is-string <+ is-list > e )
+		where not ( <type-of> e )

Copied and modified: tiger-spoofax/trans/analysis/types/desugar.str (from r21185, tiger-spoofax/trans/analysis/types/desugar-ops.str)
==============================================================================
--- tiger-spoofax/trans/analysis/types/desugar-ops.str	Sun Aug 29 23:06:20 2010	(r21185, copy source)
+++ tiger-spoofax/trans/analysis/types/desugar.str	Mon Aug 30 11:08:05 2010	(r21188)
@@ -1,40 +1,35 @@
-module analysis/types/desugar-ops
+module analysis/types/desugar
 
 imports 
 	include/Tiger
 
-signature constructors // operators
-	PLUS: 	BinOp
-	MINUS: 	BinOp
-	MUL: 	BinOp
-	DIV: 	BinOp
+	analysis/types/operators
 	
-	EQ: 	RelOp
-	NE: 	RelOp
-	LE: 	RelOp
-	LT: 	RelOp
-	GE: 	RelOp
-	GT: 	RelOp
-	
-	Bop: BinOp * Expr * Expr -> Expr
-	Rop: RelOp * Expr * Expr -> Expr
-
 rules // operators
 
-	desugar-op: Uminus(e) 		-> Bop(MINUS(), Int("0"), e)
+	desugar: Uminus(e) 		-> Bop(MINUS(), Int("0"), e)
 	
-	desugar-op: Plus(e1, e2) 	-> Bop(PLUS(), e1, e2)
-	desugar-op: Minus(e1, e2) 	-> Bop(MINUS(), e1, e2)
-	desugar-op: Times(e1, e2) 	-> Bop(MUL(), e1, e2)
-	desugar-op: Divide(e1, e2)	-> Bop(DIV(), e1, e2)
+	desugar: Plus(e1, e2) 	-> Bop(PLUS(), e1, e2)
+	desugar: Minus(e1, e2) 	-> Bop(MINUS(), e1, e2)
+	desugar: Times(e1, e2) 	-> Bop(MUL(), e1, e2)
+	desugar: Divide(e1, e2)	-> Bop(DIV(), e1, e2)
 	
-	desugar-op: Eq(e1, e2) 		-> Rop(EQ(), e1, e2)
-	desugar-op: Neq(e1, e2) 	-> Rop(NE(), e1, e2)
-	desugar-op: Leq(e1, e2) 	-> Rop(LE(), e1, e2)
-	desugar-op: Lt(e1, e2) 		-> Rop(LT(), e1, e2)
-	desugar-op: Geq(e1, e2) 	-> Rop(GE(), e1, e2)
-	desugar-op: Gt(e1, e2) 		-> Rop(GT(), e1, e2)
+	desugar: Eq(e1, e2) 	-> Rop(EQ(), e1, e2)
+	desugar: Neq(e1, e2) 	-> Rop(NE(), e1, e2)
+	desugar: Leq(e1, e2) 	-> Rop(LE(), e1, e2)
+	desugar: Lt(e1, e2) 	-> Rop(LT(), e1, e2)
+	desugar: Geq(e1, e2) 	-> Rop(LE(), e2, e1)
+	desugar: Gt(e1, e2) 	-> Rop(LT(), e2, e1)
 
-	desugar-op: And(e1, e2) 	-> IfThenElse(e1, e2, Int("0"))
-	desugar-op: Or(e1, e2) 		-> IfThenElse(e1, Int("1"), e2)
-	
\ No newline at end of file
+	desugar: And(e1, e2) 	-> IfThenElse(e1, e2, Int("0"))
+	desugar: Or(e1, e2) 	-> IfThenElse(e1, Int("1"), e2)
+	
+	desugar: IfThen(e1, e2) -> IfThenElse(e1, e2, NoVal())
+	
+/*	desugar: For(v, e1, e2, e3) -> Let([decl], [while])
+		where
+			!VarDec(v, Tid("int"), e1) => decl ;
+			!Rop(LE(), Var(v), e2) => check ;
+			!Assign(Var(v), Bop(PLUS(), Var(v), Int("1"))) => inc ;
+			!While(check, Seq([e3, inc])) => while
+*/			
\ No newline at end of file

Added: tiger-spoofax/trans/analysis/types/operators.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/analysis/types/operators.str	Mon Aug 30 11:08:05 2010	(r21188)
@@ -0,0 +1,15 @@
+module analysis/types/operators 
+
+signature constructors // operators
+	PLUS: 	BinOp
+	MINUS: 	BinOp
+	MUL: 	BinOp
+	DIV: 	BinOp
+	
+	EQ: 	RelOp
+	NE: 	RelOp
+	LE: 	RelOp
+	LT: 	RelOp
+	
+	Bop: BinOp * Expr * Expr -> Expr
+	Rop: RelOp * Expr * Expr -> Expr

Modified: tiger-spoofax/trans/analysis/types/project.str
==============================================================================
--- tiger-spoofax/trans/analysis/types/project.str	Mon Aug 30 00:04:25 2010	(r21187)
+++ tiger-spoofax/trans/analysis/types/project.str	Mon Aug 30 11:08:05 2010	(r21188)
@@ -9,20 +9,20 @@
 	analysis/names/namespaces
 
 	analysis/types/types
-	analysis/types/desugar-ops
+	analysis/types/operators
 	analysis/types/predefined
 	
 rules // declarations
 	
 	type-type	: TypeDec(_, t) -> t
 	
-	var-type	: VarDec(_, e) 		-> <type-of> e
-	var-type	: VarDec(_, t, _) 	-> <type-of> t
-	var-type	: For(_, _, _, _) 	-> INT()
-	var-type	: FArg(_, t) 		-> <type-of> t
+	type-of	: VarDec(_, e) 		-> <type-of> e
+	type-of	: VarDec(_, t, _) 	-> <type-of> t
+	type-of	: For(_, _, _, _) 	-> INT()
+	type-of	: FArg(_, t) 		-> <type-of> t
 		
-	fun-type	: FunDec(_, as, _) 		-> (<map(var-type)> as, NO_VAL())
-	fun-type	: FunDec(_, as, t, _) 	-> (<map(var-type)> as, <type-of> t)
+	type-of	: FunDec(_, as, _) 		-> (<map(type-of)> as, NO_VAL())
+	type-of	: FunDec(_, as, t, _) 	-> (<map(type-of)> as, <type-of> t)
 
 rules // types
 	
@@ -53,7 +53,7 @@
 rules // lvalues
 	
 	type-of : 
-		Var(x) 	-> <project-declaration(var-type)> (Vars(), x) 
+		Var(x) 	-> <project-declaration(type-of)> (Vars(), x) 
   	
   	type-of :
   		FieldVar(e, f) -> t
@@ -73,12 +73,12 @@
 	type-of : 
 		Call(f, es) -> t
 		where
-			<project-declaration(fun-type) <+ standard-lib-fun> f => (ts, t) ;
+			<project-declaration(type-of) <+ standard-lib-fun> f => (ts, t) ;
 			<zip(eq-or-nil)> (ts, <map(type-of)> es)
 								
   	type-of : NilExp() 	-> NIL()
 	type-of : NoVal() 	-> NO_VAL()
-	type-of : Seq(es) 	-> <last> <map(type-of)> es 
+	type-of : Seq(es) 	->  <last> <map(type-of)> es 
   	type-of : Int(_) 	-> INT()
 	type-of : String(_) -> STRING()		
  	
@@ -98,9 +98,7 @@
 	check-rop : (EQ(), t1, t2) -> <eq-or-nil> (t1, t2)
 	check-rop : (NE(), t1, t2) -> <eq-or-nil> (t1, t2)
 	check-rop : (LT(), t, t) -> <int-or-string> t
-	check-rop : (GT(), t, t) -> <int-or-string> t
-	check-rop : (LE(), INT(), INT()) -> INT()
-	check-rop : (GE(), INT(), INT()) -> INT()
+	check-rop : (LE(), t, t) -> <int-or-string> t
 	
 	type-of :
 		Record(tn, inits) -> t

Copied and modified: tiger-spoofax/trans/editor/complete.str (from r21187, tiger-spoofax/trans/complete.str)
==============================================================================
--- tiger-spoofax/trans/complete.str	Mon Aug 30 00:04:25 2010	(r21187, copy source)
+++ tiger-spoofax/trans/editor/complete.str	Mon Aug 30 11:08:05 2010	(r21188)
@@ -1,4 +1,4 @@
-module complete
+module editor/complete
 
 imports
 	lib/editor-common.generated

Copied and modified: tiger-spoofax/trans/editor/hover.str (from r21185, tiger-spoofax/trans/hover.str)
==============================================================================
--- tiger-spoofax/trans/hover.str	Sun Aug 29 23:06:20 2010	(r21185, copy source)
+++ tiger-spoofax/trans/editor/hover.str	Mon Aug 30 11:08:05 2010	(r21188)
@@ -1,4 +1,4 @@
-module hover
+module editor/hover
 
 imports
 	include/Tiger
@@ -11,4 +11,4 @@
 
 	editor-hover: (node, position, ast, path, project-path) -> $[type: [<pp> t]]
 		where 
-			<type-of <+ var-type <+ fun-type> node => t
+			<type-of> node => t

Copied and modified: tiger-spoofax/trans/editor/resolve.str (from r21185, tiger-spoofax/trans/resolve.str)
==============================================================================
--- tiger-spoofax/trans/resolve.str	Sun Aug 29 23:06:20 2010	(r21185, copy source)
+++ tiger-spoofax/trans/editor/resolve.str	Mon Aug 30 11:08:05 2010	(r21188)
@@ -1,4 +1,4 @@
-module resolve
+module editor/resolve
 
 imports
 	lib/editor-common.generated

Added: tiger-spoofax/trans/generation/generate.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ tiger-spoofax/trans/generation/generate.str	Mon Aug 30 11:08:05 2010	(r21188)
@@ -0,0 +1,38 @@
+module generate
+
+imports
+	include/Tiger
+	lib/JavaBytecode
+	
+	analysis/types/desugar-ops
+	analysis/types/types
+	analysis/types/project
+	
+rules
+	
+	to-jbc:	Int(i) -> LDC(Int(i)) 
+	
+	to-jbc: Bop(op, e1, e2) -> [ <to-jbc> e1, <to-jbc> e2, <to-jbc> op ]
+	to-jbc: Rop(op, e1, e2) -> [ <to-jbc> e1, <to-jbc> e2, <to-jbc> op ]
+	
+	to-jbc: PLUS() 	-> IADD()
+	to-jbc: MINUS()	-> ISUB()
+	to-jbc: MUL() 	-> IMUL()
+	to-jbc: DIV()	-> IDIV()
+	
+	to-jbc:
+		Lt(e1, e2) -> [ <to-jbc> e1, 
+						<to-jbc> e2, 
+						IF_ICMPGE(LabelRef(l1)), 
+						ICONST_1(), 
+						GOTO(LabelRef(l2)),
+						Label(l1),
+						ICONST_0(),
+						Label(l2) ]
+		where
+			<type-of> e1 => INT() ;
+			<type-of> e2 => INT() ;
+			<newname> "label" => l1 ;
+			<newname> "label" => l2
+	
+	
\ No newline at end of file

Modified: tiger-spoofax/trans/tiger.str
==============================================================================
--- tiger-spoofax/trans/tiger.str	Mon Aug 30 00:04:25 2010	(r21187)
+++ tiger-spoofax/trans/tiger.str	Mon Aug 30 11:08:05 2010	(r21188)
@@ -9,9 +9,9 @@
 imports
 	include/Tiger
 	analysis/main
-	resolve
-	hover
-	complete
+	editor/resolve
+	editor/hover
+	editor/complete
 	
 rules // Main editor interface (defined by editor/Tiger-Builders and -References.esv)
   

From m.dejonge at tudelft.nl  Tue Aug 31 10:32:55 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 31 Aug 2010 08:32:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21193 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201008310832.o7V8WtLF000934@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue Aug 31 08:32:55 2010
New Revision: 21193
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21193&sc=1

Log:
bugfix  offset-with-layout: 
[indent][comments-before][node][comments-after][/n]
[/n] was not included

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/DocumentStructure.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/DocumentStructure.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/DocumentStructure.java	Mon Aug 30 14:56:29 2010	(r21192)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/DocumentStructure.java	Tue Aug 31 08:32:55 2010	(r21193)
@@ -34,10 +34,12 @@
 			endOffset=node.getRightIToken().getEndOffset()+1;
 		int lookForward=endOffset-1;
 		do{
-			if(getLexStream().getCharValue(endOffset)=='\n')
+			if(getLexStream().getCharValue(lookForward)=='\n'){
 				endOffset=lookForward+1;
+				break;
+			}
 			lookForward++;
-		} while(lookForward < getLexStream().getStreamLength() && isSpaceChar(getLexStream().getCharValue(lookForward)));
+		} while(lookForward < getLexStream().getStreamLength() && Character.isWhitespace(getLexStream().getCharValue(lookForward)));
 		return endOffset;
 	}
 

From R.B.Vermaas at tudelft.nl  Mon Aug  2 11:58:15 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 02 Aug 2010 09:58:15 -0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21133 - hydra/webdsl
Message-ID: <201008020958.o729wD8R003180@proliant.st.ewi.tudelft.nl>

Author: rob
Date: Mon Aug  2 09:58:00 2010
New Revision: 21133
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21133&sc=1

Log:
test

Modified:
   hydra/webdsl/tests.nix

Modified: hydra/webdsl/tests.nix
==============================================================================
--- hydra/webdsl/tests.nix	Mon Jul 26 16:44:59 2010	(r21132)
+++ hydra/webdsl/tests.nix	Mon Aug  2 09:58:00 2010	(r21133)
@@ -81,7 +81,7 @@
               FILE=`basename $test .app`
 
               echo "Executing 'webdsl test-web $FILE"
-              webdsl test-web $FILE 2>&1 || export FAILED="1"
+              webdsl test-web $FILE 1>&2 || export FAILED="1"
               stopNest
             done
             echo "Test FAILED: $FAILED"

From R.B.Vermaas at tudelft.nl  Thu Aug  5 15:15:23 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 05 Aug 2010 13:15:23 -0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21136 - hydra/webdsl
Message-ID: <201008051315.o75DFIdX031775@proliant.st.ewi.tudelft.nl>

Author: rob
Date: Thu Aug  5 13:14:59 2010
New Revision: 21136
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21136&sc=1

Log:
webdsl/tests.nix:
  - make sure $out is produced
  - remove redirect of stdout to stderr so logging is nicer

Modified:
   hydra/webdsl/tests.nix

Modified: hydra/webdsl/tests.nix
==============================================================================
--- hydra/webdsl/tests.nix	Wed Aug  4 13:10:38 2010	(r21135)
+++ hydra/webdsl/tests.nix	Thu Aug  5 13:14:59 2010	(r21136)
@@ -69,6 +69,7 @@
           buildInputs = [pkgs.ant pkgs.jdk pkgs.firefox webdsl];
           buildCommand = '' 
             cp -R ${webdslSrc}/test/succeed-web succeed-web
+            ensureDir $out
             
             cd succeed-web
             TOPDIR=`pwd`
@@ -81,7 +82,7 @@
               FILE=`basename $test .app`
 
               echo "Executing 'webdsl test-web $FILE"
-              webdsl test-web $FILE 1>&2 || export FAILED="1"
+              webdsl test-web $FILE || export FAILED="1"
               stopNest
             done
             echo "Test FAILED: $FAILED"
@@ -89,7 +90,7 @@
               exit 0
             else
               exit 1
-            fi
+            fi            
           '';
         };
       };

From R.B.Vermaas at tudelft.nl  Thu Aug  5 15:36:32 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 05 Aug 2010 13:36:32 -0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21137 - hydra/webdsl
Message-ID: <201008051336.o75DaUBv031925@proliant.st.ewi.tudelft.nl>

Author: rob
Date: Thu Aug  5 13:36:28 2010
New Revision: 21137
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21137&sc=1

Log:
redirect stderr to stdout to have errors in proper place in log

Modified:
   hydra/webdsl/tests.nix

Modified: hydra/webdsl/tests.nix
==============================================================================
--- hydra/webdsl/tests.nix	Thu Aug  5 13:14:59 2010	(r21136)
+++ hydra/webdsl/tests.nix	Thu Aug  5 13:36:28 2010	(r21137)
@@ -82,7 +82,7 @@
               FILE=`basename $test .app`
 
               echo "Executing 'webdsl test-web $FILE"
-              webdsl test-web $FILE || export FAILED="1"
+              webdsl test-web $FILE 2>&1 || export FAILED="1"
               stopNest
             done
             echo "Test FAILED: $FAILED"

From R.B.Vermaas at tudelft.nl  Fri Aug 27 14:50:30 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Fri, 27 Aug 2010 12:50:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21176 - hydra/jobs
Message-ID: <201008271250.o7RCoULF007903@proliant.st.ewi.tudelft.nl>

Author: rob
Date: Fri Aug 27 12:50:29 2010
New Revision: 21176
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21176&sc=1

Log:
test

Modified:
   hydra/jobs/strategoxt.nix

Modified: hydra/jobs/strategoxt.nix
==============================================================================
--- hydra/jobs/strategoxt.nix	Thu Aug 26 13:30:15 2010	(r21175)
+++ hydra/jobs/strategoxt.nix	Fri Aug 27 12:50:29 2010	(r21176)
@@ -15,6 +15,29 @@
       } ; 
    
       spec = specs.strategoxt ; 
+
+      extraJobs = builder : {
+        parseTables = { tarball ? jobs.tarball }:
+          let 
+            pkgs = (import nixpkgs {});
+            build = jobs.build { system = "x86_64-linux"; } ;
+          in
+            pkgs.stdenv.mkDerivation {
+              name = "parse-tables-"+build.name ;
+              buildCommand = ''
+                ensureDir $out/nix-support
+                ensureDir $out/parse-tables
+                
+                find ${build} -name *.tbl | xargs -I{} ln -s {} $out/parse-tables/
+
+                for tbl in $out/parse-tables/* 
+                do
+                  echo "file tbl $tbl" >> $out/nix-support/hydra-build-products
+                done
+              '';
+            };
+      };
+
     }) ["tarball"] ;
 
 in jobs

From R.B.Vermaas at tudelft.nl  Fri Aug 27 15:06:07 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Fri, 27 Aug 2010 13:06:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21177 - hydra/jobs
Message-ID: <201008271306.o7RD67FV008249@proliant.st.ewi.tudelft.nl>

Author: rob
Date: Fri Aug 27 13:06:07 2010
New Revision: 21177
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21177&sc=1

Log:
typo

Modified:
   hydra/jobs/strategoxt.nix

Modified: hydra/jobs/strategoxt.nix
==============================================================================
--- hydra/jobs/strategoxt.nix	Fri Aug 27 12:50:29 2010	(r21176)
+++ hydra/jobs/strategoxt.nix	Fri Aug 27 13:06:07 2010	(r21177)
@@ -28,7 +28,7 @@
                 ensureDir $out/nix-support
                 ensureDir $out/parse-tables
                 
-                find ${build} -name *.tbl | xargs -I{} ln -s {} $out/parse-tables/
+                find ${build} -name '*.tbl' | xargs -I{} ln -s {} $out/parse-tables/
 
                 for tbl in $out/parse-tables/* 
                 do

From R.B.Vermaas at tudelft.nl  Mon Aug 30 16:23:20 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 30 Aug 2010 14:23:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21189 - hydra
Message-ID: <201008301423.o7UENKp5016489@proliant.st.ewi.tudelft.nl>

Author: rob
Date: Mon Aug 30 14:23:20 2010
New Revision: 21189
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21189&sc=1

Log:
build.nix: add $out/lib to PATH for cygwin

Modified:
   hydra/build.nix

Modified: hydra/build.nix
==============================================================================
--- hydra/build.nix	Mon Aug 30 11:08:05 2010	(r21188)
+++ hydra/build.nix	Mon Aug 30 14:23:20 2010	(r21189)
@@ -92,7 +92,7 @@
 
     } // (if pkgs.stdenv.system == "i686-cygwin" then 
             { preConfigure = ''
-                export PATH=$PATH:${pkgs.lib.concatStringsSep ":" (map (p: "${p}/lib") buildInputs)}
+                export PATH=$PATH:$out/lib:${pkgs.lib.concatStringsSep ":" (map (p: "${p}/lib") buildInputs)}
               ''; 
             } 
           else {}

From R.B.Vermaas at tudelft.nl  Mon Aug 30 16:51:59 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 30 Aug 2010 14:51:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21190 -
	hydra/strategoxt
Message-ID: <201008301451.o7UEpxox016758@proliant.st.ewi.tudelft.nl>

Author: rob
Date: Mon Aug 30 14:51:57 2010
New Revision: 21190
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21190&sc=1

Log:
strategoxt/packages.nix: set stack size to 64000 for aspectj-front build on 64 bit mac osx

Modified:
   hydra/strategoxt/packages.nix

Modified: hydra/strategoxt/packages.nix
==============================================================================
--- hydra/strategoxt/packages.nix	Mon Aug 30 14:23:20 2010	(r21189)
+++ hydra/strategoxt/packages.nix	Mon Aug 30 14:51:57 2010	(r21190)
@@ -692,7 +692,8 @@
        * On Cygwin using -g prints a lot warnings (STR-556)
        */
       customEnv =
-        if (isMinGW pkgs) || (isCygwin pkgs) then { CFLAGS = "-O2 -Wl,--stack=0x2300000";} else {};
+        pkgs.lib.optionalAttrs (isMinGW pkgs) || (isCygwin pkgs) { CFLAGS = "-O2 -Wl,--stack=0x2300000";} 
+        // pkgs.lib.optionalAttrs (pkgs.stdenv.system == "x86_64-darwin") { preConfigure = "uname -s 64000"; } ;
 
       /**
        * On MinGW we don't have Stratego/XT, so we cannot run a check.

From R.B.Vermaas at tudelft.nl  Mon Aug 30 16:54:26 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 30 Aug 2010 14:54:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21191 -
	hydra/strategoxt
Message-ID: <201008301454.o7UEsQjd016801@proliant.st.ewi.tudelft.nl>

Author: rob
Date: Mon Aug 30 14:54:26 2010
New Revision: 21191
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21191&sc=1

Log:
typo

Modified:
   hydra/strategoxt/packages.nix

Modified: hydra/strategoxt/packages.nix
==============================================================================
--- hydra/strategoxt/packages.nix	Mon Aug 30 14:51:57 2010	(r21190)
+++ hydra/strategoxt/packages.nix	Mon Aug 30 14:54:26 2010	(r21191)
@@ -692,7 +692,7 @@
        * On Cygwin using -g prints a lot warnings (STR-556)
        */
       customEnv =
-        pkgs.lib.optionalAttrs (isMinGW pkgs) || (isCygwin pkgs) { CFLAGS = "-O2 -Wl,--stack=0x2300000";} 
+        pkgs.lib.optionalAttrs ( (isMinGW pkgs) || (isCygwin pkgs) ) { CFLAGS = "-O2 -Wl,--stack=0x2300000";} 
         // pkgs.lib.optionalAttrs (pkgs.stdenv.system == "x86_64-darwin") { preConfigure = "uname -s 64000"; } ;
 
       /**

From R.B.Vermaas at tudelft.nl  Mon Aug 30 16:56:29 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 30 Aug 2010 14:56:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21192 -
	hydra/strategoxt
Message-ID: <201008301456.o7UEuTw0016834@proliant.st.ewi.tudelft.nl>

Author: rob
Date: Mon Aug 30 14:56:29 2010
New Revision: 21192
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21192&sc=1

Log:
another typo, need coffee

Modified:
   hydra/strategoxt/packages.nix

Modified: hydra/strategoxt/packages.nix
==============================================================================
--- hydra/strategoxt/packages.nix	Mon Aug 30 14:54:26 2010	(r21191)
+++ hydra/strategoxt/packages.nix	Mon Aug 30 14:56:29 2010	(r21192)
@@ -693,7 +693,7 @@
        */
       customEnv =
         pkgs.lib.optionalAttrs ( (isMinGW pkgs) || (isCygwin pkgs) ) { CFLAGS = "-O2 -Wl,--stack=0x2300000";} 
-        // pkgs.lib.optionalAttrs (pkgs.stdenv.system == "x86_64-darwin") { preConfigure = "uname -s 64000"; } ;
+        // pkgs.lib.optionalAttrs (pkgs.stdenv.system == "x86_64-darwin") { preConfigure = "ulimit -s 64000"; } ;
 
       /**
        * On MinGW we don't have Stratego/XT, so we cannot run a check.

From R.B.Vermaas at tudelft.nl  Tue Aug 31 10:59:43 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 31 Aug 2010 08:59:43 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21194 -
	hydra/strategoxt
Message-ID: <201008310859.o7V8xhrf001176@proliant.st.ewi.tudelft.nl>

Author: rob
Date: Tue Aug 31 08:59:43 2010
New Revision: 21194
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21194&sc=1

Log:
aster, makeDistRequiresInstall = true, to fix tarball build

Modified:
   hydra/strategoxt/packages.nix

Modified: hydra/strategoxt/packages.nix
==============================================================================
--- hydra/strategoxt/packages.nix	Tue Aug 31 08:32:55 2010	(r21193)
+++ hydra/strategoxt/packages.nix	Tue Aug 31 08:59:43 2010	(r21194)
@@ -231,7 +231,7 @@
       buildInputs = [pkgs.pkgconfig];
       requires = [strategoxt aterm sdf2Bundle];
 
-      makeDistRequiresInstall = false;
+      makeDistRequiresInstall = true;
       rpmBuildSupported = false;
       rpmRequires = requires;
       systemSupported = systemSupport pkgs {

From R.B.Vermaas at tudelft.nl  Tue Aug 31 11:29:17 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 31 Aug 2010 09:29:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21195 -
	strc-java/trunk/tools
Message-ID: <201008310929.o7V9THHj001628@proliant.st.ewi.tudelft.nl>

Author: rob
Date: Tue Aug 31 09:29:16 2010
New Revision: 21195
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21195&sc=1

Log:
fix typo JAVAFLAGS -> JAVACFLAGS

Modified:
   strc-java/trunk/tools/strj-jar

Modified: strc-java/trunk/tools/strj-jar
==============================================================================
--- strc-java/trunk/tools/strj-jar	Tue Aug 31 08:59:43 2010	(r21194)
+++ strc-java/trunk/tools/strj-jar	Tue Aug 31 09:29:16 2010	(r21195)
@@ -5,7 +5,7 @@
 PRINT_CLASSPATH=
 JAR=`if type -p fastjar &>/dev/null; then echo fastjar; else echo jar; fi`
 JAVAC=`if type -p ecj &>/dev/null; then echo ecj; else echo javac; fi`
-if [ "$JAVAFLAGS" == "" ]; then
+if [ "$JAVACFLAGS" == "" ]; then
   JAVACFLAGS="-J-Xmx256m -J-Xms100m -J-server -J-XX:+UseParallelGC -encoding UTF-8"
 fi
 

From R.B.Vermaas at tudelft.nl  Tue Aug 31 11:31:21 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 31 Aug 2010 09:31:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r21196 - hydra/jobs
Message-ID: <201008310931.o7V9VLmk001645@proliant.st.ewi.tudelft.nl>

Author: rob
Date: Tue Aug 31 09:31:21 2010
New Revision: 21196
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21196&sc=1

Log:
set JAVACFLAGS for asterJava

Modified:
   hydra/jobs/aster.nix

Modified: hydra/jobs/aster.nix
==============================================================================
--- hydra/jobs/aster.nix	Tue Aug 31 09:29:16 2010	(r21195)
+++ hydra/jobs/aster.nix	Tue Aug 31 09:31:21 2010	(r21196)
@@ -33,6 +33,7 @@
                   ./bootstrap
                 '';
                 buildPhase = ''
+                  export JAVACFLAGS="-J-Xmx512m -J-Xms100m -J-server -J-XX:+UseParallelGC -encoding UTF-8"
                   make
                   make -C trans java/aster.jar
                 '';

