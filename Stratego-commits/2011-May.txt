From seba at informatik.uni-marburg.de  Sun May  1 18:32:14 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Sun, 01 May 2011 16:32:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22703 -
	sugarj/trunk/compiler/org/sugarj/driver
Message-ID: <20110501163214.0B943CC0D2@mx4.tudelft.nl>

Author: SebastianErdweg
Date: Sun May  1 16:32:13 2011
New Revision: 22703
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22703&sc=1

Log:
couple of smaller fixes

Modified:
   sugarj/trunk/compiler/org/sugarj/driver/Driver.java

Modified: sugarj/trunk/compiler/org/sugarj/driver/Driver.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/Driver.java	Sat Apr 30 18:55:28 2011	(r22702)
+++ sugarj/trunk/compiler/org/sugarj/driver/Driver.java	Sun May  1 16:32:13 2011	(r22703)
@@ -266,9 +266,11 @@
       // check final grammar and transformation for errors
       if (!Environment.noChecking) {
         checkCurrentGrammar();
-        checkCurrentTransformation();
       }
       
+      // need to build current transformation program for editor services
+      checkCurrentTransformation();
+      
       // COMPILE the generated java file
       compileGeneratedJavaFile();
       
@@ -347,7 +349,8 @@
         "processing",
         "PROCESS the desugared editor services declaration.");
     try {
-      sugaredTypeOrSugarDecls.add(lastSugaredToplevelDecl);
+      if (!sugaredTypeOrSugarDecls.contains(lastSugaredToplevelDecl))
+        sugaredTypeOrSugarDecls.add(lastSugaredToplevelDecl);
       
       String extName = null;
       String fullExtName = null;
@@ -387,8 +390,9 @@
           throw new IllegalStateException("editor services are not a list: " + services);
         
         List<IStrategoTerm> editorServices = ATermCommands.getList(services);
-        if (currentTransProg != null)
-          editorServices = ATermCommands.registerSemanticProvider(editorServices, currentTransProg);
+        
+        // XXX if (currentTransProg != null)
+        editorServices = ATermCommands.registerSemanticProvider(editorServices, currentTransProg);
   
         String editorServicesFile = bin + sep + relPackageNameSep() + extName + ".serv";
         FileCommands.createFile(editorServicesFile);
@@ -419,7 +423,9 @@
         "processing",
         "PROCESS the desugared plain declaration.");
     try {
-      sugaredTypeOrSugarDecls.add(lastSugaredToplevelDecl);
+      if (!sugaredTypeOrSugarDecls.contains(lastSugaredToplevelDecl))
+        sugaredTypeOrSugarDecls.add(lastSugaredToplevelDecl);
+
       
       String extName = null;
       String fullExtName = null;
@@ -514,7 +520,9 @@
           throw new IllegalArgumentException("unexpected toplevel declaration, desugaring probably failed: " + toplevelDecl.toString(5));
       } catch (Exception e) {
         ATermCommands.setErrorMessage(toplevelDecl, e.getClass().getName() + " " + e.getLocalizedMessage() != null ? e.getLocalizedMessage() : e.toString());
-        sugaredTypeOrSugarDecls.add(lastSugaredToplevelDecl);
+        if (!sugaredTypeOrSugarDecls.contains(lastSugaredToplevelDecl))
+          sugaredTypeOrSugarDecls.add(lastSugaredToplevelDecl);
+
       }
     }
   }
@@ -715,7 +723,9 @@
         "PROCESS the desugared Java type declaration.");
     try {
       
-      sugaredTypeOrSugarDecls.add(lastSugaredToplevelDecl);
+      if (!sugaredTypeOrSugarDecls.contains(lastSugaredToplevelDecl))
+        sugaredTypeOrSugarDecls.add(lastSugaredToplevelDecl);
+
       
       log.beginTask("Generate Java code.");
       try {
@@ -735,7 +745,9 @@
         "processing",
         "PROCESS the desugared sugar declaration.");
     try {
-      sugaredTypeOrSugarDecls.add(lastSugaredToplevelDecl);
+      if (!sugaredTypeOrSugarDecls.contains(lastSugaredToplevelDecl))
+        sugaredTypeOrSugarDecls.add(lastSugaredToplevelDecl);
+
       
       boolean isNative;
       String extName = null;
@@ -929,7 +941,7 @@
     log.beginTask("checking transformation", "CHECK current transformation");
     
     try {
-      STRCommands.compile(currentTransSTR, "main", driverResult.getFileDependencies(), strParser, strjContext);
+      currentTransProg = STRCommands.compile(currentTransSTR, "main", driverResult.getFileDependencies(), strParser, strjContext);
     } finally {
       log.endTask();
     }

From seba at informatik.uni-marburg.de  Sun May  1 18:32:51 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Sun, 01 May 2011 16:32:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22704 -
	sugarj/trunk/stdlib/org/sugarj/transformations
Message-ID: <20110501163251.AF63E7F8042@mx1.tudelft.nl>

Author: SebastianErdweg
Date: Sun May  1 16:32:51 2011
New Revision: 22704
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22704&sc=1

Log:
ignore layout sorts in signature generation

Modified:
   sugarj/trunk/stdlib/org/sugarj/transformations/GenerateSignatures.str

Modified: sugarj/trunk/stdlib/org/sugarj/transformations/GenerateSignatures.str
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/transformations/GenerateSignatures.str	Sun May  1 16:32:13 2011	(r22703)
+++ sugarj/trunk/stdlib/org/sugarj/transformations/GenerateSignatures.str	Sun May  1 16:32:51 2011	(r22704)
@@ -82,6 +82,10 @@
 rules
 
   get-symbol-type :
+    sym -> []
+    where <is-layout> sym
+
+  get-symbol-type :
     sym -> ConstType(Sort(name, []))
     where <get-symbol-name> sym => name
 
@@ -140,4 +144,12 @@
   get-symbol-name :
     varsym(sym) -> <concat-strings> ["var", name]
     where <get-symbol-name> sym => name
+    
+    
+  is-layout = ?layout()
+  is-layout = ?cf(<is-layout>)
+  is-layout = ?lex(<is-layout>)
+  is-layout = ?opt(<is-layout>)
+  is-layout = ?iter(<is-layout>)
+  is-layout = map(is-layout)
   
\ No newline at end of file

From L.C.L.Kats at tudelft.nl  Sun May  1 18:54:53 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sun, 01 May 2011 16:54:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22705 - in
	spoofax/trunk/spoofax/org.spoofax.jsglr:
	src/org/spoofax/jsglr/client src/org/spoofax/jsglr/client/imploder
	test/org/spoofax/jsglr/tests tests/data
Message-ID: <20110501165453.04525108C017@mx3.tudelft.nl>

Author: LennartKats
Date: Sun May  1 16:54:51 2011
New Revision: 22705
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22705&sc=1

Log:
- Recalculation of 'isParseProductionChain' without recursion
- Added a new CycleParseNode class (currenty unused)
- Updated tests

Added:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/CycleParseNode.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/s9-increment.str
   spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/s9.str
Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/AbstractParseNode.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Asfix2TreeBuilder.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/BottomupTreeBuilder.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Link.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParseNode.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParseProductionNode.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/TopdownTreeBuilder.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/TreeBuilder.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/TestTokenize.java

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/AbstractParseNode.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/AbstractParseNode.java	Sun May  1 16:32:51 2011	(r22704)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/AbstractParseNode.java	Sun May  1 16:54:51 2011	(r22705)
@@ -18,12 +18,13 @@
     public static final int PREFER = 4;
     public static final int AVOID = 5;
     public static final int REJECT = 6;
+    public static final int CYCLE = 7;
     
-    public boolean isAmbNode(){
+    public final boolean isAmbNode(){
     	return getNodeType()==AbstractParseNode.AMBIGUITY;
     }
 
-    public boolean isParseNode(){
+    public final boolean isParseNode(){
     	switch(getNodeType()) {
     	case AbstractParseNode.PARSENODE:
     		case AbstractParseNode.REJECT:
@@ -34,13 +35,17 @@
     	}
     }
 
-    public boolean isParseRejectNode(){
+    public final boolean isParseRejectNode(){
     	return getNodeType()==AbstractParseNode.REJECT;
     }
 
-    public boolean isParseProductionNode(){
+    public final boolean isParseProductionNode(){
     	return getNodeType()==AbstractParseNode.PARSE_PRODUCTION_NODE;
     }
+    
+    public final boolean isCycle() {
+    	return getNodeType() == CYCLE;
+    }
 
     abstract public int getNodeType();
     abstract public AbstractParseNode[] getChildren();
@@ -63,12 +68,16 @@
 	abstract public String toString();
     
     /**
-     * Returns true if this is either:
+     * Returns true if this node is in a parse production chain,
+     * i.e. it is either:
      * - a {@link ParseProductionNode}.
      * - a ParseNode with a {@link ParseProductionNode} child
      *   and an {@link #isParseProductionChain()} child.
      * - a ParseNode with a single {@link #isParseProductionChain()}
      *   child.
+     *   
+     * Implementations may also return true only for the topmost
+     * node of a parse production chain.
      */
     public abstract boolean isParseProductionChain();
 }

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Asfix2TreeBuilder.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Asfix2TreeBuilder.java	Sun May  1 16:32:51 2011	(r22704)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Asfix2TreeBuilder.java	Sun May  1 16:54:51 2011	(r22705)
@@ -16,6 +16,7 @@
 	private final IStrategoConstructor applIStrategoConstructor;
 	private final IStrategoConstructor ambIStrategoConstructor;
 	private final IStrategoConstructor parseTreeIStrategoConstructor;
+	private final IStrategoConstructor cycleConstructor;
 	private ParseTable table;
 	private IStrategoAppl[] labels;
 	private int labelStart;
@@ -29,6 +30,7 @@
 		applIStrategoConstructor = factory.makeConstructor("appl", 2);
 		ambIStrategoConstructor = factory.makeConstructor("amb", 1);
 		parseTreeIStrategoConstructor = factory.makeConstructor("parsetree", 2);
+		cycleConstructor = factory.makeConstructor("cycle", 1);
 	}
 
 	public void initializeTable(ParseTable table, int productionCount, int labelStart, int labelCount) {
@@ -79,4 +81,11 @@
 	public ITokenizer getTokenizer() {
 		return null;
 	}
+
+	@Override
+	public Object buildCycle(int labelNumber) {
+		IStrategoTerm label =
+			labelNumber == -1 ? factory.makeString("?") : labels[labelNumber - labelStart];
+		return factory.makeAppl(cycleConstructor, label);
+	}
 }

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/BottomupTreeBuilder.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/BottomupTreeBuilder.java	Sun May  1 16:32:51 2011	(r22704)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/BottomupTreeBuilder.java	Sun May  1 16:54:51 2011	(r22705)
@@ -37,5 +37,6 @@
 	public abstract Object buildNode(int labelNumber, List<Object> subtrees);
 	public abstract Object buildProduction(int productionNumber);
 	public abstract Object buildAmb(List<Object> alternatives);
+	public abstract Object buildCycle(int labelNumber);
 
 }

Added: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/CycleParseNode.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/CycleParseNode.java	Sun May  1 16:54:51 2011	(r22705)
@@ -0,0 +1,89 @@
+package org.spoofax.jsglr.client;
+
+import org.spoofax.jsglr.client.imploder.TopdownTreeBuilder;
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class CycleParseNode extends AbstractParseNode {
+
+	private static final AbstractParseNode[] NO_CHILDREN =
+		new AbstractParseNode[0];
+	
+	private ParseNode target;
+	
+	public CycleParseNode(ParseNode target) {
+		this.target = target;
+	}
+
+	@Override
+	public int getNodeType() {
+		return CYCLE;
+	}
+
+	@Override
+	public AbstractParseNode[] getChildren() {
+		return NO_CHILDREN;
+	}
+
+	@Override
+	public Object toTreeBottomup(BottomupTreeBuilder builder) {
+		return builder.buildCycle(getTargetLabel());
+	}
+
+	public int getTargetLabel() {
+		AbstractParseNode target = this.target;
+		while (target.isAmbNode()) {
+			target = target.getChildren()[0];
+		}
+		if (target instanceof ParseNode)
+			return ((ParseNode) target).getLabel();
+		return -1;
+	}
+
+	@Override
+	public Object toTreeTopdown(TopdownTreeBuilder builder) {
+		return builder.buildTreeCycle(this);
+	}
+
+	@Override
+	public String toStringShallow() {
+		return toString();
+	}
+
+	@Override
+	public String toString() {
+		return "cycle(" + target + ")";
+	}
+
+	@Override
+	public boolean isParseProductionChain() {
+		return false;
+	}
+
+	@Override
+	public int hashCode() {
+		final int prime = 31;
+		int result = 1;
+		result = prime * result + ((target == null) ? 0 : target.hashCode());
+		return result;
+	}
+
+	@Override
+	public boolean equals(Object obj) {
+		if (this == obj)
+			return true;
+		if (obj == null)
+			return false;
+		if (getClass() != obj.getClass())
+			return false;
+		CycleParseNode other = (CycleParseNode) obj;
+		if (target == null) {
+			if (other.target != null)
+				return false;
+		} else if (!target.equals(other.target))
+			return false;
+		return true;
+	}
+
+}

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java	Sun May  1 16:32:51 2011	(r22704)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java	Sun May  1 16:54:51 2011	(r22705)
@@ -8,6 +8,7 @@
 package org.spoofax.jsglr.client;
 
 import static org.spoofax.terms.Term.termAt;
+import static org.spoofax.jsglr.client.AbstractParseNode.*;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -394,7 +395,8 @@
 		}
 
 		// parseTable.setTreeBuilder(new Asfix2TreeBuilder());
-		if (t.isAmbNode()) {
+		switch (t.getNodeType()) {
+		case AMBIGUITY:
 			if (!inAmbiguityCluster) {
 				// (some cycle stuff should be done here)
 				final AbstractParseNode[] ambs = t.getChildren();
@@ -408,7 +410,8 @@
 				return filterAmbiguities(ambs);
 
 			}
-		} else if(t.isParseNode()) {
+			break;
+		case PARSENODE: case AVOID: case PREFER: case REJECT:
 			final ParseNode node = (ParseNode) t;
 			final AbstractParseNode[] args = node.getChildren();
 			final AbstractParseNode[] newArgs =
@@ -423,11 +426,14 @@
 
 			if (newArgs != null && args != newArgs)
 				t = new ParseNode(node.getLabel(), newArgs, AbstractParseNode.PARSENODE);
-		} else if(t instanceof ParseProductionNode) {
+			break;
+		case PARSE_PRODUCTION_NODE:
 			// leaf node -- do thing (cannot be any ambiguities here)
 			return t;
-		} else {
-			throw new FatalException();
+		case CYCLE:
+			return t;
+		default:
+			throw new IllegalStateException("Unknown node type: " + t);
 		}
 
 		if (filterAssociativity) {

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Link.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Link.java	Sun May  1 16:32:51 2011	(r22704)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Link.java	Sun May  1 16:54:51 2011	(r22705)
@@ -66,7 +66,7 @@
         if(Tools.tracing) {
             SGLR.TRACE("SG_CreateAmbCluster() - " + tokensSeen);
         }
-        ((ParseNode)label).toAmbiguity(t);
+        ((ParseNode)label).makeAmbiguity(t);
         //label = new Amb(label, t);
     }
     

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParseNode.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParseNode.java	Sun May  1 16:32:51 2011	(r22704)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParseNode.java	Sun May  1 16:54:51 2011	(r22705)
@@ -60,34 +60,61 @@
         this.isSetPPC=false;
  	}
 	
-	public void toAmbiguity(AbstractParseNode pn){
-		if(this == pn)
-			return;
-		ParseNode left = new ParseNode(this.label, this.kids, this.nodeType); 
+	public void makeAmbiguity(AbstractParseNode pn){
+		//if (isAmbNode()) {
+		//	if (isInAmbiguityCluster(pn)) return;
+		//	AbstractParseNode[] newKids = new AbstractParseNode[kids.length + 1];
+		//	System.arraycopy(kids, 0, newKids, 0, kids.length);
+		//	newKids[newKids.length - 1] = pn;
+		//	kids = newKids;
+		//
+		//	if(pn instanceof ParseNode)
+		//		((ParseNode) pn).replaceCycle(this, null);
+		//} else {
+			if (this == pn || (isAmbNode() && isInAmbiguityCluster(pn)))
+				return;
+			ParseNode left = new ParseNode(this.label, this.kids, this.nodeType); 
+			setFields(-1, new AbstractParseNode[] { left, pn }, AbstractParseNode.AMBIGUITY);
+
+			if(pn instanceof ParseNode)
+				((ParseNode) pn).replaceCycle(this, left);
+		//}
+		
 		assert(this.cachedHashCode == NO_HASH_CODE) : "Hashcode should not be cached during parsing because descendant nodes may change";
 		assert(!this.isParseProductionChain) : "PPC is not set to true during parsing because descendents may change";
-		if(pn instanceof ParseNode)
-			((ParseNode) pn).replaceDescendant(this, left); //prevent cycles
-		setFields(-1, new AbstractParseNode[] { left, pn }, AbstractParseNode.AMBIGUITY);
+	}
+
+	private boolean isInAmbiguityCluster(AbstractParseNode pn) {
+		for (AbstractParseNode existing : kids) {
+			if (pn == existing) {
+				return true;
+			} else if (existing.isAmbNode()) {
+				if (((ParseNode) existing).isInAmbiguityCluster(pn))
+					return true;
+			}
+		}
+		return false;
 	}
 	
-	private void replaceDescendant(ParseNode before, ParseNode after){ //only reductions for current char (right chain) are inspected
-		if(kids.length > 0 ){ 
+	private void replaceCycle(ParseNode before, ParseNode after) {
+		//only reductions for current char (right chain) are inspected
+		// XXX: is that assumption correct? what about epsylon productions that consume no chars?
+		if(isAmbNode()) { // all kids relate to current char
+			for (int i = 0; i < kids.length; i++)
+				replaceDescendantAt(before, after, i);			
+		} else if(kids.length > 0 ){ 
 			replaceDescendantAt(before, after, kids.length-1);			
 		}
-		if(isAmbNode() && kids.length >1){
-			replaceDescendantAt(before, after, kids.length-2);			
-		}
 	}
 
 	private void replaceDescendantAt(ParseNode before, ParseNode after, int index) {
 		AbstractParseNode kid = kids[index];
 		if(kid==before){
-			kids[index]=after; 
+			kids[index] = after == null ? new CycleParseNode(before) : after; 
 			return; //no further inspection needed since cycles should not occur
 		}
 		else if(kid instanceof ParseNode){
-			((ParseNode)kid).replaceDescendant(before, after);
+			((ParseNode)kid).replaceCycle(before, after);
 		}
 	}
 	    
@@ -96,28 +123,84 @@
     	//REMARK: works because PPC property is not set during parsing, so descendants will not change
 		// assert isParseProductionChain == calculateIsParseProdChain(kids);
     	if(!isSetPPC)
-    		deepSetIsParseProdChain();
+    		initParseProductionChain();
 		return isParseProductionChain;
 	}
     
-	private void deepSetIsParseProdChain(){
-		if(!isSetPPC){
-			for (int i = 0; i < kids.length; i++) {
-				if(kids[i].isParseNode() || kids[i].isAmbNode())
-					((ParseNode)kids[i]).deepSetIsParseProdChain();
+    /**
+     * Initialize the {@link #isParseProductionChain} method
+     * for this node and any candidate chain nodes below it,
+     * without using recursion (which would potentially
+     * lead to a stack overflow).
+     */
+    private void initParseProductionChain() {
+    	AbstractParseNode deepest = getDeepestNonChainNode();
+    	if (deepest == this) { // fast path
+    		isSetPPC = true;
+    		isParseProductionChain = false;
+    	} else {
+    		setParseProductionChainUpTo(deepest == null, deepest);
+    	}
+    }
+	
+	/**
+	 * Find the deepest parse node that is clearly not a 
+	 * parse production chain node.
+	 *
+	 * @see #isParseProductionChain
+	 */
+    private AbstractParseNode getDeepestNonChainNode() {
+		AbstractParseNode current = this;
+		for (;;) {
+			AbstractParseNode[] kids = current.getChildren();
+			switch (kids.length) {
+				case 2:
+					if (current instanceof ParseNode) {
+						if (((ParseNode) current).isSetPPC)
+							return current.isParseProductionChain() ? null : current;
+					}
+					if (!kids[0].isParseProductionNode())
+						return kids[0];
+					current = kids[1]; 
+					break;
+				case 1:
+					current = kids[0];
+					break;
+				case 0:
+					return current.isParseProductionNode() ? null : current;
+				default:
+					return current;
 			}
-			this.isParseProductionChain=false;
-			if (kids.length == 2 && !isAmbNode()) {
-	    		this.isParseProductionChain =
-	    			kids[0] instanceof ParseProductionNode /*kids[0].isParseProductionChain()*/
-	    			&& kids[1].isParseProductionChain();
-	        }
-			else if (kids.length == 1) {
-	    		this.isParseProductionChain = kids[0].isParseProductionChain();
-	        } 
-			isSetPPC=true;
 		}
 	}
+	
+	private void setParseProductionChainUpTo(boolean value, AbstractParseNode end) {
+		AbstractParseNode current = this;
+		AbstractParseNode next = this;
+		do {
+			current = next;
+			ParseNode parseCurrent = null;
+			if (current instanceof ParseNode)
+				parseCurrent = (ParseNode) current;
+			if (parseCurrent == null) {
+				assert current.isCycle() || current.isParseProductionNode();
+				return;
+			}
+			parseCurrent.isParseProductionChain = value;
+			parseCurrent.isSetPPC = true;
+			AbstractParseNode[] kids = parseCurrent.kids;
+			switch (kids.length) {
+				case 2:
+					next = kids[1];
+					break;
+				case 1:
+					next = kids[0];
+					break;
+				default:
+					return;
+			}
+		} while (current != end);
+	}
 
 	@Override 
     public Object toTreeTopdown(TopdownTreeBuilder builder) {

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParseProductionNode.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParseProductionNode.java	Sun May  1 16:32:51 2011	(r22704)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParseProductionNode.java	Sun May  1 16:54:51 2011	(r22705)
@@ -7,13 +7,15 @@
  */
 package org.spoofax.jsglr.client;
 
-import org.spoofax.NotImplementedException;
 import org.spoofax.jsglr.client.imploder.TopdownTreeBuilder;
 
 
 public class ParseProductionNode extends AbstractParseNode {
 
-    public final int prod;
+	private static final AbstractParseNode[] NO_CHILDREN =
+		new AbstractParseNode[0];
+
+	public final int prod;
 
     public ParseProductionNode(int prod) {
         this.prod = prod;
@@ -65,6 +67,6 @@
 
 	@Override
 	public AbstractParseNode[] getChildren() {
-		throw new NotImplementedException();
+		return NO_CHILDREN;
 	}
 }

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/TopdownTreeBuilder.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/TopdownTreeBuilder.java	Sun May  1 16:32:51 2011	(r22704)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/TopdownTreeBuilder.java	Sun May  1 16:54:51 2011	(r22705)
@@ -1,6 +1,7 @@
 package org.spoofax.jsglr.client.imploder;
 
 import org.spoofax.jsglr.client.AbstractParseNode;
+import org.spoofax.jsglr.client.CycleParseNode;
 import org.spoofax.jsglr.client.ITreeBuilder;
 import org.spoofax.jsglr.client.ParseNode;
 import org.spoofax.jsglr.client.ParseProductionNode;
@@ -46,4 +47,6 @@
 	public abstract Object buildTreeProduction(ParseProductionNode node);
 
 	public abstract Object buildTreeAmb(ParseNode node);
+	
+	public abstract Object buildTreeCycle(CycleParseNode node);
 }

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/TreeBuilder.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/TreeBuilder.java	Sun May  1 16:32:51 2011	(r22704)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/TreeBuilder.java	Sun May  1 16:54:51 2011	(r22705)
@@ -13,6 +13,7 @@
 import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.spoofax.interpreter.terms.ITermFactory;
 import org.spoofax.jsglr.client.AbstractParseNode;
+import org.spoofax.jsglr.client.CycleParseNode;
 import org.spoofax.jsglr.client.ParseNode;
 import org.spoofax.jsglr.client.ParseProductionNode;
 import org.spoofax.jsglr.client.ParseTable;
@@ -313,12 +314,32 @@
 			leftToken = factory.getLeftToken(children.get(0));
 			rightToken = factory.getRightToken(children.get(children.size() - 1));
 		} else {
-			leftToken = rightToken = tokenizer.makeToken(offset - 1, TK_UNKNOWN, true); 
+			// No kids? Non-cf amb
+			return null;
+			// leftToken = rightToken = tokenizer.makeToken(offset - 1, TK_UNKNOWN, true); 
 		}
 		
 		return factory.createAmb(children, leftToken, rightToken);
 	}
 
+	@Override
+	public Object buildTreeCycle(CycleParseNode node) {
+		if (inLexicalContext)
+			return null;
+		IToken token = tokenizer.makeToken(offset - 1, TK_UNKNOWN, true);
+		if (node.getTargetLabel() == -1) {
+			return factory.createNonTerminal("cycle", "cycle", token, token, new ArrayList<Object>());
+		} else {
+			LabelInfo label = labels[node.getTargetLabel() - labelStart];
+			String cons = label.getSort();
+			if (cons == null) cons = "cycle";
+			Object child = factory.createNonTerminal(label.getSort(), cons, token, token, new ArrayList<Object>());
+			List<Object> children = new ArrayList<Object>();
+			children.add(child);
+			return factory.createNonTerminal("cycle", "cycle", token, token, children);
+		}
+	}
+
 	private Object tryBuildAutoConcatListNode(Object node) {
 		if (node instanceof AutoConcatList) {
 			return buildAutoConcatListNode((AutoConcatList) node);

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/TestTokenize.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/TestTokenize.java	Sun May  1 16:32:51 2011	(r22704)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/TestTokenize.java	Sun May  1 16:54:51 2011	(r22705)
@@ -30,11 +30,11 @@
     	Iterator<IToken> tokens = tokenizer.iterator();
     	System.out.println(tokenizer);
     	
-    	assertEquals(0, tokens.next().getLine());
+    	assertEquals(1, tokens.next().getLine());
     	IToken packageToken = getNonEmptyToken(tokens);
     	assertEquals("package", packageToken.toString());
     	assertEquals("package", packageToken.toString());
-    	assertEquals(0, packageToken.getLine());
+    	assertEquals(1, packageToken.getLine());
     	assertEquals(" ", getNonEmptyToken(tokens).toString());
     	assertEquals("java", getNonEmptyToken(tokens).toString());
     	assertEquals(".", getNonEmptyToken(tokens).toString());
@@ -47,8 +47,8 @@
     	System.out.println(classToken2.getLine());
     	assertEquals("class", classToken.toString());
     	assertEquals(IToken.TK_KEYWORD, classToken.getKind());
-    	assertEquals(2, classToken.getLine());
-    	assertEquals(7, tokenizer.getTokenAt(tokenizer.getTokenCount() - 1).getLine());
+    	assertEquals(3, classToken.getLine());
+    	assertEquals(8, tokenizer.getTokenAt(tokenizer.getTokenCount() - 1).getLine());
     }
 
 	private static IToken getNonEmptyToken(Iterator<IToken> tokens) {

Added: spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/s9-increment.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/s9-increment.str	Sun May  1 16:54:51 2011	(r22705)
@@ -0,0 +1,72 @@
+module namingexperiment
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/NamingExperiment
+  lib/editor-common.generated
+  check
+  generate
+  prettyprint
+  refactorings
+  analysis
+
+rules // Main editor interface (defined by editor/NamingExperiment-Builders and -References.esv)
+  
+  // Analyzes the current program, returning a tuple with errors, warnings, and notes;
+  // each a list of (term, message) tuples or simply (message) terms.
+  editor-analyze:
+    (ast, path, project-path) -> (ast', errors, warnings, notes)
+    with
+      editor-init;
+      ast' := <debug(!0); analyze>;
+      errors   := <collect-all(constraint-error, conc)> ast';
+      warnings := <collect-all(constraint-warning, conc)> ast';
+      notes    := <collect-all(constraint-note, conc)> ast'
+  
+  // Transforms a selection to Java
+  generate-java:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"java")> path;
+      result   := <to-java> selected
+  
+  // Prints the abstract syntax ATerm of a selection.
+  generate-aterm:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"aterm")> path;
+      result   := selected // we just return the input term
+  
+  // Prints the abstract syntax ATerm of a selection.
+  generate-analyzed:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|".analyzed.term")> path;
+      result   := selected // we just return the input term
+  /*
+  // Resolves a reference when the user control-clicks or presses F3 in the editor.
+  // Only succeeds for nodes of the form Type(_) for which GetEntity is defined.
+  editor-resolve:
+    (node, position, ast, path, project-path) -> target
+    where
+      Type(type) := node; 
+      target     := <lookup-one> type
+
+  // Returns "hover help" information for a particular node in the editor.
+  // For references, this rule is invoked using the resolved term.
+  editor-hover:
+    (target, position, ast, path, project-path) -> $[Hover help: [<write-to-string> target]]
+
+  // Completes an identifier when the user presses control-space
+  // (the completion identifier in the AST provides additional context information)
+  editor-complete:
+    (node, position, ast, path, project-path) ->
+    ["String", "Int" | proposals]
+    where
+      // TODO: call analyze??
+      if !node => Type(COMPLETION(prefix)) then
+        proposals := <lookup-all-Entity>
+      end
+*/

Added: spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/s9.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/s9.str	Sun May  1 16:54:51 2011	(r22705)
@@ -0,0 +1,64 @@
+module namingexperiment
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/NamingExperiment
+  lib/editor-common.generated
+  check
+  generate
+  prettyprint
+  refactorings
+  analysis
+
+rules // Main editor interface (defined by editor/NamingExperiment-Builders and -References.esv)
+  
+  // Analyzes the current program, returning a tuple with errors, warnings, and notes;
+  // each a list of (term, message) tuples or simply (message) terms.
+  editor-analyze:
+    (ast, path, project-path) -> (ast', errors, warnings, notes)
+    with
+      editor-init;
+      ast' := <debug(!0); analyze>;
+      errors   := <collect-all(constraint-error, conc)> ast';
+      warnings := <collect-all(constraint-warning, conc)> ast';
+      notes    := <collect-all(constraint-note, conc)> ast'
+  
+  // Transforms a selection to Java
+  generate-java:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"java")> path;
+      result   := <to-java> selected
+  
+  // Prints the abstract syntax ATerm of a selection.
+  generate-aterm:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"aterm")> path;
+      result   := selected // we just return the input term
+  
+  // Resolves a reference when the user control-clicks or presses F3 in the editor.
+  // Only succeeds for nodes of the form Type(_) for which GetEntity is defined.
+  editor-resolve:
+    (node, position, ast, path, project-path) -> target
+    where
+      Type(type) := node; 
+      target     := <lookup-one> type
+
+  // Returns "hover help" information for a particular node in the editor.
+  // For references, this rule is invoked using the resolved term.
+  editor-hover:
+    (target, position, ast, path, project-path) -> $[Hover help: [<write-to-string> target]]
+
+  // Completes an identifier when the user presses control-space
+  // (the completion identifier in the AST provides additional context information)
+  editor-complete:
+    (node, position, ast, path, project-path) ->
+    ["String", "Int" | proposals]
+    where
+      // TODO: call analyze??
+      if !node => Type(COMPLETION(prefix)) then
+        proposals := <lookup-all-Entity>
+      end

From L.C.L.Kats at tudelft.nl  Sun May  1 22:08:38 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sun, 01 May 2011 20:08:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22706 -
	spoofax-contrib/Lawoco spoofax-contrib/Lawoco/.shadowdir
	spoofax-contrib/Lawoco/OutputDirectory spoofax-contrib/Lawoco/lib
	spoofax-imp/trunk/org.strategoxt.imp.edi...
Message-ID: <20110501200838.F2331108C00D@mx3.tudelft.nl>

Author: LennartKats
Date: Sun May  1 20:08:38 2011
New Revision: 22706
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22706&sc=1

Log:
Changed SpoofaxLang config syntax to work with latest parser

Added:
   spoofax-contrib/Lawoco/.shadowdir/
   spoofax-contrib/Lawoco/OutputDirectory/
Modified:
   spoofax-contrib/Lawoco/build.main.xml
   spoofax-contrib/Lawoco/lib/spoofaxlang.jar
   spoofax-contrib/Lawoco/spx.config
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/editor/java/org/strategoxt/imp/editors/spoofax/configuration/SpoofaxConfigurationParseControllerGenerated.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/syntax/Common.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/syntax/SpoofaxConfiguration.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Configuration/SpoofaxConfiguration.def
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Configuration/SpoofaxConfiguration.tbl
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str

Modified: spoofax-contrib/Lawoco/build.main.xml
==============================================================================
--- spoofax-contrib/Lawoco/build.main.xml	Sun May  1 16:54:51 2011	(r22705)
+++ spoofax-contrib/Lawoco/build.main.xml	Sun May  1 20:08:38 2011	(r22706)
@@ -11,7 +11,7 @@
         <!-- Project directories -->
         <property name="trans" location="trans"/>
         <property name="src-gen" location="editor/java"/>
-        <property name="syntax" location="syntax"/>
+        <property name="syntax" location=".shadowdir/_Default"/>
         <property name="include" location="include"/>
         <property name="lib" location="lib"/>
         <property name="build" location="bin"/>

Modified: spoofax-contrib/Lawoco/lib/spoofaxlang.jar
==============================================================================
Binary file (source and/or target). No diff available.

Modified: spoofax-contrib/Lawoco/spx.config
==============================================================================
--- spoofax-contrib/Lawoco/spx.config	Sun May  1 16:54:51 2011	(r22705)
+++ spoofax-contrib/Lawoco/spx.config	Sun May  1 20:08:38 2011	(r22706)
@@ -1,7 +1,7 @@
 Configuration
 	Includes
 		RootDirectory
-				syntax %% specify relative path of local source directories
+				syntax // specify relative path of local source directories
 		AllDirectories
 	
 	CodeGeneration 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/build.generated.xml	Sun May  1 16:54:51 2011	(r22705)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/build.generated.xml	Sun May  1 20:08:38 2011	(r22706)
@@ -3,8 +3,8 @@
 <project name="build.generated">
 
         <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
-        <target name="spoofaximp.default.ctree" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,java.jar,sdf2imp,refresh"/>
-        <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  java.jar,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${build}/org/strategoxt/imp/editors/spoofax/configuration/strategies/Main.class" property="java.jar.enabled"/>
@@ -16,7 +16,7 @@
         </condition>
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
         <dirname property="externaldefdir" file="${externaldef}"/>
-        <condition property="externaldefimport" value="-I ${externaldefdir}" else="">
+        <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
             <isset property="externaldef"/>
         </condition>
         <condition property="externaljarimport" value=":${externaljar}" else="">
@@ -25,6 +25,9 @@
         <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
             <isset property="eclipse.running"/>
         </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <available classname="org.eclipse.jdt.core.JDTCompilerAdapter"/>
+        </condition>
         <condition property="externaljarflags" value="${externaljarflags}" else="">
             <isset property="externaljarflags"/>
         </condition>
@@ -262,9 +265,10 @@
                 <arg value="org.strategoxt.tools.main-ppgen"/>
                 <arg value="-i"/>
                 <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-t"/>
+                <arg value="-b"/>
                 <arg value="-o"/>
                 <arg value="${include}/${sdfmodule}.generated.pp.af"/>
-                <arg value="-t"/>
             </java>
             <java classname="run" failonerror="false">
                 <arg value="org.strategoxt.tools.main-pp-pp-table"/>
@@ -308,9 +312,10 @@
         <!-- Aster to Stratego -->
         <target name="stratego.aster">
             <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
-            <pathconvert property="aster-input" setonempty="false" pathsep=" ">
-                <path><fileset dir="${basedir}" includes="*.astr"/></path>
-            </pathconvert>
+            <fileset dir="${basedir}" id="aster-input-set">
+              <include name="**/*.astr"/>
+            </fileset>
+            <pathconvert pathsep=" " setonempty="false" property="aster-input" refid="aster-input-set"/>
             <dependset>
                 <srcfileset dir="${basedir}">
                     <include name="**/*.astr"/>
@@ -330,9 +335,7 @@
         <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
             <java classname="org.strategoxt.aster.Main" failonerror="true">
                 <arg value="-i"/>
-                <fileset dir="${basedir}">
-                    <include name="**/*.astr"/>
-                </fileset>
+                <arg line="${aster-input}"/>
             </java>
         </target>
         
@@ -346,7 +349,7 @@
                 <srcfileset dir="${basedir}">
                     <include name="**/*.str"/>
                     <include name="**/*.astr"/>
-                    <exclude name="lib/editor-common.generated.str"/>
+                    <exclude name="lib/*.generated.str"/>
                 </srcfileset>
                 <targetfileset file="${include}/${strmodule}.ctree"/>
             </dependset>
@@ -364,7 +367,7 @@
                 <srcfileset dir="${basedir}">
                     <include name="**/*.str"/>
                     <include name="**/*.astr"/>
-                    <exclude name="lib/editor-common.generated.str"/>
+                    <exclude name="lib/*.generated.str"/>
                 </srcfileset>
                 <targetfileset file="${src-gen}/trans/Main.java"/>
             </dependset>
@@ -413,6 +416,152 @@
             <mkdir dir="${build}/trans"/>
         </target>
                 
+        <!-- begin: targets used for adding debugging instrumentation to stratego -->
+        
+		<!-- 
+			if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
+			Only used by stratego.jvm.helper.debug 
+		-->
+		<condition property="transformer-output" value="" else="--output-rtree">
+			<isset property="debug.the.debug.transformer"/>
+		</condition>
+		
+		<!-- 
+			if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
+			if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
+			Only used by stratego.jvm.helper.debug
+		-->
+		<condition property="strj.input.file.type" value="str" else="rtree">
+			<isset property="debug.the.debug.transformer"/>
+		</condition>
+        
+        <!-- value determines which target will be executed.
+        	If the file ".debugmode" can be found in the project root call stratego.jar.debug
+        	else call stratego.jar
+        -->
+        <condition property="stratego.jar.target" value="call.stratego.jar.debug" else="call.stratego.jar">
+            <available file=".debugmode"/>
+        </condition>
+		
+		<!-- will save the stratego files with debug info in this folder -->
+		<property name="trans-debug" location="trans-debug"/>
+		
+		<!-- this helper target determines what target to call, based on debug.build.enabled -->
+		<target name="stratego.jar.helper">
+			<antcall target="${stratego.jar.target}"/>
+		</target>
+		
+		<!-- call stratego.jar unless debug.build.enabled property is set --> 
+		<target name="call.stratego.jar" depends="stratego.jar">
+			<echo message="call.stratego.jar - ${stratego.jar.target}"/>
+		</target>
+		
+		<!-- call stratego.jar.debug when debug.build.enabled property is set -->
+		<target name="call.stratego.jar.debug" depends="stratego.jar.debug">
+			<echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
+		</target>
+		
+		<!-- copy stratego runtime jars to utils folder -->
+		<target name="utils-files-debug" depends="utils-files">
+			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
+			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
+		</target>
+		
+	    <!-- Stratego to Java compiler with debugging capabilities -->
+	    <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
+	        <dependset>
+	            <srcfileset dir="${basedir}">
+	                <include name="**/*.str"/>
+	                <include name="**/*.astr"/>
+	                <exclude name="lib/editor-common.generated.str"/>
+	            </srcfileset>
+	            <targetfileset file="${src-gen}/trans/Main.java"/>
+	        </dependset>
+	        <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+	        <antcall target="copy-jar"/>
+	        <antcall target="stratego.jar.deletehelper"/>
+	    	<!-- compile stratego to java -->
+	        <antcall target="stratego.jvm.helper.debug">
+	            <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+	            <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+	        </antcall>
+	    	<!-- compile java to class -->
+	        <javac destdir="${build}" source="1.5" target="1.5" debug="on">
+	    		<!-- attribute in javac: srcdir="${src-gen}" -->
+	    		<src path="${src-gen}"/>
+	        	<!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"  -->
+	        	<classpath>
+	        		<pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+	        		<pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
+	        		<pathelement location="utils/stratego-debug-runtime-java.jar"/>
+	        	</classpath>
+	        	<!-- attribute in javac: includes="trans/**"  -->
+	        	<include name="trans/**"/>
+	    	</javac>
+	        <!-- copy imported terms -->
+	        <copy todir="${build}/trans">
+	            <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+	        </copy>
+	    	<!-- create a jar from the class files -->
+	        <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+	        <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+	        <delete><fileset dir="${build}" includes="trans/**"/></delete>
+	    </target>
+		
+		<!-- instrument the stratego program and compile it to java -->
+	    <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
+	    	<echo message="generate stratego with debug information"/>
+	    	<echo message="${basedir}"/>
+	    	<available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
+	    	<!-- add debug information -->
+	  		<java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
+	  		     <classpath>
+					<pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
+	  		     	<pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
+	  		     	<pathelement location="${eclipse.spoofaximp.strategojar}"/>
+	  		     </classpath>
+	  			<arg value="-i"/>
+	  			<arg value="${trans}/${strmodule}.str"/>
+	  			<arg value="--gen-dir"/>
+	  			<arg value="${trans-debug}"/>
+	  			<arg value="--base-dir"/> <!-- set the basedir to the project dir -->
+	  			<arg value="${basedir}"/>
+	  			<!-- "arg line='val'" val should contain space-separated arguments --> 
+	  			<arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
+	  			
+	  			<!-- arguments should start with two '-'-characters -->
+	  			<!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
+	  			<!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
+	  			<!-- <arg value="-output-rtree"/> --> 
+	    	</java>
+	    	<!-- now compile instrumented stratego to java -->
+	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+	        <java classname="org.strategoxt.strj.Main" failonerror="true">
+	            <arg value="-i"/>
+	            <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
+	            <arg value="-o"/>
+	            <arg value="${build.stratego.outputfile}"/>
+	            <arg value="-p"/>
+	            <arg value="trans"/>
+	            <arg value="--library"/>
+	            <arg value="--clean"/>
+	            <arg line="${build.stratego.args}"/>
+	            <arg line="${build.stratego.extraargs}"/>
+	            <arg line="${externaljarflags}"/>
+	            <arg line="${externaldefimport}"/>
+	            <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+	        	<!-- put strategodebuglib.rtree on the include path -->
+	        	<arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
+	        	<arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
+	        </java>
+	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+	        <mkdir dir="${build}/trans"/>
+	    </target>
+        
+        
+        <!-- end: targets used for adding debugging instrumentation to stratego -->
+
+
         <!-- Stratego to C-based native executable -->
         <target name="stratego.c">
             <antcall target="stratego.c.helper">
@@ -442,6 +591,7 @@
         
         <target name="clean" description="clean up">
             <delete dir="${build}"/>
-            <delete file="${src-gen}/trans/Main.java"/>
+            <delete file="${include}/${sdfmodule}.def"/>
+            <delete dir="${src-gen}/trans"/>
         </target>
     </project>
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/editor/java/org/strategoxt/imp/editors/spoofax/configuration/SpoofaxConfigurationParseControllerGenerated.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/editor/java/org/strategoxt/imp/editors/spoofax/configuration/SpoofaxConfigurationParseControllerGenerated.java	Sun May  1 16:54:51 2011	(r22705)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/editor/java/org/strategoxt/imp/editors/spoofax/configuration/SpoofaxConfigurationParseControllerGenerated.java	Sun May  1 20:08:38 2011	(r22706)
@@ -2,6 +2,9 @@
 
 import java.io.InputStream;
 import java.io.IOException;
+import java.io.File;
+import java.io.FileInputStream;
+import org.eclipse.core.runtime.Path;
 import org.eclipse.imp.parser.IParseController;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
@@ -30,18 +33,34 @@
     return descriptor;
   }
 
-  private static void createDescriptor()
+  protected static synchronized void setDescriptor(Descriptor descriptor)
+  { 
+    SpoofaxConfigurationParseControllerGenerated.descriptor = descriptor;
+  }
+
+  protected static void createDescriptor()
   { 
     try
     { 
-      InputStream descriptorStream = SpoofaxConfigurationParseController.class.getResourceAsStream(DESCRIPTOR);
-      InputStream table = SpoofaxConfigurationParseController.class.getResourceAsStream(TABLE);
+      InputStream descriptorStream = SpoofaxConfigurationParseControllerGenerated.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = SpoofaxConfigurationParseControllerGenerated.class.getResourceAsStream(TABLE);
+      boolean filesystem = false;
+      if(descriptorStream == null && new File("./" + DESCRIPTOR).exists())
+      { 
+        descriptorStream = new FileInputStream("./" + DESCRIPTOR);
+        filesystem = true;
+      }
+      if(table == null && new File("./" + TABLE).exists())
+      { 
+        table = new FileInputStream("./" + TABLE);
+        filesystem = true;
+      }
       if(descriptorStream == null)
         throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
       if(table == null)
         throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
-      descriptor = DescriptorFactory.load(descriptorStream, table, null);
-      descriptor.setAttachmentProvider(SpoofaxConfigurationParseController.class);
+      descriptor = DescriptorFactory.load(descriptorStream, table, filesystem ? Path.fromPortableString("./") : null);
+      descriptor.setAttachmentProvider(SpoofaxConfigurationParseControllerGenerated.class);
     }
     catch(BadDescriptorException exc)
     { 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/lib/editor-common.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/lib/editor-common.generated.str	Sun May  1 16:54:51 2011	(r22705)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/lib/editor-common.generated.str	Sun May  1 20:08:38 2011	(r22706)
@@ -143,7 +143,7 @@
     ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
   
   origin-track-forced(s) =
-    !Some(<id>); all(s); ?Some(<id>)
+    ![<id>]; all(s); ?[<id>]
 
 strategies
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/syntax/Common.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/syntax/Common.sdf	Sun May  1 16:54:51 2011	(r22705)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/syntax/Common.sdf	Sun May  1 20:08:38 2011	(r22706)
@@ -17,7 +17,7 @@
     
     [\*]                             -> CommentChar
     "/*" (~[\*] | CommentChar)* "*/" -> LAYOUT
-    "%%" ~[\n\r]* ([\n\r] | EOF)     -> LAYOUT
+    "//" ~[\n\r]* ([\n\r] | EOF)     -> LAYOUT
     
     -> EOF
   
@@ -43,5 +43,4 @@
 
     LAYOUT? -/- [\ \t\n\r]
     LAYOUT? -/- [\/].[\/]
-    LAYOUT? -/- [\%].[\%]
     LAYOUT? -/- [\/].[\*]

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/syntax/SpoofaxConfiguration.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/syntax/SpoofaxConfiguration.sdf	Sun May  1 16:54:51 2011	(r22705)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/syntax/SpoofaxConfiguration.sdf	Sun May  1 20:08:38 2011	(r22706)
@@ -25,10 +25,14 @@
 	    "RootDirectory"												  ->   IncludeOption{cons("RootDirectory")}
 
 	lexical syntax 
-		[a-zA-Z\.][A-Za-z0-9\_\-\/\ \.\+]* 		-> RelativePath
-		"/" RelativePath											-> AbsolutePath
-		[a-zA-Z]":/" RelativePath							-> AbsolutePath
-		"../" RelativePath										-> AbsolutePath{prefer}
+		%%STRING -> RelativePath
+		PathChar                                   	-> RelativePath
+		PathChar (PathChar | Slash)* PathChar       -> RelativePath
+		[A-Za-z0-9\_\-\.\+]                         -> PathChar
+		"/"                                         -> Slash
+    Slash RelativePath				                  -> AbsolutePath
+		[a-zA-Z]":" Slash RelativePath              -> AbsolutePath
+		".." Slash RelativePath                     -> AbsolutePath{prefer}
 		
 	lexical syntax     
     
@@ -38,18 +42,21 @@
     "Configuration"     		   	-> Reserved
     "Includes"        					-> Reserved		
     "AllDirectories"   					-> Reserved		
+    "CodeGeneration"            -> Reserved   
     "RootDirectory" 				  -> Reserved		
    
     Reserved -> RelativePath{reject}
 	    
 	    
 	lexical restrictions
-		RelativePath -/- [A-Za-z0-9\_\-\/\ \.\+]
+	  Slash        -/- [\/]
+		RelativePath -/- [A-Za-z0-9\_\-\/\.\+]
 			
 		"SpxProjects" 
 		"Sources" 
 		"SpxSources"
 		"Configuration" 
+    "CodeGeneration" 
 		"Includes"
 		"AllDirectories"
 		"RootDirectory" -/- [A-Za-z0-9\_]
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.generated.xml	Sun May  1 16:54:51 2011	(r22705)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.generated.xml	Sun May  1 20:08:38 2011	(r22706)
@@ -4,7 +4,7 @@
 
         <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
         <target name="spoofaximp.default.ctree" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.ctree,sdf2imp,refresh"/>
-        <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar,  sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${build}/org/strategoxt/imp/editors/spoofax/strategies/Main.class" property="java.jar.enabled"/>
@@ -16,7 +16,7 @@
         </condition>
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
         <dirname property="externaldefdir" file="${externaldef}"/>
-        <condition property="externaldefimport" value="-I ${externaldefdir}" else="">
+        <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
             <isset property="externaldef"/>
         </condition>
         <condition property="externaljarimport" value=":${externaljar}" else="">
@@ -349,7 +349,7 @@
                 <srcfileset dir="${basedir}">
                     <include name="**/*.str"/>
                     <include name="**/*.astr"/>
-                    <exclude name="lib/editor-common.generated.str"/>
+                    <exclude name="lib/*.generated.str"/>
                 </srcfileset>
                 <targetfileset file="${include}/${strmodule}.ctree"/>
             </dependset>
@@ -367,7 +367,7 @@
                 <srcfileset dir="${basedir}">
                     <include name="**/*.str"/>
                     <include name="**/*.astr"/>
-                    <exclude name="lib/editor-common.generated.str"/>
+                    <exclude name="lib/*.generated.str"/>
                 </srcfileset>
                 <targetfileset file="${src-gen}/trans/Main.java"/>
             </dependset>
@@ -416,6 +416,152 @@
             <mkdir dir="${build}/trans"/>
         </target>
                 
+        <!-- begin: targets used for adding debugging instrumentation to stratego -->
+        
+		<!-- 
+			if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
+			Only used by stratego.jvm.helper.debug 
+		-->
+		<condition property="transformer-output" value="" else="--output-rtree">
+			<isset property="debug.the.debug.transformer"/>
+		</condition>
+		
+		<!-- 
+			if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
+			if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
+			Only used by stratego.jvm.helper.debug
+		-->
+		<condition property="strj.input.file.type" value="str" else="rtree">
+			<isset property="debug.the.debug.transformer"/>
+		</condition>
+        
+        <!-- value determines which target will be executed.
+        	If the file ".debugmode" can be found in the project root call stratego.jar.debug
+        	else call stratego.jar
+        -->
+        <condition property="stratego.jar.target" value="call.stratego.jar.debug" else="call.stratego.jar">
+            <available file=".debugmode"/>
+        </condition>
+		
+		<!-- will save the stratego files with debug info in this folder -->
+		<property name="trans-debug" location="trans-debug"/>
+		
+		<!-- this helper target determines what target to call, based on debug.build.enabled -->
+		<target name="stratego.jar.helper">
+			<antcall target="${stratego.jar.target}"/>
+		</target>
+		
+		<!-- call stratego.jar unless debug.build.enabled property is set --> 
+		<target name="call.stratego.jar" depends="stratego.jar">
+			<echo message="call.stratego.jar - ${stratego.jar.target}"/>
+		</target>
+		
+		<!-- call stratego.jar.debug when debug.build.enabled property is set -->
+		<target name="call.stratego.jar.debug" depends="stratego.jar.debug">
+			<echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
+		</target>
+		
+		<!-- copy stratego runtime jars to utils folder -->
+		<target name="utils-files-debug" depends="utils-files">
+			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
+			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
+		</target>
+		
+	    <!-- Stratego to Java compiler with debugging capabilities -->
+	    <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
+	        <dependset>
+	            <srcfileset dir="${basedir}">
+	                <include name="**/*.str"/>
+	                <include name="**/*.astr"/>
+	                <exclude name="lib/editor-common.generated.str"/>
+	            </srcfileset>
+	            <targetfileset file="${src-gen}/trans/Main.java"/>
+	        </dependset>
+	        <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+	        <antcall target="copy-jar"/>
+	        <antcall target="stratego.jar.deletehelper"/>
+	    	<!-- compile stratego to java -->
+	        <antcall target="stratego.jvm.helper.debug">
+	            <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+	            <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+	        </antcall>
+	    	<!-- compile java to class -->
+	        <javac destdir="${build}" source="1.5" target="1.5" debug="on">
+	    		<!-- attribute in javac: srcdir="${src-gen}" -->
+	    		<src path="${src-gen}"/>
+	        	<!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"  -->
+	        	<classpath>
+	        		<pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+	        		<pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
+	        		<pathelement location="utils/stratego-debug-runtime-java.jar"/>
+	        	</classpath>
+	        	<!-- attribute in javac: includes="trans/**"  -->
+	        	<include name="trans/**"/>
+	    	</javac>
+	        <!-- copy imported terms -->
+	        <copy todir="${build}/trans">
+	            <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+	        </copy>
+	    	<!-- create a jar from the class files -->
+	        <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+	        <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+	        <delete><fileset dir="${build}" includes="trans/**"/></delete>
+	    </target>
+		
+		<!-- instrument the stratego program and compile it to java -->
+	    <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
+	    	<echo message="generate stratego with debug information"/>
+	    	<echo message="${basedir}"/>
+	    	<available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
+	    	<!-- add debug information -->
+	  		<java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
+	  		     <classpath>
+					<pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
+	  		     	<pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
+	  		     	<pathelement location="${eclipse.spoofaximp.strategojar}"/>
+	  		     </classpath>
+	  			<arg value="-i"/>
+	  			<arg value="${trans}/${strmodule}.str"/>
+	  			<arg value="--gen-dir"/>
+	  			<arg value="${trans-debug}"/>
+	  			<arg value="--base-dir"/> <!-- set the basedir to the project dir -->
+	  			<arg value="${basedir}"/>
+	  			<!-- "arg line='val'" val should contain space-separated arguments --> 
+	  			<arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
+	  			
+	  			<!-- arguments should start with two '-'-characters -->
+	  			<!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
+	  			<!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
+	  			<!-- <arg value="-output-rtree"/> --> 
+	    	</java>
+	    	<!-- now compile instrumented stratego to java -->
+	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+	        <java classname="org.strategoxt.strj.Main" failonerror="true">
+	            <arg value="-i"/>
+	            <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
+	            <arg value="-o"/>
+	            <arg value="${build.stratego.outputfile}"/>
+	            <arg value="-p"/>
+	            <arg value="trans"/>
+	            <arg value="--library"/>
+	            <arg value="--clean"/>
+	            <arg line="${build.stratego.args}"/>
+	            <arg line="${build.stratego.extraargs}"/>
+	            <arg line="${externaljarflags}"/>
+	            <arg line="${externaldefimport}"/>
+	            <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+	        	<!-- put strategodebuglib.rtree on the include path -->
+	        	<arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
+	        	<arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
+	        </java>
+	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+	        <mkdir dir="${build}/trans"/>
+	    </target>
+        
+        
+        <!-- end: targets used for adding debugging instrumentation to stratego -->
+
+
         <!-- Stratego to C-based native executable -->
         <target name="stratego.c">
             <antcall target="stratego.c.helper">

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv	Sun May  1 16:54:51 2011	(r22705)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv	Sun May  1 20:08:38 2011	(r22706)
@@ -11,8 +11,7 @@
 
 builders
                                                                                                                                
-  provider                  : include/spoofaxlang.jar                                                                        
-  provider                  : include/spoofaxlang-java.jar                                                                     
+  provider                  : include/spoofaxlang.jar                                                                          
                                                                                                                                
 	observer                  : editor-analyze                                                                                   
                                                                                                                                

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Configuration/SpoofaxConfiguration.def
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Configuration/SpoofaxConfiguration.def	Sun May  1 16:54:51 2011	(r22705)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Configuration/SpoofaxConfiguration.def	Sun May  1 20:08:38 2011	(r22706)
@@ -18,7 +18,7 @@
     
     [\*]                             -> CommentChar
     "/*" (~[\*] | CommentChar)* "*/" -> LAYOUT
-    "%%" ~[\n\r]* ([\n\r] | EOF)     -> LAYOUT
+    "//" ~[\n\r]* ([\n\r] | EOF)     -> LAYOUT
     
     -> EOF
   
@@ -44,7 +44,6 @@
 
     LAYOUT? -/- [\ \t\n\r]
     LAYOUT? -/- [\/].[\/]
-    LAYOUT? -/- [\%].[\%]
     LAYOUT? -/- [\/].[\*]
 
 module SpoofaxConfiguration
@@ -72,10 +71,14 @@
 	    "RootDirectory"												  ->   IncludeOption{cons("RootDirectory")}
 
 	lexical syntax 
-		[a-zA-Z\.][A-Za-z0-9\_\-\/\ \.\+]* 		-> RelativePath
-		"/" RelativePath											-> AbsolutePath
-		[a-zA-Z]":/" RelativePath							-> AbsolutePath
-		"../" RelativePath										-> AbsolutePath{prefer}
+		%%STRING -> RelativePath
+		PathChar                                   	-> RelativePath
+		PathChar (PathChar | Slash)* PathChar       -> RelativePath
+		[A-Za-z0-9\_\-\.\+]                         -> PathChar
+		"/"                                         -> Slash
+    Slash RelativePath				                  -> AbsolutePath
+		[a-zA-Z]":" Slash RelativePath              -> AbsolutePath
+		".." Slash RelativePath                     -> AbsolutePath{prefer}
 		
 	lexical syntax     
     
@@ -85,18 +88,21 @@
     "Configuration"     		   	-> Reserved
     "Includes"        					-> Reserved		
     "AllDirectories"   					-> Reserved		
+    "CodeGeneration"            -> Reserved   
     "RootDirectory" 				  -> Reserved		
    
     Reserved -> RelativePath{reject}
 	    
 	    
 	lexical restrictions
-		RelativePath -/- [A-Za-z0-9\_\-\/\ \.\+]
+	  Slash        -/- [\/]
+		RelativePath -/- [A-Za-z0-9\_\-\/\.\+]
 			
 		"SpxProjects" 
 		"Sources" 
 		"SpxSources"
 		"Configuration" 
+    "CodeGeneration" 
 		"Includes"
 		"AllDirectories"
 		"RootDirectory" -/- [A-Za-z0-9\_]
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Configuration/SpoofaxConfiguration.tbl
==============================================================================
Binary file (source and/or target). No diff available.

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Sun May  1 16:54:51 2011	(r22705)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Sun May  1 20:08:38 2011	(r22706)
@@ -46,12 +46,15 @@
 					DeclaredPackage,
 					GetEnclosingScope,
 					GetEnclosedScope:
-						where(
-							<debug-compiler>$[============Starting new compiler session ==============]
-						);
-						compiler-init; // initializing compiler session 
-						where(<debug-compiler>$[============Initialization is done  ==============]);
-						s	
+					  with(
+							where(
+								<debug-compiler>$[============Starting new compiler session ==============]
+							);
+							compiler-init; // initializing compiler session 
+							where(<debug-compiler>$[============Initialization is done  ==============]);
+							s;	
+				      ?x
+				    ); !x
 			|}
 
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Sun May  1 16:54:51 2011	(r22705)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Sun May  1 20:08:38 2011	(r22706)
@@ -152,7 +152,7 @@
     )
 	
 	//Returns output directory for the code generation
-	get-code-output-directory = collect-all(?OutputDirectory(<id>), union) ; ?[<id>]
+	get-code-output-directory = collect-one(?OutputDirectory(<id>))
 
 	// Returns all the resolved directories 	
 	get-all-includes  = 

From L.C.L.Kats at tudelft.nl  Sun May  1 23:26:55 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sun, 01 May 2011 21:26:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22707 -
	spoofax-contrib/Lawoco spoofax-contrib/Lawoco/lib
	spoofax-contrib/Lawoco/trans
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax
	spoofax-imp/trunk/org.st...
Message-ID: <20110501212655.72A5A2B8018@mx2.tudelft.nl>

Author: LennartKats
Date: Sun May  1 21:26:54 2011
New Revision: 22707
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22707&sc=1

Log:
Lawoco build fixes

Modified:
   spoofax-contrib/Lawoco/build.main.xml
   spoofax-contrib/Lawoco/lib/analysis-library.str
   spoofax-contrib/Lawoco/lib/spoofaxlang.jar
   spoofax-contrib/Lawoco/trans/analyze.str
   spoofax-contrib/Lawoco/trans/check.str
   spoofax-contrib/Lawoco/trans/lawoco.str
   spoofax-contrib/Lawoco/trans/types.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SPXCommon.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str

Modified: spoofax-contrib/Lawoco/build.main.xml
==============================================================================
--- spoofax-contrib/Lawoco/build.main.xml	Sun May  1 20:08:38 2011	(r22706)
+++ spoofax-contrib/Lawoco/build.main.xml	Sun May  1 21:26:54 2011	(r22707)
@@ -48,7 +48,13 @@
 	      	  <arg value="${basedir}"/>
 	      	</java>
 	      </target>
+	
+	      <target name="skip-rtg">
+	      	<!--<antcall target="pack-sdf"/>-->
+	        <echo file="${include}/${sdfmodule}.rtg" message=""/>
+          <echo file="${include}/${sdfmodule}.str" message="module include/${sdfmodule}"/>
+	      </target>
     
         <!-- Main target -->
-        <target name="all" depends="SPXgen, spoofaximp.default.ctree"/>
+        <target name="all" depends="check-classpath,init,SPXgen,skip-rtg,spoofaximp.default.ctree"/>
     </project>
\ No newline at end of file

Modified: spoofax-contrib/Lawoco/lib/analysis-library.str
==============================================================================
--- spoofax-contrib/Lawoco/lib/analysis-library.str	Sun May  1 20:08:38 2011	(r22706)
+++ spoofax-contrib/Lawoco/lib/analysis-library.str	Sun May  1 21:26:54 2011	(r22707)
@@ -1,11 +1,9 @@
 module analysis-library
 
 imports
-  include/NamingExperiment
   libstratego-lib
   types
   lib/editor-common.generated
-  analysis-generated
 
 signature constructors
 

Modified: spoofax-contrib/Lawoco/lib/spoofaxlang.jar
==============================================================================
Binary file (source and/or target). No diff available.

Modified: spoofax-contrib/Lawoco/trans/analyze.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/analyze.str	Sun May  1 20:08:38 2011	(r22706)
+++ spoofax-contrib/Lawoco/trans/analyze.str	Sun May  1 21:26:54 2011	(r22707)
@@ -1,7 +1,7 @@
 module analyze
 
 imports
-  include/Lawoco-signature
+  include/Lawoco
   analysis-library
   types
   lib/analysis-library

Modified: spoofax-contrib/Lawoco/trans/check.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/check.str	Sun May  1 20:08:38 2011	(r22706)
+++ spoofax-contrib/Lawoco/trans/check.str	Sun May  1 21:26:54 2011	(r22707)
@@ -2,11 +2,11 @@
 
 imports
   libstratego-lib
-  include/NamingExperiment
+  include/Lawoco
   lib/editor-common.generated
   analysis-library
-  analysis-generated
   types
+  .shadowdir/Globals/signatures
 
 rules
 

Modified: spoofax-contrib/Lawoco/trans/lawoco.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/lawoco.str	Sun May  1 20:08:38 2011	(r22706)
+++ spoofax-contrib/Lawoco/trans/lawoco.str	Sun May  1 21:26:54 2011	(r22707)
@@ -4,7 +4,7 @@
   libstratego-lib
   libstratego-gpp
   libstratego-aterm
-  include/Lawoco-signature
+  include/Lawoco
   lib/-
   analyze
   check

Modified: spoofax-contrib/Lawoco/trans/types.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/types.str	Sun May  1 20:08:38 2011	(r22706)
+++ spoofax-contrib/Lawoco/trans/types.str	Sun May  1 21:26:54 2011	(r22707)
@@ -1,7 +1,7 @@
 module types
 
 imports
-  include/NamingExperiment
+  include/Lawoco
   analysis-library
 
 signature constructors

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SPXCommon.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SPXCommon.sdf	Sun May  1 20:08:38 2011	(r22706)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SPXCommon.sdf	Sun May  1 21:26:54 2011	(r22707)
@@ -91,7 +91,7 @@
     "restrictions"      -> Reserved
   	"as"								-> Reserved
  		"main"							-> Reserved 
- 		"_Default"					-> Reserved 
+ 		"_default"					-> Reserved 
  		
  		Reserved 						-> ReservedName[[ESV]]
  		ReservedName[[ESV]]	-> ID {reject}

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Sun May  1 20:08:38 2011	(r22706)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Sun May  1 21:26:54 2011	(r22707)
@@ -147,6 +147,11 @@
   desugar-sdf-redux:
     Constructor(s) -> term(default(appl(unquoted("cons"), [fun(quoted(s))])))
 
+  // HACK: remove scope from output
+  desugar-sdf-redux:
+    term(default(appl(unquoted("scope"), [s]))) ->
+    term(default(appl(unquoted("scope"), [])))
+
   desugar-sdf-redux:
     namespacedef(_, s) -> s
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Sun May  1 20:08:38 2011	(r22706)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Sun May  1 21:26:54 2011	(r22707)
@@ -67,7 +67,7 @@
 		() -> ()
 		with 
  			project-path := <ProjectPath>;
- 			sig-file-name := "Globals/Singatures";
+ 			sig-file-name := "Globals/Signatures";
  			sig-file-rel-path := $[[<Autogenerated-Artifacts-Dir>]/[sig-file-name]]
 		where 
 			<debug-compiler>$[Codegen|Generating deafult signatures]			
@@ -110,7 +110,7 @@
 		where 
 			<debug-compiler>$[Codegen|Generating signature for the following module: [<pp-aterm>module-typed-qname]]			
 			;imports-string := $[imports 
-				Globals/Singatures
+				Globals/Signatures
 			]
 			;generated-signatures-string :=  <get-signature-contents(|sig-file-name,imports-string)><get-all-signatures-as-string(?(package-typed-qname, module-typed-qname, _))>
 			;<debug-compiler> $[Codegen|generated signatures : [generated-signatures-string ]] 
@@ -153,7 +153,7 @@
 ]  
 	
     	
-	get-all-signatures-as-string(s) = all-keys-Get-Operation-Singature; filter(s); mapconcat(bagof-Get-Operation-Declaration);operation-decl-to-string
+	get-all-signatures-as-string(s) = all-keys-Get-Operation-Signature; filter(s); mapconcat(bagof-Get-Operation-Declaration);operation-decl-to-string
   
   operation-decl-to-string : [] -> []
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Sun May  1 20:08:38 2011	(r22706)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Sun May  1 21:26:54 2011	(r22707)
@@ -12,7 +12,7 @@
 	spoofaxlang
 	
 rules 
-	default_package_name = !"_Default"
+	default_package_name = !"_default"
 	
 rules 
 	initialize-configuration = 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str	Sun May  1 20:08:38 2011	(r22706)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str	Sun May  1 21:26:54 2011	(r22707)
@@ -22,7 +22,7 @@
 rules 
 	getOperationSignatures = 
 		?opname; 
- 		<resolve-symbol-declarations(all-keys-Get-Operation-Singature, bagof-Get-Operation-Singature)><to-scoped-symbol>opname 
+ 		<resolve-symbol-declarations(all-keys-Get-Operation-Signature, bagof-Get-Operation-Signature)><to-scoped-symbol>opname 
  	<+
  		<debug-declaration> $[Waring | Failed to retrive OperationSignatures for opname[<pp-aterm>]. Returning  empty list . ];
  		![]
@@ -237,7 +237,7 @@
 		where (
 			arg-length := <length>operand-sort*;
 			rules(
-					Get-Operation-Singature  :+  scoped-op-name   -> (opname  , arg-length )
+					Get-Operation-Signature  :+  scoped-op-name   -> (opname  , arg-length )
 				 	Get-Operation-Declaration:+  scoped-op-name   -> (opname  , operand-sort* , resultant-sort)
 				)
 			; <debug-declaration> $[DeclareSignature | Stored operation declration : [<pp-aterm> ( opname , operand-sort* ,  resultant-sort) ].]

From M.A.Akhter at student.tudelft.nl  Mon May  2 03:13:37 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Mon, 02 May 2011 01:13:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22708 -
	spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading
Message-ID: <20110502011337.8C5CACC0CD@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Mon May  2 01:13:35 2011
New Revision: 22708
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22708&sc=1

Log:
added strategy to fallback to SPX mode while loading Descriptor

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java	Sun May  1 21:26:54 2011	(r22707)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java	Mon May  2 01:13:35 2011	(r22708)
@@ -270,6 +270,13 @@
 		if (name.endsWith(".main.esv")) return packedDescriptor;
 		name = name.substring(0, name.length() - ".packed.esv".length());
 		IResource result = packedDescriptor.getParent().getParent().findMember("editor/" + name + ".main.esv");
+		if ( result == null)
+		{
+			// Fallback to  shadowdir structure. 
+			// HACK : Dont like this dependency i.e. hard-coding of path (.shadowdir). 
+			// TODO : Make it configurable somehow
+			result = packedDescriptor.getParent().getParent().findMember("include/" + name +".main.esv");
+		}	
 		if (result == null) {
 			Environment.logException("Source descriptor not found", new FileNotFoundException("include/" + name + ".packed.esv"));
 			return packedDescriptor;

From M.A.Akhter at student.tudelft.nl  Mon May  2 03:17:27 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Mon, 02 May 2011 01:17:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22709 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen
Message-ID: <20110502011727.C738F2B8005@mx2.tudelft.nl>

Author: MdAdilAkhter
Date: Mon May  2 01:17:27 2011
New Revision: 22709
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22709&sc=1

Log:
* sdf2imp.eclipse is updated to support the fallback strategy of loading Descriptor.
* also refreshing sources ( probably redundant refresh)

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str	Mon May  2 01:13:35 2011	(r22708)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str	Mon May  2 01:17:27 2011	(r22709)
@@ -10,6 +10,7 @@
 	utils/path
 	normalize/signatures
 	codegen/main
+	codegen/generate
 
 rules
 	emit-build-script: package-qnames* -> package-qnames*  
@@ -536,6 +537,8 @@
 	        
 		<target name="sdf2imp.eclipse" if="eclipse.running" >
 			<copy file="${package.path}/${package.main.esv.module}.esv" tofile="${include}/${package.name}.packed.esv" preservelastmodified="true"/>
+			<copy file="${package.path}/${package.main.esv.module}.esv" tofile="${include}/${package.name}.main.esv" preservelastmodified="true"/>
+			<antcall target = "refresh"/>  
 			<java classname="org.strategoxt.imp.metatooling.building.AntSpxDescriptorBuilder" failonerror="true">
 				<arg value="${include}/${package.name}.packed.esv"/> <!-- esv main file-->
 			</java>

From L.C.L.Kats at tudelft.nl  Mon May  2 10:00:17 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 02 May 2011 08:00:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22710 -
	strategoxt-java-backend/trunk/java
Message-ID: <20110502080017.713757F802F@mx1.tudelft.nl>

Author: LennartKats
Date: Mon May  2 08:00:15 2011
New Revision: 22710
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22710&sc=1

Log:
new-libs

Modified:
   strategoxt-java-backend/trunk/java/spoofax-libs.jar

Modified: strategoxt-java-backend/trunk/java/spoofax-libs.jar
==============================================================================
Binary file (source and/or target). No diff available.

From R.B.Vermaas at tudelft.nl  Mon May  2 10:13:48 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 02 May 2011 08:13:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22711 -
	strategoxt/branches/strategoxt-java
Message-ID: <20110502081348.329D42B8019@mx2.tudelft.nl>

Author: rob
Date: Mon May  2 08:13:47 2011
New Revision: 22711
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22711&sc=1

Log:
disable parse-hack to see if maartje's fixes work

Modified:
   strategoxt/branches/strategoxt-java/build.xml

Modified: strategoxt/branches/strategoxt-java/build.xml
==============================================================================
--- strategoxt/branches/strategoxt-java/build.xml	Mon May  2 08:00:15 2011	(r22710)
+++ strategoxt/branches/strategoxt-java/build.xml	Mon May  2 08:13:47 2011	(r22711)
@@ -17,10 +17,11 @@
 
     <target
         name="all"
-        depends="ensure-dirs,syntax,parse-hack,generate-java,compile-java,jar"
+        depends="ensure-dirs,syntax,generate-java,compile-java,jar"
     />
 
-    <target name="test" depends="tests">
+    <target name="test">
+        <strj-test input="libraries/sglr/tests/stratego-sglr-tests.str" />
     </target>
 
     <target name="tests">

From L.C.L.Kats at tudelft.nl  Mon May  2 11:57:55 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 02 May 2011 09:57:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22712 -
	spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client
Message-ID: <20110502095755.387B8108C01F@mx3.tudelft.nl>

Author: LennartKats
Date: Mon May  2 09:57:54 2011
New Revision: 22712
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22712&sc=1

Log:
Post-parse reject filter fix

Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/AbstractParseNode.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/CycleParseNode.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Link.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParseNode.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParseProductionNode.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/SGLR.java

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/AbstractParseNode.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/AbstractParseNode.java	Mon May  2 08:13:47 2011	(r22711)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/AbstractParseNode.java	Mon May  2 09:57:54 2011	(r22712)
@@ -26,9 +26,9 @@
 
     public final boolean isParseNode(){
     	switch(getNodeType()) {
-    	case AbstractParseNode.PARSENODE:
+    		case AbstractParseNode.PARSENODE:
     		case AbstractParseNode.REJECT:
-    		case  AbstractParseNode.PREFER:
+    		case AbstractParseNode.PREFER:
     		case AbstractParseNode.AVOID: return true;
     	default:
     		return false;
@@ -46,6 +46,8 @@
     public final boolean isCycle() {
     	return getNodeType() == CYCLE;
     }
+    
+    public abstract void reject();
 
     abstract public int getNodeType();
     abstract public AbstractParseNode[] getChildren();

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/CycleParseNode.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/CycleParseNode.java	Mon May  2 08:13:47 2011	(r22711)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/CycleParseNode.java	Mon May  2 09:57:54 2011	(r22712)
@@ -45,6 +45,11 @@
 	public Object toTreeTopdown(TopdownTreeBuilder builder) {
 		return builder.buildTreeCycle(this);
 	}
+	
+	@Override
+	public void reject() {
+		throw new UnsupportedOperationException();
+	}
 
 	@Override
 	public String toStringShallow() {

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java	Mon May  2 08:13:47 2011	(r22711)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java	Mon May  2 09:57:54 2011	(r22712)
@@ -56,6 +56,12 @@
 	private boolean logStatistics;
 
 	private boolean ambiguityIsError;
+	
+	/**
+	 * A parse node that was rejected in the current subtree,
+	 * or null if no parse node was rejected.
+	 */
+	private AbstractParseNode rejectedBranch;
 
 	// Current parser state
 
@@ -231,8 +237,13 @@
 	                ambiguityManager.resetClustersVisitedCount();
 	                t = filterTree(t, false);
 	            }
+
+				if (filterReject && rejectedBranch != null && !parser.useIntegratedRecovery)
+					throw new FilterException(parser, "Unexpected reject annotation in " + yieldTree(rejectedBranch));
 	        } catch (RuntimeException e) {
 	            throw new FilterException(parser, "Runtime exception when applying filters", e);
+	        } finally {
+	        	rejectedBranch = null;
 	        }
 
 	        return yieldTreeTop(t);
@@ -388,6 +399,9 @@
 		}
 	}
 
+	/**
+	 * @param inAmbiguityCluster  We're inside an amb and can return null to reject this branch.
+	 */
 	private AbstractParseNode filterTree(AbstractParseNode t, boolean inAmbiguityCluster) throws FilterException {
 		// SG_FilterTreeRecursive
 		if (Tools.debugging) {
@@ -418,9 +432,11 @@
 				t.isParseProductionChain() ? null : filterTree(args, false);
 			// TODO: assert that parse production chains do not have reject nodes?
 
-			if (filterReject && parseTable.hasRejects()) {
-				if (hasRejectProd(t) && !parser.useIntegratedRecovery) {
-					throw new FilterException(parser, "Unexpected reject annotation in " + yieldTree(t));
+			if (filterReject && parseTable.hasRejects() && hasRejectProd(t)) {
+				if (inAmbiguityCluster) {
+					return null;
+				} else {
+					rejectedBranch = t;
 				}
 			}
 
@@ -807,9 +823,10 @@
 
 		for (final AbstractParseNode amb : ambs) {
 			final AbstractParseNode newAmb = filterTree(amb, true);
-			if (newAmb != null) {
+			if (newAmb != null && rejectedBranch == null) {
 				newAmbiguities.add(newAmb);
 			}
+			rejectedBranch = null;
 		}
 
 		if (newAmbiguities.size() > 1) {
@@ -823,7 +840,7 @@
 		}
 
 		if (newAmbiguities.isEmpty()) {
-			throw new FilterException(parser);
+			rejectedBranch = ParseNode.createAmbNode(ambs);
 		}
 
 		if (newAmbiguities.size() == 1) {

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Link.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Link.java	Mon May  2 08:13:47 2011	(r22711)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Link.java	Mon May  2 09:57:54 2011	(r22712)
@@ -39,6 +39,7 @@
             SGLR.TRACE("SG_MarkLinkRejected() - " + parent.state.stateNumber + ", " + length);
         }
         rejected = true;
+        label.reject();
     }
 
     public boolean isRejected() {
@@ -67,7 +68,7 @@
             SGLR.TRACE("SG_CreateAmbCluster() - " + tokensSeen);
         }
         ((ParseNode)label).makeAmbiguity(t);
-        //label = new Amb(label, t);
+        //label = ParseNode.createAmbNode(label, t);
     }
     
     @Override

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParseNode.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParseNode.java	Mon May  2 08:13:47 2011	(r22711)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParseNode.java	Mon May  2 09:57:54 2011	(r22712)
@@ -18,6 +18,8 @@
 import org.spoofax.terms.TermFactory;
 
 public class ParseNode extends AbstractParseNode {
+	
+	private static final int AMB_LABEL = -1;
 
     private int label;
 
@@ -32,8 +34,8 @@
     private int cachedHashCode; //should be set only after parsing 
 
     public int getLabel() {
-    	if(isAmbNode())
-    		throw new NotImplementedException();
+    	if(isAmbNode() || label == AMB_LABEL)
+    		throw new UnsupportedOperationException();
     	return label;
     }
 
@@ -42,17 +44,17 @@
     	if(type == AbstractParseNode.AMBIGUITY){
         	this.isParseProductionChain=false;
         	this.isSetPPC=true;
-        	this.label = -1;
+        	assert this.label == AMB_LABEL;
     	}
     }
     
-    public static ParseNode createAmbNode(AbstractParseNode[] kids){
-    	ParseNode amb = new ParseNode(-1, kids, AbstractParseNode.AMBIGUITY);
+    public static ParseNode createAmbNode(AbstractParseNode... kids){
+    	ParseNode amb = new ParseNode(AMB_LABEL, kids, AbstractParseNode.AMBIGUITY);
     	return amb;
     }
 
 	private void setFields(int label, AbstractParseNode[] kids, int type) {
-		assert (type!=AbstractParseNode.AMBIGUITY || (label==-1));
+		assert (type!=AbstractParseNode.AMBIGUITY || (label==AMB_LABEL));
 		this.nodeType = type;
         this.label = label;
         this.kids = kids;
@@ -60,6 +62,12 @@
         this.isSetPPC=false;
  	}
 	
+	@Override
+	public void reject() {
+		// FIXME: this might not work if the current node is an AMB
+		nodeType = REJECT;
+	}
+	
 	public void makeAmbiguity(AbstractParseNode pn){
 		//if (isAmbNode()) {
 		//	if (isInAmbiguityCluster(pn)) return;
@@ -74,7 +82,7 @@
 			if (this == pn || (isAmbNode() && isInAmbiguityCluster(pn)))
 				return;
 			ParseNode left = new ParseNode(this.label, this.kids, this.nodeType); 
-			setFields(-1, new AbstractParseNode[] { left, pn }, AbstractParseNode.AMBIGUITY);
+			setFields(AMB_LABEL, new AbstractParseNode[] { left, pn }, AbstractParseNode.AMBIGUITY);
 
 			if(pn instanceof ParseNode)
 				((ParseNode) pn).replaceCycle(this, left);

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParseProductionNode.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParseProductionNode.java	Mon May  2 08:13:47 2011	(r22711)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParseProductionNode.java	Mon May  2 09:57:54 2011	(r22712)
@@ -22,6 +22,11 @@
     }
     
     @Override
+    public void reject() {
+    	throw new UnsupportedOperationException();
+    }
+    
+    @Override
 	public boolean isParseProductionChain() {
     	return true;
     }

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/SGLR.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/SGLR.java	Mon May  2 08:13:47 2011	(r22711)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/SGLR.java	Mon May  2 09:57:54 2011	(r22712)
@@ -650,8 +650,7 @@
 				logAmbiguity(st0, prod, st1, nl);
 				if (prod.isRejectProduction()) {
 					nl.reject();
-				}
-				if(numberOfRecoveries == 0 && nl.recoverCount == 0 || nl.isRejected()) {
+				} else if(numberOfRecoveries == 0 && nl.recoverCount == 0 || nl.isRejected()) {
 					createAmbNode(t, nl);
 				} else if (numberOfRecoveries < nl.recoverCount) {
 					nl.label = t;

From L.C.L.Kats at tudelft.nl  Mon May  2 11:58:59 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 02 May 2011 09:58:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22713 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr
Message-ID: <20110502095859.A35512B801B@mx2.tudelft.nl>

Author: LennartKats
Date: Mon May  2 09:58:59 2011
New Revision: 22713
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22713&sc=1

Log:
Print stack trace for FilterExceptions

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java	Mon May  2 09:57:54 2011	(r22712)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java	Mon May  2 09:58:59 2011	(r22713)
@@ -15,6 +15,7 @@
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.jsglr.client.Asfix2TreeBuilder;
+import org.spoofax.jsglr.client.FilterException;
 import org.spoofax.jsglr.client.ParseTable;
 import org.spoofax.jsglr.client.SGLR;
 import org.spoofax.jsglr.shared.SGLRException;
@@ -85,6 +86,10 @@
 		} catch (SGLRException e) {
 			lastException = e;
 			IStrategoTerm errorTerm = e.toTerm(lastPath);
+			if (e instanceof FilterException) {
+				// HACK: print stack trace for this internal error
+				e.printStackTrace();
+			}
 			env.setCurrent(errorTerm);
 			
 			// FIXME: Stratego doesn't seem to print the erroneous line in Java

From L.C.L.Kats at tudelft.nl  Mon May  2 11:59:33 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 02 May 2011 09:59:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22714 -
	strategoxt-java-backend/trunk/java
Message-ID: <20110502095933.E1E6D2B801B@mx2.tudelft.nl>

Author: LennartKats
Date: Mon May  2 09:59:33 2011
New Revision: 22714
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22714&sc=1

Log:
new-libs

Modified:
   strategoxt-java-backend/trunk/java/spoofax-libs.jar

Modified: strategoxt-java-backend/trunk/java/spoofax-libs.jar
==============================================================================
Binary file (source and/or target). No diff available.

From L.C.L.Kats at tudelft.nl  Mon May  2 12:07:09 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 02 May 2011 10:07:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22715 -
	spoofax-imp/trunk/experimental/NamingExperiment/trans
Message-ID: <20110502100709.0BCA6108C01C@mx3.tudelft.nl>

Author: LennartKats
Date: Mon May  2 10:07:08 2011
New Revision: 22715
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22715&sc=1

Log:
cleanup

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-library.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-library.str	Mon May  2 09:59:33 2011	(r22714)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-library.str	Mon May  2 10:07:08 2011	(r22715)
@@ -1,11 +1,9 @@
 module analysis-library
 
 imports
-  include/NamingExperiment
   libstratego-lib
   types
   lib/editor-common.generated
-  analysis-generated
 
 signature constructors
 

From L.C.L.Kats at tudelft.nl  Mon May  2 12:08:38 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 02 May 2011 10:08:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22716 - in
	spoofax-contrib/Lawoco: . lib test
Message-ID: <20110502100838.42CEF7F805E@mx1.tudelft.nl>

Author: LennartKats
Date: Mon May  2 10:08:38 2011
New Revision: 22716
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22716&sc=1

Log:
some more build fixes

Modified:
   spoofax-contrib/Lawoco/build.main.xml
   spoofax-contrib/Lawoco/lib/spoofaxlang.jar
   spoofax-contrib/Lawoco/test/example.lawo

Modified: spoofax-contrib/Lawoco/build.main.xml
==============================================================================
--- spoofax-contrib/Lawoco/build.main.xml	Mon May  2 10:07:08 2011	(r22715)
+++ spoofax-contrib/Lawoco/build.main.xml	Mon May  2 10:08:38 2011	(r22716)
@@ -56,5 +56,5 @@
 	      </target>
     
         <!-- Main target -->
-        <target name="all" depends="check-classpath,init,SPXgen,skip-rtg,spoofaximp.default.ctree"/>
+        <target name="all" depends="check-classpath,init,SPXgen,sdf2table,skip-rtg,spoofaximp.default.ctree"/>
     </project>
\ No newline at end of file

Modified: spoofax-contrib/Lawoco/lib/spoofaxlang.jar
==============================================================================
Binary file (source and/or target). No diff available.

Modified: spoofax-contrib/Lawoco/test/example.lawo
==============================================================================
--- spoofax-contrib/Lawoco/test/example.lawo	Mon May  2 10:07:08 2011	(r22715)
+++ spoofax-contrib/Lawoco/test/example.lawo	Mon May  2 10:08:38 2011	(r22716)
@@ -1,18 +1,13 @@
 module example
 
-// Example "Lawoco" program (see syntax/Lawoco.sdf for the grammar)
-
-entity User {
-  name     : String
-  password : String
-  homepage : URL
-}
-
-entity BlogPosting {
-  poster : User
-  body   : String
+entity Person {
+  string name
+  string firstname
+  date bithdate
+  Car ownedCar
 }
 
-entity URL {
-  location : String
+entity Car {
+  string make
+  string mode
 }
\ No newline at end of file

From L.C.L.Kats at tudelft.nl  Mon May  2 12:36:50 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 02 May 2011 10:36:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22717 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen
Message-ID: <20110502103650.2958D2B8019@mx2.tudelft.nl>

Author: LennartKats
Date: Mon May  2 10:36:49 2011
New Revision: 22717
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22717&sc=1

Log:
s/Singatures/Signatures/

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str	Mon May  2 10:08:38 2011	(r22716)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str	Mon May  2 10:36:49 2011	(r22717)
@@ -37,7 +37,7 @@
 				<show-configuration;debug>();     //show configuration for this spx project
 				<build-all>();                     //building all the spx files in the sources directory
 				<debug>$["-----------Build-all succeeds-----------------"];
-				!FILE($[[input]/.shadowdir/Globals/Singatures.str])	 //HACK : just to ensure this strategy is not failing ...
+				!FILE($[[input]/.shadowdir/Globals/Signatures.str])	 //HACK : just to ensure this strategy is not failing ...
 			<+
 				prim("SSL_stacktrace_get_all_frame_names") ; report-failure
 		)

From L.C.L.Kats at tudelft.nl  Mon May  2 12:55:45 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 02 May 2011 10:55:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22718 - in
	spoofax-contrib/Lawoco: . .shadowdir OutputDirectory lib trans
Message-ID: <20110502105545.C212D2B8019@mx2.tudelft.nl>

Author: LennartKats
Date: Mon May  2 10:55:45 2011
New Revision: 22718
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22718&sc=1

Log:


Deleted:
   spoofax-contrib/Lawoco/.shadowdir/
   spoofax-contrib/Lawoco/OutputDirectory/
Modified:
   spoofax-contrib/Lawoco/build.main.xml
   spoofax-contrib/Lawoco/lib/spoofaxlang.jar
   spoofax-contrib/Lawoco/trans/lawoco.str

Modified: spoofax-contrib/Lawoco/build.main.xml
==============================================================================
--- spoofax-contrib/Lawoco/build.main.xml	Mon May  2 10:36:49 2011	(r22717)
+++ spoofax-contrib/Lawoco/build.main.xml	Mon May  2 10:55:45 2011	(r22718)
@@ -50,8 +50,8 @@
 	      </target>
 	
 	      <target name="skip-rtg">
-	      	<!--<antcall target="pack-sdf"/>-->
-	        <echo file="${include}/${sdfmodule}.rtg" message=""/>
+	      	<antcall target="sdf2table"/>
+	        <echo file="${include}/${sdfmodule}.rtg" message="regular tree grammar start Start productions Start -> &lt;nil&gt;()"/>
           <echo file="${include}/${sdfmodule}.str" message="module include/${sdfmodule}"/>
 	      </target>
     

Modified: spoofax-contrib/Lawoco/lib/spoofaxlang.jar
==============================================================================
Binary file (source and/or target). No diff available.

Modified: spoofax-contrib/Lawoco/trans/lawoco.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/lawoco.str	Mon May  2 10:36:49 2011	(r22717)
+++ spoofax-contrib/Lawoco/trans/lawoco.str	Mon May  2 10:55:45 2011	(r22718)
@@ -4,7 +4,7 @@
   libstratego-lib
   libstratego-gpp
   libstratego-aterm
-  include/Lawoco
+  .shadowdir/_Default/Lawoco
   lib/-
   analyze
   check

From L.C.L.Kats at tudelft.nl  Mon May  2 13:04:54 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 02 May 2011 11:04:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22719 -
	spoofax-contrib/Lawoco/syntax
Message-ID: <20110502110454.E2FD42B801F@mx2.tudelft.nl>

Author: LennartKats
Date: Mon May  2 11:04:54 2011
New Revision: 22719
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22719&sc=1

Log:
Start symbols

Modified:
   spoofax-contrib/Lawoco/syntax/Lawoco.spx

Modified: spoofax-contrib/Lawoco/syntax/Lawoco.spx
==============================================================================
--- spoofax-contrib/Lawoco/syntax/Lawoco.spx	Mon May  2 10:55:45 2011	(r22718)
+++ spoofax-contrib/Lawoco/syntax/Lawoco.spx	Mon May  2 11:04:54 2011	(r22719)
@@ -1,5 +1,8 @@
 module Lawoco
 
+context-free start-symbols
+   Start
+
 context-free syntax
   
     "module" Module@=ID Definition*     -> Start {"Module", scope(Entity, Module)}

From R.B.Vermaas at tudelft.nl  Mon May  2 13:24:16 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 02 May 2011 11:24:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22720 - hydra/webdsl
Message-ID: <20110502112416.A6415CC030@mx4.tudelft.nl>

Author: rob
Date: Mon May  2 11:24:16 2011
New Revision: 22720
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22720&sc=1

Log:
remove obsolete services arguments

Modified:
   hydra/webdsl/tests-separate-compilation.nix
   hydra/webdsl/tests.nix

Modified: hydra/webdsl/tests-separate-compilation.nix
==============================================================================
--- hydra/webdsl/tests-separate-compilation.nix	Mon May  2 11:04:54 2011	(r22719)
+++ hydra/webdsl/tests-separate-compilation.nix	Mon May  2 11:24:16 2011	(r22720)
@@ -1,5 +1,4 @@
 { nixpkgs ? ../../nixpkgs
-, services ? ../../services
 , nixos ? ../../nixos
 , webdslSrc ? {outPath = ../../webdsl; rev = 1234;}
 }:
@@ -28,7 +27,7 @@
 in
 {
   webcheck =
-      with import "${nixos}/lib/testing.nix" {inherit nixpkgs services; system = "i686-linux";} ;
+      with import "${nixos}/lib/testing.nix" {inherit nixpkgs ; system = "i686-linux";} ;
       runInMachineWithX {
         require = [ ./machine.nix ];
         drv = pkgs.stdenv.mkDerivation {

Modified: hydra/webdsl/tests.nix
==============================================================================
--- hydra/webdsl/tests.nix	Mon May  2 11:04:54 2011	(r22719)
+++ hydra/webdsl/tests.nix	Mon May  2 11:24:16 2011	(r22720)
@@ -1,6 +1,5 @@
 { nixpkgs ? ../../nixpkgs
 , webdsl ? {outPath = builtins.storePath /nix/store/fy8d3qkfhk3k1y10jpdx09q4w43bnh0a-webdsl-9.7pre4063;}
-, services ? ../../services
 , nixos ? ../../nixos
 }:
 let 
@@ -62,7 +61,7 @@
   webcheck =
     { webdslSrc ? {outPath = ../../webdsl; rev = 1234;}
     }:
-      with import "${nixos}/lib/testing.nix" {inherit nixpkgs services; system = "i686-linux";} ;
+      with import "${nixos}/lib/testing.nix" {inherit nixpkgs ; system = "i686-linux";} ;
       runInMachineWithX {
         require = [ ./machine.nix ];
         drv = pkgs.stdenv.mkDerivation {

From M.A.Akhter at student.tudelft.nl  Mon May  2 14:49:23 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Mon, 02 May 2011 12:49:23 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22721 -
	spoofax-contrib/Lawoco
Message-ID: <20110502124923.38D6D2B8004@mx2.tudelft.nl>

Author: MdAdilAkhter
Date: Mon May  2 12:49:22 2011
New Revision: 22721
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22721&sc=1

Log:
* DEF file was missing includes to other sdf definitions. 
* Added import to the default signatures . I
* In include\lawoco.str file, there was a missing reference to include\_default-signatures.
* Temp build file is added to test build of lawoco.

Added:
   spoofax-contrib/Lawoco/build.generated.lawoco.xml
Modified:
   spoofax-contrib/Lawoco/build.main.xml

Added: spoofax-contrib/Lawoco/build.generated.lawoco.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/Lawoco/build.generated.lawoco.xml	Mon May  2 12:49:22 2011	(r22721)
@@ -0,0 +1,447 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!--HACK : Temp Build file to test Lawoco Build. TODO: DELETE it-->
+<project name="build.generated">
+
+        <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,java.jar,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  java.jar,sdf2imp,refresh"/>
+    
+        <!-- Initialization -->
+        <available file="${build}/Lawoco/strategies/Main.class" property="java.jar.enabled"/>
+        <condition property="java.jar.import" value="-la Lawoco.strategies" else="">
+            <isset property="java.jar.enabled"/>
+        </condition>
+        <condition property="java.jar.classpath" value=":${include}/${strmodule}-java.jar" else="">
+            <isset property="java.jar.enabled"/>
+        </condition>
+        <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
+        <dirname property="externaldefdir" file="${externaldef}"/>
+        <condition property="externaldefimport" value="-I ${externaldefdir}" else="">
+            <isset property="externaldef"/>
+        </condition>
+        <condition property="externaljarimport" value=":${externaljar}" else="">
+            <isset property="externaljar"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <isset property="eclipse.running"/>
+        </condition>
+        <condition property="externaljarflags" value="${externaljarflags}" else="">
+            <isset property="externaljarflags"/>
+        </condition>
+        <condition property="metasdfmodule.available" value="1">
+            <available file="${syntax}/${metasdfmodule}.sdf"/>
+        </condition>
+        
+        <fail unless="build" message="Please use build.main.xml to build this project or configure the required properties manually"/>
+        <mkdir dir="${build}"/>
+        <mkdir dir="${src-gen}"/>
+        <mkdir dir="${dist}"/>
+        <mkdir dir="${include}"/>
+        <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
+
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+        
+        <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
+                <arg value="${include}/${esvmodule}.packed.esv"/>
+            </java>
+        </target>
+        
+        <target name="refresh" if="eclipse.running">
+            <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+            <eclipse.convertPath fileSystemPath="${syntax}" property="syntaxdir"/>
+            <eclipse.convertPath fileSystemPath="${lib}" property="libdir"/>
+            <eclipse.refreshLocal resource="${libdir}" depth="infinite"/>
+            <eclipse.refreshLocal resource="${syntaxdir}/${sdfmodule}.pp.generated" depth="infinite"/>
+            <eclipse.refreshLocal resource="${libdir}/editor-common.generated.str" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Builders.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Colorer.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Completions.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+            <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
+            <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+            <!-- Might cause the editor to be reloaded?
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            -->
+        </target>
+        
+        <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
+                <arg value="-p"/>
+                <arg value="${include}/${sdfmodule}.tbl"/>
+            </java>
+        </target>
+        
+        <target name="check-classpath">
+            <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
+            <antcall target="check-classpath.helper"/>  
+        </target>
+        
+        <target name="init" if="eclipse.running">
+            <!-- refresh one file/dir in the project to trigger an Ant rebuild with the next build command -->
+            <java classname="org.strategoxt.imp.metatooling.building.AntForceRefreshScheduler" failonerror="false">
+                <arg value="${include}"/>
+            </java>
+        </target>
+  
+        <target name="check-classpath.helper" unless="check-classpath.available">
+            <echo level="error" message="Could not load the Spoofax plugin loading classes."/>
+            <echo level="error" message="Make sure it is on the class path."/>
+            <echo level="error" message=""/>               
+            <echo level="error" message="In Eclipse, make sure the Ant builder is configured properly:"/>
+            <echo level="error" message="right-click on build.main.xml, go to Run as, Ant build..., JRE tab,"/>
+            <echo level="error" message="and ensure Run in the same JRE as the workspace is selected"/>
+            <echo level="error" message="alternatively, build the project using Build Project in the Project menu"/>
+            <fail/>
+        </target>
+    
+        <target name="sdf2table" depends="make-permissive">
+            <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                
+                <fileset file="${include}/${sdfmodule}-Permissive.def"/>
+                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+            </apply>
+        </target>
+        
+        <target name="meta-sdf2table" if="metasdfmodule.available">
+            <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+            <antcall target="sdf2table">
+                <param name="sdfmodule" value="${metasdfmodule}"/>
+                <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+            </antcall>
+            <antcall target="meta-sdf2table.helper"/>
+        </target>
+        
+        <target name="meta-sdf2table.helper" if="eclipse.running">
+           <eclipse.convertPath fileSystemPath="${include}" property="includeresource"/>
+           <eclipse.refreshLocal resource="${includeresource}/${metasdfmodule}.tbl" depth="infinite"/>
+        </target>
+        
+        <target name="make-permissive" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-Permissive.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <antcall target="make-permissive.helper"/>
+        </target>
+    
+        <target name="make-permissive.helper" unless="permissive-grammar.available">
+            <java classname="org.strategoxt.permissivegrammars.make_permissive" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-Permissive.def"/>
+                <arg line="--optimize on"/>
+            </java>
+        </target>
+
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
+            <mkdir dir="utils"/>
+            <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/aster.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.strategojar}" todir="utils" failonerror="false"/>
+        </target>
+    
+        <target name="pack-sdf" unless="externaldef">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.sdf"/>
+                </srcfileset>
+                <srcfileset dir="${lib}">
+                    <include name="**/*.def"/>
+                </srcfileset>
+                <targetfileset file="${include}/${sdfmodule}.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.def" property="pack-sdf.available"/>
+            <antcall target="pack-sdf.helper"/>
+        </target>
+    
+        <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <condition property="utils-include" value="-I ${utils}" else="">
+                <available file="${utils}"/>
+            </condition>
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-pack-sdf"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdf.main.module}.sdf"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-I"/>
+                <arg value="${syntax}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg line="${utils-include}"/>
+                <arg line="${build.sdf.imports}"/>
+            </java>
+        </target>
+    
+        <target name="copy-sdf" if="externaldef">
+            <copy file="${externaldef}" tofile="${include}/${sdfmodule}.def" preservelastmodified="true"/>
+        </target>
+    
+        <target name="copy-jar" if="externaljar">
+            <copy file="${externaljar}" todir="${include}" preservelastmodified="true"/>
+        </target>
+    
+        <target name="rtg2sig" if="build.stratego.enabled" depends="sdf2rtg">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.rtg"/>
+                <targetfileset file="${include}/${sdfmodule}.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.str" property="rtg2sig.available"/>
+            <antcall target="rtg2sig.helper"/>
+        </target>
+    
+        <target name="rtg2sig.helper" unless="rtg2sig.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-rtg2sig"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.str"/>
+                <arg value="--module"/>
+                <arg value="${sdfmodule}"/>
+            </java>
+        </target>
+        
+        <target name="sdf2rtg" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}.rtg"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.rtg" property="sdf2rtg.available"/>
+            <antcall target="sdf2rtg.helper"/>
+        </target>
+    
+        <target name="sdf2rtg.helper" unless="sdf2rtg.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-sdf2rtg"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="--ignore-missing-cons"/>
+                <arg value="-Xnativepath"/>
+                <arg value="${build.strategoxt.sdf}"/>
+            </java>
+        </target>
+        
+        <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${syntax}/${sdfmodule}.generated.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.generated.pp.af"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
+        </target>
+    
+        <target name="ppgen.helper" unless="ppgen.available">
+            <!-- Any failures here are ignored; they are only a problem when imported from Stratego -->
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-ppgen"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+                <arg value="-t"/>
+            </java>
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-pp-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+                <arg value="-o"/>
+                <arg value="${syntax}/${sdfmodule}.generated.pp"/>
+            </java>
+        </target>
+    
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
+        
+        <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${syntax}/${sdfmodule}.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+            </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
+        </target>
+    
+        <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-parse-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.pp"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.pp.af"/>
+            </java>
+        </target>
+    
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+    
+        <!-- Aster to Stratego -->
+        <target name="stratego.aster">
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <pathconvert property="aster-input" setonempty="false" pathsep=" ">
+                <path><fileset dir="${basedir}" includes="*.astr"/></path>
+            </pathconvert>
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.astr"/>
+                </srcfileset>
+                <targetfileset file="${trans}/${strmodule}.rtree"/>
+            </dependset>
+            <condition property="aster-output.uptodate">
+                <and>
+                    <isset property="aster-output.available"/>
+                    <available file="${trans}/${strmodule}.rtree"/>
+                </and>
+            </condition>
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.uptodate"/>
+            <antcall target="stratego.aster.helper"/>
+        </target>
+    
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
+                <arg value="-i"/>
+                <fileset dir="${basedir}">
+                    <include name="**/*.astr"/>
+                </fileset>
+            </java>
+        </target>
+        
+        <target name="java.jar" if="java.jar.enabled">
+            <jar basedir="${build}" excludes="trans/**" update="true" destfile="${include}/${strmodule}-java.jar"/>
+        </target>
+    
+        <!-- Stratego to Java interpreter -->
+        <target name="stratego.ctree" depends="rtg2sig">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${include}/${strmodule}.ctree"/>
+            </dependset>
+            <available file="${include}/${strmodule}.ctree" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputfile" value="${include}/${strmodule}.ctree"/>
+                <param name="build.stratego.extraargs" value="-F"/>
+            </antcall>
+        </target>
+    
+        <!-- Stratego to Java compiler -->
+        <target name="stratego.jar" depends="rtg2sig,utils-files">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="trans/**"/>
+                <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+        </target>
+            
+        <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans}/${strmodule}.str"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
+                
+        <!-- Stratego to C-based native executable -->
+        <target name="stratego.c">
+            <antcall target="stratego.c.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/include"/>
+                <param name="build.stratego.extraargs" value=""/>
+                <param name="build.stratego.extension" value=""/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+        
+        <!-- Helper target for calling the stratego compiler -->
+        <target name="stratego.c.helper" depends="rtg2sig" if="build.stratego.enabled">
+            <apply executable="${build.strategoxt.stratego}/${build.stratego.compiler}" dest="${build.stratego.outputpath}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                
+                <fileset file="${trans}/${strmodule}.str"/>
+                <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>
+            </apply>
+        </target>
+        
+        <target name="clean" description="clean up">
+            <delete dir="${build}"/>
+            <delete file="${src-gen}/trans/Main.java"/>
+        </target>
+    </project>
\ No newline at end of file

Modified: spoofax-contrib/Lawoco/build.main.xml
==============================================================================
--- spoofax-contrib/Lawoco/build.main.xml	Mon May  2 11:24:16 2011	(r22720)
+++ spoofax-contrib/Lawoco/build.main.xml	Mon May  2 12:49:22 2011	(r22721)
@@ -3,7 +3,15 @@
 <project name="Lawoco" default="all">
         
         <!-- Key input modules -->
-        <property name="sdfmodule" value="Lawoco"/>
+		<property name="sdfmodule" value="Lawoco"/>
+		<property name="sdf.main.module" value="_default-main"/>
+		
+	<!-- 
+		<property name="sdfmodule" value="Lawoco"/>
+		
+	-->
+		<property name="default.generated.signatures" value="_default-signatures"/>
+		
         <property name="metasdfmodule" value="Stratego-Lawoco"/>
         <property name="esvmodule" value="Lawoco"/>
         <property name="strmodule" value="lawoco"/>
@@ -19,7 +27,7 @@
         
         <!-- Imports -->
         <property name="build.sdf.imports" value="-I &quot;${basedir}/.shadowdir&quot;"/>
-        <property name="build.stratego.args" value="
+		<property name="build.stratego.args" value="
                         --library
                         -I &quot;${trans}&quot;
                         -I &quot;${basedir}&quot;
@@ -38,8 +46,13 @@
         </condition>
         <property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin"/>
     
-        <import file="build.generated.xml"/>
+		<import file="build.generated.xml"/>
+		<!-- HACK : TEMP DIABLING BUILD.GENERATED.XML 
+			
+			<import file="build.generated.lawoco.xml"/>
+        -->
 	
+		
 	      <target name="SPXgen">
 	        <java classname="run" failonerror="true">
             <arg value="${basedir}/lib/spoofaxlang.jar"/>
@@ -52,7 +65,7 @@
 	      <target name="skip-rtg">
 	      	<antcall target="sdf2table"/>
 	        <echo file="${include}/${sdfmodule}.rtg" message="regular tree grammar start Start productions Start -> &lt;nil&gt;()"/>
-          <echo file="${include}/${sdfmodule}.str" message="module include/${sdfmodule}"/>
+          	<echo file="${include}/${sdfmodule}.str" message="module include/${sdfmodule} imports include/${default.generated.signatures}"/>
 	      </target>
     
         <!-- Main target -->

From M.A.Akhter at student.tudelft.nl  Mon May  2 14:51:09 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Mon, 02 May 2011 12:51:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22722 -
	spoofax-contrib/Lawoco
Message-ID: <20110502125109.428CD108C022@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Mon May  2 12:51:09 2011
New Revision: 22722
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22722&sc=1

Log:
generated main  sdf module name != output sdf module name . Hence, HACK : added extra param in ANT script to configure both.

Modified:
   spoofax-contrib/Lawoco/build.main.xml

Modified: spoofax-contrib/Lawoco/build.main.xml
==============================================================================
--- spoofax-contrib/Lawoco/build.main.xml	Mon May  2 12:49:22 2011	(r22721)
+++ spoofax-contrib/Lawoco/build.main.xml	Mon May  2 12:51:09 2011	(r22722)
@@ -3,8 +3,8 @@
 <project name="Lawoco" default="all">
         
         <!-- Key input modules -->
-		<property name="sdfmodule" value="Lawoco"/>
-		<property name="sdf.main.module" value="_default-main"/>
+		<property name="sdfmodule" value="Lawoco"/> <!-- output sdf module name -->
+		<property name="sdf.main.module" value="_default-main"/> <!-- generated main sdf module name -->
 		
 	<!-- 
 		<property name="sdfmodule" value="Lawoco"/>

From M.A.Akhter at student.tudelft.nl  Mon May  2 15:45:29 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Mon, 02 May 2011 13:45:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22723 -
	spoofax-contrib/Lawoco
Message-ID: <20110502134529.79A89108C01C@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Mon May  2 13:45:29 2011
New Revision: 22723
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22723&sc=1

Log:
Using temp autogen build file

Modified:
   spoofax-contrib/Lawoco/build.main.xml

Modified: spoofax-contrib/Lawoco/build.main.xml
==============================================================================
--- spoofax-contrib/Lawoco/build.main.xml	Mon May  2 12:51:09 2011	(r22722)
+++ spoofax-contrib/Lawoco/build.main.xml	Mon May  2 13:45:29 2011	(r22723)
@@ -46,10 +46,10 @@
         </condition>
         <property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin"/>
     
-		<import file="build.generated.xml"/>
+		<import file="build.generated.lawoco.xml"/>
 		<!-- HACK : TEMP DIABLING BUILD.GENERATED.XML 
+		<import file="build.generated.xml"/>	
 			
-			<import file="build.generated.lawoco.xml"/>
         -->
 	
 		

From L.C.L.Kats at tudelft.nl  Mon May  2 16:49:30 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 02 May 2011 14:49:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22724 - in
	spoofax-contrib/Lawoco: . editor lib syntax test trans
Message-ID: <20110502144930.3625F108C024@mx3.tudelft.nl>

Author: LennartKats
Date: Mon May  2 14:49:29 2011
New Revision: 22724
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22724&sc=1

Log:
Working on Lawoco (reverted conflicting build.main.xml changes)

Added:
   spoofax-contrib/Lawoco/trans/generate-java.str
      - copied, changed from r22710, spoofax-contrib/Lawoco/trans/generate.str
   spoofax-contrib/Lawoco/trans/generate-xml.str
Deleted:
   spoofax-contrib/Lawoco/trans/generate.str
Modified:
   spoofax-contrib/Lawoco/build.main.xml
   spoofax-contrib/Lawoco/editor/Lawoco-Builders.esv
   spoofax-contrib/Lawoco/lib/analysis-library.str
   spoofax-contrib/Lawoco/lib/spoofaxlang.jar
   spoofax-contrib/Lawoco/syntax/Lawoco.spx
   spoofax-contrib/Lawoco/test/example.lawo
   spoofax-contrib/Lawoco/trans/analyze.str
   spoofax-contrib/Lawoco/trans/check.str
   spoofax-contrib/Lawoco/trans/lawoco.str
   spoofax-contrib/Lawoco/trans/types.str

Modified: spoofax-contrib/Lawoco/build.main.xml
==============================================================================
--- spoofax-contrib/Lawoco/build.main.xml	Mon May  2 13:45:29 2011	(r22723)
+++ spoofax-contrib/Lawoco/build.main.xml	Mon May  2 14:49:29 2011	(r22724)
@@ -46,12 +46,11 @@
         </condition>
         <property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin"/>
     
-		<import file="build.generated.lawoco.xml"/>
-		<!-- HACK : TEMP DIABLING BUILD.GENERATED.XML 
-		<import file="build.generated.xml"/>	
-			
-        -->
-	
+	<!--	
+	<import file="build.generated.lawoco.xml"/>
+	-->
+
+	      <import file="build.generated.xml"/>	
 		
 	      <target name="SPXgen">
 	        <java classname="run" failonerror="true">
@@ -62,12 +61,48 @@
 	      	</java>
 	      </target>
 	
-	      <target name="skip-rtg">
-	      	<antcall target="sdf2table"/>
+	      <target name="build-syntax-hack">
+          <java classname="run" failonerror="true">
+              <arg value="org.strategoxt.tools.main-pack-sdf"/>
+              <arg value="-i"/>
+              <arg value="${basedir}/.shadowdir/_Default/_default-main.sdf"/>
+              <arg value="-o"/>
+              <arg value="${include}/${sdfmodule}.def"/>
+              <arg value="-I"/>
+              <arg value="${basedir}/.shadowdir"/>
+              <arg value="-I"/>
+              <arg value="${lib}"/>
+          </java>
+          <java classname="org.strategoxt.permissivegrammars.make_permissive" failonerror="true">
+              <arg value="-i"/>
+              <arg value="${include}/${sdfmodule}.def"/>
+              <arg value="-o"/>
+              <arg value="${include}/${sdfmodule}-Permissive.def"/>
+              <arg line="--optimize on"/>
+          </java>
+	      	<apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
+              <arg value="-i"/>
+              <srcfile/>
+              <arg value="-o"/>
+              <targetfile/>
+              <arg value="-m"/>
+              <arg value="_default/_default-main"/>
+              
+              <fileset file="${include}/${sdfmodule}-Permissive.def"/>
+              <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+          </apply>
 	        <echo file="${include}/${sdfmodule}.rtg" message="regular tree grammar start Start productions Start -> &lt;nil&gt;()"/>
           	<echo file="${include}/${sdfmodule}.str" message="module include/${sdfmodule} imports include/${default.generated.signatures}"/>
 	      </target>
+	
+	      <target name="del-rtrees-hack">
+	      	<delete>
+	      	    <fileset dir="${basedir}/.shadowdir">
+	      	       <include name="**/*.rtree" />
+	      	    </fileset>
+	      	</delete>
+	      </target>
     
         <!-- Main target -->
-        <target name="all" depends="check-classpath,init,SPXgen,sdf2table,skip-rtg,spoofaximp.default.ctree"/>
+        <target name="all" depends="check-classpath,init,SPXgen,build-syntax-hack,del-rtrees-hack,spoofaximp.default.ctree"/>
     </project>
\ No newline at end of file

Modified: spoofax-contrib/Lawoco/editor/Lawoco-Builders.esv
==============================================================================
--- spoofax-contrib/Lawoco/editor/Lawoco-Builders.esv	Mon May  2 13:45:29 2011	(r22723)
+++ spoofax-contrib/Lawoco/editor/Lawoco-Builders.esv	Mon May  2 14:49:29 2011	(r22724)
@@ -17,6 +17,7 @@
   observer : editor-analyze                                                                                   
                                                                                                               
   builder  : "Generate Java code (for selection)"   = generate-java (openeditor) (realtime)                   
+  builder  : "Generate XML (for selection)"         = generate-xml (openeditor) (realtime)                   
   builder  : "Show abstract syntax (for selection)" = generate-aterm (openeditor) (realtime) (meta) (source)  
                                                                                                               
 

Modified: spoofax-contrib/Lawoco/lib/analysis-library.str
==============================================================================
--- spoofax-contrib/Lawoco/lib/analysis-library.str	Mon May  2 13:45:29 2011	(r22723)
+++ spoofax-contrib/Lawoco/lib/analysis-library.str	Mon May  2 14:49:29 2011	(r22724)
@@ -237,6 +237,9 @@
   index-lookup:
     x{[namespace | path]} -> <index-lookup(id |<index-namespace-unwrap> namespace, path)>
 
+  index-lookup-all:
+    x{[namespace | path]} -> <index-lookup-all(id |<index-namespace-unwrap> namespace, path)>
+
   index-lookup(is-adjust-lookup-enabled |namespace, path):
     x -> def
     where
@@ -247,6 +250,19 @@
       [_ | path'] := path;
       def         := <index-lookup(is-adjust-lookup-enabled |namespace, path')> x
 
+  index-lookup-all(is-adjust-lookup-enabled |namespace, path):
+    x -> defs'
+    where
+      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path)>;
+      defs       := <index-select-all(|namespace, path, x)>;
+      // TODO: optimize: try not to call do-adjust-index-lookup from here
+      if [_ | path'] := path then
+        defs2 := <index-lookup-all(is-adjust-lookup-enabled |namespace, path')> x;
+        defs' := <conc> (defs, defs2)
+      else
+        defs' := defs
+      end
+
   index-lookup-outermost:
     x{[namespace | path]} -> <index-lookup-outermost(id |<index-namespace-unwrap> namespace, path)>
 
@@ -336,6 +352,13 @@
       where(
         ?Def([_, <SRTS-EXT-eq-ignore-annos(|use)> | _])
       )
+    )
+
+  index-select-all(|namespace, path, use) =
+    filter(
+      where(
+        ?Def([_, <SRTS-EXT-eq-ignore-annos(|use)> | _])
+      )
     )
   
   do-adjusted-index-path(|namespace, path, def) =

Modified: spoofax-contrib/Lawoco/lib/spoofaxlang.jar
==============================================================================
Binary file (source and/or target). No diff available.

Modified: spoofax-contrib/Lawoco/syntax/Lawoco.spx
==============================================================================
--- spoofax-contrib/Lawoco/syntax/Lawoco.spx	Mon May  2 13:45:29 2011	(r22723)
+++ spoofax-contrib/Lawoco/syntax/Lawoco.spx	Mon May  2 14:49:29 2011	(r22724)
@@ -7,15 +7,21 @@
   
     "module" Module@=ID Definition*     -> Start {"Module", scope(Entity, Module)}
     "entity" Entity@=ID "{" Member* "}" -> Definition {"Entity", scope(Property, Function)}
-    Entity at ID Property@=ID              -> Member {"Property"}
+    Type Property@=ID                   -> Member {"Property"}
+    Entity at ID                           -> Type {"Type"}
+    "date"                              -> Type {"DateType", prefer}
+    "string"                            -> Type {"StringType", prefer}
+    "int"                               -> Type {"IntType", prefer}
+
+    "package" Package@=ID "{" Definition* "}" -> Definition {"Package", scope(Entity)}
 
     Function@=ID "(" { Param "," }* ")" Stm -> Member {"Function", scope(Var)}
-    Var@=ID ":" Entity at ID           -> Param {"Param"}
+    Var@=ID ":" Type                        -> Param {"Param"}
     
-    Function at ID "(" {Exp ","}* ")"      -> Exp {"Call"}        %% or, could be an Entity 
-    "var" Var@=ID ":" Entity at ID         -> Stm {"VarDecl"}
-    "var" Var@=ID ":" Entity at ID "=" Exp -> Stm {"VarDeclInit"}
-    Var at ID "=" Exp                      -> Stm {"Assign"}
-    Var at ID                              -> Exp {"Var"}         %% or, could be a Property!
-    Exp "." Property at ID                 -> Exp {"PropAccess"}
-    "{" Stm* "}"                        -> Stm {"Block", scope(Var)}   
\ No newline at end of file
+    Function at ID "(" {Exp ","}* ")" -> Exp {"Call"}
+    "var" Var@=ID ":" Type         -> Stm {"VarDecl"}
+    "var" Var@=ID ":" Type "=" Exp -> Stm {"VarDeclInit"}
+    Var at ID "=" Exp                 -> Stm {"Assign"}
+    Var at ID                         -> Exp {"Var"}
+    Exp "." Property at ID            -> Exp {"PropAccess"}
+    "{" Stm* "}"                   -> Stm {"Block", scope(Var)}   
\ No newline at end of file

Modified: spoofax-contrib/Lawoco/test/example.lawo
==============================================================================
--- spoofax-contrib/Lawoco/test/example.lawo	Mon May  2 13:45:29 2011	(r22723)
+++ spoofax-contrib/Lawoco/test/example.lawo	Mon May  2 14:49:29 2011	(r22724)
@@ -10,4 +10,7 @@
 entity Car {
   string make
   string mode
-}
\ No newline at end of file
+}
+
+entity Duplicate {}
+entity Duplicate {}
\ No newline at end of file

Modified: spoofax-contrib/Lawoco/trans/analyze.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/analyze.str	Mon May  2 13:45:29 2011	(r22723)
+++ spoofax-contrib/Lawoco/trans/analyze.str	Mon May  2 14:49:29 2011	(r22724)
@@ -1,7 +1,8 @@
 module analyze
 
 imports
-  include/Lawoco
+  .shadowdir/_Default/Lawoco-signature
+  .shadowdir/_Default/Lawoco
   analysis-library
   types
   lib/analysis-library

Modified: spoofax-contrib/Lawoco/trans/check.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/check.str	Mon May  2 13:45:29 2011	(r22723)
+++ spoofax-contrib/Lawoco/trans/check.str	Mon May  2 14:49:29 2011	(r22724)
@@ -2,11 +2,11 @@
 
 imports
   libstratego-lib
-  include/Lawoco
+  .shadowdir/_Default/Lawoco-signature
+  .shadowdir/_Default/Lawoco
   lib/editor-common.generated
   analysis-library
   types
-  .shadowdir/Globals/signatures
 
 rules
 
@@ -27,12 +27,20 @@
     where
       <gt> (<origin-offset> def', <origin-offset> x)
   
+  /*
   constraint-error:
     def -> (def, $[Duplicate definition])
     where
       def-child  := <nam-get-definition-key> def;
       def'       := <index-get-term> <index-lookup-outermost> def-child;
       not(<origin-equal(|def)> def')
+  */
+  
+  constraint-error:
+    Entity(x, _) -> (x, $[Duplicate entity definition])
+    where
+      all-xs := <index-lookup-all> x;
+      <gt> (<length> (all-xs), 1)
   
   is-ordered-namespace:
     Var() -> Var()

Copied and modified: spoofax-contrib/Lawoco/trans/generate-java.str (from r22710, spoofax-contrib/Lawoco/trans/generate.str)
==============================================================================
--- spoofax-contrib/Lawoco/trans/generate.str	Mon May  2 08:00:15 2011	(r22710, copy source)
+++ spoofax-contrib/Lawoco/trans/generate-java.str	Mon May  2 14:49:29 2011	(r22724)
@@ -1,10 +1,10 @@
-module generate
+module generate-java
 
 imports
   libstratego-lib
   libstratego-gpp
   libstratego-aterm
-  include/Lawoco
+  .shadowdir/_Default/Lawoco-signature
   lib/editor-common.generated
 
 rules
@@ -28,20 +28,31 @@
       p'* := <to-java> p*
 
   to-java:
-    Property(x, Type(t)) -> $[
-      private [t] [x];
+    Property(t, x) -> $[
+      private [t'] [x];
       
-      public [t] get_[x] {
+      public [t'] get_[x] {
           return [x];
       }
       
-      public void set_[x] ([t] [x]) {
+      public void set_[x] ([t'] [x]) {
           this.[x] = [x];    
       }
   ]
+  with
+    t' := <to-java> t
   
   to-java:
     Type(t) -> t
 
   to-java:
+    StringType() -> "String"
+
+  to-java:
+    IntType() -> "String"
+
+  to-java:
+    DateType() -> "java.util.Date"
+
+  to-java:
     t* -> <map(to-java)> t*

Added: spoofax-contrib/Lawoco/trans/generate-xml.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/Lawoco/trans/generate-xml.str	Mon May  2 14:49:29 2011	(r22724)
@@ -0,0 +1,23 @@
+module generate-xml
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  .shadowdir/_Default/Lawoco-signature
+  lib/editor-common.generated
+
+rules
+  
+  // TODO: fix xml transformation
+
+  to-xml:
+    x#([ys]) ->
+    $[ 
+      <[x']>
+        [ys']
+      </[x']>
+    ]
+    with debug;
+      x'  := <write-to-string> x;
+      ys' := <map(to-xml)> ys

Modified: spoofax-contrib/Lawoco/trans/lawoco.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/lawoco.str	Mon May  2 13:45:29 2011	(r22723)
+++ spoofax-contrib/Lawoco/trans/lawoco.str	Mon May  2 14:49:29 2011	(r22724)
@@ -8,7 +8,8 @@
   lib/-
   analyze
   check
-  generate
+  generate-java
+  generate-xml
   analyze
 
 rules // Main editor interface (defined by editor/NamingExperiment-Builders and -References.esv)
@@ -30,6 +31,12 @@
     with
       filename := <guarantee-extension(|"java")> path;
       result   := <to-java> selected
+
+  generate-xml:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"xml")> path;
+      result   := <to-xml> selected
   
   // Prints the abstract syntax ATerm of a selection.
   generate-aterm:

Modified: spoofax-contrib/Lawoco/trans/types.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/types.str	Mon May  2 13:45:29 2011	(r22723)
+++ spoofax-contrib/Lawoco/trans/types.str	Mon May  2 14:49:29 2011	(r22724)
@@ -1,8 +1,8 @@
 module types
 
 imports
-  include/Lawoco
   analysis-library
+  .shadowdir/_Default/Lawoco-signature
 
 signature constructors
 

From M.A.Akhter at student.tudelft.nl  Mon May  2 17:18:01 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Mon, 02 May 2011 15:18:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22725 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans: .
	codegen/esv codegen/sdf codegen/str utils
Message-ID: <20110502151801.457E3108C01C@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Mon May  2 15:18:01 2011
New Revision: 22725
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22725&sc=1

Log:
* Parsing + ESV loading is working now. 
* Directory structure has been changed a bit to make the def file work
* Added a Hack for generating files in Lawoco directory.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Mon May  2 14:49:29 2011	(r22724)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Mon May  2 15:18:01 2011	(r22725)
@@ -12,6 +12,7 @@
 	include/SpoofaxLang
 imports 
 	codegen/main 
+	codegen/generate
 	context/scope-tree 
 	context/signature
 imports

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Mon May  2 14:49:29 2011	(r22724)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Mon May  2 15:18:01 2011	(r22725)
@@ -67,7 +67,7 @@
  			<debug-compiler>$[ Codegen | SDF | Generating main for the following package : [<pp-aterm> package-qname].]
  		where
 			sdf-string := 
-	    $[module [relative-autogen-path]/[<get-main-file-name>package-qname]
+	    $[module [<get-main-file-name>package-qname]
 	         imports
 		      	[<map(pp-sdf-import)>module-qname*]   									 
 	     ]

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Mon May  2 14:49:29 2011	(r22724)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Mon May  2 15:18:01 2011	(r22725)
@@ -83,7 +83,7 @@
  		where 
  			<debug-compiler> $[CodeGen | STR | generate-str-main from package-name: [<pp-aterm>package-qname]]	  
  		where
- 			 main-str-module-name := <concat-strings>[relative-autogen-path, "/", <get-main-file-name>package-qname] 
+ 			 main-str-module-name :=  <get-main-file-name>package-qname 
 			;str-aterm := Module( main-str-module-name  ,[Imports(<map(to-str-import);flatten-list>module-qname*)])
 			;str-string := <pp-stratego-string> <parenthesize-Stratego>  str-aterm
 		where

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Mon May  2 14:49:29 2011	(r22724)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Mon May  2 15:18:01 2011	(r22725)
@@ -12,7 +12,8 @@
 	spoofaxlang
 	
 rules 
-	default_package_name = !"_default"
+	//default_package_name = !"_default"
+	default_package_name = !"Lawoco" // HACK : Temporarily added for LWC submission
 	
 rules 
 	initialize-configuration = 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str	Mon May  2 14:49:29 2011	(r22724)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str	Mon May  2 15:18:01 2011	(r22725)
@@ -42,7 +42,7 @@
 	get-main-file-name =
 		?QName(qname-parts*);
 		<convert-qname(|"-")>QName(qname-parts*) => qname-as-string;
-		<concat-strings>[qname-as-string,"-main"]
+		<concat-strings>[qname-as-string]
 	
 	get-signature-file-name = 
 		?sdf-module-name;
@@ -53,15 +53,18 @@
 		?(dir-path, QName(qname-parts*))
 		 ;artifact-main-file-name    := <qname-to-string>QName(qname-parts*)
 		 ;relative-path := <qname-to-path> QName(qname-parts*)
-		 ;<concat-strings> [dir-path, "/" , relative-path, "/" ,artifact-main-file-name, ".main" , ".", extension]
-		
+		 // restructuring the autogenerated artifacts structure
+		 // ;<concat-strings> [dir-path, "/" , relative-path, "/" ,artifact-main-file-name, ".main" , ".", extension]
+		 ;<concat-strings> [dir-path, "/" ,artifact-main-file-name, ".main" , ".", extension]
 		
 	 		
 	get-main-output-path(|extension)=
-			?(dir-path, QName(qname-parts*))
+		?(dir-path, QName(qname-parts*))
 		 ;artifact-main-file-name    := <get-main-file-name>QName(qname-parts*)
 		 ;relative-path := <qname-to-path> QName(qname-parts*)
-		 ;<concat-strings> [dir-path, "/" , relative-path, "/" ,artifact-main-file-name, "." , extension]
+		 // restructuring the autogenerated artifacts structure 
+		 // ;<concat-strings> [dir-path, "/" , relative-path, "/" ,artifact-main-file-name, "." , extension]
+		 ;<concat-strings> [dir-path, "/" ,artifact-main-file-name, "." , extension]  
 	
 	
 	append-if-not-empty(|string-to-append, seperator) : operand ->result

From M.A.Akhter at student.tudelft.nl  Mon May  2 17:41:10 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Mon, 02 May 2011 15:41:10 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22726 - in
	spoofax-contrib/Lawoco: . trans
Message-ID: <20110502154110.B955C108C02E@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Mon May  2 15:41:10 2011
New Revision: 22726
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22726&sc=1

Log:
* Builder + SDF parsing + show Aterm is working for the example provided. 
* Cleaned up the build-script . Removed ref to the temp build script
* Adjusted the Imports stmt* for the new codegen directory structure.

Modified:
   spoofax-contrib/Lawoco/build.main.xml
   spoofax-contrib/Lawoco/trans/analyze.str
   spoofax-contrib/Lawoco/trans/check.str
   spoofax-contrib/Lawoco/trans/generate-java.str
   spoofax-contrib/Lawoco/trans/generate-xml.str
   spoofax-contrib/Lawoco/trans/lawoco.str
   spoofax-contrib/Lawoco/trans/types.str

Modified: spoofax-contrib/Lawoco/build.main.xml
==============================================================================
--- spoofax-contrib/Lawoco/build.main.xml	Mon May  2 15:18:01 2011	(r22725)
+++ spoofax-contrib/Lawoco/build.main.xml	Mon May  2 15:41:10 2011	(r22726)
@@ -2,15 +2,10 @@
 
 <project name="Lawoco" default="all">
         
-        <!-- Key input modules -->
+	 <!-- Key input modules -->
 		<property name="sdfmodule" value="Lawoco"/> <!-- output sdf module name -->
-		<property name="sdf.main.module" value="_default-main"/> <!-- generated main sdf module name -->
+		<property name="default.generated.signatures" value="${sdfmodule}-signatures"/>
 		
-	<!-- 
-		<property name="sdfmodule" value="Lawoco"/>
-		
-	-->
-		<property name="default.generated.signatures" value="_default-signatures"/>
 		
         <property name="metasdfmodule" value="Stratego-Lawoco"/>
         <property name="esvmodule" value="Lawoco"/>
@@ -19,7 +14,7 @@
         <!-- Project directories -->
         <property name="trans" location="trans"/>
         <property name="src-gen" location="editor/java"/>
-        <property name="syntax" location=".shadowdir/_Default"/>
+        <property name="syntax" location=".shadowdir/"/>
         <property name="include" location="include"/>
         <property name="lib" location="lib"/>
         <property name="build" location="bin"/>
@@ -59,13 +54,19 @@
 	      	  <arg value="-i"/>
 	      	  <arg value="${basedir}"/>
 	      	</java>
+	      	<antcall target = "referesh.autogen.artifacts"/>
 	      </target>
 	
+			<target name = "referesh.autogen.artifacts" if="eclipse.running">
+				 <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+				 <eclipse.refreshLocal resource="${projectdir}/.shadowdir" depth="infinite"/>
+			</target>	
+	
 	      <target name="build-syntax-hack">
           <java classname="run" failonerror="true">
               <arg value="org.strategoxt.tools.main-pack-sdf"/>
               <arg value="-i"/>
-              <arg value="${basedir}/.shadowdir/_Default/_default-main.sdf"/>
+              <arg value="${basedir}/.shadowdir/${sdfmodule}.sdf"/>
               <arg value="-o"/>
               <arg value="${include}/${sdfmodule}.def"/>
               <arg value="-I"/>
@@ -104,5 +105,15 @@
 	      </target>
     
         <!-- Main target -->
-        <target name="all" depends="check-classpath,init,SPXgen,build-syntax-hack,del-rtrees-hack,spoofaximp.default.ctree"/>
+        <!-- 
+        	<target name="skip-rtg">
+				<antcall target="sdf2table"/>
+		    	<echo file="${include}/${sdfmodule}.rtg" message="regular tree grammar start Start productions Start -> &lt;nil&gt;()"/>
+	        	<echo file="${include}/${sdfmodule}.str" message="module include/${sdfmodule} imports include/${default.generated.signatures}"/>
+			</target>
+	    	<target name="all" depends="check-classpath,init,SPXgen,sdf2table,skip-rtg,spoofaximp.default.ctree"/>
+	    -->
+	
+		<target name="all" depends="check-classpath,init,SPXgen,build-syntax-hack,del-rtrees-hack,spoofaximp.default.ctree"/>
+	  	
     </project>
\ No newline at end of file

Modified: spoofax-contrib/Lawoco/trans/analyze.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/analyze.str	Mon May  2 15:18:01 2011	(r22725)
+++ spoofax-contrib/Lawoco/trans/analyze.str	Mon May  2 15:41:10 2011	(r22726)
@@ -1,8 +1,8 @@
 module analyze
 
 imports
-  .shadowdir/_Default/Lawoco-signature
-  .shadowdir/_Default/Lawoco
+  .shadowdir/Lawoco/Lawoco-signature
+  .shadowdir/Lawoco/Lawoco
   analysis-library
   types
   lib/analysis-library

Modified: spoofax-contrib/Lawoco/trans/check.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/check.str	Mon May  2 15:18:01 2011	(r22725)
+++ spoofax-contrib/Lawoco/trans/check.str	Mon May  2 15:41:10 2011	(r22726)
@@ -2,8 +2,8 @@
 
 imports
   libstratego-lib
-  .shadowdir/_Default/Lawoco-signature
-  .shadowdir/_Default/Lawoco
+  .shadowdir/Lawoco/Lawoco-signature
+  .shadowdir/Lawoco/Lawoco
   lib/editor-common.generated
   analysis-library
   types

Modified: spoofax-contrib/Lawoco/trans/generate-java.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/generate-java.str	Mon May  2 15:18:01 2011	(r22725)
+++ spoofax-contrib/Lawoco/trans/generate-java.str	Mon May  2 15:41:10 2011	(r22726)
@@ -4,7 +4,7 @@
   libstratego-lib
   libstratego-gpp
   libstratego-aterm
-  .shadowdir/_Default/Lawoco-signature
+  .shadowdir/Lawoco/Lawoco-signature
   lib/editor-common.generated
 
 rules

Modified: spoofax-contrib/Lawoco/trans/generate-xml.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/generate-xml.str	Mon May  2 15:18:01 2011	(r22725)
+++ spoofax-contrib/Lawoco/trans/generate-xml.str	Mon May  2 15:41:10 2011	(r22726)
@@ -4,7 +4,7 @@
   libstratego-lib
   libstratego-gpp
   libstratego-aterm
-  .shadowdir/_Default/Lawoco-signature
+  .shadowdir/Lawoco/Lawoco-signature
   lib/editor-common.generated
 
 rules

Modified: spoofax-contrib/Lawoco/trans/lawoco.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/lawoco.str	Mon May  2 15:18:01 2011	(r22725)
+++ spoofax-contrib/Lawoco/trans/lawoco.str	Mon May  2 15:41:10 2011	(r22726)
@@ -4,7 +4,7 @@
   libstratego-lib
   libstratego-gpp
   libstratego-aterm
-  .shadowdir/_Default/Lawoco
+  .shadowdir/Lawoco/Lawoco
   lib/-
   analyze
   check

Modified: spoofax-contrib/Lawoco/trans/types.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/types.str	Mon May  2 15:18:01 2011	(r22725)
+++ spoofax-contrib/Lawoco/trans/types.str	Mon May  2 15:41:10 2011	(r22726)
@@ -2,7 +2,7 @@
 
 imports
   analysis-library
-  .shadowdir/_Default/Lawoco-signature
+  .shadowdir/Lawoco/Lawoco-signature
 
 signature constructors
 

From M.A.Akhter at student.tudelft.nl  Mon May  2 17:43:55 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Mon, 02 May 2011 15:43:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22727 -
	spoofax-contrib/Lawoco
Message-ID: <20110502154355.BF61C7F8028@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Mon May  2 15:43:55 2011
New Revision: 22727
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22727&sc=1

Log:
* Removing build.generated.lawoco - a temp build file for testing. It is no longer needed.

Deleted:
   spoofax-contrib/Lawoco/build.generated.lawoco.xml

From seba at informatik.uni-marburg.de  Tue May  3 10:39:08 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Tue, 03 May 2011 08:39:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22728 - in
	sugarj/trunk/case-studies/xml: . schema
Message-ID: <20110503083908.3E2172B8022@mx2.tudelft.nl>

Author: SebastianErdweg
Date: Tue May  3 08:39:07 2011
New Revision: 22728
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22728&sc=1

Log:
use CSS for coloring XML documents

Added:
   sugarj/trunk/case-studies/xml/CSS.sugj
   sugarj/trunk/case-studies/xml/CSSXmlEditor.sugj
   sugarj/trunk/case-studies/xml/TestCSS.sugj
      - copied, changed from r22675, sugarj/trunk/case-studies/xml/Test.sugj
Modified:
   sugarj/trunk/case-studies/xml/XmlEditor.sugj
   sugarj/trunk/case-studies/xml/XmlJavaSyntax.sugj
   sugarj/trunk/case-studies/xml/schema/AsDesugaring.sugj
   sugarj/trunk/case-studies/xml/schema/XmlSchemaCompiled.sugj

Added: sugarj/trunk/case-studies/xml/CSS.sugj
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/trunk/case-studies/xml/CSS.sugj	Tue May  3 08:39:07 2011	(r22728)
@@ -0,0 +1,88 @@
+package xml;
+
+import org.sugarj.languages.EditorServices;
+import concretesyntax.EditorServices;
+
+public sugar CSS {
+  context-free syntax
+    AnnoOrSugarMod* "css" JavaId CSSBody -> ToplevelDeclaration{cons("CSSDec")}
+    "{" CSSStm* "}" -> CSSBody {cons("CSSBody")}
+    
+  context-free syntax
+    Selector "{" {CSSRule ";"}* Semicolon? "}" -> CSSStm {cons("CSSStm")}
+    EditorServiceNode -> Selector {cons("Selector")}
+  
+    "color" ":" CSSColor -> CSSRule {cons("ColorRule")}
+    "background-color" ":" CSSColor -> CSSRule {cons("BackgroundColorRule")}
+    "environment-color" ":" CSSColor -> CSSRule {cons("ColorAllRule")}
+    "environment-background-color" ":" CSSColor -> CSSRule {cons("BackgroundColorAllRule")}
+    "outlining" -> CSSRule {cons("OutliningRule")}
+    "folding" -> CSSRule {cons("FoldingRule")}
+    
+    EditorServiceColor -> CSSColor
+    EditorServiceAttributeId -> CSSColor {cons("AttributeRef")}
+
+
+  lexical syntax
+    ";" -> Semicolon
+  
+  desugarings
+    css-to-editor-services
+  
+  rules
+    css-to-editor-services :
+      CSSDec(mods, n, CSSBody(stms))
+      ->
+      EditorServicesDec(EditorServicesDecHead(mods, n), EditorServicesBody(<mapconcat(compile-css)> stms))
+    
+    compile-css :
+      CSSStm(Selector(node), rs, _) -> <map(compile-css-rule(|node))> rs
+
+    
+    compile-css-rule(|node) :
+      ColorRule(color)
+      ->
+      |[ colorer
+           ~node : ~attr
+       ]|
+      where <?AttributeRef(_) < id + !Attribute(color, NoColor, NORMAL)> color => attr
+    
+    compile-css-rule(|node) :
+      BackgroundColorRule(color)
+      ->
+      |[ colorer
+           ~node : ~attr
+       ]|
+      where <?AttributeRef(_) < id + !Attribute(ColorDefault, color, NORMAL)> color => attr
+    
+    compile-css-rule(|node) :
+      ColorAllRule(color)
+      ->
+      |[ colorer
+           environment ~node : ~attr
+       ]|
+      where <?AttributeRef(_) < id + !Attribute(color, NoColor, NORMAL)> color => attr
+    
+    compile-css-rule(|node) :
+      BackgroundColorAllRule(color)
+      ->
+      |[ colorer
+           environment ~node : ~attr
+       ]|
+      where <?AttributeRef(_) < id + !Attribute(ColorDefault, color, NORMAL)> color => attr
+     
+    compile-css-rule(|node) :
+      FoldingRule
+      ->
+      |[ folding
+           ~node
+       ]|
+    
+    compile-css-rule(|node) :
+      OutliningRule
+      ->
+      |[ outliner
+           ~node
+       ]|
+
+}
\ No newline at end of file

Added: sugarj/trunk/case-studies/xml/CSSXmlEditor.sugj
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/trunk/case-studies/xml/CSSXmlEditor.sugj	Tue May  3 08:39:07 2011	(r22728)
@@ -0,0 +1,17 @@
+package xml;
+
+import editor.Colors;
+
+import xml.CSS;
+
+public css CSSXmlEditor {
+  Element  { color : darkblue; folding; outlining }
+  ElemName { environment-color : blue }
+  AttrName { environment-color : darkorange }
+  
+  AttValue { color : darkred }
+  _.CharDataPart { color : darkred }
+  FooDoubleQuotedText { color : darkred }
+  
+  CharData { environment-color : black }
+}
\ No newline at end of file

Copied and modified: sugarj/trunk/case-studies/xml/TestCSS.sugj (from r22675, sugarj/trunk/case-studies/xml/Test.sugj)
==============================================================================
--- sugarj/trunk/case-studies/xml/Test.sugj	Fri Apr 29 11:44:32 2011	(r22675, copy source)
+++ sugarj/trunk/case-studies/xml/TestCSS.sugj	Tue May  3 08:39:07 2011	(r22728)
@@ -9,12 +9,12 @@
 
 import xml.AsSax;
 import xml.XmlJavaSyntax;
-import xml.XmlEditor;
+import xml.CSSXmlEditor;
 
 /*
  * code for printing based on http://www.informit.com/articles/article.aspx?p=26351&seqNum=5
  */
-public class Test extends DefaultHandler {
+public class TestCSS extends DefaultHandler {
   public static void main(String[] args) throws SAXException {
     ContentHandler ch = new Test();
     

Modified: sugarj/trunk/case-studies/xml/XmlEditor.sugj
==============================================================================
--- sugarj/trunk/case-studies/xml/XmlEditor.sugj	Mon May  2 15:43:55 2011	(r22727)
+++ sugarj/trunk/case-studies/xml/XmlEditor.sugj	Tue May  3 08:39:07 2011	(r22728)
@@ -5,7 +5,7 @@
 
 public editor services XmlEditor {
   colorer XmlHighlighting
-    Element : xmlParenthesis
+    Element : darkblue
      
     environment ElemName : blue
     environment AttrName : darkorange
@@ -15,13 +15,10 @@
     FooDoubleQuotedText : darkred
     
     environment CharData : black
-    environment CharDataSection : black
-    
-    xmlParenthesis = 0 0 200 bold
 
   folding XmlFolding
-    Element.Element
+    Element
     
   outliner XmlOutliner
-    Element._
+    Element
 }
\ No newline at end of file

Modified: sugarj/trunk/case-studies/xml/XmlJavaSyntax.sugj
==============================================================================
--- sugarj/trunk/case-studies/xml/XmlJavaSyntax.sugj	Mon May  2 15:43:55 2011	(r22727)
+++ sugarj/trunk/case-studies/xml/XmlJavaSyntax.sugj	Tue May  3 08:39:07 2011	(r22728)
@@ -22,9 +22,9 @@
     "<{" JavaStm  "}/>" -> Content {cons("FromMetaStm")}
     
   syntax
-    "{" <LAYOUT?-CF> <JavaExpr-CF> <LAYOUT?-CF> "}" -> FooDoubleQuotedText {cons("FromMetaExpr")}
+    "{" <LAYOUT?-CF> <JavaExpr-CF> <LAYOUT?-CF> "}" -> FooDoubleQuotedText {cons("FromMetaExpr"), prefer}
     "{" <LAYOUT?-CF> <JavaExpr-CF> <LAYOUT?-CF> "::" <LAYOUT?-CF> "cdata" <LAYOUT?-CF> "}" -> <Content-CF> {cons("TextFromMetaExpr")}
-    
+  
   signature constructors
     TextFromMetaExpr : a -> a
 

Modified: sugarj/trunk/case-studies/xml/schema/AsDesugaring.sugj
==============================================================================
--- sugarj/trunk/case-studies/xml/schema/AsDesugaring.sugj	Mon May  2 15:43:55 2011	(r22727)
+++ sugarj/trunk/case-studies/xml/schema/AsDesugaring.sugj	Tue May  3 08:39:07 2011	(r22728)
@@ -11,7 +11,7 @@
 import xml.schema.SharedStrategies;
 import xml.schema.XmlSchemaJavaSyntax;
 
-
+ 
 public sugar AsDesugaring {
 
   // validating XML schemas
@@ -234,6 +234,10 @@
       	   (is-error <+ !xs)>
       	  x
       	\
+        +
+        \ [] ->
+          [([], <concat-strings> ["missing element ", string~ncname, " of namespace ", string~namespace])]
+        \
       ]|
       where
 	     <xml-attr-value2string> attval1 => ncname ; 
@@ -255,6 +259,10 @@
 	         (is-error <+ !xs)> 
 	        x
 	      \
+        +
+        \ [] ->
+          [([], <concat-strings> ["missing attribute ", string~ncname])]
+        \
 	  ]|
       where
 	     <xml-attr-value2string> attval1 => ncname ; 
@@ -290,7 +298,9 @@
           strategy~s; ?serr;
           if is-error
             then 
-              !x; strategy~(<any-error-free-strategy> ss) <+ !serr
+              !x; 
+              strategy~(<any-error-free-strategy> ss);
+              if is-error then !(serr, <id>); conc else id end
             else id
           end
          }

Modified: sugarj/trunk/case-studies/xml/schema/XmlSchemaCompiled.sugj
==============================================================================
--- sugarj/trunk/case-studies/xml/schema/XmlSchemaCompiled.sugj	Mon May  2 15:43:55 2011	(r22727)
+++ sugarj/trunk/case-studies/xml/schema/XmlSchemaCompiled.sugj	Tue May  3 08:39:07 2011	(r22728)
@@ -8,1312 +8,4 @@
 
 public sugar XmlSchemaCompiled {
 
-rules
-
-  xml-validate =
-    ?Element(
-       ElemName(
-         QName(
-           Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-         , name1
-         )
-       )
-     , attributes
-     , contents
-     , ElemName(
-         QName(
-           Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-         , name2
-         )
-       )
-     )
-    ; ({err:
-         \ doc at Element(
-                 ElemName(
-                   QName(
-                     Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                   , "schema"
-                   )
-                 )
-               , attributes
-               , contents
-               , ElemName(
-                   QName(
-                     Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                   , "schema"
-                   )
-                 )
-               ) -> err
-           where <(validate-type-SchemaType
-                   <+ ![ ( doc
-                         , <concat-strings> [ "no type definition "
-                                            , "SchemaType"
-                                            , " for element "
-                                            , "schema"
-                                            , " found"
-                                            ]
-                         )
-                       ])> doc => err \
-       }
-       <+ ![ ( <id>
-             , <concat-strings> ["expected element: ", "schema", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-             )
-           ])
-
-
-rules
-
-  validate-type-SchemaType :
-    Element(name1, attrs, cs, name2) -> <conc> (err1, err2)
-    where <(\ [x|xs] -> <({err:
-                            \ att at Attribute(
-                                    AttrName(QName(None, "targetNamespace"))
-                                  , attval
-                                  ) -> err
-                              where <(validate-attval-type-string
-                                      <+ ![ ( att
-                                            , <concat-strings> [ "no type definition for "
-                                                               , "string"
-                                                               , " of attribute "
-                                                               , "targetNamespace"
-                                                               , " found"
-                                                               ]
-                                            )
-                                          ])> attval => err \
-                          }
-                          <+ ![ ( <id>
-                                , <concat-strings> ["expected attribute: ", "targetNamespace"]
-                                )
-                              ])
-                         ; (is-error <+ !xs)> x \
-            ; if is-error then
-                id
-              else
-                if ?[] then
-                  ![]
-                else
-                  is-a-list
-                  < map(!(<id>, "unexpected attribute"))
-                  + ![(<id>, "unexpected attribute")]
-                end
-                ; if is-error then id else id end
-              end)> attrs => err1
-          ; <(repeat-strategy(
-                {x, serr:
-                  ?x
-                  ; \ [x|xs] -> <({err:
-                                    \ doc at Element(
-                                            ElemName(
-                                              QName(
-                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                              , "element"
-                                              )
-                                            )
-                                          , attributes
-                                          , contents
-                                          , ElemName(
-                                              QName(
-                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                              , "element"
-                                              )
-                                            )
-                                          ) -> err
-                                      where <(validate-type-ElementType
-                                              <+ ![ ( doc
-                                                    , <concat-strings> [ "no type definition "
-                                                                       , "ElementType"
-                                                                       , " for element "
-                                                                       , "element"
-                                                                       , " found"
-                                                                       ]
-                                                    )
-                                                  ])> doc => err \
-                                  }
-                                  <+ ![ ( <id>
-                                        , <concat-strings> ["expected element: ", "element", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                        )
-                                      ])
-                                 ; (is-error <+ !xs)> x \
-                  ; ?serr
-                  ; if is-error then
-                      !x
-                      ; {x, serr:
-                          ?x
-                          ; \ [x|xs] -> <({err:
-                                            \ doc at Element(
-                                                    ElemName(
-                                                      QName(
-                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                      , "complexType"
-                                                      )
-                                                    )
-                                                  , attributes
-                                                  , contents
-                                                  , ElemName(
-                                                      QName(
-                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                      , "complexType"
-                                                      )
-                                                    )
-                                                  ) -> err
-                                              where <(validate-type-ComplexType
-                                                      <+ ![ ( doc
-                                                            , <concat-strings> [ "no type definition "
-                                                                               , "ComplexType"
-                                                                               , " for element "
-                                                                               , "complexType"
-                                                                               , " found"
-                                                                               ]
-                                                            )
-                                                          ])> doc => err \
-                                          }
-                                          <+ ![ ( <id>
-                                                , <concat-strings> ["expected element: ", "complexType", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                                )
-                                              ])
-                                         ; (is-error <+ !xs)> x \
-                          ; ?serr
-                          ; if is-error then
-                              !x
-                              ; {x, serr:
-                                  ?x
-                                  ; \ [x|xs] -> <({err:
-                                                    \ doc at Element(
-                                                            ElemName(
-                                                              QName(
-                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                              , "simpleType"
-                                                              )
-                                                            )
-                                                          , attributes
-                                                          , contents
-                                                          , ElemName(
-                                                              QName(
-                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                              , "simpleType"
-                                                              )
-                                                            )
-                                                          ) -> err
-                                                      where <(validate-type-SimpleType
-                                                              <+ ![ ( doc
-                                                                    , <concat-strings> [ "no type definition "
-                                                                                       , "SimpleType"
-                                                                                       , " for element "
-                                                                                       , "simpleType"
-                                                                                       , " found"
-                                                                                       ]
-                                                                    )
-                                                                  ])> doc => err \
-                                                  }
-                                                  <+ ![ ( <id>
-                                                        , <concat-strings> ["expected element: ", "simpleType", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                                        )
-                                                      ])
-                                                 ; (is-error <+ !xs)> x \
-                                  ; ?serr
-                                  ; if is-error then !x ; fail <+ !serr else id end
-                                }
-                              <+ !serr
-                            else
-                              id
-                            end
-                        }
-                      <+ !serr
-                    else
-                      id
-                    end
-                }
-              )
-              ; if is-error then
-                  id
-                else
-                  if ?[] then
-                    ![]
-                  else
-                    is-a-list
-                    < map(!(<id>, "unexpected element"))
-                    + ![(<id>, "unexpected element")]
-                  end
-                  ; if is-error then id else id end
-                end)> cs => err2
-
-
-rules
-
-  validate-type-ComplexType :
-    Element(name1, attrs, cs, name2) -> <conc> (err1, err2)
-    where <(\ [x|xs] -> <({err:
-                            \ att at Attribute(
-                                    AttrName(QName(None, "name"))
-                                  , attval
-                                  ) -> err
-                              where <(validate-attval-type-string
-                                      <+ ![ ( att
-                                            , <concat-strings> [ "no type definition for "
-                                                               , "string"
-                                                               , " of attribute "
-                                                               , "name"
-                                                               , " found"
-                                                               ]
-                                            )
-                                          ])> attval => err \
-                          }
-                          <+ ![ ( <id>
-                                , <concat-strings> ["expected attribute: ", "name"]
-                                )
-                              ])
-                         ; (is-error <+ !xs)> x \
-            ; if is-error then
-                id
-              else
-                if ?[] then
-                  ![]
-                else
-                  is-a-list
-                  < map(!(<id>, "unexpected attribute"))
-                  + ![(<id>, "unexpected attribute")]
-                end
-                ; if is-error then id else id end
-              end)> attrs => err1
-          ; <(({x, serr:
-                 ?x
-                 ; \ [x|xs] -> <({err:
-                                   \ doc at Element(
-                                           ElemName(
-                                             QName(
-                                               Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                             , "choice"
-                                             )
-                                           )
-                                         , attributes
-                                         , contents
-                                         , ElemName(
-                                             QName(
-                                               Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                             , "choice"
-                                             )
-                                           )
-                                         ) -> err
-                                     where <(validate-type-ComplexTypeNested
-                                             <+ ![ ( doc
-                                                   , <concat-strings> [ "no type definition "
-                                                                      , "ComplexTypeNested"
-                                                                      , " for element "
-                                                                      , "choice"
-                                                                      , " found"
-                                                                      ]
-                                                   )
-                                                 ])> doc => err \
-                                 }
-                                 <+ ![ ( <id>
-                                       , <concat-strings> ["expected element: ", "choice", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                       )
-                                     ])
-                                ; (is-error <+ !xs)> x \
-                 ; ?serr
-                 ; if is-error then
-                     !x
-                     ; {x, serr:
-                         ?x
-                         ; \ [x|xs] -> <({err:
-                                           \ doc at Element(
-                                                   ElemName(
-                                                     QName(
-                                                       Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                     , "choice"
-                                                     )
-                                                   )
-                                                 , attributes
-                                                 , contents
-                                                 , ElemName(
-                                                     QName(
-                                                       Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                     , "choice"
-                                                     )
-                                                   )
-                                                 ) -> err
-                                             where <(validate-type-ComplexTypeNestedMax
-                                                     <+ ![ ( doc
-                                                           , <concat-strings> [ "no type definition "
-                                                                              , "ComplexTypeNestedMax"
-                                                                              , " for element "
-                                                                              , "choice"
-                                                                              , " found"
-                                                                              ]
-                                                           )
-                                                         ])> doc => err \
-                                         }
-                                         <+ ![ ( <id>
-                                               , <concat-strings> ["expected element: ", "choice", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                               )
-                                             ])
-                                        ; (is-error <+ !xs)> x \
-                         ; ?serr
-                         ; if is-error then
-                             !x
-                             ; {x, serr:
-                                 ?x
-                                 ; \ [x|xs] -> <({err:
-                                                   \ doc at Element(
-                                                           ElemName(
-                                                             QName(
-                                                               Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                             , "sequence"
-                                                             )
-                                                           )
-                                                         , attributes
-                                                         , contents
-                                                         , ElemName(
-                                                             QName(
-                                                               Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                             , "sequence"
-                                                             )
-                                                           )
-                                                         ) -> err
-                                                     where <(validate-type-ComplexTypeNested
-                                                             <+ ![ ( doc
-                                                                   , <concat-strings> [ "no type definition "
-                                                                                      , "ComplexTypeNested"
-                                                                                      , " for element "
-                                                                                      , "sequence"
-                                                                                      , " found"
-                                                                                      ]
-                                                                   )
-                                                                 ])> doc => err \
-                                                 }
-                                                 <+ ![ ( <id>
-                                                       , <concat-strings> ["expected element: ", "sequence", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                                       )
-                                                     ])
-                                                ; (is-error <+ !xs)> x \
-                                 ; ?serr
-                                 ; if is-error then
-                                     !x
-                                     ; {x, serr:
-                                         ?x
-                                         ; \ [x|xs] -> <({err:
-                                                           \ doc at Element(
-                                                                   ElemName(
-                                                                     QName(
-                                                                       Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                                     , "sequence"
-                                                                     )
-                                                                   )
-                                                                 , attributes
-                                                                 , contents
-                                                                 , ElemName(
-                                                                     QName(
-                                                                       Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                                     , "sequence"
-                                                                     )
-                                                                   )
-                                                                 ) -> err
-                                                             where <(validate-type-ComplexTypeNestedMax
-                                                                     <+ ![ ( doc
-                                                                           , <concat-strings> [ "no type definition "
-                                                                                              , "ComplexTypeNestedMax"
-                                                                                              , " for element "
-                                                                                              , "sequence"
-                                                                                              , " found"
-                                                                                              ]
-                                                                           )
-                                                                         ])> doc => err \
-                                                         }
-                                                         <+ ![ ( <id>
-                                                               , <concat-strings> ["expected element: ", "sequence", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                                               )
-                                                             ])
-                                                        ; (is-error <+ !xs)> x \
-                                         ; ?serr
-                                         ; if is-error then !x ; fail <+ !serr else id end
-                                       }
-                                     <+ !serr
-                                   else
-                                     id
-                                   end
-                               }
-                             <+ !serr
-                           else
-                             id
-                           end
-                       }
-                     <+ !serr
-                   else
-                     id
-                   end
-               }
-               ; if is-error then
-                   id
-                 else
-                   repeat-strategy(
-                     \ [x|xs] -> <({err:
-                                     \ doc at Element(
-                                             ElemName(
-                                               QName(
-                                                 Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                               , "attribute"
-                                               )
-                                             )
-                                           , attributes
-                                           , contents
-                                           , ElemName(
-                                               QName(
-                                                 Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                               , "attribute"
-                                               )
-                                             )
-                                           ) -> err
-                                       where <(validate-type-AttributeType
-                                               <+ ![ ( doc
-                                                     , <concat-strings> [ "no type definition "
-                                                                        , "AttributeType"
-                                                                        , " for element "
-                                                                        , "attribute"
-                                                                        , " found"
-                                                                        ]
-                                                     )
-                                                   ])> doc => err \
-                                   }
-                                   <+ ![ ( <id>
-                                         , <concat-strings> ["expected element: ", "attribute", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                         )
-                                       ])
-                                  ; (is-error <+ !xs)> x \
-                     ; if is-error then id else id end
-                   )
-                   ; if is-error then id else id end
-                 end)
-              ; if is-error then
-                  id
-                else
-                  if ?[] then
-                    ![]
-                  else
-                    is-a-list
-                    < map(!(<id>, "unexpected element"))
-                    + ![(<id>, "unexpected element")]
-                  end
-                  ; if is-error then id else id end
-                end)> cs => err2
-
-
-rules
-
-  validate-type-ComplexTypeNested :
-    Element(name1, attrs, cs, name2) -> <conc> (err1, err2)
-    where <(if ?[] then
-              ![]
-            else
-              is-a-list
-              < map(!(<id>, "unexpected attribute"))
-              + ![(<id>, "unexpected attribute")]
-            end
-            ; if is-error then id else id end)> attrs => err1
-          ; <(repeat-strategy(
-                {x, serr:
-                  ?x
-                  ; \ [x|xs] -> <({err:
-                                    \ doc at Element(
-                                            ElemName(
-                                              QName(
-                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                              , "choice"
-                                              )
-                                            )
-                                          , attributes
-                                          , contents
-                                          , ElemName(
-                                              QName(
-                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                              , "choice"
-                                              )
-                                            )
-                                          ) -> err
-                                      where <(validate-type-ComplexTypeNested
-                                              <+ ![ ( doc
-                                                    , <concat-strings> [ "no type definition "
-                                                                       , "ComplexTypeNested"
-                                                                       , " for element "
-                                                                       , "choice"
-                                                                       , " found"
-                                                                       ]
-                                                    )
-                                                  ])> doc => err \
-                                  }
-                                  <+ ![ ( <id>
-                                        , <concat-strings> ["expected element: ", "choice", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                        )
-                                      ])
-                                 ; (is-error <+ !xs)> x \
-                  ; ?serr
-                  ; if is-error then
-                      !x
-                      ; {x, serr:
-                          ?x
-                          ; \ [x|xs] -> <({err:
-                                            \ doc at Element(
-                                                    ElemName(
-                                                      QName(
-                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                      , "choice"
-                                                      )
-                                                    )
-                                                  , attributes
-                                                  , contents
-                                                  , ElemName(
-                                                      QName(
-                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                      , "choice"
-                                                      )
-                                                    )
-                                                  ) -> err
-                                              where <(validate-type-ComplexTypeNestedMax
-                                                      <+ ![ ( doc
-                                                            , <concat-strings> [ "no type definition "
-                                                                               , "ComplexTypeNestedMax"
-                                                                               , " for element "
-                                                                               , "choice"
-                                                                               , " found"
-                                                                               ]
-                                                            )
-                                                          ])> doc => err \
-                                          }
-                                          <+ ![ ( <id>
-                                                , <concat-strings> ["expected element: ", "choice", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                                )
-                                              ])
-                                         ; (is-error <+ !xs)> x \
-                          ; ?serr
-                          ; if is-error then
-                              !x
-                              ; {x, serr:
-                                  ?x
-                                  ; \ [x|xs] -> <({err:
-                                                    \ doc at Element(
-                                                            ElemName(
-                                                              QName(
-                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                              , "sequence"
-                                                              )
-                                                            )
-                                                          , attributes
-                                                          , contents
-                                                          , ElemName(
-                                                              QName(
-                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                              , "sequence"
-                                                              )
-                                                            )
-                                                          ) -> err
-                                                      where <(validate-type-ComplexTypeNested
-                                                              <+ ![ ( doc
-                                                                    , <concat-strings> [ "no type definition "
-                                                                                       , "ComplexTypeNested"
-                                                                                       , " for element "
-                                                                                       , "sequence"
-                                                                                       , " found"
-                                                                                       ]
-                                                                    )
-                                                                  ])> doc => err \
-                                                  }
-                                                  <+ ![ ( <id>
-                                                        , <concat-strings> ["expected element: ", "sequence", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                                        )
-                                                      ])
-                                                 ; (is-error <+ !xs)> x \
-                                  ; ?serr
-                                  ; if is-error then
-                                      !x
-                                      ; {x, serr:
-                                          ?x
-                                          ; \ [x|xs] -> <({err:
-                                                            \ doc at Element(
-                                                                    ElemName(
-                                                                      QName(
-                                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                                      , "sequence"
-                                                                      )
-                                                                    )
-                                                                  , attributes
-                                                                  , contents
-                                                                  , ElemName(
-                                                                      QName(
-                                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                                      , "sequence"
-                                                                      )
-                                                                    )
-                                                                  ) -> err
-                                                              where <(validate-type-ComplexTypeNestedMax
-                                                                      <+ ![ ( doc
-                                                                            , <concat-strings> [ "no type definition "
-                                                                                               , "ComplexTypeNestedMax"
-                                                                                               , " for element "
-                                                                                               , "sequence"
-                                                                                               , " found"
-                                                                                               ]
-                                                                            )
-                                                                          ])> doc => err \
-                                                          }
-                                                          <+ ![ ( <id>
-                                                                , <concat-strings> ["expected element: ", "sequence", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                                                )
-                                                              ])
-                                                         ; (is-error <+ !xs)> x \
-                                          ; ?serr
-                                          ; if is-error then
-                                              !x
-                                              ; {x, serr:
-                                                  ?x
-                                                  ; \ [x|xs] -> <({err:
-                                                                    \ doc at Element(
-                                                                            ElemName(
-                                                                              QName(
-                                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                                              , "element"
-                                                                              )
-                                                                            )
-                                                                          , attributes
-                                                                          , contents
-                                                                          , ElemName(
-                                                                              QName(
-                                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                                              , "element"
-                                                                              )
-                                                                            )
-                                                                          ) -> err
-                                                                      where <(validate-type-ElementType
-                                                                              <+ ![ ( doc
-                                                                                    , <concat-strings> [ "no type definition "
-                                                                                                       , "ElementType"
-                                                                                                       , " for element "
-                                                                                                       , "element"
-                                                                                                       , " found"
-                                                                                                       ]
-                                                                                    )
-                                                                                  ])> doc => err \
-                                                                  }
-                                                                  <+ ![ ( <id>
-                                                                        , <concat-strings> ["expected element: ", "element", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                                                        )
-                                                                      ])
-                                                                 ; (is-error <+ !xs)> x \
-                                                  ; ?serr
-                                                  ; if is-error then !x ; fail <+ !serr else id end
-                                                }
-                                              <+ !serr
-                                            else
-                                              id
-                                            end
-                                        }
-                                      <+ !serr
-                                    else
-                                      id
-                                    end
-                                }
-                              <+ !serr
-                            else
-                              id
-                            end
-                        }
-                      <+ !serr
-                    else
-                      id
-                    end
-                }
-              )
-              ; if is-error then
-                  id
-                else
-                  if ?[] then
-                    ![]
-                  else
-                    is-a-list
-                    < map(!(<id>, "unexpected element"))
-                    + ![(<id>, "unexpected element")]
-                  end
-                  ; if is-error then id else id end
-                end)> cs => err2
-
-
-rules
-
-  validate-type-ComplexTypeNestedMax :
-    Element(name1, attrs, cs, name2) -> <conc> (err1, err2)
-    where <(\ [x|xs] -> <({err:
-                            \ att at Attribute(
-                                    AttrName(QName(None, "maxOccurs"))
-                                  , attval
-                                  ) -> err
-                              where <(validate-attval-type-string
-                                      <+ ![ ( att
-                                            , <concat-strings> [ "no type definition for "
-                                                               , "string"
-                                                               , " of attribute "
-                                                               , "maxOccurs"
-                                                               , " found"
-                                                               ]
-                                            )
-                                          ])> attval => err \
-                          }
-                          <+ ![ ( <id>
-                                , <concat-strings> ["expected attribute: ", "maxOccurs"]
-                                )
-                              ])
-                         ; (is-error <+ !xs)> x \
-            ; if is-error then
-                id
-              else
-                if ?[] then
-                  ![]
-                else
-                  is-a-list
-                  < map(!(<id>, "unexpected attribute"))
-                  + ![(<id>, "unexpected attribute")]
-                end
-                ; if is-error then id else id end
-              end)> attrs => err1
-          ; <(repeat-strategy(
-                {x, serr:
-                  ?x
-                  ; \ [x|xs] -> <({err:
-                                    \ doc at Element(
-                                            ElemName(
-                                              QName(
-                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                              , "choice"
-                                              )
-                                            )
-                                          , attributes
-                                          , contents
-                                          , ElemName(
-                                              QName(
-                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                              , "choice"
-                                              )
-                                            )
-                                          ) -> err
-                                      where <(validate-type-ComplexTypeNested
-                                              <+ ![ ( doc
-                                                    , <concat-strings> [ "no type definition "
-                                                                       , "ComplexTypeNested"
-                                                                       , " for element "
-                                                                       , "choice"
-                                                                       , " found"
-                                                                       ]
-                                                    )
-                                                  ])> doc => err \
-                                  }
-                                  <+ ![ ( <id>
-                                        , <concat-strings> ["expected element: ", "choice", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                        )
-                                      ])
-                                 ; (is-error <+ !xs)> x \
-                  ; ?serr
-                  ; if is-error then
-                      !x
-                      ; {x, serr:
-                          ?x
-                          ; \ [x|xs] -> <({err:
-                                            \ doc at Element(
-                                                    ElemName(
-                                                      QName(
-                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                      , "choice"
-                                                      )
-                                                    )
-                                                  , attributes
-                                                  , contents
-                                                  , ElemName(
-                                                      QName(
-                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                      , "choice"
-                                                      )
-                                                    )
-                                                  ) -> err
-                                              where <(validate-type-ComplexTypeNestedMax
-                                                      <+ ![ ( doc
-                                                            , <concat-strings> [ "no type definition "
-                                                                               , "ComplexTypeNestedMax"
-                                                                               , " for element "
-                                                                               , "choice"
-                                                                               , " found"
-                                                                               ]
-                                                            )
-                                                          ])> doc => err \
-                                          }
-                                          <+ ![ ( <id>
-                                                , <concat-strings> ["expected element: ", "choice", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                                )
-                                              ])
-                                         ; (is-error <+ !xs)> x \
-                          ; ?serr
-                          ; if is-error then
-                              !x
-                              ; {x, serr:
-                                  ?x
-                                  ; \ [x|xs] -> <({err:
-                                                    \ doc at Element(
-                                                            ElemName(
-                                                              QName(
-                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                              , "sequence"
-                                                              )
-                                                            )
-                                                          , attributes
-                                                          , contents
-                                                          , ElemName(
-                                                              QName(
-                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                              , "sequence"
-                                                              )
-                                                            )
-                                                          ) -> err
-                                                      where <(validate-type-ComplexTypeNested
-                                                              <+ ![ ( doc
-                                                                    , <concat-strings> [ "no type definition "
-                                                                                       , "ComplexTypeNested"
-                                                                                       , " for element "
-                                                                                       , "sequence"
-                                                                                       , " found"
-                                                                                       ]
-                                                                    )
-                                                                  ])> doc => err \
-                                                  }
-                                                  <+ ![ ( <id>
-                                                        , <concat-strings> ["expected element: ", "sequence", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                                        )
-                                                      ])
-                                                 ; (is-error <+ !xs)> x \
-                                  ; ?serr
-                                  ; if is-error then
-                                      !x
-                                      ; {x, serr:
-                                          ?x
-                                          ; \ [x|xs] -> <({err:
-                                                            \ doc at Element(
-                                                                    ElemName(
-                                                                      QName(
-                                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                                      , "sequence"
-                                                                      )
-                                                                    )
-                                                                  , attributes
-                                                                  , contents
-                                                                  , ElemName(
-                                                                      QName(
-                                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                                      , "sequence"
-                                                                      )
-                                                                    )
-                                                                  ) -> err
-                                                              where <(validate-type-ComplexTypeNestedMax
-                                                                      <+ ![ ( doc
-                                                                            , <concat-strings> [ "no type definition "
-                                                                                               , "ComplexTypeNestedMax"
-                                                                                               , " for element "
-                                                                                               , "sequence"
-                                                                                               , " found"
-                                                                                               ]
-                                                                            )
-                                                                          ])> doc => err \
-                                                          }
-                                                          <+ ![ ( <id>
-                                                                , <concat-strings> ["expected element: ", "sequence", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                                                )
-                                                              ])
-                                                         ; (is-error <+ !xs)> x \
-                                          ; ?serr
-                                          ; if is-error then
-                                              !x
-                                              ; {x, serr:
-                                                  ?x
-                                                  ; \ [x|xs] -> <({err:
-                                                                    \ doc at Element(
-                                                                            ElemName(
-                                                                              QName(
-                                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                                              , "element"
-                                                                              )
-                                                                            )
-                                                                          , attributes
-                                                                          , contents
-                                                                          , ElemName(
-                                                                              QName(
-                                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                                                              , "element"
-                                                                              )
-                                                                            )
-                                                                          ) -> err
-                                                                      where <(validate-type-ElementType
-                                                                              <+ ![ ( doc
-                                                                                    , <concat-strings> [ "no type definition "
-                                                                                                       , "ElementType"
-                                                                                                       , " for element "
-                                                                                                       , "element"
-                                                                                                       , " found"
-                                                                                                       ]
-                                                                                    )
-                                                                                  ])> doc => err \
-                                                                  }
-                                                                  <+ ![ ( <id>
-                                                                        , <concat-strings> ["expected element: ", "element", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                                                        )
-                                                                      ])
-                                                                 ; (is-error <+ !xs)> x \
-                                                  ; ?serr
-                                                  ; if is-error then !x ; fail <+ !serr else id end
-                                                }
-                                              <+ !serr
-                                            else
-                                              id
-                                            end
-                                        }
-                                      <+ !serr
-                                    else
-                                      id
-                                    end
-                                }
-                              <+ !serr
-                            else
-                              id
-                            end
-                        }
-                      <+ !serr
-                    else
-                      id
-                    end
-                }
-              )
-              ; if is-error then
-                  id
-                else
-                  if ?[] then
-                    ![]
-                  else
-                    is-a-list
-                    < map(!(<id>, "unexpected element"))
-                    + ![(<id>, "unexpected element")]
-                  end
-                  ; if is-error then id else id end
-                end)> cs => err2
-
-
-rules
-
-  validate-type-ElementType :
-    Element(name1, attrs, cs, name2) -> <conc> (err1, err2)
-    where <(\ [x|xs] -> <({err:
-                            \ att at Attribute(
-                                    AttrName(QName(None, "name"))
-                                  , attval
-                                  ) -> err
-                              where <(validate-attval-type-string
-                                      <+ ![ ( att
-                                            , <concat-strings> [ "no type definition for "
-                                                               , "string"
-                                                               , " of attribute "
-                                                               , "name"
-                                                               , " found"
-                                                               ]
-                                            )
-                                          ])> attval => err \
-                          }
-                          <+ ![ ( <id>
-                                , <concat-strings> ["expected attribute: ", "name"]
-                                )
-                              ])
-                         ; (is-error <+ !xs)> x \
-            ; if is-error then
-                id
-              else
-                \ [x|xs] -> <({err:
-                                \ att at Attribute(
-                                        AttrName(QName(None, "type"))
-                                      , attval
-                                      ) -> err
-                                  where <(validate-attval-type-string
-                                          <+ ![ ( att
-                                                , <concat-strings> [ "no type definition for "
-                                                                   , "string"
-                                                                   , " of attribute "
-                                                                   , "type"
-                                                                   , " found"
-                                                                   ]
-                                                )
-                                              ])> attval => err \
-                              }
-                              <+ ![ ( <id>
-                                    , <concat-strings> ["expected attribute: ", "type"]
-                                    )
-                                  ])
-                             ; (is-error <+ !xs)> x \
-                ; if is-error then
-                    id
-                  else
-                    if ?[] then
-                      ![]
-                    else
-                      is-a-list
-                      < map(!(<id>, "unexpected attribute"))
-                      + ![(<id>, "unexpected attribute")]
-                    end
-                    ; if is-error then id else id end
-                  end
-              end)> attrs => err1
-          ; <(id
-              ; if is-error then
-                  id
-                else
-                  if ?[] then
-                    ![]
-                  else
-                    is-a-list
-                    < map(!(<id>, "unexpected element"))
-                    + ![(<id>, "unexpected element")]
-                  end
-                  ; if is-error then id else id end
-                end)> cs => err2
-
-
-rules
-
-  validate-type-AttributeType :
-    Element(name1, attrs, cs, name2) -> <conc> (err1, err2)
-    where <(\ [x|xs] -> <({err:
-                            \ att at Attribute(
-                                    AttrName(QName(None, "name"))
-                                  , attval
-                                  ) -> err
-                              where <(validate-attval-type-string
-                                      <+ ![ ( att
-                                            , <concat-strings> [ "no type definition for "
-                                                               , "string"
-                                                               , " of attribute "
-                                                               , "name"
-                                                               , " found"
-                                                               ]
-                                            )
-                                          ])> attval => err \
-                          }
-                          <+ ![ ( <id>
-                                , <concat-strings> ["expected attribute: ", "name"]
-                                )
-                              ])
-                         ; (is-error <+ !xs)> x \
-            ; if is-error then
-                id
-              else
-                \ [x|xs] -> <({err:
-                                \ att at Attribute(
-                                        AttrName(QName(None, "type"))
-                                      , attval
-                                      ) -> err
-                                  where <(validate-attval-type-string
-                                          <+ ![ ( att
-                                                , <concat-strings> [ "no type definition for "
-                                                                   , "string"
-                                                                   , " of attribute "
-                                                                   , "type"
-                                                                   , " found"
-                                                                   ]
-                                                )
-                                              ])> attval => err \
-                              }
-                              <+ ![ ( <id>
-                                    , <concat-strings> ["expected attribute: ", "type"]
-                                    )
-                                  ])
-                             ; (is-error <+ !xs)> x \
-                ; if is-error then
-                    id
-                  else
-                    if ?[] then
-                      ![]
-                    else
-                      is-a-list
-                      < map(!(<id>, "unexpected attribute"))
-                      + ![(<id>, "unexpected attribute")]
-                    end
-                    ; if is-error then id else id end
-                  end
-              end)> attrs => err1
-          ; <(id
-              ; if is-error then
-                  id
-                else
-                  if ?[] then
-                    ![]
-                  else
-                    is-a-list
-                    < map(!(<id>, "unexpected element"))
-                    + ![(<id>, "unexpected element")]
-                  end
-                  ; if is-error then id else id end
-                end)> cs => err2
-
-
-rules
-
-  validate-type-SimpleType :
-    Element(name1, attrs, cs, name2) -> <conc> (err1, err2)
-    where <(\ [x|xs] -> <({err:
-                            \ att at Attribute(
-                                    AttrName(QName(None, "name"))
-                                  , attval
-                                  ) -> err
-                              where <(validate-attval-type-string
-                                      <+ ![ ( att
-                                            , <concat-strings> [ "no type definition for "
-                                                               , "string"
-                                                               , " of attribute "
-                                                               , "name"
-                                                               , " found"
-                                                               ]
-                                            )
-                                          ])> attval => err \
-                          }
-                          <+ ![ ( <id>
-                                , <concat-strings> ["expected attribute: ", "name"]
-                                )
-                              ])
-                         ; (is-error <+ !xs)> x \
-            ; if is-error then
-                id
-              else
-                if ?[] then
-                  ![]
-                else
-                  is-a-list
-                  < map(!(<id>, "unexpected attribute"))
-                  + ![(<id>, "unexpected attribute")]
-                end
-                ; if is-error then id else id end
-              end)> attrs => err1
-          ; <((\ [x|xs] -> <({err:
-                               \ doc at Element(
-                                       ElemName(
-                                         QName(
-                                           Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                         , "restriction"
-                                         )
-                                       )
-                                     , attributes
-                                     , contents
-                                     , ElemName(
-                                         QName(
-                                           Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
-                                         , "restriction"
-                                         )
-                                       )
-                                     ) -> err
-                                 where <(validate-type-RestrictionType
-                                         <+ ![ ( doc
-                                               , <concat-strings> [ "no type definition "
-                                                                  , "RestrictionType"
-                                                                  , " for element "
-                                                                  , "restriction"
-                                                                  , " found"
-                                                                  ]
-                                               )
-                                             ])> doc => err \
-                             }
-                             <+ ![ ( <id>
-                                   , <concat-strings> ["expected element: ", "restriction", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
-                                   )
-                                 ])
-                            ; (is-error <+ !xs)> x \
-               ; if is-error then id else id end)
-              ; if is-error then
-                  id
-                else
-                  if ?[] then
-                    ![]
-                  else
-                    is-a-list
-                    < map(!(<id>, "unexpected element"))
-                    + ![(<id>, "unexpected element")]
-                  end
-                  ; if is-error then id else id end
-                end)> cs => err2
-
-
-rules
-
-  validate-type-RestrictionType :
-    Element(name1, attrs, cs, name2) -> <conc> (err1, err2)
-    where <(\ [x|xs] -> <({err:
-                            \ att at Attribute(
-                                    AttrName(QName(None, "base"))
-                                  , attval
-                                  ) -> err
-                              where <(validate-attval-type-string
-                                      <+ ![ ( att
-                                            , <concat-strings> [ "no type definition for "
-                                                               , "string"
-                                                               , " of attribute "
-                                                               , "base"
-                                                               , " found"
-                                                               ]
-                                            )
-                                          ])> attval => err \
-                          }
-                          <+ ![ ( <id>
-                                , <concat-strings> ["expected attribute: ", "base"]
-                                )
-                              ])
-                         ; (is-error <+ !xs)> x \
-            ; if is-error then
-                id
-              else
-                if ?[] then
-                  ![]
-                else
-                  is-a-list
-                  < map(!(<id>, "unexpected attribute"))
-                  + ![(<id>, "unexpected attribute")]
-                end
-                ; if is-error then id else id end
-              end)> attrs => err1
-          ; <(id
-              ; if is-error then
-                  id
-                else
-                  if ?[] then
-                    ![]
-                  else
-                    is-a-list
-                    < map(!(<id>, "unexpected element"))
-                    + ![(<id>, "unexpected element")]
-                  end
-                  ; if is-error then id else id end
-                end)> cs => err2
-
-
-rules
-
-  validate-type-string :
-    Element(name1, attrs, [c], name2) -> err
-    where <chardata2string> c => cstring
-          ; <(validate-base-string
-              <+ ?(t, val)
-                 ; !( t
-                    , <concat-strings> ["no base type definition ", "string", " for value ", val, " found"]
-                    ))> (c, cstring) => err
-
-  validate-type-string :
-    Element(name1, attrs, cs, name2) -> [ ( c
-                                          , <concat-strings> ["type mismatch: expected character data, found ", <write-to-string> cs]
-                                          )
-                                        ]
-    where <(not(?[c])
-            + ?[c] ; not(chardata2string))> cs
-
-  validate-attval-type-string :
-    attr -> err
-    where <xml-attr-value2string> attr => attrstring
-          ; <(validate-base-string
-              <+ ?(t, val)
-                 ; !( t
-                    , <concat-strings> ["no base type definition ", "string", " for value ", val, " found"]
-                    ))> (attr, attrstring) => err
 }
\ No newline at end of file

From L.C.L.Kats at tudelft.nl  Tue May  3 11:58:05 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 03 May 2011 09:58:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22729 -
	spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client
	strategoxt-java-backend/trunk/java
Message-ID: <20110503095805.8DEDE7F800A@mx1.tudelft.nl>

Author: LennartKats
Date: Tue May  3 09:58:05 2011
New Revision: 22729
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22729&sc=1

Log:
Changed handling of amb nodes where all children are rejected

Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java
   strategoxt-java-backend/trunk/java/spoofax-libs.jar

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java	Tue May  3 08:39:07 2011	(r22728)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java	Tue May  3 09:58:05 2011	(r22729)
@@ -840,7 +840,9 @@
 		}
 
 		if (newAmbiguities.isEmpty()) {
-			rejectedBranch = ParseNode.createAmbNode(ambs);
+			// All alternatives were rejected;
+			// the outer context should be rejected as well
+			return rejectedBranch = ParseNode.createAmbNode(ambs);
 		}
 
 		if (newAmbiguities.size() == 1) {

Modified: strategoxt-java-backend/trunk/java/spoofax-libs.jar
==============================================================================
Binary file (source and/or target). No diff available.

From L.C.L.Kats at tudelft.nl  Tue May  3 12:22:30 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 03 May 2011 10:22:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22730 -
	spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client
	strategoxt-java-backend/trunk/java
Message-ID: <20110503102230.95F0A7F801B@mx1.tudelft.nl>

Author: LennartKats
Date: Tue May  3 10:22:30 2011
New Revision: 22730
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22730&sc=1

Log:
Alright, a range check :(

Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java
   strategoxt-java-backend/trunk/java/spoofax-libs.jar

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java	Tue May  3 09:58:05 2011	(r22729)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java	Tue May  3 10:22:30 2011	(r22730)
@@ -971,7 +971,7 @@
 		// - ok
 		if (t.isAmbNode()) {
 			// Trick from forest.c
-			return countAllInjections(t.getChildren()[0]);
+			return t.getChildren().length == 0 ? 0 : countAllInjections(t.getChildren()[0]);
 		} else if (t.isParseNode()) {
 			final int c = getProductionLabel(t).isInjection() ? 1 : 0;
 			return c + countAllInjections(((ParseNode) t).kids);

Modified: strategoxt-java-backend/trunk/java/spoofax-libs.jar
==============================================================================
Binary file (source and/or target). No diff available.

From tobivollebregt at gmail.com  Tue May  3 13:32:59 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:32:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22731 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: .
	.externalToolBuilders META-INF editor editor/java
	editor/java/org editor/java/org/strategoxt editor/jav...
Message-ID: <20110503113259.6187F7F8015@mx1.tudelft.nl>

Author: tvo
Date: Tue May  3 11:32:59 2011
New Revision: 22731
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22731&sc=1

Log:
Initial import of "SDF with templates" language

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/.externalToolBuilders/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/.externalToolBuilders/Template build.main.xml.launch
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/.project
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Folding.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Outliner.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-References.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Syntax.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template.main.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/Activator.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/TemplateParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/TemplateValidator.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/strategies/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/strategies/InteropRegisterer.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/strategies/Main.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/strategies/java_strategy_0_0.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/refactor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/plugin.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Common.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.pp
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/example.tmpl
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/.classpath
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/.classpath	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<classpath>
+	<classpathentry kind="src" excluding="trans/**" path="editor/java"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/4"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/.externalToolBuilders/Template build.main.xml.launch
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/.externalToolBuilders/Template build.main.xml.launch	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
+<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
+<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES"/>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+</listAttribute>
+<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value=""/>
+<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="all,"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${none}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.editors.template/build.main.xml}"/>
+<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.editors.template}"/>
+<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
+</launchConfiguration>

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/.project
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/.project	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<projectDescription>
+      <name>org.strategoxt.imp.editors.template</name>
+      <comment></comment>
+      <buildSpec>
+        <buildCommand>
+          <name>org.eclipse.jdt.core.javabuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+            <name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+            <triggers>full,incremental,</triggers>
+            <arguments>
+                <dictionary>
+                    <key>LaunchConfigHandle</key>
+                    <value>&lt;project&gt;/.externalToolBuilders/Template build.main.xml.launch</value>
+                </dictionary>
+            </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.ManifestBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.SchemaBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+      </buildSpec>
+      <natures>
+        <nature>org.eclipse.pde.PluginNature</nature>
+        <nature>org.eclipse.jdt.core.javanature</nature>
+      </natures>
+    </projectDescription>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/MANIFEST.MF
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/MANIFEST.MF	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,21 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Template Plug-in
+Bundle-SymbolicName: org.strategoxt.imp.editors.template; singleton:=true
+Bundle-Version: 1.0.0
+Bundle-Activator: org.strategoxt.imp.editors.template.Activator
+Import-Package: org.osgi.framework;version="1.3.0"
+Require-Bundle: org.eclipse.core.runtime,
+  org.eclipse.core.resources,
+  org.eclipse.imp.runtime,
+  org.eclipse.ui,
+  lpg.runtime,
+  org.eclipse.jface.text,
+  org.eclipse.ui.editors,
+  org.eclipse.ui.workbench.texteditor,
+  org.strategoxt.imp.runtime,
+  org.spoofax.jsglr,
+  org.strategoxt.strj
+Bundle-RequiredExecutionEnvironment: J2SE-1.5
+Bundle-ActivationPolicy: lazy
+Export-Package: org.strategoxt.imp.editors.template

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.generated.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.generated.xml	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,597 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="build.generated">
+
+        <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
+    
+        <!-- Initialization -->
+        <available file="${build}/org/strategoxt/imp/editors/template/strategies/Main.class" property="java.jar.enabled"/>
+        <condition property="java.jar.import" value="-la org.strategoxt.imp.editors.template.strategies" else="">
+            <isset property="java.jar.enabled"/>
+        </condition>
+        <condition property="java.jar.classpath" value=":${include}/${strmodule}-java.jar" else="">
+            <isset property="java.jar.enabled"/>
+        </condition>
+        <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
+        <dirname property="externaldefdir" file="${externaldef}"/>
+        <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
+            <isset property="externaldef"/>
+        </condition>
+        <condition property="externaljarimport" value=":${externaljar}" else="">
+            <isset property="externaljar"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <isset property="eclipse.running"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <available classname="org.eclipse.jdt.core.JDTCompilerAdapter"/>
+        </condition>
+        <condition property="externaljarflags" value="${externaljarflags}" else="">
+            <isset property="externaljarflags"/>
+        </condition>
+        <condition property="metasdfmodule.available" value="1">
+            <available file="${syntax}/${metasdfmodule}.sdf"/>
+        </condition>
+        
+        <fail unless="build" message="Please use build.main.xml to build this project or configure the required properties manually"/>
+        <mkdir dir="${build}"/>
+        <mkdir dir="${src-gen}"/>
+        <mkdir dir="${dist}"/>
+        <mkdir dir="${include}"/>
+        <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
+
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+        
+        <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
+                <arg value="${include}/${esvmodule}.packed.esv"/>
+            </java>
+        </target>
+        
+        <target name="refresh" if="eclipse.running">
+            <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+            <eclipse.convertPath fileSystemPath="${syntax}" property="syntaxdir"/>
+            <eclipse.convertPath fileSystemPath="${lib}" property="libdir"/>
+            <eclipse.refreshLocal resource="${libdir}" depth="infinite"/>
+            <eclipse.refreshLocal resource="${syntaxdir}/${sdfmodule}.pp.generated" depth="infinite"/>
+            <eclipse.refreshLocal resource="${libdir}/editor-common.generated.str" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Builders.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Colorer.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Completions.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+            <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
+            <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+            <!-- Might cause the editor to be reloaded?
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            -->
+        </target>
+        
+        <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
+                <arg value="-p"/>
+                <arg value="${include}/${sdfmodule}.tbl"/>
+            </java>
+        </target>
+        
+        <target name="check-classpath">
+            <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
+            <antcall target="check-classpath.helper"/>  
+        </target>
+        
+        <target name="init" if="eclipse.running">
+            <!-- refresh one file/dir in the project to trigger an Ant rebuild with the next build command -->
+            <java classname="org.strategoxt.imp.metatooling.building.AntForceRefreshScheduler" failonerror="false">
+                <arg value="${include}"/>
+            </java>
+        </target>
+  
+        <target name="check-classpath.helper" unless="check-classpath.available">
+            <echo level="error" message="Could not load the Spoofax plugin loading classes."/>
+            <echo level="error" message="Make sure it is on the class path."/>
+            <echo level="error" message=""/>               
+            <echo level="error" message="In Eclipse, make sure the Ant builder is configured properly:"/>
+            <echo level="error" message="right-click on build.main.xml, go to Run as, Ant build..., JRE tab,"/>
+            <echo level="error" message="and ensure Run in the same JRE as the workspace is selected"/>
+            <echo level="error" message="alternatively, build the project using Build Project in the Project menu"/>
+            <fail/>
+        </target>
+    
+        <target name="sdf2table" depends="make-permissive">
+            <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                
+                <fileset file="${include}/${sdfmodule}-Permissive.def"/>
+                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+            </apply>
+        </target>
+        
+        <target name="meta-sdf2table" if="metasdfmodule.available">
+            <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+            <antcall target="sdf2table">
+                <param name="sdfmodule" value="${metasdfmodule}"/>
+                <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+            </antcall>
+            <antcall target="meta-sdf2table.helper"/>
+        </target>
+        
+        <target name="meta-sdf2table.helper" if="eclipse.running">
+           <eclipse.convertPath fileSystemPath="${include}" property="includeresource"/>
+           <eclipse.refreshLocal resource="${includeresource}/${metasdfmodule}.tbl" depth="infinite"/>
+        </target>
+        
+        <target name="make-permissive" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-Permissive.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <antcall target="make-permissive.helper"/>
+        </target>
+    
+        <target name="make-permissive.helper" unless="permissive-grammar.available">
+            <java classname="org.strategoxt.permissivegrammars.make_permissive" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-Permissive.def"/>
+                <arg line="--optimize on"/>
+            </java>
+        </target>
+
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
+            <mkdir dir="utils"/>
+            <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/aster.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.strategojar}" todir="utils" failonerror="false"/>
+        </target>
+    
+        <target name="pack-sdf" unless="externaldef">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.sdf"/>
+                </srcfileset>
+                <srcfileset dir="${lib}">
+                    <include name="**/*.def"/>
+                </srcfileset>
+                <targetfileset file="${include}/${sdfmodule}.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.def" property="pack-sdf.available"/>
+            <antcall target="pack-sdf.helper"/>
+        </target>
+    
+        <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <condition property="utils-include" value="-I ${utils}" else="">
+                <available file="${utils}"/>
+            </condition>
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-pack-sdf"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.sdf"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-I"/>
+                <arg value="${syntax}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg line="${utils-include}"/>
+                <arg line="${build.sdf.imports}"/>
+            </java>
+        </target>
+    
+        <target name="copy-sdf" if="externaldef">
+            <copy file="${externaldef}" tofile="${include}/${sdfmodule}.def" preservelastmodified="true"/>
+        </target>
+    
+        <target name="copy-jar" if="externaljar">
+            <copy file="${externaljar}" todir="${include}" preservelastmodified="true"/>
+        </target>
+    
+        <target name="rtg2sig" if="build.stratego.enabled" depends="sdf2rtg">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.rtg"/>
+                <targetfileset file="${include}/${sdfmodule}.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.str" property="rtg2sig.available"/>
+            <antcall target="rtg2sig.helper"/>
+        </target>
+    
+        <target name="rtg2sig.helper" unless="rtg2sig.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-rtg2sig"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.str"/>
+                <arg value="--module"/>
+                <arg value="${sdfmodule}"/>
+            </java>
+        </target>
+        
+        <target name="sdf2rtg" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}.rtg"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.rtg" property="sdf2rtg.available"/>
+            <antcall target="sdf2rtg.helper"/>
+        </target>
+    
+        <target name="sdf2rtg.helper" unless="sdf2rtg.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-sdf2rtg"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="--ignore-missing-cons"/>
+                <arg value="-Xnativepath"/>
+                <arg value="${build.strategoxt.sdf}"/>
+            </java>
+        </target>
+        
+        <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${syntax}/${sdfmodule}.generated.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.generated.pp.af"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
+        </target>
+    
+        <target name="ppgen.helper" unless="ppgen.available">
+            <!-- Any failures here are ignored; they are only a problem when imported from Stratego -->
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-ppgen"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-t"/>
+                <arg value="-b"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+            </java>
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-pp-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+                <arg value="-o"/>
+                <arg value="${syntax}/${sdfmodule}.generated.pp"/>
+            </java>
+        </target>
+    
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
+        
+        <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${syntax}/${sdfmodule}.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+            </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
+        </target>
+    
+        <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-parse-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.pp"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.pp.af"/>
+            </java>
+        </target>
+    
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+    
+        <!-- Aster to Stratego -->
+        <target name="stratego.aster">
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <fileset dir="${basedir}" id="aster-input-set">
+              <include name="**/*.astr"/>
+            </fileset>
+            <pathconvert pathsep=" " setonempty="false" property="aster-input" refid="aster-input-set"/>
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.astr"/>
+                </srcfileset>
+                <targetfileset file="${trans}/${strmodule}.rtree"/>
+            </dependset>
+            <condition property="aster-output.uptodate">
+                <and>
+                    <isset property="aster-output.available"/>
+                    <available file="${trans}/${strmodule}.rtree"/>
+                </and>
+            </condition>
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.uptodate"/>
+            <antcall target="stratego.aster.helper"/>
+        </target>
+    
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg line="${aster-input}"/>
+            </java>
+        </target>
+        
+        <target name="java.jar" if="java.jar.enabled">
+            <jar basedir="${build}" excludes="trans/**" update="true" destfile="${include}/${strmodule}-java.jar"/>
+        </target>
+    
+        <!-- Stratego to Java interpreter -->
+        <target name="stratego.ctree" depends="rtg2sig">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/*.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${include}/${strmodule}.ctree"/>
+            </dependset>
+            <available file="${include}/${strmodule}.ctree" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputfile" value="${include}/${strmodule}.ctree"/>
+                <param name="build.stratego.extraargs" value="-F"/>
+            </antcall>
+        </target>
+    
+        <!-- Stratego to Java compiler -->
+        <target name="stratego.jar" depends="rtg2sig,utils-files">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/*.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="trans/**"/>
+                <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+        </target>
+            
+        <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans}/${strmodule}.str"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
+                
+        <!-- begin: targets used for adding debugging instrumentation to stratego -->
+        
+		<!-- 
+			if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
+			Only used by stratego.jvm.helper.debug 
+		-->
+		<condition property="transformer-output" value="" else="--output-rtree">
+			<isset property="debug.the.debug.transformer"/>
+		</condition>
+		
+		<!-- 
+			if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
+			if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
+			Only used by stratego.jvm.helper.debug
+		-->
+		<condition property="strj.input.file.type" value="str" else="rtree">
+			<isset property="debug.the.debug.transformer"/>
+		</condition>
+        
+        <!-- value determines which target will be executed.
+        	If the file ".debugmode" can be found in the project root call stratego.jar.debug
+        	else call stratego.jar
+        -->
+        <condition property="stratego.jar.target" value="call.stratego.jar.debug" else="call.stratego.jar">
+            <available file=".debugmode"/>
+        </condition>
+		
+		<!-- will save the stratego files with debug info in this folder -->
+		<property name="trans-debug" location="trans-debug"/>
+		
+		<!-- this helper target determines what target to call, based on debug.build.enabled -->
+		<target name="stratego.jar.helper">
+			<antcall target="${stratego.jar.target}"/>
+		</target>
+		
+		<!-- call stratego.jar unless debug.build.enabled property is set --> 
+		<target name="call.stratego.jar" depends="stratego.jar">
+			<echo message="call.stratego.jar - ${stratego.jar.target}"/>
+		</target>
+		
+		<!-- call stratego.jar.debug when debug.build.enabled property is set -->
+		<target name="call.stratego.jar.debug" depends="stratego.jar.debug">
+			<echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
+		</target>
+		
+		<!-- copy stratego runtime jars to utils folder -->
+		<target name="utils-files-debug" depends="utils-files">
+			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
+			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
+		</target>
+		
+	    <!-- Stratego to Java compiler with debugging capabilities -->
+	    <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
+	        <dependset>
+	            <srcfileset dir="${basedir}">
+	                <include name="**/*.str"/>
+	                <include name="**/*.astr"/>
+	                <exclude name="lib/editor-common.generated.str"/>
+	            </srcfileset>
+	            <targetfileset file="${src-gen}/trans/Main.java"/>
+	        </dependset>
+	        <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+	        <antcall target="copy-jar"/>
+	        <antcall target="stratego.jar.deletehelper"/>
+	    	<!-- compile stratego to java -->
+	        <antcall target="stratego.jvm.helper.debug">
+	            <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+	            <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+	        </antcall>
+	    	<!-- compile java to class -->
+	        <javac destdir="${build}" source="1.5" target="1.5" debug="on">
+	    		<!-- attribute in javac: srcdir="${src-gen}" -->
+	    		<src path="${src-gen}"/>
+	        	<!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"  -->
+	        	<classpath>
+	        		<pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+	        		<pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
+	        		<pathelement location="utils/stratego-debug-runtime-java.jar"/>
+	        	</classpath>
+	        	<!-- attribute in javac: includes="trans/**"  -->
+	        	<include name="trans/**"/>
+	    	</javac>
+	        <!-- copy imported terms -->
+	        <copy todir="${build}/trans">
+	            <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+	        </copy>
+	    	<!-- create a jar from the class files -->
+	        <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+	        <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+	        <delete><fileset dir="${build}" includes="trans/**"/></delete>
+	    </target>
+		
+		<!-- instrument the stratego program and compile it to java -->
+	    <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
+	    	<echo message="generate stratego with debug information"/>
+	    	<echo message="${basedir}"/>
+	    	<available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
+	    	<!-- add debug information -->
+	  		<java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
+	  		     <classpath>
+					<pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
+	  		     	<pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
+	  		     	<pathelement location="${eclipse.spoofaximp.strategojar}"/>
+	  		     </classpath>
+	  			<arg value="-i"/>
+	  			<arg value="${trans}/${strmodule}.str"/>
+	  			<arg value="--gen-dir"/>
+	  			<arg value="${trans-debug}"/>
+	  			<arg value="--base-dir"/> <!-- set the basedir to the project dir -->
+	  			<arg value="${basedir}"/>
+	  			<!-- "arg line='val'" val should contain space-separated arguments --> 
+	  			<arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
+	  			
+	  			<!-- arguments should start with two '-'-characters -->
+	  			<!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
+	  			<!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
+	  			<!-- <arg value="-output-rtree"/> --> 
+	    	</java>
+	    	<!-- now compile instrumented stratego to java -->
+	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+	        <java classname="org.strategoxt.strj.Main" failonerror="true">
+	            <arg value="-i"/>
+	            <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
+	            <arg value="-o"/>
+	            <arg value="${build.stratego.outputfile}"/>
+	            <arg value="-p"/>
+	            <arg value="trans"/>
+	            <arg value="--library"/>
+	            <arg value="--clean"/>
+	            <arg line="${build.stratego.args}"/>
+	            <arg line="${build.stratego.extraargs}"/>
+	            <arg line="${externaljarflags}"/>
+	            <arg line="${externaldefimport}"/>
+	            <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+	        	<!-- put strategodebuglib.rtree on the include path -->
+	        	<arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
+	        	<arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
+	        </java>
+	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+	        <mkdir dir="${build}/trans"/>
+	    </target>
+        
+        
+        <!-- end: targets used for adding debugging instrumentation to stratego -->
+
+
+        <!-- Stratego to C-based native executable -->
+        <target name="stratego.c">
+            <antcall target="stratego.c.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/include"/>
+                <param name="build.stratego.extraargs" value=""/>
+                <param name="build.stratego.extension" value=""/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+        
+        <!-- Helper target for calling the stratego compiler -->
+        <target name="stratego.c.helper" depends="rtg2sig" if="build.stratego.enabled">
+            <apply executable="${build.strategoxt.stratego}/${build.stratego.compiler}" dest="${build.stratego.outputpath}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                
+                <fileset file="${trans}/${strmodule}.str"/>
+                <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>
+            </apply>
+        </target>
+        
+        <target name="clean" description="clean up">
+            <delete dir="${build}"/>
+            <delete file="${include}/${sdfmodule}.def"/>
+            <delete dir="${src-gen}/trans"/>
+        </target>
+    </project>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="Template" default="all">
+        
+        <!-- Key input modules -->
+        <property name="sdfmodule" value="Template"/>
+        <property name="metasdfmodule" value="Stratego-Template"/>
+        <property name="esvmodule" value="Template"/>
+        <property name="strmodule" value="template"/>
+    
+        <!-- Project directories -->
+        <property name="trans" location="trans"/>
+        <property name="src-gen" location="editor/java"/>
+        <property name="syntax" location="syntax"/>
+        <property name="include" location="include"/>
+        <property name="lib" location="lib"/>
+        <property name="build" location="bin"/>
+        <property name="dist" location="bin/dist"/>
+        
+        <!-- Imports -->
+        <property name="build.sdf.imports" value=""/>
+        <property name="build.stratego.args" value="
+                        --library
+                        -I &quot;${trans}&quot;
+                        -I &quot;${basedir}&quot;
+                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm"/>
+        
+        <!-- Optional: external .def and .jar locations
+        <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+        <property name="externaljar" value="../lib.jar"/>
+        <property name="externaljarflags" value="-la org.lib"/>
+        -->
+    
+        <!-- Environment configuration for command-line builds -->
+        <condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
+            <isset property="eclipse.spoofaximp.nativeprefix"/>
+        </condition>
+        <property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin"/>
+    
+        <import file="build.generated.xml"/>
+    
+        <!-- Main target -->
+        <target name="all" depends="spoofaximp.default.jar"/>
+    </project>

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.properties	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,8 @@
+source.. = editor/java/
+output.. = bin/
+bin.includes = META-INF/,\
+               plugin.xml,\
+               include/,\
+               bin/,\
+               lib/,\
+               .

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,29 @@
+
+module Template-Builders
+
+imports Template-Builders.generated
+
+builders
+
+  // This file can be used for custom analysis and builder rules.
+  //
+  // See the imported file for a brief introduction and examples.
+
+builders
+
+  provider : include/template.jar
+  provider : include/template-java.jar
+
+  observer : editor-analyze
+
+  // builder  : "Generate Java code (for selection)"   = generate-java (openeditor) (realtime)
+  builder  : "Show abstract syntax (for selection)" = generate-aterm (openeditor) (realtime) (meta) (source)
+
+
+refactorings
+
+  pp-table                  : get-pp-table
+
+  // refactoring ID            : "Rename Entity" = rename-entity (source) (cursor)
+
+  // on save: generate-java

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,9 @@
+module Template-Colorer
+
+imports Template-Colorer.generated
+
+colorer
+                                                                      
+  // This file can be used for custom colorer rules.                  
+  //                                                                  
+  // See the imported file for a brief introduction and examples.     
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Completions.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Completions.esv	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,17 @@
+module Template-Completions
+
+imports Template-Completions.generated
+
+completions
+
+  // This file is used to define content completion.
+  //
+  // See the imported file for a brief introduction and examples.
+
+
+completions
+  // Semantic (identifier) completion:
+
+  // completion proposer                  : editor-complete
+
+  // completion trigger                   : ":"

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Folding.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Folding.esv	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,9 @@
+module Template-Folding
+
+imports Template-Folding.generated
+
+folding
+  
+  // This file can be used for custom folding rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Outliner.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Outliner.esv	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,9 @@
+module Template-Outliner
+
+imports Template-Outliner.generated
+
+outliner
+  
+  // This file can be used for custom outliner rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-References.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-References.esv	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,15 @@
+module Template-References
+
+imports Template-References.generated
+
+references
+
+  // This file can be used to specify reference resolving and hover help, and content completion.
+  //
+  // See the imported file for a brief introduction and examples.
+
+
+references
+
+  // reference _ : editor-resolve
+  // hover _     : editor-hover

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Syntax.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Syntax.esv	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,9 @@
+module Template-Syntax
+
+imports Template-Syntax.generated
+
+language
+                                                                   
+  // This file can be used for custom syntax rules.                
+  //                                                               
+  // See the imported file for a brief introduction and examples.  
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template.main.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template.main.esv	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,16 @@
+module Template.main
+
+imports Template-Builders Template-Colorer Template-Completions Template-Folding Template-Outliner Template-References Template-Syntax
+
+language General properties
+                  
+  name          : Template
+  id            : org.strategoxt.imp.editors.template
+  extends       : Root
+                  
+  description   : "Spoofax/IMP-generated editor for the Template language"
+  url           : http://strategoxt.org
+                  
+  extensions    : tmpl
+  table         : include/Template.tbl
+  start symbols : Start
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/Activator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/Activator.java	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,44 @@
+package org.strategoxt.imp.editors.template;
+
+import org.eclipse.imp.preferences.PreferencesService;
+import org.eclipse.imp.runtime.PluginBase;
+import org.osgi.framework.BundleContext;
+
+public class Activator extends PluginBase 
+{ 
+  public static final String kPluginID = "Template";
+
+  public static final String kLanguageName = "Template";
+
+  protected static Activator sPlugin;
+
+  public static Activator getInstance()
+  { 
+    if(sPlugin == null)
+      return new Activator();
+    return sPlugin;
+  }
+
+  public Activator () 
+  { 
+    super();
+    sPlugin = this;
+  }
+
+  @Override public void start(BundleContext context) throws Exception
+  { 
+    super.start(context);
+  }
+
+  @Override public String getID()
+  { 
+    return kPluginID;
+  }
+
+  @Override public String getLanguageID()
+  { 
+    return kLanguageName;
+  }
+
+  protected static PreferencesService preferencesService = null;
+}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/TemplateParseController.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/TemplateParseController.java	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,4 @@
+package org.strategoxt.imp.editors.template;
+
+public class TemplateParseController extends TemplateParseControllerGenerated 
+{ }
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/TemplateValidator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/TemplateValidator.java	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,12 @@
+package org.strategoxt.imp.editors.template;
+
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
+
+public class TemplateValidator extends MetaFileLanguageValidator 
+{ 
+  @Override public Descriptor getDescriptor()
+  { 
+    return TemplateParseController.getDescriptor();
+  }
+}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/strategies/InteropRegisterer.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/strategies/InteropRegisterer.java	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,14 @@
+package org.strategoxt.imp.editors.template.strategies;
+
+       import org.strategoxt.lang.JavaInteropRegisterer;
+       import org.strategoxt.lang.Strategy;
+
+       /**
+        * Helper class for {@link java_strategy_0_0}.
+        */
+       public class InteropRegisterer extends JavaInteropRegisterer {
+
+         public InteropRegisterer() {
+           super(new Strategy[] { java_strategy_0_0.instance });
+         }
+       }

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/strategies/Main.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/strategies/Main.java	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,11 @@
+package org.strategoxt.imp.editors.template.strategies;
+
+       import org.strategoxt.lang.Context;
+       
+       public class Main {
+         
+         public static void init(Context context) {
+           // Called when the editor is being initialized
+         }
+       
+       }

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/strategies/java_strategy_0_0.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/strategies/java_strategy_0_0.java	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,32 @@
+package org.strategoxt.imp.editors.template.strategies;
+
+       import org.spoofax.interpreter.terms.IStrategoTerm;
+       import org.spoofax.interpreter.terms.ITermFactory;
+       import org.strategoxt.lang.Context;
+       import org.strategoxt.lang.Strategy;
+       
+       /**
+        * Example Java strategy implementation.
+        *
+        * This strategy can be used by editor services and can be called
+        * in Stratego modules by declaring it as an external strategy
+        * as follows:
+        *
+        * <code>
+        *  external java-strategy(|)
+        * </code>
+        *
+        * @see InteropRegisterer  This class registers java_strategy_0_0 for use.
+        */
+       public class java_strategy_0_0 extends Strategy {
+         
+         public static java_strategy_0_0 instance = new java_strategy_0_0();
+       
+         @Override
+         public IStrategoTerm invoke(Context context, IStrategoTerm current) {
+           context.getIOAgent().printError("Input for java-strategy: " + current);
+           ITermFactory factory = context.getFactory();
+           return factory.makeString("Regards from java-strategy");
+         }
+       
+       }

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/editor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/editor-common.generated.str	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,254 @@
+module lib/editor-common.generated
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-gpp
+
+strategies
+
+  parse-file = parse-template-file
+  parse-template-file =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(include/Template.tbl)>
+    )
+
+  parse-string = parse-template-string
+  parse-template-string =
+    parse-string(
+      strsglr-report-parse-error
+    | <import-term(include/Template.tbl)>
+    )
+  
+  parse-stream = parse-template-stream
+  parse-template-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(include/Template.tbl)>
+    )
+
+  pp-template-string =
+    ast2abox(|[<import-term(include/Template.generated.pp.af)>,
+               <import-term(include/Template.pp.af)>]);
+    box2text-string(|100)
+
+strategies
+  
+  /**
+   * Processes an import during semantic analysis.
+   * Ensures proper caching of files and prevents
+   * processing duplicate imports more than once.
+   *
+   * @param resolve-path  Resolves the filesystem path of this import
+   * @param parse-file    Parses a file (optionally removing definition bodies
+   *                      so only signatures are stored in the cache)
+   * @param record-declarations
+   *                      Performs semantic analysis on a tree
+   */
+  open-import(resolve-path, parse-file, record-declarations):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path       := <resolve-path> import;
+        cache-path := <import-cache-path> path;
+        if not(<IsImported> path) then
+          rules(
+            IsImported: path
+          );
+          ( <is-newer> (cache-path, path);
+            file := <ReadFromFile> cache-path
+          <+
+            file := <parse-file> path;
+            if <file-exists> path then
+              // Only cache if on filesystem (e.g., ignore libstratego-lib)
+              <WriteToBinaryFile> (cache-path, file)
+            end        
+          );
+          {| CurrentFile:
+            rules(CurrentFile := path);
+            <record-declarations> file
+          |}
+        end
+      end
+
+  open-wildcard-import(resolve-path, parse-file, record-declarations, is-source-file):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path := <resolve-path> import;
+        readdir;
+        list-loop(
+          if is-source-file then
+            <open-import(id, parse-file, record-declarations)>
+              $[[path]/[<id>]]
+          <+
+            try(?one-failed)
+          end
+        );
+        not(!one-failed)
+      end
+  
+  import-cache-path:
+    full-path -> cache-path
+    with
+      project-path := <project-path>;
+      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
+      full-path'   := <string-replace(|"/", "+"); string-replace(|"\\", "+"); string-replace(|":", "+")> full-path;
+      cache-path   := $[[cache-dir]/[full-path'].sig]
+
+  project-path = prim("SSL_EXT_projectpath")
+  
+  plugin-path = prim("SSL_EXT_pluginpath")
+  
+  candidate-sorts = prim("SSL_EXT_candidatesorts")
+
+  is-newer:
+    (file1, file2) -> <id>
+    where
+      <gt> (<file-exists; modification-time> file1, <file-exists; modification-time> file2) 
+
+strategies
+  
+  editor-init =
+    // Ensure all dynamic rules are properly scoped
+    try(dr-scope-all-end);
+    dr-scope-all-start
+  
+  refresh-workspace-file:
+    path -> <prim("SSL_EXT_refreshresource", path)>
+  
+  string-starts-with-capital =
+    explode-string; Hd; is-upper
+
+strategies
+  
+  origin-term      = prim("SSL_EXT_origin_term", <id>)
+  origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-location  = prim("SSL_EXT_origin_location", <id>)
+  origin-line      = origin-location => (<id>, _, _, _)
+  origin-column    = origin-location => (_, <id>, _, _)
+  origin-strip     = prim("SSL_EXT_origin_strip", <id>)
+  origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+  
+  origin-surrounding-comments =
+    prim("SSL_EXT_origin_surrounding_comments", "Template", <id>)
+    
+  origin-documentation-comment =
+    origin-surrounding-comments;
+    filter(string-as-chars(documentation-comment-chars));
+    concat-strings
+  
+  documentation-comment-chars:
+    ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
+  
+  origin-track-forced(s) =
+    ![<id>]; all(s); ?[<id>]
+
+strategies
+
+  desugar-position(desugar|ast):
+    position -> position'
+    where
+      ast'  := <at-position(!<id>{MARKER()}|position)> ast;
+      ast'' := <topdown(repeat(preserve-annos({?x; desugar; not(?x)})))> ast';
+      position' := <position-of-term({?_{a*}; <one(?MARKER())> a*})> ast''
+   
+  at-position(s|position):
+    c#(t*) -> t'
+    where
+      !position => [i | position']
+    where
+      t' := c#(<at-index(at-position(s|position'))> (i, t*))
+
+  at-position(s|position):
+    t -> t'
+    where
+      !position => [];
+      t' := <s> t
+
+  position-of-term(is-term):
+    t -> []
+    where
+      is-term
+  
+  position-of-term(is-term):
+    _#(t*) -> <position-of-term(is-term|0)> t*
+  
+  position-of-term(is-term|start-index):
+    [t | t*] -> position
+    where
+      if i* := <position-of-term(is-term)> t then
+        position := [start-index | i*]
+      else
+        position := <position-of-term(is-term | <inc> start-index)> t*
+      end
+
+  term-at-position(|position):
+    t -> t'
+    where
+      at-position(?t'|position) 
+
+  parent-at-position(|position):
+    t -> t'
+    where
+      !position => [i, _];
+      t' := <subterm-at(|i)> t
+  
+  parent-at-position(|position):
+    t -> <parent-at-position(|position')> t'
+    where
+      !position => [i | position' @ [_, _ | _]];
+      t' := <subterm-at(|i)> t
+
+  subterm-at(|index):
+    _#(t*) -> <index(|<inc> index)> t*
+  
+signature constructors
+
+  COMPLETION : String -> Term
+  NOCONTEXT  : Term   -> Term
+  MARKER     : Term
+
+  // Below are copies of the signatures of the terms used in example
+  // trans/template.str file. These definitions should also be automatically 
+  // generated in the imported include/Template.str module. However,
+  // to ensure that the example transformation doesn't break when the
+  // syntax is changed, we also hard-coded them here.
+          
+  Module   : ID * List(Entity)   -> Module
+  Entity   : ID * List(Property) -> Entity
+  Property : ID * Type           -> Property
+  Type     : ID                  -> Type
+
+strategies
+  
+  // Set markers for a given file. Use when checking files from a queued strategy.
+  // Current term: (ast-desugared, errors, warnings, notes) tuple
+  // ast: the root node of the file to set markers on 
+  set-markers(|ast) = prim("SSL_EXT_set_markers", ast)
+
+  // Indicate that one or more files need analysis. 
+  // Current term: ss a list of absolute file paths, or a single absolute file path to analyze
+  queue-analysis = 
+       (is-list; list-loop(queue-analysis))
+    <+ prim("SSL_EXT_queue_analysis")
+
+  // Set the total number of work units to complete. Can be called multiple times. 
+  // Current term: number of work units (int).
+  set-total-work-units = prim("SSL_EXT_set_total_work_units")
+  
+  // Complete one work unit and update progress monitors.
+  // Current term: ignored
+  complete-work-unit = prim("SSL_EXT_complete_work_unit")
+  
+  // Queue a strategy for background processing with a progress indicator.
+  // Current term: the term to pass to the background strategy
+  // s: the strategy, as string
+  // description: name of the task (will be shown in progress view)
+  queue-strategy(|s,description) = prim("SSL_EXT_queue_strategy", s, description)
+  
+  // Return the result of this strategy to indicate a non-completed (backgrounded) analysis.
+  // Editor services (hover, resolve) will be delayed until a complete analysis is performed. 
+  set-analysis-backgrounded = !"BACKGROUNDED"
+  

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/refactor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/refactor-common.generated.str	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,67 @@
+module lib/refactor-common.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+
+strategies //transformation
+
+/**
+ * Replaces elements in a list (once, starting from the right)
+ * @param match strategy for partial list
+ * @param new elements List(b)
+ * @type List(a) -> List(a,b)
+ */
+replace-sublist(match-sublist|new-elems): 
+  list -> <
+    at-suffix(match-sublist;!new-elems) <+
+    (
+      init; 
+      replace-sublist(match-sublist|new-elems);
+      at-end(![<last> list])
+    )
+  > list 
+
+/**
+ * Inserts an element at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list element 
+ * @type Term -> Term
+ */
+insert-elem(|pos, elem)=
+  insert-sublist(|pos, [elem])
+
+/**
+ * Inserts a list of elements at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list elements 
+ * @type Term -> Term
+ */	
+insert-sublist(|pos, elems)=
+  at-position(
+    split-at(|<last> pos);
+    ?(prefix, suffix);
+    <concat>[prefix, elems, suffix]
+    |<init> pos
+  )
+
+
+strategies //user-input
+
+/**
+ * Opens an input dialog for one string value that represents an identifier
+ * The language is used to check if the input value matches the identifier pattern
+ * @type (String, String, String, String) -> String
+ */
+input-dialog:
+  (language, title, label, default-value) -> <prim("SSL_EXT_newnamedialog", language, title, label, default-value)>
+  
+input-dialog:
+  (title, label, default-value) -> <input-dialog>("", title, label, default-value)
+
+strategies //pp-table
+	
+get-pp-table=
+  import-term(include/Template.generated.pp.af)
+	

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/plugin.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/plugin.xml	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<?eclipse version="3.0"?>
+
+<plugin>
+       <extension point="org.eclipse.imp.runtime.languageDescription">
+          <language extensions="tmpl" description="Template" language="Template" derivedFrom="DynamicRoot" validator="org.strategoxt.imp.editors.template.TemplateValidator" validatorClass="org.strategoxt.imp.editors.template.TemplateValidator"></language>
+       </extension>
+       <extension id="org.strategoxt.imp.editors.template.parser" name="Template Parser" point="org.eclipse.imp.runtime.parser">
+          <parser class="org.strategoxt.imp.editors.template.TemplateParseController" language="Template">
+          </parser>
+       </extension>    
+    </plugin>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Common.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Common.sdf	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,46 @@
+module Common
+
+exports
+
+  lexical syntax
+  
+    [a-zA-Z][a-zA-Z0-9]* -> ID
+    "-"? [0-9]+          -> INT
+    
+    "\"" StringChar* "\"" -> STRING
+    ~[\"\n]               -> StringChar
+    "\\\""                -> StringChar
+    BackSlashChar         -> StringChar
+    "\\"                  -> BackSlashChar
+    
+    [\ \t\n\r] -> LAYOUT
+    
+    [\*]                             -> CommentChar
+    "/*" (~[\*] | CommentChar)* "*/" -> LAYOUT
+    "//" ~[\n\r]* ([\n\r] | EOF)     -> LAYOUT
+    
+    -> EOF
+  
+  lexical restrictions
+  
+    %% Ensure greedy matching for lexicals
+  
+    CommentChar   -/- [\/]
+    INT           -/- [0-9]
+    ID            -/- [a-zA-Z0-9\_]
+    
+    %% EOF may not be followed by any char
+    
+    EOF           -/- ~[]
+
+    %% Backslash chars in strings may not be followed by " 
+    
+    BackSlashChar -/- [\"]
+
+  context-free restrictions
+  
+    %% Ensure greedy matching for comments
+
+    LAYOUT? -/- [\ \t\n\r]
+    LAYOUT? -/- [\/].[\/]
+    LAYOUT? -/- [\/].[\*]

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.pp
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.pp	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,2 @@
+%% Pretty printing table (see also Template.generated.pp)
+[]

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,17 @@
+%% Grammar for the Template language
+%% By default, based on an example "entities" syntax
+module Template
+
+imports Common
+
+exports
+
+  context-free start-symbols
+    Start
+
+  context-free syntax
+  
+    "module" ID Definition*       -> Start {cons("Module")}
+    "entity" ID "{" Property* "}" -> Definition {cons("Entity")}
+    ID ":" Type                   -> Property {cons("Property")}
+    ID                            -> Type {cons("Type")}

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/example.tmpl
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/example.tmpl	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,18 @@
+module example
+
+// Example "Template" program (see syntax/Template.sdf for the grammar)
+
+entity User {
+  name     : String
+  password : String
+  homepage : URL
+}
+
+entity BlogPosting {
+  poster : User
+  body   : String
+}
+
+entity URL {
+  location : String
+}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:32:59 2011	(r22731)
@@ -0,0 +1,27 @@
+module template
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/Template
+  lib/editor-common.generated
+
+rules // Main editor interface (defined by editor/Template-Builders and -References.esv)
+
+  // Analyzes the current program, returning a tuple with errors, warnings, and notes;
+  // each a list of (term, message) tuples or simply (message) terms.
+  editor-analyze:
+    (ast, path, project-path) -> (ast, errors, warnings, notes)
+    with
+      editor-init;
+      errors   := [];
+      warnings := [];
+      notes    := []
+
+  // Prints the abstract syntax ATerm of a selection.
+  generate-aterm:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"aterm")> path;
+      result   := selected // we just return the input term

From tobivollebregt at gmail.com  Tue May  3 13:33:09 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:33:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22732 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: syntax test
Message-ID: <20110503113309.EE96CCC1B0@mx4.tudelft.nl>

Author: tvo
Date: Tue May  3 11:33:09 2011
New Revision: 22732
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22732&sc=1

Log:
Syntax for "SDF with templates" language

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Module.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SdfKeywords.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SdfRenamed.sdf
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.pp
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Common.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/example.tmpl

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Common.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Common.sdf	Tue May  3 11:32:59 2011	(r22731)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Common.sdf	Tue May  3 11:33:09 2011	(r22732)
@@ -3,42 +3,44 @@
 exports
 
   lexical syntax
-  
-    [a-zA-Z][a-zA-Z0-9]* -> ID
-    "-"? [0-9]+          -> INT
-    
+
+    [a-zA-Z]                          -> ID
+    [a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9] -> ID
+
+    "-"? [0-9]+ -> INT
+
     "\"" StringChar* "\"" -> STRING
     ~[\"\n]               -> StringChar
     "\\\""                -> StringChar
     BackSlashChar         -> StringChar
     "\\"                  -> BackSlashChar
-    
+
     [\ \t\n\r] -> LAYOUT
-    
+
     [\*]                             -> CommentChar
     "/*" (~[\*] | CommentChar)* "*/" -> LAYOUT
     "//" ~[\n\r]* ([\n\r] | EOF)     -> LAYOUT
-    
+
     -> EOF
-  
+
   lexical restrictions
-  
+
     %% Ensure greedy matching for lexicals
-  
+
     CommentChar   -/- [\/]
     INT           -/- [0-9]
-    ID            -/- [a-zA-Z0-9\_]
-    
+    ID            -/- [a-zA-Z0-9\-]
+
     %% EOF may not be followed by any char
-    
+
     EOF           -/- ~[]
 
-    %% Backslash chars in strings may not be followed by " 
-    
+    %% Backslash chars in strings may not be followed by "
+
     BackSlashChar -/- [\"]
 
   context-free restrictions
-  
+
     %% Ensure greedy matching for comments
 
     LAYOUT? -/- [\ \t\n\r]

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Module.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Module.sdf	Tue May  3 11:33:09 2011	(r22732)
@@ -0,0 +1,24 @@
+module Module
+imports
+	Common
+	SdfKeywords
+  SdfRenamed
+
+exports
+  lexical syntax
+    [a-zA-Z0-9\-\_\.]+ -> FileName
+    {FileName "/"}+    -> ModuleName
+
+  lexical restrictions
+    FileName    -/- [a-zA-Z0-9\-\_\.]
+
+  context-free syntax
+    %% modules
+    "module" ModuleName Imports Grammar* -> Module  {cons("Module")}
+    "imports" Import+ -> Imports {cons("Imports")}
+                      -> Imports {cons("NoImports")}
+
+    ModuleName -> Import {cons("Import")}
+
+  context-free syntax
+    SDF-Grammar -> Grammar {cons("SDF-Grammar")}

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SdfKeywords.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SdfKeywords.sdf	Tue May  3 11:33:09 2011	(r22732)
@@ -0,0 +1,28 @@
+module SdfKeywords
+
+exports
+  context-free syntax
+    "aliases"           -> ModuleName {reject}
+    "lexical"           -> ModuleName {reject}
+    "priorities"        -> ModuleName {reject}
+    "context-free"      -> ModuleName {reject}
+    "definition"        -> ModuleName {reject}
+    "syntax"            -> ModuleName {reject}
+    "variables"         -> ModuleName {reject}
+    "module"            -> ModuleName {reject}
+    "imports"           -> ModuleName {reject}
+    "exports"           -> ModuleName {reject}
+    "hiddens"           -> ModuleName {reject}
+    "left"              -> ModuleName {reject}
+    "right"             -> ModuleName {reject}
+    "assoc"             -> ModuleName {reject}
+    "non-assoc"         -> ModuleName {reject}
+    "bracket"           -> ModuleName {reject}
+    "sorts"             -> ModuleName {reject}
+    "bracket"           -> ModuleName {reject}
+    "sorts"             -> ModuleName {reject}
+    "restrictions"      -> ModuleName {reject}
+
+  %% non-SDF keywords
+  context-free syntax
+    "templates"         -> ModuleName {reject}

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SdfRenamed.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SdfRenamed.sdf	Tue May  3 11:33:09 2011	(r22732)
@@ -0,0 +1,70 @@
+module SdfRenamed
+
+imports
+
+  languages/sdf2/syntax/Sdf2 [
+
+    %% LAYOUT => SDF-DISABLED
+
+    "left":Grammar "right":Grammar -> Grammar => -> SDF-DISABLED
+    "module" ModuleName list:ImpSection* Sections -> Module => -> SDF-DISABLED
+    ImpSection -> Grammar => -> SDF-DISABLED
+
+%% parse-sdf-definition -i SDF.def |
+%%   grep -E -o 'sort\("[^"]+"\)' | sort | uniq |
+%%   sed -r 's/sort\("([^"]+)"\)/\1 => SDF-\1/g'
+    AFun => SDF-AFun
+    Alias => SDF-Alias
+    Aliases => SDF-Aliases
+    Annotation => SDF-Annotation
+    ArgumentIndicator => SDF-ArgumentIndicator
+    Associativity => SDF-Associativity
+    ATerm => SDF-ATerm
+    ATermAttribute => SDF-ATermAttribute
+    Attribute => SDF-Attribute
+    Attributes => SDF-Attributes
+    Character => SDF-Character
+    CharClass => SDF-CharClass
+    CharRange => SDF-CharRange
+    CharRanges => SDF-CharRanges
+    Definition => SDF-Definition
+    FunctionName => SDF-FunctionName
+    Grammar => SDF-Grammar
+    Group => SDF-Group
+    IdCon => SDF-IdCon
+    Import => SDF-Import
+    Imports => SDF-Imports
+    ImpSection => SDF-ImpSection
+    IntCon => SDF-IntCon
+    Label => SDF-Label
+    Lookahead => SDF-Lookahead
+    Lookaheads => SDF-Lookaheads
+    Module => SDF-Module
+    ModuleId => SDF-ModuleId
+    ModuleName => SDF-ModuleName
+    ModuleWord => SDF-ModuleWord
+    NatCon => SDF-NatCon
+    NumChar => SDF-NumChar
+    OptCharRanges => SDF-OptCharRanges
+    OptExp => SDF-OptExp
+    Priorities => SDF-Priorities
+    Priority => SDF-Priority
+    Production => SDF-Production
+    Productions => SDF-Productions
+    RealCon => SDF-RealCon
+    Renaming => SDF-Renaming
+    Renamings => SDF-Renamings
+    Restriction => SDF-Restriction
+    Restrictions => SDF-Restrictions
+    SDF => SDF-SDF
+    Section => SDF-Section
+    Sections => SDF-Sections
+    ShortChar => SDF-ShortChar
+    SingleQuotedStrChar => SDF-SingleQuotedStrChar
+    SingleQuotedStrCon => SDF-SingleQuotedStrCon
+    Sort => SDF-Sort
+    StrChar => SDF-StrChar
+    StrCon => SDF-StrCon
+    Symbol => SDF-Symbol
+    Symbols => SDF-Symbols
+  ]

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf	Tue May  3 11:32:59 2011	(r22731)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf	Tue May  3 11:33:09 2011	(r22732)
@@ -1,17 +1,78 @@
-%% Grammar for the Template language
-%% By default, based on an example "entities" syntax
 module Template
-
-imports Common
+imports
+  Common
+  Module
+  SdfKeywords
+  SdfRenamed
 
 exports
-
   context-free start-symbols
-    Start
+    Module
 
   context-free syntax
-  
-    "module" ID Definition*       -> Start {cons("Module")}
-    "entity" ID "{" Property* "}" -> Definition {cons("Entity")}
-    ID ":" Type                   -> Property {cons("Property")}
-    ID                            -> Type {cons("Type")}
+    %% "grammars"
+    "templates" TemplateProduction* -> Grammar {cons("Templates")}
+    %% "completion" "templates" CompletionTemplate* -> Grammar {cons("Templates")}
+
+    %% template productions
+    ID "=" SDF-Symbols SDF-Attributes -> SDF-Production {cons("SdfProduction")}
+    ID "=" Template SDF-Attributes -> TemplateProduction {cons("TemplateProduction")}
+
+    %% placeholders
+    "<" PlaceholderPrefix1 PlaceholderSort PlaceholderSuffix PlaceholderOptions ">" -> TemplatePart1 {cons("Placeholder")}
+    "[" PlaceholderPrefix2 PlaceholderSort PlaceholderSuffix PlaceholderOptions "]" -> TemplatePart2 {cons("Placeholder")}
+
+    -> PlaceholderPrefix1 {cons("None")}
+    -> PlaceholderPrefix2 {cons("None")}
+    PlaceholderText1 ":" -> PlaceholderPrefix1 {cons("Text")}
+    PlaceholderText2 ":" -> PlaceholderPrefix2 {cons("Text")}
+
+    ID -> PlaceholderSort {cons("Sort")}
+
+        -> PlaceholderSuffix {cons("None")}
+    "*" -> PlaceholderSuffix {cons("Star")}
+    "+" -> PlaceholderSuffix {cons("Plus")}
+    "?" -> PlaceholderSuffix {cons("Option")}
+
+                                 -> PlaceholderOptions {cons("NoOptions")}
+    ";" {PlaceholderOption ","}+ -> PlaceholderOptions {cons("Options")}
+
+    "wrap"                 -> PlaceholderOption {cons("Wrap")}
+    "anchor"               -> PlaceholderOption {cons("Anchor")}
+    "separator" "=" STRING -> PlaceholderOption {cons("Separator")}
+
+  syntax
+    %% templates
+    "<<" <TemplatePart1-CF>* ">>" -> <Template-CF> {cons("Template")}
+    <TemplatePart1-LEX>   -> <TemplatePart1-CF> {cons("String")}
+    <TemplateLayout-LEX>  -> <TemplatePart1-CF> {cons("Layout")}
+    <TemplateNewline-LEX> -> <TemplatePart1-CF> {cons("Newline")}
+
+    "[[" <TemplatePart2-CF>* "]]" -> <Template-CF> {cons("Template")}
+    <TemplatePart2-LEX>   -> <TemplatePart2-CF> {cons("String")}
+    <TemplateLayout-LEX>  -> <TemplatePart2-CF> {cons("Layout")}
+    <TemplateNewline-LEX> -> <TemplatePart2-CF> {cons("Newline")}
+
+    "\"" <TemplatePart3-CF>* "\"" -> <Template-CF> {cons("Template")}
+    <TemplatePart3-LEX>   -> <TemplatePart3-CF> {cons("String")}
+    <TemplateLayout-LEX>  -> <TemplatePart3-CF> {cons("Layout")}
+    <TemplateNewline-LEX> -> <TemplatePart3-CF> {cons("Newline")}
+
+  lexical syntax
+    [\ \t\r]* [\n]   -> TemplateNewline
+    [\ \t\r]+        -> TemplateLayout
+    ~[\<\>\ \t\r\n]+ -> TemplatePart1
+    ~[\[\]\ \t\r\n]+ -> TemplatePart2
+    ~[\"\ \t\r\n]+   -> TemplatePart3
+
+    ~[\<\>\:]+ -> PlaceholderText1
+    ~[\[\]\:]+ -> PlaceholderText2
+
+  lexical restrictions
+    TemplateLayout -/- [\ \t\r\n]
+    TemplatePart1  -/- ~[\<\>\ \t\r\n]
+    TemplatePart2  -/- ~[\[\]\ \t\r\n]
+    TemplatePart3  -/- ~[\"\ \t\r\n]
+
+    PlaceholderText1 -/- ~[\:]
+    PlaceholderText2 -/- ~[\:]

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/example.tmpl
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/example.tmpl	Tue May  3 11:32:59 2011	(r22731)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/example.tmpl	Tue May  3 11:33:09 2011	(r22732)
@@ -1,18 +1,27 @@
 module example
 
-// Example "Template" program (see syntax/Template.sdf for the grammar)
+templates
 
-entity User {
-  name     : String
-  password : String
-  homepage : URL
-}
-
-entity BlogPosting {
-  poster : User
-  body   : String
-}
-
-entity URL {
-  location : String
-}
\ No newline at end of file
+  Start = <<
+    module <modulename : ID>
+    <Definition* ; separator="\n">
+  >> {cons("Module")}
+
+  Definition = <<
+    entity <ID> {
+      <Property* ; separator="\n">
+    }
+  >> {cons("Entity"), blank}
+
+  Property = [[
+    [x : ID] : [T : Type]
+  ]] {cons("Property"), blank}
+
+context-free syntax
+
+  Type = ID {cons("Type")}
+
+lexical syntax
+
+  [A-Za-z][A-Za-z0-9]* -> ID
+  CONTENTCOMPLETE = [A-Za-z0-9]* "CONTENTCOMPLETE" [0-9]+ {cons("CONTENTCOMPLETE")}

From tobivollebregt at gmail.com  Tue May  3 13:33:18 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:33:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22733 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: .
	syntax/sdf2 trans/lib
Message-ID: <20110503113318.3DC0E108C002@mx3.tudelft.nl>

Author: tvo
Date: Tue May  3 11:33:18 2011
New Revision: 22733
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22733&sc=1

Log:
SDF concrete syntax embedded in Stratego

with:
- embedding of attributes
- parenthesizing

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/Sdf2.pp.af
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/sdf2/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/sdf2/SDF.def
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/sdf2/Stratego-Sdf2.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/lib/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/lib/sdf-desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/lib/sdf-ensugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/lib/sdf-parenthesize.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/lib/sdf-pretty-print.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/Sdf2.pp.af
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/Sdf2.pp.af	Tue May  3 11:33:18 2011	(r22733)
@@ -0,0 +1 @@
+PP-Table([PP-Entry(Path1("definition"),[V([SOpt(VS,"1")],[FBOX(KW,S("\"definition\"")),Arg("1")])]),PP-Entry(Path1("module"),[V([],[H([],[FBOX(KW,S("\"module\"")),Arg("1")]),V([SOpt(VS,"1")],[Arg("2"),Arg("3")])])]),PP-Entry(Path1("module"),[V([],[H([],[FBOX(KW,S("\"module\"")),Arg("1")]),V([SOpt(VS,"1")],[Arg("2"),Arg("3")])])]),PP-Entry(Path("module",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("imports"),[H([],[FBOX(KW,S("\"imports\"")),HV([],[Arg("1")])])]),PP-Entry(Path1("exports"),[V([SOpt(IS,"2")],[FBOX(KW,S("\"exports\"")),V([SOpt(VS,"1")],[Arg("1")])])]),PP-Entry(Path1("hiddens"),[V([SOpt(IS,"2")],[FBOX(KW,S("\"hiddens\"")),V([SOpt(VS,"1")],[Arg("1")])])]),PP-Entry(Path1("module"),[Arg("1")]),PP-Entry(Path1("renamed-module"),[V([SOpt(VS,"0"),SOpt(IS,"2")],[Arg("1"),Arg("2")])]),PP-Entry(Path1("syntax"),[V([SOpt(IS,"2")],[FBOX(KW,S("\"syntax\"")),A(AOPTIONS([AL([]),AL([]),AL([]),AL([])]),[],[Arg("1")])])]),PP-Entry(Path1("prod"),[R([],[H([],[Arg("1")]),S("
 \"->\""),H([SOpt(HS,"0")],[Arg("2")]),Arg("3")])]),PP-Entry(Path1("no-attrs"),[]),PP-Entry(Path1("attrs"),[H([SOpt(HS,"0")],[S("\"{\""),H([],[Arg("1")]),S("\"}\"")])]),PP-Entry(Path("attrs",[selector("1","iter-star-sep")]),[H([SOpt(HS,"0")],[Arg("1"),FBOX(KW,S("\",\""))])]),PP-Entry(Path1("lexical-syntax"),[V([SOpt(IS,"2")],[H([],[FBOX(KW,S("\"lexical\"")),FBOX(KW,S("\"syntax\""))]),A(AOPTIONS([AL([]),AL([]),AL([]),AL([])]),[],[Arg("1")])])]),PP-Entry(Path1("context-free-syntax"),[V([SOpt(IS,"2")],[H([],[FBOX(KW,S("\"context-free\"")),FBOX(KW,S("\"syntax\""))]),A(AOPTIONS([AL([]),AL([]),AL([]),AL([])]),[],[Arg("1")])])]),PP-Entry(Path1("variables"),[V([SOpt(IS,"2")],[FBOX(KW,S("\"variables\"")),A(AOPTIONS([AL([]),AL([]),AL([]),AL([])]),[],[Arg("1")])])]),PP-Entry(Path1("lexical-variables"),[V([SOpt(IS,"2")],[H([],[FBOX(KW,S("\"lexical\"")),FBOX(KW,S("\"variables\""))]),A(AOPTIONS([AL([]),AL([]),AL([]),AL([])]),[],[Arg("1")])])]),PP-Entry(Path1("lexical-priorities"),[V([SOpt(
 IS,"2")],[H([],[FBOX(KW,S("\"lexical\"")),FBOX(KW,S("\"priorities\"") BOX(KW,S("\"-/-\"")),H([],[Arg("2")])])])]),PP-Entry(Path1("aliases"),[V([SOpt(IS,"2")],[FBOX(KW,S("\"aliases\"")),A(AOPTIONS([AL([]),AL([]),AL([])]),[],[Arg("1")])])]),PP-Entry(Path1("alias"),[R([],[H([],[Arg("1")]),FBOX(KW,S("\"->\"")),H([],[Arg("2")])])]),PP-Entry(Path1("empty-grammar"),[FBOX(KW,S("\"(/)\""))]),PP-Entry(Path1("conc-grammars"),[V([SOpt(VS,"1")],[Arg("1"),Arg("2")])]),PP-Entry(Path1("reject"),[FBOX(KW,S("\"reject\""))]),PP-Entry(Path1("prefer"),[FBOX(KW,S("\"prefer\""))]),PP-Entry(Path1("avoid"),[FBOX(KW,S("\"avoid\""))]),PP-Entry(Path1("assoc"),[Arg("1")]),PP-Entry(Path1("left"),[FBOX(KW,S("\"left\""))]),PP-Entry(Path1("right"),[FBOX(KW,S("\"right\""))]),PP-Entry(Path1("non-assoc"),[FBOX(KW,S("\"non-assoc\""))]),PP-Entry(Path1("assoc"),[FBOX(KW,S("\"assoc\""))]),PP-Entry(Path1("bracket"),[FBOX(KW,S("\"bracket\""))]),PP-Entry(Path1("char-class"),[Arg("1")]),PP-Entry(Path1("seq-lookahead"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("single"),[Ar
 g("1")]),PP-Entry(Path1("alt"),[Arg("1"),FBOX(KW,S("\"|\"")),Arg("2")]),PP-Entry(Path1("list"),[FBOX(KW,S("\"[[\"")),Arg("1"),FBOX(KW,S("\"] ,[Arg("1")]),PP-Entry(Path1("parameterized"),[H([SOpt(HS,"0")],[Arg("1"),FBOX(KW,S("\"[\"")),H([SOpt(HS,"1")],[Arg("2")]),FBOX(KW,S("\"]\""))])]),PP-Entry(Path("parameterized",[selector("2","iter")]),[Arg("1")]),PP-Entry(Path1("opt"),[H([SOpt(HS,"0")],[H([],[Arg("1")]),FBOX(KW,S("\"?\""))])]),PP-Entry(Path1("iter"),[H([SOpt(HS,"0")],[H([],[Arg("1")]),FBOX(KW,S("\"+\""))])]),PP-Entry(Path1("iter-star"),[H([SOpt(HS,"0")],[H([],[Arg("1")]),FBOX(KW,S("\"*\""))])]),PP-Entry(Path1("iter-sep"),[H([SOpt(HS,"0")],[S("\"{\""),H([],[Arg("1"),Arg("2")]),S("\"}\""),FBOX(KW,S("\"+\""))])]),PP-Entry(Path1("iter-star-sep"),[H([SOpt(HS,"0")],[S("\"{\""),H([],[Arg("1"),Arg("2")]),S("\"}\""),FBOX(KW,S("\"*\""))])]),PP-Entry(Path1("iter-n"),[H([SOpt(HS,"0")],[S("\"{\""),Arg("1"),S("\"}\""),Arg("2"),FBOX(KW,S("\"+\""))])]),PP-Entry(Path1("iter-sep-n"),[H([SOpt(HS,"0")],[S("\"{\""),H([],[Arg("1"),Arg("2")]),S("\"}\""),Arg("3"),FBOX(KW,S("\"+\""))])]),PP-Entry(Path1("tuple"),[FBOX(KW,S("\"<\"")),A
 rg("1"),FBOX(KW,S("\",\"")),Arg("2"),FBOX(KW,S("\">\""))]),PP-Entry(Path("tuple",[selector("2","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("pair"),[Arg("1"),FBOX(KW,S("\"#\"")),Arg("2")]),PP-Ent ath1("isect"),[Arg("1"),FBOX(KW,S("\"/\\\\\"")),Arg("2")]),PP-Entry(Path1("union"),[Arg("1"),FBOX(KW,S("\"\\\\/\"")),Arg("2")]),PP-Entry(Path1("char-class"),[Arg("1")]),PP-Entry(Path1("simple-group"),[Arg("1")]),PP-Entry(Path1("prods-group"),[H([],[FBOX(KW,S("\"{\"")),V([],[Arg("1")]),FBOX(KW,S("\"}\""))])]),PP-Entry(Path1("assoc-group"),[V([SOpt(VS,"0")],[V([SOpt(VS,"0"),SOpt(IS,"2")],[H([SOpt(HS,"0")],[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\":\""))]),V([SOpt(VS,"0")],[Arg("2")])]),FBOX(KW,S("\"}\""))])]),PP-Entry(Path("assoc-group",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("chain"),[Arg("1")]),PP-Entry(Path("chain",[selector("1","iter-sep")]),[H([],[Arg("1"),FBOX(KW,S("\">\""))])]),PP-Entry(Path1("assoc"),[HV([],[Arg("1"),Arg("2"),Arg("3")])]),PP-Entry(Path1("lifting"),[FBOX(KW,S("\"`\"")),Arg("1"),FBOX(KW,S("\"`\""))]),PP-Entry(Path1("empty"),[FBOX(KW,S("\"(\"")),FBOX(KW,S("\")\""))]),PP-Entry(Path1("seq"),[FBOX(KW,S("\"(\"")),Arg("1"),Arg("2"),FBOX(KW,S("
 \")\""))]),PP-Entry(Path("seq",[selector("2","iter")]),[Arg("1")]),PP-Entry(Path1("seq"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path("seq",[selector("1","iter")]),[Arg("1")]),PP-Entry(Path1("with-arguments"),[V([SOpt(VS,"0")],[Arg("1"),Arg("2")])]),PP-Entry(Pa "symbol"),[R([],[Arg("1"),S("\"=>\""),Arg("2")])]),PP-Entry(Path1("id"),[FBOX(KW,S("\"id\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("imp-section"),[Arg("1")]),PP-Entry(Path1("cf"),[H([SOpt(HS,"0")],[FBOX(KW,S("\"<\"")),Arg("1"),FBOX(KW,S("\"-CF\"")),FBOX(KW,S("\">\""))])]),PP-Entry(Path1("lex"),[H([SOpt(HS,"0")],[FBOX(KW,S("\"<\"")),Arg("1"),FBOX(KW,S("\"-LEX\"")),FBOX(KW,S("\">\""))])]),PP-Entry(Path1("varsym"),[H([SOpt(HS,"0")],[FBOX(KW,S("\"<\"")),Arg("1"),FBOX(KW,S("\"-VAR\"")),FBOX(KW,S("\">\""))])]),PP-Entry(Path1("layout"),[FBOX(KW,S("\"LAYOUT\""))]),PP-Entry(Path1("start"),[FBOX(KW,S("\"<START>\""))]),PP-Entry(Path1("file-start"),[FBOX(KW,S("\"<Start>\""))]),PP-Entry(Path1("top"),[FBOX(KW,S("\"\\\\TOP\""))]),PP-Entry(Path1("eof"),[FBOX(KW,S("\"\\\\EOF\""))]),PP-Entry(Path1("bot"),[FBOX(KW,S("\"\\\\BOT\""))]),PP-Entry(Path1("label_start"),[FBOX(KW,S("\"\\\\LABEL_START\""))]),PP-Entry(Path1("present"),[FBOX(KW,S("\"e\"")),Arg("1")]),PP-Entry
 (Path1("absent"),[]),PP-Entry(Path1("real-con"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2"),Arg("3")]),PP-Entry(Path1("natural"),[Arg("1")]),PP-Entry(Path1("positive"),[FBOX(KW,S("\"+\"")),Arg("1")]),PP-Entry(Path1("negative"),[FBOX(KW,S("\"-\"")),Arg("1")]),PP-Entry(Path1("qlit"),[Arg("1")]),PP-Entry(Path1("quoted"),[Arg("1")]),PP-Entry(Path1("uqlit"),[Ar "1"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("annotation",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("annotated-constant"),[Arg("1"),Arg("2")]),PP-Entry(Path1("annotated-list"),[Arg("1"),Arg("2")]),PP-Entry(Path1("annotated-fun"),[Arg("1"),Arg("2")]),PP-Entry(Path1("annotated-appl"),[Arg("1"),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\"")),Arg("3")]),PP-Entry(Path("annotated-appl",[selector("2","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("term"),[Arg("1")]),PP-Entry(Path1("placeholder"),[FBOX(KW,S("\"<\"")),Arg("1"),FBOX(KW,S("\">\""))]),PP-Entry(Path1("annotated-placeholder"),[FBOX(KW,S("\"<\"")),Arg("1"),FBOX(KW,S("\">\"")),Arg("2")]),PP-Entry(Path1("context-free-start-symbols"),[V([SOpt(IS,"2")],[H([],[FBOX(KW,S("\"context-free\"")),FBOX(KW,S("\"start-symbols\""))]),HV([],[Arg("1")])])]),PP-Entry(Path1("kernel-start-symbols"),[V([SOpt(IS,"2")],[FBOX(KW,S("\"start-symbols\"")),HV([],[Arg("1")])])]),PP-Entry(Path1("lexical-start
 -symbols"),[V([SOpt(IS,"2")],[H([],[FBOX(KW,S("\"lexical\"")),FBOX(KW,S("\"start-symbols\""))]),HV([],[Arg("1")])])]),PP-Entry(Path1("bracket-symbol"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("Parenthetical"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\""))])])

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue May  3 11:33:09 2011	(r22732)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue May  3 11:33:18 2011	(r22733)
@@ -1,44 +1,59 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
 <project name="Template" default="all">
-        
-        <!-- Key input modules -->
-        <property name="sdfmodule" value="Template"/>
-        <property name="metasdfmodule" value="Stratego-Template"/>
-        <property name="esvmodule" value="Template"/>
-        <property name="strmodule" value="template"/>
-    
-        <!-- Project directories -->
-        <property name="trans" location="trans"/>
-        <property name="src-gen" location="editor/java"/>
-        <property name="syntax" location="syntax"/>
-        <property name="include" location="include"/>
-        <property name="lib" location="lib"/>
-        <property name="build" location="bin"/>
-        <property name="dist" location="bin/dist"/>
-        
-        <!-- Imports -->
-        <property name="build.sdf.imports" value=""/>
-        <property name="build.stratego.args" value="
+
+  <!-- Key input modules -->
+  <property name="sdfmodule" value="Template"/>
+  <property name="metasdfmodule" value="Stratego-Template"/>
+  <property name="esvmodule" value="Template"/>
+  <property name="strmodule" value="template"/>
+
+  <!-- Project directories -->
+  <property name="trans" location="trans"/>
+  <property name="src-gen" location="editor/java"/>
+  <property name="syntax" location="syntax"/>
+  <property name="include" location="include"/>
+  <property name="lib" location="lib"/>
+  <property name="build" location="bin"/>
+  <property name="dist" location="bin/dist"/>
+
+  <!-- Imports -->
+  <property name="build.sdf.imports" value="-Idef &quot;${basedir}/syntax/sdf2/SDF.def&quot;"/>
+  <property name="build.stratego.args" value="
                         --library
                         -I &quot;${trans}&quot;
                         -I &quot;${basedir}&quot;
                         -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm"/>
-        
-        <!-- Optional: external .def and .jar locations
+
+  <!-- Optional: external .def and .jar locations
         <property name="externaldef" location="syntax/${sdfmodule}.def"/>
         <property name="externaljar" value="../lib.jar"/>
         <property name="externaljarflags" value="-la org.lib"/>
         -->
-    
-        <!-- Environment configuration for command-line builds -->
-        <condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
-            <isset property="eclipse.spoofaximp.nativeprefix"/>
-        </condition>
-        <property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin"/>
-    
-        <import file="build.generated.xml"/>
-    
-        <!-- Main target -->
-        <target name="all" depends="spoofaximp.default.jar"/>
-    </project>
+
+  <!-- Environment configuration for command-line builds -->
+  <condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
+    <isset property="eclipse.spoofaximp.nativeprefix"/>
+  </condition>
+  <property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin"/>
+
+  <import file="build.generated.xml"/>
+
+  <!-- Main target -->
+  <target name="all" depends="meta-sdf2table-stratego-sdf2,spoofaximp.default.jar" />
+
+  <!-- Target to create -Permissive grammar and parse table for Stratego-Sdf2.def -->
+  <target name="meta-sdf2table-stratego-sdf2">
+    <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
+    <antcall target="pack-sdf.helper">
+      <param name="syntax" value="${syntax}/sdf2" />
+      <param name="sdfmodule" value="Stratego-Sdf2" />
+      <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
+    </antcall>
+    <antcall target="sdf2table">
+      <param name="sdfmodule" value="Stratego-Sdf2" />
+      <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
+    </antcall>
+    <antcall target="meta-sdf2table.helper" />
+  </target>
+</project>

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/sdf2/SDF.def
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/sdf2/SDF.def	Tue May  3 11:33:18 2011	(r22733)
@@ -0,0 +1,610 @@
+definition
+module languages/sdf2/syntax/Aliases
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  sorts Alias Aliases
+  context-free syntax 
+    "aliases" Aliases              -> Grammar  {cons("aliases")}
+    Symbol arrow:"->" alias:Symbol -> Alias    {cons("alias")}
+    list:Alias*                    -> Aliases
+
+
+
+module languages/sdf2/syntax/Restrictions
+
+imports languages/sdf2/syntax/CC
+
+exports
+  sorts Lookahead Lookaheads Restriction Restrictions
+
+  context-free syntax
+    CharClass                          -> Lookahead  {cons("char-class")}
+    head:CharClass "." tail:Lookaheads -> Lookahead  {cons("seq")}
+
+    Lookahead                                -> Lookaheads  {cons("single")}
+    "left":Lookaheads "|" "right":Lookaheads -> Lookaheads  {cons("alt"),right}
+    "(" Lookaheads ")"                       -> Lookaheads  {bracket}
+    "[[" list:{Lookahead ","}* "]]"          -> Lookaheads  {cons("list")}
+
+    Symbols "-/-" Lookaheads -> Restriction  {cons("follow")}
+
+    list:Restriction* -> Restrictions
+
+    "restrictions" Restrictions -> Grammar  {cons("restrictions")}
+
+    "reject" -> Attribute  {cons("reject")}
+    "prefer" -> Attribute  {cons("prefer")}
+    "avoid"  -> Attribute  {cons("avoid")}
+
+  context-free priorities    
+    CharClass "." Lookaheads    -> Lookahead >
+    Lookaheads "|" Lookaheads   -> Lookaheads
+
+
+module languages/sdf2/syntax/Labels
+
+imports languages/sdf2/syntax/Kernel 
+        basic/StrCon
+
+exports 
+  sorts Label
+
+  context-free syntax
+    StrCon -> Label {cons("quoted")}
+    IdCon  -> Label {cons("unquoted")}
+
+    Label ":" Symbol -> Symbol  {cons("label")}
+
+module languages/sdf2/syntax/Literals
+
+imports languages/sdf2/syntax/Kernel 
+imports basic/StrCon
+imports basic/IdentifierCon
+
+exports
+  sorts FunctionName SingleQuotedStrCon SingleQuotedStrChar
+  lexical syntax
+
+    "\\n"                      -> SingleQuotedStrChar {cons("newline")}
+    "\\t"                      -> SingleQuotedStrChar {cons("tab")}
+    "\\'"                      -> SingleQuotedStrChar {cons("quote")}
+    "\\\\"                     -> SingleQuotedStrChar {cons("backslash")}
+    "\\" a:[0-9]b:[0-9]c:[0-9] -> SingleQuotedStrChar {cons("decimal")}
+    ~[\0-\31\n\t\'\\]          -> SingleQuotedStrChar {cons("normal")}
+
+    [\'] chars:SingleQuotedStrChar* [\']   -> SingleQuotedStrCon  {cons("default")}
+
+  context-free syntax
+    IdCon  -> FunctionName {cons("unquoted-fun")}
+    StrCon -> FunctionName {cons("quoted-fun")}
+
+  context-free syntax
+    string:StrCon                -> Symbol {cons("lit")}
+    ci-string:SingleQuotedStrCon -> Symbol {cons("ci-lit")}
+
+    fun:FunctionName "(" arguments:{Symbol ","}* ")" "->" result:Symbol Attributes 
+	-> Production  {avoid, cons("prefix-fun")}
+
+module languages/sdf2/syntax/Start-Symbols
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  context-free syntax
+  
+    "start-symbols" Symbols                -> Grammar {cons("kernel-start-symbols")} 
+    "lexical" "start-symbols" Symbols      -> Grammar {cons("lexical-start-symbols")}
+    "context-free" "start-symbols" Symbols -> Grammar {cons("context-free-start-symbols")}
+
+module languages/sdf2/syntax/Sorts
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  sorts Sort
+  lexical syntax
+    head:[A-Z]                          -> Sort {cons("one-char")}
+    head:[A-Z] middle:[A-Za-z0-9\-]* last:[A-Za-z0-9] -> Sort 
+	{cons("more-chars")}
+
+  context-free syntax
+    Sort                                    -> Symbol  {cons("sort")}
+    Sort "[[" parameters:{Symbol ","}+ "]]" -> Symbol  {cons("parameterized-sort")}
+
+    "sorts" Symbols -> Grammar {cons("sorts")}
+
+  lexical restrictions
+    Sort -/- [A-Za-z0-9]
+
+module languages/sdf2/syntax/Character
+
+
+
+exports
+  sorts Character NumChar ShortChar
+  lexical syntax
+    [\\] number:[0-9]+                     -> NumChar   {cons("digits")}
+    character:[a-zA-Z0-9]                  -> ShortChar {cons("regular")}
+    [\\] escape:~[\0-\31A-Za-mo-qsu-z0-9]  -> ShortChar {cons("escaped")}
+
+  context-free syntax
+    NumChar   -> Character {cons("numeric")}
+    ShortChar -> Character {cons("short")}
+    "\\TOP"   -> Character {cons("top")}
+    "\\EOF"   -> Character {cons("eof")}
+    "\\BOT"   -> Character {cons("bot")}
+    "\\LABEL_START" -> Character {cons("label_start")}
+
+module languages/sdf2/syntax/Character-Class
+
+imports languages/sdf2/syntax/Character
+
+exports
+  sorts CharClass CharRange CharRanges OptCharRanges 
+  context-free syntax 
+    Character                           -> CharRange
+    start:Character "-" end:Character   -> CharRange            {cons("range")}
+
+    CharRange                                   -> CharRanges
+    "left":CharRanges "right":CharRanges        -> CharRanges   {cons("conc"),right,memo}
+    "(" CharRanges ")"                          -> CharRanges   {bracket}
+
+                              -> OptCharRanges  {cons("absent")}
+    CharRanges                -> OptCharRanges  {cons("present")}
+
+    "[" OptCharRanges "]"                    -> CharClass  {cons("simple-charclass")}
+    "~" CharClass                            -> CharClass  {cons("comp")}
+    "left":CharClass "/" "right":CharClass   -> CharClass  {cons("diff"),left,memo}
+    "left":CharClass "/\\" "right":CharClass -> CharClass  {cons("isect"),left,memo}
+    "left":CharClass "\\/" "right":CharClass -> CharClass  {cons("union"),left}
+    "(" CharClass ")"                        -> CharClass  {bracket, avoid}
+
+  context-free priorities
+    "~" CharClass             -> CharClass >
+    CharClass "/" CharClass   -> CharClass >
+    CharClass "/\\" CharClass -> CharClass >
+    CharClass "\\/" CharClass -> CharClass           
+
+
+module languages/sdf2/syntax/CC
+
+imports languages/sdf2/syntax/Character-Class 
+        languages/sdf2/syntax/Kernel
+
+exports
+  context-free syntax
+    CharClass -> Symbol {cons("char-class")}
+
+module languages/sdf2/syntax/Priority
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  sorts Associativity ArgumentIndicator Group Priority Priorities
+
+  context-free syntax
+    "left"      -> Associativity  {cons("left")}
+    "right"     -> Associativity  {cons("right")}
+    "non-assoc" -> Associativity  {cons("non-assoc")}
+    "assoc"     -> Associativity  {cons("assoc")}
+
+    "bracket"     -> Attribute  {cons("bracket")}
+    Associativity -> Attribute  {cons("assoc")}
+
+    "<" arguments:{NatCon ","}+ ">" -> ArgumentIndicator {cons("default")}
+
+    Group ArgumentIndicator               -> Group {non-assoc,cons("with-arguments")}
+    Group "."                             -> Group {non-assoc,cons("non-transitive")}
+
+    Production                            -> Group  {cons("simple-group")}
+    "{" Productions "}"                   -> Group  {cons("prods-group")}
+    "{" Associativity ":" Productions "}" -> Group  {cons("assoc-group")}
+
+    list:{Group ">"}+                                    -> Priority  {cons("chain")}
+    "left":Group Associativity "right":Group             -> Priority  {cons("assoc")}
+%%    Production "<" arguments:{NatCon ","}+ ">" ">" Group -> Priority  {cons("argument")}
+
+    list:{Priority  ","}* -> Priorities
+
+    "priorities" Priorities  -> Grammar  {cons("priorities")}
+
+module languages/sdf2/syntax/Lifting
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  context-free syntax
+    left-quote:"`" Symbol right-quote:"`" -> Symbol  {cons("lifting")}
+
+module languages/sdf2/syntax/Regular
+
+imports languages/sdf2/syntax/Kernel 
+imports languages/aterm/syntax/IntCon
+
+exports
+  context-free syntax
+    "(" ")"                                       -> Symbol {cons("empty")}
+    "(" head:Symbol tail:Symbol+ ")"              -> Symbol {cons("seq")}
+    Symbol "?"                                    -> Symbol {cons("opt")}
+    Symbol "+"                                    -> Symbol {cons("iter")}
+    Symbol "*"                                    -> Symbol {cons("iter-star")}
+    "{" Symbol sep:Symbol "}" "+"                 -> Symbol {cons("iter-sep")}
+    "{" Symbol sep:Symbol "}" "*"                 -> Symbol {cons("iter-star-sep")}
+    "<" head:Symbol "," rest:{Symbol ","}+ ">"    -> Symbol {cons("tuple")}
+    "(" arguments:Symbols "=>" results:Symbol ")" -> Symbol {cons("func")}
+    "left":Symbol "|" "right":Symbol              -> Symbol {right,cons("alt")}
+    "(" "left":Symbol "->" "right":Symbol ")"     -> Symbol {cons("strategy")}
+
+  context-free priorities
+    {Symbol "?"               -> Symbol
+    Symbol "*"                -> Symbol
+    Symbol "+"                -> Symbol} >
+    Symbol "|" Symbol         -> Symbol       
+
+
+module languages/sdf2/syntax/Renaming
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  sorts Renaming Renamings
+  context-free syntax 
+    "[" list:Renaming* "]" -> Renamings  {cons("renamings")}
+
+    from:Symbol "=>" to:Symbol                   -> Renaming  {cons("symbol")}
+    from-prod:Production "=>" to-prod:Production -> Renaming  {cons("production")}
+
+module languages/sdf2/syntax/Modules
+
+imports languages/sdf2/syntax/Kernel 
+        languages/sdf2/syntax/Renaming
+
+hiddens
+  sorts ModuleWord
+exports
+  context-free start-symbols Module
+
+  sorts ModuleId ModuleName Import Imports
+        Section Sections Module Definition ImpSection
+
+  lexical syntax    
+    letters:[A-Za-z0-9\_\-]+ -> ModuleWord  {cons("word")}
+
+    ModuleWord              -> ModuleId  {cons("leaf")}
+    sep:"/" basename:ModuleId            -> ModuleId  {cons("root")}
+    dirname:ModuleWord sep:"/" basename:ModuleId -> ModuleId  {cons("path")}
+         
+  context-free syntax
+    list:Module* -> Definition
+
+    "module" ModuleName list:ImpSection* Sections -> Module  {cons("module")}
+
+    "exports" Grammar            -> Section  {cons("exports")}
+    "hiddens" Grammar            -> Section  {cons("hiddens")}
+
+    list:Section*                -> Sections
+
+    ModuleId                        -> ModuleName  {cons("unparameterized")}
+    ModuleId "[" params:Symbols "]" -> ModuleName  {cons("parameterized")}
+
+    "id" "(" ModuleName ")" -> Attribute  {cons("id")}
+
+    "imports" list:Imports -> ImpSection  {cons("imports")}
+
+    ImpSection -> Grammar  {cons("imp-section")}
+
+    list:Import* -> Imports
+
+    ModuleName            -> Import  {cons("module")}
+    ModuleName Renamings  -> Import  {cons("renamed-module")}
+    "(" Import ")"        -> Import  {bracket}
+
+  lexical restrictions
+    ModuleWord -/- [A-Za-z0-9\_\-]
+    ModuleId -/- [\/]
+
+module languages/sdf2/syntax/Basic
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  context-free syntax
+    "lexical" "syntax"      Productions -> Grammar  {cons("lexical-syntax")}
+    "context-free" "syntax" Productions -> Grammar  {cons("context-free-syntax")}
+    "variables"             Productions -> Grammar  {cons("variables")}
+    "lexical" "variables"   Productions -> Grammar  {cons("lexical-variables")}
+
+    "<" Symbol "-CF"  ">"               -> Symbol  {cons("cf")}
+    "<" Symbol "-LEX" ">"               -> Symbol  {cons("lex")}
+    "<" Symbol "-VAR" ">"               -> Symbol  {cons("varsym")}
+
+    "LAYOUT"                            -> Symbol  {cons("layout")}
+
+module languages/sdf2/syntax/Grammars
+
+imports basic/Comments
+
+exports
+  sorts Grammar
+  context-free syntax    
+    "(/)"                          -> Grammar  {cons("empty-grammar")}
+    "left":Grammar "right":Grammar -> Grammar  {assoc,cons("conc-grammars")}
+    "(" Grammar ")"                -> Grammar  {bracket}
+
+module basic/Comments
+
+imports
+  basic/Whitespace
+
+exports
+  lexical syntax
+    "%%" line:~[\n]* "\n"	-> LAYOUT {cons("line"),category("Comment")}
+    "%" content:~[\%\n]+ "%"	-> LAYOUT {cons("nested"),category("Comment")}
+  context-free restrictions
+    LAYOUT? -/- [\%]
+
+module languages/sdf2/syntax/Symbols
+
+imports basic/Comments
+
+exports
+  sorts Symbol Symbols
+
+  context-free syntax
+    "(" Symbol ")" -> Symbol {bracket}
+
+    list:Symbol* -> Symbols
+
+
+
+module basic/IdentifierCon
+
+exports
+
+sorts IdCon
+
+lexical syntax
+
+head:[A-Za-z] tail:[A-Za-z\-0-9]* -> IdCon {cons("default")}
+
+lexical restrictions
+
+IdCon -/- [A-Za-z\-0-9]
+
+module basic/StrCon
+
+exports
+
+sorts StrCon StrChar
+
+lexical syntax
+    "\\n"                      -> StrChar {cons("newline")}
+    "\\t"                      -> StrChar {cons("tab")}
+    "\\\""                     -> StrChar {cons("quote")}
+    "\\\\"                     -> StrChar {cons("backslash")}
+    "\\" a:[0-9]b:[0-9]c:[0-9] -> StrChar {cons("decimal")}
+    ~[\0-\31\n\t\"\\]          -> StrChar {cons("normal")}
+
+    [\"] chars:StrChar* [\"]   -> StrCon  {cons("default")}
+
+module languages/aterm/syntax/RealCon
+
+imports languages/aterm/syntax/IntCon
+
+hiddens
+  context-free start-symbols 
+    RealCon
+
+exports
+  sorts OptExp RealCon
+
+  context-free syntax
+    "e" IntCon -> OptExp {cons("present")}
+               -> OptExp {cons("absent")}
+
+    base:IntCon "." decimal:NatCon exp:OptExp  -> RealCon {cons("real-con")}
+
+module basic/NatCon
+
+exports
+
+sorts NatCon
+
+lexical syntax
+  
+ [0-9]+ -> NatCon {cons("digits")}
+
+lexical restrictions
+
+ NatCon -/- [0-9]
+
+module basic/Whitespace
+
+exports
+  lexical syntax
+    [\ \t\n\r]	-> LAYOUT {cons("whitespace")}
+
+  context-free restrictions
+    LAYOUT? -/- [\ \t\n\r]
+
+module languages/aterm/syntax/IntCon
+
+imports basic/Whitespace
+	basic/NatCon
+
+hiddens
+  context-free start-symbols 
+    IntCon
+
+exports
+  sorts IntCon
+  context-free syntax
+    NatCon         -> IntCon {cons("natural")}
+    pos:"+" NatCon -> IntCon {cons("positive")}
+    neg:"-" NatCon -> IntCon {cons("negative")}
+
+module languages/aterm/syntax/ATerms
+
+imports languages/aterm/syntax/IntCon 
+        languages/aterm/syntax/RealCon
+	basic/StrCon
+	basic/IdentifierCon
+
+exports
+  sorts AFun ATerm Annotation
+
+  context-free syntax
+	StrCon 	-> AFun {cons("quoted")}
+	IdCon 	-> AFun {cons("unquoted")}
+
+  context-free syntax
+	IntCon 					-> ATerm {cons("int")}
+	RealCon					-> ATerm {cons("real")}
+	fun:AFun 				-> ATerm {cons("fun")}
+	fun:AFun "(" args:{ATerm ","}+ ")" 	-> ATerm {cons("appl")}
+	"<" type:ATerm ">" 			-> ATerm {cons("placeholder")}
+	"[" elems:{ATerm ","}* "]" 		-> ATerm {cons("list")}
+	trm:ATerm Annotation 			-> ATerm {cons("annotated")}
+
+  context-free syntax
+	"{" annos:{ ATerm ","}+ "}" 		-> Annotation {cons("default")}
+
+hiddens
+  context-free start-symbols 
+    ATerm
+
+module languages/sdf2/syntax/Kernel
+
+imports languages/aterm/syntax/ATerms 
+        languages/sdf2/syntax/Symbols 
+        languages/sdf2/syntax/Grammars
+
+exports
+  sorts Attribute ATermAttribute Attributes Production Productions
+  context-free syntax
+    aterm:ATerm    -> ATermAttribute  {cons("default")}
+    ATermAttribute -> Attribute       {cons("term")}
+
+    "{" list:{Attribute ","}* "}" -> Attributes  {cons("attrs")}
+                                  -> Attributes  {cons("no-attrs")}
+
+    Symbols "->" result:Symbol Attributes -> Production  {cons("prod")}
+
+    list:Production* -> Productions
+
+    "syntax" Productions -> Grammar {cons("syntax")}
+
+module languages/sdf2/syntax/Sdf2-Syntax
+
+imports languages/sdf2/syntax/Kernel
+        languages/sdf2/syntax/Basic
+        languages/sdf2/syntax/Modules
+        languages/sdf2/syntax/Regular
+        languages/sdf2/syntax/Lifting
+        languages/sdf2/syntax/Priority
+        languages/sdf2/syntax/CC
+        languages/sdf2/syntax/Sorts
+        languages/sdf2/syntax/Start-Symbols
+        languages/sdf2/syntax/Literals
+        languages/sdf2/syntax/Labels
+        languages/sdf2/syntax/Restrictions
+        languages/sdf2/syntax/Aliases
+
+exports
+  sorts SDF
+
+  context-free syntax
+    "<START>" -> Symbol {cons("start")}
+    "<Start>" -> Symbol {cons("file-start")}
+
+    "lexical"      "priorities" Priorities      -> Grammar {cons("lexical-priorities")}
+    "context-free" "priorities" Priorities      -> Grammar {cons("context-free-priorities")}
+    "lexical"      "restrictions" Restrictions  -> Grammar {cons("lexical-restrictions")}
+    "context-free" "restrictions" Restrictions  -> Grammar {cons("context-free-restrictions")}
+
+    "definition" Definition -> SDF {cons("definition")}
+
+  context-free priorities
+    Symbol "|" Symbol  -> Symbol >
+    Label ":" Symbol -> Symbol                  
+
+
+module languages/sdf2/syntax/Sdf2
+
+imports languages/sdf2/syntax/Sdf2-Syntax
+
+exports
+  lexical syntax
+    "LAYOUT"            -> Sort    {reject}
+
+  context-free syntax
+    "aliases"           -> ModuleName {reject}
+    "lexical"           -> ModuleName {reject}
+    "priorities"        -> ModuleName {reject}
+    "context-free"      -> ModuleName {reject}
+    "definition"        -> ModuleName {reject}
+    "syntax"            -> ModuleName {reject}
+    "variables"         -> ModuleName {reject}
+    "module"            -> ModuleName {reject}
+    "imports"           -> ModuleName {reject}
+    "exports"           -> ModuleName {reject}
+    "hiddens"           -> ModuleName {reject}
+    "left"              -> ModuleName {reject}
+    "right"             -> ModuleName {reject}
+    "assoc"             -> ModuleName {reject}
+    "non-assoc"         -> ModuleName {reject}
+    "bracket"           -> ModuleName {reject}
+    "sorts"             -> ModuleName {reject}
+    "bracket"           -> ModuleName {reject}
+    "sorts"             -> ModuleName {reject}
+    "restrictions"      -> ModuleName {reject}
+
+     StrCon "(" arguments:{Symbol ","}* ")" -> Symbols {reject}
+
+     Associativity -> Label   {reject}
+     Associativity -> ATermAttribute {reject}
+     "reject"      -> ATermAttribute {reject}
+     "prefer"      -> ATermAttribute {reject}
+     "avoid"       -> ATermAttribute {reject}
+     "bracket"     -> ATermAttribute {reject}
+     "id" "(" ModuleName ")" -> ATermAttribute {reject}
+
+  restrictions
+    <Sort -CF>
+    "aliases"
+    "lexical"
+    "priorities"
+    "context-free"
+    "definition"
+    "syntax"
+    "variables"
+    "module"
+    "imports"
+    "exports"
+    "hiddens"
+    "left"
+    "right"
+    "assoc"
+    "non-assoc"
+    "bracket"
+    "sorts"             -/- [A-Za-z0-9]
+    <NatCon -CF>        -/- [0-9]
+    <LAYOUT?-CF>        -/- [\ \t\n\%]
+    <NumChar -CF>       -/- [0-9]
+    <ModuleName -CF>    -/- [A-Za-z0-9\_\-]
+
+exports
+  context-free start-symbols
+    SDF Module
+
+module SDF
+imports languages/sdf2/syntax/Sdf2
+hiddens
+  context-free start-symbols
+    SDF Module
+
+  %% HACK
+  context-free syntax
+    Group "." -> Group {non-assoc,cons("non-transitive")}

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/sdf2/Stratego-Sdf2.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/sdf2/Stratego-Sdf2.sdf	Tue May  3 11:33:18 2011	(r22733)
@@ -0,0 +1,216 @@
+%%%
+ %% The definition of Sdf2 in Stratego tries to stay as close to the ASF+SDF
+ %% specification of SDF2 in "Syntax Definition for Language Prototyping" by
+ %% Eelco Visser.
+ %%
+ %% @author Martin Bravenboer
+ %%%
+module Stratego-Sdf2
+imports
+  languages/sdf2/syntax/Sdf2
+  StrategoMix[StrategoHost]
+
+exports
+  context-free start-symbols Module[[StrategoHost]]
+
+exports
+  %% HACK
+  context-free syntax
+    Group "." -> Group {non-assoc,cons("non-transitive")}
+
+
+  context-free syntax
+
+        "|[" SDF "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "d" "|[" SDF "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+        "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "m" "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "M" "|[" ModuleName "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+    "i" "|[" Import "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+        "|[" Section  "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "s" "|[" Section  "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+         "|[" Grammar  "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+         "|[" Grammar* "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "G"  "|[" Grammar  "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "G*" "|[" Grammar* "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+    "is" "|[" ImpSection "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+        "|[" Attributes "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "$" "|[" Attributes "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+        "|[" Production  "]|" -> Term[[StrategoHost]] {cons("ToTerm"), prefer}
+    "p" "|[" Production  "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+         "|[" Productions "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "p*" "|[" Productions "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+        "|[" Restriction "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "r" "|[" Restriction "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+         "|[" Restrictions "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "r*" "|[" Restrictions "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+         "|[" Symbol      "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "A"  "|[" Symbol      "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "A*" "|[" Symbols     "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+    "cc" "|[" CharClass "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+         "|[" Renaming "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "ro" "|[" Renaming "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+         "|[" Alias "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "al" "|[" Alias "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+    "~"     Var[[StrategoHost]]  -> Symbol {cons("FromTerm")}
+    "~sym:" Term[[StrategoHost]] -> Symbol {cons("FromTerm")}
+
+
+%%%
+ %% Tricky: the reject needs to be lexical syntax to
+ %% avoid reject of variables. These lexical rejects only
+ %% reject the literal alternatives of an ambiguity. Thus,
+ %% the context-free variable is still allowed.
+ %%%
+
+  lexical syntax
+    MetaVar -> Sort {reject}
+    MetaVar -> IdCon  {reject}
+    MetaVar -> StrCon {reject}
+
+%%%
+ %% Symbols: Section 7.1
+ %%%
+
+  variables
+    SymbolMetaVar      -> Symbol
+    SymbolMetaVar "*"  -> Symbol*
+    SymbolMetaVar "+"  -> Symbol+
+
+    SymbolMetaVar "*"  -> {Symbol ","}*
+    SymbolMetaVar "+"  -> {Symbol ","}+
+
+  lexical syntax
+    [ABC][0-9\']* -> SymbolMetaVar
+    SymbolMetaVar -> MetaVar
+
+  lexical restrictions
+    SymbolMetaVar -/- [A-Za-z0-9]
+
+%%%
+ %% Grammar: Section 7.2
+ %%%
+
+  variables
+    "G" [0-9\']* -> Grammar
+
+%%%
+ %% Productions and attributes: Section 7.3.1
+ %%%
+
+  variables
+    "attr" [0-9\']*     -> Attribute
+    "attr" [0-9\']* "*" -> {Attribute ","}*
+    "attr" [0-9\']* "+" -> {Attribute ","}+
+    "attrs" [0-9\']*        -> Attributes
+
+    "p" [0-9\']*     -> Production
+    "p" [0-9\']* "*" -> Production*
+    "p" [0-9\']* "+" -> Production+
+
+%%%
+ %% Sort: Section 7.4.1
+ %%%
+
+  variables
+     SortMetaVar -> Sort
+
+  lexical syntax
+    "S" [0-9\']* -> SortMetaVar
+    SortMetaVar -> MetaVar
+
+  lexical restrictions
+    SortMetaVar -/- [A-Za-z0-9]
+
+%%%
+ %% CharClass: Section 7.4.2
+ %%%
+
+  variables
+    "cc" [0-9\']* -> CharClass {prefer}
+
+%%%
+ %% Literals
+ %%%
+
+  variables
+    StrConMetaVar -> StrCon
+
+  lexical syntax
+    "L" [0-9\']*  -> StrConMetaVar
+    StrConMetaVar -> MetaVar
+
+  lexical restrictions
+    StrConMetaVar -/- [A-Za-z0-9]
+
+%%%
+ %% Groups and priorities
+ %%%
+
+  variables %% section 8.1.1
+    "g" [0-9\']*      -> Group
+    "gg" [0-9\']* "*" -> {Group ">"}*
+    "gg" [0-9\']* "+" -> {Group ">"}+
+
+    "pr" [0-9\']*     -> Priority
+    "pr" [0-9\']* "*" -> {Priority ","}*
+    "pr" [0-9\']* "+" -> {Priority ","}+
+
+    AssocMetaVar -> Associativity
+
+  lexical syntax
+    "as" [0-9\']* -> AssocMetaVar
+
+  lexical restrictions
+    AssocMetaVar -/- [A-Za-z0-9]
+
+  variables %% section 8.4.1
+    "restr" [0-9\']*     -> Restriction
+    "restr" [0-9\']* "*" -> Restriction*
+    "restr" [0-9\']* "+" -> Restriction+
+
+  variables %% section 9.1.1
+    "ro" [0-9\']*     -> Renaming
+    "ro" [0-9\']* "*" -> Renaming*
+    "ro" [0-9\']* "+" -> Renaming+
+
+  variables %% section 9.2.1
+    "al" [0-9\']*     -> Alias
+    "al" [0-9\']* "*" -> Alias*
+    "al" [0-9\']* "+" -> Alias+
+
+  variables %% section 9.3.1
+    "Mid" [0-9\']* -> ModuleId
+    "M"   [0-9\']* -> ModuleName
+
+    "s" [0-9\']*     -> Section
+    "s" [0-9\']* "*" -> Section*
+    "s" [0-9\']* "+" -> Section+
+
+    "m" [0-9\']*     -> Module
+    "m" [0-9\']* "*" -> Module*
+    "m" [0-9\']* "+" -> Module+
+
+    "d" [0-9\']*     -> Definition
+
+    "i" [0-9\']*     -> Import
+    "i" [0-9\']* "*" -> Import*
+    "i" [0-9\']* "+" -> Import+
+
+    "is" [0-9\']*     -> ImpSection
+    "is" [0-9\']* "*" -> ImpSection*

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/lib/sdf-desugar.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/lib/sdf-desugar.str	Tue May  3 11:33:18 2011	(r22733)
@@ -0,0 +1,43 @@
+/**
+ * sdf-desugar implements the following desugarings:
+ *
+ *   - remove double quotes in String literals: cons, lit
+ *   - replace no-attrs by attrs([])
+ *   - add quotes to generated quoted stings
+ *
+ * @author Martin Bravenboer <martin.bravenboer at gmail.com>
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+module sdf-desugar
+
+imports
+  libstratego-aterm
+  libstratego-sglr
+
+strategies
+
+  sdf-desugar =
+      topdown(repeat(SdfDesugar); try(SdfDesugarOnce))
+
+  SdfDesugar :
+    no-attrs() -> attrs([])
+
+  SdfDesugar :
+    term(default(t)) -> term(t)
+
+rules
+
+  SdfDesugarOnce =
+    alltd(EnsureQuotes);
+    term(implode-aterm)
+
+  SdfDesugarOnce :
+    lit(s) -> lit(<un-double-quote> s)
+
+  SdfDesugarOnce :
+    ci-lit(s) -> ci-lit(<un-single-quote> s)
+
+  EnsureQuotes :
+    quoted(s) -> quoted(<double-quote> s)
+    where
+      not(<un-double-quote> s)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/lib/sdf-ensugar.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/lib/sdf-ensugar.str	Tue May  3 11:33:18 2011	(r22733)
@@ -0,0 +1,50 @@
+/**
+ * sdf-ensugar implements the following ensugarings:
+ *
+ *   - add double quotes in String literals: cons, lit
+ *   - replace attrs([]) by no-attrs
+ *
+ * @author Martin Bravenboer <martin.bravenboer at gmail.com>
+ */
+module sdf-ensugar
+imports libstratego-lib libstratego-aterm libstratego-sglr
+strategies
+
+  sdf-ensugar =
+    topdown(repeat(Ensugar); try(EnsugarOnce))
+
+  Ensugar :
+    attrs([]) -> no-attrs()
+
+  /**
+   * A seq where the second element is not a list, is a lookahead seq.
+   */
+  Ensugar :
+    seq(a,b) -> seq-lookahead(a,b)
+    where
+      <not(is-list)> b
+
+  /**
+   * A seq where the second element is a list, is a symbol
+   */
+  Ensugar :
+    seq(a, b) -> seq-symbol(a,b)
+    where
+      <is-list> b
+
+signature
+  constructors
+    seq-symbol : a * a -> a
+    seq-lookahead : a * a -> a
+
+strategies
+
+  EnsugarOnce :
+    lit(s) -> lit(<double-quote> s)
+ 
+ EnsugarOnce :
+    ci-lit(s) -> ci-lit(<single-quote> s)
+ 
+  EnsugarOnce =
+    term(explode-aterm)
+

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/lib/sdf-parenthesize.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/lib/sdf-parenthesize.str	Tue May  3 11:33:18 2011	(r22733)
@@ -0,0 +1,110 @@
+// generated on 2011-04-29 using:
+// sdf2parenthesize -i SDF.tbl -m Sdf2 -o sdf-parenthesize.str --lang sdf
+// + some manual tweaks
+
+module sdf-parenthesize
+
+imports
+  libstratego-lib
+  libstratego-sglr
+
+strategies
+
+  sdf-parenthesize =
+    innermost(SdfParenthesize)
+
+rules
+
+  SdfParenthesize :
+    comp(t_0) -> comp(Parenthetical(t_0))
+    where <(?union(_, _)
+            + ?isect(_, _)
+            + ?diff(_, _)
+            + fail)> t_0
+
+  SdfParenthesize :
+    diff(t_0, t_1) -> diff(Parenthetical(t_0), t_1)
+    where <(?union(_, _)
+            + ?isect(_, _)
+            + fail)> t_0
+
+  SdfParenthesize :
+    diff(t_0, t_1) -> diff(t_0, Parenthetical(t_1))
+    where <(?union(_, _)
+            + ?isect(_, _)
+            + ?diff(_, _)
+            + fail)> t_1
+
+  SdfParenthesize :
+    iter(t_0) -> iter(Parenthetical(t_0))
+    where <(?label(_, _)
+            + ?alt(_, _)
+            + fail)> t_0
+
+  SdfParenthesize :
+    iter-star(t_0) -> iter-star(Parenthetical(t_0))
+    where <(?label(_, _)
+            + ?alt(_, _)
+            + fail)> t_0
+
+  SdfParenthesize :
+    opt(t_0) -> opt(Parenthetical(t_0))
+    where <(?label(_, _)
+            + ?alt(_, _)
+            + fail)> t_0
+
+  SdfParenthesize :
+    alt(t_0, t_1) -> alt(Parenthetical(t_0), t_1)
+    where <(?label(_, _)
+            + ?alt(_, _)
+            + fail)> t_0
+
+  SdfParenthesize :
+    alt(t_0, t_1) -> alt(t_0, Parenthetical(t_1))
+    where <(?label(_, _) + fail)> t_1
+
+  SdfParenthesize :
+    seq(t_0, t_1) -> seq(Parenthetical(t_0), t_1)
+    where <(?alt(_, _) + fail)> t_0
+
+  SdfParenthesize :
+    seq(t_0, t_1) -> seq(t_0, Parenthetical(t_1))
+    where <(?alt(_, _) + fail)> t_1
+
+  SdfParenthesize :
+    isect(t_0, t_1) -> isect(Parenthetical(t_0), t_1)
+    where <(?union(_, _) + fail)> t_0
+
+  SdfParenthesize :
+    isect(t_0, t_1) -> isect(t_0, Parenthetical(t_1))
+    where <(?union(_, _)
+            + ?isect(_, _)
+            + fail)> t_1
+
+  SdfParenthesize :
+    non-transitive(t_0) -> non-transitive(Parenthetical(t_0))
+    where <(?non-transitive(_) + fail)> t_0
+
+  SdfParenthesize :
+    union(t_0, t_1) -> union(t_0, Parenthetical(t_1))
+    where <(?union(_, _) + fail)> t_1
+
+  SdfParenthesize :
+    conc(t_0, t_1) -> conc(Parenthetical(t_0), t_1)
+    where <(?conc(_, _) + fail)> t_0
+
+  SdfParenthesize :
+    with-arguments(t_0, t_1) -> with-arguments(Parenthetical(t_0), t_1)
+    where <(?with-arguments(_, _) + fail)> t_0
+
+  SdfParenthesize :
+    with-arguments(t_0, t_1) -> with-arguments(t_0, Parenthetical(t_1))
+    where <(?with-arguments(_, _) + fail)> t_1
+
+  SdfParenthesize :
+    conc-grammars(t_0, t_1) -> conc-grammars(t_0, Parenthetical(t_1))
+    where <(?conc-grammars(_, _) + fail)> t_1
+
+signature
+  constructors
+    Parenthetical : Unknown -> Unknown

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/lib/sdf-pretty-print.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/lib/sdf-pretty-print.str	Tue May  3 11:33:18 2011	(r22733)
@@ -0,0 +1,21 @@
+module sdf-pretty-print
+imports
+   libstratego-gpp
+   lib/sdf-ensugar
+
+strategies
+
+  pp-sdf-box =
+    sdf-ensugar
+    ; ast2box(| [ <pp-table-sdf> ] )
+
+  pp-sdf-string =
+    pp-sdf-box
+    ; box2text-string(|80)
+
+  pp-sdf-stream(|stream) =
+    pp-sdf-box
+    ; box2text-stream(|80, stream)
+
+  pp-table-sdf =
+    import-term(Sdf2.pp.af)

From tobivollebregt at gmail.com  Tue May  3 13:33:29 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:33:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22734 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: .
	syntax/esv trans/include trans/lib
Message-ID: <20110503113329.2E815CC0BD@mx4.tudelft.nl>

Author: tvo
Date: Tue May  3 11:33:28 2011
New Revision: 22734
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22734&sc=1

Log:
EditorService concrete syntax embedded in Stratego.

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/EditorService-pretty.pp.af
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/esv/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/esv/EditorService.def
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/esv/Stratego-EditorService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/include/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/include/EditorService.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/lib/pp.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/EditorService-pretty.pp.af
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/EditorService-pretty.pp.af	Tue May  3 11:33:28 2011	(r22734)
@@ -0,0 +1 @@
+PP-Table([PP-Entry(Path1("PPTable"),[R([],[H([],[FBOX(KW,S("\"pp-table\""))]),FBOX(KW,S("\":\"")),Arg("1")])]),PP-Entry(Path1("PrettyPrint"),[R([],[H([],[FBOX(KW,S("\"pretty-print\""))]),FBOX(KW,S("\":\"")),Arg("1")])]),PP-Entry(Path1("Refactoring"),[R([],[H([],[FBOX(KW,S("\"refactoring\"")),Arg("1")]),FBOX(KW,S("\":\"")),Arg("2"),H([],[FBOX(KW,S("\"=\"")),Arg("3"),Arg("4")])])]),PP-Entry(Path("Refactoring",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("Refactoring",[selector("4","iter-star")]),[Arg("1")]),PP-Entry(Path1("Refactorings"),[V([SOpt(IS,"2")],[H([SOpt(HS,"0")],[FBOX(KW,S("\"refactorings\"")),Arg("1")]),A(AOPTIONS([AL([]),AL([]),AL([]),AL([]),AL([]),AL([])]),[],[Arg("2")])])]),PP-Entry(Path1("ReferenceHoverRule"),[R([],[H([],[FBOX(KW,S("\"reference\"")),Arg("1")]),FBOX(KW,S("\":\"")),H([],[Arg("2"),Arg("3")])])]),PP-Entry(Path1("ReferenceRule"),[R([],[H([],[FBOX(KW,S("\"reference\"")),Arg("1")]),FBOX(KW,S("\":\"")),Arg("2")])]),PP-Entry(Path1("CompletionP
 roposer"),[R([],[H([],[FBOX(KW,S("\"completion\"")),FBOX(KW,S("\"proposer\""))]),FBOX(KW,S("\":\"")),Arg("1")])]),PP-Entry(Path1("CompletionLexical"),[R([],[H([],[FBOX(KW,S("\"completion\"")),FBOX(KW,S("\"lexical\""))]),FBOX(KW,S("\":\"")),Arg("1")])]),PP-Entry(Path1("IdentifierLexical"),[R([],[H([],[FBOX(KW,S("\"identifier\"")),FBOX(KW,S("\"lexical\""))]),FBOX(KW,S("\":\"")),Arg("1")])]),PP-Entry(Path1("Placeholder"),[H([SOpt(HS,"0")],[Arg("1")])]),PP-Entry(Path1("PlaceholderWithSort"),[H([SOpt(HS,"0")],[Arg("1"),Arg("2"),FBOX(KW,S("\">\""))])]),PP-Entry(Path1("CompletionKeyword"),[R([],[H([],[FBOX(KW,S("\"completion\"")),FBOX(KW,S("\"keyword\""))]),FBOX(KW,S("\":\"")),H([],[Arg("1"),Arg("2")])])]),PP-Entry(Path1("CompletionTemplate"),[R([],[H([],[FBOX(KW,S("\"completion\"")),FBOX(KW,S("\"template\""))]),FBOX(KW,S("\":\"")),H([],[Arg("1"),Arg("2"),Arg("3")])])]),PP-Entry(Path("CompletionTemplate",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("CompletionTemplateWit
 hSort"),[R([],[V([SOpt(IS,"2")],[H([],[FBOX(KW,S("\"completion\"")),F ),[R([],[H([],[FBOX(KW,S("\"hover\"")),Arg("1")]),FBOX(KW,S("\":\"")),Arg("2")])]),PP-Entry(Path1("OccurrenceRule"),[R([],[H([],[FBOX(KW,S("\"occurrence\"")),Arg("1")]),H([],[FBOX(KW,S("\":\"")),Arg("2")])])]),PP-Entry(Path1("SemanticProvider"),[R([],[H([],[FBOX(KW,S("\"provider\""))]),FBOX(KW,S("\":\"")),Arg("1")])]),PP-Entry(Path1("OnSave"),[R([],[H([],[FBOX(KW,S("\"on\"")),FBOX(KW,S("\"save\""))]),FBOX(KW,S("\":\"")),Arg("1"),Arg("2")])]),PP-Entry(Path1("Disambiguator"),[R([],[H([],[FBOX(KW,S("\"disambiguator\""))]),FBOX(KW,S("\":\"")),Arg("1")])]),PP-Entry(Path1("SemanticObserver"),[R([],[H([],[FBOX(KW,S("\"observer\""))]),FBOX(KW,S("\":\"")),Arg("1")])]),PP-Entry(Path1("Builder"),[R([],[H([],[FBOX(KW,S("\"builder\""))]),FBOX(KW,S("\":\"")),Arg("1"),H([],[FBOX(KW,S("\"=\"")),Arg("2"),Arg("3")])])]),PP-Entry(Path("Builder",[selector("3","iter-star")]),[Arg("1")]),PP-Entry(Path1("BuilderCaption"),[R([],[H([],[FBOX(KW,S("\"builder\"")),FBOX(KW,S("\"caption\""))]),FBOX(KW,S(
 "\":\"")),Arg("1")])]),PP-Entry(Path1("OpenEditor"),[FBOX(KW,S("\"(openeditor)\""))]),PP-Entry(Path1("RealTime"),[FBOX(KW,S("\"(realtime)\"" P-Entry(Path1("Occurrences"),[V([SOpt(IS,"2")],[H([SOpt(HS,"0")],[FBOX(KW,S("\"occurrences\"")),Arg("1")]),A(AOPTIONS([AL([]),AL([]),AL([])]),[],[Arg("2")])])]),PP-Entry(Path1("Strategy"),[Arg("1")]),PP-Entry(Path1("Attribute"),[H([SOpt(HS,"0")],[FBOX(KW,S("\"id\"")),FBOX(KW,S("\".\"")),Arg("1")])]),PP-Entry(Path1("Builders"),[V([SOpt(IS,"2")],[H([SOpt(HS,"0")],[FBOX(KW,S("\"builders\"")),Arg("1")]),A(AOPTIONS([AL([]),AL([]),AL([]),AL([]),AL([]),AL([])]),[],[Arg("2")])])]),PP-Entry(Path("Builders",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("Colorer"),[V([SOpt(IS,"2")],[H([SOpt(HS,"0")],[FBOX(KW,S("\"colorer\"")),Arg("1")]),A(AOPTIONS([AL([]),AL([]),AL([]),AL([]),AL([]),AL([])]),[],[Arg("2")])])]),PP-Entry(Path("Colorer",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("ColorDef"),[R([],[Arg("1"),FBOX(KW,S("\"=\"")),Arg("2")])]),PP-Entry(Path1("ColorRuleAll"),[R([],[H([],[FBOX(KW,S("\"environment\"")),Arg("1")]),FBOX(KW,S("\":\"")),H([],[Arg("2")])])]),PP-
 Entry(Path1("ColorRule"),[R([],[H([],[Arg("1")]),FBOX(KW,S("\":\"")),H([],[Arg("2")])])]),PP-Entry(Path1("ColorRuleAllNamed"),[R([],[H([],[FBOX(KW,S("\"environment\"")),Arg("1")]),FBOX(KW,S("\":\"")),H([],[Arg(" es",[selector("1","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Language"),[V([SOpt(IS,"2")],[H([SOpt(HS,"0")],[FBOX(KW,S("\"language\"")),Arg("1")]),A(AOPTIONS([AL([]),AL([]),AL([])]),[],[Arg("2")])])]),PP-Entry(Path("Language",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("LanguageName"),[R([],[FBOX(KW,S("\"name\"")),FBOX(KW,S("\":\"")),Arg("1")])]),PP-Entry(Path1("LanguageId"),[R([],[FBOX(KW,S("\"id\"")),FBOX(KW,S("\":\"")),Arg("1")])]),PP-Entry(Path1("Extensions"),[R([],[FBOX(KW,S("\"extensions\"")),FBOX(KW,S("\":\"")),Arg("1")])]),PP-Entry(Path1("Description"),[R([],[FBOX(KW,S("\"description\"")),FBOX(KW,S("\":\"")),Arg("1")])]),PP-Entry(Path1("Table"),[R([],[FBOX(KW,S("\"table\"")),FBOX(KW,S("\":\"")),Arg("1")])]),PP-Entry(Path1("TableProvider"),[R([],[FBOX(KW,S("\"table\"")),FBOX(KW,S("\"provider\"")),FBOX(KW,S("\":\"")),Arg("1")])]),PP-Entry(Path1("UnmanagedTablePrefix"),[R([],[H([],[FBOX(KW,S("\"unmanaged\"")),FBOX(KW,S("\"table\""))])
 ,FBOX(KW,S("\":\"")),H([SOpt(HS,"0")],[Arg("1"),FBOX(KW,S("\"*\""))])])]),PP-Entry(Path1("StartSymbols"),[R([],[H([],[FBOX(KW,S("\"start\"")),FBOX(KW,S("\"symbols\""))]),FBOX(KW,S("\":\"")),Arg("1")])]),PP-Entry(Path1("NoStartSymbols"),[FBOX(KW,S("\"_\""))]),PP-Entry(Path1("URL"),[ h1("IndentDefs"),[R([],[H([],[FBOX(KW,S("\"indent\"")),FBOX(KW,S("\"after\""))]),FBOX(KW,S("\":\"")),V([],[Arg("1")])])]),PP-Entry(Path1("IndentDef"),[Arg("1")]),PP-Entry(Path1("BlockCommentDef"),[H([],[Arg("1"),Arg("2"),Arg("3")])]),PP-Entry(Path1("String"),[Arg("1")]),PP-Entry(Path1("NoContinuation"),[]),PP-Entry(Path1("CommentLine"),[R([],[H([SOpt(HS,"0")],[FBOX(KW,S("\"//\"")),Arg("1")])])]),PP-Entry(Path1("EmptyLine"),[R([],[FBOX(KW,S("\"\""))])]),PP-Entry(Path1("Token"),[Arg("1")]),PP-Entry(Path1("TK_IDENTIFIER"),[FBOX(KW,S("\"identifier\""))]),PP-Entry(Path1("TK_NUMBER"),[FBOX(KW,S("\"number\""))]),PP-Entry(Path1("TK_LAYOUT"),[FBOX(KW,S("\"layout\""))]),PP-Entry(Path1("TK_STRING"),[FBOX(KW,S("\"string\""))]),PP-Entry(Path1("TK_KEYWORD"),[FBOX(KW,S("\"keyword\""))]),PP-Entry(Path1("TK_OPERATOR"),[FBOX(KW,S("\"operator\""))]),PP-Entry(Path1("TK_VAR"),[FBOX(KW,S("\"var\""))]),PP-Entry(Path1("TK_JUNK"),[FBOX(KW,S("\"junk\""))]),PP-Entry(Path1("TK_UNKNOWN"),[FBOX(KW,S("\"u
 nknown\""))]),PP-Entry(Path1("NORMAL"),[]),PP-Entry(Path1("BOLD"),[FBOX(KW,S("\"bold\""))]),PP-Entry(Path1("ITALIC"),[FBOX(KW,S("\"italic\""))]),PP-Entry(Path1("BOLD_ITALIC"),[H([],[FBOX(KW,S("\"bold\"")),FBOX(KW,S("\"italic\""))])]),PP-Entry(Path1("ColorDefault"),[FBOX(KW,S("\"_\""))]),PP-Entry(Path1("NoColor"),[]),PP-Entry(Path1("ColorRGB"),[H([],[A [Arg("1")]),PP-Entry(Path1("SortAndConstructor"),[H([SOpt(HS,"0")],[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")])]),PP-Entry(Path1("Module"),[V([SOpt(VS,"1")],[H([],[FBOX(KW,S("\"module\"")),Arg("1")]),Arg("2"),Arg("3")])]),PP-Entry(Path("Module",[selector("3","iter-star")]),[Arg("1")]),PP-Entry(Path1("Imports"),[V([SOpt(IS,"2")],[FBOX(KW,S("\"imports\"")),Arg("1")])]),PP-Entry(Path("Imports",[selector("1","iter")]),[Arg("1")]),PP-Entry(Path1("Import"),[Arg("1")]),PP-Entry(Path1("ImportRenamed"),[H([SOpt(HS,"0")],[Arg("1"),FBOX(KW,S("\"[\"")),Arg("2"),FBOX(KW,S("\"]\""))])]),PP-Entry(Path1("NoImports"),[])])

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue May  3 11:33:18 2011	(r22733)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue May  3 11:33:28 2011	(r22734)
@@ -18,7 +18,7 @@
   <property name="dist" location="bin/dist"/>
 
   <!-- Imports -->
-  <property name="build.sdf.imports" value="-Idef &quot;${basedir}/syntax/sdf2/SDF.def&quot;"/>
+  <property name="build.sdf.imports" value="-Idef &quot;${basedir}/syntax/sdf2/SDF.def&quot; -Idef &quot;${basedir}/syntax/esv/EditorService.def&quot;"/>
   <property name="build.stratego.args" value="
                         --library
                         -I &quot;${trans}&quot;
@@ -40,7 +40,7 @@
   <import file="build.generated.xml"/>
 
   <!-- Main target -->
-  <target name="all" depends="meta-sdf2table-stratego-sdf2,spoofaximp.default.jar" />
+  <target name="all" depends="meta-sdf2table-stratego-esv,meta-sdf2table-stratego-sdf2,spoofaximp.default.jar" />
 
   <!-- Target to create -Permissive grammar and parse table for Stratego-Sdf2.def -->
   <target name="meta-sdf2table-stratego-sdf2">
@@ -55,5 +55,20 @@
       <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
     </antcall>
     <antcall target="meta-sdf2table.helper" />
+  </target>
+
+  <!-- Target to create -Permissive grammar and parse table for Stratego-EditorService.def -->
+  <target name="meta-sdf2table-stratego-esv">
+    <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
+    <antcall target="pack-sdf.helper">
+      <param name="syntax" value="${syntax}/esv" />
+      <param name="sdfmodule" value="Stratego-EditorService" />
+      <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
+    </antcall>
+    <antcall target="sdf2table">
+      <param name="sdfmodule" value="Stratego-EditorService" />
+      <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
+    </antcall>
+    <antcall target="meta-sdf2table.helper" />
   </target>
 </project>

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/esv/EditorService.def
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/esv/EditorService.def	Tue May  3 11:33:28 2011	(r22734)
@@ -0,0 +1,491 @@
+definition
+module RefactoringsService
+
+imports
+  SemanticServices
+  BuildersService
+
+exports
+  
+  syntax
+  
+    "refactorings" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF> {cons("Refactorings")}
+
+    "refactorings" -> <ReservedName-CF>
+  
+  context-free syntax
+  	
+  	"pp-table" ":" StrategoCall -> SemanticRule {cons("PPTable")}
+  	"pretty-print" ":" StrategoCall -> SemanticRule {cons("PrettyPrint")}
+    "refactoring"  SemanticNode* ":" String "="   StrategoCall BuilderOption* -> SemanticRule {cons("Refactoring")}
+
+module BuildersService
+
+imports
+  SemanticServices
+
+exports
+  
+  syntax
+  
+    "builders" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF> {cons("Builders")}
+
+    "builders" -> <ReservedName-CF>
+  
+    "analysis" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF> {cons("Builders"), deprecated("Use 'builders' instead")}
+
+    "analysis" -> <ReservedName-CF>
+
+  context-free syntax
+    
+    "observer" ":" StrategoCall                           -> SemanticRule {cons("SemanticObserver")}
+    "builder"  ":" String "=" StrategoCall BuilderOption* -> SemanticRule {cons("Builder")}
+    "builder" "caption" ":" PropertyValue                 -> SemanticRule {cons("BuilderCaption")}
+    
+    "(openeditor)" -> BuilderOption {cons("OpenEditor")}
+    "(realtime)"   -> BuilderOption {cons("RealTime")}
+    "(persistent)" -> BuilderOption {cons("Persistent")}
+    "(meta)"       -> BuilderOption {cons("Meta")}
+    "(cursor)"     -> BuilderOption {cons("Cursor")}
+    "(source)"     -> BuilderOption {cons("Source")}
+
+module CompletionsService
+
+imports
+  SemanticServices
+
+exports
+
+  sorts
+    CompletionPart CompletionAnno
+
+  syntax
+
+    "completions" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF> {cons("Completions")}
+
+    "completions" -> <ReservedName-CF>
+
+  context-free syntax
+
+    "completion" "proposer" ":" StrategoCall -> SemanticRule {cons("CompletionProposer")}
+
+    "completion" "lexical" ":" PropertyValue -> SemanticRule {cons("IdentifierLexical"), deprecated("Use 'identifier lexical' instead")}
+
+    "identifier" "lexical" ":" PropertyValue -> SemanticRule {cons("IdentifierLexical")}
+
+    "completion" "keyword" ":" PropertyValue OptCompletionAnno -> SemanticRule {cons("CompletionKeyword")}
+
+    %% Deprecated: conflicts with content completion
+    "completion" "template" ":" Id CompletionPart+ OptCompletionAnno -> SemanticRule {cons("CompletionTemplate"), avoid, deprecated("Add quotes to the starting literal")}
+
+    %% Deprecated: replaced by CompletionTemplateEx
+    "completion" "template" ":" Sort "=" CompletionPart CompletionPart* OptCompletionAnno -> SemanticRule {cons("CompletionTemplateWithSort"), avoid, deprecated("Move the sort before ':' and remove '='")}
+
+    %% Used as content completion triggers
+    %% "completion" "template" PropertyValue CompletionPart* OptCompletionAnno -> SemanticRule {cons("CompletionTemplate"), recover, avoid}
+    "completion" "template" Sort* ":" PropertyValue CompletionPart* CompletionAnno* -> SemanticRule {cons("CompletionTemplateEx"), recover, avoid}
+
+    "completion" "trigger" ":" PropertyValue OptCompletionAnno -> SemanticRule {cons("CompletionTrigger")}
+
+    %% New completion template
+    "completion" "template" Sort* ":" CompletionPrefix CompletionPart+ CompletionAnno* -> SemanticRule {cons("CompletionTemplateEx")}
+
+               -> CompletionPrefix {cons("NoCompletionPrefix")}
+    String "=" -> CompletionPrefix {cons("CompletionPrefix")}
+
+  context-free syntax
+
+    "completions" -> StrategoCall {reject}
+    "completion"  -> StrategoCall {reject}
+    "identifier"  -> StrategoCall {reject}
+    "observer"    -> StrategoCall {reject}
+    "builder"     -> StrategoCall {reject}
+    "occurrence"  -> StrategoCall {reject}
+    ReservedName  -> StrategoCall {reject}
+
+    String      -> CompletionPart
+    Placeholder -> CompletionPart {cons("Placeholder")}
+    "(cursor)"  -> CompletionPart {cons("Cursor")}
+    PlaceholderWithSortPrefix Id ">" -> CompletionPart {cons("PlaceholderWithSort")}
+
+                   -> OptCompletionAnno {cons("None")}
+    CompletionAnno -> OptCompletionAnno
+
+    "(disabled)" -> CompletionAnno {cons("Disable")}
+    "(disable)"  -> CompletionAnno {cons("Disable"), deprecated("Use (disabled) instead")}
+    "(blank)"    -> CompletionAnno {cons("Blank")}
+    "(linked)"   -> CompletionAnno {cons("Linked")}
+    "(blank)"    -> PropertyValue {reject}
+    "(disable)"  -> PropertyValue {reject}
+    "(linked)"   -> PropertyValue {reject}
+    "completion" -> PropertyValue {reject}
+    "template"   -> PropertyValue {reject}
+    "trigger"    -> PropertyValue {reject}
+    "identifier" -> PropertyValue {reject}
+
+  lexical syntax
+
+    "<" PlaceholderChar* ":" -> PlaceholderWithSortPrefix
+    "<" PlaceholderChar* ">" -> Placeholder
+    ~[\:\>\n]                -> PlaceholderChar
+
+
+module ReferencesService
+
+imports
+  SemanticServices
+
+exports
+
+  syntax
+  
+    "references" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF> {cons("References")}
+
+    "references" -> <ReservedName-CF>
+
+  context-free syntax
+  
+    "reference"  SemanticNode ":" StrategoCall StrategoCall -> SemanticRule {cons("ReferenceHoverRule"), deprecated}
+
+    "reference"  SemanticNode ":" StrategoCall -> SemanticRule {cons("ReferenceRule")}
+
+    "hover"      SemanticNode ":" StrategoCall -> SemanticRule {cons("HoverRule")}
+  
+    "occurrence" SemanticNode ":" StrategoCall -> SemanticRule {cons("OccurrenceRule")}
+  
+  context-free syntax
+  
+    "references" -> StrategoCall {reject}
+    "reference"  -> StrategoCall {reject}
+    "hover"      -> StrategoCall {reject}
+
+module ColorerService
+
+imports
+  Common
+
+exports
+
+  sorts
+  
+    ColorRule Font Color ColorNode MaybeColor NoColor
+    TokenKindName AttributeId Attribute
+
+  syntax
+  
+    "colorer" <SectionName-LEX> <LAYOUT?-CF> <ColorRule*-CF> -> <Section-CF> {cons("Colorer")}
+    
+    "colorer" -> <ReservedName-CF>
+
+  context-free syntax
+  
+    "environment" ColorNode ":" Attribute -> ColorRule {cons("ColorRuleAll")} %% One rule to rule them all
+                  ColorNode ":" Attribute -> ColorRule {cons("ColorRule")}
+    
+    "environment" ColorNode ":" String "=" Attribute -> ColorRule {cons("ColorRuleAllNamed")}
+                  ColorNode ":" String "=" Attribute -> ColorRule {cons("ColorRuleNamed")}
+
+    Color   MaybeColor Font -> Attribute {cons("Attribute")}
+    AttributeId             -> Attribute {cons("AttributeRef")}
+    
+    Node          -> ColorNode
+    TokenKindName -> ColorNode {cons("Token"), prefer}
+    "token" Id    -> ColorNode {cons("Literal")}
+    
+    "identifier" -> TokenKindName {cons("TK_IDENTIFIER")}
+    "number"     -> TokenKindName {cons("TK_NUMBER")}
+    "layout"     -> TokenKindName {cons("TK_LAYOUT")}
+    "string"     -> TokenKindName {cons("TK_STRING")}
+    "keyword"    -> TokenKindName {cons("TK_KEYWORD")}
+    "operator"   -> TokenKindName {cons("TK_OPERATOR")}
+    "var"        -> TokenKindName {cons("TK_VAR")}
+    "error"      -> TokenKindName {cons("TK_ERROR")}
+    "unknown"    -> TokenKindName {cons("TK_UNKNOWN")}
+    
+                    -> Font {cons("NORMAL")}
+    "bold"          -> Font {cons("BOLD")}
+    "italic"        -> Font {cons("ITALIC")}
+    "bold" "italic" -> Font {cons("BOLD_ITALIC")}
+    "italic" "bold" -> Font {cons("BOLD_ITALIC")}
+
+    %% TODO: Default "font" attribute? (would need disambiguation and merging support)
+    %%
+    %% "_" -> Font {cons("NORMAL")}
+    
+    "_"         -> Color {cons("ColorDefault")}
+    Int Int Int -> Color {cons("ColorRGB")}
+                -> NoColor {cons("NoColor")}
+    Color       -> MaybeColor
+    NoColor     -> MaybeColor
+
+    AttributeId "=" Attribute -> ColorRule {cons("ColorDef")}
+    
+    Id             -> AttributeId          %% Standard color name (e.g., 'red')
+    String         -> AttributeId          %% Descriptive color name (could be shown in IDE)
+    "_"            -> AttributeId {reject}
+    Font           -> AttributeId {reject}
+    "environment"  -> AttributeId {reject}
+
+module OutlinerService
+
+imports
+  Common
+  %% TODO: Maybe -- StrategoMix[StrategoExpr]
+
+exports
+
+  sorts
+    OutlineRule Pattern Term PreTerm
+
+  syntax
+  
+    "outliner" <SectionName-LEX> <LAYOUT?-CF> <OutlineRule*-CF> -> <Section-CF> {cons("Outliner")}
+    
+    "outliner" -> <ReservedName-CF>
+
+  context-free syntax
+
+    Node                 -> OutlineRule {cons("OutlineRule"), prefer}
+
+module FoldingService
+
+imports
+  Common
+
+exports
+
+  sorts
+    FoldingRule FoldingAnno
+
+  syntax
+  
+    "folding" <SectionName-LEX> <LAYOUT?-CF> <FoldingRule*-CF> -> <Section-CF> {cons("Folding")}
+    
+    "folding" -> <ReservedName-CF>
+  
+  context-free syntax
+    
+    %% TODO: Reconsider "all" keyword for siblings; we already have list sorts using '*'
+    
+          Node FoldingAnno -> FoldingRule {cons("FoldRule")}
+    "all" Node FoldingAnno -> FoldingRule {cons("FoldRuleAll")}
+
+    "(disable)"  -> FoldingAnno {cons("Disable"), deprecated("Use (disabled) instead")}
+    "(disabled)" -> FoldingAnno {cons("Disable")}
+    "(folded)"   -> FoldingAnno {cons("Folded")}
+                 -> FoldingAnno {cons("None")}
+
+module SemanticServices
+
+imports
+  Common LanguageDescription
+
+exports
+
+  sorts
+    SemanticRule SemanticNode StrategoId StrategoCall OnSaveAnno
+
+  lexical syntax
+
+    [a-zA-Z\_] [a-zA-Z0-9\'\-\_]* -> StrategoId
+  
+    "_"  -> SemanticNode
+
+  lexical restrictions
+  
+    StrategoId -/- [a-zA-Z0-9\'\-\_]
+
+  context-free syntax
+     
+     Node -> SemanticNode
+    "provider"     PropertyValue -> SemanticRule {cons("SemanticProvider"), deprecated("Use 'provider :'")}
+    "provider" ":" PropertyValue -> SemanticRule {cons("SemanticProvider")}
+
+    "on" "save" ":" StrategoCall OnSaveAnno -> SemanticRule {cons("OnSave")}
+
+             StrategoId -> StrategoCall {cons("Strategy")}
+    "id" "." StrategoId -> StrategoCall {cons("Attribute")}
+    
+                        -> OnSaveAnno {cons("None")}
+
+module LanguageDescription
+
+imports
+	Common SemanticServices
+
+exports
+  
+  sorts
+  
+    LanguageProperty PropertyValue NoContinuation PropertyValues URL
+    FenceDef BlockCommentDef IndentDef
+  
+  syntax
+  
+    "language" <SectionName-LEX> <LAYOUT?-CF> <LanguageProperty*-CF> -> <Section-CF> {cons("Language")}
+    
+    "language" -> <ReservedName-CF>
+  
+  lexical syntax
+    
+    ~[\ \t\n\r\,\:\"\=]+ -> PropertyValue {avoid}
+
+    ~[\ \t\n\r\,\/\:]+ "://" ~[\ \t\n\r]+ -> URL
+  
+  lexical restrictions
+  
+  	PropertyValue -/- ~[\ \t\n\r\,\:\"\=]
+  	URL           -/- ~[\ \t\n\r]
+  
+  context-free syntax
+  
+    { PropertyValue ","}* -> PropertyValues {cons("Values")}
+    String                -> PropertyValue
+  
+  	%% General language properties
+  
+    "name"            ":" PropertyValue  -> LanguageProperty {cons("LanguageName")}
+    "id"              ":" PropertyValue  -> LanguageProperty {cons("LanguageId")}
+    "extensions"      ":" PropertyValues -> LanguageProperty {cons("Extensions")}
+    "description"     ":" PropertyValue  -> LanguageProperty {cons("Description")}
+    "table"           ":" PropertyValue  -> LanguageProperty {cons("Table")}
+    "table" "provider" ":" StrategoCall  -> LanguageProperty {cons("TableProvider")}
+    "start" "symbols" ":" Sort*          -> LanguageProperty {cons("StartSymbols")}
+    "start" "symbols" ":" PropertyValues -> LanguageProperty {cons("StartSymbols"), avoid}
+    "url"             ":" URL            -> LanguageProperty {cons("URL")}
+    "extends"         ":" PropertyValues -> LanguageProperty {cons("Extends")}
+    "aliases"         ":" PropertyValues -> LanguageProperty {cons("Aliases")} %% deprecated
+    "unmanaged" "table" ":" Id "*"       -> LanguageProperty {cons("UnmanagedTablePrefix")}
+   
+     %% Syntax properties
+     
+     "line"  "comment" ":" PropertyValue      -> LanguageProperty {cons("LineCommentPrefix")}
+     "block" "comment" ":" BlockCommentDef    -> LanguageProperty {cons("BlockCommentDefs")}
+     "fences"          ":" FenceDef*          -> LanguageProperty {cons("FenceDefs")}
+     "indent" "after"  ":" IndentDef*         -> LanguageProperty {cons("IndentDefs")}
+     "identifier" "lexical" ":" PropertyValue -> LanguageProperty {cons("IdentifierLexical")}
+     
+     PropertyValue PropertyValue  PropertyValue -> BlockCommentDef {cons("BlockCommentDef")}
+     PropertyValue NoContinuation PropertyValue -> BlockCommentDef {cons("BlockCommentDef")}
+                                                -> NoContinuation {cons("NoContinuation")}
+     
+     PropertyValue PropertyValue -> FenceDef {cons("FenceDef")}
+     PropertyValue               -> IndentDef {cons("IndentDef")}
+     
+     %% Avoid ambiguities with fencedef pairs
+     "fences"     -> PropertyValue {reject}
+     "identifier" -> PropertyValue {reject}
+     "indent"     -> PropertyValue {reject}
+     "fences"     -> PropertyValue {reject}
+     "line"       -> PropertyValue {reject}
+     "block"      -> PropertyValue {reject}
+
+module Common
+
+exports
+
+  sorts
+    Id IdStar Int STRING CHAR BACKSLASH String Node Sort Constructor ConstructorId
+    ReservedName SectionName ModuleName Section Eof
+    Ws ShortCom LongCom CommChar
+
+  lexical syntax
+  
+    [a-zA-Z][a-zA-Z0-9\'\-\_]*     -> Id
+    [a-zA-Z][a-zA-Z0-9\'\-\_]* "*" -> IdStar
+    "-"? [0-9]+                    -> Int
+    "\"" StringChar* "\""          -> STRING
+    ~[\"\n\\]                      -> StringChar
+    "\\\""                         -> StringChar
+    BACKSLASH                      -> StringChar
+    "\\"                           -> BACKSLASH
+    
+    ~[\n\r]*                       -> SectionName
+
+    [\t\ \n\r]               -> Ws
+    "//" ~[\n]* ([\n] | Eof) -> ShortCom
+    "/*" CommChar* "*/"      -> LongCom
+    ~[\*]                    -> CommChar
+    Asterisk                 -> CommChar
+    "*"                      -> Asterisk
+    Ws                       -> LAYOUT
+    ShortCom                 -> LAYOUT
+    LongCom                  -> LAYOUT
+                             -> Eof
+  
+  lexical restrictions
+  
+    Int         -/- [0-9]
+    Id          -/- [a-zA-Z0-9\'\-\_]
+    SectionName -/- ~[\n\r]
+    Asterisk    -/- [\/]
+    BACKSLASH   -/- [\"]
+    Eof         -/- ~[]
+
+  context-free restrictions
+
+    LAYOUT? -/- [\ \t\n\r]
+    LAYOUT? -/- [\/].[\*]
+    LAYOUT? -/- [\/].[\/]
+
+  context-free syntax
+  
+    Id     -> Sort {cons("Sort")}
+    Id "*" -> Sort {cons("ListSort")}
+    STRING -> String {cons("String")}
+    
+    %% nice, but makes C-SGLR fail to parse create-builders-desciptor.str properly
+    %%        -> String {recover, avoid, ast("String(\"\")")}
+
+    Sort "." "_" -> Sort {bracket}
+    
+    "_" "." ConstructorId -> Constructor {cons("ConstructorOnly")}
+                       Id -> ConstructorId {cons("Constructor")}
+    
+    Sort                   -> Node
+    Constructor            -> Node
+    Sort "." ConstructorId -> Node {cons("SortAndConstructor")}
+    
+    ReservedName -> Node       {reject}
+    ReservedName -> ModuleName {reject}
+
+module EditorService
+
+imports
+  Common
+  LanguageDescription
+  FoldingService
+  OutlinerService
+  ColorerService
+  ReferencesService
+  CompletionsService
+  BuildersService
+  RefactoringsService
+
+hiddens
+
+  context-free start-symbols
+    Module
+
+exports
+
+  sorts
+    Module FileName ModuleName Imports Import
+
+  lexical syntax
+  
+    [a-zA-Z0-9\-\_\.]+ -> FileName
+    {FileName "/"}+    -> ModuleName
+  
+  lexical restrictions
+  
+  	FileName    -/- [a-zA-Z0-9\-\_\.]
+
+  context-free syntax
+  	
+    "module" ModuleName Imports Section* -> Module {cons("Module")}
+    "imports" Import+                    -> Imports {cons("Imports")}
+                                         -> Imports {cons("NoImports")}
+
+    ModuleName            -> Import {cons("Import")}
+    ModuleName "[" Id "]" -> Import {cons("ImportRenamed")}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/esv/Stratego-EditorService.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/esv/Stratego-EditorService.sdf	Tue May  3 11:33:28 2011	(r22734)
@@ -0,0 +1,63 @@
+%% Adapted from org.strategoxt.imp.generator/src/syntax/Stratego-Java-EditorService.sdf
+%% Removed Java imports
+%% Added QuotedTerms -> CompletionPart* production
+
+module Stratego-EditorService
+imports
+  EditorService
+  StrategoMix[StrategoHost]
+
+exports
+  context-free start-symbols Module[[StrategoHost]]
+
+  sorts
+    QuotedTerm
+    QuotedTerms
+
+  context-free syntax
+
+    %% (Anti-)quotations
+    "descriptor" "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+
+                 "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+
+    "descriptor" "|[" OutlineRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+    "descriptor" "|[" ColorRule    "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+    "descriptor" "|[" FoldingRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr"), avoid}
+    "descriptor" "|[" SemanticRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+
+                 "|[" OutlineRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+                 "|[" ColorRule    "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+                 "|[" FoldingRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr"), avoid}
+                 "|[" SemanticRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+
+    QuotedTerm -> Id {cons("FromMetaExpr"), avoid}
+    QuotedTerm -> PropertyValue {cons("FromMetaExpr"), avoid}
+    QuotedTerm -> URL {cons("FromMetaExpr"), avoid}
+    QuotedTerm -> ModuleName {cons("FromMetaExpr")}
+    QuotedTerm -> Color {cons("FromMetaExpr")}
+    QuotedTerm -> Font  {cons("FromMetaExpr")}
+    QuotedTerm -> SectionName {cons("FromMetaExpr")}
+    QuotedTerm -> SemanticRule {cons("FromMetaExpr"), avoid}
+    QuotedTerm -> CompletionPart {cons("FromMetaExpr")}
+
+    QuotedTerms -> OutlineRule*   {cons("FromMetaExpr")}
+    QuotedTerms -> ColorRule*     {cons("FromMetaExpr")}
+    QuotedTerms -> FoldingRule*   {cons("FromMetaExpr")}
+    QuotedTerms -> PropertyValues {cons("FromMetaExpr")}
+    QuotedTerms -> SemanticRule*  {cons("FromMetaExpr")}
+    QuotedTerms -> CompletionPart* {cons("FromMetaExpr")}
+
+    "~"  Term[[StrategoHost]] -> QuotedTerm  {bracket}
+    "~*" Term[[StrategoHost]] -> QuotedTerms {bracket}
+
+    "~sort:" Term[[StrategoHost]] -> Sort {cons("FromMetaExpr"), prefer}
+
+    %% Stratego applications as anti-quotation
+    "<" Strategy[[StrategoHost]] ">" Term[[StrategoHost]] -> QuotedTerm {cons("App")}
+    StrategyAngle[[StrategoHost]]                         -> QuotedTerm {cons("RootApp"), avoid}
+
+  lexical syntax
+
+    "<" ~[]* ">" -> PropertyValue {reject}
+    "~" ~[]*     -> PropertyValue {reject}

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/include/EditorService.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/include/EditorService.str	Tue May  3 11:33:28 2011	(r22734)
@@ -0,0 +1,146 @@
+module EditorService
+
+signature
+  constructors
+    ImportRenamed              : ModuleName * Id -> Import
+    Import                     : ModuleName -> Import
+    NoImports                  : Imports
+    Imports                    : List(Import) -> Imports
+    Module                     : ModuleName * Imports * List(Section) -> Module
+                               : String -> ModuleName
+    Source                     : BuilderOption
+    Cursor                     : BuilderOption
+    Meta                       : BuilderOption
+    Persistent                 : BuilderOption
+    RealTime                   : BuilderOption
+    OpenEditor                 : BuilderOption
+    Blank                      : CompletionAnno
+    Disable                    : CompletionAnno
+    None                       : CompletionAnno
+    Placeholder                : PlaceholderWithSortPrefix * Id -> CompletionPart
+    Cursor                     : CompletionPart
+    Placeholder                : Placeholder -> CompletionPart
+                               : String -> CompletionPart
+                               : String -> Placeholder
+                               : String -> PlaceholderWithSortPrefix
+                               : String -> AttributeId
+                               : Id -> AttributeId
+                               : NoColor -> MaybeColor
+                               : Color -> MaybeColor
+    NoColor                    : NoColor
+    ColorRGB                   : Int * Int * Int -> Color
+    ColorDefault               : Color
+    BOLD_ITALIC                : Font
+    ITALIC                     : Font
+    BOLD                       : Font
+    NORMAL                     : Font
+    TK_UNKNOWN                 : TokenKindName
+    TK_ERROR                   : TokenKindName
+    TK_VAR                     : TokenKindName
+    TK_OPERATOR                : TokenKindName
+    TK_KEYWORD                 : TokenKindName
+    TK_STRING                  : TokenKindName
+    TK_LAYOUT                  : TokenKindName
+    TK_NUMBER                  : TokenKindName
+    TK_IDENTIFIER              : TokenKindName
+    Literal                    : Id -> ColorNode
+    Token                      : TokenKindName -> ColorNode
+                               : Node -> ColorNode
+    AttributeRef               : AttributeId -> Attribute
+    Attribute                  : Color * MaybeColor * Font -> Attribute
+    ColorDef                   : AttributeId * Attribute -> ColorRule
+    ColorRuleNamed             : ColorNode * String * Attribute -> ColorRule
+    ColorRuleAllNamed          : ColorNode * String * Attribute -> ColorRule
+    ColorRule                  : ColorNode * Attribute -> ColorRule
+    ColorRuleAll               : ColorNode * Attribute -> ColorRule
+    OutlineRule                : Node -> OutlineRule
+    None                       : FoldingAnno
+    Folded                     : FoldingAnno
+    Disable                    : FoldingAnno
+    FoldRuleAll                : Node * FoldingAnno -> FoldingRule
+    FoldRule                   : Node * FoldingAnno -> FoldingRule
+    IndentDef                  : PropertyValue -> IndentDef
+    FenceDef                   : PropertyValue * PropertyValue -> FenceDef
+    NoContinuation             : NoContinuation
+    BlockCommentDef            : PropertyValue * NoContinuation * PropertyValue -> BlockCommentDef
+    BlockCommentDef            : PropertyValue * PropertyValue * PropertyValue -> BlockCommentDef
+    IdentifierLexical          : PropertyValue -> LanguageProperty
+    IndentDefs                 : List(IndentDef) -> LanguageProperty
+    FenceDefs                  : List(FenceDef) -> LanguageProperty
+    BlockCommentDefs           : BlockCommentDef -> LanguageProperty
+    LineCommentPrefix          : PropertyValue -> LanguageProperty
+    UnmanagedTablePrefix       : Id -> LanguageProperty
+    Aliases                    : PropertyValues -> LanguageProperty
+    Extends                    : PropertyValues -> LanguageProperty
+    URL                        : URL -> LanguageProperty
+    StartSymbols               : PropertyValues -> LanguageProperty
+    StartSymbols               : List(Sort) -> LanguageProperty
+    TableProvider              : StrategoCall -> LanguageProperty
+    Table                      : PropertyValue -> LanguageProperty
+    Description                : PropertyValue -> LanguageProperty
+    Extensions                 : PropertyValues -> LanguageProperty
+    LanguageId                 : PropertyValue -> LanguageProperty
+    LanguageName               : PropertyValue -> LanguageProperty
+    Values                     : List(PropertyValue) -> PropertyValues
+                               : String -> URL
+                               : String -> PropertyValue
+                               : String -> PropertyValue
+    Refactorings               : String * List(SemanticRule) -> Section
+    Builders                   : String * List(SemanticRule) -> Section
+    Completions                : String * List(SemanticRule) -> Section
+    References                 : String * List(SemanticRule) -> Section
+    Colorer                    : String * List(ColorRule) -> Section
+    Outliner                   : String * List(OutlineRule) -> Section
+    Folding                    : String * List(FoldingRule) -> Section
+    Language                   : String * List(LanguageProperty) -> Section
+    None                       : OnSaveAnno
+    Attribute                  : StrategoId -> StrategoCall
+    Strategy                   : StrategoId -> StrategoCall
+    Refactoring                : List(SemanticNode) * String * StrategoCall * List(BuilderOption) -> SemanticRule
+    PrettyPrint                : StrategoCall -> SemanticRule
+    PPTable                    : StrategoCall -> SemanticRule
+    BuilderCaption             : PropertyValue -> SemanticRule
+    Builder                    : String * StrategoCall * List(BuilderOption) -> SemanticRule
+    SemanticObserver           : StrategoCall -> SemanticRule
+    CompletionTrigger          : PropertyValue * CompletionAnno -> SemanticRule
+    CompletionTemplateWithSort : Sort * PropertyValue * List(CompletionPart) * CompletionAnno -> SemanticRule
+    CompletionTemplate         : PropertyValue * List(CompletionPart) * CompletionAnno -> SemanticRule
+    CompletionTemplateWithSort : Sort * CompletionPart * List(CompletionPart) * CompletionAnno -> SemanticRule
+    CompletionTemplate         : Id * List(CompletionPart) * CompletionAnno -> SemanticRule
+    CompletionTemplate         : CompletionPart * List(CompletionPart) * CompletionAnno -> SemanticRule
+    CompletionKeyword          : PropertyValue * CompletionAnno -> SemanticRule
+    IdentifierLexical          : PropertyValue -> SemanticRule
+    CompletionProposer         : StrategoCall -> SemanticRule
+    OccurrenceRule             : SemanticNode * StrategoCall -> SemanticRule
+    HoverRule                  : SemanticNode * StrategoCall -> SemanticRule
+    ReferenceRule              : SemanticNode * StrategoCall -> SemanticRule
+    ReferenceHoverRule         : SemanticNode * StrategoCall * StrategoCall -> SemanticRule
+    OnSave                     : StrategoCall * OnSaveAnno -> SemanticRule
+    SemanticProvider           : PropertyValue -> SemanticRule
+                               : Node -> SemanticNode
+                               : String -> SemanticNode
+                               : String -> StrategoId
+    SortAndConstructor         : Sort * ConstructorId -> Node
+                               : Constructor -> Node
+                               : Sort -> Node
+    Constructor                : Id -> ConstructorId
+    ConstructorOnly            : ConstructorId -> Constructor
+    String                     : STRING -> String
+    ListSort                   : Id -> Sort
+    Sort                       : Id -> Sort
+                               : String -> STRING
+                               : String -> Int
+                               : String -> Id
+
+
+signature
+  constructors
+    Some : a -> Option(a)
+    None : Option(a)
+
+
+signature
+  constructors
+    Cons : a * List(a) -> List(a)
+    Nil  : List(a)
+    Conc : List(a) * List(a) -> List(a)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/lib/pp.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/lib/pp.str	Tue May  3 11:33:28 2011	(r22734)
@@ -0,0 +1,47 @@
+module sdf2imp/util/pp
+
+imports
+  libstratego-gpp
+  include/EditorService
+
+strategies
+
+  /**
+   * Pretty-prints the descriptor AST to a string.
+   *
+   * @type descriptor -> String
+   */
+  pp-descriptor-to-string =
+    descriptor-to-abox;
+    box2text-string(|80)
+
+  /**
+   * Pretty-prints the descriptor AST to a Box representation.
+   *
+   * @type descriptor -> Box
+   */
+  descriptor-to-abox =
+    topdown(try(pp-fix-string-quotes));
+    ast2box(|[<descriptor-pp-table>])
+
+  descriptor-pp-table =
+    DescriptorPPTable
+  <+
+    tbl := <import-term(EditorService-pretty.pp.af)>;
+    rules(DescriptorPPTable := tbl)
+
+  // HACK: add quotes omitted by the stratego parser
+
+  pp-fix-string-quotes:
+    String(string) -> String(string')
+    where
+      <not(string-starts-with(|"\""))> string
+    with
+      string' := <conc-strings> ("\"", string, "\"")
+
+  pp-fix-string-quotes:
+    Placeholder(string) -> Placeholder(string')
+    where
+      <not(string-starts-with(|"<"))> string
+    with
+      string' := <conc-strings> ("<", string, ">")

From tobivollebregt at gmail.com  Tue May  3 13:33:36 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:33:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22735 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans
Message-ID: <20110503113336.855EB2B800C@mx2.tudelft.nl>

Author: tvo
Date: Tue May  3 11:33:36 2011
New Revision: 22735
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22735&sc=1

Log:
Analysis

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Tue May  3 11:33:36 2011	(r22735)
@@ -0,0 +1,91 @@
+module analysis
+imports
+  libstratego-lib
+  include/Template
+  lib/editor-common.generated
+
+strategies
+
+  analyze:
+    (ast, path, project-path) -> ast'
+    with
+      current-file := $[[project-path]/[path]];
+      rules(
+        CurrentDir  := <dirname> $[[project-path]/[path]]
+        CurrentFile := <base-filename> path
+        IsImported  :  current-file
+        ProjectDir  := project-path
+      )
+    with
+      ast' := <declare-globals-top> ast;
+      rules(Module : current-file -> ast')
+
+  declare-globals-top = alltd(declare-globals)
+
+  declare-globals:
+    T@ Template-Production(S, Template(e*), _) -> <id>
+    with
+      rules(Template :+ S -> T);
+      <declare-can-not-be-blank> e*
+
+  declare-globals:
+    template@ TemplateProduction(sort, Template(part*), attrs) ->
+      TemplateProduction(sort, Template(part'*), attrs)
+    with
+      rules(Template :+ sort -> template);
+      part'* := <declare-can-not-be-blank> part*
+    with
+      <Declaration> sort
+    <+
+      // file := <CurrentFile>;
+      rules(
+        Declaration: sort -> template
+        // DeclarationFile: sort -> file
+      )
+    with
+      <alltd(declare-use)> part*
+
+  declare-can-not-be-blank =
+       ?[Newline(_), Layout(_), Placeholder(_, _, _, _), Newline(_) | _];
+       // debug(!"match 1: ");
+       [id, id, id | declare-can-not-be-blank]
+    <+ ?[Newline(_), Placeholder(_, _, _, _), Newline(_) | _];
+       // debug(!"match 2: ");
+       [id, id | declare-can-not-be-blank]
+    <+ ?[Placeholder(_, Sort(x), _, _) | _];
+       // debug(!"match 3: ");
+       [id | declare-can-not-be-blank];
+       rules(CanNotBeBlank :+ x -> x)
+    <+ ?[_ | _];
+       // debug(!"match 4: ");
+       [id | declare-can-not-be-blank]
+    <+ ?[]
+       // debug(!"match 5: ")
+
+  declare-globals:
+    Import(x) -> <id>
+    with
+      <open-import(
+        resolve-import => current-file
+      , parse-template-file <+ <debug(!"Parsing failed: ")> x
+      , declare-globals-top; ?ast; rules(Module : current-file -> ast)
+        <+ <debug(!"Declare-globals-top failed: ")> x
+      )> x
+   <+
+      <debug(!"Import failed: ")> x
+
+  resolve-import =
+    // TODO: better import handling
+    \x -> $[[<CurrentDir>]/[x].tmpl]\; file-exists
+  <+
+    \x -> $[[<ProjectDir>]/[x].tmpl]\; file-exists
+  <+
+    \x -> $[[<ProjectDir>]/syntax/[x].tmpl]\; file-exists
+  <+
+    \x -> $[[<ProjectDir>]/[x].sdf]\; file-exists
+  <+
+    \x -> $[[<ProjectDir>]/syntax/[x].sdf]\; file-exists
+  <+
+    \x -> $[[<ProjectDir>]/lib/[x].def]\; file-exists
+  <+
+    \x -> $[[<CurrentDir>]/[x].sdf]\; file-exists

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:33:28 2011	(r22734)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:33:36 2011	(r22735)
@@ -6,6 +6,7 @@
   libstratego-aterm
   include/Template
   lib/editor-common.generated
+  analysis
 
 rules // Main editor interface (defined by editor/Template-Builders and -References.esv)
 
@@ -15,6 +16,7 @@
     (ast, path, project-path) -> (ast, errors, warnings, notes)
     with
       editor-init;
+      analyze;
       errors   := [];
       warnings := [];
       notes    := []

From tobivollebregt at gmail.com  Tue May  3 13:33:43 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:33:43 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22736 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans
Message-ID: <20110503113343.28C452B801D@mx2.tudelft.nl>

Author: tvo
Date: Tue May  3 11:33:42 2011
New Revision: 22736
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22736&sc=1

Log:
Desugaring; fix BNF-style productions

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Tue May  3 11:33:36 2011	(r22735)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Tue May  3 11:33:42 2011	(r22736)
@@ -3,6 +3,7 @@
   libstratego-lib
   include/Template
   lib/editor-common.generated
+  desugar
 
 strategies
 
@@ -17,7 +18,7 @@
         ProjectDir  := project-path
       )
     with
-      ast' := <declare-globals-top> ast;
+      ast' := <desugar-top; declare-globals-top> ast;
       rules(Module : current-file -> ast')
 
   declare-globals-top = alltd(declare-globals)
@@ -47,20 +48,15 @@
 
   declare-can-not-be-blank =
        ?[Newline(_), Layout(_), Placeholder(_, _, _, _), Newline(_) | _];
-       // debug(!"match 1: ");
        [id, id, id | declare-can-not-be-blank]
     <+ ?[Newline(_), Placeholder(_, _, _, _), Newline(_) | _];
-       // debug(!"match 2: ");
        [id, id | declare-can-not-be-blank]
     <+ ?[Placeholder(_, Sort(x), _, _) | _];
-       // debug(!"match 3: ");
        [id | declare-can-not-be-blank];
        rules(CanNotBeBlank :+ x -> x)
     <+ ?[_ | _];
-       // debug(!"match 4: ");
        [id | declare-can-not-be-blank]
     <+ ?[]
-       // debug(!"match 5: ")
 
   declare-globals:
     Import(x) -> <id>
@@ -68,7 +64,7 @@
       <open-import(
         resolve-import => current-file
       , parse-template-file <+ <debug(!"Parsing failed: ")> x
-      , declare-globals-top; ?ast; rules(Module : current-file -> ast)
+      , desugar-top; declare-globals-top; ?ast; rules(Module : current-file -> ast)
         <+ <debug(!"Declare-globals-top failed: ")> x
       )> x
    <+

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str	Tue May  3 11:33:42 2011	(r22736)
@@ -0,0 +1,19 @@
+module desugar
+imports
+  libstratego-lib
+  include/Template
+
+strategies
+
+  desugar-top = alltd(desugar)
+
+rules
+
+  desugar:
+    NoOptions() -> Options([])
+
+  desugar:
+    SdfProduction(sort, symbol*, attr*) -> prod(symbol*, sort(sort), attr*)
+
+  desugar:
+    Separator(x) -> Separator(<un-double-quote; unescape> x)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:33:36 2011	(r22735)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:33:42 2011	(r22736)
@@ -7,16 +7,17 @@
   include/Template
   lib/editor-common.generated
   analysis
+  desugar
 
 rules // Main editor interface (defined by editor/Template-Builders and -References.esv)
 
   // Analyzes the current program, returning a tuple with errors, warnings, and notes;
   // each a list of (term, message) tuples or simply (message) terms.
   editor-analyze:
-    (ast, path, project-path) -> (ast, errors, warnings, notes)
+    (ast, path, project-path) -> (ast', errors, warnings, notes)
     with
       editor-init;
-      analyze;
+      ast'     := <analyze>;
       errors   := [];
       warnings := [];
       notes    := []

From tobivollebregt at gmail.com  Tue May  3 13:33:50 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:33:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22737 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: editor trans
Message-ID: <20110503113350.740092B801D@mx2.tudelft.nl>

Author: tvo
Date: Tue May  3 11:33:50 2011
New Revision: 22737
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22737&sc=1

Log:
Generate SDF

includes
 * Lexical restrictions,
 * CONTENTCOMPLETE injections,

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template.main.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv	Tue May  3 11:33:42 2011	(r22736)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv	Tue May  3 11:33:50 2011	(r22737)
@@ -18,7 +18,7 @@
 
   // builder  : "Generate Java code (for selection)"   = generate-java (openeditor) (realtime)
   builder  : "Show abstract syntax (for selection)" = generate-aterm (openeditor) (realtime) (meta) (source)
-
+  builder  : "Generate SDF (for selection)" = generate-sdf (openeditor) (source)
 
 refactorings
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template.main.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template.main.esv	Tue May  3 11:33:42 2011	(r22736)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template.main.esv	Tue May  3 11:33:50 2011	(r22737)
@@ -3,14 +3,14 @@
 imports Template-Builders Template-Colorer Template-Completions Template-Folding Template-Outliner Template-References Template-Syntax
 
 language General properties
-                  
+
   name          : Template
   id            : org.strategoxt.imp.editors.template
   extends       : Root
-                  
+
   description   : "Spoofax/IMP-generated editor for the Template language"
   url           : http://strategoxt.org
-                  
+
   extensions    : tmpl
   table         : include/Template.tbl
-  start symbols : Start
\ No newline at end of file
+  start symbols : Module

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.meta
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.meta	Tue May  3 11:33:50 2011	(r22737)
@@ -0,0 +1 @@
+Meta([Syntax("Stratego-Sdf2")])

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str	Tue May  3 11:33:50 2011	(r22737)
@@ -0,0 +1,196 @@
+module generate-sdf
+imports
+  libstratego-lib
+  libstratego-sglr
+  include/Template
+  lib/sdf-desugar
+  lib/sdf-parenthesize
+  lib/sdf-pretty-print
+  analysis
+
+strategies
+
+  to-sdf:
+    x -> <try(sdf-to-string)> d|[
+      definition
+      m*
+      module Completion-Support
+      exports
+        lexical syntax
+          [A-Za-z0-9]* "CONTENTCOMPLETE" [0-9]+ -> CONTENTCOMPLETE {avoid}
+        context-free syntax
+          p*
+    ]|
+    with
+      // all imported modules
+      m* := <all-keys-IsImported; map(Module; to-sdf-module);
+             // prepend Completion-Support include to first module
+             (  ["module"#([id, [imports(![ i|[ Completion-Support ]| |<id>]) | id], id]) |id]
+             <+ ["module"#([id, \[] -> [imports([ i|[ Completion-Support ]| ])]\, id]) |id])>;
+      // CONTENTCOMPLETE injections
+      p* := <all-keys-Declaration; map(sort-to-contentcomplete)>
+      // INSERTIONs
+      // FIXME: do not generate an insertion when one already exists
+      //p2* := <all-keys-Declaration; map(sort-to-insertion)> p1*;
+
+  to-sdf-module:
+    x -> m|[
+      module M
+      is*
+      exports
+        context-free syntax
+          p*
+      s*
+    ]|
+    with
+      // module name and imports
+      if <collect-one(?Module(M, import*, section*))> x then
+        is* := <   \Imports([]) -> []\
+                <+ \Imports(t) -> [imports(<map(\Import(M) -> i|[ M ]|\)> t)]\> import*
+      else
+        (M, is) := ("example", [])
+      end;
+      // main productions
+      p* := <collect-om(template-to-sdf)> x;
+      // lexical restrictions
+      let ends-with-identifier-char =
+        where(explode-string; un-double-quote-chars; last; (is-alphanum + '_'))
+      in
+        A* := <collect-om(?lit(<ends-with-identifier-char>));
+               nub; string-sort-ex> p*;
+        if !A* => [] then
+          restriction* := []
+        else
+          restriction* := [|[ lexical restrictions
+                                A* -/- [A-Za-z0-9\_] ]|]
+        end
+      end;
+      // SDF grammars
+      // (each one is put in a separate `exports' section because SDF doesn't
+      //  use a flat list for the grammars within a section, but a tree...)
+      section'* := <filter(\SDF-Grammar(t) -> exports(t)\)> section*;
+      s* := [restriction*, section'*]
+
+  sdf-to-string =
+    bottomup(try(
+        \conc-grammars(x, context-free-syntax([])) -> x\
+      + \conc-grammars(x, lexical-syntax([])) -> x\
+      + \conc-grammars(x, lexical-restrictions([])) -> x\
+    ));
+    sdf-desugar;
+    sdf-parenthesize;
+    pp-sdf-string
+
+  template-to-sdf:
+    TemplateProduction(S', Template(e* @[_|_]), attrs')
+      -> p|[ A* -> S' attrs' ]|
+    with
+      A* := <filter(template-element-to-sdf)> e*
+
+  template-to-sdf:
+    TemplateProduction(S', Template([]), attrs')
+      -> p|[ -> S' attrs' ]|
+
+  template-element-to-sdf:
+    Text(x) -> <string-to-sdf> x
+
+  template-element-to-sdf:
+    Placeholder(_, Sort(S'), None(), _) -> A|[ S' ]|
+
+  // TODO: this needs improvement, too much duplication and not readable enough
+
+  template-element-to-sdf:
+    Placeholder(_, Sort(S), Star(), Options(option*)) -> A|[ S* ]|
+    where <not(one(Separator(not(all-whitespace))))> option*
+
+  template-element-to-sdf:
+    Placeholder(_, Sort(S), Star(), Options(option*)) -> A|[ { S L }* ]|
+    where <one(Separator(not(all-whitespace)))> option*
+    with L := <separator-to-literal> option*
+
+  template-element-to-sdf:
+    Placeholder(_, Sort(S), Plus(), Options(option*)) -> A|[ S+ ]|
+    where <not(one(Separator(not(all-whitespace))))> option*
+
+  template-element-to-sdf:
+    Placeholder(_, Sort(S), Plus(), Options(option*)) -> A|[ { S L }+ ]|
+    where <one(Separator(not(all-whitespace)))> option*
+    with L := <separator-to-literal> option*
+
+  all-whitespace = string-as-chars(all(' ' + '\t' + '\r' + '\n'))
+  remove-whitespace = string-as-chars(filter(not(' ' + '\t' + '\r' + '\n')))
+  separator-to-literal = !lit(<collect-one(?Separator(<remove-whitespace>)); escape; double-quote>)
+
+  template-element-to-sdf:
+    Placeholder(_, Sort(S'), Option(), _) -> A|[ S'? ]|
+
+  sort-to-contentcomplete:
+    S' -> p|[ CONTENTCOMPLETE -> S' {cons("WATER"), avoid} ]|
+
+  sort-to-insertion:
+    S'@sort(x) -> p|[ -> S' {cons("INSERTION"), recover} ]|
+
+strategies
+
+  /**
+   * Sorts a list of terms on the outermost string within each term.
+   */
+  string-sort-ex =
+    qsort(
+      \(a, b) -> (<collect-one(is-string)> a, <collect-one(is-string)> b)\;
+      string-lt
+    )
+
+  string-to-sdf =
+    string-identifier-tokenize;
+    // FIXME: Case insensitive literals need ci-lit/single-quote.
+    map({raw, sdf:
+      ?raw; escape; !lit(<double-quote>); ?sdf;
+      if <explode-string; last; (is-alphanum + '_')> raw then
+        rules(Restrictions :+= sdf)
+      end
+    })
+
+  /**
+   * Split on the edges delimiting identifiers and then strip layout
+   * from the resulting tokens and remove empty tokens.
+   * E.g. " func ( x y )" => ["func", "(", "x", "y", ")"]
+   */
+  string-identifier-tokenize =
+    // FIXME: Use layout defined by the language.
+    let is-layout = ' ' + '\t' + '\n' + '\r'
+        strip-layout = string-as-chars(filter(not(is-layout)))
+    in
+      // FIXME: Use identifier lexical defined by the language.
+      string-edge-tokenize(is-alphanum + '_');
+      filter(strip-layout; not(""))
+    end
+
+  /**
+   * @see edge-tokenize
+   */
+  string-edge-tokenize(s) =
+    explode-string;
+    edge-tokenize(s);
+    map(implode-string)
+
+  /**
+   * Edge-triggered tokenizer; a new token starts whenever s starts
+   * succeeding or starts failing, i.e. when for two consecutive list items
+   * s succeeds on the first item but s fails on the second item or
+   * s fails on the first item and s succeeds on the second item.
+   */
+  edge-tokenize(s) =
+    ?[first | tail];
+    if second := <Hd> tail then
+      tokens := <edge-tokenize(s)> tail;
+      if (<s> first; <not(s)> second) +
+         (<not(s)> first; <s> second) then
+        ![[first] | tokens]
+      else
+        [firstToken | restTokens] := tokens;
+        ![[first | firstToken] | restTokens]
+      end
+    else
+      ![[first]]
+    end

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:33:42 2011	(r22736)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:33:50 2011	(r22737)
@@ -8,6 +8,7 @@
   lib/editor-common.generated
   analysis
   desugar
+  generate-sdf
 
 rules // Main editor interface (defined by editor/Template-Builders and -References.esv)
 
@@ -22,9 +23,16 @@
       warnings := [];
       notes    := []
 
-  // Prints the abstract syntax ATerm of a selection.
-  generate-aterm:
+  generate(s|ext):
     (selected, position, ast, path, project-path) -> (filename, result)
     with
-      filename := <guarantee-extension(|"aterm")> path;
-      result   := selected // we just return the input term
+      filename := <guarantee-extension(|ext)> path;
+      result   := <s> selected
+
+  generate-aterm(s) = generate(s|"aterm")
+  generate-sdf(s) = generate(s|"def")
+
+  // Prints the abstract syntax ATerm of a selection.
+  generate-aterm = generate-aterm(id)
+
+  generate-sdf = generate-sdf(to-sdf)

From tobivollebregt at gmail.com  Tue May  3 13:34:00 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:34:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22738 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: editor
	syntax/esv trans trans/include
Message-ID: <20110503113400.1E665108C009@mx3.tudelft.nl>

Author: tvo
Date: Tue May  3 11:33:59 2011
New Revision: 22738
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22738&sc=1

Log:
Generate completion templates (ESV)

added
 * Section concrete syntax embedding
 * String concrete syntax embedding

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/esv/Stratego-EditorService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/include/EditorService.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv	Tue May  3 11:33:50 2011	(r22737)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv	Tue May  3 11:33:59 2011	(r22738)
@@ -19,6 +19,7 @@
   // builder  : "Generate Java code (for selection)"   = generate-java (openeditor) (realtime)
   builder  : "Show abstract syntax (for selection)" = generate-aterm (openeditor) (realtime) (meta) (source)
   builder  : "Generate SDF (for selection)" = generate-sdf (openeditor) (source)
+  builder  : "Generate ESV (for selection)" = generate-esv (openeditor) (source)
 
 refactorings
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/esv/Stratego-EditorService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/esv/Stratego-EditorService.sdf	Tue May  3 11:33:50 2011	(r22737)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/esv/Stratego-EditorService.sdf	Tue May  3 11:33:59 2011	(r22738)
@@ -31,6 +31,9 @@
                  "|[" FoldingRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr"), avoid}
                  "|[" SemanticRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
 
+    "descriptor" "|[" Section "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+                 "|[" Section "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+
     QuotedTerm -> Id {cons("FromMetaExpr"), avoid}
     QuotedTerm -> PropertyValue {cons("FromMetaExpr"), avoid}
     QuotedTerm -> URL {cons("FromMetaExpr"), avoid}
@@ -40,6 +43,8 @@
     QuotedTerm -> SectionName {cons("FromMetaExpr")}
     QuotedTerm -> SemanticRule {cons("FromMetaExpr"), avoid}
     QuotedTerm -> CompletionPart {cons("FromMetaExpr")}
+    QuotedTerm -> Section {cons("FromMetaExpr")}
+    QuotedTerm -> String {cons("FromMetaExpr")}
 
     QuotedTerms -> OutlineRule*   {cons("FromMetaExpr")}
     QuotedTerms -> ColorRule*     {cons("FromMetaExpr")}
@@ -47,6 +52,7 @@
     QuotedTerms -> PropertyValues {cons("FromMetaExpr")}
     QuotedTerms -> SemanticRule*  {cons("FromMetaExpr")}
     QuotedTerms -> CompletionPart* {cons("FromMetaExpr")}
+    QuotedTerms -> Section*        {cons("FromMetaExpr")}
 
     "~"  Term[[StrategoHost]] -> QuotedTerm  {bracket}
     "~*" Term[[StrategoHost]] -> QuotedTerms {bracket}

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.meta
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.meta	Tue May  3 11:33:59 2011	(r22738)
@@ -0,0 +1 @@
+Meta([Syntax("Stratego-EditorService")])

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str	Tue May  3 11:33:59 2011	(r22738)
@@ -0,0 +1,181 @@
+module generate-esv
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  include/EditorService
+  include/Template
+  lib/pp
+  analysis
+  generate-str
+
+strategies
+
+  to-esv:
+    Module(modulename, _, _) -> <try(pp-descriptor-to-string)> |[
+      module ~modulename
+      ~sections
+    ]|
+    with
+      // all imported modules
+      sections := <all-keys-IsImported; map(Module; to-esv-module)>
+
+  to-esv-module:
+    Module(modulename, _, _) -> |[
+      //~modulename doesn't work here (kernel syntax...)
+      completions
+        ~*completions
+    ]|
+    with
+      completions := <collect-om(template-to-completion-template)>
+
+strategies
+
+  template-to-completion-template:
+    TemplateProduction(sort, Template(e* @[_|_]), attr*) -> t
+    with
+      part*  := <template-elements-to-completion-parts> e*;
+      anno   := <template-sort-to-anno> sort;
+      if !part* => [PlaceholderWithSort(_, _) | _] then
+        prefix := <collect-one(?sdf-cons(<id>))> attr*;
+        t := |[ completion template ~sort : ~prefix = ~*part* ~anno ]|
+      else
+        t := |[ completion template ~sort : ~*part* ~anno ]|
+      end
+
+  template-elements-to-completion-parts =
+    ?e*;
+    remove-first-and-last-layout;
+    map(try(placeholder-to-completion-part));
+    remove-cursor-except-first;
+	  if indent := <get-indent-string> e* then
+	    re-indent(|indent)
+	  end;
+    map(try(text-to-completion-part));
+    concatenate-consecutive-strings;
+    map(try(escape-and-quote))
+
+  template-sort-to-anno =
+    CanNotBeBlank < !None() + !Blank()
+
+  remove-first-and-last-layout =
+    repeat(  \[Layout(_)  | tail] -> tail\
+           + \[Newline(_) | tail] -> tail\ );
+    // FIXME: This part only needs to run if the template will get a (blank) anno!
+    listbu(   \[Layout(_)] -> []\
+           <+ \[Newline(_)] -> []\ <+ id)
+
+// first pass
+
+  placeholder-to-completion-part:
+    Placeholder(Text(name), Sort(sort), None(), _) -> PlaceholderWithSort($[<[name]:], sort)
+
+  placeholder-to-completion-part:
+    Placeholder(None(), Sort(sort), None(), _)
+      -> PlaceholderWithSort($[<[<generate-placeholder <+ newname> sort]:], sort)
+
+  // FIXME: does this make sense?
+  generate-placeholder =
+    bagof-Template;
+    map(\TemplateProduction(_, Template(e*), _) -> e*\);
+    filter(not([])); // is this desired?
+    qsort((percentage-string-elements, percentage-string-elements); gt);
+    Hd;
+    template-elements-to-string
+
+  percentage-string-elements =
+    ?e*;
+    <divr> (<length> <filter(?String(_))> e*, <length> e*)
+
+  template-elements-to-string =
+    remove-first-and-last-layout;
+    filter(
+         \Placeholder(Text(x), _, _, _) -> x\
+      <+ \Placeholder(None(), Sort(x), _, _) -> x\
+      <+ \String(x) -> x\
+      <+ \Layout(x) -> <string-replace(|"\t", " ")> x\
+    );
+    concat-strings
+
+  placeholder-to-completion-part:
+    Placeholder(_, _, Option(), _) -> Cursor()
+
+  placeholder-to-completion-part:
+    Placeholder(_, _, Plus(), _) -> Cursor()
+
+  placeholder-to-completion-part:
+    Placeholder(_, _, Star(), _) -> Cursor()
+
+// second (re-indent) pass
+
+  get-indent-string =
+    filter(not(?Layout(_) + ?Newline(_)); origin-column); list-min => size;
+    // Build string from right to left, as list.
+    ![]; repeat(![' ' | <id>] | size); !['\n' | <id>];
+    implode-string
+
+  re-indent(|indent-string) =
+    \[Newline(x), Layout(y) | tail] -> [Layout(z) | tail']
+    with
+      z := <string-replace(|indent-string, "\n")> <conc-strings>(x, y);
+      tail' := <re-indent(|indent-string)> tail\
+  <+
+    \[head | tail] -> [head | <re-indent(|indent-string)> tail]\
+  <+
+    []
+
+// third pass
+
+  text-to-completion-part:
+    Newline(_) -> String("\n")
+
+  text-to-completion-part:
+    Layout(t) -> String(t')
+    with
+      t' := <string-replace(|"\n  ", "\n\t");
+             repeat(where(is-substring(!"\t  ")); string-replace(|"\t  ", "\t\t"))> t
+
+// removing cursors (including layout before and newline after, if present)
+
+  remove-cursor-except-first =
+       [Layout(id), Cursor(), Newline(id) | remove-cursor]
+    <+ [Cursor(), Newline(id) | remove-cursor]
+    <+ [Layout(id), Cursor() | remove-cursor]
+    <+ [Cursor() | remove-cursor]
+    <+ [id | remove-cursor-except-first]
+    <+ []
+
+  remove-cursor =
+  	   \[Layout(_), Cursor(), Newline(_) | tail] -> <remove-cursor> tail\
+  	<+ \[Cursor(), Newline(_) | tail] -> <remove-cursor> tail\
+  	<+ \[Layout(_), Cursor() | tail] -> <remove-cursor> tail\
+    <+ \[Cursor() | tail] -> <remove-cursor> tail\
+    <+ [id | remove-cursor]
+    <+ []
+
+// concatenate consecutive parts
+
+  concatenate-consecutive-strings =
+       \[String(a), String(b) | tail] -> <concatenate-consecutive-strings> [String(<conc-strings> (a, b)) | tail]\
+    <+ [id | concatenate-consecutive-strings]
+    <+ []
+
+  escape-and-quote =
+    String(
+      string-replace(|"\t", "\\t");
+      string-replace(|"\r", "\\r");
+      string-replace(|"\n", "\\n");
+      string-replace(|"'", "\\'");
+      string-replace(|"\"", "\\\"");
+      double-quote
+	  )
+
+strategies
+
+  nonempty-substring-from-last-occurence-of(|t) =
+    substring-after-last-occurence-of(|t);
+    not("");
+    <conc-strings> (t, <id>)
+
+  substring-after-last-occurence-of(|t) =
+    where(is-substring(!t));
+    repeat(is-substring(!t); implode-string)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/include/EditorService.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/include/EditorService.str	Tue May  3 11:33:50 2011	(r22737)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/include/EditorService.str	Tue May  3 11:33:59 2011	(r22738)
@@ -14,13 +14,17 @@
     Persistent                 : BuilderOption
     RealTime                   : BuilderOption
     OpenEditor                 : BuilderOption
+    Linked                     : CompletionAnno
     Blank                      : CompletionAnno
     Disable                    : CompletionAnno
-    None                       : CompletionAnno
-    Placeholder                : PlaceholderWithSortPrefix * Id -> CompletionPart
+                               : CompletionAnno -> OptCompletionAnno
+    None                       : OptCompletionAnno
+    PlaceholderWithSort        : PlaceholderWithSortPrefix * Id -> CompletionPart
     Cursor                     : CompletionPart
     Placeholder                : Placeholder -> CompletionPart
                                : String -> CompletionPart
+    CompletionPrefix           : String -> CompletionPrefix
+    NoCompletionPrefix         : CompletionPrefix
                                : String -> Placeholder
                                : String -> PlaceholderWithSortPrefix
                                : String -> AttributeId
@@ -102,13 +106,12 @@
     BuilderCaption             : PropertyValue -> SemanticRule
     Builder                    : String * StrategoCall * List(BuilderOption) -> SemanticRule
     SemanticObserver           : StrategoCall -> SemanticRule
-    CompletionTrigger          : PropertyValue * CompletionAnno -> SemanticRule
-    CompletionTemplateWithSort : Sort * PropertyValue * List(CompletionPart) * CompletionAnno -> SemanticRule
-    CompletionTemplate         : PropertyValue * List(CompletionPart) * CompletionAnno -> SemanticRule
-    CompletionTemplateWithSort : Sort * CompletionPart * List(CompletionPart) * CompletionAnno -> SemanticRule
-    CompletionTemplate         : Id * List(CompletionPart) * CompletionAnno -> SemanticRule
-    CompletionTemplate         : CompletionPart * List(CompletionPart) * CompletionAnno -> SemanticRule
-    CompletionKeyword          : PropertyValue * CompletionAnno -> SemanticRule
+    CompletionTemplateEx       : List(Sort) * CompletionPrefix * List(CompletionPart) * List(CompletionAnno) -> SemanticRule
+    CompletionTrigger          : PropertyValue * OptCompletionAnno -> SemanticRule
+    CompletionTemplateEx       : List(Sort) * PropertyValue * List(CompletionPart) * List(CompletionAnno) -> SemanticRule
+    CompletionTemplateWithSort : Sort * CompletionPart * List(CompletionPart) * OptCompletionAnno -> SemanticRule
+    CompletionTemplate         : Id * List(CompletionPart) * OptCompletionAnno -> SemanticRule
+    CompletionKeyword          : PropertyValue * OptCompletionAnno -> SemanticRule
     IdentifierLexical          : PropertyValue -> SemanticRule
     CompletionProposer         : StrategoCall -> SemanticRule
     OccurrenceRule             : SemanticNode * StrategoCall -> SemanticRule

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:33:50 2011	(r22737)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:33:59 2011	(r22738)
@@ -9,6 +9,7 @@
   analysis
   desugar
   generate-sdf
+  generate-esv
 
 rules // Main editor interface (defined by editor/Template-Builders and -References.esv)
 
@@ -31,8 +32,11 @@
 
   generate-aterm(s) = generate(s|"aterm")
   generate-sdf(s) = generate(s|"def")
+  generate-esv(s) = generate(s|"esv")
 
   // Prints the abstract syntax ATerm of a selection.
   generate-aterm = generate-aterm(id)
 
   generate-sdf = generate-sdf(to-sdf)
+
+  generate-esv = generate-esv(to-esv)

From tobivollebregt at gmail.com  Tue May  3 13:34:07 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:34:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22739 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: editor trans
Message-ID: <20110503113407.96E042B8010@mx2.tudelft.nl>

Author: tvo
Date: Tue May  3 11:34:07 2011
New Revision: 22739
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22739&sc=1

Log:
Generate Stratego-based prettyprinter.

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv	Tue May  3 11:33:59 2011	(r22738)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv	Tue May  3 11:34:07 2011	(r22739)
@@ -20,6 +20,7 @@
   builder  : "Show abstract syntax (for selection)" = generate-aterm (openeditor) (realtime) (meta) (source)
   builder  : "Generate SDF (for selection)" = generate-sdf (openeditor) (source)
   builder  : "Generate ESV (for selection)" = generate-esv (openeditor) (source)
+  builder  : "Generate STR (for selection)" = generate-str (openeditor) (source)
 
 refactorings
 

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Tue May  3 11:34:07 2011	(r22739)
@@ -0,0 +1,119 @@
+module generate-str
+imports
+  libstratego-lib
+  include/Template
+  analysis
+  generate-esv // for remove-first-and-last-layout, get-indent-string, re-indent
+
+overlays
+
+  sdf-cons(name) = term(default(appl(unquoted("cons"), [fun(quoted(name))])))
+
+strategies
+
+  to-str:
+    Module(modulename, _, _) ->
+    $[module [modulename]
+      imports
+        libstratego-lib
+
+      strategies
+
+        pp-option(s) = \None() -> ""\ + \Some(t) -> <s> t\
+
+      [section*]
+
+      strategies // all other sorts used in placeholders
+
+        [strategy*]]
+    with
+      // all imported modules
+      module*  := <all-keys-IsImported; map(Module)>;
+      section* := <map(to-str-module); separate-by(|"\n\n")>
+    with
+      // All sorts used in pp minus all sorts for which a pp strategy has been
+      // created will get a `prettyprint-sort = is-string' default strategy.
+      sorts-used-in-pp := <collect-om(sort-used-in-prettyprinting); nub> module*;
+      sorts-decl-in-pp := <collect-om(sort-decl-in-prettyprinting); nub> module*;
+      sorts-without-pp := <diff> (sorts-used-in-pp, sorts-decl-in-pp);
+      strategy* := <map(sort-to-prettyprint-strategy); separate-by(|"\n\n")> sorts-without-pp
+
+  to-str-module:
+    m@ Module(modulename, _, _) ->
+    $[strategies // [modulename]
+
+        [strategy*]]
+    with
+      strategy* := <collect-om(template-to-prettyprint-strategy); separate-by(|"\n\n")>
+
+strategies
+
+  sort-to-prettyprint-strategy:
+    sort -> $[prettyprint-[sort] = is-string]
+
+  sort-decl-in-prettyprinting:
+    TemplateProduction(sort, Template(_), _) -> sort
+
+  sort-used-in-prettyprinting:
+    Placeholder(_, Sort(sort), _, _) -> sort
+
+  template-to-prettyprint-strategy:
+    TemplateProduction(sort, Template(e*), attr*) ->
+    <trim-chars(' ' + '\t' + '\r' + '\n')> // Workaround Stratego/856
+    $[prettyprint-[sort]:
+        [cons]([arg*]) ->
+        [w857]
+        [with']]
+    with
+      (open, close) := <choose-braces> e*;
+      is    := <get-indent-string> e*;
+      e'*   := <re-indent(|is);
+                map(try(rename-template-element))> e*;
+      cons  := <collect-one(?sdf-cons(<un-double-quote>))> attr*;
+      arg*  := <filter(template-element-to-cons-arg);
+                separate-by(|", ")> e'*;
+      part* := <remove-first-and-last-layout;
+                filter(template-element-to-stratego(|open, close))> e'*;
+      let*  := <filter(template-element-to-assignment);
+                separate-by(|";\n")> e'*;
+      with' := <if !let* => [] then !"" else !$[with
+                                                  [let*]] end>;
+      // Workaround Stratego/857
+      w857  := <string-replace(|"\n", "\n  ")>
+                <concat-strings>["$", open, part*, close]
+
+  choose-braces =
+    chars := <filter(?String(<id>)); concat-strings; explode-string>;
+    block := <length> <filter('[' + ']')> chars;
+    curly := <length> <filter('{' + '}')> chars;
+    round := <length> <filter('(' + ')')> chars;
+    ( where(!block => 0) < !("[", "]")
+    + where(!curly => 0) < !("{", "}")
+    + where(!round => 0) < !("(", ")")
+    + <debug> "no suitable braces found"; fail)
+
+  rename-template-element:
+    Placeholder(_, Sort(x), _, _) -> <id>{<newname> x}
+
+  template-element-to-cons-arg:
+    Placeholder(_, _, _, _){name} -> name
+
+  template-element-to-stratego(|open, close) =
+      \Placeholder(_, _, _, _){name} -> $[[open][name]'[close]]\
+    + \String(t) -> t\
+    + \Layout(t) -> t\
+
+  template-element-to-assignment:
+    Placeholder(_, Sort(x), None(), _){name} -> $[[name]' := <prettyprint-[x]> [name]]
+
+  template-element-to-assignment:
+    Placeholder(_, Sort(x), <Star() + Plus()>, Options(opt*)){name} -> t
+    with
+      if sep := <collect-one(?Separator(<id>))> opt* then
+        t := $[[name]' := <map(prettyprint-[x]); separate-by(|"[<escape> sep]")> [name]]
+      else
+        t := $[[name]' := <map(prettyprint-[x])> [name]]
+      end
+
+  template-element-to-assignment:
+    Placeholder(_, Sort(x), Option(), _){name} -> $[[name]' := <pp-option(prettyprint-[x])> [name]]

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:33:59 2011	(r22738)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:34:07 2011	(r22739)
@@ -8,8 +8,9 @@
   lib/editor-common.generated
   analysis
   desugar
-  generate-sdf
   generate-esv
+  generate-sdf
+  generate-str
 
 rules // Main editor interface (defined by editor/Template-Builders and -References.esv)
 
@@ -31,12 +32,15 @@
       result   := <s> selected
 
   generate-aterm(s) = generate(s|"aterm")
-  generate-sdf(s) = generate(s|"def")
   generate-esv(s) = generate(s|"esv")
+  generate-sdf(s) = generate(s|"def")
+  generate-str(s) = generate(s|"str")
 
   // Prints the abstract syntax ATerm of a selection.
   generate-aterm = generate-aterm(id)
 
+  generate-esv = generate-esv(to-esv)
+
   generate-sdf = generate-sdf(to-sdf)
 
-  generate-esv = generate-esv(to-esv)
+  generate-str = generate-str(to-str)

From tobivollebregt at gmail.com  Tue May  3 13:34:13 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:34:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22740 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: editor trans
Message-ID: <20110503113413.D729E2B805B@mx2.tudelft.nl>

Author: tvo
Date: Tue May  3 11:34:13 2011
New Revision: 22740
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22740&sc=1

Log:
Generate ESV, SDF and STR using a Generate Everything transform menu entry

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv	Tue May  3 11:34:07 2011	(r22739)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv	Tue May  3 11:34:13 2011	(r22740)
@@ -18,9 +18,10 @@
 
   // builder  : "Generate Java code (for selection)"   = generate-java (openeditor) (realtime)
   builder  : "Show abstract syntax (for selection)" = generate-aterm (openeditor) (realtime) (meta) (source)
-  builder  : "Generate SDF (for selection)" = generate-sdf (openeditor) (source)
-  builder  : "Generate ESV (for selection)" = generate-esv (openeditor) (source)
-  builder  : "Generate STR (for selection)" = generate-str (openeditor) (source)
+  builder  : "Generate ESV" = generate-esv (openeditor) (source)
+  builder  : "Generate SDF" = generate-sdf (openeditor) (source)
+  builder  : "Generate STR" = generate-str (openeditor) (source)
+  builder  : "Generate everything" = generate-all
 
 refactorings
 
@@ -28,4 +29,4 @@
 
   // refactoring ID            : "Rename Entity" = rename-entity (source) (cursor)
 
-  // on save: generate-java
+  // on save: generate-all

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:34:07 2011	(r22739)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:34:13 2011	(r22740)
@@ -44,3 +44,33 @@
   generate-sdf = generate-sdf(to-sdf)
 
   generate-str = generate-str(to-str)
+
+  generate-all:
+    (selected, position, ast, path, project-path) -> None()
+    with
+      <debug> "Generating ESV...";
+      esv := <to-esv> ast;
+      esv-filename := $[[project-path]/[<guarantee-extension(|"esv")> path]];
+      <write-string-to-file> (esv-filename, esv);
+      <refresh-workspace-file> esv-filename
+    with
+      <debug> "Generating SDF...";
+      sdf := <to-sdf> ast;
+      sdf-filename := $[[project-path]/[<guarantee-extension(|"def")> path]];
+      <write-string-to-file> (sdf-filename, sdf);
+      <refresh-workspace-file> sdf-filename
+    with
+      <debug> "Generating STR...";
+      str := <to-str> ast;
+      str-filename := $[[project-path]/[<guarantee-extension(|"str")> path]];
+      <write-string-to-file> (str-filename, str);
+      <refresh-workspace-file> str-filename
+
+  // When given a tuple (path, string) this writes string into path.
+  write-string-to-file =
+    with(
+      ?(filename, string);
+      handle := <fopen> (filename, "w");
+      <fputs> (string, handle);
+      <fclose> handle
+    )

From tobivollebregt at gmail.com  Tue May  3 13:34:21 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:34:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22741 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: editor
	syntax test trans
Message-ID: <20110503113421.5087D108C018@mx3.tudelft.nl>

Author: tvo
Date: Tue May  3 11:34:21 2011
New Revision: 22741
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22741&sc=1

Log:
`sort.cons = ...' productions/templates

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/example.tmpl
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv	Tue May  3 11:34:13 2011	(r22740)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Builders.esv	Tue May  3 11:34:21 2011	(r22741)
@@ -18,6 +18,7 @@
 
   // builder  : "Generate Java code (for selection)"   = generate-java (openeditor) (realtime)
   builder  : "Show abstract syntax (for selection)" = generate-aterm (openeditor) (realtime) (meta) (source)
+  builder  : "Show desugared AST (for selection)" = generate-desugared-aterm (openeditor) (realtime) (meta) (source)
   builder  : "Generate ESV" = generate-esv (openeditor) (source)
   builder  : "Generate SDF" = generate-sdf (openeditor) (source)
   builder  : "Generate STR" = generate-str (openeditor) (source)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf	Tue May  3 11:34:13 2011	(r22740)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf	Tue May  3 11:34:21 2011	(r22741)
@@ -18,6 +18,10 @@
     ID "=" SDF-Symbols SDF-Attributes -> SDF-Production {cons("SdfProduction")}
     ID "=" Template SDF-Attributes -> TemplateProduction {cons("TemplateProduction")}
 
+    %% template productions `sort.cons = ...'
+    ID "." ID "=" SDF-Symbols SDF-Attributes -> SDF-Production {cons("SdfProductionWithCons")}
+    ID "." ID "=" Template SDF-Attributes -> TemplateProduction {cons("TemplateProductionWithCons")}
+
     %% placeholders
     "<" PlaceholderPrefix1 PlaceholderSort PlaceholderSuffix PlaceholderOptions ">" -> TemplatePart1 {cons("Placeholder")}
     "[" PlaceholderPrefix2 PlaceholderSort PlaceholderSuffix PlaceholderOptions "]" -> TemplatePart2 {cons("Placeholder")}

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/example.tmpl
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/example.tmpl	Tue May  3 11:34:13 2011	(r22740)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/example.tmpl	Tue May  3 11:34:21 2011	(r22741)
@@ -2,26 +2,26 @@
 
 templates
 
-  Start = <<
+  Start.Module = <<
     module <modulename : ID>
     <Definition* ; separator="\n">
-  >> {cons("Module")}
+  >>
 
-  Definition = <<
+  Definition.Entity = <<
     entity <ID> {
       <Property* ; separator="\n">
     }
-  >> {cons("Entity"), blank}
+  >>
 
-  Property = [[
+  Property.Property = [[
     [x : ID] : [T : Type]
-  ]] {cons("Property"), blank}
+  ]]
 
 context-free syntax
 
-  Type = ID {cons("Type")}
+  Type.Type = ID
 
 lexical syntax
 
   [A-Za-z][A-Za-z0-9]* -> ID
-  CONTENTCOMPLETE = [A-Za-z0-9]* "CONTENTCOMPLETE" [0-9]+ {cons("CONTENTCOMPLETE")}
+  CONTENTCOMPLETE.CONTENTCOMPLETE = [A-Za-z0-9]* "CONTENTCOMPLETE" [0-9]+

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str	Tue May  3 11:34:13 2011	(r22740)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str	Tue May  3 11:34:21 2011	(r22741)
@@ -3,17 +3,39 @@
   libstratego-lib
   include/Template
 
+overlays
+
+  sdf-cons(name) = term(default(appl(unquoted("cons"), [fun(quoted(name))])))
+
 strategies
 
-  desugar-top = alltd(desugar)
+  desugar-top = downup(try(desugar))
 
 rules
 
   desugar:
+    NoImports() -> Imports([])
+
+  desugar:
     NoOptions() -> Options([])
 
   desugar:
+    no-attrs() -> attrs([])
+
+  desugar:
     SdfProduction(sort, symbol*, attr*) -> prod(symbol*, sort(sort), attr*)
 
   desugar:
+    SdfProductionWithCons(sort, cons, symbol*, attrs(attr*)) ->
+      prod(symbol*, sort(sort), attrs(attr'*))
+    with
+      attr'* := [sdf-cons(<double-quote> cons)|attr*]
+
+  desugar:
+    TemplateProductionWithCons(sort, cons, tmpl, attrs(attr*)) ->
+      TemplateProduction(sort, tmpl, attrs(attr'*))
+    with
+      attr'* := [sdf-cons(<double-quote> cons)|attr*]
+
+  desugar:
     Separator(x) -> Separator(<un-double-quote; unescape> x)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str	Tue May  3 11:34:13 2011	(r22740)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str	Tue May  3 11:34:21 2011	(r22741)
@@ -6,7 +6,7 @@
   include/Template
   lib/pp
   analysis
-  generate-str
+  desugar
 
 strategies
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Tue May  3 11:34:13 2011	(r22740)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Tue May  3 11:34:21 2011	(r22741)
@@ -3,12 +3,9 @@
   libstratego-lib
   include/Template
   analysis
+  desugar
   generate-esv // for remove-first-and-last-layout, get-indent-string, re-indent
 
-overlays
-
-  sdf-cons(name) = term(default(appl(unquoted("cons"), [fun(quoted(name))])))
-
 strategies
 
   to-str:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:34:13 2011	(r22740)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:34:21 2011	(r22741)
@@ -39,6 +39,8 @@
   // Prints the abstract syntax ATerm of a selection.
   generate-aterm = generate-aterm(id)
 
+  generate-desugared-aterm = generate-aterm(desugar-top)
+
   generate-esv = generate-esv(to-esv)
 
   generate-sdf = generate-sdf(to-sdf)

From tobivollebregt at gmail.com  Tue May  3 13:34:31 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:34:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22742 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: syntax trans
Message-ID: <20110503113431.21A362B800C@mx2.tudelft.nl>

Author: tvo
Date: Tue May  3 11:34:30 2011
New Revision: 22742
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22742&sc=1

Log:
Generate leading|trailing|no newlines.

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Options.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SdfKeywords.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Options.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Options.sdf	Tue May  3 11:34:30 2011	(r22742)
@@ -0,0 +1,13 @@
+module Options
+imports
+  Common
+
+exports
+  context-free syntax
+    "options" Option* -> Grammar {cons("Options")}
+
+    "newlines" ":" NewlineOptionValue -> Option {cons("Newlines")}
+
+    "none"     -> NewlineOptionValue {cons("None")}
+    "leading"  -> NewlineOptionValue {cons("Leading")}
+    "trailing" -> NewlineOptionValue {cons("Trailing")}

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SdfKeywords.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SdfKeywords.sdf	Tue May  3 11:34:21 2011	(r22741)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SdfKeywords.sdf	Tue May  3 11:34:30 2011	(r22742)
@@ -25,4 +25,5 @@
 
   %% non-SDF keywords
   context-free syntax
+    "options"           -> ModuleName {reject}
     "templates"         -> ModuleName {reject}

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf	Tue May  3 11:34:21 2011	(r22741)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf	Tue May  3 11:34:30 2011	(r22742)
@@ -2,6 +2,7 @@
 imports
   Common
   Module
+  Options
   SdfKeywords
   SdfRenamed
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Tue May  3 11:34:21 2011	(r22741)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Tue May  3 11:34:30 2011	(r22742)
@@ -4,6 +4,7 @@
   include/Template
   lib/editor-common.generated
   desugar
+  generation-utils
 
 strategies
 
@@ -17,6 +18,8 @@
         IsImported  :  current-file
         ProjectDir  := project-path
       )
+    with // default options
+      rules(Option :+ Newlines() -> None())
     with
       ast' := <desugar-top; declare-globals-top> ast;
       rules(Module : current-file -> ast')
@@ -24,17 +27,16 @@
   declare-globals-top = alltd(declare-globals)
 
   declare-globals:
-    T@ Template-Production(S, Template(e*), _) -> <id>
+    Newlines(t) -> <id>
     with
-      rules(Template :+ S -> T);
-      <declare-can-not-be-blank> e*
+      rules(Option :+ Newlines() -> t)
 
   declare-globals:
     template@ TemplateProduction(sort, Template(part*), attrs) ->
       TemplateProduction(sort, Template(part'*), attrs)
     with
       rules(Template :+ sort -> template);
-      part'* := <declare-can-not-be-blank> part*
+      part'* := <declare-placeholders> part*
     with
       <Declaration> sort
     <+
@@ -46,16 +48,18 @@
     with
       <alltd(declare-use)> part*
 
-  declare-can-not-be-blank =
+  declare-placeholders =
        ?[Newline(_), Layout(_), Placeholder(_, _, _, _), Newline(_) | _];
-       [id, id, id | declare-can-not-be-blank]
+       [add-anno(|Leading()), id, id, add-anno(|Trailing()) | id];
+       [id, id, id | declare-placeholders]
     <+ ?[Newline(_), Placeholder(_, _, _, _), Newline(_) | _];
-       [id, id | declare-can-not-be-blank]
+       [add-anno(|Leading()), id, add-anno(|Trailing()) | id];
+       [id, id | declare-placeholders]
     <+ ?[Placeholder(_, Sort(x), _, _) | _];
-       [id | declare-can-not-be-blank];
+       [id | declare-placeholders];
        rules(CanNotBeBlank :+ x -> x)
     <+ ?[_ | _];
-       [id | declare-can-not-be-blank]
+       [id | declare-placeholders]
     <+ ?[]
 
   declare-globals:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str	Tue May  3 11:34:21 2011	(r22741)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str	Tue May  3 11:34:30 2011	(r22742)
@@ -7,6 +7,7 @@
   lib/pp
   analysis
   desugar
+  generation-utils
 
 strategies
 
@@ -44,7 +45,7 @@
 
   template-elements-to-completion-parts =
     ?e*;
-    remove-first-and-last-layout;
+    trim-layout;
     map(try(placeholder-to-completion-part));
     remove-cursor-except-first;
 	  if indent := <get-indent-string> e* then
@@ -57,15 +58,6 @@
   template-sort-to-anno =
     CanNotBeBlank < !None() + !Blank()
 
-  remove-first-and-last-layout =
-    repeat(  \[Layout(_)  | tail] -> tail\
-           + \[Newline(_) | tail] -> tail\ );
-    // FIXME: This part only needs to run if the template will get a (blank) anno!
-    listbu(   \[Layout(_)] -> []\
-           <+ \[Newline(_)] -> []\ <+ id)
-
-// first pass
-
   placeholder-to-completion-part:
     Placeholder(Text(name), Sort(sort), None(), _) -> PlaceholderWithSort($[<[name]:], sort)
 
@@ -87,7 +79,7 @@
     <divr> (<length> <filter(?String(_))> e*, <length> e*)
 
   template-elements-to-string =
-    remove-first-and-last-layout;
+    trim-layout;
     filter(
          \Placeholder(Text(x), _, _, _) -> x\
       <+ \Placeholder(None(), Sort(x), _, _) -> x\
@@ -105,26 +97,6 @@
   placeholder-to-completion-part:
     Placeholder(_, _, Star(), _) -> Cursor()
 
-// second (re-indent) pass
-
-  get-indent-string =
-    filter(not(?Layout(_) + ?Newline(_)); origin-column); list-min => size;
-    // Build string from right to left, as list.
-    ![]; repeat(![' ' | <id>] | size); !['\n' | <id>];
-    implode-string
-
-  re-indent(|indent-string) =
-    \[Newline(x), Layout(y) | tail] -> [Layout(z) | tail']
-    with
-      z := <string-replace(|indent-string, "\n")> <conc-strings>(x, y);
-      tail' := <re-indent(|indent-string)> tail\
-  <+
-    \[head | tail] -> [head | <re-indent(|indent-string)> tail]\
-  <+
-    []
-
-// third pass
-
   text-to-completion-part:
     Newline(_) -> String("\n")
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str	Tue May  3 11:34:21 2011	(r22741)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str	Tue May  3 11:34:30 2011	(r22742)
@@ -7,6 +7,7 @@
   lib/sdf-parenthesize
   lib/sdf-pretty-print
   analysis
+  generation-utils
 
 strategies
 
@@ -85,14 +86,29 @@
     TemplateProduction(S', Template(e* @[_|_]), attrs')
       -> p|[ A* -> S' attrs' ]|
     with
-      A* := <filter(template-element-to-sdf)> e*
+      A* := <newlines-switch(id, trim-trailing-layout, trim-leading-layout);
+             filter(template-element-to-sdf)> e*
 
   template-to-sdf:
     TemplateProduction(S', Template([]), attrs')
       -> p|[ -> S' attrs' ]|
 
   template-element-to-sdf:
-    Text(x) -> <string-to-sdf> x
+    Newline(_){ /* neither Leading() nor Trailing() */ } -> A|[ "\\n" ]|
+    where not(use-no-newlines)
+
+  template-element-to-sdf:
+    Newline(_) -> A|[ "\\n" ]|
+    where use-leading-newlines
+    where not(has-anno(|Leading()))
+
+  template-element-to-sdf:
+    Newline(_) -> A|[ "\\n" ]|
+    where use-trailing-newlines
+    where not(has-anno(|Trailing()))
+
+  template-element-to-sdf:
+    String(x) -> <string-to-sdf> x
 
   template-element-to-sdf:
     Placeholder(_, Sort(S'), None(), _) -> A|[ S' ]|

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Tue May  3 11:34:21 2011	(r22741)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Tue May  3 11:34:30 2011	(r22742)
@@ -4,7 +4,7 @@
   include/Template
   analysis
   desugar
-  generate-esv // for remove-first-and-last-layout, get-indent-string, re-indent
+  generation-utils
 
 strategies
 
@@ -69,7 +69,7 @@
       cons  := <collect-one(?sdf-cons(<un-double-quote>))> attr*;
       arg*  := <filter(template-element-to-cons-arg);
                 separate-by(|", ")> e'*;
-      part* := <remove-first-and-last-layout;
+      part* := <trim-layout;
                 filter(template-element-to-stratego(|open, close))> e'*;
       let*  := <filter(template-element-to-assignment);
                 separate-by(|";\n")> e'*;

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Tue May  3 11:34:30 2011	(r22742)
@@ -0,0 +1,57 @@
+module generation-utils
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  include/Template
+
+signature
+  constructors
+    Newlines : X
+
+strategies
+
+  add-anno(|anno):
+    x{a*} -> x{anno, a*}
+
+  has-anno(|anno):
+    x{a*} -> <id>
+    where <one(?anno)> a*
+
+  trim-leading-layout =
+    repeat(  \[Layout(_)  | tail] -> tail\
+           + \[Newline(_) | tail] -> tail\ )
+
+  trim-trailing-layout =
+    listbu(   \[Layout(_)] -> []\
+           <+ \[Newline(_)] -> []\ <+ id)
+
+  trim-layout =
+    trim-leading-layout;
+    trim-trailing-layout
+
+  get-indent-string =
+    filter(not(?Layout(_) + ?Newline(_)); origin-column); list-min => size;
+    // Build string from right to left, as list.
+    ![]; repeat(![' ' | <id>] | size); !['\n' | <id>];
+    implode-string
+
+  re-indent(|indent-string) =
+    \[Newline(x), Layout(y) | tail] -> [Layout(z) | tail']
+    with
+      z := <string-replace(|indent-string, "\n")> <conc-strings>(x, y);
+      tail' := <re-indent(|indent-string)> tail\
+  <+
+    \[head | tail] -> [head | <re-indent(|indent-string)> tail]\
+  <+
+    []
+
+  use-no-newlines       = <Option> Newlines() => None()
+  use-leading-newlines  = <Option> Newlines() => Leading()
+  use-trailing-newlines = <Option> Newlines() => Trailing()
+
+  newlines-switch(none, leading, trailing) =
+    switch <Option> Newlines()
+      case ?None(): none
+      case ?Leading(): leading
+      case ?Trailing(): trailing
+    end

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:34:21 2011	(r22741)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:34:30 2011	(r22742)
@@ -39,7 +39,7 @@
   // Prints the abstract syntax ATerm of a selection.
   generate-aterm = generate-aterm(id)
 
-  generate-desugared-aterm = generate-aterm(desugar-top)
+  generate-desugared-aterm = generate-aterm(desugar-top; declare-globals-top)
 
   generate-esv = generate-esv(to-esv)
 

From tobivollebregt at gmail.com  Tue May  3 13:34:39 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:34:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22743 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: editor trans
Message-ID: <20110503113439.3B04C7F8015@mx1.tudelft.nl>

Author: tvo
Date: Tue May  3 11:34:39 2011
New Revision: 22743
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22743&sc=1

Log:
Editor services!

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/sdf.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-References.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv	Tue May  3 11:34:30 2011	(r22742)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv	Tue May  3 11:34:39 2011	(r22743)
@@ -3,7 +3,18 @@
 imports Template-Colorer.generated
 
 colorer
-                                                                      
-  // This file can be used for custom colorer rules.                  
-  //                                                                  
-  // See the imported file for a brief introduction and examples.     
\ No newline at end of file
+
+  // This file can be used for custom colorer rules.
+  //
+  // See the imported file for a brief introduction and examples.
+
+  SDF-StrCon._            : blue
+
+  _.String                : template
+  _.Layout                : template
+  _.Newline               : template //0 0 255 255 0 0  (highlight trailing whitespace)
+  PlaceholderText1        : template
+  PlaceholderText2        : template
+  _.Placeholder           : _ bold
+
+  template = 0 0 255 240 240 240

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Completions.esv	Tue May  3 11:34:30 2011	(r22742)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Completions.esv	Tue May  3 11:34:39 2011	(r22743)
@@ -1,6 +1,6 @@
 module Template-Completions
 
-imports Template-Completions.generated
+// imports Template-Completions.generated
 
 completions
 
@@ -8,10 +8,15 @@
   //
   // See the imported file for a brief introduction and examples.
 
+  completion template TemplateProduction : "template" =
+    <Sort> "." <Cons> " = <<\n\t" (cursor) "\n>>" (blank)
+
+  completion template TemplatePart1 : "placeholder" = "<" <text> ":" <Sort> ">"
+  completion template TemplatePart2 : "placeholder" = "[" <text> ":" <Sort> "]"
 
 completions
   // Semantic (identifier) completion:
 
-  // completion proposer                  : editor-complete
+  completion proposer                  : editor-complete
 
   // completion trigger                   : ":"

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-References.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-References.esv	Tue May  3 11:34:30 2011	(r22742)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-References.esv	Tue May  3 11:34:39 2011	(r22743)
@@ -11,5 +11,5 @@
 
 references
 
-  // reference _ : editor-resolve
+  reference _ : editor-resolve
   // hover _     : editor-hover

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Tue May  3 11:34:30 2011	(r22742)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Tue May  3 11:34:39 2011	(r22743)
@@ -72,7 +72,11 @@
         <+ <debug(!"Declare-globals-top failed: ")> x
       )> x
    <+
-      <debug(!"Import failed: ")> x
+      <debug(!"Import failed: ")> x;
+      rules(IsImportFailed: _)
+
+strategies
+  // This part has mostly been copied from the SDF editor!
 
   resolve-import =
     // TODO: better import handling
@@ -89,3 +93,82 @@
     \x -> $[[<ProjectDir>]/lib/[x].def]\; file-exists
   <+
     \x -> $[[<CurrentDir>]/[x].sdf]\; file-exists
+
+  declare-globals:
+    prod @ prod(lhs, sort, _) -> <id>
+    where
+      !sort;
+      try(?cf(<id>) + ?lex(<id>));
+      repeat(?label(_, <id>));
+      (?sort(x) + ?parameterized-sort(x, _))
+    with
+      <Declaration> x
+    <+
+      // file := <CurrentFile>;
+      rules(
+        Declaration: x -> prod
+        // DeclarationFile: x -> file
+      )
+    with
+      <alltd(declare-use)> lhs
+
+  declare-globals:
+    'sorts(_) -> <id>
+    with
+      alltd(declare-use)
+
+  declare-globals:
+    context-free-start-symbols(_) -> <id>
+    with
+      alltd(declare-use)
+
+  declare-globals:
+    lexical-start-symbols(_) -> <id>
+    with
+      alltd(declare-use)
+
+  declare-globals:
+    kernel-start-symbols(_) -> <id>
+    with
+      alltd(declare-use)
+
+  declare-simple-global:
+    sort(x) -> <id>
+    with
+      rules(Declaration: x -> x)
+
+  declare-use:
+    sort(x) -> <id>
+    with
+      rules(Usage: x -> x)
+
+  declare-use:
+    parameterized-sort(x, y) -> <id>
+    where
+      if !y => [sort(y')]; <is-string> x; <is-string> y' then
+        text := ${{x}[[{y'}]]};
+        rules(Usage: text -> text)
+      end
+
+  declare-use:
+    Placeholder(_, Sort(x), _, _) -> <id>
+    with
+      rules(Usage: x -> x)
+
+  propose-completion:
+    sort(COMPLETION(x)) -> [decl*, use*]
+    with
+      decl* := <all-keys-Declaration> x;
+      use*  := <all-keys-Usage> x
+
+  propose-completion:
+    NOCONTEXT(COMPLETION(x)) -> [decl*, use*]
+    with
+      decl* := <all-keys-Declaration> x;
+      use*  := <all-keys-Usage> x
+
+  propose-completion:
+    Sort(COMPLETION(x)) -> [decl*, use*]
+    with
+      decl* := <all-keys-Declaration> x;
+      use*  := <all-keys-Usage> x

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/sdf.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/sdf.str	Tue May  3 11:34:39 2011	(r22743)
@@ -0,0 +1,182 @@
+// Mostly copied from sdf.str in the SDF editor.
+// Only editor-analyze has been modified to fit my purposes.
+
+module sdf
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  lib/editor-common.generated
+  analysis
+
+rules
+
+  sdf-editor-analyze:
+    (ast, path, project-path) -> (error'*, warning'*)
+    with
+      // We only collect-om since we don't want inner warning dupes
+      error*   := <collect-om(?context-free-syntax(<collect-om(context-free-syntax-error)>), conc)> ast;
+      warning* := <collect-om(?context-free-syntax(<collect-om(context-free-syntax-warning)>), conc)> ast;
+      if <file-exists> $[[project-path]/.disable-global-analysis] then
+        serror* := []
+      else
+        serror* := <collect-om(context-free-syntax-sort-error, conc)> ast
+      end;
+      if IsImportFailed then
+        error'*   := error*;
+        warning'* := <conc> (serror*, warning*)
+      else
+        error'*   := <conc> (serror*, error*);
+        warning'* := warning*
+      end
+
+  editor-complete:
+    (node, position, ast, path, project-path) -> proposals
+    where
+      proposals := <propose-completion <+ ![]> node
+
+  editor-resolve:
+    (sort(x), position, ast, path, project-path) -> target
+    where
+      target := <Declaration> x
+
+  editor-resolve:
+    (unparameterized(x), position, ast, path, project-path) -> target
+    where
+      target := <parse-template-file> <resolve-import> x
+
+  // override pp-sdf-string = fail // ensure compiler doesn't blow up
+
+rules // Limited exisiting sort checking
+
+  context-free-syntax-sort-error:
+    renamed-module(x, renamings(y)) -> [] // not supported
+
+  context-free-syntax-sort-error:
+    sort(x) -> (x, $[No definition for [x]])
+    where
+      not(<Declaration> x)
+
+  context-free-syntax-sort-error:
+    parameterized-sort(_, _) -> [] // not supported
+
+  context-free-syntax-sort-error:
+    'sorts(_) -> [] // ignored
+
+rules // Local checks
+
+  context-free-syntax-warning:
+    prod(p*, s, a*) -> (target, $[Missing {cons("Label")} attribute to label the abstract syntax])
+    where
+      (
+        not(<occurrences(?sort(_))> p* => 1; <occurrences(?lit(_))> p* => 0)
+      <+
+        <oncetd(is-iter + ?opt(_))> p*
+      );
+      if !a* => attrs(a'*) then
+        not(<one(term(default(appl(unquoted("cons" + "ast"), [fun(quoted(not("\"\"")))]))))> a'*);
+        not(<one(bracket() + reject())> a'*);
+        not(!s; (sort("Keyword") + sort("\"Keyword\"")));
+        target := a*
+      else
+        target := s
+      end
+
+  context-free-syntax-warning:
+    t @ term(default(appl(unquoted("cons"), a*))) -> (t, $[Single argument expected for {cons("Name")} attribute])
+    where
+      not(<length> a* => 1)
+
+  context-free-syntax-warning:
+    t @ term(default(annotated(_, _))) -> (t, $[Use round parentheses () for attribute arguments])
+
+  context-free-syntax-error:
+    prod([x], s, attrs(a*)) -> (a*, $[Illegal use of {bracket} attribute])
+    where
+      <one(bracket())> a*
+
+  // TODO: don't warn for | in {reject} productions
+  context-free-syntax-warning:
+    alt(x, y) -> (<id>, $[The | construct is deprecated: instead of A|B->C use A->C B->C])
+
+  context-free-syntax-warning:
+    opt(s @ seq(_, _)) -> (s, $[Extract sequence in optional to separate productions to ensure acceptable abstract syntax])
+    where
+      <occurrences(is-non-terminal)> s => 1
+
+  context-free-syntax-warning:
+    opt(lit) -> (lit, $[Extract literal in optional to separate productions to ensure consistent abstract syntax])
+    where
+      oncetd(?lit(_))
+
+  /**
+   * Tests if something is a non-terminal in terms of the AST produced.
+   */
+  is-non-terminal =
+    ?sort(_) + ?opt(_) + is-iter
+
+  is-iter =
+    ?iter(_) + ?iter-star(_) + ?iter-sep(_, _) + ?iter-star-sep(_, _)
+
+  // Instruct users to use { X "," }*
+
+  context-free-syntax-warning:
+    [sort(x), iter-star(seq(lit(sep), [sort(x)])) | _] ->
+    (<id>, $[Use {[x] [sep]}+ instead for [sep]-separated lists])
+
+  context-free-syntax-warning:
+    [iter-star(seq(sort(x), [lit(sep)])), sort(x) | _] ->
+    (<id>, $[Use {[x] [sep]}+ instead for [sep]-separated lists])
+
+  context-free-syntax-warning:
+    [opt(sort(x)), iter-star(seq(lit(sep), [sort(x)])) | _] ->
+    (<id>, $[Use {[x] [sep]}* instead for [sep]-separated lists])
+
+  context-free-syntax-warning:
+    [iter-star(seq(sort(x), [lit(sep)])), opt(sort(x)) | _] ->
+    (<id>, $[Use {[x] [sep]}* instead for [sep]-separated lists])
+
+  context-free-syntax-warning:
+    prod(lhs @ [sort(x), opt(seq(lit(sep), [sort(xs)]))], sort(xs), _) ->
+    (lhs, $[Use {[x] [sep]}+ instead for [sep]-separated lists])
+
+  // Instruct users to use { X ","? }* (seen in MDSD 2010)
+
+  context-free-syntax-warning:
+    [sort(x), iter-star(seq(opt(lit(sep)), [sort(x)])) | _] ->
+    (<id>, $[Use {[x] [sep]?}+ instead for [sep]?-separated lists])
+
+  context-free-syntax-warning:
+    [iter-star(seq(sort(x), [opt(lit(sep))])), sort(x) | _] ->
+    (<id>, $[Use {[x] [sep]?}+ instead for [sep]?-separated lists])
+
+  context-free-syntax-warning:
+    [opt(sort(x)), iter-star(seq(opt(lit(sep)), [sort(x)])) | _] ->
+    (<id>, $[Use {[x] [sep]?}* instead for [sep]?-separated lists])
+
+  context-free-syntax-warning:
+    [iter-star(seq(sort(x), [opt(lit(sep))])), opt(sort(x)) | _] ->
+    (<id>, $[Use {[x] [sep]?}* instead for [sep]?-separated lists])
+
+  context-free-syntax-warning:
+    prod(lhs @ [sort(x), opt(seq(opt(lit(sep)), [sort(xs)]))], sort(xs), _) ->
+    (lhs, $[Use {[x] [sep]?}+ instead for [sep]?-separated lists])
+
+  context-free-syntax-warning:
+    [_ | t*] -> <context-free-syntax-warning> t*
+
+  context-free-syntax-warning:
+    iter-star(cs) -> (<id>, $[Character class iteration should be in lexical syntax section])
+    where
+      <oncetd(?range(_, _))> cs
+
+  context-free-syntax-warning:
+    iter(cs) -> (<id>, $[Character class iteration should be in lexical syntax section])
+    where
+      <oncetd(?range(_, _))> cs
+
+  context-free-syntax-warning:
+    iter-sep(_, bad @ sort(_)) -> (bad, "Non-terminal used as a list separator (use round braces for grouping non-terminals)")
+
+  context-free-syntax-warning:
+    iter-star-sep(_, bad @ sort(_)) -> (bad, "Non-terminal used as a list separator (use round braces for grouping non-terminals)")

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:34:30 2011	(r22742)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:34:39 2011	(r22743)
@@ -11,19 +11,54 @@
   generate-esv
   generate-sdf
   generate-str
+  sdf
 
 rules // Main editor interface (defined by editor/Template-Builders and -References.esv)
 
   // Analyzes the current program, returning a tuple with errors, warnings, and notes;
   // each a list of (term, message) tuples or simply (message) terms.
   editor-analyze:
-    (ast, path, project-path) -> (ast', errors, warnings, notes)
+    (ast, path, project-path) -> (ast', error*, warning*, [])
     with
       editor-init;
-      ast'     := <analyze>;
-      errors   := [];
-      warnings := [];
-      notes    := []
+      ast' := <analyze>
+    with
+      (sdf-error*, warning*) := <sdf-editor-analyze>;
+      tmpl-error* := <collect-om(?Templates(<collect-om(templates-error)>), conc)> ast;
+      error*   := [sdf-error*, tmpl-error*]
+
+  editor-resolve:
+    (x, position, ast, path, project-path) -> target
+    where
+      target := <Declaration> x
+
+  editor-resolve:
+    (Import(x), position, ast, path, project-path) -> target
+    where
+      target := <parse-template-file> <resolve-import> x
+
+rules // Limited existing sort checking (plugs into sdf.str)
+
+  context-free-syntax-sort-error:
+    Placeholder(_, Sort(x), _, _) -> (x, $[No definition for [x]])
+    where
+      not(<Declaration> x)
+
+rules // Local checks
+
+  templates-error:
+    TemplateProductionWithCons(_, _, _, attrs(attr*)) ->
+      (x, $[Constructor already specified at start of production. Please remove this cons attribute.])
+    where
+      <collect-one(?sdf-cons(x))> attr*
+
+  context-free-syntax-error:
+    SdfProductionWithCons(_, _, _, attrs(attr*)) ->
+      (x, $[Constructor already specified at start of production. Please remove this cons attribute.])
+    where
+      <collect-one(?sdf-cons(x))> attr*
+
+rules // Code generation
 
   generate(s|ext):
     (selected, position, ast, path, project-path) -> (filename, result)

From tobivollebregt at gmail.com  Tue May  3 13:34:46 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:34:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22744 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: syntax trans
Message-ID: <20110503113446.C72AD108C00C@mx3.tudelft.nl>

Author: tvo
Date: Tue May  3 11:34:46 2011
New Revision: 22744
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22744&sc=1

Log:
Added import-paths

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Options.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Options.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Options.sdf	Tue May  3 11:34:39 2011	(r22743)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Options.sdf	Tue May  3 11:34:46 2011	(r22744)
@@ -1,6 +1,7 @@
 module Options
 imports
   Common
+  Module
 
 exports
   context-free syntax
@@ -11,3 +12,9 @@
     "none"     -> NewlineOptionValue {cons("None")}
     "leading"  -> NewlineOptionValue {cons("Leading")}
     "trailing" -> NewlineOptionValue {cons("Trailing")}
+
+    "import" "path" ":" ImportPath -> Option {cons("ImportPath")}
+
+  lexical syntax
+        ModuleName -> ImportPath  %% relative path
+    "/" ModuleName -> ImportPath  %% absolute path (relative to project root)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Tue May  3 11:34:39 2011	(r22743)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Tue May  3 11:34:46 2011	(r22744)
@@ -13,23 +13,32 @@
     with
       current-file := $[[project-path]/[path]];
       rules(
-        CurrentDir  := <dirname> $[[project-path]/[path]]
-        CurrentFile := <base-filename> path
+        CurrentFile := current-file
         IsImported  :  current-file
         ProjectDir  := project-path
       )
     with // default options
-      rules(Option :+ Newlines() -> None())
+      rules(
+        Options :+ Newlines() -> None()
+        Options :+ ImportPath() -> "."
+      )
     with
-      ast' := <desugar-top; declare-globals-top> ast;
+      ast' := <desugar-top; declare-options-top; declare-globals-top> ast;
       rules(Module : current-file -> ast')
 
+  declare-options-top = Module(id, id, all(try(Options(alltd(declare-options)))))
+
   declare-globals-top = alltd(declare-globals)
 
-  declare-globals:
+  declare-options:
     Newlines(t) -> <id>
     with
-      rules(Option :+ Newlines() -> t)
+      rules(Options :+ Newlines() -> t)
+
+  declare-options:
+    ImportPath(t) -> <id>
+    with
+      rules(Options :+ ImportPath() -> t)
 
   declare-globals:
     template@ TemplateProduction(sort, Template(part*), attrs) ->
@@ -75,25 +84,25 @@
       <debug(!"Import failed: ")> x;
       rules(IsImportFailed: _)
 
+  resolve-import =
+    try(
+      ?import;
+      project-dir := <ProjectDir>;
+      current-dir := <dirname> <CurrentFile>;
+	    <bagof-Options> ImportPath();
+	    fetch-elem(
+	      if string-starts-with(|"/") then
+          \path -> $[[project-dir][path]/[import].tmpl]\; file-exists
+	      else
+	        \path -> $[[current-dir]/[path]/[import].tmpl]\; file-exists
+	      end
+	    );
+	    normpath
+    )
+
 strategies
   // This part has mostly been copied from the SDF editor!
 
-  resolve-import =
-    // TODO: better import handling
-    \x -> $[[<CurrentDir>]/[x].tmpl]\; file-exists
-  <+
-    \x -> $[[<ProjectDir>]/[x].tmpl]\; file-exists
-  <+
-    \x -> $[[<ProjectDir>]/syntax/[x].tmpl]\; file-exists
-  <+
-    \x -> $[[<ProjectDir>]/[x].sdf]\; file-exists
-  <+
-    \x -> $[[<ProjectDir>]/syntax/[x].sdf]\; file-exists
-  <+
-    \x -> $[[<ProjectDir>]/lib/[x].def]\; file-exists
-  <+
-    \x -> $[[<CurrentDir>]/[x].sdf]\; file-exists
-
   declare-globals:
     prod @ prod(lhs, sort, _) -> <id>
     where

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str	Tue May  3 11:34:39 2011	(r22743)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str	Tue May  3 11:34:46 2011	(r22744)
@@ -44,13 +44,10 @@
       end
 
   template-elements-to-completion-parts =
-    ?e*;
-    trim-layout;
     map(try(placeholder-to-completion-part));
     remove-cursor-except-first;
-	  if indent := <get-indent-string> e* then
-	    re-indent(|indent)
-	  end;
+    try-re-indent;
+    trim-layout;
     map(try(text-to-completion-part));
     concatenate-consecutive-strings;
     map(try(escape-and-quote))

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Tue May  3 11:34:39 2011	(r22743)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Tue May  3 11:34:46 2011	(r22744)
@@ -63,8 +63,7 @@
         [with']]
     with
       (open, close) := <choose-braces> e*;
-      is    := <get-indent-string> e*;
-      e'*   := <re-indent(|is);
+      e'*   := <try-re-indent;
                 map(try(rename-template-element))> e*;
       cons  := <collect-one(?sdf-cons(<un-double-quote>))> attr*;
       arg*  := <filter(template-element-to-cons-arg);

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Tue May  3 11:34:39 2011	(r22743)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Tue May  3 11:34:46 2011	(r22744)
@@ -3,10 +3,12 @@
   libstratego-lib
   lib/editor-common.generated
   include/Template
+  analysis
 
 signature
   constructors
     Newlines : X
+    ImportPath : X
 
 strategies
 
@@ -45,13 +47,30 @@
   <+
     []
 
-  use-no-newlines       = <Option> Newlines() => None()
-  use-leading-newlines  = <Option> Newlines() => Leading()
-  use-trailing-newlines = <Option> Newlines() => Trailing()
+  try-re-indent =
+    if get-indent-string => is then
+      re-indent(|is)
+    end
+
+  use-no-newlines       = <Options> Newlines() => None()
+  use-leading-newlines  = <Options> Newlines() => Leading()
+  use-trailing-newlines = <Options> Newlines() => Trailing()
 
   newlines-switch(none, leading, trailing) =
-    switch <Option> Newlines()
+    switch <Options> Newlines()
       case ?None(): none
       case ?Leading(): leading
       case ?Trailing(): trailing
     end
+
+  normpath =
+    ?original;
+    string-tokenize(|['/', '\']);
+    filter(not("."));
+    repeat(   rec x( \[_, ".." | t] -> t\ <+ [id | x] ) // remove one "dir/.." pair
+           <+ \[".." | t] -> t\ );                      // remove leading ".."
+    separate-by(|"/");
+    if <is-abspath> original then  // FIXME: is-abspath may be POSIX-only?
+      !["/" | <id>]
+    end;
+    concat-strings

From tobivollebregt at gmail.com  Tue May  3 13:34:55 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:34:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22745 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans
Message-ID: <20110503113455.31DA17F8015@mx1.tudelft.nl>

Author: tvo
Date: Tue May  3 11:34:54 2011
New Revision: 22745
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22745&sc=1

Log:
Rewrote get-indent without origin-column.

(origin information isn't always available)

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Tue May  3 11:34:46 2011	(r22744)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Tue May  3 11:34:54 2011	(r22745)
@@ -31,11 +31,29 @@
     trim-leading-layout;
     trim-trailing-layout
 
+  // origin-column (obviously) doesn't work in an imported file...
+  // get-indent-string =
+  //   filter(not(?Layout(_) + ?Newline(_)); origin-column); list-min => size;
+  //   // Build string from right to left, as list.
+  //   ![]; repeat(![' ' | <id>] | size); !['\n' | <id>];
+  //   implode-string
+
+  // This doesn't take the indentation due to everything up to
+  // the open brackets of the template into account.
   get-indent-string =
-    filter(not(?Layout(_) + ?Newline(_)); origin-column); list-min => size;
-    // Build string from right to left, as list.
-    ![]; repeat(![' ' | <id>] | size); !['\n' | <id>];
-    implode-string
+    let get-indent =
+             \[Newline(_), Layout(y), _ | tail] -> [<string-length> y | <get-indent> tail]\
+          <+ \[Newline(_), Layout(_)] -> []\
+          <+ \[Newline(_), Newline(_)] -> []\
+          <+ \[Newline(_), y | tail] -> [0 | <get-indent> tail]\
+          <+ \[_ | tail] -> <get-indent> tail\
+          <+ []
+    in
+      get-indent; list-min => size;
+      // Build string from right to left, as list.
+      ![]; repeat(![' ' | <id>] | size); !['\n' | <id>];
+      implode-string
+    end
 
   re-indent(|indent-string) =
     \[Newline(x), Layout(y) | tail] -> [Layout(z) | tail']

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:34:46 2011	(r22744)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:34:54 2011	(r22745)
@@ -23,9 +23,11 @@
       editor-init;
       ast' := <analyze>
     with
-      (sdf-error*, warning*) := <sdf-editor-analyze>;
-      tmpl-error* := <collect-om(?Templates(<collect-om(templates-error)>), conc)> ast;
-      error*   := [sdf-error*, tmpl-error*]
+      (sdf-error*, sdf-warning*) := <sdf-editor-analyze>;
+      tmpl-error*   := <collect-om(?Templates(<collect-om(templates-error)>), conc)> ast;
+      tmpl-warning* := <collect-om(?Templates(<collect-om(templates-warning)>), conc)> ast;
+      error*   := [sdf-error*, tmpl-error*];
+      warning* := [sdf-warning*, tmpl-warning*]
 
   editor-resolve:
     (x, position, ast, path, project-path) -> target
@@ -58,6 +60,13 @@
     where
       <collect-one(?sdf-cons(x))> attr*
 
+  templates-warning:
+    Template([head | tail]) ->
+      (head, $[It is recommended to insert a linebreak between the start of a multiline template and its first element.])
+    where
+      <not(?Newline(_))> head; // doesn't start with newline
+      <one(?Newline(_))> tail  // does contain a newline
+
 rules // Code generation
 
   generate(s|ext):

From tobivollebregt at gmail.com  Tue May  3 13:35:01 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:35:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22746 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: syntax trans
Message-ID: <20110503113501.9DEE82B8010@mx2.tudelft.nl>

Author: tvo
Date: Tue May  3 11:35:01 2011
New Revision: 22746
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22746&sc=1

Log:
Settable output paths.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Options.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Options.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Options.sdf	Tue May  3 11:34:54 2011	(r22745)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Options.sdf	Tue May  3 11:35:01 2011	(r22746)
@@ -13,8 +13,12 @@
     "leading"  -> NewlineOptionValue {cons("Leading")}
     "trailing" -> NewlineOptionValue {cons("Trailing")}
 
-    "import" "path" ":" ImportPath -> Option {cons("ImportPath")}
+    "import" "path" ":" PathOptionValue -> Option {cons("ImportPath")}
+
+    "esv" "output" ":" PathOptionValue -> Option {cons("EsvOutput")}
+    "sdf" "output" ":" PathOptionValue -> Option {cons("SdfOutput")}
+    "str" "output" ":" PathOptionValue -> Option {cons("StrOutput")}
 
   lexical syntax
-        ModuleName -> ImportPath  %% relative path
-    "/" ModuleName -> ImportPath  %% absolute path (relative to project root)
+        ModuleName -> PathOptionValue  %% relative path
+    "/" ModuleName -> PathOptionValue  %% absolute path (relative to project root)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Tue May  3 11:34:54 2011	(r22745)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Tue May  3 11:35:01 2011	(r22746)
@@ -23,6 +23,8 @@
         Options :+ ImportPath() -> "."
       )
     with
+      <debug(!"Analyzing: ")> current-file
+    with
       ast' := <desugar-top; declare-options-top; declare-globals-top> ast;
       rules(Module : current-file -> ast')
 
@@ -40,6 +42,33 @@
     with
       rules(Options :+ ImportPath() -> t)
 
+  declare-options:
+    EsvOutput(path) -> <id>
+    with
+      path' := <norm-output-path> path;
+      rules(Options :+ EsvOutput() -> path')
+
+  declare-options:
+    SdfOutput(path) -> <id>
+    with
+      path' := <norm-output-path> path;
+      rules(Options :+ SdfOutput() -> path')
+
+  declare-options:
+    StrOutput(path) -> <id>
+    with
+      path' := <norm-output-path> path;
+      rules(Options :+ StrOutput() -> path')
+
+  norm-output-path:
+    path -> path'
+    with
+      if is-abspath then
+        path' := $[[<ProjectDir>][path]]
+      else
+        path' := $[[<dirname> <CurrentFile>]/[path]]
+      end
+
   declare-globals:
     template@ TemplateProduction(sort, Template(part*), attrs) ->
       TemplateProduction(sort, Template(part'*), attrs)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Tue May  3 11:34:54 2011	(r22745)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Tue May  3 11:35:01 2011	(r22746)
@@ -9,8 +9,11 @@
   constructors
     Newlines : X
     ImportPath : X
+    EsvOutput : X
+    SdfOutput : X
+    StrOutput : X
 
-strategies
+strategies // Utility strategies
 
   add-anno(|anno):
     x{a*} -> x{anno, a*}
@@ -70,17 +73,6 @@
       re-indent(|is)
     end
 
-  use-no-newlines       = <Options> Newlines() => None()
-  use-leading-newlines  = <Options> Newlines() => Leading()
-  use-trailing-newlines = <Options> Newlines() => Trailing()
-
-  newlines-switch(none, leading, trailing) =
-    switch <Options> Newlines()
-      case ?None(): none
-      case ?Leading(): leading
-      case ?Trailing(): trailing
-    end
-
   normpath =
     ?original;
     string-tokenize(|['/', '\']);
@@ -92,3 +84,20 @@
       !["/" | <id>]
     end;
     concat-strings
+
+strategies // Options
+
+  use-no-newlines       = <Options> Newlines() => None()
+  use-leading-newlines  = <Options> Newlines() => Leading()
+  use-trailing-newlines = <Options> Newlines() => Trailing()
+
+  newlines-switch(none, leading, trailing) =
+    switch <Options> Newlines()
+      case ?None(): none
+      case ?Leading(): leading
+      case ?Trailing(): trailing
+    end
+
+  get-esv-output-path = <Options> EsvOutput()
+  get-sdf-output-path = <Options> SdfOutput()
+  get-str-output-path = <Options> StrOutput()

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:34:54 2011	(r22745)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:35:01 2011	(r22746)
@@ -11,6 +11,7 @@
   generate-esv
   generate-sdf
   generate-str
+  generation-utils
   sdf
 
 rules // Main editor interface (defined by editor/Template-Builders and -References.esv)
@@ -94,23 +95,19 @@
   generate-all:
     (selected, position, ast, path, project-path) -> None()
     with
-      <debug> "Generating ESV...";
-      esv := <to-esv> ast;
-      esv-filename := $[[project-path]/[<guarantee-extension(|"esv")> path]];
-      <write-string-to-file> (esv-filename, esv);
-      <refresh-workspace-file> esv-filename
-    with
-      <debug> "Generating SDF...";
-      sdf := <to-sdf> ast;
-      sdf-filename := $[[project-path]/[<guarantee-extension(|"def")> path]];
-      <write-string-to-file> (sdf-filename, sdf);
-      <refresh-workspace-file> sdf-filename
-    with
-      <debug> "Generating STR...";
-      str := <to-str> ast;
-      str-filename := $[[project-path]/[<guarantee-extension(|"str")> path]];
-      <write-string-to-file> (str-filename, str);
-      <refresh-workspace-file> str-filename
+      let gen(generate, get-output-path | name, ext) =
+        {output-ast, filename, full-path:
+          <debug> $[Generating [name]...];
+          output-ast := <generate> ast;
+          filename := <get-output-path>; debug;
+          <write-string-to-file> (filename, output-ast);
+          <refresh-workspace-file> filename
+        }
+      in
+        gen(to-esv, get-esv-output-path | "ESV", "esv");
+        gen(to-sdf, get-sdf-output-path | "SDF", "def");
+        gen(to-str, get-str-output-path | "STR", "str")
+      end
 
   // When given a tuple (path, string) this writes string into path.
   write-string-to-file =

From tobivollebregt at gmail.com  Tue May  3 13:35:08 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:35:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22747 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans
Message-ID: <20110503113508.B1EFD108C002@mx3.tudelft.nl>

Author: tvo
Date: Tue May  3 11:35:08 2011
New Revision: 22747
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22747&sc=1

Log:
Put correct modulename in ESV and STR output files.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Tue May  3 11:35:01 2011	(r22746)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Tue May  3 11:35:08 2011	(r22747)
@@ -18,9 +18,15 @@
         ProjectDir  := project-path
       )
     with // default options
+      esv-output-path := <guarantee-extension(|"esv")> current-file;
+      sdf-output-path := <guarantee-extension(|"def")> current-file;
+      str-output-path := <guarantee-extension(|"str")> current-file;
       rules(
         Options :+ Newlines() -> None()
         Options :+ ImportPath() -> "."
+        Options :+ EsvOutput() -> esv-output-path
+        Options :+ SdfOutput() -> sdf-output-path
+        Options :+ StrOutput() -> str-output-path
       )
     with
       <debug(!"Analyzing: ")> current-file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str	Tue May  3 11:35:01 2011	(r22746)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str	Tue May  3 11:35:08 2011	(r22747)
@@ -11,8 +11,8 @@
 
 strategies
 
-  to-esv:
-    Module(modulename, _, _) -> <try(pp-descriptor-to-string)> |[
+  to-esv(|modulename):
+    Module(_, _, _) -> <try(pp-descriptor-to-string)> |[
       module ~modulename
       ~sections
     ]|
@@ -20,6 +20,9 @@
       // all imported modules
       sections := <all-keys-IsImported; map(Module; to-esv-module)>
 
+  to-esv:
+    Module(modulename, _, _) -> <to-esv(|modulename)>
+
   to-esv-module:
     Module(modulename, _, _) -> |[
       //~modulename doesn't work here (kernel syntax...)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Tue May  3 11:35:01 2011	(r22746)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Tue May  3 11:35:08 2011	(r22747)
@@ -8,8 +8,8 @@
 
 strategies
 
-  to-str:
-    Module(modulename, _, _) ->
+  to-str(|modulename):
+    Module(_, _, _) ->
     $[module [modulename]
       imports
         libstratego-lib
@@ -35,6 +35,9 @@
       sorts-without-pp := <diff> (sorts-used-in-pp, sorts-decl-in-pp);
       strategy* := <map(sort-to-prettyprint-strategy); separate-by(|"\n\n")> sorts-without-pp
 
+  to-str:
+    Module(modulename, _, _) -> <to-str(|modulename)>
+
   to-str-module:
     m@ Module(modulename, _, _) ->
     $[strategies // [modulename]

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:35:01 2011	(r22746)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:35:08 2011	(r22747)
@@ -104,9 +104,11 @@
           <refresh-workspace-file> filename
         }
       in
-        gen(to-esv, get-esv-output-path | "ESV", "esv");
-        gen(to-sdf, get-sdf-output-path | "SDF", "def");
-        gen(to-str, get-str-output-path | "STR", "str")
+        esv-modulename := <get-esv-output-path; base-filename; remove-extension>;
+        str-modulename := <get-str-output-path; base-filename; remove-extension>;
+        gen(to-esv(|esv-modulename), get-esv-output-path | "ESV", "esv");
+        gen(to-sdf                 , get-sdf-output-path | "SDF", "def");
+        gen(to-str(|str-modulename), get-str-output-path | "STR", "str")
       end
 
   // When given a tuple (path, string) this writes string into path.

From tobivollebregt at gmail.com  Tue May  3 13:35:15 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:35:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22748 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans
Message-ID: <20110503113515.C61662B8010@mx2.tudelft.nl>

Author: tvo
Date: Tue May  3 11:35:15 2011
New Revision: 22748
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22748&sc=1

Log:
Rewrote prettyprinting to not use Stratego templates.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str	Tue May  3 11:35:08 2011	(r22747)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str	Tue May  3 11:35:15 2011	(r22748)
@@ -53,7 +53,7 @@
     trim-layout;
     map(try(text-to-completion-part));
     concatenate-consecutive-strings;
-    map(try(escape-and-quote))
+    map(try(String(escape-and-double-quote)))
 
   template-sort-to-anno =
     CanNotBeBlank < !None() + !Blank()
@@ -101,46 +101,29 @@
     Newline(_) -> String("\n")
 
   text-to-completion-part:
-    Layout(t) -> String(t')
-    with
-      t' := <string-replace(|"\n  ", "\n\t");
-             repeat(where(is-substring(!"\t  ")); string-replace(|"\t  ", "\t\t"))> t
+    Layout(t) -> String(t)
+
+  text-to-completion-part:
+    Indent(t) -> String(<string-replace(|"  ", "\t")> t)
 
 // removing cursors (including layout before and newline after, if present)
 
   remove-cursor-except-first =
-       [Layout(id), Cursor(), Newline(id) | remove-cursor]
+       [Layout(id) + Indent(id), Cursor(), Newline(id) | remove-cursor]
     <+ [Cursor(), Newline(id) | remove-cursor]
-    <+ [Layout(id), Cursor() | remove-cursor]
+    <+ [Layout(id) + Indent(id), Cursor() | remove-cursor]
     <+ [Cursor() | remove-cursor]
     <+ [id | remove-cursor-except-first]
     <+ []
 
   remove-cursor =
-  	   \[Layout(_), Cursor(), Newline(_) | tail] -> <remove-cursor> tail\
-  	<+ \[Cursor(), Newline(_) | tail] -> <remove-cursor> tail\
-  	<+ \[Layout(_), Cursor() | tail] -> <remove-cursor> tail\
+       \[<?Layout(_) + ?Indent(_)>, Cursor(), Newline(_) | tail] -> <remove-cursor> tail\
+    <+ \[Cursor(), Newline(_) | tail] -> <remove-cursor> tail\
+    <+ \[<?Layout(_) + ?Indent(_)>, Cursor() | tail] -> <remove-cursor> tail\
     <+ \[Cursor() | tail] -> <remove-cursor> tail\
     <+ [id | remove-cursor]
     <+ []
 
-// concatenate consecutive parts
-
-  concatenate-consecutive-strings =
-       \[String(a), String(b) | tail] -> <concatenate-consecutive-strings> [String(<conc-strings> (a, b)) | tail]\
-    <+ [id | concatenate-consecutive-strings]
-    <+ []
-
-  escape-and-quote =
-    String(
-      string-replace(|"\t", "\\t");
-      string-replace(|"\r", "\\r");
-      string-replace(|"\n", "\\n");
-      string-replace(|"'", "\\'");
-      string-replace(|"\"", "\\\"");
-      double-quote
-	  )
-
 strategies
 
   nonempty-substring-from-last-occurence-of(|t) =

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Tue May  3 11:35:08 2011	(r22747)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Tue May  3 11:35:15 2011	(r22748)
@@ -17,6 +17,8 @@
       strategies
 
         pp-option(s) = \None() -> ""\ + \Some(t) -> <s> t\
+        pp-list(s|t) = map(s); separate-by(|t); concat-strings
+        pp-list(s)   = map(s); concat-strings
 
       [section*]
 
@@ -57,39 +59,38 @@
   sort-used-in-prettyprinting:
     Placeholder(_, Sort(sort), _, _) -> sort
 
+  // Optimization for single-string-element templates
   template-to-prettyprint-strategy:
-    TemplateProduction(sort, Template(e*), attr*) ->
+    TemplateProduction(sort, Template([String(t)]), attr*) ->
+    $[prettyprint-[sort]:
+        [cons]() -> [result]]
+    with
+      cons   := <collect-one(?sdf-cons(<un-double-quote>))> attr*;
+      result := <escape-and-double-quote> t
+
+  template-to-prettyprint-strategy:
+    TemplateProduction(sort, Template(elem*), attr*) ->
     <trim-chars(' ' + '\t' + '\r' + '\n')> // Workaround Stratego/856
     $[prettyprint-[sort]:
-        [cons]([arg*]) ->
-        [w857]
-        [with']]
-    with
-      (open, close) := <choose-braces> e*;
-      e'*   := <try-re-indent;
-                map(try(rename-template-element))> e*;
-      cons  := <collect-one(?sdf-cons(<un-double-quote>))> attr*;
-      arg*  := <filter(template-element-to-cons-arg);
-                separate-by(|", ")> e'*;
-      part* := <trim-layout;
-                filter(template-element-to-stratego(|open, close))> e'*;
-      let*  := <filter(template-element-to-assignment);
-                separate-by(|";\n")> e'*;
-      with' := <if !let* => [] then !"" else !$[with
-                                                  [let*]] end>;
-      // Workaround Stratego/857
-      w857  := <string-replace(|"\n", "\n  ")>
-                <concat-strings>["$", open, part*, close]
-
-  choose-braces =
-    chars := <filter(?String(<id>)); concat-strings; explode-string>;
-    block := <length> <filter('[' + ']')> chars;
-    curly := <length> <filter('{' + '}')> chars;
-    round := <length> <filter('(' + ')')> chars;
-    ( where(!block => 0) < !("[", "]")
-    + where(!curly => 0) < !("{", "}")
-    + where(!round => 0) < !("(", ")")
-    + <debug> "no suitable braces found"; fail)
+        [cons]([arg*]) -> t
+        with
+          [let'*]]
+    where
+      not(!elem* => [String(_)])
+    with
+      cons    := <collect-one(?sdf-cons(<un-double-quote>))> attr*;
+      elem'*  := <try-re-indent;
+                  map(try(rename-template-element))> elem*;
+      arg*    := <filter(template-element-to-cons-arg);
+                  separate-by(|", ")> elem'*;
+      part*   := <newlines-switch(trim-layout, trim-trailing-layout, trim-leading-layout);
+                  listtd(template-element-to-stratego);
+                  concatenate-consecutive-strings;
+                  map(try(?String(<escape-and-double-quote>)));
+                  separate-by(|", ")> elem'*;
+      result  := <concat-strings>["t := <concat-strings> [", part*, "]"];
+      let*    := <filter(template-element-to-assignment)> elem'*;
+      let'*   := <separate-by(|";\n")> [let*, result]
 
   rename-template-element:
     Placeholder(_, Sort(x), _, _) -> <id>{<newname> x}
@@ -97,10 +98,18 @@
   template-element-to-cons-arg:
     Placeholder(_, _, _, _){name} -> name
 
-  template-element-to-stratego(|open, close) =
-      \Placeholder(_, _, _, _){name} -> $[[open][name]'[close]]\
-    + \String(t) -> t\
-    + \Layout(t) -> t\
+  template-element-to-stratego =
+       \[Newline(_), Indent(indent), Placeholder(_, _, _, _){name} | tail] ->
+         [$[<string-replace(|"\n", "\n[indent]")> [name]'] | tail]\
+    <+ [template-element-to-stratego' | id]
+    <+ []
+
+  template-element-to-stratego' =
+      \Placeholder(_, _, _, _){name} -> $[[name]']\
+    + \String(t) -> String(t)\
+    + \Layout(t) -> String(t)\
+    + \Indent(t) -> String(t)\
+    + \Newline(t) -> String(t)\
 
   template-element-to-assignment:
     Placeholder(_, Sort(x), None(), _){name} -> $[[name]' := <prettyprint-[x]> [name]]
@@ -109,9 +118,9 @@
     Placeholder(_, Sort(x), <Star() + Plus()>, Options(opt*)){name} -> t
     with
       if sep := <collect-one(?Separator(<id>))> opt* then
-        t := $[[name]' := <map(prettyprint-[x]); separate-by(|"[<escape> sep]")> [name]]
+        t := $[[name]' := <pp-list(prettyprint-[x]|"[<escape> sep]")> [name]]
       else
-        t := $[[name]' := <map(prettyprint-[x])> [name]]
+        t := $[[name]' := <pp-list(prettyprint-[x])> [name]]
       end
 
   template-element-to-assignment:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Tue May  3 11:35:08 2011	(r22747)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Tue May  3 11:35:15 2011	(r22748)
@@ -7,11 +7,14 @@
 
 signature
   constructors
+    // Options
     Newlines : X
     ImportPath : X
     EsvOutput : X
     SdfOutput : X
     StrOutput : X
+    // Other
+    Indent : String -> Indent
 
 strategies // Utility strategies
 
@@ -24,10 +27,12 @@
 
   trim-leading-layout =
     repeat(  \[Layout(_)  | tail] -> tail\
+           + \[Indent(_)  | tail] -> tail\
            + \[Newline(_) | tail] -> tail\ )
 
   trim-trailing-layout =
-    listbu(   \[Layout(_)] -> []\
+    listbu(   \[Layout(_)]  -> []\
+           <+ \[Indent(_)]  -> []\
            <+ \[Newline(_)] -> []\ <+ id)
 
   trim-layout =
@@ -59,10 +64,16 @@
     end
 
   re-indent(|indent-string) =
-    \[Newline(x), Layout(y) | tail] -> [Layout(z) | tail']
+    \[Newline(_), Layout(indent) | tail] -> result
     with
-      z := <string-replace(|indent-string, "\n")> <conc-strings>(x, y);
-      tail' := <re-indent(|indent-string)> tail\
+      // Add a newline because indent-string contains a newline as anchor.
+      indent' := <string-replace(|indent-string, "")> <conc-strings>("\n", indent);
+      tail' := <re-indent(|indent-string)> tail;
+      if !indent' => "" then
+        result := [Newline("\n") | tail']
+      else
+        result := [Newline("\n"), Indent(indent') | tail']
+      end\
   <+
     \[head | tail] -> [head | <re-indent(|indent-string)> tail]\
   <+
@@ -85,6 +96,19 @@
     end;
     concat-strings
 
+  concatenate-consecutive-strings =
+       \[String(a), String(b) | tail] -> <concatenate-consecutive-strings> [String(<conc-strings> (a, b)) | tail]\
+    <+ [id | concatenate-consecutive-strings]
+    <+ []
+
+  escape-and-double-quote =
+    string-replace(|"\t", "\\t");
+    string-replace(|"\r", "\\r");
+    string-replace(|"\n", "\\n");
+    string-replace(|"'", "\\'");
+    string-replace(|"\"", "\\\"");
+    double-quote
+
 strategies // Options
 
   use-no-newlines       = <Options> Newlines() => None()

From tobivollebregt at gmail.com  Tue May  3 13:35:29 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:35:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22750 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans
Message-ID: <20110503113529.4529B7F8082@mx1.tudelft.nl>

Author: tvo
Date: Tue May  3 11:35:29 2011
New Revision: 22750
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22750&sc=1

Log:
Workaround Spoofax/262

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:35:22 2011	(r22749)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Tue May  3 11:35:29 2011	(r22750)
@@ -94,11 +94,15 @@
 
   generate-all:
     (selected, position, ast, path, project-path) -> None()
+    with // workaround Spoofax/262
+      <debug> "Analyzing...";
+      editor-init;
+      ast' := <analyze> (ast, path, project-path)
     with
       let gen(generate, get-output-path | name, ext) =
         {output-ast, filename, full-path:
           <debug> $[Generating [name]...];
-          output-ast := <generate> ast;
+          output-ast := <generate> ast';
           filename := <get-output-path>; debug;
           <write-string-to-file> (filename, output-ast);
           <refresh-workspace-file> filename

From tobivollebregt at gmail.com  Tue May  3 13:35:22 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 03 May 2011 11:35:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22749 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/sdf2
Message-ID: <20110503113522.E30A22B801D@mx2.tudelft.nl>

Author: tvo
Date: Tue May  3 11:35:22 2011
New Revision: 22749
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22749&sc=1

Log:
Workaround Spoofax/366

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/sdf2/Stratego-Sdf2.sdf

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/sdf2/Stratego-Sdf2.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/sdf2/Stratego-Sdf2.sdf	Tue May  3 11:35:15 2011	(r22748)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/sdf2/Stratego-Sdf2.sdf	Tue May  3 11:35:22 2011	(r22749)
@@ -79,7 +79,7 @@
  %%%
 
   lexical syntax
-    MetaVar -> Sort {reject}
+    %% MetaVar -> Sort {reject}
     MetaVar -> IdCon  {reject}
     MetaVar -> StrCon {reject}
 

From m.dejonge at tudelft.nl  Tue May  3 13:54:47 2011
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 03 May 2011 11:54:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22751 - in
	spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client:
	. imploder
Message-ID: <20110503115447.25466108C02E@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue May  3 11:54:46 2011
New Revision: 22751
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22751&sc=1

Log:
BugFix: instanceof Parsenode => .isParseNode

Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/CycleParseNode.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/TopdownTreeBuilder.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/TreeBuilder.java

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/CycleParseNode.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/CycleParseNode.java	Tue May  3 11:35:29 2011	(r22750)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/CycleParseNode.java	Tue May  3 11:54:46 2011	(r22751)
@@ -36,7 +36,7 @@
 		while (target.isAmbNode()) {
 			target = target.getChildren()[0];
 		}
-		if (target instanceof ParseNode)
+		if (target.isParseNode())
 			return ((ParseNode) target).getLabel();
 		return -1;
 	}

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/TopdownTreeBuilder.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/TopdownTreeBuilder.java	Tue May  3 11:35:29 2011	(r22750)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/TopdownTreeBuilder.java	Tue May  3 11:54:46 2011	(r22751)
@@ -24,9 +24,9 @@
 	 *   {@link ParseNode#buildTreeBottomup} instead.
 	 */
 	public Object buildTree(AbstractParseNode node) {
-		if (node instanceof ParseNode) {
+		if (node.isParseNode()) {
 			return buildTreeNode((ParseNode) node);
-		} else if (node instanceof ParseProductionNode) {
+		} else if (node.isParseProductionNode()) {
 			return buildTreeProduction((ParseProductionNode) node);
 		} else {
 			assert node.isAmbNode();

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/TreeBuilder.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/TreeBuilder.java	Tue May  3 11:35:29 2011	(r22750)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/TreeBuilder.java	Tue May  3 11:54:46 2011	(r22751)
@@ -267,7 +267,7 @@
 	 */
 	private Object chainToTreeTopdown(AbstractParseNode node) {
 		assert node.isParseProductionChain();
-		while (node instanceof ParseNode) {
+		while (node.isParseNode()) {
 			AbstractParseNode[] kids = ((ParseNode) node).getChildren();
 			if (kids.length == 2) {
 				buildTreeProduction((ParseProductionNode) kids[0]);

From R.B.Vermaas at tudelft.nl  Tue May  3 13:59:05 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 03 May 2011 11:59:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22752 -
	strategoxt/branches/strategoxt-java
Message-ID: <20110503115905.51FE5108C02E@mx3.tudelft.nl>

Author: rob
Date: Tue May  3 11:59:05 2011
New Revision: 22752
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22752&sc=1

Log:
pass location of Stratego-Box to java backend compilation

Modified:
   strategoxt/branches/strategoxt-java/build.xml

Modified: strategoxt/branches/strategoxt-java/build.xml
==============================================================================
--- strategoxt/branches/strategoxt-java/build.xml	Tue May  3 11:54:46 2011	(r22751)
+++ strategoxt/branches/strategoxt-java/build.xml	Tue May  3 11:59:05 2011	(r22752)
@@ -505,6 +505,8 @@
                 <arg value="stratego-gpp" />
                 <arg value="-I" />
                 <arg value="${syntaxjava}" />
+                <arg value="-I" />
+                <arg value="${syntaxbox}" />
             </strjlibargs>
             <str-deps>
                 <srcfiles dir="java-front/lib" includes="**/*.str" />

From L.C.L.Kats at tudelft.nl  Tue May  3 17:05:08 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 03 May 2011 15:05:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22753 -
	spoofax-imp/trunk/org.strategoxt.imp.feature
Message-ID: <20110503150508.49AF42B801D@mx2.tudelft.nl>

Author: LennartKats
Date: Tue May  3 15:05:07 2011
New Revision: 22753
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22753&sc=1

Log:
added spoofax editor to feature.xml

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Tue May  3 11:59:05 2011	(r22752)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Tue May  3 15:05:07 2011	(r22753)
@@ -324,4 +324,10 @@
          version="0.0.0"
          unpack="false"/>
 
+   <plugin
+         id="org.strategoxt.imp.editors.spoofax"
+         download-size="0"
+         install-size="0"
+         version="0.0.0"/>
+
 </feature>

From L.C.L.Kats at tudelft.nl  Tue May  3 17:23:39 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 03 May 2011 15:23:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22754 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/in...
Message-ID: <20110503152339.55140108C045@mx3.tudelft.nl>

Author: LennartKats
Date: Tue May  3 15:23:39 2011
New Revision: 22754
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22754&sc=1

Log:
Moved the core orign primitives to org.spoofax.library.jsglr.origin. (The others should be moved as well if possible.)

Added:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/AbstractOriginPrimitive.java
      - copied, changed from r22727, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/AbstractOriginPrimitive.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginEqualPrimitive.java
      - copied, changed from r22727, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginEqualPrimitive.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginLocationPrimitive.java
      - copied, changed from r22727, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLocationPrimitive.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginOffsetPrimitive.java
      - copied, changed from r22727, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginOffsetPrimitive.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginStripPrimitive.java
      - copied, changed from r22727, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginStripPrimitive.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginTermPrimitive.java
      - copied, changed from r22727, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTermPrimitive.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginTextPrimitive.java
      - copied, changed from r22727, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextPrimitive.java
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/AbstractOriginPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginEqualPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLocationPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginOffsetPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginStripPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTermPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextPrimitive.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCommentAfterPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCommentBeforePrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginIndentationPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginOffsetWithLayoutPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSeparatingWhitespacePrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSeparatorPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSeparatorWithLayoutPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SaveAllResourcesPrimitive.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginLibrary.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	Tue May  3 15:05:07 2011	(r22753)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	Tue May  3 15:23:39 2011	(r22754)
@@ -15,14 +15,8 @@
 		add(new ProjectPathPrimitive());
 		add(new PluginPathPrimitive());
 		add(new RefreshResourcePrimitive());
-		add(new OriginLocationPrimitive());
-		add(new OriginOffsetPrimitive());
-		add(new OriginStripPrimitive());
-		add(new OriginTermPrimitive());
 		add(new OriginSublistTermPrimitive());
-		add(new OriginTextPrimitive());
 		add(new OriginTextFragmentPrimitive());
-		add(new OriginEqualPrimitive());
 		add(new OriginSurroundingCommentsPrimitive());
 		add(new OriginCommentBeforePrimitive());
 		add(new OriginCommentAfterPrimitive());

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCommentAfterPrimitive.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCommentAfterPrimitive.java	Tue May  3 15:05:07 2011	(r22753)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCommentAfterPrimitive.java	Tue May  3 15:23:39 2011	(r22754)
@@ -3,6 +3,7 @@
 import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getLeftToken;
 
 import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.jsglr.origin.AbstractOriginPrimitive;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.imp.runtime.stratego.DocumentStructure.TextFragment;
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCommentBeforePrimitive.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCommentBeforePrimitive.java	Tue May  3 15:05:07 2011	(r22753)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCommentBeforePrimitive.java	Tue May  3 15:23:39 2011	(r22754)
@@ -3,6 +3,7 @@
 import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getTokenizer;
 
 import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.jsglr.origin.AbstractOriginPrimitive;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.imp.runtime.stratego.DocumentStructure.TextFragment;
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginIndentationPrimitive.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginIndentationPrimitive.java	Tue May  3 15:05:07 2011	(r22753)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginIndentationPrimitive.java	Tue May  3 15:23:39 2011	(r22754)
@@ -1,6 +1,7 @@
 package org.strategoxt.imp.runtime.stratego;
 
 import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.jsglr.origin.AbstractOriginPrimitive;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginOffsetWithLayoutPrimitive.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginOffsetWithLayoutPrimitive.java	Tue May  3 15:05:07 2011	(r22753)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginOffsetWithLayoutPrimitive.java	Tue May  3 15:23:39 2011	(r22754)
@@ -1,6 +1,7 @@
 package org.strategoxt.imp.runtime.stratego;
 
 import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.jsglr.origin.AbstractOriginPrimitive;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionPrimitive.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionPrimitive.java	Tue May  3 15:05:07 2011	(r22753)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionPrimitive.java	Tue May  3 15:23:39 2011	(r22754)
@@ -5,6 +5,7 @@
 import java.util.List;
 
 import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.jsglr.origin.AbstractOriginPrimitive;
 import org.spoofax.interpreter.terms.ISimpleTerm;
 import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoTerm;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSeparatingWhitespacePrimitive.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSeparatingWhitespacePrimitive.java	Tue May  3 15:05:07 2011	(r22753)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSeparatingWhitespacePrimitive.java	Tue May  3 15:23:39 2011	(r22754)
@@ -1,6 +1,7 @@
 package org.strategoxt.imp.runtime.stratego;
 
 import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.jsglr.origin.AbstractOriginPrimitive;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSeparatorPrimitive.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSeparatorPrimitive.java	Tue May  3 15:05:07 2011	(r22753)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSeparatorPrimitive.java	Tue May  3 15:23:39 2011	(r22754)
@@ -7,6 +7,7 @@
 import static org.spoofax.terms.attachments.ParentAttachment.getParent;
 
 import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.jsglr.origin.AbstractOriginPrimitive;
 import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSeparatorWithLayoutPrimitive.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSeparatorWithLayoutPrimitive.java	Tue May  3 15:05:07 2011	(r22753)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSeparatorWithLayoutPrimitive.java	Tue May  3 15:23:39 2011	(r22754)
@@ -6,6 +6,7 @@
 import static org.spoofax.terms.attachments.ParentAttachment.getParent;
 
 import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.jsglr.origin.AbstractOriginPrimitive;
 import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SaveAllResourcesPrimitive.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SaveAllResourcesPrimitive.java	Tue May  3 15:05:07 2011	(r22753)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SaveAllResourcesPrimitive.java	Tue May  3 15:23:39 2011	(r22754)
@@ -1,6 +1,5 @@
 package org.strategoxt.imp.runtime.stratego;
 
-import static org.spoofax.interpreter.core.Tools.asJavaString;
 import static org.spoofax.interpreter.core.Tools.isTermString;
 
 import org.eclipse.core.runtime.IProgressMonitor;

Copied and modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/AbstractOriginPrimitive.java (from r22727, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/AbstractOriginPrimitive.java)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/AbstractOriginPrimitive.java	Mon May  2 15:43:55 2011	(r22727, copy source)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/AbstractOriginPrimitive.java	Tue May  3 15:23:39 2011	(r22754)
@@ -1,4 +1,4 @@
-package org.strategoxt.imp.runtime.stratego;
+package org.spoofax.interpreter.library.jsglr.origin;
 
 import static org.spoofax.jsglr.client.imploder.ImploderAttachment.hasImploderOrigin;
 import static org.spoofax.terms.attachments.OriginAttachment.tryGetOrigin;

Copied and modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginEqualPrimitive.java (from r22727, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginEqualPrimitive.java)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginEqualPrimitive.java	Mon May  2 15:43:55 2011	(r22727, copy source)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginEqualPrimitive.java	Tue May  3 15:23:39 2011	(r22754)
@@ -1,4 +1,4 @@
-package org.strategoxt.imp.runtime.stratego;
+package org.spoofax.interpreter.library.jsglr.origin;
 
 import static org.spoofax.terms.attachments.OriginAttachment.tryGetOrigin;
 

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginLibrary.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginLibrary.java	Tue May  3 15:05:07 2011	(r22753)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginLibrary.java	Tue May  3 15:23:39 2011	(r22754)
@@ -13,6 +13,12 @@
         add(new SSL_EXT_enable_origins());
         add(new SSL_EXT_clone_and_set_parents());
         add(new SSL_EXT_get_parent());
+		add(new OriginLocationPrimitive());
+		add(new OriginOffsetPrimitive());
+		add(new OriginStripPrimitive());
+		add(new OriginTermPrimitive());
+		add(new OriginTextPrimitive());
+		add(new OriginEqualPrimitive());
     }
 
     public String getOperatorRegistryName() {

Copied and modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginLocationPrimitive.java (from r22727, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLocationPrimitive.java)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLocationPrimitive.java	Mon May  2 15:43:55 2011	(r22727, copy source)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginLocationPrimitive.java	Tue May  3 15:23:39 2011	(r22754)
@@ -1,4 +1,4 @@
-package org.strategoxt.imp.runtime.stratego;
+package org.spoofax.interpreter.library.jsglr.origin;
 
 import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getLeftToken;
 import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getRightToken;

Copied and modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginOffsetPrimitive.java (from r22727, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginOffsetPrimitive.java)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginOffsetPrimitive.java	Mon May  2 15:43:55 2011	(r22727, copy source)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginOffsetPrimitive.java	Tue May  3 15:23:39 2011	(r22754)
@@ -1,4 +1,4 @@
-package org.strategoxt.imp.runtime.stratego;
+package org.spoofax.interpreter.library.jsglr.origin;
 
 import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getLeftToken;
 import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getRightToken;

Copied and modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginStripPrimitive.java (from r22727, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginStripPrimitive.java)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginStripPrimitive.java	Mon May  2 15:43:55 2011	(r22727, copy source)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginStripPrimitive.java	Tue May  3 15:23:39 2011	(r22754)
@@ -1,4 +1,4 @@
-package org.strategoxt.imp.runtime.stratego;
+package org.spoofax.interpreter.library.jsglr.origin;
 
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.InterpreterException;

Copied and modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginTermPrimitive.java (from r22727, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTermPrimitive.java)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTermPrimitive.java	Mon May  2 15:43:55 2011	(r22727, copy source)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginTermPrimitive.java	Tue May  3 15:23:39 2011	(r22754)
@@ -1,4 +1,4 @@
-package org.strategoxt.imp.runtime.stratego;
+package org.spoofax.interpreter.library.jsglr.origin;
 
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.terms.IStrategoTerm;

Copied and modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginTextPrimitive.java (from r22727, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextPrimitive.java)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextPrimitive.java	Mon May  2 15:43:55 2011	(r22727, copy source)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/origin/OriginTextPrimitive.java	Tue May  3 15:23:39 2011	(r22754)
@@ -1,4 +1,4 @@
-package org.strategoxt.imp.runtime.stratego;
+package org.spoofax.interpreter.library.jsglr.origin;
 
 import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getLeftToken;
 import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getRightToken;

From L.C.L.Kats at tudelft.nl  Tue May  3 18:02:12 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 03 May 2011 16:02:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22755 -
	spoofax-imp/trunk/org.strategoxt.imp.feature
Message-ID: <20110503160212.45FA47F806C@mx1.tudelft.nl>

Author: LennartKats
Date: Tue May  3 16:02:12 2011
New Revision: 22755
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22755&sc=1

Log:
version numbers in feature.xml

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Tue May  3 15:23:39 2011	(r22754)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Tue May  3 16:02:12 2011	(r22755)
@@ -321,13 +321,13 @@
          id="org.spoofax.interpreter.library.language"
          download-size="0"
          install-size="0"
-         version="0.0.0"
+         version="1.0.0.qualifier"
          unpack="false"/>
 
    <plugin
          id="org.strategoxt.imp.editors.spoofax"
          download-size="0"
          install-size="0"
-         version="0.0.0"/>
+         version="1.0.0.qualifier"/>
 
 </feature>

From seba at informatik.uni-marburg.de  Tue May  3 18:03:28 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Tue, 03 May 2011 16:03:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22756 -
	sugarj/trunk/case-studies/editor
Message-ID: <20110503160328.2BC502B8066@mx2.tudelft.nl>

Author: SebastianErdweg
Date: Tue May  3 16:03:27 2011
New Revision: 22756
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22756&sc=1

Log:
origin primitives

Added:
   sugarj/trunk/case-studies/editor/Origin.sugj
   sugarj/trunk/case-studies/editor/OringinTest.sugj

Added: sugarj/trunk/case-studies/editor/Origin.sugj
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/trunk/case-studies/editor/Origin.sugj	Tue May  3 16:03:27 2011	(r22756)
@@ -0,0 +1,26 @@
+package editor;
+
+public sugar Origin {
+  rules
+	  origin-term      = prim("SSL_EXT_origin_term", <id>)
+	  origin-text      = prim("SSL_EXT_origin_text", <id>)
+	  origin-location  = prim("SSL_EXT_origin_location", <id>)
+	  origin-line      = origin-location => (<id>, _, _, _)
+	  origin-column    = origin-location => (_, <id>, _, _)
+	  origin-strip     = prim("SSL_EXT_origin_strip", <id>)
+	  origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+	  
+	  origin-surrounding-comments =
+	    prim("SSL_EXT_origin_surrounding_comments", "SugarJ", <id>)
+	    
+	  origin-documentation-comment =
+	    origin-surrounding-comments;
+	    filter(string-as-chars(documentation-comment-chars));
+	    concat-strings
+	  
+	  documentation-comment-chars:
+	    ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
+	  
+	  origin-track-forced(s) =
+	    ![<id>]; all(s); ?[<id>]
+}
\ No newline at end of file

Added: sugarj/trunk/case-studies/editor/OringinTest.sugj
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/trunk/case-studies/editor/OringinTest.sugj	Tue May  3 16:03:27 2011	(r22756)
@@ -0,0 +1,17 @@
+package editor;
+
+import editor.Origin;
+
+public sugar OriginTest {
+  context-free syntax
+    "abc" "def" JavaID -> ToplevelDeclaration {cons("Text")}
+
+  desugarings
+    rule
+
+  rules
+    rule : 
+      t at Text(s) -> <origin-text> t
+}
+
+abc def A

From m.dejonge at tudelft.nl  Tue May  3 20:26:52 2011
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 03 May 2011 18:26:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22757 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <20110503182652.69AE47F8093@mx1.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue May  3 18:26:52 2011
New Revision: 22757
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22757&sc=1

Log:
Increases tolerance for 'selected' in 'analysed-ast'.
Fix for the following problem:  Id("x"{123}) was not found in analyzed tree because relation with Id("x") is lost.  However "x" is the origin-term of "x"{123}. So Id("x"{123}) seems the nextBest in this case.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	Tue May  3 16:03:27 2011	(r22756)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	Tue May  3 18:26:52 2011	(r22757)
@@ -118,18 +118,26 @@
 				if (hasImploderOrigin(current)) {
 					IStrategoTerm currentOrigin = tryGetOrigin(current);
 					if (currentOrigin == origin) return current;
+					// sets a term as 'nextBest' if one of the subterms of its origin-term is the originChild
 					if (nextBest == null && originChild != null) {
 						for (int i = 0, max = currentOrigin.getSubtermCount(); i < max; i++)
 							if (currentOrigin.getSubterm(i) == originChild)
 								nextBest = currentOrigin;
 					}
 				}
+				else { // sets a term as 'nextBest' in case no origin term exists, but one of its subterms is origin-related to the originChild
+					if (current == origin) return current;
+					if (nextBest == null && originChild != null) {
+						for (int i = 0, max = current.getSubtermCount(); i < max; i++)
+							if (tryGetOrigin(current.getSubterm(i)) == originChild)
+								nextBest = current;
+					}					
+				}
 				return null;
 			}
 		}
 		TestOrigin testOrigin = new TestOrigin();
-		testOrigin.origin = origin;
-		
+		testOrigin.origin = origin;		
 		generator.init(context);
 		IStrategoTerm perfectMatch = position_of_term_1_0.instance.invoke(context, ast, testOrigin);
 		if (perfectMatch != null) {

From L.C.L.Kats at tudelft.nl  Tue May  3 21:05:31 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 03 May 2011 19:05:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22758 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
Message-ID: <20110503190531.B86447F8026@mx1.tudelft.nl>

Author: LennartKats
Date: Tue May  3 19:05:31 2011
New Revision: 22758
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22758&sc=1

Log:
Reinit parent pointers for Spoofax/359

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/CustomDisambiguator.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/CustomDisambiguator.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/CustomDisambiguator.java	Tue May  3 18:26:52 2011	(r22757)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/CustomDisambiguator.java	Tue May  3 19:05:31 2011	(r22758)
@@ -7,7 +7,8 @@
 import static org.spoofax.jsglr.client.imploder.ImploderAttachment.putImploderAttachment;
 import static org.spoofax.terms.TermVisitor.tryGetListIterator;
 import static org.spoofax.terms.attachments.OriginAttachment.getOrigin;
-import static org.strategoxt.imp.runtime.stratego.SourceAttachment.*;
+import static org.strategoxt.imp.runtime.stratego.SourceAttachment.getParseController;
+import static org.strategoxt.imp.runtime.stratego.SourceAttachment.getResource;
 
 import java.lang.ref.WeakReference;
 import java.util.Iterator;
@@ -19,11 +20,12 @@
 import org.spoofax.jsglr.client.imploder.ImploderAttachment;
 import org.spoofax.jsglr.client.imploder.Tokenizer;
 import org.spoofax.terms.attachments.OriginAttachment;
+import org.spoofax.terms.attachments.ParentAttachment;
 import org.strategoxt.imp.runtime.Environment;
-import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
 import org.strategoxt.imp.runtime.services.StrategoObserver;
 import org.strategoxt.imp.runtime.stratego.SourceAttachment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 
 /**
  * A class that uses the language runtime to disambiguate an AST.
@@ -82,9 +84,19 @@
 		getTokenizer(oldTerm).setAst(newTerm);
 		getTokenizer(oldTerm).initAstNodeBinding();
 		SourceAttachment.putSource(newTerm, getResource(oldTerm), getParseController(oldTerm));
+		reinitParents(newTerm);
 		return newTerm;
 	}
 	
+	private static void reinitParents(IStrategoTerm parent) {
+		Iterator<IStrategoTerm> iterator = tryGetListIterator(parent); 
+		for (int i = 0, max = parent.getSubtermCount(); i < max; i++) {
+			IStrategoTerm child = iterator == null ? parent.getSubterm(i) : iterator.next();
+			ParentAttachment.putParent(child, parent, null);
+			reinitParents(child);
+		}
+	}
+
 	/**
 	 * Assign tokens to this term and all subterms, using the origin tokens or the given tokens.
 	 * 

From R.B.Vermaas at tudelft.nl  Wed May  4 08:53:48 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 04 May 2011 06:53:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22759 - hydra/jobs
Message-ID: <20110504065348.67695108C03D@mx3.tudelft.nl>

Author: rob
Date: Wed May  4 06:53:46 2011
New Revision: 22759
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22759&sc=1

Log:
add spoofax editor

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Tue May  3 19:05:31 2011	(r22758)
+++ hydra/jobs/spoofax-imp.nix	Wed May  4 06:53:46 2011	(r22759)
@@ -96,6 +96,7 @@
                          ${spoofaxImp}/org.strategoxt.imp.editors.pp \
                          ${spoofaxImp}/org.strategoxt.imp.editors.rtg \
                          ${spoofaxImp}/org.strategoxt.imp.editors.sdf \
+                         ${spoofaxImp}/org.strategoxt.imp.editors.spoofax \
                          ${spoofaxImp}/org.strategoxt.imp.editors.stratego \
                      ${spoofaxImp}/org.strategoxt.imp.testing \
                          ${spoofaxImp}/org.strategoxt.imp.feature \

From R.B.Vermaas at tudelft.nl  Wed May  4 09:00:31 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 04 May 2011 07:00:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22760 - hydra/jobs
Message-ID: <20110504070031.AAE717F8011@mx1.tudelft.nl>

Author: rob
Date: Wed May  4 07:00:31 2011
New Revision: 22760
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22760&sc=1

Log:


Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Wed May  4 06:53:46 2011	(r22759)
+++ hydra/jobs/spoofax-imp.nix	Wed May  4 07:00:31 2011	(r22760)
@@ -196,6 +196,7 @@
                        <tasks>
                                <echo>Running ant script</echo>
                                <property name="external_classpath" refid="maven.compile.classpath"/>
+                               <property name="java.class.path" refid="maven.compile.classpath"/>
                                <property name="eclipse.spoofaximp.jars" value="utils/"/>
                                <property name="eclipse.spoofaximp.strategojar" value="utils/strategoxt.jar"/>
                                <property name="eclipse.home" value="${eclipse}/eclipse"/>

From R.B.Vermaas at tudelft.nl  Wed May  4 09:03:36 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 04 May 2011 07:03:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22761 - hydra/jobs
Message-ID: <20110504070336.858032B8012@mx2.tudelft.nl>

Author: rob
Date: Wed May  4 07:03:36 2011
New Revision: 22761
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22761&sc=1

Log:


Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Wed May  4 07:00:31 2011	(r22760)
+++ hydra/jobs/spoofax-imp.nix	Wed May  4 07:03:36 2011	(r22761)
@@ -196,7 +196,7 @@
                        <tasks>
                                <echo>Running ant script</echo>
                                <property name="external_classpath" refid="maven.compile.classpath"/>
-                               <property name="java.class.path" refid="maven.compile.classpath"/>
+                               <property name="java.class.path" value="utils/aster.jar:utils/strategoxt.jar:utils/sdf2imp.jar:utils/make_permissive.jar"/>
                                <property name="eclipse.spoofaximp.jars" value="utils/"/>
                                <property name="eclipse.spoofaximp.strategojar" value="utils/strategoxt.jar"/>
                                <property name="eclipse.home" value="${eclipse}/eclipse"/>

From R.B.Vermaas at tudelft.nl  Wed May  4 09:09:12 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 04 May 2011 07:09:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22762 - hydra/jobs
Message-ID: <20110504070912.5B651CC0B3@mx4.tudelft.nl>

Author: rob
Date: Wed May  4 07:09:12 2011
New Revision: 22762
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22762&sc=1

Log:


Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Wed May  4 07:03:36 2011	(r22761)
+++ hydra/jobs/spoofax-imp.nix	Wed May  4 07:09:12 2011	(r22762)
@@ -223,7 +223,7 @@
             export ANT_OPTS="-Xss8m -Xmx768m"
             export ANT_ARGS="-Declipse.spoofaximp.jars=utils/ -Declipse.home=$eclipsefakehome"
 
-            mvn package ${mvnFlags} -e
+            mvn -X package ${mvnFlags} -e
 	      '';
 	      
 	      installPhase = ''

From R.B.Vermaas at tudelft.nl  Wed May  4 09:23:10 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 04 May 2011 07:23:10 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22763 - hydra/jobs
Message-ID: <20110504072310.9A211108C042@mx3.tudelft.nl>

Author: rob
Date: Wed May  4 07:23:10 2011
New Revision: 22763
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22763&sc=1

Log:


Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Wed May  4 07:09:12 2011	(r22762)
+++ hydra/jobs/spoofax-imp.nix	Wed May  4 07:23:10 2011	(r22763)
@@ -223,6 +223,7 @@
             export ANT_OPTS="-Xss8m -Xmx768m"
             export ANT_ARGS="-Declipse.spoofaximp.jars=utils/ -Declipse.home=$eclipsefakehome"
 
+            export MAVEN_OPTS="-Xss8m -Xmx768m -classpath `pwd`/org.strategoxt.imp.editors.aster/utils/*"
             mvn -X package ${mvnFlags} -e
 	      '';
 	      

From R.B.Vermaas at tudelft.nl  Wed May  4 09:27:29 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 04 May 2011 07:27:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22764 - hydra/jobs
Message-ID: <20110504072729.517257F801A@mx1.tudelft.nl>

Author: rob
Date: Wed May  4 07:27:29 2011
New Revision: 22764
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22764&sc=1

Log:


Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Wed May  4 07:23:10 2011	(r22763)
+++ hydra/jobs/spoofax-imp.nix	Wed May  4 07:27:29 2011	(r22764)
@@ -223,7 +223,7 @@
             export ANT_OPTS="-Xss8m -Xmx768m"
             export ANT_ARGS="-Declipse.spoofaximp.jars=utils/ -Declipse.home=$eclipsefakehome"
 
-            export MAVEN_OPTS="-Xss8m -Xmx768m -classpath `pwd`/org.strategoxt.imp.editors.aster/utils/*"
+            export MAVEN_OPTS='-Xss8m -Xmx768m -classpath org.strategoxt.imp.editors.aster/utils/* -classpath utils/*'
             mvn -X package ${mvnFlags} -e
 	      '';
 	      

From R.B.Vermaas at tudelft.nl  Wed May  4 09:33:15 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 04 May 2011 07:33:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22765 - hydra/jobs
Message-ID: <20110504073315.F33AD108C042@mx3.tudelft.nl>

Author: rob
Date: Wed May  4 07:33:15 2011
New Revision: 22765
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22765&sc=1

Log:


Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Wed May  4 07:27:29 2011	(r22764)
+++ hydra/jobs/spoofax-imp.nix	Wed May  4 07:33:15 2011	(r22765)
@@ -223,7 +223,7 @@
             export ANT_OPTS="-Xss8m -Xmx768m"
             export ANT_ARGS="-Declipse.spoofaximp.jars=utils/ -Declipse.home=$eclipsefakehome"
 
-            export MAVEN_OPTS='-Xss8m -Xmx768m -classpath org.strategoxt.imp.editors.aster/utils/* -classpath utils/*'
+            export MAVEN_OPTS='-Xss8m -Xmx768m -classpath org.strategoxt.imp.editors.aster/utils/\* -classpath utils/\*'
             mvn -X package ${mvnFlags} -e
 	      '';
 	      

From tobivollebregt at gmail.com  Wed May  4 10:08:16 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 04 May 2011 08:08:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22766 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans
Message-ID: <20110504080816.5BAB62B8073@mx2.tudelft.nl>

Author: tvo
Date: Wed May  4 08:08:16 2011
New Revision: 22766
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22766&sc=1

Log:
Fixes in templated sdf

- empty line reset indentation to 0
- consecutive newlines are now merged (for SDF gen)
- prettyprinter now works correctly for non-leading newlines

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Wed May  4 07:33:15 2011	(r22765)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Wed May  4 08:08:16 2011	(r22766)
@@ -6,6 +6,10 @@
   desugar
   generation-utils
 
+signature
+  constructors
+  	Blank : Blank
+
 strategies
 
   analyze:
@@ -94,10 +98,10 @@
 
   declare-placeholders =
        ?[Newline(_), Layout(_), Placeholder(_, _, _, _), Newline(_) | _];
-       [add-anno(|Leading()), id, id, add-anno(|Trailing()) | id];
+       [add-anno(|Leading()), id, add-anno(|Blank()), add-anno(|Trailing()) | id];
        [id, id, id | declare-placeholders]
     <+ ?[Newline(_), Placeholder(_, _, _, _), Newline(_) | _];
-       [add-anno(|Leading()), id, add-anno(|Trailing()) | id];
+       [add-anno(|Leading()), add-anno(|Blank()), add-anno(|Trailing()) | id];
        [id, id | declare-placeholders]
     <+ ?[Placeholder(_, Sort(x), _, _) | _];
        [id | declare-placeholders];

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str	Wed May  4 07:33:15 2011	(r22765)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str	Wed May  4 08:08:16 2011	(r22766)
@@ -87,6 +87,7 @@
       -> p|[ A* -> S' attrs' ]|
     with
       A* := <newlines-switch(id, trim-trailing-layout, trim-leading-layout);
+             combine-consecutive-newlines;
              filter(template-element-to-sdf)> e*
 
   template-to-sdf:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Wed May  4 07:33:15 2011	(r22765)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Wed May  4 08:08:16 2011	(r22766)
@@ -20,6 +20,8 @@
         pp-list(s|t) = map(s); separate-by(|t); concat-strings
         pp-list(s)   = map(s); concat-strings
 
+        [ih]
+
       [section*]
 
       strategies // all other sorts used in placeholders
@@ -36,6 +38,20 @@
       sorts-decl-in-pp := <collect-om(sort-decl-in-prettyprinting); nub> module*;
       sorts-without-pp := <diff> (sorts-used-in-pp, sorts-decl-in-pp);
       strategy* := <map(sort-to-prettyprint-strategy); separate-by(|"\n\n")> sorts-without-pp
+    with
+      ih := <newlines-switch(
+        // No newlines: need to prepend a newline+indent if the string is non-empty.
+        // pp-blank is used when there is no indent before the placeholder.
+        !$[// ih = indent helper, t = indent string (including "\n")
+           pp-ih(|t) = "" <+ string-replace(|"\n", t); <conc-strings> (t, <id>)
+           pp-blank  = "" <+ <conc-strings> ("\n", <id>)],
+        // Leading newlines: easy, since indent is (per definition) also leading.
+        !$[// ih = indent helper, t = indent string (including "\n")
+           pp-ih(|t) = string-replace(|"\n", t)],
+        // Trailing newlines: harder, since indent and newline are separated.
+        !$[// ih = indent helper, t = indent string (excluding "\n")
+           pp-ih(|t) = "" <+ all-lines(<conc-strings>(t, <id>))]
+      )>
 
   to-str:
     Module(modulename, _, _) -> <to-str(|modulename)>
@@ -83,7 +99,8 @@
                   map(try(rename-template-element))> elem*;
       arg*    := <filter(template-element-to-cons-arg);
                   separate-by(|", ")> elem'*;
-      part*   := <newlines-switch(trim-layout, trim-trailing-layout, trim-leading-layout);
+      part*   := <newlines-switch(trim-layout, trim-trailing-layout,
+                                  trim-leading-layout ; trim-trailing-indent);
                   listtd(template-element-to-stratego);
                   concatenate-consecutive-strings;
                   map(try(?String(<escape-and-double-quote>)));
@@ -93,29 +110,46 @@
       let'*   := <separate-by(|";\n")> [let*, result]
 
   rename-template-element:
-    Placeholder(_, Sort(x), _, _) -> <id>{<newname> x}
+    Placeholder(a, b@ Sort(x), c, d){a*} -> Placeholder(a, b{<newname> x}, c, d){a*}
 
   template-element-to-cons-arg:
-    Placeholder(_, _, _, _){name} -> name
+    Placeholder(_, Sort(_){name}, _, _) -> name
 
   template-element-to-stratego =
-       \[Newline(_), Indent(indent), Placeholder(_, _, _, _){name} | tail] ->
-         [$[<string-replace(|"\n", "\n[indent]")> [name]'] | tail]\
-    <+ [template-element-to-stratego' | id]
-    <+ []
+    // No/leading newlines.
+      \[Newline(_), Indent(indent), Placeholder(_, Sort(_){name}, _, _){Blank()} | tail] ->
+        [$[<pp-ih(|"\n[indent]")> [name]'] | tail] where not(use-trailing-newlines)\
+    <+
+      \[Newline(_), Placeholder(_, Sort(_){name}, _, _){Blank()} | tail] ->
+        [$[<pp-blank> [name]'] | tail] where use-no-newlines\
+    <+
+      \[Newline(_), Placeholder(_, Sort(_){name}, _, _){Blank()} | tail] ->
+        [$[[name]'] | tail] where use-leading-newlines\
+    // Trailing newlines.
+    <+
+      \[Indent(indent), Placeholder(_, Sort(_){name}, _, _){Blank()}, Newline(_) | tail] ->
+        [$[<pp-ih(|"[indent]")> [name]'] | tail] where use-trailing-newlines\
+    <+
+      \[Placeholder(_, Sort(_){name}, _, _){Blank()}, Newline(_) | tail] ->
+        [$[[name]'] | tail] where use-trailing-newlines\
+    // Anything else.
+    <+
+      [template-element-to-stratego' | id]
+    <+
+      []
 
   template-element-to-stratego' =
-      \Placeholder(_, _, _, _){name} -> $[[name]']\
+      \Placeholder(_, Sort(_){name}, _, _) -> $[[name]']\
     + \String(t) -> String(t)\
     + \Layout(t) -> String(t)\
     + \Indent(t) -> String(t)\
     + \Newline(t) -> String(t)\
 
   template-element-to-assignment:
-    Placeholder(_, Sort(x), None(), _){name} -> $[[name]' := <prettyprint-[x]> [name]]
+    Placeholder(_, Sort(x){name}, None(), _) -> $[[name]' := <prettyprint-[x]> [name]]
 
   template-element-to-assignment:
-    Placeholder(_, Sort(x), <Star() + Plus()>, Options(opt*)){name} -> t
+    Placeholder(_, Sort(x){name}, <Star() + Plus()>, Options(opt*)) -> t
     with
       if sep := <collect-one(?Separator(<id>))> opt* then
         t := $[[name]' := <pp-list(prettyprint-[x]|"[<escape> sep]")> [name]]
@@ -124,4 +158,4 @@
       end
 
   template-element-to-assignment:
-    Placeholder(_, Sort(x), Option(), _){name} -> $[[name]' := <pp-option(prettyprint-[x])> [name]]
+    Placeholder(_, Sort(x){name}, Option(), _) -> $[[name]' := <pp-option(prettyprint-[x])> [name]]

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Wed May  4 07:33:15 2011	(r22765)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Wed May  4 08:08:16 2011	(r22766)
@@ -35,6 +35,9 @@
            <+ \[Indent(_)]  -> []\
            <+ \[Newline(_)] -> []\ <+ id)
 
+  trim-trailing-indent =
+    listbu(\[Indent(_)]  -> []\ <+ id)
+
   trim-layout =
     trim-leading-layout;
     trim-trailing-layout
@@ -52,7 +55,7 @@
     let get-indent =
              \[Newline(_), Layout(y), _ | tail] -> [<string-length> y | <get-indent> tail]\
           <+ \[Newline(_), Layout(_)] -> []\
-          <+ \[Newline(_), Newline(_)] -> []\
+          <+ \[Newline(_), Newline(_) | tail] -> <get-indent> tail\
           <+ \[Newline(_), y | tail] -> [0 | <get-indent> tail]\
           <+ \[_ | tail] -> <get-indent> tail\
           <+ []
@@ -101,6 +104,11 @@
     <+ [id | concatenate-consecutive-strings]
     <+ []
 
+  combine-consecutive-newlines =
+       \[Newline(x){a*}, Newline(_){b*} | tail] -> <combine-consecutive-newlines> [Newline(x){a*, b*} | tail]\
+    <+ [id | combine-consecutive-newlines]
+    <+ []
+
   escape-and-double-quote =
     string-replace(|"\t", "\\t");
     string-replace(|"\r", "\\r");

From R.B.Vermaas at tudelft.nl  Wed May  4 10:16:37 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 04 May 2011 08:16:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22767 - hydra/jobs
Message-ID: <20110504081637.8B3BD2B8007@mx2.tudelft.nl>

Author: rob
Date: Wed May  4 08:16:37 2011
New Revision: 22767
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22767&sc=1

Log:


Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Wed May  4 08:08:16 2011	(r22766)
+++ hydra/jobs/spoofax-imp.nix	Wed May  4 08:16:37 2011	(r22767)
@@ -174,7 +174,10 @@
             make -C org.strategoxt.imp.generator all
             stopNest
 
-            export CLASSPATH="utils/aster.jar:utils/strategoxt.jar:utils/sdf2imp.jar:utils/make_permissive.jar:target/classes"
+            export LOCALCLASSPATH="utils/aster.jar:utils/strategoxt.jar:utils/sdf2imp.jar:utils/make_permissive.jar"
+            export ANT_OPTS="-Xss8m -Xmx768m"
+            export ANT_ARGS="-Declipse.spoofaximp.jars=utils/ -Declipse.home=$eclipsefakehome"
+            export CLASSPATH="`pwd`/utils/aster.jar:`pwd`/utils/strategoxt.jar:`pwd`/utils/sdf2imp.jar:`pwd`/utils/make_permissive.jar"
             export MAVEN_OPTS="-Xss8m -Xmx768m"
 
             for e in */build.main.xml
@@ -219,9 +222,8 @@
             done
 
             mkdir utils
-            export LOCALCLASSPATH="utils/aster.jar:utils/strategoxt.jar:utils/sdf2imp.jar:utils/make_permissive.jar"
-            export ANT_OPTS="-Xss8m -Xmx768m"
-            export ANT_ARGS="-Declipse.spoofaximp.jars=utils/ -Declipse.home=$eclipsefakehome"
+            cp -v org.strategoxt.imp.generator/lib/*.jar `dirname $e`/utils/
+            cp -v org.strategoxt.strj/java/strategoxt.jar `dirname $e`/utils/
 
             export MAVEN_OPTS='-Xss8m -Xmx768m -classpath org.strategoxt.imp.editors.aster/utils/\* -classpath utils/\*'
             mvn -X package ${mvnFlags} -e

From R.B.Vermaas at tudelft.nl  Wed May  4 10:21:57 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 04 May 2011 08:21:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22768 - hydra/jobs
Message-ID: <20110504082158.117C6CC084@mx4.tudelft.nl>

Author: rob
Date: Wed May  4 08:21:57 2011
New Revision: 22768
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22768&sc=1

Log:


Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Wed May  4 08:16:37 2011	(r22767)
+++ hydra/jobs/spoofax-imp.nix	Wed May  4 08:21:57 2011	(r22768)
@@ -222,10 +222,9 @@
             done
 
             mkdir utils
-            cp -v org.strategoxt.imp.generator/lib/*.jar `dirname $e`/utils/
-            cp -v org.strategoxt.strj/java/strategoxt.jar `dirname $e`/utils/
+            cp -v org.strategoxt.imp.generator/lib/*.jar utils/
+            cp -v org.strategoxt.strj/java/strategoxt.jar utils/
 
-            export MAVEN_OPTS='-Xss8m -Xmx768m -classpath org.strategoxt.imp.editors.aster/utils/\* -classpath utils/\*'
             mvn -X package ${mvnFlags} -e
 	      '';
 	      

From tobivollebregt at gmail.com  Wed May  4 10:27:10 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 04 May 2011 08:27:10 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22769 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.template
	org.strategoxt.imp.editors.template.test
	org.strategoxt.imp.editors.template.test/.externalToolBuilders o...
Message-ID: <20110504082710.6DAD2CC083@mx4.tudelft.nl>

Author: tvo
Date: Wed May  4 08:27:10 2011
New Revision: 22769
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22769&sc=1

Log:
Test project for templated SDF

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/.externalToolBuilders/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/.externalToolBuilders/TemplateTest build.main.xml.launch
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/.project
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/META-INF/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-Colorer.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-Folding.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-Outliner.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-References.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-Syntax.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest.main.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/Activator.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/TemplateTestParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/TemplateTestParseControllerGenerated.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/TemplateTestValidator.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/strategies/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/strategies/InteropRegisterer.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/strategies/Main.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/strategies/java_strategy_0_0.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/lib/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/lib/refactor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/plugin.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/Common.tmpl
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/Layout.tmpl
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/TemplateTest.tmpl
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/test/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/test/example.tmpl-test
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/trans/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/trans/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/trans/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/trans/prettyprint.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/trans/refactor.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/trans/templatetest.str
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/.classpath
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/.classpath	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<classpath>
+	<classpathentry kind="src" excluding="trans/**" path="editor/java"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/4"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/.externalToolBuilders/TemplateTest build.main.xml.launch
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/.externalToolBuilders/TemplateTest build.main.xml.launch	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
+<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
+<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES"/>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+</listAttribute>
+<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value=""/>
+<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="all,"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${none}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.editors.template.test/build.main.xml}"/>
+<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.editors.template.test}"/>
+<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
+</launchConfiguration>

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/.project
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/.project	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<projectDescription>
+      <name>org.strategoxt.imp.editors.template.test</name>
+      <comment></comment>
+      <buildSpec>
+        <buildCommand>
+          <name>org.eclipse.jdt.core.javabuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+            <name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+            <triggers>full,incremental,</triggers>
+            <arguments>
+                <dictionary>
+                    <key>LaunchConfigHandle</key>
+                    <value>&lt;project&gt;/.externalToolBuilders/TemplateTest build.main.xml.launch</value>
+                </dictionary>
+            </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.ManifestBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.SchemaBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+      </buildSpec>
+      <natures>
+        <nature>org.eclipse.pde.PluginNature</nature>
+        <nature>org.eclipse.jdt.core.javanature</nature>
+      </natures>
+    </projectDescription>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/META-INF/MANIFEST.MF
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/META-INF/MANIFEST.MF	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,21 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: TemplateTest Plug-in
+Bundle-SymbolicName: org.strategoxt.imp.editors.template.test; singleton:=true
+Bundle-Version: 1.0.0
+Bundle-Activator: org.strategoxt.imp.editors.template.test.Activator
+Import-Package: org.osgi.framework;version="1.3.0"
+Require-Bundle: org.eclipse.core.runtime,
+  org.eclipse.core.resources,
+  org.eclipse.imp.runtime,
+  org.eclipse.ui,
+  lpg.runtime,
+  org.eclipse.jface.text,
+  org.eclipse.ui.editors,
+  org.eclipse.ui.workbench.texteditor,
+  org.strategoxt.imp.runtime,
+  org.spoofax.jsglr,
+  org.strategoxt.strj
+Bundle-RequiredExecutionEnvironment: J2SE-1.5
+Bundle-ActivationPolicy: lazy
+Export-Package: org.strategoxt.imp.editors.template.test

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/build.generated.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/build.generated.xml	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,597 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="build.generated">
+
+        <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
+    
+        <!-- Initialization -->
+        <available file="${build}/org/strategoxt/imp/editors/template/test/strategies/Main.class" property="java.jar.enabled"/>
+        <condition property="java.jar.import" value="-la org.strategoxt.imp.editors.template.test.strategies" else="">
+            <isset property="java.jar.enabled"/>
+        </condition>
+        <condition property="java.jar.classpath" value=":${include}/${strmodule}-java.jar" else="">
+            <isset property="java.jar.enabled"/>
+        </condition>
+        <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
+        <dirname property="externaldefdir" file="${externaldef}"/>
+        <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
+            <isset property="externaldef"/>
+        </condition>
+        <condition property="externaljarimport" value=":${externaljar}" else="">
+            <isset property="externaljar"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <isset property="eclipse.running"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <available classname="org.eclipse.jdt.core.JDTCompilerAdapter"/>
+        </condition>
+        <condition property="externaljarflags" value="${externaljarflags}" else="">
+            <isset property="externaljarflags"/>
+        </condition>
+        <condition property="metasdfmodule.available" value="1">
+            <available file="${syntax}/${metasdfmodule}.sdf"/>
+        </condition>
+        
+        <fail unless="build" message="Please use build.main.xml to build this project or configure the required properties manually"/>
+        <mkdir dir="${build}"/>
+        <mkdir dir="${src-gen}"/>
+        <mkdir dir="${dist}"/>
+        <mkdir dir="${include}"/>
+        <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
+
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+        
+        <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
+                <arg value="${include}/${esvmodule}.packed.esv"/>
+            </java>
+        </target>
+        
+        <target name="refresh" if="eclipse.running">
+            <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+            <eclipse.convertPath fileSystemPath="${syntax}" property="syntaxdir"/>
+            <eclipse.convertPath fileSystemPath="${lib}" property="libdir"/>
+            <eclipse.refreshLocal resource="${libdir}" depth="infinite"/>
+            <eclipse.refreshLocal resource="${syntaxdir}/${sdfmodule}.pp.generated" depth="infinite"/>
+            <eclipse.refreshLocal resource="${libdir}/editor-common.generated.str" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Builders.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Colorer.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Completions.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+            <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
+            <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+            <!-- Might cause the editor to be reloaded?
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            -->
+        </target>
+        
+        <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
+                <arg value="-p"/>
+                <arg value="${include}/${sdfmodule}.tbl"/>
+            </java>
+        </target>
+        
+        <target name="check-classpath">
+            <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
+            <antcall target="check-classpath.helper"/>  
+        </target>
+        
+        <target name="init" if="eclipse.running">
+            <!-- refresh one file/dir in the project to trigger an Ant rebuild with the next build command -->
+            <java classname="org.strategoxt.imp.metatooling.building.AntForceRefreshScheduler" failonerror="false">
+                <arg value="${include}"/>
+            </java>
+        </target>
+  
+        <target name="check-classpath.helper" unless="check-classpath.available">
+            <echo level="error" message="Could not load the Spoofax plugin loading classes."/>
+            <echo level="error" message="Make sure it is on the class path."/>
+            <echo level="error" message=""/>               
+            <echo level="error" message="In Eclipse, make sure the Ant builder is configured properly:"/>
+            <echo level="error" message="right-click on build.main.xml, go to Run as, Ant build..., JRE tab,"/>
+            <echo level="error" message="and ensure Run in the same JRE as the workspace is selected"/>
+            <echo level="error" message="alternatively, build the project using Build Project in the Project menu"/>
+            <fail/>
+        </target>
+    
+        <target name="sdf2table" depends="make-permissive">
+            <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                
+                <fileset file="${include}/${sdfmodule}-Permissive.def"/>
+                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+            </apply>
+        </target>
+        
+        <target name="meta-sdf2table" if="metasdfmodule.available">
+            <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+            <antcall target="sdf2table">
+                <param name="sdfmodule" value="${metasdfmodule}"/>
+                <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+            </antcall>
+            <antcall target="meta-sdf2table.helper"/>
+        </target>
+        
+        <target name="meta-sdf2table.helper" if="eclipse.running">
+           <eclipse.convertPath fileSystemPath="${include}" property="includeresource"/>
+           <eclipse.refreshLocal resource="${includeresource}/${metasdfmodule}.tbl" depth="infinite"/>
+        </target>
+        
+        <target name="make-permissive" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-Permissive.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <antcall target="make-permissive.helper"/>
+        </target>
+    
+        <target name="make-permissive.helper" unless="permissive-grammar.available">
+            <java classname="org.strategoxt.permissivegrammars.make_permissive" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-Permissive.def"/>
+                <arg line="--optimize on"/>
+            </java>
+        </target>
+
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
+            <mkdir dir="utils"/>
+            <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/aster.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.strategojar}" todir="utils" failonerror="false"/>
+        </target>
+    
+        <target name="pack-sdf" unless="externaldef">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.sdf"/>
+                </srcfileset>
+                <srcfileset dir="${lib}">
+                    <include name="**/*.def"/>
+                </srcfileset>
+                <targetfileset file="${include}/${sdfmodule}.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.def" property="pack-sdf.available"/>
+            <antcall target="pack-sdf.helper"/>
+        </target>
+    
+        <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <condition property="utils-include" value="-I ${utils}" else="">
+                <available file="${utils}"/>
+            </condition>
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-pack-sdf"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.sdf"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-I"/>
+                <arg value="${syntax}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg line="${utils-include}"/>
+                <arg line="${build.sdf.imports}"/>
+            </java>
+        </target>
+    
+        <target name="copy-sdf" if="externaldef">
+            <copy file="${externaldef}" tofile="${include}/${sdfmodule}.def" preservelastmodified="true"/>
+        </target>
+    
+        <target name="copy-jar" if="externaljar">
+            <copy file="${externaljar}" todir="${include}" preservelastmodified="true"/>
+        </target>
+    
+        <target name="rtg2sig" if="build.stratego.enabled" depends="sdf2rtg">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.rtg"/>
+                <targetfileset file="${include}/${sdfmodule}.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.str" property="rtg2sig.available"/>
+            <antcall target="rtg2sig.helper"/>
+        </target>
+    
+        <target name="rtg2sig.helper" unless="rtg2sig.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-rtg2sig"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.str"/>
+                <arg value="--module"/>
+                <arg value="${sdfmodule}"/>
+            </java>
+        </target>
+        
+        <target name="sdf2rtg" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}.rtg"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.rtg" property="sdf2rtg.available"/>
+            <antcall target="sdf2rtg.helper"/>
+        </target>
+    
+        <target name="sdf2rtg.helper" unless="sdf2rtg.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-sdf2rtg"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="--ignore-missing-cons"/>
+                <arg value="-Xnativepath"/>
+                <arg value="${build.strategoxt.sdf}"/>
+            </java>
+        </target>
+        
+        <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${syntax}/${sdfmodule}.generated.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.generated.pp.af"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
+        </target>
+    
+        <target name="ppgen.helper" unless="ppgen.available">
+            <!-- Any failures here are ignored; they are only a problem when imported from Stratego -->
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-ppgen"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-t"/>
+                <arg value="-b"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+            </java>
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-pp-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+                <arg value="-o"/>
+                <arg value="${syntax}/${sdfmodule}.generated.pp"/>
+            </java>
+        </target>
+    
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
+        
+        <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${syntax}/${sdfmodule}.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+            </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
+        </target>
+    
+        <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-parse-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.pp"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.pp.af"/>
+            </java>
+        </target>
+    
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+    
+        <!-- Aster to Stratego -->
+        <target name="stratego.aster">
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <fileset dir="${basedir}" id="aster-input-set">
+              <include name="**/*.astr"/>
+            </fileset>
+            <pathconvert pathsep=" " setonempty="false" property="aster-input" refid="aster-input-set"/>
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.astr"/>
+                </srcfileset>
+                <targetfileset file="${trans}/${strmodule}.rtree"/>
+            </dependset>
+            <condition property="aster-output.uptodate">
+                <and>
+                    <isset property="aster-output.available"/>
+                    <available file="${trans}/${strmodule}.rtree"/>
+                </and>
+            </condition>
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.uptodate"/>
+            <antcall target="stratego.aster.helper"/>
+        </target>
+    
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg line="${aster-input}"/>
+            </java>
+        </target>
+        
+        <target name="java.jar" if="java.jar.enabled">
+            <jar basedir="${build}" excludes="trans/**" update="true" destfile="${include}/${strmodule}-java.jar"/>
+        </target>
+    
+        <!-- Stratego to Java interpreter -->
+        <target name="stratego.ctree" depends="rtg2sig">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/*.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${include}/${strmodule}.ctree"/>
+            </dependset>
+            <available file="${include}/${strmodule}.ctree" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputfile" value="${include}/${strmodule}.ctree"/>
+                <param name="build.stratego.extraargs" value="-F"/>
+            </antcall>
+        </target>
+    
+        <!-- Stratego to Java compiler -->
+        <target name="stratego.jar" depends="rtg2sig,utils-files">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/*.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="trans/**"/>
+                <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+        </target>
+            
+        <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans}/${strmodule}.str"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
+                
+        <!-- begin: targets used for adding debugging instrumentation to stratego -->
+        
+		<!-- 
+			if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
+			Only used by stratego.jvm.helper.debug 
+		-->
+		<condition property="transformer-output" value="" else="--output-rtree">
+			<isset property="debug.the.debug.transformer"/>
+		</condition>
+		
+		<!-- 
+			if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
+			if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
+			Only used by stratego.jvm.helper.debug
+		-->
+		<condition property="strj.input.file.type" value="str" else="rtree">
+			<isset property="debug.the.debug.transformer"/>
+		</condition>
+        
+        <!-- value determines which target will be executed.
+        	If the file ".debugmode" can be found in the project root call stratego.jar.debug
+        	else call stratego.jar
+        -->
+        <condition property="stratego.jar.target" value="call.stratego.jar.debug" else="call.stratego.jar">
+            <available file=".debugmode"/>
+        </condition>
+		
+		<!-- will save the stratego files with debug info in this folder -->
+		<property name="trans-debug" location="trans-debug"/>
+		
+		<!-- this helper target determines what target to call, based on debug.build.enabled -->
+		<target name="stratego.jar.helper">
+			<antcall target="${stratego.jar.target}"/>
+		</target>
+		
+		<!-- call stratego.jar unless debug.build.enabled property is set --> 
+		<target name="call.stratego.jar" depends="stratego.jar">
+			<echo message="call.stratego.jar - ${stratego.jar.target}"/>
+		</target>
+		
+		<!-- call stratego.jar.debug when debug.build.enabled property is set -->
+		<target name="call.stratego.jar.debug" depends="stratego.jar.debug">
+			<echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
+		</target>
+		
+		<!-- copy stratego runtime jars to utils folder -->
+		<target name="utils-files-debug" depends="utils-files">
+			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
+			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
+		</target>
+		
+	    <!-- Stratego to Java compiler with debugging capabilities -->
+	    <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
+	        <dependset>
+	            <srcfileset dir="${basedir}">
+	                <include name="**/*.str"/>
+	                <include name="**/*.astr"/>
+	                <exclude name="lib/editor-common.generated.str"/>
+	            </srcfileset>
+	            <targetfileset file="${src-gen}/trans/Main.java"/>
+	        </dependset>
+	        <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+	        <antcall target="copy-jar"/>
+	        <antcall target="stratego.jar.deletehelper"/>
+	    	<!-- compile stratego to java -->
+	        <antcall target="stratego.jvm.helper.debug">
+	            <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+	            <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+	        </antcall>
+	    	<!-- compile java to class -->
+	        <javac destdir="${build}" source="1.5" target="1.5" debug="on">
+	    		<!-- attribute in javac: srcdir="${src-gen}" -->
+	    		<src path="${src-gen}"/>
+	        	<!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"  -->
+	        	<classpath>
+	        		<pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+	        		<pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
+	        		<pathelement location="utils/stratego-debug-runtime-java.jar"/>
+	        	</classpath>
+	        	<!-- attribute in javac: includes="trans/**"  -->
+	        	<include name="trans/**"/>
+	    	</javac>
+	        <!-- copy imported terms -->
+	        <copy todir="${build}/trans">
+	            <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+	        </copy>
+	    	<!-- create a jar from the class files -->
+	        <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+	        <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+	        <delete><fileset dir="${build}" includes="trans/**"/></delete>
+	    </target>
+		
+		<!-- instrument the stratego program and compile it to java -->
+	    <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
+	    	<echo message="generate stratego with debug information"/>
+	    	<echo message="${basedir}"/>
+	    	<available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
+	    	<!-- add debug information -->
+	  		<java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
+	  		     <classpath>
+					<pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
+	  		     	<pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
+	  		     	<pathelement location="${eclipse.spoofaximp.strategojar}"/>
+	  		     </classpath>
+	  			<arg value="-i"/>
+	  			<arg value="${trans}/${strmodule}.str"/>
+	  			<arg value="--gen-dir"/>
+	  			<arg value="${trans-debug}"/>
+	  			<arg value="--base-dir"/> <!-- set the basedir to the project dir -->
+	  			<arg value="${basedir}"/>
+	  			<!-- "arg line='val'" val should contain space-separated arguments --> 
+	  			<arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
+	  			
+	  			<!-- arguments should start with two '-'-characters -->
+	  			<!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
+	  			<!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
+	  			<!-- <arg value="-output-rtree"/> --> 
+	    	</java>
+	    	<!-- now compile instrumented stratego to java -->
+	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+	        <java classname="org.strategoxt.strj.Main" failonerror="true">
+	            <arg value="-i"/>
+	            <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
+	            <arg value="-o"/>
+	            <arg value="${build.stratego.outputfile}"/>
+	            <arg value="-p"/>
+	            <arg value="trans"/>
+	            <arg value="--library"/>
+	            <arg value="--clean"/>
+	            <arg line="${build.stratego.args}"/>
+	            <arg line="${build.stratego.extraargs}"/>
+	            <arg line="${externaljarflags}"/>
+	            <arg line="${externaldefimport}"/>
+	            <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+	        	<!-- put strategodebuglib.rtree on the include path -->
+	        	<arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
+	        	<arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
+	        </java>
+	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+	        <mkdir dir="${build}/trans"/>
+	    </target>
+        
+        
+        <!-- end: targets used for adding debugging instrumentation to stratego -->
+
+
+        <!-- Stratego to C-based native executable -->
+        <target name="stratego.c">
+            <antcall target="stratego.c.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/include"/>
+                <param name="build.stratego.extraargs" value=""/>
+                <param name="build.stratego.extension" value=""/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+        
+        <!-- Helper target for calling the stratego compiler -->
+        <target name="stratego.c.helper" depends="rtg2sig" if="build.stratego.enabled">
+            <apply executable="${build.strategoxt.stratego}/${build.stratego.compiler}" dest="${build.stratego.outputpath}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                
+                <fileset file="${trans}/${strmodule}.str"/>
+                <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>
+            </apply>
+        </target>
+        
+        <target name="clean" description="clean up">
+            <delete dir="${build}"/>
+            <delete file="${include}/${sdfmodule}.def"/>
+            <delete dir="${src-gen}/trans"/>
+        </target>
+    </project>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/build.main.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/build.main.xml	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,45 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="TemplateTest" default="all">
+
+        <!-- Key input modules -->
+        <property name="sdfmodule" value="TemplateTest"/>
+        <property name="metasdfmodule" value="Stratego-TemplateTest"/>
+        <property name="esvmodule" value="TemplateTest"/>
+        <property name="strmodule" value="templatetest"/>
+
+        <!-- Project directories -->
+        <property name="trans" location="trans"/>
+        <property name="src-gen" location="editor/java"/>
+        <property name="syntax" location="syntax"/>
+        <property name="include" location="include"/>
+        <property name="lib" location="lib"/>
+        <property name="build" location="bin"/>
+        <property name="dist" location="bin/dist"/>
+
+        <!-- Imports -->
+        <property name="build.sdf.imports" value=""/>
+        <property name="build.stratego.args" value="
+                        --library
+                        -I &quot;${trans}&quot;
+                        -I &quot;${basedir}&quot;
+                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm"/>
+
+        <!-- Optional: external .def and .jar locations
+        <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+        <property name="externaljar" value="../lib.jar"/>
+        <property name="externaljarflags" value="-la org.lib"/>
+        -->
+        <property name="externaldef" location="syntax/TemplateTest.generated.def"/>
+
+        <!-- Environment configuration for command-line builds -->
+        <condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
+            <isset property="eclipse.spoofaximp.nativeprefix"/>
+        </condition>
+        <property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin"/>
+
+        <import file="build.generated.xml"/>
+
+        <!-- Main target -->
+        <target name="all" depends="spoofaximp.default.ctree"/>
+    </project>

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/build.properties	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,8 @@
+source.. = editor/java/
+output.. = bin/
+bin.includes = META-INF/,\
+               plugin.xml,\
+               include/,\
+               bin/,\
+               lib/,\
+               .

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-Builders.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-Builders.esv	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,29 @@
+
+module TemplateTest-Builders
+
+imports TemplateTest-Builders.generated
+
+builders
+
+  // This file can be used for custom analysis and builder rules.
+  //
+  // See the imported file for a brief introduction and examples.
+
+builders
+
+  provider : include/templatetest.ctree
+  provider : include/templatetest-java.jar
+
+  observer : editor-analyze
+
+  builder  : "Generate Java code (for selection)"   = generate-java (openeditor) (realtime)
+  builder  : "Show abstract syntax (for selection)" = generate-aterm (openeditor) (realtime) (meta) (source)
+  builder  : "Prettyprint (selection)"              = generate-pretty (openeditor) (realtime)
+
+refactorings
+
+  pp-table                  : get-pp-table
+
+  refactoring ID            : "Rename Entity" = rename-entity (source) (cursor)
+
+  // on save: generate-java

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-Colorer.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-Colorer.esv	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,9 @@
+module TemplateTest-Colorer
+
+imports TemplateTest-Colorer.generated
+
+colorer
+                                                                      
+  // This file can be used for custom colorer rules.                  
+  //                                                                  
+  // See the imported file for a brief introduction and examples.     
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-Completions.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-Completions.esv	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,18 @@
+module TemplateTest-Completions
+
+imports
+  // TemplateTest-Completions.generated
+  TemplateTest-Completions.generated2
+
+completions
+
+  // This file is used to define content completion.
+  //
+  // See the imported file for a brief introduction and examples.
+
+completions
+  // Semantic (identifier) completion:
+
+  completion proposer                  : editor-complete
+
+  completion trigger                   : ":"

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-Folding.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-Folding.esv	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,9 @@
+module TemplateTest-Folding
+
+imports TemplateTest-Folding.generated
+
+folding
+  
+  // This file can be used for custom folding rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-Outliner.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-Outliner.esv	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,9 @@
+module TemplateTest-Outliner
+
+imports TemplateTest-Outliner.generated
+
+outliner
+  
+  // This file can be used for custom outliner rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-References.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-References.esv	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,15 @@
+module TemplateTest-References
+
+imports TemplateTest-References.generated
+
+references
+                                                                                                   
+  // This file can be used to specify reference resolving and hover help, and content completion.  
+  //                                                                                               
+  // See the imported file for a brief introduction and examples.                                  
+                                                                                                   
+
+references
+                
+  reference _ : editor-resolve
+  hover _     : editor-hover
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-Syntax.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest-Syntax.esv	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,9 @@
+module TemplateTest-Syntax
+
+imports TemplateTest-Syntax.generated
+
+language
+                                                                   
+  // This file can be used for custom syntax rules.                
+  //                                                               
+  // See the imported file for a brief introduction and examples.  
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest.main.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/TemplateTest.main.esv	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,18 @@
+module TemplateTest.main
+
+imports TemplateTest-Builders TemplateTest-Colorer TemplateTest-Completions TemplateTest-Folding TemplateTest-Outliner TemplateTest-References TemplateTest-Syntax
+
+language General properties
+
+  name          : TemplateTest
+  id            : org.strategoxt.imp.editors.template.test
+  extends       : Root
+
+  description   : "Spoofax/IMP-generated editor for the TemplateTest language"
+  url           : http://strategoxt.org
+
+  extensions    : tmpl-test
+  table         : include/TemplateTest.tbl
+  start symbols : Start
+
+  disambiguator : editor-disambiguate

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/Activator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/Activator.java	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,44 @@
+package org.strategoxt.imp.editors.template.test;
+
+import org.eclipse.imp.preferences.PreferencesService;
+import org.eclipse.imp.runtime.PluginBase;
+import org.osgi.framework.BundleContext;
+
+public class Activator extends PluginBase 
+{ 
+  public static final String kPluginID = "TemplateTest";
+
+  public static final String kLanguageName = "TemplateTest";
+
+  protected static Activator sPlugin;
+
+  public static Activator getInstance()
+  { 
+    if(sPlugin == null)
+      return new Activator();
+    return sPlugin;
+  }
+
+  public Activator () 
+  { 
+    super();
+    sPlugin = this;
+  }
+
+  @Override public void start(BundleContext context) throws Exception
+  { 
+    super.start(context);
+  }
+
+  @Override public String getID()
+  { 
+    return kPluginID;
+  }
+
+  @Override public String getLanguageID()
+  { 
+    return kLanguageName;
+  }
+
+  protected static PreferencesService preferencesService = null;
+}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/TemplateTestParseController.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/TemplateTestParseController.java	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,4 @@
+package org.strategoxt.imp.editors.template.test;
+
+public class TemplateTestParseController extends TemplateTestParseControllerGenerated 
+{ }
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/TemplateTestParseControllerGenerated.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/TemplateTestParseControllerGenerated.java	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,108 @@
+package org.strategoxt.imp.editors.template.test;
+
+import java.io.InputStream;
+import java.io.IOException;
+import java.io.File;
+import java.io.FileInputStream;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class TemplateTestParseControllerGenerated extends DynamicParseController 
+{ 
+  public static final String LANGUAGE = new String("TemplateTest");
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static volatile Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static synchronized Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  protected static synchronized void setDescriptor(Descriptor descriptor)
+  { 
+    TemplateTestParseControllerGenerated.descriptor = descriptor;
+  }
+
+  protected static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = TemplateTestParseControllerGenerated.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = TemplateTestParseControllerGenerated.class.getResourceAsStream(TABLE);
+      boolean filesystem = false;
+      if(descriptorStream == null && new File("./" + DESCRIPTOR).exists())
+      { 
+        descriptorStream = new FileInputStream("./" + DESCRIPTOR);
+        filesystem = true;
+      }
+      if(table == null && new File("./" + TABLE).exists())
+      { 
+        table = new FileInputStream("./" + TABLE);
+        filesystem = true;
+      }
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
+      descriptor = DescriptorFactory.load(descriptorStream, table, filesystem ? Path.fromPortableString("./") : null);
+      descriptor.setAttachmentProvider(TemplateTestParseControllerGenerated.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  private static String getPluginLocation()
+  { 
+    return TemplateTestParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(this, getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/TemplateTestValidator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/TemplateTestValidator.java	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,12 @@
+package org.strategoxt.imp.editors.template.test;
+
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
+
+public class TemplateTestValidator extends MetaFileLanguageValidator 
+{ 
+  @Override public Descriptor getDescriptor()
+  { 
+    return TemplateTestParseController.getDescriptor();
+  }
+}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/strategies/InteropRegisterer.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/strategies/InteropRegisterer.java	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,14 @@
+package org.strategoxt.imp.editors.template.test.strategies;
+
+import org.strategoxt.lang.JavaInteropRegisterer;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * Helper class for {@link java_strategy_0_0}.
+ */
+public class InteropRegisterer extends JavaInteropRegisterer {
+
+  public InteropRegisterer() {
+    super(new Strategy[] { java_strategy_0_0.instance });
+  }
+}

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/strategies/Main.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/strategies/Main.java	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,11 @@
+package org.strategoxt.imp.editors.template.test.strategies;
+
+import org.strategoxt.lang.Context;
+
+public class Main {
+  
+  public static void init(Context context) {
+    // Called when the editor is being initialized
+  }
+
+}

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/strategies/java_strategy_0_0.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/editor/java/org/strategoxt/imp/editors/template/test/strategies/java_strategy_0_0.java	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,32 @@
+package org.strategoxt.imp.editors.template.test.strategies;
+
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * Example Java strategy implementation.
+ *
+ * This strategy can be used by editor services and can be called
+ * in Stratego modules by declaring it as an external strategy
+ * as follows:
+ *
+ * <code>
+ *  external java-strategy(|)
+ * </code>
+ *
+ * @see InteropRegisterer  This class registers java_strategy_0_0 for use.
+ */
+public class java_strategy_0_0 extends Strategy {
+  
+  public static java_strategy_0_0 instance = new java_strategy_0_0();
+
+  @Override
+  public IStrategoTerm invoke(Context context, IStrategoTerm current) {
+    context.getIOAgent().printError("Input for java-strategy: " + current);
+    ITermFactory factory = context.getFactory();
+    return factory.makeString("Regards from java-strategy");
+  }
+
+}

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/lib/editor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/lib/editor-common.generated.str	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,254 @@
+module lib/editor-common.generated
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-gpp
+
+strategies
+
+  parse-file = parse-templatetest-file
+  parse-templatetest-file =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(include/TemplateTest.tbl)>
+    )
+
+  parse-string = parse-templatetest-string
+  parse-templatetest-string =
+    parse-string(
+      strsglr-report-parse-error
+    | <import-term(include/TemplateTest.tbl)>
+    )
+  
+  parse-stream = parse-templatetest-stream
+  parse-templatetest-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(include/TemplateTest.tbl)>
+    )
+
+  pp-templatetest-string =
+    ast2abox(|[<import-term(include/TemplateTest.generated.pp.af)>,
+               <import-term(include/TemplateTest.pp.af)>]);
+    box2text-string(|100)
+
+strategies
+  
+  /**
+   * Processes an import during semantic analysis.
+   * Ensures proper caching of files and prevents
+   * processing duplicate imports more than once.
+   *
+   * @param resolve-path  Resolves the filesystem path of this import
+   * @param parse-file    Parses a file (optionally removing definition bodies
+   *                      so only signatures are stored in the cache)
+   * @param record-declarations
+   *                      Performs semantic analysis on a tree
+   */
+  open-import(resolve-path, parse-file, record-declarations):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path       := <resolve-path> import;
+        cache-path := <import-cache-path> path;
+        if not(<IsImported> path) then
+          rules(
+            IsImported: path
+          );
+          ( <is-newer> (cache-path, path);
+            file := <ReadFromFile> cache-path
+          <+
+            file := <parse-file> path;
+            if <file-exists> path then
+              // Only cache if on filesystem (e.g., ignore libstratego-lib)
+              <WriteToBinaryFile> (cache-path, file)
+            end        
+          );
+          {| CurrentFile:
+            rules(CurrentFile := path);
+            <record-declarations> file
+          |}
+        end
+      end
+
+  open-wildcard-import(resolve-path, parse-file, record-declarations, is-source-file):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path := <resolve-path> import;
+        readdir;
+        list-loop(
+          if is-source-file then
+            <open-import(id, parse-file, record-declarations)>
+              $[[path]/[<id>]]
+          <+
+            try(?one-failed)
+          end
+        );
+        not(!one-failed)
+      end
+  
+  import-cache-path:
+    full-path -> cache-path
+    with
+      project-path := <project-path>;
+      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
+      full-path'   := <string-replace(|"/", "+"); string-replace(|"\\", "+"); string-replace(|":", "+")> full-path;
+      cache-path   := $[[cache-dir]/[full-path'].sig]
+
+  project-path = prim("SSL_EXT_projectpath")
+  
+  plugin-path = prim("SSL_EXT_pluginpath")
+  
+  candidate-sorts = prim("SSL_EXT_candidatesorts")
+
+  is-newer:
+    (file1, file2) -> <id>
+    where
+      <gt> (<file-exists; modification-time> file1, <file-exists; modification-time> file2) 
+
+strategies
+  
+  editor-init =
+    // Ensure all dynamic rules are properly scoped
+    try(dr-scope-all-end);
+    dr-scope-all-start
+  
+  refresh-workspace-file:
+    path -> <prim("SSL_EXT_refreshresource", path)>
+  
+  string-starts-with-capital =
+    explode-string; Hd; is-upper
+
+strategies
+  
+  origin-term      = prim("SSL_EXT_origin_term", <id>)
+  origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-location  = prim("SSL_EXT_origin_location", <id>)
+  origin-line      = origin-location => (<id>, _, _, _)
+  origin-column    = origin-location => (_, <id>, _, _)
+  origin-strip     = prim("SSL_EXT_origin_strip", <id>)
+  origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+  
+  origin-surrounding-comments =
+    prim("SSL_EXT_origin_surrounding_comments", "TemplateTest", <id>)
+    
+  origin-documentation-comment =
+    origin-surrounding-comments;
+    filter(string-as-chars(documentation-comment-chars));
+    concat-strings
+  
+  documentation-comment-chars:
+    ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
+  
+  origin-track-forced(s) =
+    ![<id>]; all(s); ?[<id>]
+
+strategies
+
+  desugar-position(desugar|ast):
+    position -> position'
+    where
+      ast'  := <at-position(!<id>{MARKER()}|position)> ast;
+      ast'' := <topdown(repeat(preserve-annos({?x; desugar; not(?x)})))> ast';
+      position' := <position-of-term({?_{a*}; <one(?MARKER())> a*})> ast''
+   
+  at-position(s|position):
+    c#(t*) -> t'
+    where
+      !position => [i | position']
+    where
+      t' := c#(<at-index(at-position(s|position'))> (i, t*))
+
+  at-position(s|position):
+    t -> t'
+    where
+      !position => [];
+      t' := <s> t
+
+  position-of-term(is-term):
+    t -> []
+    where
+      is-term
+  
+  position-of-term(is-term):
+    _#(t*) -> <position-of-term(is-term|0)> t*
+  
+  position-of-term(is-term|start-index):
+    [t | t*] -> position
+    where
+      if i* := <position-of-term(is-term)> t then
+        position := [start-index | i*]
+      else
+        position := <position-of-term(is-term | <inc> start-index)> t*
+      end
+
+  term-at-position(|position):
+    t -> t'
+    where
+      at-position(?t'|position) 
+
+  parent-at-position(|position):
+    t -> t'
+    where
+      !position => [i, _];
+      t' := <subterm-at(|i)> t
+  
+  parent-at-position(|position):
+    t -> <parent-at-position(|position')> t'
+    where
+      !position => [i | position' @ [_, _ | _]];
+      t' := <subterm-at(|i)> t
+
+  subterm-at(|index):
+    _#(t*) -> <index(|<inc> index)> t*
+  
+signature constructors
+
+  COMPLETION : String -> Term
+  NOCONTEXT  : Term   -> Term
+  MARKER     : Term
+
+  // Below are copies of the signatures of the terms used in example
+  // trans/templatetest.str file. These definitions should also be automatically 
+  // generated in the imported include/TemplateTest.str module. However,
+  // to ensure that the example transformation doesn't break when the
+  // syntax is changed, we also hard-coded them here.
+          
+  Module   : ID * List(Entity)   -> Module
+  Entity   : ID * List(Property) -> Entity
+  Property : ID * Type           -> Property
+  Type     : ID                  -> Type
+
+strategies
+  
+  // Set markers for a given file. Use when checking files from a queued strategy.
+  // Current term: (ast-desugared, errors, warnings, notes) tuple
+  // ast: the root node of the file to set markers on 
+  set-markers(|ast) = prim("SSL_EXT_set_markers", ast)
+
+  // Indicate that one or more files need analysis. 
+  // Current term: ss a list of absolute file paths, or a single absolute file path to analyze
+  queue-analysis = 
+       (is-list; list-loop(queue-analysis))
+    <+ prim("SSL_EXT_queue_analysis")
+
+  // Set the total number of work units to complete. Can be called multiple times. 
+  // Current term: number of work units (int).
+  set-total-work-units = prim("SSL_EXT_set_total_work_units")
+  
+  // Complete one work unit and update progress monitors.
+  // Current term: ignored
+  complete-work-unit = prim("SSL_EXT_complete_work_unit")
+  
+  // Queue a strategy for background processing with a progress indicator.
+  // Current term: the term to pass to the background strategy
+  // s: the strategy, as string
+  // description: name of the task (will be shown in progress view)
+  queue-strategy(|s,description) = prim("SSL_EXT_queue_strategy", s, description)
+  
+  // Return the result of this strategy to indicate a non-completed (backgrounded) analysis.
+  // Editor services (hover, resolve) will be delayed until a complete analysis is performed. 
+  set-analysis-backgrounded = !"BACKGROUNDED"
+  

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/lib/refactor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/lib/refactor-common.generated.str	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,67 @@
+module lib/refactor-common.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+
+strategies //transformation
+
+/**
+ * Replaces elements in a list (once, starting from the right)
+ * @param match strategy for partial list
+ * @param new elements List(b)
+ * @type List(a) -> List(a,b)
+ */
+replace-sublist(match-sublist|new-elems): 
+  list -> <
+    at-suffix(match-sublist;!new-elems) <+
+    (
+      init; 
+      replace-sublist(match-sublist|new-elems);
+      at-end(![<last> list])
+    )
+  > list 
+
+/**
+ * Inserts an element at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list element 
+ * @type Term -> Term
+ */
+insert-elem(|pos, elem)=
+  insert-sublist(|pos, [elem])
+
+/**
+ * Inserts a list of elements at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list elements 
+ * @type Term -> Term
+ */	
+insert-sublist(|pos, elems)=
+  at-position(
+    split-at(|<last> pos);
+    ?(prefix, suffix);
+    <concat>[prefix, elems, suffix]
+    |<init> pos
+  )
+
+
+strategies //user-input
+
+/**
+ * Opens an input dialog for one string value that represents an identifier
+ * The language is used to check if the input value matches the identifier pattern
+ * @type (String, String, String, String) -> String
+ */
+input-dialog:
+  (language, title, label, default-value) -> <prim("SSL_EXT_newnamedialog", language, title, label, default-value)>
+  
+input-dialog:
+  (title, label, default-value) -> <input-dialog>("", title, label, default-value)
+
+strategies //pp-table
+	
+get-pp-table=
+  import-term(include/TemplateTest.generated.pp.af)
+	

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/plugin.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/plugin.xml	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<?eclipse version="3.0"?>
+
+<plugin>
+       <extension point="org.eclipse.imp.runtime.languageDescription">
+          <language extensions="tmpl-test" description="TemplateTest" language="TemplateTest" derivedFrom="DynamicRoot" validator="org.strategoxt.imp.editors.template.test.TemplateTestValidator" validatorClass="org.strategoxt.imp.editors.template.test.TemplateTestValidator"></language>
+       </extension>
+       <extension id="org.strategoxt.imp.editors.template.test.parser" name="TemplateTest Parser" point="org.eclipse.imp.runtime.parser">
+          <parser class="org.strategoxt.imp.editors.template.test.TemplateTestParseController" language="TemplateTest">
+          </parser>
+       </extension>
+    </plugin>

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/Common.tmpl
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/Common.tmpl	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,23 @@
+module Common
+
+lexical syntax
+
+  [a-zA-Z][a-zA-Z0-9]* -> ID
+  "-"? [0-9]+          -> INT
+
+  "\"" StringChar* "\"" -> STRING
+  ~[\"\n]               -> StringChar
+  "\\\""                -> StringChar
+  BackSlashChar         -> StringChar
+  "\\"                  -> BackSlashChar
+
+lexical restrictions
+
+  %% Ensure greedy matching for lexicals
+
+  INT           -/- [0-9]
+  ID            -/- [a-zA-Z0-9\_]
+
+  %% Backslash chars in strings may not be followed by "
+
+  BackSlashChar -/- [\"]

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/Layout.tmpl
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/Layout.tmpl	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,50 @@
+/*
+This file implements \n as LAYOUT, but still allows it to be used as e.g.
+statement separator in other productions, without resulting in ambiguities.
+
+This is done by declaring all whitespace characters except \n as LAYOUT, and
+allowing \n as LAYOUT _only_ as part of the special "LineBreak" sort, which
+greedily eats all layout (including any subsequent \n) after the initial \n.
+
+As such, whitespace at the end of a line is parsed as typical LAYOUT.
+When the \n is encountered the only valid parse is to treat all subsequent
+whitespace (including empty lines) as a LineBreak, which has an injection
+into LAYOUT.
+
+If there is a \n required by a production, then the first \n _must_ be
+parsed as the \n required by the production (and the second \n, if any,
+starts a LineBreak sort), as there is no way to "escape" from the greedy
+LineBreak sort otherwise.
+
+Unfortunately this does not always work. Because LAYOUT? may be followed by
+a \n there WILL be an ambiguity everytime the LAYOUT token is to be injected
+in one of multiple LAYOUT?-"holes" in the CF grammar. There is no way to
+constrain which "hole" is used apart from forbidding LAYOUT? to be followed
+by a \n. But then semantic \n will always be eaten by any preceding LAYOUT?,
+nullifying the entire point of this file...
+
+Since this ambiguity appears to always be of a simple amb([x, x]) form,
+a Stratego-based disambiguator has been employed in this project to remove
+those ambiguities: amb([x, x]) -> x
+*/
+
+module Layout
+
+lexical syntax
+  [\ \t\r] -> LayoutChar
+  LayoutChar -> LAYOUT
+
+  "\n" ("\n" | LayoutChar)* -> LineBreak
+  LineBreak -> LAYOUT
+
+  "//" ~[\n]* -> Comment
+  Comment -> LayoutChar
+
+lexical restrictions
+  LineBreak -/- [\ \t\n\r]
+  LineBreak -/- [\/].[\/]
+  Comment   -/- ~[\n]
+
+context-free restrictions
+  LAYOUT? -/- [\ \t\r]
+  LAYOUT? -/- [\/].[\/]

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/TemplateTest.tmpl
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/TemplateTest.tmpl	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,42 @@
+module TemplateTest
+
+imports
+  Common
+  Layout
+
+options
+  // When changing to leading or trailing, remove one "\n" separator below.
+  newlines : none // none, leading or trailing
+
+  // Absolute paths are relative to the project directory.
+  // Relative paths are relative to the directory of the current file.
+  str output : /trans/prettyprint.generated.str
+  esv output : /editor/TemplateTest-Completions.generated2.esv
+  sdf output : /syntax/TemplateTest.generated.def
+
+context-free start-symbols
+  Start
+
+templates
+
+  Start.Module = <<
+    module <modulename:ID>
+
+    <Definition*; separator="\n\n">
+  >>
+
+  Definition.Entity = <<
+    entity <ID> {
+      <Property*; separator="\n">
+    }
+  >>
+
+  Property.Property = [[
+    [x:ID] : [T:Type]
+  ]]
+
+  Type.Type = <<<Type:ID>>>
+
+lexical syntax
+
+  [A-Za-z][A-Za-z0-9]* -> ID

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/test/example.tmpl-test
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/test/example.tmpl-test	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,22 @@
+// Example "TemplateTest" program (see syntax/TemplateTest.sdf for the grammar)
+
+module example
+
+entity User {
+  name     : String
+  password : String
+  homepage : URL
+}
+
+entity BlogPosting {
+  poster : User
+  body   : String
+}
+
+entity URL {
+  location : String
+}
+
+entity Empty {
+
+}

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/trans/check.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/trans/check.str	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,51 @@
+module check
+
+imports
+  libstratego-lib
+  include/TemplateTest
+  lib/editor-common.generated
+
+rules
+
+  // Analysis: does a topdown traversal of the tree,
+  // and tries to apply the record-entity rule.
+  analyze:
+    t -> t
+    with
+      <topdown(try(record-entity))> t
+
+  // Records the definition of an entity in a dynamic rule GetEntity.
+  record-entity:
+    Entity(x, body) -> Entity(x, body)
+    with
+      // For a name 'x', GetEntity will return the original 'x' tree node
+      rules(
+        GetEntity :+ x -> x
+      )
+rules
+    
+  // Reports an error if a property type is undefined.
+  // This error is reported on the type name 'type'.
+  constraint-error:
+    Property(x, Type(type)) -> (type, $[Type [type] is not defined])
+    where
+      not(!type => "String"); // String and Int are built-in types
+      not(!type => "Int");
+      not(<GetEntity> type) // no entity for this type
+  
+  // Reports an error if an entity is defined more than once.
+  // This constraint is implemented by testing if the "bag" of
+  // all entities x is not a singleton list.
+  constraint-error:
+    Entity(x, _) -> (x, $[Duplicate entity name])
+    where
+      not(<bagof-GetEntity> x => [_])
+  
+  constraint-warning:
+    Entity(x, _) -> (x, $[Entity names must start with a capital])
+    where
+      not(<string-starts-with-capital> x)
+  
+  constraint-note:
+    Module(x @ "example", _) -> (x, $[This is just an example program in the "entities" language
+                                      (this note is defined in trans/check.str) ])

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/trans/generate.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/trans/generate.str	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,47 @@
+module generate
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/TemplateTest
+  lib/editor-common.generated
+
+rules
+
+  to-java:
+    Module(x, d*) ->
+    $[ package [x];
+       
+       [d'*]
+     ]
+    with
+      d'* := <to-java> d*
+  
+  to-java:
+    Entity(x, p*) ->
+    $[ class [x] {
+           [p'*]
+       }
+     ]
+    with
+      p'* := <to-java> p*
+
+  to-java:
+    Property(x, Type(t)) -> $[
+      private [t] [x];
+      
+      public [t] get_[x] {
+          return [x];
+      }
+      
+      public void set_[x] ([t] [x]) {
+          this.[x] = [x];    
+      }
+  ]
+  
+  to-java:
+    Type(t) -> t
+
+  to-java:
+    t* -> <map(to-java)> t*

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/trans/prettyprint.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/trans/prettyprint.generated.str	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,54 @@
+module prettyprint.generated
+imports
+  libstratego-lib
+
+strategies
+
+  pp-option(s) = \None() -> ""\ + \Some(t) -> <s> t\
+  pp-list(s|t) = map(s); separate-by(|t); concat-strings
+  pp-list(s)   = map(s); concat-strings
+
+  // ih = indent helper, t = indent string (including "\n")
+  pp-ih(|t) = "" <+ string-replace(|"\n", t); <conc-strings> (t, <id>)
+  pp-blank  = "" <+ <conc-strings> ("\n", <id>)
+
+strategies // TemplateTest
+
+  prettyprint-Start:
+    Module(ID77, Definition13) -> t
+    with
+      ID77' := <prettyprint-ID> ID77;
+      Definition13' := <pp-list(prettyprint-Definition|"\n\n")> Definition13;
+      t := <concat-strings> ["module ", ID77', "\n", <pp-blank> Definition13']
+  
+  prettyprint-Definition:
+    Entity(ID76, Property13) -> t
+    with
+      ID76' := <prettyprint-ID> ID76;
+      Property13' := <pp-list(prettyprint-Property|"\n")> Property13;
+      t := <concat-strings> ["entity ", ID76', " {", <pp-ih(|"\n  ")> Property13', "\n}"]
+  
+  prettyprint-Property:
+    Property(ID75, Type13) -> t
+    with
+      ID75' := <prettyprint-ID> ID75;
+      Type13' := <prettyprint-Type> Type13;
+      t := <concat-strings> [ID75', " : ", Type13']
+  
+  prettyprint-Type:
+    Type(ID74) -> t
+    with
+      ID74' := <prettyprint-ID> ID74;
+      t := <concat-strings> [ID74']
+
+strategies // Common
+
+  
+
+strategies // Layout
+
+  
+
+strategies // all other sorts used in placeholders
+
+  prettyprint-ID = is-string
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/trans/refactor.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/trans/refactor.str	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,21 @@
+module refactor
+
+imports
+  lib/refactor-common.generated
+  include/TemplateTest
+  lib/editor-common.generated  
+
+rules
+ 
+  rename-entity:
+    (selected-name, position, ast, path, project-path) -> [(ast, new-ast)]
+    with
+      new-name := <input-dialog> ("TemplateTest", "rename", "Rename entity:", ""); 
+      new-ast  := <topdown(try(rename-type(|selected-name, new-name)))> ast
+
+  rename-type(|old-name, new-name):
+    Entity(old-name, y) -> Entity(new-name, y)
+
+  rename-type(|old-name, new-name):
+    Type(old-name) -> Type(new-name)
+

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/trans/templatetest.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/trans/templatetest.str	Wed May  4 08:27:10 2011	(r22769)
@@ -0,0 +1,82 @@
+module templatetest
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/TemplateTest
+  lib/editor-common.generated
+  check
+  generate
+  refactor
+  prettyprint.generated
+
+signature
+  constructors
+    amb : List(X) -> X
+
+rules // Main editor interface (defined by editor/TemplateTest-Builders and -References.esv)
+
+  // See syntax/Layout.tmpl
+  editor-disambiguate:
+    (ast, path, project-path) -> <alltd(disambiguate)> ast
+
+  disambiguate:
+    amb([x, x]) -> x
+
+  // Analyzes the current program, returning a tuple with errors, warnings, and notes;
+  // each a list of (term, message) tuples or simply (message) terms.
+  editor-analyze:
+    (ast, path, project-path) -> (ast, errors, warnings, notes)
+    with
+      editor-init;
+      analyze;
+      errors   := <collect-all(constraint-error, conc)> ast;
+      warnings := <collect-all(constraint-warning, conc)> ast;
+      notes    := <collect-all(constraint-note, conc)> ast
+
+  // Transforms a selection to Java
+  generate-java:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"java")> path;
+      result   := <to-java> selected
+
+  // Prints the abstract syntax ATerm of a selection.
+  generate-aterm:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"aterm")> path;
+      result   := selected // we just return the input term
+
+  generate-pretty:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"pretty.tmpl-test")> path;
+      result   := <prettyprint> selected
+
+  prettyprint = prettyprint-Start <+ prettyprint-Definition <+ prettyprint-Property
+
+  // Resolves a reference when the user control-clicks or presses F3 in the editor.
+  // Only succeeds for nodes of the form Type(_) for which GetEntity is defined.
+  editor-resolve:
+    (node, position, ast, path, project-path) -> target
+    where
+      <debug(!"Resolve: ")> node;
+      Type(type) := node;
+      target     := <GetEntity> type
+
+  // Returns "hover help" information for a particular node in the editor.
+  // For references, this rule is invoked using the resolved term.
+  editor-hover:
+    (target, position, ast, path, project-path) -> $[Hover help: [<write-to-string> target]]
+
+  // Completes an identifier when the user presses control-space
+  // (the completion identifier in the AST provides additional context information)
+  editor-complete:
+    (node, position, ast, path, project-path) ->
+    ["String", "Int" | proposals]
+    where
+      if !node => Type(COMPLETION(prefix)) then
+        proposals := <all-keys-GetEntity>
+      end

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Wed May  4 08:21:57 2011	(r22768)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Wed May  4 08:27:10 2011	(r22769)
@@ -40,7 +40,7 @@
   <import file="build.generated.xml"/>
 
   <!-- Main target -->
-  <target name="all" depends="meta-sdf2table-stratego-esv,meta-sdf2table-stratego-sdf2,spoofaximp.default.jar" />
+  <target name="all" depends="spoofaximp.default.jar" />
 
   <!-- Target to create -Permissive grammar and parse table for Stratego-Sdf2.def -->
   <target name="meta-sdf2table-stratego-sdf2">

From tobivollebregt at gmail.com  Wed May  4 10:32:54 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 04 May 2011 08:32:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22770 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/trans
Message-ID: <20110504083254.90EC5108C002@mx3.tudelft.nl>

Author: tvo
Date: Wed May  4 08:32:53 2011
New Revision: 22770
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22770&sc=1

Log:
Remove generated file

Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/trans/prettyprint.generated.str

From m.dejonge at tudelft.nl  Wed May  4 14:55:51 2011
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Wed, 04 May 2011 12:55:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22771 - in
	spoofax/trunk/spoofax/org.spoofax.jsglr:
	test/org/spoofax/jsglr/tests tests tests/data
Message-ID: <20110504125551.494392B8029@mx2.tudelft.nl>

Author: MaartjeDeJonge
Date: Wed May  4 12:55:51 2011
New Revision: 22771
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22771&sc=1

Log:
testjes voor StrategoStratego gerelateerd aan sdf2parenthesize probleem:
- sso: JSGLR gives Var(t) instead of meta-var(t) [remark: problem does not occur in JSGLR before reject fix]
- ss1: sdf2parenthesize, meta-var probleem + imploder problems [remark: without reject fix the parsetree is ok but the imploded tree differs from C version]

Added:
   spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/TestStrategoStratego.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/ss0.strstr
   spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/ss1.strstr
Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/AllTests.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/tests/Makefile

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/AllTests.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/AllTests.java	Wed May  4 08:32:53 2011	(r22770)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/AllTests.java	Wed May  4 12:55:51 2011	(r22771)
@@ -28,6 +28,7 @@
         suite.addTestSuite(TestG1.class);
         suite.addTestSuite(TestG2.class);
         suite.addTestSuite(TestStratego.class);
+        suite.addTestSuite(TestStrategoStratego.class);
         suite.addTestSuite(TestJava.class);
         suite.addTestSuite(TestWebDSL.class);
         suite.addTestSuite(TestBooleans.class);

Added: spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/TestStrategoStratego.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/TestStrategoStratego.java	Wed May  4 12:55:51 2011	(r22771)
@@ -0,0 +1,42 @@
+/*
+ * Created on 05.des.2005
+ *
+ * Copyright (c) 2005, Karl Trygve Kalleberg <karltk near strategoxt.org>
+ *
+ * Licensed under the GNU Lesser General Public License, v2.1
+ */
+package org.spoofax.jsglr.tests;
+
+import java.io.FileNotFoundException;
+import java.io.IOException;
+
+import org.spoofax.jsglr.client.InvalidParseTableException;
+import org.spoofax.jsglr.client.ParserException;
+import org.spoofax.jsglr.client.imploder.TreeBuilder;
+
+public class TestStrategoStratego extends ParseTestCase {
+
+    @Override
+	public void gwtSetUp() throws ParserException, InvalidParseTableException {
+        super.gwtSetUp("StrategoStratego", "strstr");
+    }
+
+    public void testSS0() throws FileNotFoundException, IOException {
+        doParseTest("ss0");
+    }
+
+    public void testSS1() throws FileNotFoundException, IOException {
+        doParseTest("ss1");
+    }
+    
+    public void testSS0_Implode() throws FileNotFoundException, IOException {
+        sglr.setTreeBuilder(new TreeBuilder());
+        doParseTest("ss0");
+    }
+
+    public void testSS1_Implode() throws FileNotFoundException, IOException {
+        sglr.setTreeBuilder(new TreeBuilder());
+        doParseTest("ss1");
+    }
+
+}

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/tests/Makefile
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/tests/Makefile	Wed May  4 08:32:53 2011	(r22770)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/tests/Makefile	Wed May  4 12:55:51 2011	(r22771)
@@ -2,6 +2,7 @@
 AMB_FILES = $(wildcard data/amb*.txt)
 B_FILES = $(wildcard data/b*.txt)
 STR_FILES = $(wildcard data/*.str)
+STRSTR_FILES = $(wildcard data/*.strstr)
 JAVA_FILES = $(wildcard data/*.java)
 WEBDSL_FILES = $(wildcard data/*.app)
 TRM_FILES= \
@@ -9,6 +10,7 @@
 	$(patsubst %txt,%trm, $(AMB_FILES)) \
 	$(patsubst %txt,%trm, $(B_FILES)) \
 	$(patsubst %str,%trm, $(STR_FILES)) \
+	$(patsubst %strstr,%trm, $(STRSTR_FILES)) \
 	$(patsubst %java,%trm, $(JAVA_FILES)) \
 	$(patsubst %app,%trm, $(WEBDSL_FILES)) \
 	data/g-ambi-1.trm \
@@ -108,6 +110,9 @@
 data/%.trm : data/%.str
 	$(SGLR) $(SGLROPTS) -p grammars/Stratego.tbl -i $< -o $@
 
+data/%.trm : data/%.strstr
+	$(SGLR) $(SGLROPTS) -p grammars/StrategoStratego.tbl -i $< -o $@
+
 data/%.trm : data/%.app
 	$(SGLR) $(SGLROPTS) -p grammars/WebDSL.tbl -i $< -o $@
 
@@ -126,6 +131,10 @@
 
 grammars/Stratego.tbl:
 	cp $(HOME)/.nix-profile/share/sdf/stratego-front/Stratego.tbl grammars/Stratego.tbl
+
+grammars/StrategoStratego.tbl:
+	cp $(HOME)/.nix-profile/share/sdf/stratego-front/StrategoStratego.tbl grammars/StrategoStratego.tbl
+
 clean:
 	rm -f sglr-trace-* jsglr-trace-* trace-diff-*
 

Added: spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/ss0.strstr
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/ss0.strstr	Wed May  4 12:55:51 2011	(r22771)
@@ -0,0 +1,6 @@
+module meta_var
+
+strategies
+
+  generate-rule :
+    pos -> |[ l : t1 -> t2 where fail ]|

Added: spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/ss1.strstr
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/ss1.strstr	Wed May  4 12:55:51 2011	(r22771)
@@ -0,0 +1,261 @@
+/**
+ * Generates a Stratego module that puts Parenthetical constructors at
+ * the right places.
+ *
+ * @author  Martin Bravenboer <martin.bravenboer at gmail.com>
+ * @since   0.11
+ */
+module sdf2parenthesize
+imports
+  libstratego-lib
+  Stratego
+  libstratego-xtc
+  strategoxt-xtc-tools
+  ast-conflicts
+  sdf/tool/options
+  tool-doc
+
+strategies
+
+  main-sdf2parenthesize =
+    xtc-io-wrap(
+      parenthesize-options
+    , sdf2parenthesize-usage
+    , sdf2parenthesize-about
+    , ![]
+    , report-config
+      ; sdf2parenthesize <+ <xtc-exit> 1
+    )
+
+  sdf2parenthesize = 
+      xtc-transform(!"sdf2ast-conflicts", <conc> (<pass-verbose>, <pass-sdf-main-module>))
+    ; xtc-io-transform(core-sdf2parenthesize <+ log(|Error(), "rewriting failed. Please submit a bug report."); fail)
+    ; xtc-transform(!"pp-stratego", !["--abstract" | <pass-verbose>])
+
+strategies
+
+  core-sdf2parenthesize =
+      where(new-hashtable => tbl)
+    ; where(guess-rule-name => l)
+
+    ; map({sym1, sym2, pos:
+        ?SubtermConflict(sym1, pos, sym2)
+      ; <hashtable-push(|(sym1, pos), sym2)> tbl
+      })
+
+    ; <hashtable-keys> tbl
+    ; map(generate-rule(|l, tbl))
+
+    ; innermost-module
+
+  generate-rule(|l, tbl) :
+    (sym1, pos) -> |[ l : t1 -> t2 where <s> x ]|
+    where
+        <Symbol2Term> sym1 => t1
+      ; <Symbol2ParenTerm(|pos)> sym1 => t2
+      ; <index-to-subterm-id> pos => x
+
+      ; <hashtable-get(|(sym1, pos))> tbl
+      ; make-set
+      ; map(Symbol2Wld)
+      ; <foldl( \ (s1, s2) -> |[ s1 + s2 ]| \ )> (<id>, |[ fail ]|)
+      ; ?s
+
+strategies
+
+  /**
+   * @type  Int -> String
+   */
+  index-to-subterm-id =
+    <strcat> ("t_", <int-to-string>)
+
+  /**
+   * @type  Symbol -> StrategoStrategy
+   */
+  Symbol2Wld :
+    Symbol(x, arity) -> Strat |[ ?x(t* ) ]|
+      where <range> (0, arity); map(!Term |[ _ ]|) => t*
+
+  Symbol2Term :
+    Symbol(x, arity) -> Term |[ x(t* ) ]|
+    where <range> (0, arity)
+        ; map(
+            index-to-subterm-id
+          ; \ x -> Term |[ x ]| \
+          )
+        ; ?t*
+
+  Symbol2ParenTerm(|pos) :
+    Symbol(x, arity) -> Term |[ x(t* ) ]|
+    where <range> (0, arity)
+        ; map(
+            if ?pos then
+              index-to-subterm-id
+              ; \ x -> Term |[ Parenthetical(x) ]| \
+            else 
+              index-to-subterm-id
+              ; \ x -> Term |[ x ]| \
+            end
+          )
+        ; ?t*
+
+/**
+ * Produce a module
+ */
+strategies
+
+  innermost-module :
+    [] ->
+      |[ module M1
+         imports libstratego-lib
+         strategies
+
+           f =
+             io-wrap(id)
+      ]|
+    where
+        guess-module-name => M1
+      ; guess-main-strategy-name => f
+  
+  innermost-module :
+    rs@[_ | _] ->
+      |[ module M1
+         imports libstratego-lib M2
+         strategies
+
+           f =
+             io-wrap(g)
+
+           g =
+             innermost(l)
+
+         rules
+           ~*rs
+
+         signature
+           constructors
+             Parenthetical : Unknown -> Unknown
+      ]|
+    where
+        guess-module-name => M1
+      ; guess-signature-name => M2
+      ; guess-main-strategy-name => f
+      ; guess-language-name => lang
+      ; <conc-strings> ("parenthesize-", lang) => g
+      ; guess-rule-name => l
+
+/**
+ * Options
+*/
+strategies
+
+  parenthesize-options =
+    sdf-main-module-option
+  + stratego-module-option
+  + main-strategy-name-option
+  + signature-name-option
+  + language-name-option
+  + rule-prefix-option
+
+  report-config =
+      log(|Info(), <conc-strings> ("SDF main module is ", <get-sdf-main-module>))
+    ; log(|Info(), <conc-strings> ("Name of output module is ", <guess-module-name>))
+    ; log(|Info(), <conc-strings> ("Main strategy is ", <guess-main-strategy-name>))
+    ; log(|Info(), <conc-strings> ("Name of signature module is ", <guess-signature-name>))
+    ; log(|Info(), <conc-strings> ("Language name is ", <guess-language-name>))
+    ; log(|Info(), <conc-strings> ("Name of parenthesize rules is ", <guess-rule-name>))
+
+strategies
+
+  stratego-module-option =
+    ArgOption("--omod"
+    , ?s; rules(ModuleName : _ -> s)
+    , !HelpString("--omod <module>", "Name of the resulting Stratego module [basename of output]")
+    )
+
+  guess-module-name =
+    ModuleName
+    <+ <get-config; remove-extension> "-o"
+    <+ log(|Critical(), "No Stratego module name specified. Use the --omod option to specify a module name. See also --help.")
+       ; <exit> 1
+
+strategies
+
+  main-strategy-name-option =
+    ArgOption("--main-strategy"
+    , ?s; rules(MainStrategyName : _ -> s)
+    , !HelpString("--main-strategy <strategy>", "Name of the main strategy [io-<module>])")
+    )
+
+  guess-main-strategy-name =
+    MainStrategyName
+    <+ guess-module-name => M1
+      ; <conc-strings> ("io-", M1) => f
+
+strategies
+
+  signature-name-option =
+    ArgOption("--sig-module"
+    , ?s; rules(SignatureName : _ -> s)
+    , !HelpString("--sig-module <module>", "Stratego module that contains signature for the language [<language>]")
+    )
+
+  guess-signature-name =
+    SignatureName
+    <+ guess-language-name
+
+strategies
+
+  language-name-option =
+    ArgOption("--lang"
+    , ?s; rules(LanguageName : _ -> s)
+    , !HelpString("--lang <language>", "Name of the language [basename of input file]")
+    )
+
+  guess-language-name =
+    LanguageName
+    <+ <get-config; remove-extension> "-i"
+    <+ log(|Critical(), "No language name specified. You must specify the name of the language with --lang. See also --help.")
+       ; <exit> 1
+
+strategies
+
+  rule-prefix-option =
+    ArgOption("--rule-prefix"
+    , ?s; rules(RulePrefix : _ -> s)
+    , !HelpString("--rule-prefix <string>", "Prefix to use for the parenthesize rules [<language>]")
+    )
+
+  guess-rule-name =
+    (RulePrefix <+ guess-language-name)
+    ; <conc-strings> (<id>, "Parenthesize") => l
+
+/**
+ * Documentation
+ */
+strategies
+
+  sdf2parenthesize-usage =
+    <tool-doc>
+      [ Usage("sdf2parenthesize [OPTIONS]")
+      , Summary("Generates a Stratego module that puts Parenthetical constructors at the right places.")
+      , OptionUsage()
+      , AutoReportBugs()
+      ]
+
+  sdf2parenthesize-about =
+    <tool-doc>
+      [ HSection("sdfparenthesize", [
+          DefList([
+            Def("Package",  Paragraph(<package-name> ()))
+          , Def("Version",  Paragraph(<package-version> ()))
+          , Def("Revision", Paragraph(<prim("SVN_REVISION_TERM")> ()))
+          ])
+        ])
+      , Author(Person("Martin Bravenboer", "martin.bravenboer at gmail.com"))
+      , GNU_LGPL("2004-2008", "Stratego Software Foundation <stratego at cs.uu.nl>")
+      , Config([
+          DefaultXTCRepository()
+        , CurrentXTCRepository()
+        ])
+      ]

From m.dejonge at tudelft.nl  Wed May  4 16:20:38 2011
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Wed, 04 May 2011 14:20:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22772 - in
	spoofax/trunk/spoofax/org.spoofax.jsglr:
	src/org/spoofax/jsglr/client test/org/spoofax/jsglr/tests
	tests tests/data tests/grammars tests/grammars/basic
Message-ID: <20110504142038.4F1817F8012@mx1.tudelft.nl>

Author: MaartjeDeJonge
Date: Wed May  4 14:20:38 2011
New Revision: 22772
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22772&sc=1

Log:
- testcase added: spx.config
- undone reject fix: parsing spx.config succeeded

Added:
   spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/TestSpoofaxConfiguration.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/spoofax0.config
   spoofax/trunk/spoofax/org.spoofax.jsglr/tests/grammars/basic/Common.sdf
   spoofax/trunk/spoofax/org.spoofax.jsglr/tests/grammars/basic/SpoofaxConfiguration.sdf
Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/SGLR.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/AllTests.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/tests/Makefile
   spoofax/trunk/spoofax/org.spoofax.jsglr/tests/grammars/Makefile

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/SGLR.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/SGLR.java	Wed May  4 12:55:51 2011	(r22771)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/SGLR.java	Wed May  4 14:20:38 2011	(r22772)
@@ -650,7 +650,8 @@
 				logAmbiguity(st0, prod, st1, nl);
 				if (prod.isRejectProduction()) {
 					nl.reject();
-				} else if(numberOfRecoveries == 0 && nl.recoverCount == 0 || nl.isRejected()) {
+				} 
+				if(numberOfRecoveries == 0 && nl.recoverCount == 0 || nl.isRejected()) {
 					createAmbNode(t, nl);
 				} else if (numberOfRecoveries < nl.recoverCount) {
 					nl.label = t;

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/AllTests.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/AllTests.java	Wed May  4 12:55:51 2011	(r22771)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/AllTests.java	Wed May  4 14:20:38 2011	(r22772)
@@ -29,6 +29,7 @@
         suite.addTestSuite(TestG2.class);
         suite.addTestSuite(TestStratego.class);
         suite.addTestSuite(TestStrategoStratego.class);
+        suite.addTestSuite(TestSpoofaxConfiguration.class);
         suite.addTestSuite(TestJava.class);
         suite.addTestSuite(TestWebDSL.class);
         suite.addTestSuite(TestBooleans.class);

Added: spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/TestSpoofaxConfiguration.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/TestSpoofaxConfiguration.java	Wed May  4 14:20:38 2011	(r22772)
@@ -0,0 +1,32 @@
+/*
+ * Created on 05.des.2005
+ *
+ * Copyright (c) 2005, Karl Trygve Kalleberg <karltk near strategoxt.org>
+ *
+ * Licensed under the GNU Lesser General Public License, v2.1
+ */
+package org.spoofax.jsglr.tests;
+
+import java.io.FileNotFoundException;
+import java.io.IOException;
+
+import org.spoofax.jsglr.client.InvalidParseTableException;
+import org.spoofax.jsglr.client.ParserException;
+import org.spoofax.jsglr.client.imploder.TreeBuilder;
+
+public class TestSpoofaxConfiguration extends ParseTestCase {
+
+    @Override
+	public void gwtSetUp() throws ParserException, InvalidParseTableException {
+        super.gwtSetUp("SpoofaxConfiguration", "config");
+    }
+
+    public void testSS0() throws FileNotFoundException, IOException {
+        doParseTest("spoofax0");
+    }
+    
+    public void testSS0_Implode() throws FileNotFoundException, IOException {
+        sglr.setTreeBuilder(new TreeBuilder());
+        doParseTest("spoofax0");
+    }
+}

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/tests/Makefile
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/tests/Makefile	Wed May  4 12:55:51 2011	(r22771)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/tests/Makefile	Wed May  4 14:20:38 2011	(r22772)
@@ -1,5 +1,6 @@
 JSQL_FILES = $(wildcard data/jsql*.txt)
 AMB_FILES = $(wildcard data/amb*.txt)
+SPOO_FILES = $(wildcard data/*.config)
 B_FILES = $(wildcard data/b*.txt)
 STR_FILES = $(wildcard data/*.str)
 STRSTR_FILES = $(wildcard data/*.strstr)
@@ -8,6 +9,7 @@
 TRM_FILES= \
 	$(patsubst %txt,%trm, $(JSQL_FILES)) \
 	$(patsubst %txt,%trm, $(AMB_FILES)) \
+	$(patsubst %config,%trm, $(SPOO_FILES)) \
 	$(patsubst %txt,%trm, $(B_FILES)) \
 	$(patsubst %str,%trm, $(STR_FILES)) \
 	$(patsubst %strstr,%trm, $(STRSTR_FILES)) \
@@ -101,6 +103,9 @@
 data/amb%.trm : data/amb%.txt
 	$(SGLR) $(SGLROPTS) -p grammars/SmallAmbLang.tbl -i $< -o $@
 
+data/%.trm : data/%.config
+	$(SGLR) $(SGLROPTS) -p grammars/SpoofaxConfiguration.tbl -i $< -o $@
+
 data/b%.trm : data/b%.txt
 	$(SGLR) $(SGLROPTS) -p grammars/Booleans.tbl -i $< -o $@
 

Added: spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/spoofax0.config
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/spoofax0.config	Wed May  4 14:20:38 2011	(r22772)
@@ -0,0 +1,8 @@
+Configuration
+	Includes
+		RootDirectory
+				syntax // specify relative path of local source directories
+		AllDirectories
+	
+	CodeGeneration 
+		OutputDirectory		.shadowdir
\ No newline at end of file

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/tests/grammars/Makefile
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/tests/grammars/Makefile	Wed May  4 12:55:51 2011	(r22771)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/tests/grammars/Makefile	Wed May  4 14:20:38 2011	(r22772)
@@ -1,9 +1,11 @@
 GRAMMARS =							\
 	Booleans.tbl						\
 	Stratego.tbl						\
+	StrategoStratego.tbl						\
 	Java-15.tbl						\
 	WebDSL.tbl						\
 	SmallAmbLang.tbl                \
+	SpoofaxConfiguration.tbl                \
 	$(patsubst basic/%.sdf,%.tbl,$(wildcard basic/*.sdf))
 
 #	Java-SQL.tbl						

Added: spoofax/trunk/spoofax/org.spoofax.jsglr/tests/grammars/basic/Common.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/tests/grammars/basic/Common.sdf	Wed May  4 14:20:38 2011	(r22772)
@@ -0,0 +1,46 @@
+module Common
+
+exports
+
+  lexical syntax
+  
+    [a-zA-Z][a-zA-Z0-9]* -> ID
+    "-"? [0-9]+          -> INT
+    
+    "\"" StringChar* "\"" -> STRING
+    ~[\"\n]               -> StringChar
+    "\\\""                -> StringChar
+    BackSlashChar         -> StringChar
+    "\\"                  -> BackSlashChar
+    
+    [\ \t\n\r] -> LAYOUT
+    
+    [\*]                             -> CommentChar
+    "/*" (~[\*] | CommentChar)* "*/" -> LAYOUT
+    "//" ~[\n\r]* ([\n\r] | EOF)     -> LAYOUT
+    
+    -> EOF
+  
+  lexical restrictions
+  
+    %% Ensure greedy matching for lexicals
+  
+    CommentChar   -/- [\/]
+    INT           -/- [0-9]
+    ID            -/- [a-zA-Z0-9\_]
+    
+    %% EOF may not be followed by any char
+    
+    EOF           -/- ~[]
+
+    %% Backslash chars in strings may not be followed by " 
+    
+    BackSlashChar -/- [\"]
+
+  context-free restrictions
+  
+    %% Ensure greedy matching for comments
+
+    LAYOUT? -/- [\ \t\n\r]
+    LAYOUT? -/- [\/].[\/]
+    LAYOUT? -/- [\/].[\*]

Added: spoofax/trunk/spoofax/org.spoofax.jsglr/tests/grammars/basic/SpoofaxConfiguration.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/tests/grammars/basic/SpoofaxConfiguration.sdf	Wed May  4 14:20:38 2011	(r22772)
@@ -0,0 +1,103 @@
+%% Grammar for the SpoofaxConfiguration language
+%% By default, based on an example "entities" syntax
+module SpoofaxConfiguration
+
+exports
+
+  	context-free start-symbols
+    	Start
+
+  	context-free syntax
+  
+	    "Configuration"  ConfigSection*         -> Start {cons("Configuration")}
+	    
+	    "Includes" IncludeDefinition*    				-> ConfigSection{cons("Includes")}
+	     IncludeOption RelativePath*						-> IncludeDefinition {cons("Sources")}
+	    "SpxProjects" AbsolutePath* 						-> IncludeDefinition {cons("SpxProjects")}
+	    	
+	    
+	    "CodeGeneration" CodeGenDefinition*     -> ConfigSection{cons("CodeGeneration")}
+	    "OutputDirectory"  RelativePath				    -> CodeGenDefinition {cons("OutputDirectory")}
+	    
+	    "AllDirectories"												->   IncludeOption{cons("AllDirectories")}
+	    "RootDirectory"												  ->   IncludeOption{cons("RootDirectory")}
+
+	lexical syntax 
+		%%STRING -> RelativePath
+		PathChar                                   	-> RelativePath
+		PathChar (PathChar | Slash)* PathChar       -> RelativePath
+		[A-Za-z0-9\_\-\.\+]                         -> PathChar
+		"/"                                         -> Slash
+    Slash RelativePath				                  -> AbsolutePath
+		[a-zA-Z]":" Slash RelativePath              -> AbsolutePath
+		".." Slash RelativePath                     -> AbsolutePath{prefer}
+		
+	lexical syntax     
+    
+    "SpxProjects"        			  -> Reserved
+    "Sources"          					-> Reserved
+    "SpxSources"        		    -> Reserved
+    "Configuration"     		   	-> Reserved
+    "Includes"        					-> Reserved		
+    "AllDirectories"   					-> Reserved		
+    "CodeGeneration"            -> Reserved   
+    "RootDirectory" 				  -> Reserved		
+   
+    Reserved -> RelativePath{reject}
+	    
+	    
+	lexical restrictions
+	  Slash        -/- [\/]
+		RelativePath -/- [A-Za-z0-9\_\-\/\.\+]
+			
+		"SpxProjects" 
+		"Sources" 
+		"SpxSources"
+		"Configuration" 
+    "CodeGeneration" 
+		"Includes"
+		"AllDirectories"
+		"RootDirectory" -/- [A-Za-z0-9\_]
+		
+  lexical syntax
+  
+    [a-zA-Z][a-zA-Z0-9]* -> ID
+    "-"? [0-9]+          -> INT
+    
+    "\"" StringChar* "\"" -> STRING
+    ~[\"\n]               -> StringChar
+    "\\\""                -> StringChar
+    BackSlashChar         -> StringChar
+    "\\"                  -> BackSlashChar
+    
+    [\ \t\n\r] -> LAYOUT
+    
+    [\*]                             -> CommentChar
+    "/*" (~[\*] | CommentChar)* "*/" -> LAYOUT
+    "//" ~[\n\r]* ([\n\r] | EOF)     -> LAYOUT
+    
+    -> EOF
+  
+  lexical restrictions
+  
+    %% Ensure greedy matching for lexicals
+  
+    CommentChar   -/- [\/]
+    INT           -/- [0-9]
+    ID            -/- [a-zA-Z0-9\_]
+    
+    %% EOF may not be followed by any char
+    
+    EOF           -/- ~[]
+
+    %% Backslash chars in strings may not be followed by " 
+    
+    BackSlashChar -/- [\"]
+
+  context-free restrictions
+  
+    %% Ensure greedy matching for comments
+
+    LAYOUT? -/- [\ \t\n\r]
+    LAYOUT? -/- [\/].[\/]
+    LAYOUT? -/- [\/].[\*]

From m.dejonge at tudelft.nl  Wed May  4 17:37:31 2011
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Wed, 04 May 2011 15:37:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22773 - in
	spoofax/trunk/spoofax/org.spoofax.jsglr:
	test/org/spoofax/jsglr/tests tests/data
Message-ID: <20110504153731.138BACC10A@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Wed May  4 15:37:30 2011
New Revision: 22773
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22773&sc=1

Log:
unit testjes for meta-varlist imploder problem (parsetree ok, imploder result not ok)

Added:
   spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/ss2.strstr
   spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/ss3.strstr
Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/TestStrategoStratego.java

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/TestStrategoStratego.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/TestStrategoStratego.java	Wed May  4 14:20:38 2011	(r22772)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/TestStrategoStratego.java	Wed May  4 15:37:30 2011	(r22773)
@@ -28,7 +28,15 @@
     public void testSS1() throws FileNotFoundException, IOException {
         doParseTest("ss1");
     }
-    
+ 
+    public void testSS2() throws FileNotFoundException, IOException {
+        doParseTest("ss2");
+    }
+
+    public void testSS3() throws FileNotFoundException, IOException {
+        doParseTest("ss3");
+    }
+
     public void testSS0_Implode() throws FileNotFoundException, IOException {
         sglr.setTreeBuilder(new TreeBuilder());
         doParseTest("ss0");
@@ -39,4 +47,14 @@
         doParseTest("ss1");
     }
 
+    public void testSS2_Implode() throws FileNotFoundException, IOException {
+        sglr.setTreeBuilder(new TreeBuilder());
+        doParseTest("ss2");
+    }
+
+    public void testSS3_Implode() throws FileNotFoundException, IOException {
+        sglr.setTreeBuilder(new TreeBuilder());
+        doParseTest("ss3");
+    }
+
 }

Added: spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/ss2.strstr
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/ss2.strstr	Wed May  4 15:37:30 2011	(r22773)
@@ -0,0 +1,5 @@
+module metavar-list
+
+strategies
+
+  r : a -> Strat |[ ?(t* ) ]| 

Added: spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/ss3.strstr
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/tests/data/ss3.strstr	Wed May  4 15:37:30 2011	(r22773)
@@ -0,0 +1,10 @@
+module sdf2parenthesize
+
+strategies
+
+  r :
+    a ->
+      |[ 
+         rules
+           ~*rs
+      ]|
\ No newline at end of file

From tobivollebregt at gmail.com  Thu May  5 13:27:02 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Thu, 05 May 2011 11:27:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22774 - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime: .
	src/org/strategoxt/imp/runtime/services test test/org
	test/org/strategoxt test/org/strategoxt/imp test/org/strat...
Message-ID: <20110505112702.92E602B8082@mx2.tudelft.nl>

Author: tvo
Date: Thu May  5 11:27:02 2011
New Revision: 22774
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22774&sc=1

Log:
Fix completion + added some completion unit tests to runtime

(All proposals were always displayed)

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/test/
   spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/
   spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/
   spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/imp/
   spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/imp/runtime/
   spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/imp/runtime/services/
   spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/imp/runtime/services/TestFilterCompletions.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/Completion.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/.classpath
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/.classpath	Wed May  4 15:37:30 2011	(r22773)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/.classpath	Thu May  5 11:27:02 2011	(r22774)
@@ -1,7 +1,8 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
-	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
-	<classpathentry kind="src" path="src"/>
-	<classpathentry kind="output" path="bin"/>
-</classpath>
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="src" path="test"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/Completion.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/Completion.java	Wed May  4 15:37:30 2011	(r22773)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/Completion.java	Thu May  5 11:27:02 2011	(r22774)
@@ -32,12 +32,29 @@
 		return new Completion(literal, null, null, KEYWORD, null, keywordColor);
 	}
 
+	// for testing
+	static Completion makeTemplate(String prefix, String sort) {
+		return new Completion(prefix, sort, null, TEMPLATE, null, keywordColor);
+	}
+
+	// for testing
+	static Completion makeTemplate(String prefix, String sort, boolean blankLineRequired) {
+		int flags = TEMPLATE;
+		if (blankLineRequired) flags |= BLANK_LINE_REQUIRED;
+		return new Completion(prefix, sort, null, flags, null, keywordColor);
+	}
+
 	public static Completion makeTemplate(String prefix, String sort, IStrategoList completionParts, boolean blankLineRequired, boolean linkPlaceholders) {
 		int flags = TEMPLATE;
 		if (blankLineRequired) flags |= BLANK_LINE_REQUIRED;
 		if (linkPlaceholders)  flags |= LINK_PLACEHOLDERS;
 		return new Completion(prefix, sort, completionParts, flags, null, keywordColor);
 	}
+	
+	// for testing
+	static Completion makeSemantic(String prefix, String description) {
+		return new Completion(prefix, null, null, SEMANTIC, description, null);
+	}
 
 	public static Completion makeSemantic(IStrategoList completionParts, String description) {
 		final String prefix = ((IStrategoString) completionParts.head()).stringValue();

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Wed May  4 15:37:30 2011	(r22773)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Thu May  5 11:27:02 2011	(r22774)
@@ -14,7 +14,6 @@
 import java.util.HashSet;
 import java.util.Random;
 import java.util.Set;
-import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
 import org.eclipse.core.runtime.NullProgressMonitor;
@@ -218,7 +217,10 @@
 		// static blueprints, i.e. keywords and templates
 		results.addAll(templates);
 
-		return filterCompletions(results, document, prefix, offset, sorts, viewer);
+		Point selection = viewer.getSelectedRange();
+		Position offsetPosition = new Position(selection.x, selection.y);
+
+		return filterCompletions(results, document, prefix, offsetPosition, sorts, viewer);
 	}
 
 	private Set<Completion> toCompletions(IStrategoTerm proposals, String document, String prefix, int offset, Set<String> sorts) {
@@ -289,34 +291,32 @@
 		return resultArray;
 	}
 
-	private ICompletionProposal[] filterCompletions(Set<Completion> completions, String document, String prefix,
-			int offset, Set<String> sorts, ITextViewer viewer) {
+	ICompletionProposal[] filterCompletions(Set<Completion> completions, String document, String prefix,
+			Position offsetPosition, Set<String> sorts, ITextViewer viewer) {
 
 		final Set<ICompletionProposal> results = new HashSet<ICompletionProposal>();
-		final Point selection = viewer.getSelectedRange();
-		final Position offsetPosition = new Position(selection.x, selection.y);
+		final int offset = offsetPosition.getOffset();
 		boolean backTrackResultsOnly = false;
 
-		assert offset == offsetPosition.getOffset();
-
 		for (Completion proposal : completions) {
 			String proposalPrefix = proposal.getPrefix();
 			if (proposal.getSort() != null && !sorts.contains(proposal.getSort()))
 				continue;
 			if (!backTrackResultsOnly && proposalPrefix.regionMatches(IGNORE_TEMPLATE_PREFIX_CASE, 0, prefix, 0, prefix.length())) {
 				if (!proposal.isBlankLineRequired() || isBlankBeforeOffset(document, offset - prefix.length()))
-					if (proposal.isSemantic() || prefix.length() > 0 || identifierLexical.matcher(proposalPrefix).lookingAt() || proposalPrefix.length() == 0)
+					if (proposal.isSemantic() || prefix.length() > 0 || proposalPrefix.length() == 0 || identifierLexical.matcher(proposalPrefix).lookingAt())
 						results.add(new ContentProposal(this, proposal, prefix, offsetPosition, viewer));
-			} /*else*/ {
+			}
+			if (prefix.length() == 0) {
 				// find longest match of proposal in document
-				for (int i = proposalPrefix.length() - 1; i >= 0; i--)
+				for (int i = proposalPrefix.length() - 1; i > 0; i--) {
 					if (document.regionMatches(true, offset - i, proposalPrefix, 0, i)) {
 						if (!backTrackResultsOnly) results.clear();
 						backTrackResultsOnly = true;
 						results.add(new ContentProposal(this, proposal, proposalPrefix.substring(0, i), offsetPosition, viewer));
 						break;
 					}
-				
+				}
 //				Matcher matcher = identifierLexical.matcher(proposalPrefix);
 //				if (matcher.find() && (matcher.start() > 0 || matcher.end() < proposalPrefix.length())) {
 //					// Handle completion literals with special characters, like "(disabled)"

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/imp/runtime/services/TestFilterCompletions.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/imp/runtime/services/TestFilterCompletions.java	Thu May  5 11:27:02 2011	(r22774)
@@ -0,0 +1,126 @@
+package org.strategoxt.imp.runtime.services;
+
+import static org.junit.Assert.*;
+
+import java.util.Collections;
+import java.util.HashSet;
+import java.util.Set;
+import java.util.regex.Pattern;
+
+import org.eclipse.jface.text.Position;
+import org.eclipse.jface.text.contentassist.ICompletionProposal;
+import org.junit.Before;
+import org.junit.Test;
+
+/**
+ * Unit tests for the ContentProposer.filterCompletions method.
+ *
+ * @author Tobi Vollebregt
+ */
+public class TestFilterCompletions {
+
+	static final Pattern identifierLexical = Pattern.compile("[A-Za-z][A-Za-z0-9]*"); 
+
+	static final Set<String> noSorts = Collections.emptySet();
+
+	ContentProposer cp;
+	Set<Completion> completions;
+	ICompletionProposal[] results;
+
+	@Before
+	public void setUp() throws Exception {
+		cp = new ContentProposer(null, null, identifierLexical, null);
+		completions = new HashSet<Completion>();
+		results = null;
+	}
+
+	/**
+	 * @param document The document as it is when completion is triggered
+	 * @param prefix   This should be the identifier up to offset in document 
+	 * @param offset   Offset in document at which completion is triggered
+	 * @param length   Length of the selection
+	 * @param sorts    Sorts allowed at this position 
+	 */
+	void filterCompletions(String document, String prefix, int offset, int length, Set<String> sorts) {
+		results = cp.filterCompletions(completions, document, prefix, new Position(offset, length), sorts, null);
+	}
+
+	@Test
+	public void testNoCompletionsNoPrefix() {
+		filterCompletions("", "", 0, 0, noSorts);
+		assertEquals(0, results.length);
+	}
+
+	@Test
+	public void testAllCompletionsNoPrefix() {
+		completions.add(Completion.makeTemplate("foo", null));
+		completions.add(Completion.makeTemplate("bar", null));
+		filterCompletions("", "", 0, 0, noSorts);
+		assertEquals(2, results.length);
+	}
+	
+	@Test
+	public void testPrefix() {
+		completions.add(Completion.makeTemplate("foo", null));
+		completions.add(Completion.makeTemplate("oof", null));
+		filterCompletions("fo", "fo", 2, 0, noSorts);
+		assertEquals(1, results.length);
+		assertEquals("foo", results[0].getDisplayString());
+	}
+
+	@Test
+	public void testSelectedPrefix() {
+		completions.add(Completion.makeTemplate("foo", null));
+		completions.add(Completion.makeTemplate("oof", null));
+		filterCompletions("fo", "fo", 0, 2, noSorts);
+		assertEquals(1, results.length);
+		assertEquals("foo", results[0].getDisplayString());	
+	}
+	
+	@Test
+	public void testNonIdentifier() {
+		completions.add(Completion.makeTemplate(", avoid", null));
+		filterCompletions("", "", 0, 0, noSorts);
+		assertEquals(0, results.length);
+	}
+	
+	@Test
+	public void testNonIdentifierPrefix() {
+		completions.add(Completion.makeTemplate(", avoid", null));
+		filterCompletions(", ", ", ", 1, 0, noSorts);
+		assertEquals(1, results.length);
+	}
+
+	@Test
+	public void testNonIdentifierLongPrefix() {
+		completions.add(Completion.makeTemplate("<?= foo", null));
+		filterCompletions("<?=", "", 2, 0, noSorts);
+		assertEquals(1, results.length);
+	}
+
+	@Test
+	public void testNonIdentifierSemanticProposal() {
+		completions.add(Completion.makeSemantic("\"aaa\"", null));
+		filterCompletions("", "", 0, 0, noSorts);
+		assertEquals(1, results.length);
+	}
+	
+	@Test
+	public void testNonIdentifierSemanticProposalPrefix() {
+		completions.add(Completion.makeSemantic("\"aaa\"", null));
+		filterCompletions("\"a", "\"a", 0, 0, noSorts);
+		assertEquals(1, results.length);
+	}
+	
+	@Test
+	public void testFilterSorts() {
+		completions.add(Completion.makeTemplate("foo", "Foo"));
+		filterCompletions("", "", 0, 0, noSorts);
+		assertEquals(0, results.length);
+
+		Set<String> sorts = new HashSet<String>();
+		sorts.add("Foo");
+		filterCompletions("", "", 0, 0, sorts);
+		assertEquals(1, results.length);
+	}
+}

From m.dejonge at tudelft.nl  Thu May  5 17:19:19 2011
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 05 May 2011 15:19:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22775 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax
Message-ID: <20110505151919.57C47CC05A@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu May  5 15:19:19 2011
New Revision: 22775
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22775&sc=1

Log:
BugFix ambiguiteit (unmanaged is seen as a start symbol):

module Stratego-Sugar.main

language General properties
                  
  start symbols : Module
  unmanaged table : Stratego*

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/LanguageDescription.sdf

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/LanguageDescription.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/LanguageDescription.sdf	Thu May  5 11:27:02 2011	(r22774)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/LanguageDescription.sdf	Thu May  5 15:19:19 2011	(r22775)
@@ -70,4 +70,5 @@
      "fences"     -> PropertyValue {reject}
      "line"       -> PropertyValue {reject}
      "block"      -> PropertyValue {reject}
+     "unmanaged"  -> Sort {reject}
      

From m.dejonge at tudelft.nl  Thu May  5 18:03:05 2011
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 05 May 2011 16:03:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22776 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
Message-ID: <20110505160305.84330CC114@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu May  5 16:03:05 2011
New Revision: 22776
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22776&sc=1

Log:
selecting identifier gave parent node

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java	Thu May  5 15:19:19 2011	(r22775)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java	Thu May  5 16:03:05 2011	(r22776)
@@ -203,7 +203,7 @@
 			return null;
 		
 		IToken start = getParseController().getTokenIterator(new Region(selection.x, 0), true).next();
-		IToken end = getParseController().getTokenIterator(new Region(selection.x + selection.y, 0), true).next();
+		IToken end = getParseController().getTokenIterator(new Region(selection.x + selection.y-1, 0), true).next();
 		
 		ITokenizer tokens = start.getTokenizer();
 		int layout = IToken.TK_LAYOUT;

From m.dejonge at tudelft.nl  Thu May  5 18:06:55 2011
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 05 May 2011 16:06:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22777 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
Message-ID: <20110505160655.7AFB77F8004@mx1.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu May  5 16:06:55 2011
New Revision: 22777
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22777&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java	Thu May  5 16:03:05 2011	(r22776)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java	Thu May  5 16:06:55 2011	(r22777)
@@ -6,9 +6,7 @@
 import org.eclipse.imp.language.Language;
 import org.eclipse.imp.model.ISourceProject;
 import org.eclipse.imp.parser.IParseController;
-import org.eclipse.jface.text.BadLocationException;
 import org.eclipse.jface.text.IDocument;
-import org.eclipse.jface.text.IRegion;
 import org.eclipse.jface.text.Region;
 import org.eclipse.swt.graphics.Point;
 import org.eclipse.swt.widgets.Display;
@@ -203,7 +201,7 @@
 			return null;
 		
 		IToken start = getParseController().getTokenIterator(new Region(selection.x, 0), true).next();
-		IToken end = getParseController().getTokenIterator(new Region(selection.x + selection.y-1, 0), true).next();
+		IToken end = getParseController().getTokenIterator(new Region(selection.x + Math.max(0, selection.y-1), 0), true).next();
 		
 		ITokenizer tokens = start.getTokenizer();
 		int layout = IToken.TK_LAYOUT;

From m.dejonge at tudelft.nl  Thu May  5 18:25:06 2011
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 05 May 2011 16:25:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22778 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans
Message-ID: <20110505162506.0E5472B8008@mx2.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu May  5 16:25:05 2011
New Revision: 22778
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22778&sc=1

Log:
Dyn rules are not declared in declare-global

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/rename.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/rename.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/rename.str	Thu May  5 16:06:55 2011	(r22777)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/rename.str	Thu May  5 16:25:05 2011	(r22778)
@@ -42,10 +42,10 @@
 precondition-error(|ref-name):
 	asts -> ([$[Declaration can not be found in [<project-path>]/trans]],[])
 	where
-	  <?_{ref}> ref-name;
-	  <is-global-ref> ref;
-	  dec_sig := <Declaration; signature-of> ref;
-	  <not(oncetd(where(declare-globals); topdown(strip-annos); signature-of; equal(|dec_sig)))> asts
+	  <?_{ref}> ref-name; 
+	  <is-global-ref> ref; 
+	  decl := <Declaration> ref; 
+	  <not(topdown(strip-annos); oncetd(equal(|decl)))> asts
 
 rules //name analysis
     

From M.A.Akhter at student.tudelft.nl  Thu May  5 23:20:45 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 05 May 2011 21:20:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22779 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen
Message-ID: <20110505212045.B403E108C016@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Thu May  5 21:20:45 2011
New Revision: 22779
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22779&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str	Thu May  5 16:25:05 2011	(r22778)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str	Thu May  5 21:20:45 2011	(r22779)
@@ -14,7 +14,7 @@
 	context/scope-tree
 	context/signature 
 	normalize/signatures  
-	include/spoofaxlang 
+	include/spoofaxlang
 	utils/path
 imports 	
 	libstratego-gpp
@@ -36,7 +36,7 @@
 				//<override-configured-source-directories><abspath>arg;
 				<show-configuration;debug>();     //show configuration for this spx project
 				<build-all>();                     //building all the spx files in the sources directory
-				<debug>$["-----------Build-all succeeds-----------------"];
+				<debug>$[".................Build-all succeeds................."];
 				!FILE($[[input]/.shadowdir/Globals/Signatures.str])	 //HACK : just to ensure this strategy is not failing ...
 			<+
 				prim("SSL_stacktrace_get_all_frame_names") ; report-failure
@@ -52,7 +52,7 @@
 	build-all:
 		(selected, position, ast, path, project-path) -> None()
 		where
-			debug(!"=============starting compile-all ===================")
+			<debug>$[.................starting compile + build all ..........................]
 		with 
 			editor-init
 		 ;rules(ProjectPath := project-path)
@@ -64,8 +64,6 @@
 	//Intregation Test of the compile-all is working as expected 
 	compile-spx:
 		(selected, position, ast, path, project-path) -> None()
-		where
-			debug(!"=============starting compile-all ===================")
 		with 
 			editor-init;
 		  initialize-configuration
@@ -74,5 +72,5 @@
 		with
 			rules(ProjectPath := project-path)
 		with 
-			debug(!"=============starting compile-all ===================");
+			<debug>$[.................starting compile-all ..........................];
 			<compile-all>()

From M.A.Akhter at student.tudelft.nl  Thu May  5 23:35:11 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 05 May 2011 21:35:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22780 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen
Message-ID: <20110505213511.A4AA4CC049@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Thu May  5 21:35:11 2011
New Revision: 22780
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22780&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Thu May  5 21:20:45 2011	(r22779)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Thu May  5 21:35:11 2011	(r22780)
@@ -71,7 +71,7 @@
 		//Initializes global symbols / default primitives 
 		init-declaration    	
 
-
+rules
 	parse-spx-sources : 
 		(sourcedir , searchOption) -> <id>
 		where
@@ -110,7 +110,10 @@
 				)
 			end 
 
-strategies				// Pre-compilation before starting up actual compilation    
+
+strategies				    
+	
+	// Pre-compilation before starting up actual compilation
 	
 	// Before starting primary compilation, 
 	// pre-compile normalize the parsed tree
@@ -120,8 +123,9 @@
 		origin-track-forced(nomalize-all) // nomalize and builds scope-tree and  partial symbol table with the local information availble
 		//nomalize-all
 
-strategies 				// Main compilation events  
+strategies 			  
 	
+	// Main compilation events
 	compile-all = 
 		?current-term ; 
 		enable-compiler-debugging;
@@ -136,6 +140,7 @@
 		;!current-term //restoring current term to avoid side effects
 	
 	
+	// compiles all the packages stored at the filepath specified 
 	compile-packages-of: file-abs-path -> issues*
 	where
 		<debug-compiler>$[Compiling packages of  [<pp-aterm-forced>file-abs-path]]
@@ -158,6 +163,7 @@
 			end
 	
 	
+	// internal strategy of compilation used by different main compile strategies
 	compile-internal : list-of-package-qname* -> list-of-package-qname* 
 	where 
 		<debug-compiler>$[=========Compiling packages===============
@@ -174,8 +180,9 @@
 
 
 
-rules				// Compiler main : Compiles provided list of packages and stores semantic problems   
+rules			   
 	
+	// Compiler main : Compiles provided list of packages and stores semantic problems
 	compile-main= 
 		?list-of-package-qnames;
 		where(
@@ -192,7 +199,6 @@
 		//				  and make them accessible in the Global Scope 
 		;where(<debug-compiler>$[compile-main | compile-legacy-artifacts:])
 		;where(compile-legacy-artifacts)
-		
 		//Phase 3:  Compile Packagesand make them accessible in the different package 
 		//					namespace.
 		//					Use the dependency graph to first compile the depending on packages.
@@ -239,6 +245,7 @@
 				<debug-compiler>$[compile-spx-package| Ignored as already in the queue : [<pp-aterm>]]
 			end
 
+	// Compiles imported spx packages/modules
 	compile-depending-spx: 
 		typed-qname -> typed-qname
 		where 
@@ -263,6 +270,7 @@
 					
 			end		 
 	
+	// Compiles Spx Modules
 	compile-spx-module: 
 		module-typed-qname at Module(untyped-qname) -> <id>
 		where 
@@ -284,13 +292,12 @@
 				<debug-compiler>$[compile-spx-module| Ignored as already in the queue : [<pp-aterm>]] //this package is not compiled before
 			end	
 	
-		
+	
+	//TODO : append additional checks . compilation should be incremental and if source not changed, show the cached errors/warnings/infos	
 	should-compile-this-package = 
 		?package-qname;
 		where(not(<currently-compiling-package>package-qname))
-		//TODO : add checking of PDL caching. If souce is newer than pdl version of the
-		//package, do not compile it. use the pdl instantly.
-
+		
 
 rules 
 

From M.A.Akhter at student.tudelft.nl  Thu May  5 23:51:19 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 05 May 2011 21:51:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22781 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans: .
	codegen codegen/esv codegen/sdf codegen/str context
	context/sdf normalize unit-tests utils
Message-ID: <20110505215119.D7361108C016@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Thu May  5 21:51:19 2011
New Revision: 22781
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22781&sc=1

Log:
more refactoring

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/signatures.str
      - copied, changed from r22778, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/signature.str
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/signature.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/contracts.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Thu May  5 21:35:11 2011	(r22780)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Thu May  5 21:51:19 2011	(r22781)
@@ -10,7 +10,7 @@
 imports 
 	analyze/main
 	context/scope-tree
-	context/signature
+	context/signatures
 	context/declare
 imports
 	common 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Thu May  5 21:35:11 2011	(r22780)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Thu May  5 21:51:19 2011	(r22781)
@@ -14,7 +14,7 @@
 	codegen/main 
 	codegen/generate
 	context/scope-tree 
-	context/signature
+	context/signatures
 imports
 	lib/editor-common.generated
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Thu May  5 21:35:11 2011	(r22780)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Thu May  5 21:51:19 2011	(r22781)
@@ -16,7 +16,7 @@
 	include/spoofaxlang
 imports	
 	context/scope-tree
-	context/signature
+	context/signatures
 	normalize/signatures
 imports 	
 	utils/path 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str	Thu May  5 21:35:11 2011	(r22780)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str	Thu May  5 21:51:19 2011	(r22781)
@@ -12,7 +12,7 @@
 	utils/cache
 	lib/editor-common.generated
 	context/scope-tree
-	context/signature 
+	context/signatures 
 	normalize/signatures  
 	include/spoofaxlang
 	utils/path

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Thu May  5 21:35:11 2011	(r22780)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Thu May  5 21:51:19 2011	(r22781)
@@ -12,7 +12,7 @@
   lib/sdf-parenthesize  
 imports 
 	context/scope-tree
-	context/signature
+	context/signatures
 	context/sdf/declare
 imports
 	normalize/signatures

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Thu May  5 21:35:11 2011	(r22780)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Thu May  5 21:51:19 2011	(r22781)
@@ -17,7 +17,7 @@
 	codegen/main
 	codegen/generate
 	
-	context/signature
+	context/signatures
 	normalize/signatures
 imports 
 	utils/path

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Thu May  5 21:35:11 2011	(r22780)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Thu May  5 21:51:19 2011	(r22781)
@@ -20,7 +20,7 @@
 	codegen/sdf/to-name-analysis
 	
 imports	
-	context/signature
+	context/signatures
 	context/scope-tree
 imports	
 	normalize/signatures

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Thu May  5 21:35:11 2011	(r22780)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Thu May  5 21:51:19 2011	(r22781)
@@ -5,7 +5,7 @@
 	context/sdf/declare-signature
 	context/str/declare
 	context/scope-tree
-	context/signature
+	context/signatures
 	normalize/signatures 
 imports 
 	include/SpoofaxLang

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str	Thu May  5 21:35:11 2011	(r22780)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str	Thu May  5 21:51:19 2011	(r22781)
@@ -3,7 +3,7 @@
 	include/SpoofaxLang 
 	lib/editor-common.generated
 imports 
-	context/signature
+	context/signatures
 	normalize/signatures
 	codegen/compile
 imports 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str	Thu May  5 21:35:11 2011	(r22780)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str	Thu May  5 21:51:19 2011	(r22781)
@@ -9,7 +9,7 @@
 imports 
 	context/scope-tree
 	context/sdf/declare
-	context/signature
+	context/signatures
 	codegen/sdf/to-name-analysis
 		
 

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/signatures.str (from r22778, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/signature.str)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/signature.str	Thu May  5 16:25:05 2011	(r22778, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/signatures.str	Thu May  5 21:51:19 2011	(r22781)
@@ -1,4 +1,4 @@
-module context/signature
+module context/signatures
 
 // signature visibility 
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str	Thu May  5 21:35:11 2011	(r22780)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str	Thu May  5 21:51:19 2011	(r22781)
@@ -18,7 +18,7 @@
 	
 imports 
 	context/scope-tree
-	context/signature	
+	context/signatures	
  
 //FIX : 
 // Design issues : 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str	Thu May  5 21:35:11 2011	(r22780)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str	Thu May  5 21:51:19 2011	(r22781)
@@ -27,7 +27,7 @@
 	normalize/signatures   
 imports 
 	context/scope-tree
-	context/signature
+	context/signatures
 imports	 
 	utils/cache
 	common

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/contracts.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/contracts.str	Thu May  5 21:35:11 2011	(r22780)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/contracts.str	Thu May  5 21:51:19 2011	(r22781)
@@ -7,7 +7,7 @@
 imports
 	common
 	context/scope-tree
-	context/signature 
+	context/signatures 
 	normalize/signatures
 	utils/contract
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str	Thu May  5 21:35:11 2011	(r22780)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str	Thu May  5 21:51:19 2011	(r22781)
@@ -7,7 +7,7 @@
 imports
 	common
 	context/scope-tree
-	context/signature 
+	context/signatures 
 	normalize/signatures
 rules
 		

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str	Thu May  5 21:35:11 2011	(r22780)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str	Thu May  5 21:51:19 2011	(r22781)
@@ -1,7 +1,7 @@
 module utils/path 
 imports 
 	lib/editor-common.generated 
-	context/signature
+	context/signatures
 imports
 	common
 	utils/debug

From M.A.Akhter at student.tudelft.nl  Thu May  5 23:53:16 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 05 May 2011 21:53:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22782 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax
Message-ID: <20110505215316.0FE42CC048@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Thu May  5 21:53:15 2011
New Revision: 22782
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22782&sc=1

Log:
* deleted redundant stuff from config file

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/spx.config

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/spx.config
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/spx.config	Thu May  5 21:51:19 2011	(r22781)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/spx.config	Thu May  5 21:53:15 2011	(r22782)
@@ -1,15 +1,7 @@
 Configuration
 	Includes
 		RootDirectory
-				test %% specify relative path of local source directories
-		AllDirectories
-				
-	
-		SpxProjects	
-			%%Specify external reference projects
-			%% e.g. c:/test
-			../org.strategoxt.imp.editors.spoofax.configuration
-	
+				test 
 	
 	CodeGeneration 
 		OutputDirectory		.shadowdir
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Fri May  6 01:16:15 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 05 May 2011 23:16:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22783 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans: .
	codegen
Message-ID: <20110505231615.535D2CC0D6@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Thu May  5 23:16:15 2011
New Revision: 22783
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22783&sc=1

Log:
adding command line mode. using strategy pattern to enable / disable different rules depending on specified strategy.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Thu May  5 21:53:15 2011	(r22782)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Thu May  5 23:16:15 2011	(r22783)
@@ -28,8 +28,9 @@
 	codegen/generate
 
 rules 
-	//refresh-file = refresh-workspace-file //temporarily disabling refresh for running the main strategy
-	refresh-file = id
+	
+	refresh-file = is-in-command-line-mode  < id + refresh-workspace-file 
+	
 	
 strategies 
 	build-all = 
@@ -38,15 +39,15 @@
 		;new-compile-session(
 			list-of-package-qname* := <get-package-list> 
 			;<compile-internal>list-of-package-qname*
-			;<debug>$[=========Getting list of errors============]
+			;<debug>$[......................Getting list of errors......................]
 			;<get-all-analyzed-problems>() => problems  
 			;if <fail-if-has-errors>problems then
-			 	 <debug>$[=========generating artifacts============]
+			 	 <debug>$[......................Generating artifacts......................]
 			 	;init-code-generation  
 				;<list-loop(generate-spx-package)>list-of-package-qname*
-				;<debug>$[=========Generating Build Scipt============]
+				;<debug>$[......................Generating Build Scipt......................]
 				;<emit-build-script> list-of-package-qname*
-				;<debug>$[=========Code Generation is done============] 		
+				;<debug>$[......................Code Generation is done......................] 		
 			else
 				<debug>$[Please fix the errors before building the artifacts:  [<pp-aterm-forced>problems]]
 			end		 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str	Thu May  5 21:53:15 2011	(r22782)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str	Thu May  5 23:16:15 2011	(r22783)
@@ -34,6 +34,7 @@
 				// Overriding spx.config configured source directory. 
 				// Comment this line if sources configured in the spx.config should be activated
 				//<override-configured-source-directories><abspath>arg;
+				enable-command-line-mode;  
 				<show-configuration;debug>();     //show configuration for this spx project
 				<build-all>();                     //building all the spx files in the sources directory
 				<debug>$[".................Build-all succeeds................."];

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str	Thu May  5 21:53:15 2011	(r22782)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str	Thu May  5 23:16:15 2011	(r22783)
@@ -23,6 +23,7 @@
 	pp-aterm = disable-pp-aterm < !"N/A" + pp-aterm-forced
 	
 	pp-aterm-forced = pp-aterm-box ; box2text-string(|100)
+
 strategies
 	/*internal*/ require(s) = not(s)
 		

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Thu May  5 21:53:15 2011	(r22782)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Thu May  5 23:16:15 2011	(r22783)
@@ -12,8 +12,7 @@
 	spoofaxlang
 	
 rules 
-	//default_package_name = !"_default"
-	default_package_name = !"Lawoco" // HACK : Temporarily added for LWC submission
+	default_package_name = !"_default"
 	
 rules 
 	initialize-configuration = 
@@ -24,9 +23,12 @@
 		;<init-ignored-directories>[".svn"]
 		;enable-caching
 		;enable-lib-cache-invalidation
-		;enable-pretty-printing       
+		;enable-pretty-printing
+		;enable-command-line-mode  
+		;disable-command-line-mode       
 		;disable-caching
-		;disable-pretty-printing    
+		;disable-pretty-printing 
+		    
 		;!current-term
 
 	show-configuration: (selected, position, ast, path, project-path) -> (filename, result)
@@ -76,26 +78,32 @@
 		[enabled-caching-string] 
 				
 		] 
-		
+rules		
 	// enables library cache invalidation 
 	enable-lib-cache-invalidation = with( rules(invalidate-lib-cache: _ ) )
 	
 	disable-lib-cache-invalidation = with( rules(invalidate-lib-cache:- _ ) )
+rules	
+	//enable command line mode
+	enable-command-line-mode =  with (rules(Enable-CommandLine-Mode : _ ))
+	
+	disable-command-line-mode = with(rules(Enable-CommandLine-Mode:- _ ))
 	
+	is-in-command-line-mode = where ( Enable-CommandLine-Mode )
 	
+rules	
 	//enable caching 
 	enable-caching =  with (rules(Enable-Caching : _ ))
 	
 	disable-caching = with(rules(Enable-Caching :- _ ))
 	
-	
-	
+rules	
 	// enable pp-aterm
 	enable-pretty-printing = with (rules(disable-pp-aterm : _ ))
 	 
-	disable-pretty-printing = with (rules(disable-pp-aterm :- _ ))	
-	
-	
+	disable-pretty-printing = with (rules(disable-pp-aterm :- _ ))
+		
+rules	
 	init-ignored-directories : [] -> [] 
 	
 	init-ignored-directories: [current-dir | rest] ->[current-dir | <init-ignored-directories>rest]    

From M.A.Akhter at student.tudelft.nl  Fri May  6 02:37:34 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Fri, 06 May 2011 00:37:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22784 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans: .
	codegen codegen/sdf
Message-ID: <20110506003734.67F502B8009@mx2.tudelft.nl>

Author: MdAdilAkhter
Date: Fri May  6 00:37:32 2011
New Revision: 22784
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22784&sc=1

Log:
abstracting file writing of SDF

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Thu May  5 23:16:15 2011	(r22783)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Fri May  6 00:37:32 2011	(r22784)
@@ -201,6 +201,16 @@
 	
 	
 
+rules 
+	save-artifact( | package-untyped-qname, root-directory,output-path) : 
+		content -> content
+		with 
+			 <ensure-exists>(root-directory, package-untyped-qname)
+		 	;<save-to-file>(output-path , content)
+		 	;<refresh-file>output-path 
+		 	;chdir-to-project-path
+		
+		
 	
 	
 				 
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Thu May  5 23:16:15 2011	(r22783)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Fri May  6 00:37:32 2011	(r22784)
@@ -33,38 +33,34 @@
 	 emit-sdf:m at Module(attrb* , modname , section*) -> m
  		with 
  			project-path := <ProjectPath>
- 		where
- 			package-typed-qname := <GetEnclosingPackageName> 
+ 			;package-typed-qname := <GetEnclosingPackageName> 
 			;module-typed-qname  := <GetEnclosingModuleName> 
 			<+ 
-			<debug-compiler>$[ Codegen | SDF | Failed to create current scope.] 
-			;fail
+			<debug-compiler>$[ Codegen | SDF | Failed to create current scope.];fail
 		where
 			 !module-typed-qname  => Module(module-untyped-qname)
 			;!package-typed-qname => Package(package-untyped-qname)
 			; Module(_, _ , section') := <get-module-declaration>module-typed-qname 
-		where 
-    	<debug-compiler>$[ Codegen | SDF | Found Section + Imports for the following module [<pp-aterm> module-untyped-qname].]
+		where
+			root-directory := $[[project-path]/[<Autogenerated-Artifacts-Dir>]]
+   		;output-path     := <get-output-path(|"sdf")>(root-directory , module-untyped-qname) 
+    	;<debug-compiler>$[ Codegen | SDF | Found Section + Imports for the following module [<pp-aterm> module-untyped-qname].]
     where
     	sdf-string       := <pp-sdf-string'> 'module(<qname-to-path>module-untyped-qname, <to-sdf-imports-block>section* , <to-sdf-section-block>section* )
     	;<debug-compiler>$[ Codegen | SDF | Saving the artifacts of [<pp-aterm> module-untyped-qname].]
 		where
-			 autogen-root-directory := $[[project-path]/[<Autogenerated-Artifacts-Dir>]]
-   		;<ensure-exists>(autogen-root-directory, package-untyped-qname)
-			;output-path     := <get-output-path(|"sdf")>(autogen-root-directory , module-untyped-qname) 
-			; <save-to-file>(output-path , sdf-string )
-			;<refresh-file>output-path
-			;chdir-to-project-path
-			;<debug-compiler>$[ Codegen | SDF | Finishing generation of SDF for [<pp-aterm> module-untyped-qname].] 
+			<save-artifact(| package-untyped-qname , root-directory, output-path)>sdf-string; 
+			<debug-compiler>$[ Codegen | SDF | Finishing generation of SDF for [<pp-aterm> module-untyped-qname].] 
 		
-	
 	generate-sdf-main:  module-qname* -> <id>
 		with 
  			 project-path             := <ProjectPath>;
  			 Package(package-qname)   := <GetEnclosingPackageName>;
- 			 relative-autogen-path :=  <qname-to-path>package-qname
- 		where 
- 			<debug-compiler>$[ Codegen | SDF | Generating main for the following package : [<pp-aterm> package-qname].]
+ 			 relative-autogen-path :=  <qname-to-path>package-qname;
+ 			 autogen-dir :=$[[<Autogenerated-Artifacts-Dir>]/[relative-autogen-path]];
+			 root-directory := $[[project-path]/[<Autogenerated-Artifacts-Dir>]];
+			 output-path := <get-main-output-path(|"sdf")>(root-directory, package-qname);
+			<debug-compiler>$[ Codegen | SDF | Generating main for the following package : [<pp-aterm> package-qname].]
  		where
 			sdf-string := 
 	    $[module [<get-main-file-name>package-qname]
@@ -74,18 +70,11 @@
 	  where 
 	  	<debug-compiler>$[ codegen | SDF | Content of the main SDF is generated for the package : [<pp-aterm> package-qname].]
 		where
-			 autogen-dir :=$[[<Autogenerated-Artifacts-Dir>]/[relative-autogen-path]]
-			;autogen-root-directory := $[[project-path]/[<Autogenerated-Artifacts-Dir>]]
-			;<ensure-exists>(autogen-root-directory , package-qname)
-			;output-path := <get-main-output-path(|"sdf")>(autogen-root-directory , package-qname)   
-			;<save-to-file>(output-path , sdf-string )
-	 		;<refresh-file>output-path
-			;chdir-to-project-path
-			;<debug-compiler>$[ Codegen | SDF | Finishing generation of Main SDF Module of package : [<pp-aterm> package-qname].]
-	
-				
+			<save-artifact(| package-qname , root-directory, output-path)>sdf-string;
+			<debug-compiler>$[ Codegen | SDF | Finishing generation of Main SDF Module of package : [<pp-aterm> package-qname].]
+
 rules
-	
+
 	to-sdf-section-block : sections* -> sdf-section-block 
 	with contracts( 
 		contract-requires ( is-list |sections*)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str	Thu May  5 23:16:15 2011	(r22783)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str	Fri May  6 00:37:32 2011	(r22784)
@@ -121,7 +121,8 @@
   	 		 	 package-name   := <last>modname-part*;
   	 		 	 relative-autogen-path := <dirname>name'  
   	 		end
-	
+
+rules	
   get-qualified-spxmodulename: 
   	(namespace-name,module-name) -> result
 		where
@@ -138,15 +139,16 @@
   
   get-fullyqualified-autogen-path(|extension): 
   	(project-path, base-dir,spx-modulename) -> $[[project-path]/[base-dir]/[spx-modulename].[extension]]  
-  
-  save-to-file:(fileName, fileContent) -> None()  
-      where
-          not(<eq>("", fileContent))
-      with  
-      		<debug-compiler> $[Writing to the following file : [fileName] the following content: 
+ 
+rules 
+	save-to-file:(fileName, fileContent) -> None()  
+  	where
+    	not(<eq>("", fileContent))
+    where
+    	<debug-compiler> $[Writing to the following file : [fileName] the following content: 
       							[fileContent] 
-      						 ]
-          ;handle := <fopen> (fileName, "w+")
-          ;<fputs>(fileContent , handle)
-          ;fclose
- 	 					 
\ No newline at end of file
+    	]
+    with
+    	filedescr := <fopen> (fileName, "w+")
+      ;<fputs>(fileContent , filedescr)
+      ;<fclose>filedescr			 
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Fri May  6 13:21:26 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Fri, 06 May 2011 11:21:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22785 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen:
	. esv str
Message-ID: <20110506112127.01C72CC0FA@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Fri May  6 11:21:26 2011
New Revision: 22785
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22785&sc=1

Log:
* generalizing save artifacts 
* Using generic save artifacts in emitting stratego codes

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Fri May  6 00:37:32 2011	(r22784)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Fri May  6 11:21:26 2011	(r22785)
@@ -40,7 +40,7 @@
 		with	 
  			 relative-autogen-path :=  <qname-to-path>package-qname
  			;package-esv-main-name := $[[<convert-qname(|"-")>package-qname].main.packed]
- 			;autogen-dir :=$[[<Autogenerated-Artifacts-Dir>]/[relative-autogen-path]]
+ 			;autogen-dir           :=$[[<Autogenerated-Artifacts-Dir>]/[relative-autogen-path]]
  		where 
  			{|  Declared-Language-Description,Declared-Builders-Description,Declared-Colorer-Description,
  					Declared-Folding-Description,Declared-Outliner-Description,Declared-References-Description,

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Fri May  6 00:37:32 2011	(r22784)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Fri May  6 11:21:26 2011	(r22785)
@@ -202,14 +202,18 @@
 	
 
 rules 
-	save-artifact( | package-untyped-qname, root-directory,output-path) : 
+	save-artifact(s | package-untyped-qname, root-directory,output-path) : 
 		content -> content
 		with 
 			 <ensure-exists>(root-directory, package-untyped-qname)
-		 	;<save-to-file>(output-path , content)
+		 	;<s>(output-path , content)
 		 	;<refresh-file>output-path 
 		 	;chdir-to-project-path
 		
+	
+	save-artifact( | package-untyped-qname, root-directory,output-path) : 
+		content -> <save-artifact( save-to-file | package-untyped-qname, root-directory,output-path)>content 
+		
 		
 	
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Fri May  6 00:37:32 2011	(r22784)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Fri May  6 11:21:26 2011	(r22785)
@@ -33,7 +33,8 @@
  	emit-str:
 		m at Module(attrb* , modname , section*) -> m
 		with 
- 			project-path := <ProjectPath>
+ 			 project-path := <ProjectPath>
+ 			;root-dir := $[[project-path]/[<Autogenerated-Artifacts-Dir>]]
  		with
  			package-typed-qname := <GetEnclosingPackageName> 
 			;module-typed-qname  := <GetEnclosingModuleName> 
@@ -43,25 +44,38 @@
 		where
 			 !module-typed-qname  => Module(module-untyped-qname)
 			;!package-typed-qname => Package(package-untyped-qname)
-			;!modname => SPXModuleName(modulename-string)
-			; Module(_, _ , section') := <get-module-declaration>module-typed-qname
+			;!modname             => SPXModuleName(modulename-string)
+			;output-path-str 	    := <get-output-path(|"str")>(root-dir, module-untyped-qname)
+    	;output-path-rtree    := <get-output-path(|"rtree")>(root-dir, module-untyped-qname)
+    	;<debug-compiler> $[CodeGen | STR | generating code for the following module : [<pp-aterm>module-untyped-qname]] 
 		where 
-			<debug-compiler> $[CodeGen | STR | generating code for the following module : [<pp-aterm>module-untyped-qname]]
-			;str-section-def := <conc>(<collect-om(?STRSection(<id>), conc)> section* ,<emit-name-analysis>section*)     
-			;str-aterm := Module(<qname-to-path>module-untyped-qname, <conc>(<to-str-imports-block(|module-untyped-qname)>section*, str-section-def))
- 			;str-string := <to-str-string>str-aterm
- 		where
-			 autogen-dir := $[[project-path]/[<Autogenerated-Artifacts-Dir>]]
-			;output-path-str := <get-output-path(|"str")>(autogen-dir, module-untyped-qname)
-    	;output-path-rtree := <get-output-path(|"rtree")>(autogen-dir, module-untyped-qname)
-    	;<ensure-exists>( autogen-dir , package-untyped-qname ) 
-			;chdir-to-project-path 
-			;<save-to-file>( output-path-str, str-string )
-			;<WriteToBinaryFile>( output-path-rtree, str-aterm)
-			;<refresh-file>output-path-str
-			;<refresh-file>output-path-rtree
-		  ;<debug-compiler>$[ Codegen | STR | Finishing generation of following module: [<pp-aterm> module-untyped-qname].]
+			emit-str-rtree(| package-untyped-qname, module-untyped-qname, root-dir, output-path-rtree);
+			emit-str-concrte-syntax (|package-untyped-qname, module-untyped-qname, root-dir, output-path-str)
+	 	 ;<debug-compiler>$[ Codegen | STR | Finishing generation of following module: [<pp-aterm> module-untyped-qname].]
+
 	
+	// emitting stratego concrete syntax
+	emit-str-concrte-syntax (|package-untyped-qname, module-untyped-qname , root-dir, output-str-path) : 
+		str-rtree -> str-concrete-syntax
+		where
+			 str-concrete-syntax := <to-str-string>str-rtree
+			;<save-artifact(|package-untyped-qname, root-dir,output-str-path)> str-concrete-syntax
+	
+	// 
+	emit-str-rtree (|package-untyped-qname, module-untyped-qname , root-dir, output-rtree-path): 
+		Module(attrb* , modname , section*) -> str-aterm
+		where  
+			 str-section-def := <conc>(<collect-om(?STRSection(<id>), conc)> section* ,<emit-name-analysis>section*)     
+			;str-aterm := Module(
+			 										 <qname-to-path>module-untyped-qname, 
+			 										 <conc>(<to-str-imports-block(|module-untyped-qname)>section*, 
+			 											  		str-section-def
+			 													 )
+			 										)
+			;<save-artifact(WriteToBinaryFile | package-untyped-qname, root-dir,output-rtree-path )> str-aterm 
+ 			
+		
+		
 	
 	emit-name-analysis : sections* -> result 
 	where 

From M.A.Akhter at student.tudelft.nl  Fri May  6 13:52:37 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Fri, 06 May 2011 11:52:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22786 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str
Message-ID: <20110506115237.535B7108C030@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Fri May  6 11:52:37 2011
New Revision: 22786
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22786&sc=1

Log:
simplified file operation for stratego main

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Fri May  6 11:21:26 2011	(r22785)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Fri May  6 11:52:37 2011	(r22786)
@@ -29,7 +29,7 @@
 	
 	
 rules
-	// emitting STR definition for the specified SPX module.
+	// emit STR definition for the specified SPX module.
  	emit-str:
 		m at Module(attrb* , modname , section*) -> m
 		with 
@@ -45,78 +45,66 @@
 			 !module-typed-qname  => Module(module-untyped-qname)
 			;!package-typed-qname => Package(package-untyped-qname)
 			;!modname             => SPXModuleName(modulename-string)
-			;output-path-str 	    := <get-output-path(|"str")>(root-dir, module-untyped-qname)
-    	;output-path-rtree    := <get-output-path(|"rtree")>(root-dir, module-untyped-qname)
-    	;<debug-compiler> $[CodeGen | STR | generating code for the following module : [<pp-aterm>module-untyped-qname]] 
+			;<debug-compiler> $[CodeGen | STR | generating code for the following module : [<pp-aterm>module-untyped-qname]] 
 		where 
-			emit-str-rtree(| package-untyped-qname, module-untyped-qname, root-dir, output-path-rtree);
-			emit-str-concrte-syntax (|package-untyped-qname, module-untyped-qname, root-dir, output-path-str)
+			emit-str-rtree(| package-untyped-qname, module-untyped-qname, root-dir);
+			emit-str-concrte-syntax (|package-untyped-qname, module-untyped-qname, root-dir)
 	 	 ;<debug-compiler>$[ Codegen | STR | Finishing generation of following module: [<pp-aterm> module-untyped-qname].]
 
 	
-	// emitting stratego concrete syntax
-	emit-str-concrte-syntax (|package-untyped-qname, module-untyped-qname , root-dir, output-str-path) : 
-		str-rtree -> str-concrete-syntax
+	// Generates main stratego module for the specified package-name
+	generate-str-main:  module-qname* -> <id>
+		with 
+ 			 project-path             := <ProjectPath>;
+ 			 Package(package-qname)   := <GetEnclosingPackageName>;
+ 			 root-directory 					:= $[[project-path]/[<Autogenerated-Artifacts-Dir>]]; 
+ 		   <debug-compiler> $[CodeGen | STR | Generate-str-main from package-name: [<pp-aterm>package-qname]]
+ 		where   	  
+ 			 main-str-module-name :=  <get-main-file-name>package-qname; 
+			 str-aterm := Module( main-str-module-name  ,[Imports(<map(to-str-import);flatten-list>module-qname*)]);
+			 str-string := <pp-stratego-string> <parenthesize-Stratego>  str-aterm
 		where
+			<save-artifact(save-to-file      | package-qname , root-directory, <get-main-output-path(|"str")>(root-directory, package-qname))>str-string;
+			<save-artifact(WriteToBinaryFile | package-qname , root-directory, <get-main-output-path(|"rtree")>(root-directory, package-qname))>str-aterm;
+			<debug-compiler>$[ Codegen | STR | Generation of Main STR Module for package : [<pp-aterm> package-qname] is done.] 
+
+	
+	// emit stratego concrete syntax
+	emit-str-concrte-syntax (|package-untyped-qname, module-untyped-qname , root-dir) : 
+		str-rtree -> str-concrete-syntax
+		with 
+			output-path-str 	    := <get-output-path(|"str")>(root-dir, module-untyped-qname)
+   	where
 			 str-concrete-syntax := <to-str-string>str-rtree
-			;<save-artifact(|package-untyped-qname, root-dir,output-str-path)> str-concrete-syntax
+			;<save-artifact(|package-untyped-qname, root-dir,output-path-str)> str-concrete-syntax
 	
-	// 
-	emit-str-rtree (|package-untyped-qname, module-untyped-qname , root-dir, output-rtree-path): 
+	// emit stratego rtree 
+	emit-str-rtree (|package-untyped-qname, module-untyped-qname , root-dir): 
 		Module(attrb* , modname , section*) -> str-aterm
+		with
+			output-path-rtree    := <get-output-path(|"rtree")>(root-dir, module-untyped-qname)
 		where  
-			 str-section-def := <conc>(<collect-om(?STRSection(<id>), conc)> section* ,<emit-name-analysis>section*)     
+			 str-section-def := <conc>(<collect-om(?STRSection(<id>), conc)> section* ,<get-name-analysis>section*)     
 			;str-aterm := Module(
 			 										 <qname-to-path>module-untyped-qname, 
 			 										 <conc>(<to-str-imports-block(|module-untyped-qname)>section*, 
 			 											  		str-section-def
 			 													 )
 			 										)
-			;<save-artifact(WriteToBinaryFile | package-untyped-qname, root-dir,output-rtree-path )> str-aterm 
+			;<save-artifact(WriteToBinaryFile | package-untyped-qname, root-dir,output-path-rtree)> str-aterm 
  			
-		
-		
+				
+rules
 	
-	emit-name-analysis : sections* -> result 
+	// get name analysis for  the specified sections
+	get-name-analysis : sections* -> result 
 	where 
 		sdf-section* := <collect-om(?SDFSection(<id>) + ?SDFSectionEH(_, <id>), conc)>sections*;
 		Module(_, result) := <generate-name-analysis>sdf-section*
 	<+
 		<debug-compiler>$[ Codegen | STR | Failed name analysis.]
 	
-	/** 
-	* Generates stratego MAIN output for the specified package-name
-	*/	
-	generate-str-main:  module-qname* -> <id>
-		with 
- 			 project-path             := <ProjectPath>
- 			 ;Package(package-qname)   := <GetEnclosingPackageName>
- 		with	 
- 			 relative-autogen-path :=  <qname-to-path>package-qname
- 			;autogen-dir :=$[[<Autogenerated-Artifacts-Dir>]/[relative-autogen-path]]
- 		where 
- 			<debug-compiler> $[CodeGen | STR | generate-str-main from package-name: [<pp-aterm>package-qname]]	  
- 		where
- 			 main-str-module-name :=  <get-main-file-name>package-qname 
-			;str-aterm := Module( main-str-module-name  ,[Imports(<map(to-str-import);flatten-list>module-qname*)])
-			;str-string := <pp-stratego-string> <parenthesize-Stratego>  str-aterm
-		where
-			<debug-compiler> $[CodeGen | STR | str-string has been generated : [<pp-aterm>package-qname]]
-		where
-			// Saving str-content in the specified file
-			// TODO : refactor and abstract file operation. 
-			 autogen-root-directory := $[[project-path]/[<Autogenerated-Artifacts-Dir>]]
-			;<ensure-exists>(autogen-root-directory , package-qname)
-			;chdir-to-project-path // making sure that the current path is the project - path 
-			;output-path-str   := <get-main-output-path(|"str")>(autogen-root-directory , package-qname)   
-			;output-path-rtree := <get-main-output-path(|"rtree")>(autogen-root-directory , package-qname)   
-			;<save-to-file>(output-path-str ,   str-string)		// saving str string 		
-			;<WriteToBinaryFile>(output-path-rtree , str-aterm ) // saving rtree 
-	 		;<refresh-file>output-path-str 
-			;<refresh-file>output-path-rtree
-			;<debug-compiler>$[ Codegen | STR | Finishing generation of Main STR Module of package : [<pp-aterm> package-qname].] 
-			
-
+	
 
 rules
 	

From M.A.Akhter at student.tudelft.nl  Fri May  6 15:03:16 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Fri, 06 May 2011 13:03:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22787 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf
Message-ID: <20110506130316.B23B9108C007@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Fri May  6 13:03:16 2011
New Revision: 22787
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22787&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Fri May  6 11:52:37 2011	(r22786)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Fri May  6 13:03:16 2011	(r22787)
@@ -32,12 +32,14 @@
     )  
 	
 	to-signature-as-rtree =   
-		parse-str-string ; pp-aterm
+		parse-str-string
 	
 	
 			
 rules
-	// temporarily need  for the lwc project 
+	
+	// Temporarily needed  for the lwc project
+	// TODO : consider whether we need this rules for spx framework 
 	emit-package-signature-main : () -> ()
 	with 
  			project-path := <ProjectPath>
@@ -52,17 +54,19 @@
 			]
 			;signatures-as-aterm-string := <to-signature-as-rtree >generated-signatures-string
 	where
-		autogen-dir := $[[project-path]/include]
+		 autogen-dir := $[[project-path]/include]
 	 	;output-path-str 		:=   $[[autogen-dir]/[package-name-string]-signatures.str]
 	 	;output-path-rtree 		:= $[[autogen-dir]/[package-name-string]-signatures.rtree]
 	 	;<ensure-path-exists>(project-path, "include") 
    	;chdir-to-project-path 
 	where
 		 <save-to-file>( output-path-str, generated-signatures-string)
-		;<save-to-file>(output-path-rtree, signatures-as-aterm-string)
+		;<WriteToBinaryFile>(output-path-rtree, signatures-as-aterm-string)
 		;<refresh-file>output-path-str
 		;<refresh-file>output-path-rtree
 	
+	
+	// Emits default signatures in Global\ directory 
 	emit-default-signatures:
 		() -> ()
 		with 
@@ -80,22 +84,22 @@
 			;<ensure-path-exists>(project-path, $[[<Autogenerated-Artifacts-Dir>]/Globals]) 
 			;chdir-to-project-path  
 		where
-			 <save-to-file>( output-path-str, generated-signatures-string)
-			;<save-to-file>(output-path-rtree, signatures-as-aterm-string)
+			<save-to-file>( output-path-str, generated-signatures-string)
+			;<WriteToBinaryFile>(output-path-rtree, signatures-as-aterm-string)
 			;<refresh-file>output-path-str
 			;<refresh-file>output-path-rtree
 		where
 			rules( GeneratedSignature : sig-file-rel-path );    
 			<debug-compiler>$[ Codegen | SDF | Finishing generation of default signature]
-		
-		
-			
+	
+	// Emits signatures for the specified module definition		
 	emit-signatures:
 		m at Module(attrb* , modname , section*) -> m
 		with 
- 			project-path := <ProjectPath>
+ 			project-path  := <ProjectPath>;
+ 			root-directory:= $[[project-path]/[<Autogenerated-Artifacts-Dir>]]
  		with
- 			package-typed-qname := <GetEnclosingPackageName> 
+ 			 package-typed-qname := <GetEnclosingPackageName> 
 			;module-typed-qname  := <GetEnclosingModuleName> 
 			<+ 
 			<debug-compiler>$[Codegen | Failed to create current scope.]
@@ -105,30 +109,20 @@
 			;!package-typed-qname => Package(package-untyped-qname)
 			;!modname => SPXModuleName(modulename-string)
 		where 
-			sig-file-name     := <get-signature-file-name><qname-to-path>module-untyped-qname;
+			sig-file-name     :=  <get-signature-file-name><qname-to-path>module-untyped-qname;
 			sig-file-rel-path := $[[<Autogenerated-Artifacts-Dir>]/[<qname-to-path>module-untyped-qname]]
 		where 
 			<debug-compiler>$[Codegen|Generating signature for the following module: [<pp-aterm>module-typed-qname]]			
 			;imports-string := $[imports 
 				Globals/Signatures
 			]
-			;generated-signatures-string :=  <get-signature-contents(|sig-file-name,imports-string)><get-all-signatures-as-string(?(package-typed-qname, module-typed-qname, _))>
-			;<debug-compiler> $[Codegen|generated signatures : [generated-signatures-string ]] 
+			;generated-signatures-string :=  <get-signature-contents(|sig-file-name,imports-string)>
 			;signatures-as-aterm-string := <to-signature-as-rtree >generated-signatures-string
 		where  
-			autogen-dir := $[[project-path]/[<Autogenerated-Artifacts-Dir>]]
-			;output-path-str 		:= <get-output-path(|"signature", "str")>(autogen-dir, module-untyped-qname)
-			;output-path-rtree 		:= <get-output-path(|"signature", "rtree")>(autogen-dir, module-untyped-qname)
-		where
-			<debug-compiler> $[Codegen|otuput path for signatures : [output-path-str]]		
-			;<ensure-exists>( autogen-dir , package-untyped-qname ) 
-			;<save-to-file>( output-path-str, generated-signatures-string)
-			;<save-to-file>( output-path-rtree, signatures-as-aterm-string)
-			;<refresh-file>output-path-str
-			;<refresh-file>output-path-rtree 
-			;chdir-to-project-path
+			<save-artifact(save-to-file| package-untyped-qname, root-directory, <get-output-path(|"signature", "str")>(root-directory, module-untyped-qname))>generated-signatures-string;
+			<save-artifact(WriteToBinaryFile| package-untyped-qname, root-directory, <get-output-path(|"signature", "rtree")>(root-directory, module-untyped-qname))>signatures-as-aterm-string;
+			rules( GeneratedSignature : sig-file-rel-path )
 		where
-			rules( GeneratedSignature : sig-file-rel-path );
 			<debug-compiler>$[ Codegen | SDF | Finishing generation of Signature for [<pp-aterm> module-untyped-qname].]
 			
 	
@@ -180,12 +174,15 @@
 			opname-string  := opname
 		end
 				
-  lhs-operands-to-string : [] -> $[]
-  lhs-operands-to-string : [last] -> $[[last]] 
+  //TODO : generalize following strategies. 
+  lhs-operands-to-string : [] -> $[]
+  
+  lhs-operands-to-string : [last] -> $[[last]]
+   
   lhs-operands-to-string : [hd-operand|rest*] -> $[[hd-operand-string] * [rest-operand-string]]
   where
   	not (![] => rest*) 
   where 
-  	hd-operand-string := hd-operand 
+  	 hd-operand-string := hd-operand 
   	;rest-operand-string := <lhs-operands-to-string>rest*
   	  
\ No newline at end of file

From seba at informatik.uni-marburg.de  Fri May  6 15:57:17 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Fri, 06 May 2011 13:57:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22788 - in
	sugarj/trunk/case-studies: concretesyntax eblock
	features/test text xml xml/schema
Message-ID: <20110506135717.5D80ACC049@mx4.tudelft.nl>

Author: SebastianErdweg
Date: Fri May  6 13:57:17 2011
New Revision: 22788
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22788&sc=1

Log:
fixed a number of case studies

Modified:
   sugarj/trunk/case-studies/concretesyntax/EditorServices.sugj
   sugarj/trunk/case-studies/eblock/ConcatIds.sugj
   sugarj/trunk/case-studies/eblock/EBlock.sugj
   sugarj/trunk/case-studies/features/test/Test.sugj
   sugarj/trunk/case-studies/text/Latex.sugj
   sugarj/trunk/case-studies/xml/Test.sugj
   sugarj/trunk/case-studies/xml/schema/AsDesugaring.sugj
   sugarj/trunk/case-studies/xml/schema/AsEditorService.sugj
   sugarj/trunk/case-studies/xml/schema/BookSchema.sugj
   sugarj/trunk/case-studies/xml/schema/BookSchemaTest.sugj
   sugarj/trunk/case-studies/xml/schema/SharedStrategies.sugj
   sugarj/trunk/case-studies/xml/schema/XmlSchema.sugj

Modified: sugarj/trunk/case-studies/concretesyntax/EditorServices.sugj
==============================================================================
--- sugarj/trunk/case-studies/concretesyntax/EditorServices.sugj	Fri May  6 13:03:16 2011	(r22787)
+++ sugarj/trunk/case-studies/concretesyntax/EditorServices.sugj	Fri May  6 13:57:17 2011	(r22788)
@@ -11,6 +11,8 @@
                        "|[" EditorServiceSection* "]|" -> StrategoTerm {cons("ToMetaExpr")}
 
   context-free syntax
+    "~" StrategoTerm -> EditorServiceNode {cons("FromMetaExpr")}
+    "node~" StrategoTerm -> EditorServiceNode {cons("FromMetaExpr")}
     "~" StrategoTerm -> EditorServiceSemanticRule {cons("FromMetaExpr")}
     "~" StrategoTerm -> EditorServicePropertyValue {cons("FromMetaExpr")} 
     "~" StrategoTerm -> EditorServiceCompletionPart {cons("FromMetaExpr")} 

Modified: sugarj/trunk/case-studies/eblock/ConcatIds.sugj
==============================================================================
--- sugarj/trunk/case-studies/eblock/ConcatIds.sugj	Fri May  6 13:03:16 2011	(r22787)
+++ sugarj/trunk/case-studies/eblock/ConcatIds.sugj	Fri May  6 13:57:17 2011	(r22788)
@@ -8,8 +8,8 @@
  */
 public sugar ConcatIds {
   context-free syntax
-    { JavaID "#" }+ -> JavaID {cons("ConcatIds")}
-    
+    { JavaID "#" }+ -> JavaID {cons("ConcatIds"), avoid}
+     
   signature constructors
     ConcatIds : ID -> ID
 

Modified: sugarj/trunk/case-studies/eblock/EBlock.sugj
==============================================================================
--- sugarj/trunk/case-studies/eblock/EBlock.sugj	Fri May  6 13:03:16 2011	(r22787)
+++ sugarj/trunk/case-studies/eblock/EBlock.sugj	Fri May  6 13:57:17 2011	(r22788)
@@ -4,6 +4,7 @@
 
 import eblock.ConcatIds;
 
+   
 /*
  * https://svn.strategoxt.org/repos/StrategoXT/java-front/trunk/syntax-embedding/languages/java/eblock/Main.sdf
  * https://svn.strategoxt.org/repos/StrategoXT/java-front/trunk/lib/java/postprocess/java-lift-eblocks.str

Modified: sugarj/trunk/case-studies/features/test/Test.sugj
==============================================================================
--- sugarj/trunk/case-studies/features/test/Test.sugj	Fri May  6 13:03:16 2011	(r22787)
+++ sugarj/trunk/case-studies/features/test/Test.sugj	Fri May  6 13:57:17 2011	(r22788)
@@ -15,6 +15,7 @@
     bar();
     }
   }
+  
   void bar(){}
 }
 

Modified: sugarj/trunk/case-studies/text/Latex.sugj
==============================================================================
--- sugarj/trunk/case-studies/text/Latex.sugj	Fri May  6 13:03:16 2011	(r22787)
+++ sugarj/trunk/case-studies/text/Latex.sugj	Fri May  6 13:57:17 2011	(r22788)
@@ -139,7 +139,7 @@
       LatexEscape(code) -> code
     
     pp-latex-command :
-      InTextCommand#([com|args]) -> <debug;conc-strings> (com, args-string)
+      InTextCommand#([com|args]) -> <conc-strings> (com, args-string)
       where
         <mapconcat-strings(\ a -> <conc-strings> ("{", <pp-latex> a, "}") \)> args => args-string
       

Modified: sugarj/trunk/case-studies/xml/Test.sugj
==============================================================================
--- sugarj/trunk/case-studies/xml/Test.sugj	Fri May  6 13:03:16 2011	(r22787)
+++ sugarj/trunk/case-studies/xml/Test.sugj	Fri May  6 13:57:17 2011	(r22788)
@@ -17,7 +17,7 @@
 public class Test extends DefaultHandler {
   public static void main(String[] args) throws SAXException {
     ContentHandler ch = new Test();
-    
+     
     ch.<xsd:schema
 		     targetNamespace="http://www.w3.org/2001/XMLSchema"
 		     blockDefault="#all"

Modified: sugarj/trunk/case-studies/xml/schema/AsDesugaring.sugj
==============================================================================
--- sugarj/trunk/case-studies/xml/schema/AsDesugaring.sugj	Fri May  6 13:03:16 2011	(r22787)
+++ sugarj/trunk/case-studies/xml/schema/AsDesugaring.sugj	Fri May  6 13:57:17 2011	(r22788)
@@ -24,7 +24,7 @@
 
   // comment out for bootstrapping
     constraint-error :
-      XMLSchemaDoc(Document(pre, root, post)) -> (root, "document does not match any xml schema in scope")
+      XMLSchemaDoc(Document(pre, root, post)) -> (root, "document does not match any Xml schema in scope")
       where
         <not(xml-validate)> root
     
@@ -46,7 +46,6 @@
   rules
     xml-validate = fail
     valWriteDocToStrategyCall = fail
-    report-error(|t) = !t;debug
     
   rules
     xsdDec : 
@@ -97,13 +96,14 @@
       ]|
       -> 
       |[ rules 
-           xml-validate = strategy~namespace-match; ~elem-match ]|
+           xml-validate = strategy~namespace-match; strategy~elem-match ]|
       where
 	     <xml-attr-value2string> attval1 => ncname ;
 	     <xml-attr-value2string> attval2 => typename;
 	     <match-namespace> namespace => namespace-match;
 	     <match-element> (namespace, ncname, typename) => elem-match
     
+    
     // complex types
     xsdElement2stratego(|namespace) :
         Element(
@@ -234,10 +234,10 @@
       	   (is-error <+ !xs)>
       	  x
       	\
-        +
-        \ [] ->
-          [([], <concat-strings> ["missing element ", string~ncname, " of namespace ", string~namespace])]
-        \
+        // +
+        // \ [] ->
+        //   [([], <concat-strings> ["missing element ", string~ncname, " of namespace ", string~namespace])]
+        // \
       ]|
       where
 	     <xml-attr-value2string> attval1 => ncname ; 
@@ -259,10 +259,10 @@
 	         (is-error <+ !xs)> 
 	        x
 	      \
-        +
-        \ [] ->
-          [([], <concat-strings> ["missing attribute ", string~ncname])]
-        \
+        // +
+        // \ [] ->
+        //   [([], <concat-strings> ["missing attribute ", string~ncname])]
+        // \
 	  ]|
       where
 	     <xml-attr-value2string> attval1 => ncname ; 
@@ -289,7 +289,7 @@
     
   
   rules
-    any-error-free-strategy : [] -> Fail
+    any-error-free-strategy : [] -> stratego |[ fail ]|
     any-error-free-strategy :
        [s|ss] -> 
        stratego |[
@@ -299,8 +299,9 @@
           if is-error
             then 
               !x; 
-              strategy~(<any-error-free-strategy> ss);
-              if is-error then !(serr, <id>); conc else id end
+              strategy~(<any-error-free-strategy> ss)
+              < if is-error then !(serr, <id>); conc else id end
+              + !serr
             else id
           end
          }

Modified: sugarj/trunk/case-studies/xml/schema/AsEditorService.sugj
==============================================================================
--- sugarj/trunk/case-studies/xml/schema/AsEditorService.sugj	Fri May  6 13:03:16 2011	(r22787)
+++ sugarj/trunk/case-studies/xml/schema/AsEditorService.sugj	Fri May  6 13:57:17 2011	(r22788)
@@ -3,6 +3,7 @@
 import concretesyntax.EditorServices;
 
 import xml.XmlSyntax;
+import xml.XmlTextTools;
 import xml.schema.XmlSchemaJavaSyntax;
 import xml.ConcreteXml;
 import xml.XmlEditor;

Modified: sugarj/trunk/case-studies/xml/schema/BookSchema.sugj
==============================================================================
--- sugarj/trunk/case-studies/xml/schema/BookSchema.sugj	Fri May  6 13:03:16 2011	(r22787)
+++ sugarj/trunk/case-studies/xml/schema/BookSchema.sugj	Fri May  6 13:57:17 2011	(r22788)
@@ -1,35 +1,33 @@
 package xml.schema;
-  
+
 import xml.schema.XmlSchema;
 
 public xmlschema BookSchema {
   <{http://www.w3.org/2001/XMLSchema}schema targetNamespace="lib">
     
-    <{http://www.w3.org/2001/XMLSchema}element name="book" type="BookType">
+    <{http://www.w3.org/2001/XMLSchema}element name="book" type="Book">
     </{http://www.w3.org/2001/XMLSchema}element>
 
-    <{http://www.w3.org/2001/XMLSchema}complexType name="BookType">
-      <{http://www.w3.org/2001/XMLSchema}sequence maxOccurs="unbounded">
-        <{http://www.w3.org/2001/XMLSchema}element name="author" type="AuthorType">
+    <{http://www.w3.org/2001/XMLSchema}complexType name="Book">
+      <{http://www.w3.org/2001/XMLSchema}choice maxOccurs="unbounded">
+        <{http://www.w3.org/2001/XMLSchema}element name="author" type="Person">
         </{http://www.w3.org/2001/XMLSchema}element>
-      </{http://www.w3.org/2001/XMLSchema}sequence>
+
+        <{http://www.w3.org/2001/XMLSchema}element name="editor" type="Person">
+        </{http://www.w3.org/2001/XMLSchema}element>
+      </{http://www.w3.org/2001/XMLSchema}choice>
       
-      <{http://www.w3.org/2001/XMLSchema}attribute name="title" type="StringType">
+      <{http://www.w3.org/2001/XMLSchema}attribute name="title" type="string">
       </{http://www.w3.org/2001/XMLSchema}attribute>
     </{http://www.w3.org/2001/XMLSchema}complexType>
     
-    <{http://www.w3.org/2001/XMLSchema}complexType name="AuthorType">
-      <{http://www.w3.org/2001/XMLSchema}sequence maxOccurs="unbounded">
+    <{http://www.w3.org/2001/XMLSchema}complexType name="Person">
+      <{http://www.w3.org/2001/XMLSchema}sequence>
       </{http://www.w3.org/2001/XMLSchema}sequence>
       
-      <{http://www.w3.org/2001/XMLSchema}attribute name="name" type="StringType">
+      <{http://www.w3.org/2001/XMLSchema}attribute name="name" type="string">
       </{http://www.w3.org/2001/XMLSchema}attribute>
     </{http://www.w3.org/2001/XMLSchema}complexType>
 
-    <{http://www.w3.org/2001/XMLSchema}simpleType name="StringType">
-      <{http://www.w3.org/2001/XMLSchema}restriction base="string">
-      </{http://www.w3.org/2001/XMLSchema}restriction>
-    </{http://www.w3.org/2001/XMLSchema}simpleType>
-
   </{http://www.w3.org/2001/XMLSchema}schema>
 }

Modified: sugarj/trunk/case-studies/xml/schema/BookSchemaTest.sugj
==============================================================================
--- sugarj/trunk/case-studies/xml/schema/BookSchemaTest.sugj	Fri May  6 13:03:16 2011	(r22787)
+++ sugarj/trunk/case-studies/xml/schema/BookSchemaTest.sugj	Fri May  6 13:57:17 2011	(r22788)
@@ -11,7 +11,6 @@
 
 import xml.schema.BookSchema;
 
-
 public class BookSchemaTest extends Test {
   public static void main(String[] args) throws SAXException {
     ContentHandler ch = new BookSchemaTest();
@@ -20,6 +19,6 @@
     ch.<{lib}book title="Sweetness and Power: The Place of Sugar in Modern History">
          <{lib}author name="Sidney W. Mintz">
          </{lib}author>
-       </{lib}book>;
+       </{lib}book>; 
   }
 } 
\ No newline at end of file

Modified: sugarj/trunk/case-studies/xml/schema/SharedStrategies.sugj
==============================================================================
--- sugarj/trunk/case-studies/xml/schema/SharedStrategies.sugj	Fri May  6 13:03:16 2011	(r22787)
+++ sugarj/trunk/case-studies/xml/schema/SharedStrategies.sugj	Fri May  6 13:57:17 2011	(r22788)
@@ -1,7 +1,7 @@
 package xml.schema;
 
 public sugar SharedStrategies {
-  
+
   rules
     is-error = where(?[(a,<id>)|c]; is-string)
     head : [x|y] -> x
@@ -21,5 +21,29 @@
        <+ !(t,"not an integer"))
   
     repeat-strategy(s) =
-      ?x; s < (is-error <+ ?x <+ repeat-strategy(s)) + id
+      ?y; 
+      (s
+       < if equal(|y)
+	         then ![(<id>, "inifite loop")]
+	         else is-error <+ repeat-strategy(s)
+		     end
+		   + !y)
+	
+ 
+ // repeat-strategy(s) =
+ //      ?y; 
+ //      s;
+ //      (not(is-error) 
+ //       < if equal(|y)
+ //           then ![(<id>, "inifite loop")]
+ //           else repeat-strategy(s)
+ //         end
+ //       + if filter(is-looped-too-much-error); ?[]
+ //           then !y
+ //           else id
+ //         end)
+ //    
+ //    is-looped-too-much-error =
+ //      ?(_,"unexpected element") + ?(_,"unexpected attribute")
+ //      
 }
\ No newline at end of file

Modified: sugarj/trunk/case-studies/xml/schema/XmlSchema.sugj
==============================================================================
--- sugarj/trunk/case-studies/xml/schema/XmlSchema.sugj	Fri May  6 13:03:16 2011	(r22787)
+++ sugarj/trunk/case-studies/xml/schema/XmlSchema.sugj	Fri May  6 13:57:17 2011	(r22788)
@@ -3,10 +3,10 @@
 import xml.schema.AsDesugaring;
 import xml.schema.XmlSchemaJavaSyntax;
 
-import xml.schema.XmlSchemaCompiled;
- 
 import xml.schema.AsEditorService;
 
+import xml.schema.SharedStrategies;   
+
 public xmlschema XmlSchema {
   <{http://www.w3.org/2001/XMLSchema}schema 
     targetNamespace="http://www.w3.org/2001/XMLSchema">
@@ -137,6 +137,7 @@
       </{http://www.w3.org/2001/XMLSchema}attribute>
     </{http://www.w3.org/2001/XMLSchema}complexType>
     
+ 
     	
     
     <{http://www.w3.org/2001/XMLSchema}complexType name="RestrictionType">
@@ -151,7 +152,7 @@
     
     <{http://www.w3.org/2001/XMLSchema}simpleType name="string">
     	<{http://www.w3.org/2001/XMLSchema}restriction base="string">
-    	</{http://www.w3.org/2001/XMLSchema}restriction>
+      </{http://www.w3.org/2001/XMLSchema}restriction>
     </{http://www.w3.org/2001/XMLSchema}simpleType>
   </{http://www.w3.org/2001/XMLSchema}schema>
 }
\ No newline at end of file

From seba at informatik.uni-marburg.de  Fri May  6 15:58:29 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Fri, 06 May 2011 13:58:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22789 -
	spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/gwt/org/spoofax/terms
Message-ID: <20110506135829.3C016108C014@mx3.tudelft.nl>

Author: SebastianErdweg
Date: Fri May  6 13:58:29 2011
New Revision: 22789
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22789&sc=1

Log:
this (apparently obsolete) code produced a compile error for me when exporting the plugin via an update site

Modified:
   spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/gwt/org/spoofax/terms/TermFactory.java

Modified: spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/gwt/org/spoofax/terms/TermFactory.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/gwt/org/spoofax/terms/TermFactory.java	Fri May  6 13:57:17 2011	(r22788)
+++ spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/gwt/org/spoofax/terms/TermFactory.java	Fri May  6 13:58:29 2011	(r22789)
@@ -90,7 +90,7 @@
 	return results;
     }
 
-    protected IStrategoList makeList() {
+    public IStrategoList makeList() {
 	return isTermSharingAllowed() ? EMPTY_LIST : new StrategoList(null, null, null, defaultStorageType);
     }
 

From seba at informatik.uni-marburg.de  Fri May  6 16:09:57 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Fri, 06 May 2011 14:09:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22790 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20110506140957.DF37B7F801D@mx1.tudelft.nl>

Author: SebastianErdweg
Date: Fri May  6 14:09:57 2011
New Revision: 22790
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22790&sc=1

Log:
implemented additive merging of font styles

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java	Fri May  6 13:58:29 2011	(r22789)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java	Fri May  6 14:09:57 2011	(r22790)
@@ -13,6 +13,7 @@
 import org.eclipse.jface.text.IRegion;
 import org.eclipse.jface.text.Region;
 import org.eclipse.jface.text.TextAttribute;
+import org.eclipse.swt.SWT;
 import org.eclipse.swt.graphics.Color;
 import org.eclipse.swt.widgets.Display;
 import org.spoofax.interpreter.terms.ISimpleTerm;
@@ -170,10 +171,13 @@
 
 		Color fg = master.getForeground();
 		Color bg = master.getBackground();
+		
+		int style = Math.max(master.getStyle() & SWT.BOLD, slave.getStyle() & SWT.BOLD)
+		          + Math.max(master.getStyle() & SWT.ITALIC, slave.getStyle() & SWT.ITALIC);
 
-		if (fg == null || bg == null) {
+		if (fg == null || bg == null || style != master.getStyle()) {
 			return new TextAttribute(fg == null ? slave.getForeground() : fg, bg == null ? slave
-					.getBackground() : bg, master.getStyle());
+					.getBackground() : bg, style);
 		} else {
 			return master;
 		}

From seba at informatik.uni-marburg.de  Fri May  6 16:11:33 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Fri, 06 May 2011 14:11:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22791 -
	sugarj/trunk/compiler/org/sugarj/driver
Message-ID: <20110506141133.09F8ACC03E@mx4.tudelft.nl>

Author: SebastianErdweg
Date: Fri May  6 14:11:32 2011
New Revision: 22791
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22791&sc=1

Log:
fixed some caching bugs and other stuff

Modified:
   sugarj/trunk/compiler/org/sugarj/driver/ATermCommands.java
   sugarj/trunk/compiler/org/sugarj/driver/Driver.java
   sugarj/trunk/compiler/org/sugarj/driver/Log.java
   sugarj/trunk/compiler/org/sugarj/driver/PendingResult.java
   sugarj/trunk/compiler/org/sugarj/driver/Result.java

Modified: sugarj/trunk/compiler/org/sugarj/driver/ATermCommands.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/ATermCommands.java	Fri May  6 14:09:57 2011	(r22790)
+++ sugarj/trunk/compiler/org/sugarj/driver/ATermCommands.java	Fri May  6 14:11:32 2011	(r22791)
@@ -8,8 +8,6 @@
 import java.util.Iterator;
 import java.util.List;
 
-import javax.activation.UnsupportedDataTypeException;
-
 import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.spoofax.interpreter.terms.IStrategoConstructor;
 import org.spoofax.interpreter.terms.IStrategoInt;
@@ -341,8 +339,6 @@
       if (tok.getTokenizer().getInput().length() <= tok.getStartOffset() || tok.getTokenizer().getInput().charAt(tok.getStartOffset()) == '\n')
         break;
     }
-    
-    log.log(msg + ": " + file);
   }
 
   public static IStrategoTerm makeMutable(IStrategoTerm term) {

Modified: sugarj/trunk/compiler/org/sugarj/driver/Driver.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/Driver.java	Fri May  6 14:09:57 2011	(r22790)
+++ sugarj/trunk/compiler/org/sugarj/driver/Driver.java	Fri May  6 14:11:32 2011	(r22791)
@@ -23,15 +23,14 @@
 import java.net.URLClassLoader;
 import java.text.ParseException;
 import java.util.ArrayList;
-import java.util.HashMap;
 import java.util.List;
-import java.util.Map;
 
 import org.apache.commons.cli.CommandLine;
 import org.apache.commons.cli.CommandLineParser;
 import org.apache.commons.cli.GnuParser;
 import org.apache.commons.cli.HelpFormatter;
 import org.apache.commons.cli.Options;
+import org.apache.commons.collections.map.LRUMap;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.jsglr.client.InvalidParseTableException;
 import org.spoofax.jsglr.client.ParseTable;
@@ -43,6 +42,7 @@
 import org.strategoxt.HybridInterpreter;
 import org.strategoxt.imp.runtime.parser.JSGLRI;
 import org.strategoxt.lang.Context;
+import org.strategoxt.lang.StrategoException;
 import org.strategoxt.permissivegrammars.make_permissive;
 import org.strategoxt.tools.tools;
 import org.sugarj.driver.caching.ModuleKeyCache;
@@ -54,7 +54,7 @@
  */
 public class Driver{
   
-  public final static String VERSION = "editor-base-0.3";
+  public final static String VERSION = "editor-base-0.4";
   
   private static class Key {
     private String source;
@@ -78,7 +78,7 @@
 
   private final static int PENDING_TIMEOUT = 120000;
 
-  private static Map<Key, Result> resultCache = new HashMap<Key, Result>();
+  private static LRUMap resultCache = new LRUMap(200);
 
   private static List<URI> allInputFiles;
   private static List<URI> pendingInputFiles;
@@ -122,13 +122,17 @@
   
   private String currentTransProg;
   
+  private boolean interrupt = false;
+  
   /**
    * the next parsing and desugaring uses no cache lookup if skipCache.
    */
   private boolean skipCache = false;
   
+  private List<String> generatedJavaClasses = new ArrayList<String>();
+  
   private static synchronized Result getResult(String source, String moduleName) {
-    return resultCache.get(new Key(source, moduleName));
+    return (Result) resultCache.get(new Key(source, moduleName));
   }
   
   private static Result getNonPendingResult(String source, String moduleName) {
@@ -138,7 +142,7 @@
     synchronized (key) {
       while (true) {
         synchronized (resultCache) {
-          r = resultCache.get(key);
+          r = (Result) resultCache.get(key);
         }
         
         if (r != null && !(r instanceof PendingResult))
@@ -158,9 +162,10 @@
 
   private static synchronized void putResult(String source, String moduleName, Result result) {
     resultCache.put(new Key(source, moduleName), result);
+    System.out.println(resultCache.size());
   }
   
-  public static Result compile(URI sourceFile) throws IOException, TokenExpectedException, BadTokenException, ParseException, InvalidParseTableException, SGLRException {
+  public static Result compile(URI sourceFile) throws IOException, TokenExpectedException, BadTokenException, ParseException, InvalidParseTableException, SGLRException, InterruptedException {
     synchronized (currentlyProcessing) {
       // TODO we need better circular dependency handling
       if (currentlyProcessing.contains(sourceFile))
@@ -181,7 +186,9 @@
     return res;
   }
   
-  public static Result compile(String source, String moduleName, String file) throws IOException, TokenExpectedException, BadTokenException, ParseException, InvalidParseTableException, SGLRException {
+  public static Result compile(String source, String moduleName, String file) throws IOException, TokenExpectedException, BadTokenException, ParseException, InvalidParseTableException, SGLRException, InterruptedException {
+    Driver driver = new Driver();
+    
     boolean isPending = false;
     synchronized (Driver.class) {
       Result result = getResult(source, moduleName);
@@ -191,20 +198,19 @@
         return result;
       
       // mark this module as pending 
-      putResult(source, moduleName, PendingResult.instance);
+      if (!isPending)
+        putResult(source, moduleName, new PendingResult(driver));
     }
     
     if (isPending && getNonPendingResult(source, moduleName) != null) 
       return compile(source, moduleName, file);
     
-    Driver driver = null;
     try {
       initialize();
-      driver = new Driver();
       driver.process(source, moduleName);
       storeCaches();
     } finally {
-      putResult(source, moduleName, driver == null ? null : driver.driverResult);
+        putResult(source, moduleName, driver == null || driver.driverResult.getSugaredSyntaxTree() == null ? null : driver.driverResult);
     }
     
     return driver.driverResult;
@@ -223,8 +229,9 @@
    * @throws ParseException 
    * @throws BadTokenException 
    * @throws TokenExpectedException 
+   * @throws InterruptedException 
    */
-  private void process(String source, String moduleName) throws IOException, TokenExpectedException, BadTokenException, ParseException, InvalidParseTableException, SGLRException {
+  private void process(String source, String moduleName) throws IOException, TokenExpectedException, BadTokenException, ParseException, InvalidParseTableException, SGLRException, InterruptedException {
     log.beginTask("processing", "BEGIN PROCESSING " + moduleName);
     boolean success = false;
     try {
@@ -239,37 +246,54 @@
         boolean wocache = Environment.wocache;
         Environment.wocache |= skipCache;
         
+        if (interrupt) throw new InterruptedException();
+        
         // PARSE the next top-level declaration
         IncrementalParseResult parseResult =
             parseNextToplevelDeclaration(remainingInput, true);
         lastSugaredToplevelDecl = parseResult.getToplevelDecl();
         remainingInput = parseResult.getRest();
         
+        if (interrupt) throw new InterruptedException();
+        
         // DESUGAR the parsed top-level declaration
         IStrategoTerm desugared = currentDesugar(lastSugaredToplevelDecl);
         
         // reset cache skipping
         Environment.wocache = wocache;
         
+        if (interrupt) throw new InterruptedException();
+        
         // PROCESS the assimilated top-level declaration
         processToplevelDeclaration(desugared);
 
         done = parseResult.parsingFinished();
       }
       
-      if (Environment.generateJavaFile) {
+      if (interrupt) throw new InterruptedException();
+            
+      if (Environment.generateJavaFile && !generatedJavaClasses.isEmpty()) {
         String f = Environment.bin + sep + relPackageNameSep() + mainModuleName + ".java";
         driverResult.generateFile(f, FileCommands.readFileAsString(javaOutFile));
         log.log("Wrote generated Java file to " + f);
       }
       
-      // check final grammar and transformation for errors
-      if (!Environment.noChecking) {
-        checkCurrentGrammar();
+      try {
+        // check final grammar and transformation for errors
+        if (!Environment.noChecking) {
+          checkCurrentGrammar();
+        }
+        
+        if (interrupt) throw new InterruptedException();
+        
+        // need to build current transformation program for editor services
+        checkCurrentTransformation();
+        
+      } catch (Exception e) {
+        e.printStackTrace();
       }
       
-      // need to build current transformation program for editor services
-      checkCurrentTransformation();
+      if (interrupt) throw new InterruptedException();
       
       // COMPILE the generated java file
       compileGeneratedJavaFile();
@@ -279,7 +303,7 @@
         driverResult.registerEditorDesugarings(currentTransProg);
       
       success = true;
-    }
+    } 
     catch (CommandExecution.ExecutionError e) {
       // TODO do something more sensible
       e.printStackTrace();
@@ -297,7 +321,7 @@
       path.add(StdLib.stdLibDir.getPath());
       path.add(javaOutDir);
       
-      driverResult.compileJava(javaOutFile, bin, path, relPackageName);
+      driverResult.compileJava(javaOutFile, bin, path, generatedJavaClasses);
     } finally {
       log.endTask();
     }
@@ -519,7 +543,14 @@
         else
           throw new IllegalArgumentException("unexpected toplevel declaration, desugaring probably failed: " + toplevelDecl.toString(5));
       } catch (Exception e) {
-        ATermCommands.setErrorMessage(toplevelDecl, e.getClass().getName() + " " + e.getLocalizedMessage() != null ? e.getLocalizedMessage() : e.toString());
+        String msg = e.getClass().getName() + " " + e.getLocalizedMessage() != null ? e.getLocalizedMessage() : e.toString();
+        
+        if (!(e instanceof StrategoException))
+          e.printStackTrace();
+        else
+          log.logErr(msg);
+
+        ATermCommands.setErrorMessage(toplevelDecl, msg);
         if (!sugaredTypeOrSugarDecls.contains(lastSugaredToplevelDecl))
           sugaredTypeOrSugarDecls.add(lastSugaredToplevelDecl);
 
@@ -730,6 +761,14 @@
       log.beginTask("Generate Java code.");
       try {
         IStrategoTerm dec =  isApplication(toplevelDecl, "JavaTypeDec") ? getApplicationSubterm(toplevelDecl, "JavaTypeDec", 0) : toplevelDecl;
+        
+        String decName = Term.asJavaString(dec.getSubterm(0).getSubterm(1).getSubterm(0));
+        
+        generatedJavaClasses.add(
+            bin + sep 
+          + (relPackageName == null || relPackageName.isEmpty() ? "" : (relPackageName + sep))
+          + decName + ".class");
+      
         driverResult.appendToFile(javaOutFile, SDFCommands.prettyPrintJava(dec, interp) + "\n");
       } finally {
         log.endTask();
@@ -1378,4 +1417,8 @@
     
     return term;
   }
+  
+  public synchronized void interrupt() {
+    this.interrupt = true;
+  }
 }

Modified: sugarj/trunk/compiler/org/sugarj/driver/Log.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/Log.java	Fri May  6 14:09:57 2011	(r22790)
+++ sugarj/trunk/compiler/org/sugarj/driver/Log.java	Fri May  6 14:11:32 2011	(r22791)
@@ -95,6 +95,15 @@
     System.out.println(text);
   }
   
+  public synchronized void logErr(String text) {
+    if (silent >= 0)
+      return;
+    
+    noLongerLeaf();
+    indent();
+    System.err.println(text);
+  }
+  
   private void noLongerLeaf() {
     if (!lightweight.empty() && lightweight.peek()) {
       lightweight.pop();

Modified: sugarj/trunk/compiler/org/sugarj/driver/PendingResult.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/PendingResult.java	Fri May  6 14:09:57 2011	(r22790)
+++ sugarj/trunk/compiler/org/sugarj/driver/PendingResult.java	Fri May  6 14:11:32 2011	(r22791)
@@ -8,7 +8,18 @@
 import org.spoofax.jsglr.shared.BadTokenException;
 
 class PendingResult extends Result {
-  final static PendingResult instance = new PendingResult(); 
+  public final static PendingResult Placeholder = new PendingResult(null);
+  
+  public final Driver driver;
+  
+  public PendingResult(Driver driver) {
+    this.driver = driver;
+  }
+  
+  public void interrupt() {
+    if (driver != null)
+      driver.interrupt();
+  }
   
   boolean isUpToDate() {
     return true;

Modified: sugarj/trunk/compiler/org/sugarj/driver/Result.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/Result.java	Fri May  6 14:09:57 2011	(r22790)
+++ sugarj/trunk/compiler/org/sugarj/driver/Result.java	Fri May  6 14:11:32 2011	(r22791)
@@ -1,7 +1,5 @@
 package org.sugarj.driver;
 
-import static org.sugarj.driver.Environment.sep;
-
 import java.io.File;
 import java.io.IOException;
 import java.util.Collection;
@@ -9,8 +7,8 @@
 import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
-import java.util.Set;
 import java.util.Map.Entry;
+import java.util.Set;
 
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.jsglr.shared.BadTokenException;
@@ -21,7 +19,7 @@
   private Set<IStrategoTerm> editorServices = new HashSet<IStrategoTerm>();
   private Set<BadTokenException> collectedErrors = new HashSet<BadTokenException>();
   private IStrategoTerm sugaredSyntaxTree = null;
-  private String generatedClassFile;
+  private List<String> generatedJavaClasses;
   private String desugaringsFile;
 
   void addFileDependency(String file) throws IOException {
@@ -51,8 +49,10 @@
   }
   
   boolean isUpToDate() throws IOException {
-    if (generatedClassFile != null && !new File(generatedClassFile).exists())
-      return false;
+    if (generatedJavaClasses != null)
+      for (String classFile : generatedJavaClasses)
+        if (!new File(classFile).exists())
+          return false;
 
     for (Entry<String, Integer> entry : fileDependencyHashes.entrySet())
       if (FileCommands.fileHash(entry.getKey()) != entry.getValue())
@@ -81,12 +81,8 @@
     return sugaredSyntaxTree;
   }
 
-  void compileJava(String javaOutFile, String bin, List<String> path, String relPackageName) throws IOException {
-    generatedClassFile = 
-      bin + sep 
-      + (relPackageName == null || relPackageName.isEmpty() ? "" : (relPackageName + sep))
-      + FileCommands.fileName(javaOutFile) + ".class";
-    
+  void compileJava(String javaOutFile, String bin, List<String> path, List<String> generatedJavaClasses) throws IOException {
+    this.generatedJavaClasses = generatedJavaClasses;    
     JavaCommands.javac(javaOutFile, bin, path);
   }
   

From M.A.Akhter at student.tudelft.nl  Fri May  6 16:12:53 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Fri, 06 May 2011 14:12:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22792 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen:
	esv sdf
Message-ID: <20110506141253.4EC452B8009@mx2.tudelft.nl>

Author: MdAdilAkhter
Date: Fri May  6 14:12:53 2011
New Revision: 22792
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22792&sc=1

Log:
* ESV generation is also updated with new IO lib

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Fri May  6 14:11:32 2011	(r22791)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Fri May  6 14:12:53 2011	(r22792)
@@ -36,11 +36,12 @@
  			 project-path             := <ProjectPath>;
  			 Package(package-qname)   := <GetEnclosingPackageName>
  		where 
-			<debug-compiler>$[codegen | ESV | generate-esv-main  : [<pp-aterm>package-qname]]
+			<debug-compiler>$[codegen | ESV | Generate-esv-main  : [<pp-aterm>package-qname]]
 		with	 
  			 relative-autogen-path :=  <qname-to-path>package-qname
  			;package-esv-main-name := $[[<convert-qname(|"-")>package-qname].main.packed]
  			;autogen-dir           :=$[[<Autogenerated-Artifacts-Dir>]/[relative-autogen-path]]
+ 			;root-directory 			 := $[[project-path]/[<Autogenerated-Artifacts-Dir>]] 
  		where 
  			{|  Declared-Language-Description,Declared-Builders-Description,Declared-Colorer-Description,
  					Declared-Folding-Description,Declared-Outliner-Description,Declared-References-Description,
@@ -57,21 +58,10 @@
  			 								<all-keys-Declared-Completions-Description>
  			 							   )
  			|} 
- 			//;esv-aterm := Module(package-esv-main-name, <get-all-imports>module-qname*, sections) 
  			;esv-aterm := Module(package-esv-main-name, Import([]), sections) 
-		where 
-			<debug-compiler>$[codegen | ESV | Creating content for the ESV Main of package [<pp-aterm>package-qname]. ]	  
- 		where
- 			// Saving the content to a file . 	
-			autogen-root-directory := $[[project-path]/[<Autogenerated-Artifacts-Dir>]]
-			;<ensure-exists>(autogen-root-directory , package-qname)
-			//TODO : create a consistent namming for the file name + move it to lib 
-			;output-path := <get-main-esv-output-path(|"esv")>(autogen-root-directory , package-qname)   
-			;<WriteToBinaryFile>(output-path ,esv-aterm)
-			;<refresh-file>output-path
-			;chdir-to-project-path
+ 			;<save-artifact(WriteToBinaryFile | package-qname , root-directory , <get-main-esv-output-path(|"esv")>(root-directory , package-qname))>esv-aterm
 		where
-			<debug-compiler>$[ Codegen | ESV | Finishing generation of packed esv for [<pp-aterm>package-qname].]
+			<debug-compiler>$[ Codegen | ESV | Finished generation of packed esv for [<pp-aterm>package-qname].]
 		 		
 	
 	/*

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Fri May  6 14:11:32 2011	(r22791)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Fri May  6 14:12:53 2011	(r22792)
@@ -102,20 +102,17 @@
  
  	
  	sdf-import-adapter : name  -> 	'module(unparameterized(name))
- 	where debug(!" in sdf-import-adapter: " )
  	where 
  		<is-string>name
  	
  	sdf-import-adapter : legacy-artifact at Name(name)  -> 	result
- 	where debug(!" in sdf-import-adapter : legacy : " )
  	where 
  			if(<UsedLegacyArtifacts>(Globals(), name) => Unresolved()) then
  				result := [] 
  			else 
  				result :=  'module(unparameterized(name)) 
 			end 
-	where
-		<debug(!" in sdf-import-adapter : legacy : " )> result		
+			
 
 rules
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Fri May  6 14:11:32 2011	(r22791)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Fri May  6 14:12:53 2011	(r22792)
@@ -74,7 +74,7 @@
  			sig-file-name := "Globals/Signatures";
  			sig-file-rel-path := $[[<Autogenerated-Artifacts-Dir>]/[sig-file-name]]
 		where 
-			<debug-compiler>$[Codegen|Generating deafult signatures]			
+			<debug-compiler>$[Codegen | SDF | Generating deafult signatures]			
 			;generated-signatures-string :=  <get-signature-contents(|sig-file-name,"")><get-all-signatures-as-string(?(Globals(), _))>
 			;signatures-as-aterm-string := <to-signature-as-rtree >generated-signatures-string
 		where  
@@ -102,7 +102,7 @@
  			 package-typed-qname := <GetEnclosingPackageName> 
 			;module-typed-qname  := <GetEnclosingModuleName> 
 			<+ 
-			<debug-compiler>$[Codegen | Failed to create current scope.]
+			<debug-compiler>$[Codegen | SDF | Failed to create current scope.]
 			;fail
 		where
 			 !module-typed-qname  => Module(module-untyped-qname)
@@ -112,11 +112,11 @@
 			sig-file-name     :=  <get-signature-file-name><qname-to-path>module-untyped-qname;
 			sig-file-rel-path := $[[<Autogenerated-Artifacts-Dir>]/[<qname-to-path>module-untyped-qname]]
 		where 
-			<debug-compiler>$[Codegen|Generating signature for the following module: [<pp-aterm>module-typed-qname]]			
+			<debug-compiler>$[Codegen| SDF | Generating signature for the following module: [<pp-aterm>module-typed-qname]]			
 			;imports-string := $[imports 
 				Globals/Signatures
 			]
-			;generated-signatures-string :=  <get-signature-contents(|sig-file-name,imports-string)>
+			;generated-signatures-string :=  <get-signature-contents(|sig-file-name,imports-string)> <get-all-signatures-as-string(?(package-typed-qname, module-typed-qname, _))>
 			;signatures-as-aterm-string := <to-signature-as-rtree >generated-signatures-string
 		where  
 			<save-artifact(save-to-file| package-untyped-qname, root-directory, <get-output-path(|"signature", "str")>(root-directory, module-untyped-qname))>generated-signatures-string;

From seba at informatik.uni-marburg.de  Fri May  6 16:14:14 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Fri, 06 May 2011 14:14:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22793 -
	sugarj/trunk/case-studies/xml/schema
Message-ID: <20110506141414.7E00FCC0F1@mx4.tudelft.nl>

Author: SebastianErdweg
Date: Fri May  6 14:14:14 2011
New Revision: 22793
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22793&sc=1

Log:
not needed anymore

Deleted:
   sugarj/trunk/case-studies/xml/schema/XmlSchemaCompiled.sugj

From M.A.Akhter at student.tudelft.nl  Fri May  6 16:54:28 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Fri, 06 May 2011 14:54:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22794 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen
Message-ID: <20110506145428.D1AFF7F8025@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Fri May  6 14:54:27 2011
New Revision: 22794
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22794&sc=1

Log:
adapted build file for new code generation policies

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str	Fri May  6 14:14:14 2011	(r22793)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str	Fri May  6 14:54:27 2011	(r22794)
@@ -128,7 +128,7 @@
   <condition property="java.jar.classpath" value=":${include}/${package.main.str.module}-java.jar" else="">
       <isset property="java.jar.enabled"/>
   </condition>
-  <available file="${package.path}/${package.main.str.module}.rtree" property="build.stratego.enabled"/>
+  <available file="${packages.root}/${package.main.str.module}.rtree" property="build.stratego.enabled"/>
   <dirname property="externaldefdir" file="${externaldef}"/>
   <condition property="externaldefimport" value="-I ${externaldefdir}" else="">
       <isset property="externaldef"/>
@@ -143,7 +143,7 @@
       <isset property="externaljarflags"/>
   </condition>
   <condition property="metasdfmodule.available" value="1">
-      <available file="${package.path}/${metasdfmodule}.sdf"/>
+      <available file="${packages.root}/${metasdfmodule}.sdf"/>
   </condition>
     
 	<fail unless="build" message="Please use build.spx.main.xml to build this project or configure the required properties manually"/>
@@ -234,7 +234,7 @@
         <java classname="run" failonerror="true">
             <arg value="org.strategoxt.tools.main-pack-sdf"/>
             <arg value="-i"/>
-            <arg value="${package.path}/${package.main.sdf.module}.sdf"/>
+            <arg value="${packages.root}/${package.main.sdf.module}.sdf"/>
             <arg value="-o"/>
             <arg value="${include}/${package.name}.def"/>
             <arg value="-I"/>
@@ -419,7 +419,7 @@
 	
   <!-- Aster to Stratego -->
    <target name="stratego.aster">
-       <available file="${package.path}/${package.main.str.module}.rtree" property="aster-output.available"/>
+       <available file="${packages.root}/${package.main.str.module}.rtree" property="aster-output.available"/>
        <pathconvert property="aster-input" setonempty="false" pathsep=" ">
            <path><fileset dir="${basedir}" includes="*.astr"/></path>
        </pathconvert>
@@ -427,15 +427,15 @@
            <srcfileset dir="${basedir}">
                <include name="**/*.astr"/>
            </srcfileset>
-           <targetfileset file="${package.path}/${package.main.str.module}.rtree"/>
+           <targetfileset file="${packages.root}/${package.main.str.module}.rtree"/>
        </dependset>
        <condition property="aster-output.uptodate">
            <and>
                <isset property="aster-output.available"/>
-               <available file="${package.path}/${package.main.str.module}.rtree"/>
+               <available file="${packages.root}/${package.main.str.module}.rtree"/>
            </and>
        </condition>
-       <available file="${package.path}/${package.main.str.module}.rtree" property="aster-output.uptodate"/>
+       <available file="${packages.root}/${package.main.str.module}.rtree" property="aster-output.uptodate"/>
        <antcall target="stratego.aster.helper"/>
    </target>
 
@@ -508,13 +508,13 @@
   	<delete file="${include}/${package.name}.rtree" failonerror="false"/>
   	<java classname="org.strategoxt.strj.Main" failonerror="true">
   		<arg value="-I"/>
-    	<arg value="${packages.root}"/>
+    	<arg value="${packages.path}"/>
   		<arg value="-i"/>
-      <arg value="${package.path}/${package.main.str.module}.str"/>
+      <arg value="${packages.root}/${package.main.str.module}.str"/>
       <arg value="-o"/>
       <arg value="${build.stratego.outputfile}"/>
   		<arg value="-p"/> 
-  	  <arg value="${package.qname}"/>
+  	  <arg value="${package.qname}"/>  <!-- TODO : after incorporating lang name in code  generation package.qname will be package.main.str.module -->
       <arg value="--library"/>
       <arg value="--clean"/>
   		<arg line="${build.stratego.args}"/>
@@ -536,8 +536,8 @@
 	  <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
 	        
 		<target name="sdf2imp.eclipse" if="eclipse.running" >
-			<copy file="${package.path}/${package.main.esv.module}.esv" tofile="${include}/${package.name}.packed.esv" preservelastmodified="true"/>
-			<copy file="${package.path}/${package.main.esv.module}.esv" tofile="${include}/${package.name}.main.esv" preservelastmodified="true"/>
+			<copy file="${packages.root}/${package.main.esv.module}.esv" tofile="${include}/${package.name}.packed.esv" preservelastmodified="true"/>
+			<copy file="${packages.root}/${package.main.esv.module}.esv" tofile="${include}/${package.name}.main.esv" preservelastmodified="true"/>
 			<antcall target = "refresh"/>  
 			<java classname="org.strategoxt.imp.metatooling.building.AntSpxDescriptorBuilder" failonerror="true">
 				<arg value="${include}/${package.name}.packed.esv"/> <!-- esv main file-->
@@ -547,7 +547,7 @@
   <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2table,sdf2rtg">
 		<java classname="org.strategoxt.imp.generator.sdf2imp" failonerror="true">
 			<arg value="-i"/>
-      <arg value="${package.path}/${package.main.esv.module}.packed.esv"/>
+      <arg value="${packages.root}/${package.main.esv.module}.packed.esv"/>
       <arg value="-p"/>
       <arg value="${include}/${package.name}.tbl"/>
     </java>

From m.dejonge at tudelft.nl  Sat May  7 21:02:34 2011
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Sat, 07 May 2011 19:02:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22795 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.stratego:
	lib-refactoring trans
Message-ID: <20110507190234.5A5BACC103@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Sat May  7 19:02:32 2011
New Revision: 22795
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22795&sc=1

Log:
- renaming a collection of names
- renaming dynrules bagof- ...

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib-refactoring/rename-generic.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib-refactoring/user-interaction.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/rename.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib-refactoring/rename-generic.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib-refactoring/rename-generic.str	Fri May  6 14:54:27 2011	(r22794)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib-refactoring/rename-generic.str	Sat May  7 19:02:32 2011	(r22795)
@@ -60,7 +60,29 @@
     where
       <report-invalid-selection> ref-name;
       renamed-asts := <apply-renaming(|ref-name, new-name)> analyzed-asts;
-      <report-semantic-issues(re-analyse, collect-sem-errors|ref-name, new-name)> (analyzed-asts, renamed-asts);
+      endangered-names := [<rm-annotations> ref-name, new-name];
+      <report-semantic-issues(re-analyse, collect-sem-errors|endangered-names)> (analyzed-asts, renamed-asts);
+      changed-asts := <get-changed-asts> (analyzed-asts, renamed-asts)
+
+  /**
+   * Handles rename refactoring workflow.
+   * Input: asts annotated with unique names
+   * REMARK: save all resources before collecting ASTs and applying the refactoring 
+   * - Checks if selected term is indeed a reference or declaration name
+   * - Checks if the semantic errors before and after the transformation are the same
+   * - Checks if the name bindings are preserved
+   * @type (List(T)) -> List((T, T'))
+   * @param List(T) -> List(T) strategy that annotates all names with a unique reference name. 
+   * @param List(T) -> List(ERROR), with ERROR either a string or a tuple (term, String)   
+   * @param List(String, String) list with changes that should be applied (s{ref}, s') renames s{ref} to s'
+   */
+  apply-rename-refactoring(re-analyse, collect-sem-errors|renamings):
+    analyzed-asts -> changed-asts
+    where
+      <map(Fst; report-invalid-selection)> renamings;
+      renamed-asts := <apply-renaming(|renamings)> analyzed-asts;
+      endangered-names := <unzip; conc; make-set; map(rm-annotations)> renamings;
+      <report-semantic-issues(re-analyse, collect-sem-errors|endangered-names)> (analyzed-asts, renamed-asts);
       changed-asts := <get-changed-asts> (analyzed-asts, renamed-asts)
             
   report-invalid-selection = 
@@ -68,22 +90,22 @@
       message-invalid-selection
     end
     
-  report-semantic-issues(analyse, collect-sem-errors|ref-name, new-name) =
-    check-semantics(analyse, collect-sem-errors|ref-name, new-name);
+  report-semantic-issues(analyse, collect-sem-errors|endangered-names) =
+    check-semantics(analyse, collect-sem-errors|endangered-names);
     (
     	report-semantic-problems <+
     	(try(dr-scope-all-end); dr-scope-all-start; fail) //do not store analysis results in name tables after rollback
     	//TODO: better solution
     )
     
-  check-semantics(analyse, collect-sem-errors|ref-name, new-name) :
+  check-semantics(analyse, collect-sem-errors|endangered-names) :
     (analyzed-asts, asts-after) -> (var-capture-warnings, <make-set> introduced-errors, <make-set> solved-errors)
     where    	
       errors-before        := <get-sem-errors(collect-sem-errors)> analyzed-asts; //debug(!"errors before: ");
       analyzed-asts-after  := <analyse> asts-after; //debug(!"asts-after: ");
       errors-after         := <get-sem-errors(collect-sem-errors)> analyzed-asts-after; //debug(!"errors after: ");
       (introduced-errors, solved-errors) := <check-consistency-changes> (errors-before, errors-after); 
-      var-capture-warnings := <check-var-captures(|ref-name, new-name)> (analyzed-asts, analyzed-asts-after)
+      var-capture-warnings := <check-var-captures(|endangered-names)> (analyzed-asts, analyzed-asts-after)
     	   	
   get-changed-asts:
     (asts-before, asts-after) -> changed-asts
@@ -99,6 +121,15 @@
     topdown(try(?ref-name; !new-name)); 
     topdown(try(strip-annos))
     
+  apply-renaming (|renamings) =
+    topdown(try(rename-identifier(|renamings))); 
+    topdown(try(strip-annos))
+  
+  rename-identifier(|renamings):
+  	refname -> newname{ref}
+  	where
+  	<?_{ref}> refname;
+  	<fetch-elem(?(refname, newname))> renamings
     
 rules // consistency preservation
   
@@ -117,35 +148,34 @@
   	  
 rules // behaviour preservation: invariant check for variabele capture
 
-  check-var-captures(|ref-name, new-name):
+  check-var-captures(|endangered-names):
     (analyzed-asts, analyzed-asts-after) -> errors
     where
-      old-name := <strip-annos> ref-name; 
       errors   := <
-        get-var-captures(|old-name, new-name);
+        get-var-captures(|endangered-names);
         map(!(<id>, <!$[Variabele captures detected for '[<strip-annos>]']>))
       > (analyzed-asts, analyzed-asts-after)
   
-  get-var-captures(|old-name, new-name):
+  get-var-captures(|endangered-names):
     (analyzed-asts, analyzed-asts-after) -> var-captures
     where 
       paired-asts     := <zip> (analyzed-asts, analyzed-asts-after); //external definitions of transformed asts should not be obtained from cache
-      reference-pairs := <map(get-paired-references(|old-name, new-name)); flatten-list> paired-asts;
+      reference-pairs := <map(get-paired-references(|endangered-names)); flatten-list> paired-asts;
       var-captures    := <check-invariant; map(Fst)> reference-pairs
     
   //compares the references of analysed ast before- and after- rename transformation     
-  get-paired-references(|old-name, new-name):
+  get-paired-references(|endangered-names):
     (ast-before, ast-after) -> ref-pairs
     where
-      invariant_before := <get-listed-refnames(|old-name, new-name)> ast-before; //debug(!"invariant before: ");
-      invariant_after  := <get-listed-refnames(|old-name, new-name)> ast-after; //debug(!"invariant after: ");
+      invariant_before := <get-listed-refnames(|endangered-names)> ast-before; //debug(!"invariant before: ");
+      invariant_after  := <get-listed-refnames(|endangered-names)> ast-after; //debug(!"invariant after: ");
       ref-pairs     := <zip> (invariant_before, invariant_after)
           
-  get-listed-refnames(|old-name, new-name) =
+  get-listed-refnames(|endangered-names) =
     collect-om(
       where(
       	strip-annos;
-      	(equal(|old-name) <+ equal(|new-name))
+      	<elem> (<id>, endangered-names)
       ),
       conc
     )

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib-refactoring/user-interaction.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib-refactoring/user-interaction.str	Fri May  6 14:54:27 2011	(r22794)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib-refactoring/user-interaction.str	Sat May  7 19:02:32 2011	(r22795)
@@ -33,8 +33,10 @@
   message-unexpected-failure =
     <message-errors> "Refactoring fails unexpectedly, no changes are made"
       
-  message-invalid-selection =
-    <message-errors> "Refactoring is not applicable to the selected fragment"
+  message-invalid-selection :
+  	selection -> <message-errors> 
+  	$[Refactoring is not applicable to the selected fragment: 
+  	'[<write-to-string; string-as-chars(take(|100))> selection]']
   
   message-invalid-input =
     <message-errors> "Refactoring is not applicable with this input"
@@ -105,7 +107,7 @@
   make-error-string :
     (term, message) -> error-string
     where 
-      if (txt, line, column):= <origin-source-info> then  //TODO: filename
+      if (txt, line, column):= <origin-source-info> term then  //TODO: filename
         error-string := $[ ([line],[column]): [message]] 
       else 
         error-string := message

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/rename.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/rename.str	Fri May  6 14:54:27 2011	(r22794)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/rename.str	Sat May  7 19:02:32 2011	(r22795)
@@ -30,13 +30,29 @@
       ast-change-tuples := <apply-rename-refactoring(
       	re-analyse-names, 
       	collect-sem-errors |
-      	ref-name,
-      	newname
+      	<get-renamings> (ref-name, newname)
       )> asts
- 
+  
+  get-renamings:
+  	r@(refname, newname) -> renamings
+  	where
+  	  <?_{ref}> refname;
+      if <Declaration; ?RDecT(oldname, _, _)> ref then 
+      	old-names := <prefixes-dynrules; map(!$[[<id>]-[oldname]]{ref})>;
+      	new-names := <prefixes-dynrules; map(!$[[<id>]-[newname]])>;
+      	renamings := [(oldname{ref}, newname)|<zip>(old-names, new-names)]
+      else
+      	renamings := [r]
+      end
+
+  prefixes-dynrules =
+  	!["once", "bagof", "bigbagof", "all-keys", "innermost-scope", "break", "break-bp", 
+  	  "continue", "chain", "bigchain", "new", "undefine", "aux", "reverse-bagof", "innermost-scope",
+  	  "break-to-label","continue-to-label", "throw", "fold", "bigfold"]
+
 rules //precondition checks
 
-//TODO: better solution?	
+//TODO: better solution
 //FIXME: no declaration outside asts (lib or generated), since these files are not changed
 //NOW: a declaration in asts exists
 precondition-error(|ref-name):
@@ -44,8 +60,13 @@
 	where
 	  <?_{ref}> ref-name; 
 	  <is-global-ref> ref; 
-	  decl := <Declaration> ref; 
-	  <not(topdown(strip-annos); oncetd(equal(|decl)))> asts
+	  decl := <Declaration> ref;
+	  decl-cons := <get-constructor> decl;
+	  <not(oncetd(
+	  	if <equal> (<get-constructor>, decl-cons) then 
+	  		topdown(strip-annos) 
+	  	end; 
+	  	equal(|decl)))> asts
 
 rules //name analysis
     

From M.A.Akhter at student.tudelft.nl  Sat May  7 21:32:50 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sat, 07 May 2011 19:32:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22796 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen
Message-ID: <20110507193250.1F077108C00F@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Sat May  7 19:32:49 2011
New Revision: 22796
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22796&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str	Sat May  7 19:02:32 2011	(r22795)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str	Sat May  7 19:32:49 2011	(r22796)
@@ -238,7 +238,9 @@
             <arg value="-o"/>
             <arg value="${include}/${package.name}.def"/>
             <arg value="-I"/>
-            <arg value="${package.path}"/>
+            <arg value="${packages.root}"/>
+            <arg value="-I"/>
+            <arg value="${packages.path}"/>
             <arg value="-I"/>
             <arg value="${lib}"/>
             <arg line="${utils-include}"/>

From M.A.Akhter at student.tudelft.nl  Sat May  7 21:33:11 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sat, 07 May 2011 19:33:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22797 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test
Message-ID: <20110507193311.65490108C02E@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Sat May  7 19:33:11 2011
New Revision: 22797
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22797&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/test-without-package.spx

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/test-without-package.spx
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/test-without-package.spx	Sat May  7 19:32:49 2011	(r22796)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/test-without-package.spx	Sat May  7 19:33:11 2011	(r22797)
@@ -8,6 +8,6 @@
 	    "module" ID Definition*       -> Start {cons("Module")}
 	    "entity" ID "{" Property* "}" -> Definition {cons("Entity")}
 	    ID ":" Type                   -> Property {cons("Property")}
-	    ID                            -> Type {cons("Type")}  
- 
+	    ID                            -> Type {cons("Type")}   
+  
  
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Sun May  8 00:21:06 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sat, 07 May 2011 22:21:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22798 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	context normalize
Message-ID: <20110507222106.2C871CC03E@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Sat May  7 22:21:04 2011
New Revision: 22798
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22798&sc=1

Log:
* added DR to store language name in symbol table

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str	Sat May  7 19:33:11 2011	(r22797)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str	Sat May  7 22:21:04 2011	(r22798)
@@ -67,7 +67,14 @@
 			rules( Declaration : (Type, scoped-x) -> x)
 		where
 			<debug-symboltable>$[ScopeTree|Storing Declaration [<pp-aterm>(Type, scoped-x)] -> [<pp-aterm>x]]	
-		
+	
+	store-langauge-name (| package-typed-qname ) : 
+		LanguageName(name) -> <id>
+		with 
+			<debug> $[ [<pp-aterm>package-typed-qname] has following language name : [<pp-aterm>name]]
+		with 
+			rules( DeclaredLangaugeName :+ package-typed-qname -> name)		
+
 rules 
 	get-module-abs-filepath : Module(qname) -> result
 	where 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str	Sat May  7 19:33:11 2011	(r22797)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str	Sat May  7 22:21:04 2011	(r22798)
@@ -104,9 +104,10 @@
 		  enclosing-module-name   								:=  [package-name-part*| [mod-name-string]];
 		  enclosing-module-qname   								:=  QName(enclosing-module-name) 
 		where 
-			{| EnclosingNamespace:
+			{| EnclosingNamespace, EnclosingParentNamespace:
 			  	rules(
-						EnclosingNamespace 								:= 	Module(enclosing-module-qname)  
+						EnclosingNamespace 								:= 	Module(enclosing-module-qname)
+						EnclosingParentNamespace					:= package   
 					);
 					sections' := <conc>(<reverse><bagof-PackageCommonImports>, <alltd(desugar-spx)>section*)
 					;<debug-symboltable> $[ Storing enclosing namespace : [<pp-aterm>enclosing-module-qname]]
@@ -120,7 +121,7 @@
 			<store-scope-reference>(Module(enclosing-module-qname),  package);
 			<store-original-declaration(|Modules())>(enclosing-module-qname,  m) // stored original ast 
 		
-		 
+		  
 		
 	//Desugaring SDF Sections 
 	desugar-spx : SDFSection ( sectionDef ) -> <add-annotation(|<EnclosingNamespace>)> <id>
@@ -132,8 +133,7 @@
 	
 	//Desugaring ESV Sections 
 	desugar-spx : ESVSection ( sectionDef ) -> <add-annotation(|<EnclosingNamespace>)> <id>
-	
-	
-
+		with
+			<alltd(store-langauge-name(|<EnclosingParentNamespace>))>sectionDef 
 
 			
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Sun May  8 03:05:27 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sun, 08 May 2011 01:05:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22799 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans: .
	analyze analyze/esv analyze/sdf codegen codegen/esv
	codegen/sdf codegen/str context context/sdf co...
Message-ID: <20110508010527.E60A07F8010@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Sun May  8 01:05:26 2011
New Revision: 22799
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22799&sc=1

Log:
* adding more constraint checks. 
* re-factoring scope-tree a bit.

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/contracts.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str	Sun May  8 01:05:26 2011	(r22799)
@@ -0,0 +1,111 @@
+module analyze/check-module
+
+imports 
+	context/sdf/declare
+	context/scope-tree
+	normalize/signatures
+imports 
+	include/SpoofaxLang
+imports
+	common
+	utils/annotations
+	utils/debug	
+imports 
+	analyze/sdf/check 
+	analyze/esv/check
+	analyze/str/check 
+	analyze/main
+	lib/editor-common.generated
+imports 
+	utils/contract 	
+	spoofaxlang
+
+rules	
+	//module specific semantic error checking 	
+	module-constraint-error : 
+		Module(attrb* , s at SPXModuleName(modname) , section*) -> (modname, $[Multiple declaration of module '[modname]' ])
+			with
+				package-typed-qname := <get-annotation(get-package-annotation)> s
+				;Module(module-qname)  := <get-module-typed-qname>(package-typed-qname, s)
+			where 
+				require(<bagof-DeclaredModule>module-qname => [_])
+
+rules
+	
+	analyze: 
+		m at Module(attrb* , modname , section*) -> m
+		with
+				 package-typed-qname := <GetEnclosingPackageName> 
+				;module-typed-qname  := <GetEnclosingModuleName>
+				<+ 
+				debug(!"ErrorChecking | Failed to create current scope.")
+				;fail
+		with
+				<debug-analysis>$[ErrorChecking | Analyzing Semantic Problems of [<pp-aterm-forced> (package-typed-qname,module-typed-qname)]]	 
+				;issues* := <map(analyze-section)>section*
+				;unziped-issues* := <unzip-semantic-issuses>issues*
+		where		 
+				<append-semantic-problems(analyze-module-semantics|unziped-issues*)> m  => unziped-issues'*
+				;current-scope := (package-typed-qname ,module-typed-qname)
+				;rules(
+						GetSemanticProblems :  current-scope  ->unziped-issues'*  
+				)	
+		where
+			<debug-compiler>$[ErrorChecking | Found semantic problems for [<pp-aterm-forced> (package-typed-qname,module-typed-qname)]  
+			Problems :[<pp-aterm-forced> unziped-issues*]]
+							
+rules 
+			 
+	analyze-section = 
+		where(not(?SDFSection(_) + ?ESVSection(_) + ?STRSection(_) + ?SDFSectionEH(_, _)))
+		;<debug-analysis>$[ErrorChecking | Ignoring Section: [<pp-aterm>]] 
+		;!([], [], [])		
+
+	analyze-section: 
+			SDFSectionEH(_, ast) -> <analyze-sdf-errors>ast
+	
+	analyze-section: 
+			SDFSection(ast) -> <analyze-sdf-errors>ast 
+			where
+				<debug-analysis>$[ErrorChecking | SDF Section : [<pp-aterm>]]
+    	with
+	      // We only collect-om since we don't want inner warning dupes
+	      error*   := <collect-om(?context-free-syntax(<collect-om(context-free-syntax-error)>), conc)> ast;
+	      warning* := <collect-om(?context-free-syntax(<collect-om(context-free-syntax-warning)>), conc)> ast;
+	      if <file-exists> $[[<get-project-path>]/.disable-global-analysis] then
+	        serror* := []
+	      else
+	        serror* := <collect-om(context-free-syntax-sort-error, conc)> ast
+	      end;
+	      error'*   := <conc;flatten-list> (serror*, error*);
+	      warning'* := <flatten-list> warning*
+	
+	analyze-sdf-errors : ast -> (error'*, warning'*, [])
+	where
+		<debug-analysis>$[ErrorChecking | SDF Section : [<pp-aterm>]]
+	with
+    // We only collect-om since we don't want inner warning dupes
+    error*   := <collect-om(?context-free-syntax(<collect-om(context-free-syntax-error)>), conc)> ast;
+    warning* := <collect-om(?context-free-syntax(<collect-om(context-free-syntax-warning)>), conc)> ast;
+    if <file-exists> $[[<get-project-path>]/.disable-global-analysis] then
+      serror* := []
+    else
+      serror* := <collect-om(context-free-syntax-sort-error, conc)> ast
+    end;
+    error'*   := <conc;flatten-list> (serror*, error*);
+    warning'* := <flatten-list> warning*
+	       
+  analyze-section: 
+		ESVSection(ast) -> (error-esv*, [], [])
+  	where
+  		<debug-analysis>$[ErrorChecking | ESV Section : [<pp-aterm>]]
+		where
+  		error-esv*   := <collect-all(constraint-esv-error, conc)> ast
+      	
+  analyze-section: 
+		STRSection(ast) -> ( errors, warnings, [])
+		where
+  		<debug-analysis>$[ErrorChecking | STR Section : [<pp-aterm>]]
+		with
+    	errors   := <collect-all(global-constraint-error + constraint-error, conc)> ast;
+      warnings := <collect-all(constraint-warning, conc)> ast
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str	Sun May  8 01:05:26 2011	(r22799)
@@ -0,0 +1,33 @@
+module analyze/check-package 
+
+imports 
+	context/sdf/declare
+	context/scope-tree
+  context/store-imports
+  context/resolve-symbols
+	normalize/signatures
+imports 
+	include/SpoofaxLang
+imports
+	common
+	utils/annotations
+	utils/debug	
+imports 
+	analyze/sdf/check 
+	analyze/esv/check
+	analyze/str/check 
+	lib/editor-common.generated
+imports 
+	utils/contract 	
+	spoofaxlang
+	
+	
+rules
+	
+	package-constraint-error :
+		package-typed-qname at Package(untyped-qname) -> <id>
+			
+			 
+		 
+	
+	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str	Sun May  8 01:05:26 2011	(r22799)
@@ -6,9 +6,12 @@
 imports 
 	utils/debug
 	context/scope-tree
+  context/store-imports
+  context/resolve-symbols
+
 imports
   include/SpoofaxLang
-
+ 
 // TODO: warn about multi-char highlighted brackets
 // TODO: check if provider/imported/etc. files exist
 // TODO: check if there is _any_ provider for observer etc.

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str	Sun May  8 01:05:26 2011	(r22799)
@@ -2,7 +2,10 @@
 
 imports 
 	context/sdf/declare
+	
 	context/scope-tree
+  context/store-imports
+  context/resolve-symbols
 	normalize/signatures
 imports 
 	include/SpoofaxLang
@@ -14,38 +17,41 @@
 	analyze/sdf/check 
 	analyze/esv/check
 	analyze/str/check 
+	analyze/check-module
+	analyze/check-package
 	lib/editor-common.generated
 imports 
 	utils/contract 	
 	spoofaxlang
 	
-rules			// Analyze Semantic Errors 
-			
+rules			 
+	// Analyze Semantic Errors
 	should-analyze-this-package = 
 		?package-qname;
 		where(not(<AnalyzedPackage>package-qname))
-		
-
+	
+	// Fails if there is any semantic problems 
 	fail-if-has-errors : problems@(errors, warning, infos*) -> problems
 		where 
 			if not(!errors => []) then 
 		 		fail	
 		 	end		 	 	
 
-
+	// Analyzes SPX packages. 
 	analyze-spx-package: 
 		package-typed-qname at Package(untyped-qname) -> <id>
 		where 
 			<debug-analysis> $[Analyze| Analyze-spx-package| Planning to Analyze : [<pp-aterm>]] 
 		where
-			if should-analyze-this-package  then //FOR handling circular referneces   
-				{|GetEnclosingPackageName:
-						rules ( GetEnclosingPackageName      := package-typed-qname);
-						<list-loop(
-								analyze-spx-module
-							)
-						><get-enclosed-modules>package-typed-qname
-				|};		
+				if should-analyze-this-package  then //FOR handling circular referneces   
+					{|
+						GetEnclosingPackageName:
+							rules ( GetEnclosingPackageName      := package-typed-qname);
+							<list-loop(
+									analyze-spx-module
+								)
+							><get-enclosed-modules>package-typed-qname
+					|};		
 				where(
 					rules(AnalyzedPackage: package-typed-qname -> package-typed-qname)
 				)
@@ -55,6 +61,7 @@
 			end
 
 
+
 	analyze-spx-module: 
 		module-typed-qname at Module(untyped-qname) -> <id>
 		where 
@@ -71,7 +78,7 @@
 				|};
 				module-abs-path := <DeclaredModule>untyped-qname;
 				where(rules(
-					AnalyzedModule:     module-typed-qname -> module-typed-qname
+					AnalyzedModule:     module-typed-qname -> module-typed-qname 
 					AnalyzedModulesDeclaredIn:+ module-abs-path -> module-typed-qname
 					)
 				)
@@ -97,16 +104,6 @@
 			<GetSemanticProblems>scope => problems 
 		where
 			<debug-compiler> $[ErrorChecking |  Problmes found [<pp-aterm-forced>scope] :  [<pp-aterm-forced>problems]]	
-
-rules	
-	//module specific semantic error checking 	
-	module-constraint-error : 
-		Module(attrb* , s at SPXModuleName(modname) , section*) -> (modname, $[Multiple declaration of module '[modname]' ])
-			with
-				package-typed-qname := <get-annotation(get-package-annotation)> s
-				;Module(module-qname)  := <get-module-typed-qname>(package-typed-qname, s)
-			where 
-				require(<bagof-DeclaredModule>module-qname => [_])
 rules 
 	//analyzes module errors returns it as a touple of errors , warnings and infos 
 	analyze-module-semantics : m at Module(attrb* , modname , section*)  -> (merrors',[],[]) 
@@ -122,86 +119,7 @@
 		combined-problmes* := [(merrors,mwarnings,minfos),(err, warning, info)]
 	where		
 		<unzip-semantic-issuses>combined-problmes*=> semantic-problems* 
-		
-rules
-	
-	analyze: 
-		m at Module(attrb* , modname , section*) -> m
-		with
-				 package-typed-qname := <GetEnclosingPackageName> 
-				;module-typed-qname  := <GetEnclosingModuleName>
-				<+ 
-				debug(!"ErrorChecking | Failed to create current scope.")
-				;fail
-		with
-				<debug-analysis>$[ErrorChecking | Analyzing Semantic Problems of [<pp-aterm-forced> (package-typed-qname,module-typed-qname)]]	 
-				;issues* := <map(analyze-section)>section*
-				;unziped-issues* := <unzip-semantic-issuses>issues*
-		where		 
-				<append-semantic-problems(analyze-module-semantics|unziped-issues*)> m  => unziped-issues'*
-				;current-scope := (package-typed-qname ,module-typed-qname)
-				;rules(
-						GetSemanticProblems :  current-scope  ->unziped-issues'*  
-				)	
-		where
-			<debug-compiler>$[ErrorChecking | Found semantic problems for [<pp-aterm-forced> (package-typed-qname,module-typed-qname)]  
-			Problems :[<pp-aterm-forced> unziped-issues*]]
-							
-rules 
-			 
-	analyze-section = 
-		where(not(?SDFSection(_) + ?ESVSection(_) + ?STRSection(_) + ?SDFSectionEH(_, _)))
-		;<debug-analysis>$[ErrorChecking | Ignoring Section: [<pp-aterm>]] 
-		;!([], [], [])		
-
-	analyze-section: 
-			SDFSectionEH(_, ast) -> <analyze-sdf-errors>ast
-	
-	analyze-section: 
-			SDFSection(ast) -> <analyze-sdf-errors>ast 
-			where
-				<debug-analysis>$[ErrorChecking | SDF Section : [<pp-aterm>]]
-    	with
-	      // We only collect-om since we don't want inner warning dupes
-	      error*   := <collect-om(?context-free-syntax(<collect-om(context-free-syntax-error)>), conc)> ast;
-	      warning* := <collect-om(?context-free-syntax(<collect-om(context-free-syntax-warning)>), conc)> ast;
-	      if <file-exists> $[[<get-project-path>]/.disable-global-analysis] then
-	        serror* := []
-	      else
-	        serror* := <collect-om(context-free-syntax-sort-error, conc)> ast
-	      end;
-	      error'*   := <conc;flatten-list> (serror*, error*);
-	      warning'* := <flatten-list> warning*
-	
-	analyze-sdf-errors : ast -> (error'*, warning'*, [])
-	where
-		<debug-analysis>$[ErrorChecking | SDF Section : [<pp-aterm>]]
-	with
-    // We only collect-om since we don't want inner warning dupes
-    error*   := <collect-om(?context-free-syntax(<collect-om(context-free-syntax-error)>), conc)> ast;
-    warning* := <collect-om(?context-free-syntax(<collect-om(context-free-syntax-warning)>), conc)> ast;
-    if <file-exists> $[[<get-project-path>]/.disable-global-analysis] then
-      serror* := []
-    else
-      serror* := <collect-om(context-free-syntax-sort-error, conc)> ast
-    end;
-    error'*   := <conc;flatten-list> (serror*, error*);
-    warning'* := <flatten-list> warning*
-	       
-  analyze-section: 
-		ESVSection(ast) -> (error-esv*, [], [])
-  	where
-  		<debug-analysis>$[ErrorChecking | ESV Section : [<pp-aterm>]]
-		where
-  		error-esv*   := <collect-all(constraint-esv-error, conc)> ast
-      	
-  analyze-section: 
-		STRSection(ast) -> ( errors, warnings, [])
-		where
-  		<debug-analysis>$[ErrorChecking | STR Section : [<pp-aterm>]]
-		with
-    	errors   := <collect-all(global-constraint-error + constraint-error, conc)> ast;
-      warnings := <collect-all(constraint-warning, conc)> ast
+
       
 rules
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str	Sun May  8 01:05:26 2011	(r22799)
@@ -4,7 +4,9 @@
  	common
  	utils/debug
   context/sdf/declare
-  context/scope-tree 
+  context/scope-tree
+  context/store-imports
+  context/resolve-symbols
   include/SpoofaxLang
 	
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Sun May  8 01:05:26 2011	(r22799)
@@ -10,6 +10,9 @@
 imports 
 	analyze/main
 	context/scope-tree
+  context/store-imports
+  context/resolve-symbols
+
 	context/signatures
 	context/declare
 imports

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Sun May  8 01:05:26 2011	(r22799)
@@ -13,7 +13,9 @@
 imports 
 	codegen/main 
 	codegen/generate
-	context/scope-tree 
+	context/scope-tree
+  context/store-imports
+  context/resolve-symbols 
 	context/signatures
 imports
 	lib/editor-common.generated

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Sun May  8 01:05:26 2011	(r22799)
@@ -15,7 +15,10 @@
 	lib/editor-common.generated
 	include/spoofaxlang
 imports	
+	
 	context/scope-tree
+  context/store-imports
+  context/resolve-symbols
 	context/signatures
 	normalize/signatures
 imports 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str	Sun May  8 01:05:26 2011	(r22799)
@@ -12,6 +12,8 @@
 	utils/cache
 	lib/editor-common.generated
 	context/scope-tree
+  context/store-imports
+  context/resolve-symbols
 	context/signatures 
 	normalize/signatures  
 	include/spoofaxlang

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Sun May  8 01:05:26 2011	(r22799)
@@ -11,7 +11,10 @@
   lib/sdf-desugar
   lib/sdf-parenthesize  
 imports 
+	
 	context/scope-tree
+  context/store-imports
+  context/resolve-symbols
 	context/signatures
 	context/sdf/declare
 imports

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Sun May  8 01:05:26 2011	(r22799)
@@ -22,6 +22,8 @@
 imports	
 	context/signatures
 	context/scope-tree
+  context/store-imports
+  context/resolve-symbols
 imports	
 	normalize/signatures
 	utils/contract

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Sun May  8 01:05:26 2011	(r22799)
@@ -4,7 +4,10 @@
 	context/sdf/declare
 	context/sdf/declare-signature
 	context/str/declare
+	
 	context/scope-tree
+  context/store-imports
+  context/resolve-symbols
 	context/signatures
 	normalize/signatures 
 imports 
@@ -62,7 +65,7 @@
 	
 	declare-esv-section: STRSection(def*) -> <id>
  
-	declare-esv-section: ESVSection(def*) -> <id>
+	declare-esv-section: ESVSection(def*) -> <id> 
 	
 	
 	

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str	Sun May  8 01:05:26 2011	(r22799)
@@ -0,0 +1,170 @@
+module context/resolve-symbols
+
+imports
+	include/SpoofaxLang 
+	lib/editor-common.generated
+imports 
+	context/signatures
+	context/store-imports
+	context/scope-tree
+	normalize/signatures
+	codegen/compile 
+imports 	
+	common
+	utils/annotations
+	utils/path
+	utils/debug
+	
+	
+rules 
+	get-module-abs-filepath : Module(qname) -> result
+	where 
+			result := <DeclaredModule>qname 
+			<+
+			debug(!"SymbolTable| Failed to retrieve module's abs file path.");fail
+			 
+	get-package-abs-filepath : Module(qname) -> result
+	where 
+			result := <DeclaredPackage>qname 
+			<+
+			debug(!"SymbolTable| Failed to retrieve package's abs file path.");fail
+	
+rules	
+	// Add scopes for the symbol 
+	to-global-symbol =
+		!(Globals(), <id>)
+	<+
+		<debug> $[Type| FAIL | Failed to convert it to Global symbol. <symbol> [<pp-aterm-forced>]]
+		;fail	
+		
+	to-scoped-symbol =  
+		!(<GetEnclosingPackageName> , <GetEnclosingModuleName> , <id>)
+	<+
+		to-global-symbol //if enclosing scope is not declared, then considering the namespace of the Symbol to be global 
+	<+
+		<debug> $[Type| FAIL | Failed to convert it to scoped symbol. 
+										<enclosing package> [<pp-aterm><GetEnclosingPackageName>] <enclosing module>[<pp-aterm-forced><GetEnclosingModuleName>] <symbol> [<pp-aterm-forced>]]
+		;fail	
+		 
+	// Strip Scope and retuns the symbol 
+	remove-scope-from-symbol = ?(_,_, <id>) + ?(Globals(), <id>)
+
+rules
+	
+	//After ensuring result is unique i.e. list contains only one element, it returns the unique result
+	ensure-is-unique = ?[<id>] <+ debug(!"SymbolTable| Failed to resolve unique declaration.");fail
+	
+	//resolving symbol in global scope and returing list of result	
+	resolve-symbol-global-declarations(key-resolver, value-resolver)= 
+		?symbol; // NOTE : symbol does not contain any scope information
+		where(not(?(_,_) <+ ?(_,_,_)));
+		// Looking for the symbol in the Globals() Scope
+		where(<debug-symboltable>$[SymbolResolver| Resoving Symbol in Global Scope.]);
+		<resolve-symbol-declarations-internal(key-resolver, value-resolver,?(Globals() , symbol))>symbol;
+		where(<debug-symboltable>$[SymbolResolver| Resoving Symbol in Global Scope. Result: [<pp-aterm>]]);
+		is-not-empty-list
+	<+
+		<debug-symboltable>$[SymbolTable| FAIL| Failed to resolve following symbol [<pp-aterm>] in Global Scope];
+		fail
+	
+	//resolving symbol in global scope only and ensuring result is unique
+	resolve-symbol-unique-declaration(key-resolver, value-resolver)=
+		where(?( Globals(), symbol ))
+		;<resolve-symbol-global-declarations(key-resolver, value-resolver)> symbol	
+		;ensure-is-unique // verify as resolved unique declaration 
+	<+	
+		<debug-symboltable>$[SymbolTable| FAIL| Failed to retrieve uniqe declaration in global scope."];fail
+	
+	// Resolving unique declaration of symbol in the scope (current-package, current-module)
+	// Symbol is resolved using the specified strategy parameter, i.e. using key-resolved and value-resolved  
+	resolve-symbol-unique-declaration(key-resolver, value-resolver)=
+		?( current-package , current-module, symbol )
+		;<resolve-symbol-unique-declaration(key-resolver, value-resolver|current-package , current-module)>symbol	
+	
+	
+	// resolving unique declaration - generic implementation   
+	resolve-symbol-unique-declaration(key-resolver, value-resolver|current-package , current-module)=
+		resolve-symbol-declarations(key-resolver, value-resolver|current-package , current-module)
+		;ensure-is-unique // verify as resolved unique declaration 
+	<+	
+		<debug-symboltable>$[SymbolTable| Failed to retrieve unique declaration.];fail
+	
+	// resolving declaration in global scope 
+	resolve-symbol-declarations(key-resolver, value-resolver) = 
+		?( Globals(), symbol )
+		;<resolve-symbol-global-declarations(key-resolver, value-resolver)> symbol
+	
+	// resolving declartion in the scope mentioned
+	resolve-symbol-declarations(key-resolver, value-resolver) = 
+		?( current-package , current-module,symbol )
+		;<resolve-symbol-declarations(key-resolver, value-resolver|current-package , current-module)> symbol
+	
+	// resolving declarations incrementally	
+	resolve-symbol-declarations(key-resolver, value-resolver|current-package , current-module)= 
+		?symbol; // NOTE : symbol does not contain any scope information
+		(	
+				// Looking for the symbol in the current Module Scope
+				where(<debug-symboltable>$[SymbolResolver| Resoving [<pp-aterm>symbol] in Current Scope [<pp-aterm>(current-package , current-module)].]);
+				<value-resolver>(current-package , current-module, symbol); 
+				where(<debug-symboltable>$[SymbolResolver| Resoving [<pp-aterm>symbol] in Current Scope. Result: [<pp-aterm>]]);
+				is-not-empty-list
+			<+
+				// Looking for the symbol in the parent enclosing scope => Package Scope
+				where(<debug-symboltable>$[SymbolResolver| Resoving [<pp-aterm>symbol] in Enclosing Package Scope ([<pp-aterm>current-package],_)  or in Global Scope]);
+				<resolve-symbol-declarations-internal(
+					key-resolver, 
+					value-resolver, 
+					?(current-package , _ , symbol) + ?(Globals() , symbol) // NOTE : Currently we combined Globals() + Enclosing package search in ONE loopup.
+				)>symbol;
+				where(<debug-symboltable>$[SymbolResolver| Resoving [<pp-aterm>symbol] in Enclosing Package + Global Scope. Result: [<pp-aterm>]]);				 	 
+		 	 	is-not-empty-list
+			<+
+				where(<debug-symboltable>$[SymbolResolver| Resoving [<pp-aterm>symbol] in Imported Scopes.]);
+				where( 
+					!current-package => Package(untyped-package-qname);
+					!current-module  => Module(untyped-module-qname)
+					;<get-all-usings>( untyped-package-qname , untyped-module-qname) => imported-typedqname*
+					;<debug-symboltable>$[SymbolResolver| Getting List of dependening-on packages/modules : [<pp-aterm>]]
+					
+				);
+				<resolve-imported-symbol-declarations(key-resolver  , value-resolver)>(symbol, imported-typedqname*);
+				where(<debug-symboltable>$[SymbolResolver| Resoving [<pp-aterm>symbol] in Imported Scopes. Result: [<pp-aterm>]]);
+				is-not-empty-list
+			<+
+				<debug-symboltable>$[SymbolTable| FAIL| Failed to resolve following symbol [<pp-aterm>] in namespace [<pp-aterm>(current-package , current-module)]];
+				fail
+		)
+
+	resolve-symbol-declarations-internal(key-resolver,value-resolver,namespace-filter) =
+		key-resolver;
+		filter(namespace-filter);
+	  mapconcat(value-resolver)
+	<+     			 
+		<debug-symboltable>$[SymbolTable| FAIL | resolve-symbol-declarations | Failed to resolve following symbol [<pp-aterm>]]
+		;fail
+
+	resolve-imported-symbol-declarations(key-resolver,value-resolver):
+		(symbol, scopes*) -> resolved*
+		where 
+			if !scopes* => [] then 
+				<debug-symboltable> $[SymbolTable| FAIL| Failed to resolve following symbol: [<pp-aterm>symbol] as there is no scope specified. ];
+				fail
+			else
+				!scopes* => [currentscope|rest*]	
+			end
+		where 
+			if !currentscope => Package(_) then 
+				resolved* := <is-not-empty-list><resolve-symbol-declarations-internal(key-resolver, value-resolver,?(currentscope, _ , symbol))>symbol
+			else
+				if !currentscope => Module(_) then 
+					resolved* := <is-not-empty-list><resolve-symbol-declarations-internal(key-resolver, value-resolver,?(_ , currentscope , symbol))>symbol
+				end
+			end;
+			where(<debug-symboltable>$[SymbolResolver| Resoving Symbol in Imported Scopes. Result: [<pp-aterm>resolved*]. Found in :[<pp-aterm>currentscope] ])
+		<+
+			resolved* := <resolve-imported-symbol-declarations(key-resolver  , value-resolver)> ( symbol, rest*)
+	
+	
+	// Verifies tha tthe current term is not a empty list 
+	is-not-empty-list = ?[_|_] 
+			 
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str	Sun May  8 01:05:26 2011	(r22799)
@@ -4,6 +4,8 @@
 	lib/editor-common.generated
 imports 
 	context/signatures
+	context/store-imports
+	context/resolve-symbols
 	normalize/signatures
 	codegen/compile
 imports 	
@@ -68,274 +70,18 @@
 		where
 			<debug-symboltable>$[ScopeTree|Storing Declaration [<pp-aterm>(Type, scoped-x)] -> [<pp-aterm>x]]	
 	
+	// stores langauge name. It keeps mapping of package name and its defined language-names
+	// extended dynamic rules are used to verify that language name is not declare multple times 
+	// in a package scope. Additional checks will be added to verify a language-name is unique 
+	// in a project scope. 
 	store-langauge-name (| package-typed-qname ) : 
 		LanguageName(name) -> <id>
 		with 
-			<debug> $[ [<pp-aterm>package-typed-qname] has following language name : [<pp-aterm>name]]
+			<debug> $[ ScopeTree| [<pp-aterm>package-typed-qname] storing  following language name : [<pp-aterm>name]]
 		with 
 			rules( DeclaredLangaugeName :+ package-typed-qname -> name)		
 
-rules 
-	get-module-abs-filepath : Module(qname) -> result
-	where 
-			result := <DeclaredModule>qname 
-			<+
-			debug(!"SymbolTable| Failed to retrieve module's abs file path.");fail
-			 
-	get-package-abs-filepath : Module(qname) -> result
-	where 
-			result := <DeclaredPackage>qname 
-			<+
-			debug(!"SymbolTable| Failed to retrieve package's abs file path.");fail
-	
-rules	
-	// Add scopes for the symbol 
-	to-global-symbol =
-		!(Globals(), <id>)
-	<+
-		<debug> $[Type| FAIL | Failed to convert it to Global symbol. <symbol> [<pp-aterm-forced>]]
-		;fail	
-		
-	to-scoped-symbol =  
-		!(<GetEnclosingPackageName> , <GetEnclosingModuleName> , <id>)
-	<+
-		to-global-symbol //if enclosing scope is not declared, then considering the namespace of the Symbol to be global 
-	<+
-		<debug> $[Type| FAIL | Failed to convert it to scoped symbol. 
-										<enclosing package> [<pp-aterm><GetEnclosingPackageName>] <enclosing module>[<pp-aterm-forced><GetEnclosingModuleName>] <symbol> [<pp-aterm-forced>]]
-		;fail	
-		 
-	// Strip Scope and retuns the symbol 
-	remove-scope-from-symbol = ?(_,_, <id>) + ?(Globals(), <id>)
-
-rules
-	
-	//After ensuring result is unique i.e. list contains only one element, it returns the unique result
-	ensure-is-unique = ?[<id>] <+ debug(!"SymbolTable| Failed to resolve unique declaration.");fail
-	
-	//resolving symbol in global scope and returing list of result	
-	resolve-symbol-global-declarations(key-resolver, value-resolver)= 
-		?symbol; // NOTE : symbol does not contain any scope information
-		where(not(?(_,_) <+ ?(_,_,_)));
-		// Looking for the symbol in the Globals() Scope
-		where(<debug-symboltable>$[SymbolResolver| Resoving Symbol in Global Scope.]);
-		<resolve-symbol-declarations-internal(key-resolver, value-resolver,?(Globals() , symbol))>symbol;
-		where(<debug-symboltable>$[SymbolResolver| Resoving Symbol in Global Scope. Result: [<pp-aterm>]]);
-		is-not-empty-list
-	<+
-		<debug-symboltable>$[SymbolTable| FAIL| Failed to resolve following symbol [<pp-aterm>] in Global Scope];
-		fail
-	
-	//resolving symbol in global scope only and ensuring result is unique
-	resolve-symbol-unique-declaration(key-resolver, value-resolver)=
-		where(?( Globals(), symbol ))
-		;<resolve-symbol-global-declarations(key-resolver, value-resolver)> symbol	
-		;ensure-is-unique // verify as resolved unique declaration 
-	<+	
-		<debug-symboltable>$[SymbolTable| FAIL| Failed to retrieve uniqe declaration in global scope."];fail
-	
-	// Resolving unique declaration of symbol in the scope (current-package, current-module)
-	// Symbol is resolved using the specified strategy parameter, i.e. using key-resolved and value-resolved  
-	resolve-symbol-unique-declaration(key-resolver, value-resolver)=
-		?( current-package , current-module, symbol )
-		;<resolve-symbol-unique-declaration(key-resolver, value-resolver|current-package , current-module)>symbol	
-	
-	
-	// resolving unique declaration - generic implementation   
-	resolve-symbol-unique-declaration(key-resolver, value-resolver|current-package , current-module)=
-		resolve-symbol-declarations(key-resolver, value-resolver|current-package , current-module)
-		;ensure-is-unique // verify as resolved unique declaration 
-	<+	
-		<debug-symboltable>$[SymbolTable| Failed to retrieve unique declaration.];fail
-	
-	// resolving declaration in global scope 
-	resolve-symbol-declarations(key-resolver, value-resolver) = 
-		?( Globals(), symbol )
-		;<resolve-symbol-global-declarations(key-resolver, value-resolver)> symbol
-	
-	// resolving declartion in the scope mentioned
-	resolve-symbol-declarations(key-resolver, value-resolver) = 
-		?( current-package , current-module,symbol )
-		;<resolve-symbol-declarations(key-resolver, value-resolver|current-package , current-module)> symbol
-	
-	// resolving declarations incrementally	
-	resolve-symbol-declarations(key-resolver, value-resolver|current-package , current-module)= 
-		?symbol; // NOTE : symbol does not contain any scope information
-		(	
-				// Looking for the symbol in the current Module Scope
-				where(<debug-symboltable>$[SymbolResolver| Resoving [<pp-aterm>symbol] in Current Scope [<pp-aterm>(current-package , current-module)].]);
-				<value-resolver>(current-package , current-module, symbol); 
-				where(<debug-symboltable>$[SymbolResolver| Resoving [<pp-aterm>symbol] in Current Scope. Result: [<pp-aterm>]]);
-				is-not-empty-list
-			<+
-				// Looking for the symbol in the parent enclosing scope => Package Scope
-				where(<debug-symboltable>$[SymbolResolver| Resoving [<pp-aterm>symbol] in Enclosing Package Scope ([<pp-aterm>current-package],_)  or in Global Scope]);
-				<resolve-symbol-declarations-internal(
-					key-resolver, 
-					value-resolver, 
-					?(current-package , _ , symbol) + ?(Globals() , symbol) // NOTE : Currently we combined Globals() + Enclosing package search in ONE loopup.
-				)>symbol;
-				where(<debug-symboltable>$[SymbolResolver| Resoving [<pp-aterm>symbol] in Enclosing Package + Global Scope. Result: [<pp-aterm>]]);				 	 
-		 	 	is-not-empty-list
-			<+
-				where(<debug-symboltable>$[SymbolResolver| Resoving [<pp-aterm>symbol] in Imported Scopes.]);
-				where( 
-					!current-package => Package(untyped-package-qname);
-					!current-module  => Module(untyped-module-qname)
-					;<get-all-usings>( untyped-package-qname , untyped-module-qname) => imported-typedqname*
-					;<debug-symboltable>$[SymbolResolver| Getting List of dependening-on packages/modules : [<pp-aterm>]]
-					
-				);
-				<resolve-imported-symbol-declarations(key-resolver  , value-resolver)>(symbol, imported-typedqname*);
-				where(<debug-symboltable>$[SymbolResolver| Resoving [<pp-aterm>symbol] in Imported Scopes. Result: [<pp-aterm>]]);
-				is-not-empty-list
-			<+
-				<debug-symboltable>$[SymbolTable| FAIL| Failed to resolve following symbol [<pp-aterm>] in namespace [<pp-aterm>(current-package , current-module)]];
-				fail
-		)
-
-	resolve-symbol-declarations-internal(key-resolver,value-resolver,namespace-filter) =
-		key-resolver;
-		filter(namespace-filter);
-	  mapconcat(value-resolver)
-	<+     			 
-		<debug-symboltable>$[SymbolTable| FAIL | resolve-symbol-declarations | Failed to resolve following symbol [<pp-aterm>]]
-		;fail
-
-	resolve-imported-symbol-declarations(key-resolver,value-resolver):
-		(symbol, scopes*) -> resolved*
-		where 
-			if !scopes* => [] then 
-				<debug-symboltable> $[SymbolTable| FAIL| Failed to resolve following symbol: [<pp-aterm>symbol] as there is no scope specified. ];
-				fail
-			else
-				!scopes* => [currentscope|rest*]	
-			end
-		where 
-			if !currentscope => Package(_) then 
-				resolved* := <is-not-empty-list><resolve-symbol-declarations-internal(key-resolver, value-resolver,?(currentscope, _ , symbol))>symbol
-			else
-				if !currentscope => Module(_) then 
-					resolved* := <is-not-empty-list><resolve-symbol-declarations-internal(key-resolver, value-resolver,?(_ , currentscope , symbol))>symbol
-				end
-			end;
-			where(<debug-symboltable>$[SymbolResolver| Resoving Symbol in Imported Scopes. Result: [<pp-aterm>resolved*]. Found in :[<pp-aterm>currentscope] ])
-		<+
-			resolved* := <resolve-imported-symbol-declarations(key-resolver  , value-resolver)> ( symbol, rest*)
-	
-	
-	// Verifies tha tthe current term is not a empty list 
-	is-not-empty-list = ?[_|_] 
-		
-rules
-	
-	store-import-references: m at Module(attrb*,modname,section*) -> Module(attrb*,modname,resulting-section*)
-		with 
-			!modname => SPXModuleName(<id>);
-			 <debug-symboltable>$[ImportReferenceResolver| store-import-references|Resolving import references for module : [<pp-aterm>]] 
-		where
-			Package(package-qname) :=<get-annotation(get-package-annotation)>modname// get package-name from the modname
-		where 
-			{| GetEnclosingPackageName, current-source-directory, GetEnclosingModuleName:
-					rules(
-						GetEnclosingPackageName      := package-qname //TODO refactor: most likely it is no longer needed 
-						GetEnclosingModuleName			 := modname 				
-						current-source-directory     := <get-module-untyped-qname;
-																					   DeclaredModule;
-																					   dirname
-																				    >(package-qname, modname)
-					)
-					;<alltd(store-import-declaration(|<GetEnclosingPackageName>))> section* => resulting-section*
-					;!Module(attrb*,modname,resulting-section*) => modifiedModuleDescription
-					;<store-declaration(|Modules())>(<get-module-untyped-qname>(package-qname, modname),  modifiedModuleDescription) //updating with import reference annotation	 
-			|}
-			
-	store-import-declaration(|enclosing-namespace-qname): 
-		i at ImportPackage(qname at QName(package-qname-parts*)) -> annotated-import-decl
-		where
-			<debug-symboltable>$[ImportReferenceResolver| store-import-declaration|storing package reference :[<pp-aterm>]]
-		where 
-			if <DeclaredPackage>qname then
-				<store-spx-import-declaration(|enclosing-namespace-qname)> Package(qname)
-				;annotated-import-decl:= i
-			else
-				annotated-import-decl:= <add-annotation(|Unresolved())>i
-				;<debug-symboltable>$[ImportReferenceResolver| store-import-declaratio|Failed to resolve following import : [<pp-aterm>]]	
-	 		end
-	
-	store-import-declaration(|enclosing-namespace-qname) :
-		ImportSpxModule(Name(package-name), SPXModuleName(modname)) -> <store-import-declaration(|enclosing-namespace-qname)>ImportSpxModule(QName([package-name]), SPXModuleName(modname)) 
-		 
-	store-import-declaration(|enclosing-namespace-qname) :
-		i at ImportSpxModule(QName(package-qname-parts), SPXModuleName(modname)) -> annotated-import-decl 
-		where 
-			<debug-symboltable>$[ImportReferenceResolver| store-import-declaration|storing module reference : [<pp-aterm>]]
-		with
-			module-qname := <get-module-untyped-qname> (package-qname-parts , modname)//TODO: construct modules qualified name
-		where 
-			if <DeclaredModule>module-qname then
-					<store-spx-import-declaration(|enclosing-namespace-qname)> Module(module-qname)
-					;annotated-import-decl:= i
-			else
-					annotated-import-decl:= <add-annotation(|Unresolved())>i
-					;<debug-symboltable> $[Store-import-declaration| Warning |Failed to resolve following import : [<pp-aterm>]]	
-		 	end		
-		 
-		// Store import references in the 2nd pass of the traversals
-	store-import-declaration(|enclosing-namespace-qname):
-		i at ImportPackage(Name(package-name)) -> annotated-import-decl 
-		where 
-			<debug-symboltable>$[ImportReferenceResolver| store-import-declaration|storing reference : [<pp-aterm>]]
-		where 
-			if <DeclaredPackage>QName([package-name]) then
-				<store-spx-import-declaration(|enclosing-namespace-qname)> Package(QName([package-name]))
-				;annotated-import-decl:= i 			
-			else
-				// Seems like package-name is not declared as a SPX package 
-				// Hence, looking for it in the file system as any external/legacy
-				// artifact.   
-				result:= <store-import-declaration(|enclosing-namespace-qname)>ImportLegacyArtifact(Name(package-name))
-			 ;if not(<get-annotation(get-unresolved-symbol-annotation)>result) then
-					//import is resolved as legacy artifact and found in local file system 
-					annotated-import-decl:= result
-				else
-					//Not found in the file system. Hence, just ignoring it and annotating it.
-					//and marking it as Unresolved()		
-					annotated-import-decl:= <add-annotation(|Unresolved())>i
-				end	  
-			end 
 
-	store-import-declaration(|enclosing-namespace):
-		i at ImportLegacyArtifact(Name(modulename))  -> annotated-import-decl 
-		where 
-			<debug-symboltable>$[ImportReferenceResolver| store-import-declaration|storing leagacy/external artifact reference : [<pp-aterm>]]
-		where 
-			resolved-path := <resolve-legacy-import-path(|<current-source-directory>)>modulename
-			;if (!resolved-path => Unresolved()) then 
-				<debug-symboltable>$[SymbolTable|storing enclosing imports reference| FAIL <UsingLegacyArtifacts>: [<pp-aterm>i]]
-				;annotated-import-decl :=  <add-annotation(|Unresolved())>i
-			else
-				annotated-import-decl :=  i
-			end	
-		with
-			rules(
-					UsedLegacyArtifacts:   (Globals(), modulename) -> resolved-path
-					UsingLegacyArtifacts:+ enclosing-namespace	   -> (Globals(), Module(Name(modulename)), resolved-path)    
-				)
-			;<debug-symboltable>$[ImportReferenceResolver| storing enclosing imports reference| <UsingLegacyArtifacts>: [<pp-aterm>enclosing-namespace]-> [<pp-aterm>(Globals(), Module(Name(modulename)), resolved-path)]]
-			
-	store-spx-import-declaration(|importedby-package): 
-		imported -> imported
-		where 
-			!importedby-package => QName(_)
-		where 
-			module-untyped-qname := <get-module-untyped-qname>(importedby-package , <GetEnclosingModuleName>);
-			rules (
-				UsedBy:+ imported   -> importedby-package  
-				Using :+ (importedby-package, module-untyped-qname) -> imported 
-			)
-		where
-			<debug-symboltable>$[ImportReferenceResolver| storing enclosing imports reference| <Using>: ([<pp-aterm>importedby-package] , [<pp-aterm>module-untyped-qname])-> [<pp-aterm>imported]]
 			
 rules 
 	// TODO refactor : reduce the duplicate codes.

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str	Sun May  8 01:05:26 2011	(r22799)
@@ -6,8 +6,11 @@
 	common
 	libstrc 
 	utils/debug		
-imports 
+imports	
 	context/scope-tree
+  context/store-imports
+  context/resolve-symbols
+imports  
 	context/sdf/declare
 	context/signatures
 	codegen/sdf/to-name-analysis

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Sun May  8 01:05:26 2011	(r22799)
@@ -1,25 +1,26 @@
 module context/sdf/declare
-
 imports 
 	libstratego-sdf
   lib/editor-common.generated
 	include/SpoofaxLang
 imports 
+	
 	context/scope-tree
+  context/store-imports
+  context/resolve-symbols
+	analyze/main
 	normalize/signatures	
 imports
 	common
 	utils/debug
 	utils/annotations
 imports  
-	context/sdf/declare-signature	
-
+	context/sdf/declare-signature
 imports 
 	libstratego-sdf
   lib/editor-common.generated
 	include/SpoofaxLang
-	context/scope-tree
-
+ 
 rules 
 	resolve-sdf-declaration = 
  		?symbol; 

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str	Sun May  8 01:05:26 2011	(r22799)
@@ -0,0 +1,126 @@
+module context/store-imports 
+imports
+	include/SpoofaxLang 
+	lib/editor-common.generated
+imports 
+	context/signatures
+	
+	context/scope-tree
+  context/resolve-symbols
+	normalize/signatures
+	codegen/compile
+imports 	
+	common
+	utils/annotations
+	utils/path
+	utils/debug 
+
+rules
+	store-import-references: m at Module(attrb*,modname,section*) -> Module(attrb*,modname,resulting-section*)
+		with 
+			!modname => SPXModuleName(<id>);
+			 <debug-symboltable>$[ImportReferenceResolver| store-import-references|Resolving import references for module : [<pp-aterm>]] 
+		where
+			Package(package-qname) :=<get-annotation(get-package-annotation)>modname// get package-name from the modname
+		where 
+			{| GetEnclosingPackageName, current-source-directory, GetEnclosingModuleName:
+					rules(
+						GetEnclosingPackageName      := package-qname //TODO refactor: most likely it is no longer needed 
+						GetEnclosingModuleName			 := modname 				
+						current-source-directory     := <get-module-untyped-qname;
+																					   DeclaredModule;
+																					   dirname
+																				    >(package-qname, modname)
+					)
+					;<alltd(store-import-declaration(|<GetEnclosingPackageName>))> section* => resulting-section*
+					;!Module(attrb*,modname,resulting-section*) => modifiedModuleDescription
+					;<store-declaration(|Modules())>(<get-module-untyped-qname>(package-qname, modname),  modifiedModuleDescription) //updating with import reference annotation	 
+			|}
+			
+	store-import-declaration(|enclosing-namespace-qname): 
+		i at ImportPackage(qname at QName(package-qname-parts*)) -> annotated-import-decl
+		where
+			<debug-symboltable>$[ImportReferenceResolver| store-import-declaration|storing package reference :[<pp-aterm>]]
+		where 
+			if <DeclaredPackage>qname then
+				<store-spx-import-declaration(|enclosing-namespace-qname)> Package(qname)
+				;annotated-import-decl:= i
+			else
+				annotated-import-decl:= <add-annotation(|Unresolved())>i
+				;<debug-symboltable>$[ImportReferenceResolver| store-import-declaratio|Failed to resolve following import : [<pp-aterm>]]	
+	 		end
+	
+	store-import-declaration(|enclosing-namespace-qname) :
+		ImportSpxModule(Name(package-name), SPXModuleName(modname)) -> <store-import-declaration(|enclosing-namespace-qname)>ImportSpxModule(QName([package-name]), SPXModuleName(modname)) 
+		 
+	store-import-declaration(|enclosing-namespace-qname) :
+		i at ImportSpxModule(QName(package-qname-parts), SPXModuleName(modname)) -> annotated-import-decl 
+		where 
+			<debug-symboltable>$[ImportReferenceResolver| store-import-declaration|storing module reference : [<pp-aterm>]]
+		with
+			module-qname := <get-module-untyped-qname> (package-qname-parts , modname)//TODO: construct modules qualified name
+		where 
+			if <DeclaredModule>module-qname then
+					<store-spx-import-declaration(|enclosing-namespace-qname)> Module(module-qname)
+					;annotated-import-decl:= i
+			else
+					annotated-import-decl:= <add-annotation(|Unresolved())>i
+					;<debug-symboltable> $[Store-import-declaration| Warning |Failed to resolve following import : [<pp-aterm>]]	
+		 	end		
+		 
+		// Store import references in the 2nd pass of the traversals
+	store-import-declaration(|enclosing-namespace-qname):
+		i at ImportPackage(Name(package-name)) -> annotated-import-decl 
+		where 
+			<debug-symboltable>$[ImportReferenceResolver| store-import-declaration|storing reference : [<pp-aterm>]]
+		where 
+			if <DeclaredPackage>QName([package-name]) then
+				<store-spx-import-declaration(|enclosing-namespace-qname)> Package(QName([package-name]))
+				;annotated-import-decl:= i 			
+			else
+				// Seems like package-name is not declared as a SPX package 
+				// Hence, looking for it in the file system as any external/legacy
+				// artifact.   
+				result:= <store-import-declaration(|enclosing-namespace-qname)>ImportLegacyArtifact(Name(package-name))
+			 ;if not(<get-annotation(get-unresolved-symbol-annotation)>result) then
+					//import is resolved as legacy artifact and found in local file system 
+					annotated-import-decl:= result
+				else
+					//Not found in the file system. Hence, just ignoring it and annotating it.
+					//and marking it as Unresolved()		
+					annotated-import-decl:= <add-annotation(|Unresolved())>i
+				end	  
+			end 
+
+	store-import-declaration(|enclosing-namespace):
+		i at ImportLegacyArtifact(Name(modulename))  -> annotated-import-decl 
+		where 
+			<debug-symboltable>$[ImportReferenceResolver| store-import-declaration|storing leagacy/external artifact reference : [<pp-aterm>]]
+		where 
+			resolved-path := <resolve-legacy-import-path(|<current-source-directory>)>modulename
+			;if (!resolved-path => Unresolved()) then 
+				<debug-symboltable>$[SymbolTable|storing enclosing imports reference| FAIL <UsingLegacyArtifacts>: [<pp-aterm>i]]
+				;annotated-import-decl :=  <add-annotation(|Unresolved())>i
+			else
+				annotated-import-decl :=  i
+			end	
+		with
+			rules(
+					UsedLegacyArtifacts:   (Globals(), modulename) -> resolved-path
+					UsingLegacyArtifacts:+ enclosing-namespace	   -> (Globals(), Module(Name(modulename)), resolved-path)    
+				)
+			;<debug-symboltable>$[ImportReferenceResolver| storing enclosing imports reference| <UsingLegacyArtifacts>: [<pp-aterm>enclosing-namespace]-> [<pp-aterm>(Globals(), Module(Name(modulename)), resolved-path)]]
+			
+	store-spx-import-declaration(|importedby-package): 
+		imported -> imported
+		where 
+			!importedby-package => QName(_)
+		where 
+			module-untyped-qname := <get-module-untyped-qname>(importedby-package , <GetEnclosingModuleName>);
+			rules (
+				UsedBy:+ imported   -> importedby-package  
+				Using :+ (importedby-package, module-untyped-qname) -> imported 
+			)
+		where
+			<debug-symboltable>$[ImportReferenceResolver| storing enclosing imports reference| <Using>: ([<pp-aterm>importedby-package] , [<pp-aterm>module-untyped-qname])-> [<pp-aterm>imported]]
+				
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str	Sun May  8 01:05:26 2011	(r22799)
@@ -17,7 +17,10 @@
 	config 
 imports 
 	context/str/signature-generator
-	context/scope-tree 
+	
+	context/scope-tree
+  context/store-imports
+  context/resolve-symbols 
 	spoofaxlang  
  
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str	Sun May  8 01:05:26 2011	(r22799)
@@ -15,17 +15,17 @@
 imports 
 	common
 	config
-	
 imports 
+	
 	context/scope-tree
+  context/store-imports
+  context/resolve-symbols
 	context/signatures	
  
-//FIX : 
+//TODO FIX : 
 // Design issues : 
 //		Package Common Imports are only for the current spx file at this moment
 //		It could be kept as it is or make it common in the whole package. 
- 
-
 strategies		
 	nomalize-all = desugar-compilationa-unit
 
@@ -65,7 +65,7 @@
 		
 	desugar-spx-package:	
 		p at Package(package-qname , modules* ) -> modifiedPackageDescription
-		with 
+		with
 			!package-qname => QName(_);
 				<debug-compiler>$[Desugaring Packages [<pp-aterm>package-qname]]
 		with
@@ -95,7 +95,6 @@
 		m at Module(attrb* , modname , section*) -> modifiedModuleDescription
 		with 
 			<debug-compiler>$[Desugaring Modules : [<pp-aterm>modname]]
-			
 		where
 			EnclosingNamespace      								=>  package;
 			modname-with-annotation 					      :=  <add-annotation(|package)>modname;
@@ -120,9 +119,7 @@
 			<store-declaration(|Modules())>(enclosing-module-qname,  modifiedModuleDescription);
 			<store-scope-reference>(Module(enclosing-module-qname),  package);
 			<store-original-declaration(|Modules())>(enclosing-module-qname,  m) // stored original ast 
-		
-		  
-		
+
 	//Desugaring SDF Sections 
 	desugar-spx : SDFSection ( sectionDef ) -> <add-annotation(|<EnclosingNamespace>)> <id>
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str	Sun May  8 01:05:26 2011	(r22799)
@@ -26,7 +26,10 @@
 	normalize/main
 	normalize/signatures   
 imports 
+	
 	context/scope-tree
+  context/store-imports
+  context/resolve-symbols
 	context/signatures
 imports	 
 	utils/cache

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/compile.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/compile.str	Sun May  8 01:05:26 2011	(r22799)
@@ -9,7 +9,10 @@
 imports 
 	codegen/compile
 	utils/cache
+	
 	context/scope-tree
+  context/store-imports
+  context/resolve-symbols
 	
 rules 
 	//Intregation Test of the compile-all is working as expected 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/contracts.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/contracts.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/contracts.str	Sun May  8 01:05:26 2011	(r22799)
@@ -6,7 +6,11 @@
 	utils/debug
 imports
 	common
+imports	
 	context/scope-tree
+  context/store-imports
+  context/resolve-symbols
+imports  
 	context/signatures 
 	normalize/signatures
 	utils/contract

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str	Sat May  7 22:21:04 2011	(r22798)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str	Sun May  8 01:05:26 2011	(r22799)
@@ -6,7 +6,10 @@
 	utils/debug
 imports
 	common
+	
 	context/scope-tree
+  context/store-imports
+  context/resolve-symbols
 	context/signatures 
 	normalize/signatures
 rules

From M.A.Akhter at student.tudelft.nl  Sun May  8 03:31:26 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sun, 08 May 2011 01:31:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22800 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans: .
	analyze analyze/esv analyze/sdf codegen codegen/esv
	codegen/sdf codegen/str context context/sdf co...
Message-ID: <20110508013126.E13A9CC040@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Sun May  8 01:31:26 2011
New Revision: 22800
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22800&sc=1

Log:
* another attempt. scope-tree is refactored to increase cohesiveness+coupling of scope tree.

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-annotations.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-types.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/contracts.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str	Sun May  8 01:31:26 2011	(r22800)
@@ -2,7 +2,7 @@
 
 imports 
 	context/sdf/declare
-	context/scope-tree
+	context/-
 	normalize/signatures
 imports 
 	include/SpoofaxLang

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str	Sun May  8 01:31:26 2011	(r22800)
@@ -2,9 +2,7 @@
 
 imports 
 	context/sdf/declare
-	context/scope-tree
-  context/store-imports
-  context/resolve-symbols
+	context/-
 	normalize/signatures
 imports 
 	include/SpoofaxLang

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str	Sun May  8 01:31:26 2011	(r22800)
@@ -5,10 +5,7 @@
 	context/sdf/declare
 imports 
 	utils/debug
-	context/scope-tree
-  context/store-imports
-  context/resolve-symbols
-
+	context/-
 imports
   include/SpoofaxLang
  

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str	Sun May  8 01:31:26 2011	(r22800)
@@ -2,10 +2,7 @@
 
 imports 
 	context/sdf/declare
-	
-	context/scope-tree
-  context/store-imports
-  context/resolve-symbols
+	context/-
 	normalize/signatures
 imports 
 	include/SpoofaxLang

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str	Sun May  8 01:31:26 2011	(r22800)
@@ -4,9 +4,7 @@
  	common
  	utils/debug
   context/sdf/declare
-  context/scope-tree
-  context/store-imports
-  context/resolve-symbols
+  context/-
   include/SpoofaxLang
 	
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Sun May  8 01:31:26 2011	(r22800)
@@ -8,19 +8,14 @@
 	utils/debug
 	utils/path
 imports 
-	analyze/main
-	context/scope-tree
-  context/store-imports
-  context/resolve-symbols
-
-	context/signatures
-	context/declare
+	analyze/-
+	context/-
 imports
 	common 
 	config
 imports 
 	lib/editor-common.generated
-	lib/configuration/SpoofaxConfiguration 
+	lib/configuration/SpoofaxConfiguration  
 	include/SpoofaxLang
 imports	
 	codegen/generate

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Sun May  8 01:31:26 2011	(r22800)
@@ -13,10 +13,7 @@
 imports 
 	codegen/main 
 	codegen/generate
-	context/scope-tree
-  context/store-imports
-  context/resolve-symbols 
-	context/signatures
+	context/-
 imports
 	lib/editor-common.generated
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Sun May  8 01:31:26 2011	(r22800)
@@ -16,10 +16,7 @@
 	include/spoofaxlang
 imports	
 	
-	context/scope-tree
-  context/store-imports
-  context/resolve-symbols
-	context/signatures
+	context/-
 	normalize/signatures
 imports 	
 	utils/path 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str	Sun May  8 01:31:26 2011	(r22800)
@@ -11,11 +11,8 @@
 	config 
 	utils/cache
 	lib/editor-common.generated
-	context/scope-tree
-  context/store-imports
-  context/resolve-symbols
-	context/signatures 
-	normalize/signatures  
+	context/-
+  normalize/signatures  
 	include/spoofaxlang
 	utils/path
 imports 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Sun May  8 01:31:26 2011	(r22800)
@@ -12,10 +12,7 @@
   lib/sdf-parenthesize  
 imports 
 	
-	context/scope-tree
-  context/store-imports
-  context/resolve-symbols
-	context/signatures
+	context/-
 	context/sdf/declare
 imports
 	normalize/signatures

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Sun May  8 01:31:26 2011	(r22800)
@@ -18,12 +18,8 @@
 	codegen/main
 	codegen/generate
 	codegen/sdf/to-name-analysis
-	
 imports	
-	context/signatures
-	context/scope-tree
-  context/store-imports
-  context/resolve-symbols
+	context/-
 imports	
 	normalize/signatures
 	utils/contract

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Sun May  8 01:31:26 2011	(r22800)
@@ -4,11 +4,7 @@
 	context/sdf/declare
 	context/sdf/declare-signature
 	context/str/declare
-	
-	context/scope-tree
-  context/store-imports
-  context/resolve-symbols
-	context/signatures
+	context/-
 	normalize/signatures 
 imports 
 	include/SpoofaxLang

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-annotations.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-annotations.str	Sun May  8 01:31:26 2011	(r22800)
@@ -0,0 +1,17 @@
+module context/resolve-annotations
+imports
+	include/SpoofaxLang 
+	normalize/signatures 
+	context/signatures
+	
+strategies
+	
+	// Returns matching strategy for looking up package annotations
+	get-package-annotation = ?Package(qname)
+	
+	// Returns matching strategy for looking up package annotations
+	get-module-annotation = ?Module(qname)
+	
+	// Returns matching strategy for looking up Unresolved symbol annotations
+	get-unresolved-symbol-annotation = ?Unresolved()
+	
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str	Sun May  8 01:31:26 2011	(r22800)
@@ -0,0 +1,65 @@
+module context/resolve-declarations
+
+imports
+	include/SpoofaxLang 
+	lib/editor-common.generated
+imports 
+	context/signatures
+	context/scope-tree
+  context/resolve-symbols
+  context/store-imports
+  context/resolve-annotations
+  context/resolve-types
+imports  
+  normalize/signatures
+	codegen/compile
+imports 	
+	common
+	utils/annotations
+	utils/path
+	utils/debug 
+			
+rules 
+	// TODO refactor : reduce the duplicate codes.
+	get-package-declaration = ?package-qname; get-declaration(|Packages())
+	
+	// Given a Module's Qualified Typed name , it returns the module declaration 
+	get-module-declarations = where(?Module(QName(_)));get-untyped-qname ; !(Modules() , <id>); bagof-Declared
+	
+	get-module-declaration = where(?Module(QName(_)));	get-untyped-qname ; !(Modules() , <id>); Declared		
+	
+	get-original-module-declaration = 	where(?Module(QName(_)));	get-untyped-qname ; !(Modules() , <id>); DeclaredOriginal
+	
+	get-module-and-verfity-unique = where(?Module(QName(_)));	get-untyped-qname ;	!(Modules() , <id>); bagof-Declared; ?[<id>]		  	
+		
+	// Given a List of Modules' Qualified Type name, it returns the list of module declaration 
+	get-module-declarations =  mapconcat(	get-module-declarations	)	<+	debug(!"Failed to get module declarations: ") ;fail
+
+	get-declaration(|ScopedSymbol)= !(ScopedSymbol, <id>); Declared
+	
+	get-enclosed-declarations(s) =?package-qname ; !Package(package-qname);	bagof-GetEnclosedScope;filter(s)
+	
+	// Get a list of Package declared in the current Project
+	// Retunrs: List of Packages' Typed-QName , i.e. , Package(QName(_))						  
+	get-package-list = all-keys-DeclaredPackage; get-typed-qnames(|PackageType())
+	
+	get-packages-of-file: file-abs-path -> result
+	with 
+		<has-extension(|"spx")>file-abs-path 
+		;<file-exists>  file-abs-path
+	where
+		<bagof-PackagesDeclaredIn>file-abs-path; get-typed-qnames(|PackageType()) => result
+	
+	// Given Typed-QName of Package, it returns list of enclosed Modules in the Package
+	// Returns:  List of Modules' Typed-QName, i.e. Module(QName(_))
+	get-enclosed-modules =  where (?Package(uqname));	bagof-GetEnclosedScope;	filter(?Module(_)) <+ debug(!"Failed to get enclosed modules: ") ;fail
+
+	// Returns a list of package/modules that <id> is depeding on. 
+	// Requires the <ID> to be untyped QName to look it up in the symbol tree.
+	// Otherwise, it throws <illegal argument exception>
+	get-all-usings =  where(?QName(_));	?package-untyped-qname; all-keys-Using;	filter(?(package-untyped-qname, _)); mapconcat(bagof-Using)	
+	
+	get-all-usings : (package-untyped-qname , module-untyped-qname) -> lstUsings*
+	where 
+		<bagof-Using>(package-untyped-qname , module-untyped-qname) => lstUsings* 			
+	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str	Sun May  8 01:31:26 2011	(r22800)
@@ -7,9 +7,10 @@
 	context/signatures
 	context/store-imports
 	context/scope-tree
+	context/resolve-declarations
 	normalize/signatures
 	codegen/compile 
-imports 	
+imports 	 
 	common
 	utils/annotations
 	utils/path

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-types.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-types.str	Sun May  8 01:31:26 2011	(r22800)
@@ -0,0 +1,65 @@
+module context/resolve-types
+imports
+	include/SpoofaxLang 
+	lib/editor-common.generated
+imports 
+	context/signatures
+	context/scope-tree
+  context/resolve-symbols
+  context/resolve-declarations
+  context/store-imports
+  normalize/signatures
+	codegen/compile
+imports 	
+	common
+	utils/annotations
+	utils/path
+	utils/debug 
+			
+rules
+	//TODO : better handling of Typed and Untyped QName
+	
+	//Strongly typing/untyping qname
+	get-untyped-qname : typed-qname -> u-qname
+		where
+			!typed-qname => Package(u-qname)
+			<+ 
+			 !typed-qname => Module(u-qname)
+
+	get-typed-qnames(|Type) : list-qname -> result
+		where 
+			<is-list>list-qname
+		where
+			 <map(get-typed-qname(|Type))>list-qname => result
+		
+	get-typed-qname(|Type) = 
+		?QName(q-name-parts*); where(<is-list>q-name-parts*);<get-typed-qname>(Type , <id>)
+		<+
+		<debug>$[Type| FAIL | Failed to cast  [<pp-aterm-forced>] to [<pp-aterm-forced>Type]]; fail 	
+	
+	get-typed-qname: (ModuleType() , qname) -> Module(qname)
+	
+	get-typed-qname: (PackageType() , qname) -> Package(qname)
+
+	get-module-typed-qname: (Package(QName(package-qname-parts*)), spxmodulename) -> <get-typed-qname(|ModuleType())> <get-module-untyped-qname>(QName(package-qname-parts*), spxmodulename)
+	
+	get-module-typed-qname: (QName(package-qname-parts*), spxmodulename) -> <get-typed-qname(|ModuleType())>(<get-module-untyped-qname><id>)
+		  
+	get-module-untyped-qname: 
+		p@(package-qname-parts*, spxmodulename) ->QName(<conc>( package-qname-parts* , [modname]))
+		 where 
+		 	<is-list>package-qname-parts* 	
+		 where 
+				if <is-string>spxmodulename then 
+		 			modname := spxmodulename
+		 		else
+		 			!spxmodulename => SPXModuleName(modname-string);
+		 			 modname := modname-string 
+		 			<+ 
+		 			debug(!"Type| Illegal <spxmodulename> argument in get-module-untyped-qname ");fail
+				end		 				
+			<+
+				<debug>$[Type| FAIL |get-module-untyped-qname failed to cast  [<pp-aterm-forced>p] to [<pp-aterm-forced>ModuleType()]]; fail 	
+
+	get-module-untyped-qname: (QName(package-qname-parts*), spxmodulename) -> <get-module-untyped-qname>(package-qname-parts*, spxmodulename)
+	 					
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str	Sun May  8 01:31:26 2011	(r22800)
@@ -1,17 +1,12 @@
 module context/scope-tree
 imports
 	include/SpoofaxLang 
-	lib/editor-common.generated
 imports 
-	context/signatures
-	context/store-imports
+	context/signatures 
 	context/resolve-symbols
 	normalize/signatures
-	codegen/compile
 imports 	
 	common
-	utils/annotations
-	utils/path
 	utils/debug 
 
 	
@@ -80,111 +75,5 @@
 			<debug> $[ ScopeTree| [<pp-aterm>package-typed-qname] storing  following language name : [<pp-aterm>name]]
 		with 
 			rules( DeclaredLangaugeName :+ package-typed-qname -> name)		
-
-
-			
-rules 
-	// TODO refactor : reduce the duplicate codes.
-	get-package-declaration = ?package-qname; get-declaration(|Packages())
-	
-	// Given a Module's Qualified Typed name , it returns the module declaration 
-	get-module-declarations = where(?Module(QName(_)));get-untyped-qname ; !(Modules() , <id>); bagof-Declared
-	
-	get-module-declaration = where(?Module(QName(_)));	get-untyped-qname ; !(Modules() , <id>); Declared		
-	
-	get-original-module-declaration = 	where(?Module(QName(_)));	get-untyped-qname ; !(Modules() , <id>); DeclaredOriginal
-	
-	get-module-and-verfity-unique = where(?Module(QName(_)));	get-untyped-qname ;	!(Modules() , <id>); bagof-Declared; ?[<id>]		  	
-		
-	// Given a List of Modules' Qualified Type name, it returns the list of module declaration 
-	get-module-declarations =  mapconcat(	get-module-declarations	)	<+	debug(!"Failed to get module declarations: ") ;fail
-
-	get-declaration(|ScopedSymbol)= !(ScopedSymbol, <id>); Declared
-	
-	get-enclosed-declarations(s) =?package-qname ; !Package(package-qname);	bagof-GetEnclosedScope;filter(s)
-	
-	// Get a list of Package declared in the current Project
-	// Retunrs: List of Packages' Typed-QName , i.e. , Package(QName(_))						  
-	get-package-list = all-keys-DeclaredPackage; get-typed-qnames(|PackageType())
-	
-	get-packages-of-file: file-abs-path -> result
-	with 
-		<has-extension(|"spx")>file-abs-path 
-		;<file-exists>  file-abs-path
-	where
-		<bagof-PackagesDeclaredIn>file-abs-path; get-typed-qnames(|PackageType()) => result
-	
-	// Given Typed-QName of Package, it returns list of enclosed Modules in the Package
-	// Returns:  List of Modules' Typed-QName, i.e. Module(QName(_))
-	get-enclosed-modules =  where (?Package(uqname));	bagof-GetEnclosedScope;	filter(?Module(_)) <+ debug(!"Failed to get enclosed modules: ") ;fail
-
-	// Returns a list of package/modules that <id> is depeding on. 
-	// Requires the <ID> to be untyped QName to look it up in the symbol tree.
-	// Otherwise, it throws <illegal argument exception>
-	get-all-usings =  where(?QName(_));	?package-untyped-qname; all-keys-Using;	filter(?(package-untyped-qname, _)); mapconcat(bagof-Using)	
-	
-	get-all-usings : (package-untyped-qname , module-untyped-qname) -> lstUsings*
-	where 
-		<bagof-Using>(package-untyped-qname , module-untyped-qname) => lstUsings* 			
-
-rules
-	//TODO : better handling of Typed and Untyped QName
-	
-	//Strongly typing/untyping qname
-	get-untyped-qname : typed-qname -> u-qname
-		where
-			!typed-qname => Package(u-qname)
-			<+ 
-			 !typed-qname => Module(u-qname)
-
-	get-typed-qnames(|Type) : list-qname -> result
-		where 
-			<is-list>list-qname
-		where
-			 <map(get-typed-qname(|Type))>list-qname => result
-		
-	get-typed-qname(|Type) = 
-		?QName(q-name-parts*); where(<is-list>q-name-parts*);<get-typed-qname>(Type , <id>)
-		<+
-		<debug>$[Type| FAIL | Failed to cast  [<pp-aterm-forced>] to [<pp-aterm-forced>Type]]; fail 	
-	
-	get-typed-qname: (ModuleType() , qname) -> Module(qname)
-	
-	get-typed-qname: (PackageType() , qname) -> Package(qname)
-
-	get-module-typed-qname: (Package(QName(package-qname-parts*)), spxmodulename) -> <get-typed-qname(|ModuleType())> <get-module-untyped-qname>(QName(package-qname-parts*), spxmodulename)
-	
-	get-module-typed-qname: (QName(package-qname-parts*), spxmodulename) -> <get-typed-qname(|ModuleType())>(<get-module-untyped-qname><id>)
-		  
-	get-module-untyped-qname: 
-		p@(package-qname-parts*, spxmodulename) ->QName(<conc>( package-qname-parts* , [modname]))
-		 where 
-		 	<is-list>package-qname-parts* 	
-		 where 
-				if <is-string>spxmodulename then 
-		 			modname := spxmodulename
-		 		else
-		 			!spxmodulename => SPXModuleName(modname-string);
-		 			 modname := modname-string 
-		 			<+ 
-		 			debug(!"Type| Illegal <spxmodulename> argument in get-module-untyped-qname ");fail
-				end		 				
-			<+
-				<debug>$[Type| FAIL |get-module-untyped-qname failed to cast  [<pp-aterm-forced>p] to [<pp-aterm-forced>ModuleType()]]; fail 	
-
-	get-module-untyped-qname: (QName(package-qname-parts*), spxmodulename) -> <get-module-untyped-qname>(package-qname-parts*, spxmodulename)
-	 					
-strategies
-	
-	// Returns matching strategy for looking up package annotations
-	get-package-annotation = ?Package(qname)
-	
-	// Returns matching strategy for looking up package annotations
-	get-module-annotation = ?Module(qname)
-	
-	
-	// Returns matching strategy for looking up Unresolved symbol annotations
-	get-unresolved-symbol-annotation = ?Unresolved()
-	
 	
 	 		 		
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str	Sun May  8 01:31:26 2011	(r22800)
@@ -7,9 +7,7 @@
 	libstrc 
 	utils/debug		
 imports	
-	context/scope-tree
-  context/store-imports
-  context/resolve-symbols
+	context/-
 imports  
 	context/sdf/declare
 	context/signatures

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Sun May  8 01:31:26 2011	(r22800)
@@ -4,10 +4,7 @@
   lib/editor-common.generated
 	include/SpoofaxLang
 imports 
-	
-	context/scope-tree
-  context/store-imports
-  context/resolve-symbols
+	context/-
 	analyze/main
 	normalize/signatures	
 imports

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str	Sun May  8 01:31:26 2011	(r22800)
@@ -4,16 +4,17 @@
 	lib/editor-common.generated
 imports 
 	context/signatures
-	
 	context/scope-tree
   context/resolve-symbols
-	normalize/signatures
+  context/resolve-annotations
+  context/resolve-types
+ 	normalize/signatures
 	codegen/compile
 imports 	
 	common
 	utils/annotations
 	utils/path
-	utils/debug 
+	utils/debug  
 
 rules
 	store-import-references: m at Module(attrb*,modname,section*) -> Module(attrb*,modname,resulting-section*)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str	Sun May  8 01:31:26 2011	(r22800)
@@ -17,10 +17,7 @@
 	config 
 imports 
 	context/str/signature-generator
-	
-	context/scope-tree
-  context/store-imports
-  context/resolve-symbols 
+	context/- 
 	spoofaxlang  
  
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str	Sun May  8 01:31:26 2011	(r22800)
@@ -16,12 +16,8 @@
 	common
 	config
 imports 
+	context/-
 	
-	context/scope-tree
-  context/store-imports
-  context/resolve-symbols
-	context/signatures	
- 
 //TODO FIX : 
 // Design issues : 
 //		Package Common Imports are only for the current spx file at this moment

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str	Sun May  8 01:31:26 2011	(r22800)
@@ -26,11 +26,7 @@
 	normalize/main
 	normalize/signatures   
 imports 
-	
-	context/scope-tree
-  context/store-imports
-  context/resolve-symbols
-	context/signatures
+	context/-
 imports	 
 	utils/cache
 	common

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/compile.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/compile.str	Sun May  8 01:31:26 2011	(r22800)
@@ -9,11 +9,8 @@
 imports 
 	codegen/compile
 	utils/cache
-	
-	context/scope-tree
-  context/store-imports
-  context/resolve-symbols
-	
+	context/-
+
 rules 
 	//Intregation Test of the compile-all is working as expected 
 	test-build-namespace-reference-table:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/contracts.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/contracts.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/contracts.str	Sun May  8 01:31:26 2011	(r22800)
@@ -7,9 +7,7 @@
 imports
 	common
 imports	
-	context/scope-tree
-  context/store-imports
-  context/resolve-symbols
+	context/-
 imports  
 	context/signatures 
 	normalize/signatures

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str	Sun May  8 01:05:26 2011	(r22799)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str	Sun May  8 01:31:26 2011	(r22800)
@@ -6,11 +6,7 @@
 	utils/debug
 imports
 	common
-	
-	context/scope-tree
-  context/store-imports
-  context/resolve-symbols
-	context/signatures 
+	context/-
 	normalize/signatures
 rules
 		

From M.A.Akhter at student.tudelft.nl  Sun May  8 03:39:12 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sun, 08 May 2011 01:39:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22801 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze
Message-ID: <20110508013912.5821F7F8010@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Sun May  8 01:39:12 2011
New Revision: 22801
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22801&sc=1

Log:
Added a module to perform consistency checking on the project level. I.e , it will check the semantic issues on the project scope , thus will take all the packages into consideration for consistency checking.

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-project.str

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-project.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-project.str	Sun May  8 01:39:12 2011	(r22801)
@@ -0,0 +1,6 @@
+module analyze/check-project
+
+//TODO : perform static consistency checking of the workspace/project.
+
+//TODO : add rules to verify that langauge names are unique w.r.t packages.
+

From M.A.Akhter at student.tudelft.nl  Sun May  8 14:00:31 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sun, 08 May 2011 12:00:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22802 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	analyze codegen context
Message-ID: <20110508120031.03BC4108C031@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Sun May  8 12:00:30 2011
New Revision: 22802
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22802&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str	Sun May  8 01:39:12 2011	(r22801)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str	Sun May  8 12:00:30 2011	(r22802)
@@ -30,6 +30,24 @@
 			where 
 				require(<bagof-DeclaredModule>module-qname => [_])
 
+
+rules 
+	//analyzes module errors returns it as a touple of errors , warnings and infos 
+	analyze-module-semantics : m at Module(attrb* , modname , section*)  -> (merrors',[],[]) 
+	where 
+		<collect-all(module-constraint-error, conc)>m  => merrors'
+
+		
+	// analyzes module errors and appened it with the existing problems  
+	append-semantic-problems(s|unziped-issues*):  m at Module(attrb* , modname , section*)  -> semantic-problems*
+	with 
+		(merrors,mwarnings,minfos) 	:=  <s> m;
+		!unziped-issues*  =>(err, warning, info);
+		combined-problmes* := [(merrors,mwarnings,minfos),(err, warning, info)]
+	where		
+		<unzip-semantic-issuses>combined-problmes*=> semantic-problems* 
+
+
 rules
 	
 	analyze: 
@@ -38,7 +56,7 @@
 				 package-typed-qname := <GetEnclosingPackageName> 
 				;module-typed-qname  := <GetEnclosingModuleName>
 				<+ 
-				debug(!"ErrorChecking | Failed to create current scope.")
+				 debug(!"ErrorChecking | Failed to create current scope.")
 				;fail
 		with
 				<debug-analysis>$[ErrorChecking | Analyzing Semantic Problems of [<pp-aterm-forced> (package-typed-qname,module-typed-qname)]]	 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str	Sun May  8 01:39:12 2011	(r22801)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str	Sun May  8 12:00:30 2011	(r22802)
@@ -18,14 +18,23 @@
 imports 
 	utils/contract 	
 	spoofaxlang
-	
-	
+
 rules
-	
 	package-constraint-error :
-		package-typed-qname at Package(untyped-qname) -> <id>
-			
-			 
-		 
-	
-	
+		package-typed-qname at Package(untyped-qname) -> (untyped-qname , $[Multple definitions of Language Name in a Package. Following definition is found : [<pp-aterm><get-all-language-name>package-typed-qname]])
+		where 
+			not(<get-unique-language-name>package-typed-qname)
+rules 
+	analyze : p at Package(untyped-name) -> <id>
+	with 
+		current-scope := p
+	where 
+		errors*   := 	<collect-all(package-constraint-error, conc)>p  ;
+		warnings* := [];
+		infos*    := []
+	where 	
+		rules
+		(
+			GetPackageSpecificSemanticProblems :  current-scope  ->  ( errors* , warnings*, infos*)
+		)	
+		 
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str	Sun May  8 01:39:12 2011	(r22801)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str	Sun May  8 12:00:30 2011	(r22802)
@@ -20,9 +20,18 @@
 imports 
 	utils/contract 	
 	spoofaxlang
+
+rules 
+	// performs static analysis and semantic checking 
+	analyze-main = 
+		?list-of-package-qnames
+		;list-loop(analyze-spx-package)
+
 	
 rules			 
-	// Analyze Semantic Errors
+	// Package specific semantic error checking 
+
+	// verify whether this package will be analyzed or not
 	should-analyze-this-package = 
 		?package-qname;
 		where(not(<AnalyzedPackage>package-qname))
@@ -41,8 +50,8 @@
 			<debug-analysis> $[Analyze| Analyze-spx-package| Planning to Analyze : [<pp-aterm>]] 
 		where
 				if should-analyze-this-package  then //FOR handling circular referneces   
-					{|
-						GetEnclosingPackageName:
+					<analyze>package-typed-qname;
+					{|GetEnclosingPackageName:
 							rules ( GetEnclosingPackageName      := package-typed-qname);
 							<list-loop(
 									analyze-spx-module
@@ -53,12 +62,11 @@
 					rules(AnalyzedPackage: package-typed-qname -> package-typed-qname)
 				)
 				<+
-				<debug-analysis> $[Analyze| analyze-spx-package > [<pp-aterm>package-typed-qname] Failed. ]
-				;fail
+				<debug-analysis> $[Analyze| analyze-spx-package > [<pp-aterm>package-typed-qname] Failed. ];
+				fail
 			end
-
-
-
+			
+	// Perform analysis on module definition 
 	analyze-spx-module: 
 		module-typed-qname at Module(untyped-qname) -> <id>
 		where 
@@ -86,6 +94,7 @@
 				<debug-analysis> $[Analyze| analyze-spx-module| Ignored as already in the queue :[<pp-aterm>]] //this package is not compiled before
 			end		
 	
+
 rules
 	
 	//lookups for the analyzed problems
@@ -101,26 +110,7 @@
 			<GetSemanticProblems>scope => problems 
 		where
 			<debug-compiler> $[ErrorChecking |  Problmes found [<pp-aterm-forced>scope] :  [<pp-aterm-forced>problems]]	
-rules 
-	//analyzes module errors returns it as a touple of errors , warnings and infos 
-	analyze-module-semantics : m at Module(attrb* , modname , section*)  -> (merrors',[],[]) 
-	where 
-		<collect-all(module-constraint-error, conc)>m  => merrors'
-
-		
-	// analyzes module errors and appened it with the existing problems  
-	append-semantic-problems(s|unziped-issues*):  m at Module(attrb* , modname , section*)  -> semantic-problems*
-	with 
-		(merrors,mwarnings,minfos) 	:=  <s> m;
-		!unziped-issues*  =>(err, warning, info);
-		combined-problmes* := [(merrors,mwarnings,minfos),(err, warning, info)]
-	where		
-		<unzip-semantic-issuses>combined-problmes*=> semantic-problems* 
-
-      
 rules
-
-
 	/* Converts a list as following 
 	[([a1] , [b1] , [c1])
 	([a2] , [b2] , [c2])
@@ -151,44 +141,4 @@
 		)
 		
 	unzip-semantic-issuse(|errors, warning, infos) : [] -> (errors, warning, infos)		
- 		
- 		
- 	
-/*
-	Idea is following . Build a scope tree as follows .
-	
-	Globals   = all the symbols from the legacy import will stored in this namespace
-	  |
-	Packages  = package consist of modules 
-		|
-	Modules		= modules consist of Sections i.e. STR Sections , SDF Sections and ESV Sections
-	
-*/	
-
-
-
-/*
-Todo: 
-	without import => make the package analysis and code generation works
-*/
-
-
-/*
-TODO : 
------------------------------------------------------------------------
-Visibility to package level : 
-Follow the nested scoping as mentioned in Language Implementation Patterns 
-
-	* Add visibility modifier such as   > Public : Visibility , Private : Visibility  , Internal : 
-	
-		Internal > internal to assembly
-		Private  > private to a concept  todo >>> will be useful to handle hiddens. Take care of hiddens in the symbol table that we are about to build. 
-		Public   > public  , everything is by default public. 
-		
-	* While creating a nested scope , anotate the tree with the extra attributes . 
-	* Import-chain > 1 => Internal Visibility 
-	
-Accessing Internal members will results in "Are you missing any reference to ..."
-
-*/	 		
  		     
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Sun May  8 01:39:12 2011	(r22801)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Sun May  8 12:00:30 2011	(r22802)
@@ -168,12 +168,13 @@
 		 				 [<pp-aterm-forced>list-of-package-qname* ]
 		 				 ]
 	where
-		<compile-main>list-of-package-qname*
-		;<debug-compiler>$[=========Compilation is done===============]
+		<compile-main>list-of-package-qname*;
+		<analyze-main>list-of-package-qname*;
+		<debug-compiler>$[=========Compilation is done===============]
 	where 	    
 		if Enable-Caching then 
-			<debug-compiler>$[=========Caching Semantic Problems============] 
-			;<cache-semantic-problems>()
+			<debug-compiler>$[=========Caching Semantic Problems============]; 
+			<cache-semantic-problems>()
 		end
 
 
@@ -181,7 +182,7 @@
 rules			   
 	
 	// Compiler main : Compiles provided list of packages and stores semantic problems
-	compile-main= 
+	compile-main = 
 		?list-of-package-qnames;
 		where(
 			<debug-compiler>$[Compile-main | compiling packages : [<pp-aterm>] with modules:	
@@ -202,7 +203,7 @@
 		//					Use the dependency graph to first compile the depending on packages.
 		//					TODO : Optimize. Phase 2 and Phase 3 can be compiled together. 
 		;list-loop(compile-spx-package)
-		;list-loop(analyze-spx-package)
+		
 				
 				
 	//During analyze-package , just call this strategy 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str	Sun May  8 01:39:12 2011	(r22801)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str	Sun May  8 12:00:30 2011	(r22802)
@@ -20,6 +20,14 @@
 	utils/debug 
 			
 rules 
+	
+	get-unique-language-name  = where(?Package(QName(_))) ; DeclaredLangaugeName
+	 
+	get-unique-language-name = where(?Package(QName(_))) ; bagof-DeclaredLangaugeName; ?[<id>]
+	
+	get-all-language-name = where(?Package(QName(_))) ; bagof-DeclaredLangaugeName	
+	
+rules 
 	// TODO refactor : reduce the duplicate codes.
 	get-package-declaration = ?package-qname; get-declaration(|Packages())
 	

From M.A.Akhter at student.tudelft.nl  Sun May  8 15:01:16 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sun, 08 May 2011 13:01:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22803 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans: .
	analyze codegen context
Message-ID: <20110508130118.140207F8041@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Sun May  8 13:01:16 2011
New Revision: 22803
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22803&sc=1

Log:
* added package level constraint checks for language name

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str	Sun May  8 12:00:30 2011	(r22802)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str	Sun May  8 13:01:16 2011	(r22803)
@@ -41,13 +41,8 @@
 	// analyzes module errors and appened it with the existing problems  
 	append-semantic-problems(s|unziped-issues*):  m at Module(attrb* , modname , section*)  -> semantic-problems*
 	with 
-		(merrors,mwarnings,minfos) 	:=  <s> m;
-		!unziped-issues*  =>(err, warning, info);
-		combined-problmes* := [(merrors,mwarnings,minfos),(err, warning, info)]
-	where		
-		<unzip-semantic-issuses>combined-problmes*=> semantic-problems* 
-
-
+		<merge-semantic-problems>( <s> m , unziped-issues*) => semantic-problems*
+		
 rules
 	
 	analyze: 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str	Sun May  8 12:00:30 2011	(r22802)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str	Sun May  8 13:01:16 2011	(r22803)
@@ -20,21 +20,30 @@
 	spoofaxlang
 
 rules
+	package-constraint-warning :
+		package-typed-qname at Package(untyped-qname) -> (untyped-qname , $[No definitions of Language Name in the Package. Hence, this package will be considered as a langauge library only.])
+		where 
+			not(<get-language-name>package-typed-qname)
+	
 	package-constraint-error :
-		package-typed-qname at Package(untyped-qname) -> (untyped-qname , $[Multple definitions of Language Name in a Package. Following definition is found : [<pp-aterm><get-all-language-name>package-typed-qname]])
+		package-typed-qname at Package(untyped-qname) -> (untyped-qname , $[Multple definitions of Language Name in the Package. Following definition is found : [<pp-aterm>configure-lang-names]])
 		where 
-			not(<get-unique-language-name>package-typed-qname)
+			<get-all-language-name>package-typed-qname => configure-lang-names;
+			is-not-empty-list;
+			not(ensure-is-unique)
+			
+			
 rules 
 	analyze : p at Package(untyped-name) -> <id>
 	with 
 		current-scope := p
 	where 
 		errors*   := 	<collect-all(package-constraint-error, conc)>p  ;
-		warnings* := [];
+		warnings* := <collect-all(package-constraint-warning, conc)>p  ;
 		infos*    := []
 	where 	
 		rules
 		(
-			GetPackageSpecificSemanticProblems :  current-scope  ->  ( errors* , warnings*, infos*)
-		)	
+			GetSemanticProblems :  current-scope  ->  ( errors* , warnings*, infos*)
+		)
 		 
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str	Sun May  8 12:00:30 2011	(r22802)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str	Sun May  8 13:01:16 2011	(r22803)
@@ -18,7 +18,9 @@
 	analyze/check-package
 	lib/editor-common.generated
 imports 
-	utils/contract 	
+	utils/cache
+	utils/debug
+	utils/contract
 	spoofaxlang
 
 rules 
@@ -28,8 +30,7 @@
 		;list-loop(analyze-spx-package)
 
 	
-rules			 
-	// Package specific semantic error checking 
+rules	// Package specific semantic error checking 
 
 	// verify whether this package will be analyzed or not
 	should-analyze-this-package = 
@@ -50,9 +51,9 @@
 			<debug-analysis> $[Analyze| Analyze-spx-package| Planning to Analyze : [<pp-aterm>]] 
 		where
 				if should-analyze-this-package  then //FOR handling circular referneces   
-					<analyze>package-typed-qname;
 					{|GetEnclosingPackageName:
 							rules ( GetEnclosingPackageName      := package-typed-qname);
+							<analyze>package-typed-qname;
 							<list-loop(
 									analyze-spx-module
 								)
@@ -82,9 +83,10 @@
 						 )>module-decl*
 				|};
 				module-abs-path := <DeclaredModule>untyped-qname;
-				where(rules(
-					AnalyzedModule:     module-typed-qname -> module-typed-qname 
-					AnalyzedModulesDeclaredIn:+ module-abs-path -> module-typed-qname
+				where(
+					rules(
+						AnalyzedModule:     module-typed-qname -> module-typed-qname 
+						AnalyzedModulesDeclaredIn:+ module-abs-path -> module-typed-qname
 					)
 				)
 				<+
@@ -107,9 +109,21 @@
 					contract-requires(?Module(QName(_))  |module-typed-qname)
 			)	
 		where
-			<GetSemanticProblems>scope => problems 
+			<GetSemanticProblems>scope 							=> problems-module-level;
+			<GetSemanticProblems>package-typed-qname => problems-package-level;
+			problems := <merge-semantic-problems> ( problems-package-level , problems-module-level) 
 		where
 			<debug-compiler> $[ErrorChecking |  Problmes found [<pp-aterm-forced>scope] :  [<pp-aterm-forced>problems]]	
+		
+	merge-semantic-problems : (unziped-issues1 , unzipped-issues2)-> semantic-problems*
+	with 
+		!unziped-issues1  =>(merrors,mwarnings,minfos);
+		!unzipped-issues2 =>(err, warning, info);
+		combined-problmes* := [(merrors,mwarnings,minfos),(err, warning, info)]
+	where		
+		<unzip-semantic-issuses>combined-problmes* => semantic-problems* 
+
+
 rules
 	/* Converts a list as following 
 	[([a1] , [b1] , [c1])
@@ -141,4 +155,38 @@
 		)
 		
 	unzip-semantic-issuse(|errors, warning, infos) : [] -> (errors, warning, infos)		
+
+	
+rules			// Caching Resulting Semantic Errors 	
+
+	cache-semantic-problems: () -> ()
+	where
+		all-keys-AnalyzedModulesDeclaredIn => list-file*;
+	 	<map(store-semantic-problmes)> list-file*
+	
+	store-semantic-problmes : filepath -> filepath
+	where
+		<debug-compiler>$[Caching | Caching semantic issues : [<pp-aterm>]]
+	where 
+		<get-semantic-problmes-by-file> filepath=> problmes-to-save*
+	where
+		<debug-compiler>$[Caching | Saving problems: [<pp-aterm>problmes-to-save*]];
+		<cache-semantic-issues>( filepath , problmes-to-save*)
+	
+	get-semantic-problmes-by-file : file-abs-path -> problems*
+		where 
+			<bagof-AnalyzedModulesDeclaredIn>file-abs-path=> list-of-modules*;
+			<map(get-semantic-problmes-by-module)>list-of-modules*  => problmes-zipped* ;  
+			<unzip-semantic-issuses>problmes-zipped* => problems*
+		
+	get-semantic-problmes-by-module : module-typed-qname -> problems
+	where
+			<debug-compiler>$[Caching | Caching semantic issues for module [<pp-aterm>]]
+	where
+		<GetEnclosingScope> module-typed-qname => package-typed-qname;
+		<get-analyzed-problems-of> (package-typed-qname,module-typed-qname)=>problems
+	<+
+		problems := ([] , [] , [])
+	where
+		<debug-compiler>$[Caching | Found Problems for this module : [<pp-aterm>problems]]	
  		     
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Sun May  8 12:00:30 2011	(r22802)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Sun May  8 13:01:16 2011	(r22803)
@@ -1,18 +1,15 @@
 module codegen/compile
 
 imports 
-	normalize/main
-	normalize/signatures 
-imports 
-	utils/cache 
+	normalize/- 
 	utils/debug
+	utils/cache
 	utils/path
-imports 
 	analyze/-
 	context/-
 imports
 	common 
-	config
+	config 
 imports 
 	lib/editor-common.generated
 	lib/configuration/SpoofaxConfiguration  
@@ -53,7 +50,7 @@
 							s;	
 				      ?x
 				    ); !x
-			|}
+			|} 
 
 
 rules 	// Compiler initialization 
@@ -153,7 +150,8 @@
 				;<compile-internal>list-of-package-qname 
 				;<debug-compiler>$[=========Getting list of errors============] 
 				;<get-semantic-problmes-by-file>file-abs-path => issues* 
-			) //find out the semantic errors  
+			) 
+			//find out the semantic errors  
 			//;disable-compiler-debugging
 		where
 			if not(<fail-if-has-errors>issues*) then  
@@ -360,36 +358,3 @@
 		<+ 
 		<debug-compiler>$[resolve-package-references | Failed to resolve package referneces:[<pp-aterm>]];fail
 		
-	
-rules			// Caching Resulting Semantic Errors 	
-
-	cache-semantic-problems: () -> ()
-	where
-		all-keys-AnalyzedModulesDeclaredIn => list-file*;
-	 	<map(store-semantic-problmes)> list-file*
-	
-	store-semantic-problmes : filepath -> filepath
-	where
-		<debug-compiler>$[Caching | caching semantic issues : [<pp-aterm>]]
-	where 
-		<get-semantic-problmes-by-file> filepath=> problmes-to-save*
-	where
-		<debug-compiler>$[Caching | Saving problems: [<pp-aterm>problmes-to-save*]];
-		<cache-semantic-issues>( filepath , problmes-to-save*)
-	
-	get-semantic-problmes-by-file : file-abs-path -> problems*
-		where 
-			<bagof-AnalyzedModulesDeclaredIn>file-abs-path=> list-of-modules*;
-			<map(get-semantic-problmes-by-module)>list-of-modules*  => problmes-zipped* ;  
-			<unzip-semantic-issuses>problmes-zipped* => problems*
-		
-	get-semantic-problmes-by-module : module-typed-qname -> problems
-	where
-			<debug-compiler>$[Caching | Caching semantic issues for module [<pp-aterm>]]
-	where
-		<GetEnclosingScope> module-typed-qname => package-typed-qname;
-		<get-analyzed-problems-of> (package-typed-qname,module-typed-qname)=>problems
-	<+
-		problems := ([] , [] , [])
-	where
-		<debug-compiler>$[Caching | Found Problems for this module : [<pp-aterm>problems]]	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str	Sun May  8 12:00:30 2011	(r22802)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str	Sun May  8 13:01:16 2011	(r22803)
@@ -26,7 +26,16 @@
 
 strategies
 	/*internal*/ require(s) = not(s)
-		
+
+strategies 
+	
+	//After ensuring result is unique i.e. list contains only one element, it returns the unique result
+	ensure-is-unique = ?[<id>] <+ debug(!"SymbolTable| Failed to resolve unique declaration.");fail
+	
+	// Verifies that the current term is not a empty list 
+	is-not-empty-list = ?[_|_] 
+	
+			
 rules
  	
  	/**

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str	Sun May  8 12:00:30 2011	(r22802)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str	Sun May  8 13:01:16 2011	(r22803)
@@ -21,7 +21,7 @@
 			
 rules 
 	
-	get-unique-language-name  = where(?Package(QName(_))) ; DeclaredLangaugeName
+	get-language-name  = where(?Package(QName(_))) ; DeclaredLangaugeName
 	 
 	get-unique-language-name = where(?Package(QName(_))) ; bagof-DeclaredLangaugeName; ?[<id>]
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str	Sun May  8 12:00:30 2011	(r22802)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str	Sun May  8 13:01:16 2011	(r22803)
@@ -11,7 +11,7 @@
 	normalize/signatures
 	codegen/compile 
 imports 	 
-	common
+	common 
 	utils/annotations
 	utils/path
 	utils/debug
@@ -51,10 +51,6 @@
 	remove-scope-from-symbol = ?(_,_, <id>) + ?(Globals(), <id>)
 
 rules
-	
-	//After ensuring result is unique i.e. list contains only one element, it returns the unique result
-	ensure-is-unique = ?[<id>] <+ debug(!"SymbolTable| Failed to resolve unique declaration.");fail
-	
 	//resolving symbol in global scope and returing list of result	
 	resolve-symbol-global-declarations(key-resolver, value-resolver)= 
 		?symbol; // NOTE : symbol does not contain any scope information
@@ -166,6 +162,5 @@
 			resolved* := <resolve-imported-symbol-declarations(key-resolver  , value-resolver)> ( symbol, rest*)
 	
 	
-	// Verifies tha tthe current term is not a empty list 
-	is-not-empty-list = ?[_|_] 
+
 			 
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str	Sun May  8 12:00:30 2011	(r22802)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str	Sun May  8 13:01:16 2011	(r22803)
@@ -72,8 +72,9 @@
 	store-langauge-name (| package-typed-qname ) : 
 		LanguageName(name) -> <id>
 		with 
-			<debug> $[ ScopeTree| [<pp-aterm>package-typed-qname] storing  following language name : [<pp-aterm>name]]
-		with 
-			rules( DeclaredLangaugeName :+ package-typed-qname -> name)		
+			rules( DeclaredLangaugeName :+ package-typed-qname -> name)
+		where
+			<debug-symboltable> $[ ScopeTree| [<pp-aterm>package-typed-qname] storing  following language name : [<pp-aterm>name]]
+				
 	
 	 		 		
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Sun May  8 15:09:36 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sun, 08 May 2011 13:09:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22804 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze
Message-ID: <20110508130936.B6B3ECC156@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Sun May  8 13:09:36 2011
New Revision: 22804
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22804&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-project.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-project.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-project.str	Sun May  8 13:01:16 2011	(r22803)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-project.str	Sun May  8 13:09:36 2011	(r22804)
@@ -3,4 +3,7 @@
 //TODO : perform static consistency checking of the workspace/project.
 
 //TODO : add rules to verify that langauge names are unique w.r.t packages.
-
+rules
+	analyze-global: () -> <id>
+	
+	
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str	Sun May  8 13:01:16 2011	(r22803)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str	Sun May  8 13:09:36 2011	(r22804)
@@ -16,6 +16,8 @@
 	analyze/str/check 
 	analyze/check-module
 	analyze/check-package
+	analyze/check-project
+imports	
 	lib/editor-common.generated
 imports 
 	utils/cache
@@ -27,7 +29,8 @@
 	// performs static analysis and semantic checking 
 	analyze-main = 
 		?list-of-package-qnames
-		;list-loop(analyze-spx-package)
+		;<analyze-global>()
+		;<list-loop(analyze-spx-package)>list-of-package-qnames
 
 	
 rules	// Package specific semantic error checking 

From M.A.Akhter at student.tudelft.nl  Sun May  8 15:34:43 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sun, 08 May 2011 13:34:43 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22805 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	analyze/esv context
Message-ID: <20110508133443.77A67CC156@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Sun May  8 13:34:43 2011
New Revision: 22805
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22805&sc=1

Log:
contraint check that language name is unique in a project scope

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str	Sun May  8 13:09:36 2011	(r22804)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str	Sun May  8 13:34:43 2011	(r22805)
@@ -3,6 +3,7 @@
 imports
 	common
 	context/sdf/declare
+
 imports 
 	utils/debug
 	context/-
@@ -37,4 +38,11 @@
     where
       not(<string-ends-with(|".jar") + string-ends-with(|".ctree")> x)
    		
-   		 
\ No newline at end of file
+   constraint-esv-error: 
+   	LanguageName( name ) -> (name, $[ Duplicate declaration of language name. Declared in following packages : [<pp-aterm>packages*]])
+   	where
+   		<get-languagename-declaration-sites> name =>packages*;
+   			is-not-empty-list;
+				not(ensure-is-unique)
+   		
+   	 		 
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str	Sun May  8 13:09:36 2011	(r22804)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str	Sun May  8 13:34:43 2011	(r22805)
@@ -23,10 +23,15 @@
 	
 	get-language-name  = where(?Package(QName(_))) ; DeclaredLangaugeName
 	 
-	get-unique-language-name = where(?Package(QName(_))) ; bagof-DeclaredLangaugeName; ?[<id>]
+	get-unique-language-name = get-all-language-name; ?[<id>]
 	
 	get-all-language-name = where(?Package(QName(_))) ; bagof-DeclaredLangaugeName	
 	
+	get-languagename-declaration-sites = where (is-string) ; bagof-DeclaredLangaugeNameInScope
+	
+	get-languagename-unique-declaration-site = get-languagename-declaration-sites ; ?[<id>]  
+	
+	
 rules 
 	// TODO refactor : reduce the duplicate codes.
 	get-package-declaration = ?package-qname; get-declaration(|Packages())

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str	Sun May  8 13:09:36 2011	(r22804)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str	Sun May  8 13:34:43 2011	(r22805)
@@ -72,7 +72,8 @@
 	store-langauge-name (| package-typed-qname ) : 
 		LanguageName(name) -> <id>
 		with 
-			rules( DeclaredLangaugeName :+ package-typed-qname -> name)
+			rules( DeclaredLangaugeName :+ package-typed-qname -> name);
+			rules( DeclaredLangaugeNameInScope :+ name -> package-typed-qname )
 		where
 			<debug-symboltable> $[ ScopeTree| [<pp-aterm>package-typed-qname] storing  following language name : [<pp-aterm>name]]
 				

From M.A.Akhter at student.tudelft.nl  Sun May  8 15:38:34 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sun, 08 May 2011 13:38:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22806 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans
Message-ID: <20110508133834.373D7CC06B@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Sun May  8 13:38:34 2011
New Revision: 22806
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22806&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str	Sun May  8 13:34:43 2011	(r22805)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str	Sun May  8 13:38:34 2011	(r22806)
@@ -30,7 +30,7 @@
 strategies 
 	
 	//After ensuring result is unique i.e. list contains only one element, it returns the unique result
-	ensure-is-unique = ?[<id>] <+ debug(!"SymbolTable| Failed to resolve unique declaration.");fail
+	ensure-is-unique = ?[<id>] <+ where(<debug-symboltable>$[SymbolTable| Failed to resolve unique declaration.]);fail
 	
 	// Verifies that the current term is not a empty list 
 	is-not-empty-list = ?[_|_] 

From seba at informatik.uni-marburg.de  Mon May  9 09:51:07 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Mon, 09 May 2011 07:51:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22807 -
	sugarj/trunk/compiler/org/sugarj/driver
Message-ID: <20110509075107.B596C108C017@mx3.tudelft.nl>

Author: SebastianErdweg
Date: Mon May  9 07:51:07 2011
New Revision: 22807
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22807&sc=1

Log:
bit of cleanup

Modified:
   sugarj/trunk/compiler/org/sugarj/driver/Driver.java
   sugarj/trunk/compiler/org/sugarj/driver/FileCommands.java

Modified: sugarj/trunk/compiler/org/sugarj/driver/Driver.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/Driver.java	Sun May  8 13:38:34 2011	(r22806)
+++ sugarj/trunk/compiler/org/sugarj/driver/Driver.java	Mon May  9 07:51:07 2011	(r22807)
@@ -54,7 +54,7 @@
  */
 public class Driver{
   
-  public final static String VERSION = "editor-base-0.4";
+  public final static String CACHE_VERSION = "editor-base-0.7";
   
   private static class Key {
     private String source;
@@ -78,7 +78,7 @@
 
   private final static int PENDING_TIMEOUT = 120000;
 
-  private static LRUMap resultCache = new LRUMap(200);
+  private static LRUMap resultCache = new LRUMap(50);
 
   private static List<URI> allInputFiles;
   private static List<URI> pendingInputFiles;
@@ -1323,8 +1323,8 @@
     if (Environment.cacheDir == null)
       return;
     
-    String sdfCache = FileCommands.findFile("sdfCache" + "-" + VERSION, Environment.cacheDir);
-    String strCache = FileCommands.findFile("strCache" + "-" + VERSION, Environment.cacheDir);
+    String sdfCache = FileCommands.findFile("sdfCache" + "-" + CACHE_VERSION, Environment.cacheDir);
+    String strCache = FileCommands.findFile("strCache" + "-" + CACHE_VERSION, Environment.cacheDir);
 
     if (SDFCommands.sdfCache == null && sdfCache != null)
       try {
@@ -1360,16 +1360,16 @@
     if (Environment.cacheDir == null || Environment.rocache)
       return;
     
-    String sdfCache = FileCommands.findFile("sdfCache" + "-" + VERSION , Environment.cacheDir);
-    String strCache = FileCommands.findFile("strCache" + "-" + VERSION, Environment.cacheDir);
+    String sdfCache = FileCommands.findFile("sdfCache" + "-" + CACHE_VERSION , Environment.cacheDir);
+    String strCache = FileCommands.findFile("strCache" + "-" + CACHE_VERSION, Environment.cacheDir);
 
     if (sdfCache == null) {
-      sdfCache = Environment.cacheDir + sep + "sdfCache" + "-" + VERSION;
+      sdfCache = Environment.cacheDir + sep + "sdfCache" + "-" + CACHE_VERSION;
       FileCommands.createFile(sdfCache);
     }
 
     if (strCache == null) {
-      strCache = Environment.cacheDir + sep + "strCache" + "-" + VERSION;
+      strCache = Environment.cacheDir + sep + "strCache" + "-" + CACHE_VERSION;
       FileCommands.createFile(strCache);
     }
     

Modified: sugarj/trunk/compiler/org/sugarj/driver/FileCommands.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/FileCommands.java	Sun May  8 13:38:34 2011	(r22806)
+++ sugarj/trunk/compiler/org/sugarj/driver/FileCommands.java	Mon May  9 07:51:07 2011	(r22807)
@@ -339,30 +339,6 @@
     return module.replace(".", sep);
   }
 
-  private static String locateModule(String module, String fileExtension) {
-    
-    for (String path : Environment.includePath) {
-      File f = new File(path + Environment.sep + module + "." + fileExtension);
-      if (f.exists())
-        return f.getAbsolutePath();
-    }
-    
-    return null;
-  }
-  
-  public static Map<String, Long> locateModules(Collection<String> modules, String fileExtension) {
-    Map<String, Long> map = new HashMap<String, Long>();
-    
-    for (String module : modules) {
-      String path = locateModule(module, fileExtension);
-      
-      if (path != null)
-        map.put(path, new File(path).lastModified());
-    }
-      
-    return map;
-  }
-
   public static int fileHash(String file) throws IOException {
     if (exists(file))
       return readFileAsString(file).hashCode();

From seba at informatik.uni-marburg.de  Mon May  9 09:51:35 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Mon, 09 May 2011 07:51:35 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22808 - in
	sugarj/trunk: case-studies/xml feature stdlib/org/sugarj/init
	stdlib/org/sugarj/languages stdlib/org/sugarj/transformations
	update-site
Message-ID: <20110509075135.E999F2B8005@mx2.tudelft.nl>

Author: SebastianErdweg
Date: Mon May  9 07:51:35 2011
New Revision: 22808
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22808&sc=1

Log:
small extension to the editor service language

Added:
   sugarj/trunk/stdlib/org/sugarj/transformations/EditorServiceExtension.str
Modified:
   sugarj/trunk/case-studies/xml/CSS.sugj
   sugarj/trunk/case-studies/xml/CSSXmlEditor.sugj
   sugarj/trunk/case-studies/xml/XmlEditor.sugj
   sugarj/trunk/case-studies/xml/XmlJavaSyntax.sugj
   sugarj/trunk/feature/feature.xml
   sugarj/trunk/stdlib/org/sugarj/init/initEditor.serv
   sugarj/trunk/stdlib/org/sugarj/init/initTrans.str
   sugarj/trunk/stdlib/org/sugarj/languages/EditorServices-orig.def
   sugarj/trunk/stdlib/org/sugarj/languages/EditorServices.def
   sugarj/trunk/stdlib/org/sugarj/languages/EditorServices.str
   sugarj/trunk/stdlib/org/sugarj/languages/SugarJ-orig.def
   sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.def
   sugarj/trunk/update-site/site.xml

Modified: sugarj/trunk/case-studies/xml/CSS.sugj
==============================================================================
--- sugarj/trunk/case-studies/xml/CSS.sugj	Mon May  9 07:51:07 2011	(r22807)
+++ sugarj/trunk/case-studies/xml/CSS.sugj	Mon May  9 07:51:35 2011	(r22808)
@@ -15,7 +15,9 @@
     "color" ":" CSSColor -> CSSRule {cons("ColorRule")}
     "background-color" ":" CSSColor -> CSSRule {cons("BackgroundColorRule")}
     "environment-color" ":" CSSColor -> CSSRule {cons("ColorAllRule")}
+    "color-recursive" ":" CSSColor -> CSSRule {cons("ColorAllRule")}
     "environment-background-color" ":" CSSColor -> CSSRule {cons("BackgroundColorAllRule")}
+    "background-color-recursive" ":" CSSColor -> CSSRule {cons("BackgroundColorAllRule")}
     "outlining" -> CSSRule {cons("OutliningRule")}
     "folding" -> CSSRule {cons("FoldingRule")}
     

Modified: sugarj/trunk/case-studies/xml/CSSXmlEditor.sugj
==============================================================================
--- sugarj/trunk/case-studies/xml/CSSXmlEditor.sugj	Mon May  9 07:51:07 2011	(r22807)
+++ sugarj/trunk/case-studies/xml/CSSXmlEditor.sugj	Mon May  9 07:51:35 2011	(r22808)
@@ -5,13 +5,9 @@
 import xml.CSS;
 
 public css CSSXmlEditor {
-  Element  { color : darkblue; folding; outlining }
-  ElemName { environment-color : blue }
-  AttrName { environment-color : darkorange }
-  
-  AttValue { color : darkred }
-  _.CharDataPart { color : darkred }
-  FooDoubleQuotedText { color : darkred }
-  
-  CharData { environment-color : black }
+  Element  { folding; outlining }
+  ElemName { color-recursive : blue }
+  AttrName { color-recursive : darkorange }
+  AttValue { color-recursive : darkred }
+  CharData { color-recursive : black }
 }
\ No newline at end of file

Modified: sugarj/trunk/case-studies/xml/XmlEditor.sugj
==============================================================================
--- sugarj/trunk/case-studies/xml/XmlEditor.sugj	Mon May  9 07:51:07 2011	(r22807)
+++ sugarj/trunk/case-studies/xml/XmlEditor.sugj	Mon May  9 07:51:35 2011	(r22808)
@@ -5,20 +5,20 @@
 
 public editor services XmlEditor {
   colorer XmlHighlighting
-    Element : darkblue
-     
-    environment ElemName : blue
-    environment AttrName : darkorange
-    
-    AttValue : darkred
-    _.CharDataPart : darkred
-    FooDoubleQuotedText : darkred
-    
-    environment CharData : black
+    ElemName : blue (recursive)
+    AttrName : darkorange (recursive)
+    AttValue : darkred (recursive)
+    CharData : black (recursive)
 
   folding XmlFolding
     Element
     
   outliner XmlOutliner
     Element
+  
+  checking
+    errors: Element(lname, attrs, content, rname) = 
+            [(lname, "element start and end tag need to coincide"),
+             (rname, "element start and end tag need to coincide")]
+            where <not(equal)> (lname, rname) 
 }
\ No newline at end of file

Modified: sugarj/trunk/case-studies/xml/XmlJavaSyntax.sugj
==============================================================================
--- sugarj/trunk/case-studies/xml/XmlJavaSyntax.sugj	Mon May  9 07:51:07 2011	(r22807)
+++ sugarj/trunk/case-studies/xml/XmlJavaSyntax.sugj	Mon May  9 07:51:35 2011	(r22808)
@@ -20,12 +20,10 @@
 
   context-free syntax
     "<{" JavaStm  "}/>" -> Content {cons("FromMetaStm")}
-    
+    AttrName "=" JavaAttValue -> Attribute {cons("Attribute"), prefer}
+
   syntax
-    "{" <LAYOUT?-CF> <JavaExpr-CF> <LAYOUT?-CF> "}" -> FooDoubleQuotedText {cons("FromMetaExpr"), prefer}
+    "\"{" <LAYOUT?-CF> <JavaExpr-CF> <LAYOUT?-CF> "}\"" -> <JavaAttValue-CF> {cons("FromMetaExpr")}
     "{" <LAYOUT?-CF> <JavaExpr-CF> <LAYOUT?-CF> "::" <LAYOUT?-CF> "cdata" <LAYOUT?-CF> "}" -> <Content-CF> {cons("TextFromMetaExpr")}
-  
-  signature constructors
-    TextFromMetaExpr : a -> a
 
 }
\ No newline at end of file

Modified: sugarj/trunk/feature/feature.xml
==============================================================================
--- sugarj/trunk/feature/feature.xml	Mon May  9 07:51:07 2011	(r22807)
+++ sugarj/trunk/feature/feature.xml	Mon May  9 07:51:35 2011	(r22808)
@@ -2,7 +2,7 @@
 <feature
       id="org.sugarj.editor"
       label="SugarJ"
-      version="1.0.3.qualifier"
+      version="1.0.6.qualifier"
       provider-name="sugarj.org">
 
    <description url="http://www.sugarj.org/update">

Modified: sugarj/trunk/stdlib/org/sugarj/init/initEditor.serv
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/init/initEditor.serv	Mon May  9 07:51:07 2011	(r22807)
+++ sugarj/trunk/stdlib/org/sugarj/init/initEditor.serv	Mon May  9 07:51:35 2011	(r22808)
@@ -34,6 +34,25 @@
   fences : ( )
   fences : { }
   fences : [ ]
-  fences : ' '
-//  fences : "\"" "\""
+  
+  line comment                           : "//"
+  block comment                          : "/*" * "*/"
+
+folding
+  ToplevelDeclaration
+  EditorServiceSection
+  SugarDefElem
+  JavaFieldDec
+  JavaMethodDec    
+  JavaClassDec     
+  JavaInterfaceDec
+  JavaEnumDec 
+
+outliner
+  ToplevelDeclaration
+  JavaFieldDec
+  JavaMethodDec    
+  JavaClassDec     
+  JavaInterfaceDec
+  JavaEnumDec 
   
\ No newline at end of file

Modified: sugarj/trunk/stdlib/org/sugarj/init/initTrans.str
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/init/initTrans.str	Mon May  9 07:51:07 2011	(r22807)
+++ sugarj/trunk/stdlib/org/sugarj/init/initTrans.str	Mon May  9 07:51:35 2011	(r22808)
@@ -3,6 +3,7 @@
         org/sugarj/languages/SugarJ
 
 imports org/sugarj/transformations/GenerateSignatures
+        org/sugarj/transformations/EditorServiceExtension
 
 signature constructors
   NextToplevelDeclaration : ToplevelDeclaration * Rest -> NextToplevelDeclaration

Modified: sugarj/trunk/stdlib/org/sugarj/languages/EditorServices-orig.def
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/languages/EditorServices-orig.def	Mon May  9 07:51:07 2011	(r22807)
+++ sugarj/trunk/stdlib/org/sugarj/languages/EditorServices-orig.def	Mon May  9 07:51:35 2011	(r22808)
@@ -168,9 +168,11 @@
 
   context-free syntax
   
+    ColorNode ":" Attribute "(recursive)" -> ColorRule {cons("ColorRuleAll")} %% One rule to rule them all
     "environment" ColorNode ":" Attribute -> ColorRule {cons("ColorRuleAll")} %% One rule to rule them all
                   ColorNode ":" Attribute -> ColorRule {cons("ColorRule")}
     
+    ColorNode ":" String "=" Attribute "(recursive)" -> ColorRule {cons("ColorRuleAllNamed")}
     "environment" ColorNode ":" String "=" Attribute -> ColorRule {cons("ColorRuleAllNamed")}
                   ColorNode ":" String "=" Attribute -> ColorRule {cons("ColorRuleNamed")}
 
@@ -181,6 +183,8 @@
     TokenKindName -> ColorNode {cons("Token"), prefer}
     "token" Id    -> ColorNode {cons("Literal")}
     
+    "(recursive)" -> ColorOption {cons("Recursive")}
+    
     "identifier" -> TokenKindName {cons("TK_IDENTIFIER")}
     "number"     -> TokenKindName {cons("TK_NUMBER")}
     "layout"     -> TokenKindName {cons("TK_LAYOUT")}
@@ -213,6 +217,7 @@
     String         -> AttributeId          %% Descriptive color name (could be shown in IDE)
     "_"            -> AttributeId {reject}
     Font           -> AttributeId {reject}
+    "rec"          -> AttributeId {reject}
     "environment"  -> AttributeId {reject}
 
 module OutlinerService

Modified: sugarj/trunk/stdlib/org/sugarj/languages/EditorServices.def
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/languages/EditorServices.def	Mon May  9 07:51:07 2011	(r22807)
+++ sugarj/trunk/stdlib/org/sugarj/languages/EditorServices.def	Mon May  9 07:51:35 2011	(r22808)
@@ -178,8 +178,10 @@
     "colorer"                                                -> <ReservedName-CF> 
 
   context-free syntax
+    ColorNode ":" Attribute "(recursive)"            -> ColorRule     {cons("ColorRuleAll")} %% One rule to rule them all
     "environment" ColorNode ":" Attribute            -> ColorRule     {cons("ColorRuleAll")}
     ColorNode ":" Attribute                          -> ColorRule     {cons("ColorRule")}
+    ColorNode ":" String "=" Attribute "(recursive)" -> ColorRule     {cons("ColorRuleAllNamed")}
     "environment" ColorNode ":" String "=" Attribute -> ColorRule     {cons("ColorRuleAllNamed")}
     ColorNode ":" String "=" Attribute               -> ColorRule     {cons("ColorRuleNamed")}
     Color MaybeColor Font                            -> Attribute     {cons("Attribute")}
@@ -212,6 +214,7 @@
     "_"                                              -> AttributeId   {reject}
     Font                                             -> AttributeId   {reject}
     "environment"                                    -> AttributeId   {reject}
+    "rec"                                            -> AttributeId   {reject}
 
 module OutlinerService
 imports Common

Modified: sugarj/trunk/stdlib/org/sugarj/languages/EditorServices.str
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/languages/EditorServices.str	Mon May  9 07:51:07 2011	(r22807)
+++ sugarj/trunk/stdlib/org/sugarj/languages/EditorServices.str	Mon May  9 07:51:35 2011	(r22808)
@@ -128,6 +128,9 @@
                                : String -> STRING
                                : String -> Int
                                : String -> Id
+    Recursive : a
+    ColorRuleOptions : n * a * os -> cr
+    ColorRuleNamedOptions : n * s * a * os -> cr
 
 
 signature

Modified: sugarj/trunk/stdlib/org/sugarj/languages/SugarJ-orig.def
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/languages/SugarJ-orig.def	Mon May  9 07:51:07 2011	(r22807)
+++ sugarj/trunk/stdlib/org/sugarj/languages/SugarJ-orig.def	Mon May  9 07:51:35 2011	(r22808)
@@ -154,3 +154,14 @@
     AnnoOrSugarMod* "editor" "services" JavaId -> EditorServicesDecHead {cons("EditorServicesDecHead")}
     "{" EditorServiceSection*  "}" -> EditorServicesBody {cons("EditorServicesBody")}
     
+  syntax
+    "checking" <EditorServiceSectionName-LEX> <LAYOUT?-CF> <CheckingRule*-CF> -> <EditorServiceSection-CF>      {cons("Checking")}
+    "checking"                                                                -> <EditorServiceReservedName-CF> 
+
+  context-free syntax
+    "errors" ":" CheckingRuleBody                          -> CheckingRule     {cons("CheckingRuleErrors")}
+    "warnings" ":" CheckingRuleBody                        -> CheckingRule     {cons("CheckingRuleWarnings")}
+    "notes" ":" CheckingRuleBody                           -> CheckingRule     {cons("CheckingRuleNotes")}
+    StrategoTerm "=" StrategoTerm                          -> CheckingRuleBody {cons("RuleNoCond")}
+    StrategoTerm "=" StrategoTerm "where" StrategoStrategy -> CheckingRuleBody {cons("Rule")}
+    StrategoTerm "=" StrategoTerm StrategoRuleCond+        -> CheckingRuleBody {cons("Rule"), avoid}

Modified: sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.def
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.def	Mon May  9 07:51:07 2011	(r22807)
+++ sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.def	Mon May  9 07:51:35 2011	(r22808)
@@ -157,6 +157,17 @@
     AnnoOrSugarMod* "editor" "services" JavaId -> EditorServicesDecHead {cons("EditorServicesDecHead")}
     "{" EditorServiceSection* "}"              -> EditorServicesBody    {cons("EditorServicesBody")}
 
+  syntax
+    "checking" <EditorServiceSectionName-LEX> <LAYOUT?-CF> <CheckingRule*-CF> -> <EditorServiceSection-CF>      {cons("Checking")}
+    "checking"                                                                -> <EditorServiceReservedName-CF> 
+
+  context-free syntax
+    "errors" ":" CheckingRuleBody                          -> CheckingRule     {cons("CheckingRuleErrors")}
+    "warnings" ":" CheckingRuleBody                        -> CheckingRule     {cons("CheckingRuleWarnings")}
+    "notes" ":" CheckingRuleBody                           -> CheckingRule     {cons("CheckingRuleNotes")}
+    StrategoTerm "=" StrategoTerm                          -> CheckingRuleBody {cons("RuleNoCond")}
+    StrategoTerm "=" StrategoTerm "where" StrategoStrategy -> CheckingRuleBody {cons("Rule")}
+    StrategoTerm "=" StrategoTerm StrategoRuleCond+        -> CheckingRuleBody {cons("Rule"), avoid}
 
 
   lexical syntax

Added: sugarj/trunk/stdlib/org/sugarj/transformations/EditorServiceExtension.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/trunk/stdlib/org/sugarj/transformations/EditorServiceExtension.str	Mon May  9 07:51:35 2011	(r22808)
@@ -0,0 +1,82 @@
+module org/sugarj/transformations/EditorServiceExtension
+
+imports org/sugarj/languages/EditorServices 
+        org/sugarj/languages/SugarJ
+
+signature
+  constructors
+    Checking : lexEditorServiceSectionName() * cfiter-star() -> cfEditorServiceSection()
+
+
+signature
+  constructors
+    CheckingRuleErrors   : CheckingRuleBody() -> CheckingRule()
+    CheckingRuleWarnings : CheckingRuleBody() -> CheckingRule()
+    CheckingRuleNotes    : CheckingRuleBody() -> CheckingRule()
+    RuleNoCond           : StrategoTerm() * StrategoTerm() -> CheckingRuleBody()
+    Rule                 : StrategoTerm() * StrategoTerm() * StrategoStrategy() -> CheckingRuleBody()
+    Rule                 : StrategoTerm() * StrategoTerm() * iter() -> CheckingRuleBody()
+
+
+rules
+
+  service-to-sugar :
+    CheckingRuleErrors(r) -> ( []
+                             , [ transformation-elem(
+                                   Rules([RDefNoArgs("constraint-error", r)])
+                                 )
+                               ]
+                             )
+
+  service-to-sugar :
+    CheckingRuleWarnings(r) -> ( []
+                               , [ transformation-elem(
+                                     Rules([RDefNoArgs("constraint-warning", r)])
+                                   )
+                                 ]
+                               )
+
+  service-to-sugar :
+    CheckingRuleNotes(r) -> ( []
+                            , [ transformation-elem(
+                                  Rules([RDefNoArgs("constraint-note", r)])
+                                )
+                              ]
+                            )
+
+
+strategies
+  desugar =
+    changed-tree(extract-sugar-from-service)
+
+
+rules
+
+  extract-sugar-from-service :
+    EditorServicesDec(
+      EditorServicesDecHead(mods, n)
+    , EditorServicesBody(sections)
+    ) -> [ EditorServicesDec(
+             EditorServicesDecHead(mods, n)
+           , EditorServicesBody(newsections)
+           )
+         , SugarDec(
+             SugarDecHead(mods, n)
+           , SugarBody(elems)
+           )
+         ]
+    where <(extract-sugar-from-service-sections ; not(?(_, [])))> sections => (newsections, elems)
+
+  extract-sugar-from-service-sections :
+    [] -> ([], [])
+
+  extract-sugar-from-service-sections :
+    [x|xs] -> ( <conc> (ys, ys2)
+              , <conc> (zs, zs2)
+              )
+    where <service-to-sugar> x => (ys, zs)
+          ; <extract-sugar-from-service-sections> xs => (ys2, zs2)
+
+  extract-sugar-from-service-sections :
+    [x|xs] -> ([x|ys], zs)
+    where <extract-sugar-from-service-sections> xs => (ys, zs)
\ No newline at end of file

Modified: sugarj/trunk/update-site/site.xml
==============================================================================
--- sugarj/trunk/update-site/site.xml	Mon May  9 07:51:07 2011	(r22807)
+++ sugarj/trunk/update-site/site.xml	Mon May  9 07:51:35 2011	(r22808)
@@ -3,7 +3,7 @@
    <description name="SugarJ" url="sugarj.org/update">
       SugarJ
    </description>
-   <feature url="features/org.sugarj.editor_1.0.3.201104291626.jar" id="org.sugarj.editor" version="1.0.3.201104291626">
+   <feature url="features/org.sugarj.editor_1.0.6.201105081855.jar" id="org.sugarj.editor" version="1.0.6.201105081855">
       <category name="SugarJ"/>
    </feature>
    <category-def name="SugarJ" label="SugarJ">

From seba at informatik.uni-marburg.de  Mon May  9 10:11:41 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Mon, 09 May 2011 08:11:41 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22809 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20110509081141.3E74FCC084@mx4.tudelft.nl>

Author: SebastianErdweg
Date: Mon May  9 08:11:41 2011
New Revision: 22809
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22809&sc=1

Log:
simplification

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java	Mon May  9 07:51:35 2011	(r22808)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java	Mon May  9 08:11:41 2011	(r22809)
@@ -172,8 +172,7 @@
 		Color fg = master.getForeground();
 		Color bg = master.getBackground();
 		
-		int style = Math.max(master.getStyle() & SWT.BOLD, slave.getStyle() & SWT.BOLD)
-		          + Math.max(master.getStyle() & SWT.ITALIC, slave.getStyle() & SWT.ITALIC);
+		int style = master.getStyle() | slave.getStyle();
 
 		if (fg == null || bg == null || style != master.getStyle()) {
 			return new TextAttribute(fg == null ? slave.getForeground() : fg, bg == null ? slave

From R.B.Vermaas at tudelft.nl  Mon May  9 11:12:32 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 09:12:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22810 - hydra/jobs
Message-ID: <20110509091232.2BEC9108C03C@mx3.tudelft.nl>

Author: rob
Date: Mon May  9 09:12:31 2011
New Revision: 22810
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22810&sc=1

Log:
mehhh

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Mon May  9 08:11:41 2011	(r22809)
+++ hydra/jobs/spoofax-imp.nix	Mon May  9 09:12:31 2011	(r22810)
@@ -191,6 +191,36 @@
  <plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-antrun-plugin</artifactId>
+    <dependencies>
+        <dependency>
+            <groupId>local</groupId>
+            <artifactId>aster</artifactId>
+            <version>1.0</version>
+            <scope>system</scope>
+            <systemPath>${basedir}/utils/aster.jar</systemPath>
+        </dependency>
+        <dependency>
+            <groupId>local</groupId>
+            <artifactId>strategoxt</artifactId>
+            <version>1.0</version>
+            <scope>system</scope>
+            <systemPath>${basedir}/utils/strategoxt.jar</systemPath>
+        </dependency>
+        <dependency>
+            <groupId>local</groupId>
+            <artifactId>sdf2imp</artifactId>
+            <version>1.0</version>
+            <scope>system</scope>
+            <systemPath>${basedir}/utils/sdf2imp.jar</systemPath>
+        </dependency>
+        <dependency>
+            <groupId>local</groupId>
+            <artifactId>make_permissive.jar</artifactId>
+            <version>1.0</version>
+            <scope>system</scope>
+            <systemPath>${basedir}/utils/make_permissive.jar</systemPath>
+        </dependency>
+    </dependencies>
     <executions>
        <execution>
                <id>generate-sources</id>

From tobivollebregt at gmail.com  Mon May  9 11:13:13 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 09 May 2011 09:13:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22811 - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime:
	src/org/strategoxt/imp/runtime/services
	test/org/strategoxt/imp/runtime/services
Message-ID: <20110509091313.6DF8C2B8024@mx2.tudelft.nl>

Author: tvo
Date: Mon May  9 09:13:13 2011
New Revision: 22811
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22811&sc=1

Log:
Completion: remove special case for completions that don't start with identifierLexical

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/imp/runtime/services/TestFilterCompletions.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Mon May  9 09:12:31 2011	(r22810)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Mon May  9 09:13:13 2011	(r22811)
@@ -304,7 +304,7 @@
 				continue;
 			if (!backTrackResultsOnly && proposalPrefix.regionMatches(IGNORE_TEMPLATE_PREFIX_CASE, 0, prefix, 0, prefix.length())) {
 				if (!proposal.isBlankLineRequired() || isBlankBeforeOffset(document, offset - prefix.length()))
-					if (proposal.isSemantic() || prefix.length() > 0 || proposalPrefix.length() == 0 || identifierLexical.matcher(proposalPrefix).lookingAt())
+					//if (proposal.isSemantic() || prefix.length() > 0 || proposalPrefix.length() == 0 || identifierLexical.matcher(proposalPrefix).lookingAt())
 						results.add(new ContentProposal(this, proposal, prefix, offsetPosition, viewer));
 			}
 			if (prefix.length() == 0) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/imp/runtime/services/TestFilterCompletions.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/imp/runtime/services/TestFilterCompletions.java	Mon May  9 09:12:31 2011	(r22810)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/imp/runtime/services/TestFilterCompletions.java	Mon May  9 09:13:13 2011	(r22811)
@@ -81,7 +81,7 @@
 	public void testNonIdentifier() {
 		completions.add(Completion.makeTemplate(", avoid", null));
 		filterCompletions("", "", 0, 0, noSorts);
-		assertEquals(0, results.length);
+		assertEquals(1, results.length);
 	}
 	
 	@Test

From R.B.Vermaas at tudelft.nl  Mon May  9 11:16:24 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 09:16:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22812 - hydra/jobs
Message-ID: <20110509091624.2958E7F8002@mx1.tudelft.nl>

Author: rob
Date: Mon May  9 09:16:23 2011
New Revision: 22812
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22812&sc=1

Log:
mehhh

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Mon May  9 09:13:13 2011	(r22811)
+++ hydra/jobs/spoofax-imp.nix	Mon May  9 09:16:23 2011	(r22812)
@@ -197,28 +197,28 @@
             <artifactId>aster</artifactId>
             <version>1.0</version>
             <scope>system</scope>
-            <systemPath>${basedir}/utils/aster.jar</systemPath>
+            <systemPath>''${basedir}/utils/aster.jar</systemPath>
         </dependency>
         <dependency>
             <groupId>local</groupId>
             <artifactId>strategoxt</artifactId>
             <version>1.0</version>
             <scope>system</scope>
-            <systemPath>${basedir}/utils/strategoxt.jar</systemPath>
+            <systemPath>''${basedir}/utils/strategoxt.jar</systemPath>
         </dependency>
         <dependency>
             <groupId>local</groupId>
             <artifactId>sdf2imp</artifactId>
             <version>1.0</version>
             <scope>system</scope>
-            <systemPath>${basedir}/utils/sdf2imp.jar</systemPath>
+            <systemPath>''${basedir}/utils/sdf2imp.jar</systemPath>
         </dependency>
         <dependency>
             <groupId>local</groupId>
             <artifactId>make_permissive.jar</artifactId>
             <version>1.0</version>
             <scope>system</scope>
-            <systemPath>${basedir}/utils/make_permissive.jar</systemPath>
+            <systemPath>''${basedir}/utils/make_permissive.jar</systemPath>
         </dependency>
     </dependencies>
     <executions>

From R.B.Vermaas at tudelft.nl  Mon May  9 11:22:58 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 09:22:58 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22813 - hydra/jobs
Message-ID: <20110509092258.C36CA7F8002@mx1.tudelft.nl>

Author: rob
Date: Mon May  9 09:22:58 2011
New Revision: 22813
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22813&sc=1

Log:
add java compiler to deps

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Mon May  9 09:16:23 2011	(r22812)
+++ hydra/jobs/spoofax-imp.nix	Mon May  9 09:22:58 2011	(r22813)
@@ -220,6 +220,13 @@
             <scope>system</scope>
             <systemPath>''${basedir}/utils/make_permissive.jar</systemPath>
         </dependency>
+        <dependency>
+           <groupId>com.sun</groupId>
+            <artifactId>tools</artifactId>
+            <version>1.4.2</version>
+            <scope>system</scope>
+            <systemPath>${java.home}/../lib/tools.jar</systemPath>
+        </dependency>
     </dependencies>
     <executions>
        <execution>

From R.B.Vermaas at tudelft.nl  Mon May  9 11:23:40 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 09:23:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22814 - hydra/jobs
Message-ID: <20110509092340.20397CC0C9@mx4.tudelft.nl>

Author: rob
Date: Mon May  9 09:23:39 2011
New Revision: 22814
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22814&sc=1

Log:
add java compiler to deps

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Mon May  9 09:22:58 2011	(r22813)
+++ hydra/jobs/spoofax-imp.nix	Mon May  9 09:23:39 2011	(r22814)
@@ -225,7 +225,7 @@
             <artifactId>tools</artifactId>
             <version>1.4.2</version>
             <scope>system</scope>
-            <systemPath>${java.home}/../lib/tools.jar</systemPath>
+            <systemPath>''${java.home}/../lib/tools.jar</systemPath>
         </dependency>
     </dependencies>
     <executions>

From R.B.Vermaas at tudelft.nl  Mon May  9 11:35:57 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 09:35:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22815 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans
Message-ID: <20110509093557.9A284108C02F@mx3.tudelft.nl>

Author: rob
Date: Mon May  9 09:35:57 2011
New Revision: 22815
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22815&sc=1

Log:
fixing build, configuration dir is with capital C

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Mon May  9 09:23:39 2011	(r22814)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Mon May  9 09:35:57 2011	(r22815)
@@ -7,7 +7,7 @@
 imports 
 	common
 	utils/debug
-	lib/configuration/SpoofaxConfiguration
+	lib/Configuration/SpoofaxConfiguration
 	lib/editor-common.generated
 	spoofaxlang
 	
@@ -253,4 +253,4 @@
 	throw-directory-not-found-exception(post-processing-strategy) = debug(!"Configuration | Failed to find the directory specified: ") ;post-processing-strategy
 	
 	throw-config-not-found-exception(post-processing-strategy) = debug(!"Configuration | Failed to find spx.config file in the directory specified: ") ;post-processing-strategy
-	   	 		 		
\ No newline at end of file
+	   	 		 		

From R.B.Vermaas at tudelft.nl  Mon May  9 11:46:11 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 09:46:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22816 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	codegen codegen/sdf unit-tests utils
Message-ID: <20110509094611.1EC17108C00D@mx3.tudelft.nl>

Author: rob
Date: Mon May  9 09:46:10 2011
New Revision: 22816
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22816&sc=1

Log:
why do people use case insensitive file systems :-S

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-name-analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/path.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Mon May  9 09:35:57 2011	(r22815)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Mon May  9 09:46:10 2011	(r22816)
@@ -12,7 +12,7 @@
 	config 
 imports 
 	lib/editor-common.generated
-	lib/configuration/SpoofaxConfiguration  
+	lib/Configuration/SpoofaxConfiguration  
 	include/SpoofaxLang
 imports	
 	codegen/generate

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Mon May  9 09:35:57 2011	(r22815)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Mon May  9 09:46:10 2011	(r22816)
@@ -13,7 +13,7 @@
 	common
 imports	
 	lib/editor-common.generated
-	include/spoofaxlang
+	include/SpoofaxLang
 imports	
 	
 	context/-

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str	Mon May  9 09:35:57 2011	(r22815)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/main.str	Mon May  9 09:46:10 2011	(r22816)
@@ -13,7 +13,7 @@
 	lib/editor-common.generated
 	context/-
   normalize/signatures  
-	include/spoofaxlang
+	include/SpoofaxLang
 	utils/path
 imports 	
 	libstratego-gpp

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-name-analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-name-analysis.str	Mon May  9 09:35:57 2011	(r22815)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-name-analysis.str	Mon May  9 09:46:10 2011	(r22816)
@@ -4,7 +4,7 @@
   lib/editor-common.generated
   context/sdf/declare-signature
   context/sdf/declare
-  include/spoofaxlang 
+  include/SpoofaxLang 
   analyze/sdf/check
   
 rules

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Mon May  9 09:35:57 2011	(r22815)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Mon May  9 09:46:10 2011	(r22816)
@@ -11,7 +11,7 @@
 	context/sdf/declare-signature
 	context/sdf/declare
 	codegen/sdf/to-sdf
-	include/spoofaxlang
+	include/SpoofaxLang
 imports
 	codegen/compile
 	codegen/main

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/path.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/path.str	Mon May  9 09:35:57 2011	(r22815)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/path.str	Mon May  9 09:46:10 2011	(r22816)
@@ -3,7 +3,7 @@
 imports 
 	common
 	utils/path
-	include/spoofaxlang
+	include/SpoofaxLang
 rules
 	test-path:
 		(selected, position, ast, path, project-path) -> selected

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str	Mon May  9 09:35:57 2011	(r22815)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str	Mon May  9 09:46:10 2011	(r22816)
@@ -5,7 +5,7 @@
 imports
 	common
 	utils/debug
-	include/spoofaxlang
+	include/SpoofaxLang
 	spoofaxlang
 
 rules 

From R.B.Vermaas at tudelft.nl  Mon May  9 11:46:37 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 09:46:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22817 - hydra/jobs
Message-ID: <20110509094637.B1A1C7F803A@mx1.tudelft.nl>

Author: rob
Date: Mon May  9 09:46:37 2011
New Revision: 22817
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22817&sc=1

Log:


Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Mon May  9 09:46:10 2011	(r22816)
+++ hydra/jobs/spoofax-imp.nix	Mon May  9 09:46:37 2011	(r22817)
@@ -262,7 +262,7 @@
             cp -v org.strategoxt.imp.generator/lib/*.jar utils/
             cp -v org.strategoxt.strj/java/strategoxt.jar utils/
 
-            mvn -X package ${mvnFlags} -e
+            mvn package ${mvnFlags} -e
 	      '';
 	      
 	      installPhase = ''

From R.B.Vermaas at tudelft.nl  Mon May  9 12:06:45 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 10:06:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22818 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans
Message-ID: <20110509100645.0CA977F8002@mx1.tudelft.nl>

Author: rob
Date: Mon May  9 10:06:43 2011
New Revision: 22818
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22818&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Mon May  9 09:46:37 2011	(r22817)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Mon May  9 10:06:43 2011	(r22818)
@@ -157,7 +157,7 @@
 	parse-spoofaxconfiguration-file =
     parse-file(
       strsglr-perror, strsglr-report-parse-error
-    | <import-term(lib/configuration/SpoofaxConfiguration.tbl)>
+    | <import-term(lib/Configuration/SpoofaxConfiguration.tbl)>
     )
 	
 	//Returns output directory for the code generation

From R.B.Vermaas at tudelft.nl  Mon May  9 12:31:46 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 10:31:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22819 - hydra/jobs
Message-ID: <20110509103146.BB9672B8003@mx2.tudelft.nl>

Author: rob
Date: Mon May  9 10:31:46 2011
New Revision: 22819
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22819&sc=1

Log:
bigger heap size to compile spoofax editor

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Mon May  9 10:06:43 2011	(r22818)
+++ hydra/jobs/spoofax-imp.nix	Mon May  9 10:31:46 2011	(r22819)
@@ -174,11 +174,8 @@
             make -C org.strategoxt.imp.generator all
             stopNest
 
-            export LOCALCLASSPATH="utils/aster.jar:utils/strategoxt.jar:utils/sdf2imp.jar:utils/make_permissive.jar"
-            export ANT_OPTS="-Xss8m -Xmx768m"
-            export ANT_ARGS="-Declipse.spoofaximp.jars=utils/ -Declipse.home=$eclipsefakehome"
             export CLASSPATH="`pwd`/utils/aster.jar:`pwd`/utils/strategoxt.jar:`pwd`/utils/sdf2imp.jar:`pwd`/utils/make_permissive.jar"
-            export MAVEN_OPTS="-Xss8m -Xmx768m"
+            export MAVEN_OPTS="-Xss8m -Xmx1280m"
 
             for e in */build.main.xml
             do

From R.B.Vermaas at tudelft.nl  Mon May  9 13:03:51 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 11:03:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22820 - hydra/jobs
Message-ID: <20110509110351.CF7692B8007@mx2.tudelft.nl>

Author: rob
Date: Mon May  9 11:03:51 2011
New Revision: 22820
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22820&sc=1

Log:
disable spoofax for now

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Mon May  9 10:31:46 2011	(r22819)
+++ hydra/jobs/spoofax-imp.nix	Mon May  9 11:03:51 2011	(r22820)
@@ -96,7 +96,6 @@
                          ${spoofaxImp}/org.strategoxt.imp.editors.pp \
                          ${spoofaxImp}/org.strategoxt.imp.editors.rtg \
                          ${spoofaxImp}/org.strategoxt.imp.editors.sdf \
-                         ${spoofaxImp}/org.strategoxt.imp.editors.spoofax \
                          ${spoofaxImp}/org.strategoxt.imp.editors.stratego \
                      ${spoofaxImp}/org.strategoxt.imp.testing \
                          ${spoofaxImp}/org.strategoxt.imp.feature \

From R.B.Vermaas at tudelft.nl  Mon May  9 13:14:46 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 11:14:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22821 - hydra/jobs
Message-ID: <20110509111446.7DA40CC084@mx4.tudelft.nl>

Author: rob
Date: Mon May  9 11:14:46 2011
New Revision: 22821
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22821&sc=1

Log:
revert previous commit and try with even higher heap size

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Mon May  9 11:03:51 2011	(r22820)
+++ hydra/jobs/spoofax-imp.nix	Mon May  9 11:14:46 2011	(r22821)
@@ -96,6 +96,7 @@
                          ${spoofaxImp}/org.strategoxt.imp.editors.pp \
                          ${spoofaxImp}/org.strategoxt.imp.editors.rtg \
                          ${spoofaxImp}/org.strategoxt.imp.editors.sdf \
+                         ${spoofaxImp}/org.strategoxt.imp.editors.spoofax \
                          ${spoofaxImp}/org.strategoxt.imp.editors.stratego \
                      ${spoofaxImp}/org.strategoxt.imp.testing \
                          ${spoofaxImp}/org.strategoxt.imp.feature \
@@ -174,7 +175,7 @@
             stopNest
 
             export CLASSPATH="`pwd`/utils/aster.jar:`pwd`/utils/strategoxt.jar:`pwd`/utils/sdf2imp.jar:`pwd`/utils/make_permissive.jar"
-            export MAVEN_OPTS="-Xss8m -Xmx1280m"
+            export MAVEN_OPTS="-Xss8m -Xmx2048m"
 
             for e in */build.main.xml
             do

From R.B.Vermaas at tudelft.nl  Mon May  9 13:18:16 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 11:18:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22822 - hydra/jobs
Message-ID: <20110509111816.80BCF7F8020@mx1.tudelft.nl>

Author: rob
Date: Mon May  9 11:18:16 2011
New Revision: 22822
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22822&sc=1

Log:
try and use ecj

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Mon May  9 11:14:46 2011	(r22821)
+++ hydra/jobs/spoofax-imp.nix	Mon May  9 11:18:16 2011	(r22822)
@@ -224,6 +224,13 @@
             <scope>system</scope>
             <systemPath>''${java.home}/../lib/tools.jar</systemPath>
         </dependency>
+        <dependency>
+           <groupId>ecj</groupId>
+            <artifactId>ecj</artifactId>
+            <version>1.0</version>
+            <scope>system</scope>
+            <systemPath>${pkgs.ecj}/lib/java/ecj.jar</systemPath>
+        </dependency>
     </dependencies>
     <executions>
        <execution>
@@ -237,6 +244,7 @@
                                <property name="eclipse.spoofaximp.jars" value="utils/"/>
                                <property name="eclipse.spoofaximp.strategojar" value="utils/strategoxt.jar"/>
                                <property name="eclipse.home" value="${eclipse}/eclipse"/>
+                               <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
                                <ant antfile="build.main.xml" inheritRefs="true">
                                </ant>
                        </tasks>

From R.B.Vermaas at tudelft.nl  Mon May  9 13:23:25 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 11:23:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22823 - hydra/jobs
Message-ID: <20110509112325.E61DE7F8002@mx1.tudelft.nl>

Author: rob
Date: Mon May  9 11:23:25 2011
New Revision: 22823
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22823&sc=1

Log:
try and use ecj

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Mon May  9 11:18:16 2011	(r22822)
+++ hydra/jobs/spoofax-imp.nix	Mon May  9 11:23:25 2011	(r22823)
@@ -175,7 +175,7 @@
             stopNest
 
             export CLASSPATH="`pwd`/utils/aster.jar:`pwd`/utils/strategoxt.jar:`pwd`/utils/sdf2imp.jar:`pwd`/utils/make_permissive.jar"
-            export MAVEN_OPTS="-Xss8m -Xmx2048m"
+            export MAVEN_OPTS="-Xss8m -Xmx1024m"
 
             for e in */build.main.xml
             do

From R.B.Vermaas at tudelft.nl  Mon May  9 13:35:36 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 11:35:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22824 - hydra/jobs
Message-ID: <20110509113536.639F8108C03C@mx3.tudelft.nl>

Author: rob
Date: Mon May  9 11:35:36 2011
New Revision: 22824
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22824&sc=1

Log:


Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Mon May  9 11:23:25 2011	(r22823)
+++ hydra/jobs/spoofax-imp.nix	Mon May  9 11:35:36 2011	(r22824)
@@ -244,6 +244,7 @@
                                <property name="eclipse.spoofaximp.jars" value="utils/"/>
                                <property name="eclipse.spoofaximp.strategojar" value="utils/strategoxt.jar"/>
                                <property name="eclipse.home" value="${eclipse}/eclipse"/>
+                               <property name="java.jar.enabled" value="true"/>
                                <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
                                <ant antfile="build.main.xml" inheritRefs="true">
                                </ant>

From R.B.Vermaas at tudelft.nl  Mon May  9 15:51:38 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 13:51:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22825 -
	spoofax-imp/trunk/org.strategoxt.imp.testing
Message-ID: <20110509135138.46470CC128@mx4.tudelft.nl>

Author: rob
Date: Mon May  9 13:51:38 2011
New Revision: 22825
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22825&sc=1

Log:
check for Main.java in stead of .class for java.jar.enabled

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.testing/build.generated.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/build.generated.xml	Mon May  9 11:35:36 2011	(r22824)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/build.generated.xml	Mon May  9 13:51:38 2011	(r22825)
@@ -7,7 +7,7 @@
         <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
     
         <!-- Initialization -->
-        <available file="${build}/org/strategoxt/imp/testing/strategies/Main.class" property="java.jar.enabled"/>
+        <available file="${build}/org/strategoxt/imp/testing/strategies/Main.java" property="java.jar.enabled"/>
         <condition property="java.jar.import" value="-la org.strategoxt.imp.testing.strategies" else="">
             <isset property="java.jar.enabled"/>
         </condition>

From R.B.Vermaas at tudelft.nl  Mon May  9 15:52:11 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 13:52:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22826 - hydra/jobs
Message-ID: <20110509135211.0819DCC126@mx4.tudelft.nl>

Author: rob
Date: Mon May  9 13:52:10 2011
New Revision: 22826
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22826&sc=1

Log:


Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Mon May  9 13:51:38 2011	(r22825)
+++ hydra/jobs/spoofax-imp.nix	Mon May  9 13:52:10 2011	(r22826)
@@ -244,7 +244,6 @@
                                <property name="eclipse.spoofaximp.jars" value="utils/"/>
                                <property name="eclipse.spoofaximp.strategojar" value="utils/strategoxt.jar"/>
                                <property name="eclipse.home" value="${eclipse}/eclipse"/>
-                               <property name="java.jar.enabled" value="true"/>
                                <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
                                <ant antfile="build.main.xml" inheritRefs="true">
                                </ant>

From R.B.Vermaas at tudelft.nl  Mon May  9 16:07:06 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 14:07:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22827 -
	spoofax-imp/trunk/org.strategoxt.imp.testing
Message-ID: <20110509140706.27C5BCC0F9@mx4.tudelft.nl>

Author: rob
Date: Mon May  9 14:07:05 2011
New Revision: 22827
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22827&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.testing/build.generated.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/build.generated.xml	Mon May  9 13:52:10 2011	(r22826)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/build.generated.xml	Mon May  9 14:07:05 2011	(r22827)
@@ -7,7 +7,7 @@
         <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
     
         <!-- Initialization -->
-        <available file="${build}/org/strategoxt/imp/testing/strategies/Main.java" property="java.jar.enabled"/>
+        <available file="${src-gen}/org/strategoxt/imp/testing/strategies/Main.java" property="java.jar.enabled"/>
         <condition property="java.jar.import" value="-la org.strategoxt.imp.testing.strategies" else="">
             <isset property="java.jar.enabled"/>
         </condition>

From R.B.Vermaas at tudelft.nl  Mon May  9 16:18:59 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 14:18:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22828 - hydra/jobs
Message-ID: <20110509141859.466AF2B8071@mx2.tudelft.nl>

Author: rob
Date: Mon May  9 14:18:59 2011
New Revision: 22828
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22828&sc=1

Log:
spoofax build works again, now let's try to remove all irrelevant stuff

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Mon May  9 14:07:05 2011	(r22827)
+++ hydra/jobs/spoofax-imp.nix	Mon May  9 14:18:59 2011	(r22828)
@@ -174,7 +174,7 @@
             make -C org.strategoxt.imp.generator all
             stopNest
 
-            export CLASSPATH="`pwd`/utils/aster.jar:`pwd`/utils/strategoxt.jar:`pwd`/utils/sdf2imp.jar:`pwd`/utils/make_permissive.jar"
+#            export CLASSPATH="`pwd`/utils/aster.jar:`pwd`/utils/strategoxt.jar:`pwd`/utils/sdf2imp.jar:`pwd`/utils/make_permissive.jar"
             export MAVEN_OPTS="-Xss8m -Xmx1024m"
 
             for e in */build.main.xml
@@ -258,9 +258,9 @@
     </plugins>
 </build></project>' >>$POM
               fi
-              mkdir -p `dirname $e`/utils/
-              cp -v org.strategoxt.imp.generator/lib/*.jar `dirname $e`/utils/
-              cp -v org.strategoxt.strj/java/strategoxt.jar `dirname $e`/utils/
+#              mkdir -p `dirname $e`/utils/
+#              cp -v org.strategoxt.imp.generator/lib/*.jar `dirname $e`/utils/
+#              cp -v org.strategoxt.strj/java/strategoxt.jar `dirname $e`/utils/
             done
 
             mkdir utils

From R.B.Vermaas at tudelft.nl  Mon May  9 16:27:50 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 09 May 2011 14:27:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22829 - hydra/jobs
Message-ID: <20110509142750.BE0EC108C049@mx3.tudelft.nl>

Author: rob
Date: Mon May  9 14:27:50 2011
New Revision: 22829
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22829&sc=1

Log:
remove too much

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Mon May  9 14:18:59 2011	(r22828)
+++ hydra/jobs/spoofax-imp.nix	Mon May  9 14:27:50 2011	(r22829)
@@ -258,9 +258,9 @@
     </plugins>
 </build></project>' >>$POM
               fi
-#              mkdir -p `dirname $e`/utils/
-#              cp -v org.strategoxt.imp.generator/lib/*.jar `dirname $e`/utils/
-#              cp -v org.strategoxt.strj/java/strategoxt.jar `dirname $e`/utils/
+              mkdir -p `dirname $e`/utils/
+              cp -v org.strategoxt.imp.generator/lib/*.jar `dirname $e`/utils/
+              cp -v org.strategoxt.strj/java/strategoxt.jar `dirname $e`/utils/
             done
 
             mkdir utils

From m.dejonge at tudelft.nl  Mon May  9 17:59:09 2011
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 09 May 2011 15:59:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22830 -
	spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder
Message-ID: <20110509155909.C470A2B8024@mx2.tudelft.nl>

Author: MaartjeDeJonge
Date: Mon May  9 15:59:09 2011
New Revision: 22830
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22830&sc=1

Log:
seems to fix some problems with meta-listvars (but not all)

Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/ProductionAttributeReader.java

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/ProductionAttributeReader.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/ProductionAttributeReader.java	Mon May  9 14:27:50 2011	(r22829)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/ProductionAttributeReader.java	Mon May  9 15:59:09 2011	(r22830)
@@ -197,6 +197,9 @@
 	// FIXME: support meta-var constructors
 	public String getMetaVarConstructor(IStrategoAppl rhs) {
 		if (rhs.getSubtermCount() == 1 && varSymFun == rhs.getConstructor()) {
+			if(applAt(rhs, 0).getConstructor() == cfFun) { //FIXME: adhoc fix, correct/complete?
+				rhs=applAt(rhs, 0);
+			}
 			return isIterFun(applAt(rhs, 0).getConstructor())
 					? "meta-listvar"
 					: "meta-var";

From R.B.Vermaas at tudelft.nl  Tue May 10 09:24:17 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 10 May 2011 07:24:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22831 - hydra/jobs
Message-ID: <20110510072417.B3694CC0CE@mx4.tudelft.nl>

Author: rob
Date: Tue May 10 07:24:17 2011
New Revision: 22831
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22831&sc=1

Log:
only use top-level utils/*.jar

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Mon May  9 15:59:09 2011	(r22830)
+++ hydra/jobs/spoofax-imp.nix	Tue May 10 07:24:17 2011	(r22831)
@@ -174,7 +174,6 @@
             make -C org.strategoxt.imp.generator all
             stopNest
 
-#            export CLASSPATH="`pwd`/utils/aster.jar:`pwd`/utils/strategoxt.jar:`pwd`/utils/sdf2imp.jar:`pwd`/utils/make_permissive.jar"
             export MAVEN_OPTS="-Xss8m -Xmx1024m"
 
             for e in */build.main.xml
@@ -194,28 +193,28 @@
             <artifactId>aster</artifactId>
             <version>1.0</version>
             <scope>system</scope>
-            <systemPath>''${basedir}/utils/aster.jar</systemPath>
+            <systemPath>''${basedir}/../utils/aster.jar</systemPath>
         </dependency>
         <dependency>
             <groupId>local</groupId>
             <artifactId>strategoxt</artifactId>
             <version>1.0</version>
             <scope>system</scope>
-            <systemPath>''${basedir}/utils/strategoxt.jar</systemPath>
+            <systemPath>''${basedir}/../utils/strategoxt.jar</systemPath>
         </dependency>
         <dependency>
             <groupId>local</groupId>
             <artifactId>sdf2imp</artifactId>
             <version>1.0</version>
             <scope>system</scope>
-            <systemPath>''${basedir}/utils/sdf2imp.jar</systemPath>
+            <systemPath>''${basedir}/../utils/sdf2imp.jar</systemPath>
         </dependency>
         <dependency>
             <groupId>local</groupId>
             <artifactId>make_permissive.jar</artifactId>
             <version>1.0</version>
             <scope>system</scope>
-            <systemPath>''${basedir}/utils/make_permissive.jar</systemPath>
+            <systemPath>''${basedir}/../utils/make_permissive.jar</systemPath>
         </dependency>
         <dependency>
            <groupId>com.sun</groupId>
@@ -258,9 +257,6 @@
     </plugins>
 </build></project>' >>$POM
               fi
-              mkdir -p `dirname $e`/utils/
-              cp -v org.strategoxt.imp.generator/lib/*.jar `dirname $e`/utils/
-              cp -v org.strategoxt.strj/java/strategoxt.jar `dirname $e`/utils/
             done
 
             mkdir utils

From R.B.Vermaas at tudelft.nl  Tue May 10 10:47:49 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 10 May 2011 08:47:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22832 - hydra/jobs
Message-ID: <20110510084749.A0B33108C073@mx3.tudelft.nl>

Author: rob
Date: Tue May 10 08:47:48 2011
New Revision: 22832
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22832&sc=1

Log:
revert r.22831

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Tue May 10 07:24:17 2011	(r22831)
+++ hydra/jobs/spoofax-imp.nix	Tue May 10 08:47:48 2011	(r22832)
@@ -174,6 +174,7 @@
             make -C org.strategoxt.imp.generator all
             stopNest
 
+#            export CLASSPATH="`pwd`/utils/aster.jar:`pwd`/utils/strategoxt.jar:`pwd`/utils/sdf2imp.jar:`pwd`/utils/make_permissive.jar"
             export MAVEN_OPTS="-Xss8m -Xmx1024m"
 
             for e in */build.main.xml
@@ -193,28 +194,28 @@
             <artifactId>aster</artifactId>
             <version>1.0</version>
             <scope>system</scope>
-            <systemPath>''${basedir}/../utils/aster.jar</systemPath>
+            <systemPath>''${basedir}/utils/aster.jar</systemPath>
         </dependency>
         <dependency>
             <groupId>local</groupId>
             <artifactId>strategoxt</artifactId>
             <version>1.0</version>
             <scope>system</scope>
-            <systemPath>''${basedir}/../utils/strategoxt.jar</systemPath>
+            <systemPath>''${basedir}/utils/strategoxt.jar</systemPath>
         </dependency>
         <dependency>
             <groupId>local</groupId>
             <artifactId>sdf2imp</artifactId>
             <version>1.0</version>
             <scope>system</scope>
-            <systemPath>''${basedir}/../utils/sdf2imp.jar</systemPath>
+            <systemPath>''${basedir}/utils/sdf2imp.jar</systemPath>
         </dependency>
         <dependency>
             <groupId>local</groupId>
             <artifactId>make_permissive.jar</artifactId>
             <version>1.0</version>
             <scope>system</scope>
-            <systemPath>''${basedir}/../utils/make_permissive.jar</systemPath>
+            <systemPath>''${basedir}/utils/make_permissive.jar</systemPath>
         </dependency>
         <dependency>
            <groupId>com.sun</groupId>
@@ -257,12 +258,11 @@
     </plugins>
 </build></project>' >>$POM
               fi
+              mkdir -p `dirname $e`/utils/
+              cp -v org.strategoxt.imp.generator/lib/*.jar `dirname $e`/utils/
+              cp -v org.strategoxt.strj/java/strategoxt.jar `dirname $e`/utils/
             done
 
-            mkdir utils
-            cp -v org.strategoxt.imp.generator/lib/*.jar utils/
-            cp -v org.strategoxt.strj/java/strategoxt.jar utils/
-
             mvn package ${mvnFlags} -e
 	      '';
 	      

From R.B.Vermaas at tudelft.nl  Tue May 10 11:25:50 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 10 May 2011 09:25:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22833 - hydra/jobs
Message-ID: <20110510092550.D81F17F8006@mx1.tudelft.nl>

Author: rob
Date: Tue May 10 09:25:50 2011
New Revision: 22833
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22833&sc=1

Log:
cleanup

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Tue May 10 08:47:48 2011	(r22832)
+++ hydra/jobs/spoofax-imp.nix	Tue May 10 09:25:50 2011	(r22833)
@@ -50,139 +50,121 @@
     strcJavaCheckout = strategoxtJavaBackend;
   }).build { system = "i686-linux"; };
     
-  jobs = with pkgs.lib;
-	{
-            tests.install = eclipseTest;
-	    src = pkgs.stdenv.mkDerivation {
-	      name = "spoofax-imp-src-r${spoofaxRev}";
-
-              failureHook = ''
-                KEEPBUILDDIR="$out/`basename $TMPDIR`"
-                header "Copying build directory to $KEEPBUILDDIR"
-                ensureDir $KEEPBUILDDIR
-                cp -R $TMPDIR/* $KEEPBUILDDIR
-                stopNest
-              '';
-
-	      buildCommand = ''
-	        ensureDir $out
-	        cd $out
-	        
-	        header "Preparing org.eclipse.imp"
-	
-	        for d in ${orgEclipseImp}/org.eclipse.imp.cheatsheets \
-	                 ${orgEclipseImp}/org.eclipse.imp.java.hosted \
-	                 ${orgEclipseImp}/org.eclipse.imp.lpg \
-	                 ${orgEclipseImp}/org.eclipse.imp.lpg.ide \
-	                 ${orgEclipseImp}/org.eclipse.imp.lpg.metatooling \
-	                 ${orgEclipseImp}/org.eclipse.imp.metatooling \
-	                 ${orgEclipseImp}/org.eclipse.imp.preferences \
-	                 ${orgEclipseImp}/org.eclipse.imp.prefspecs \
-	                 ${orgEclipseImp}/org.eclipse.imp.presentation \
-	                 ${orgEclipseImp}/org.eclipse.imp.runtime \
-	                 ${orgEclipseImp}/org.eclipse.imp.smapi \
-	                 ${orgEclipseImp}/org.eclipse.imp.smapifier \
-	                 ${orgEclipseImp}/org.eclipse.imp.xform \
-	                 ${spoofax}/org.spoofax.aterm \
-	                 ${spoofax}/org.spoofax.compiler \
-	                 ${spoofax}/org.spoofax.interpreter.core \
-	                 ${spoofax}/org.spoofax.interpreter.library.jsglr \
-	                 ${spoofax}/org.spoofax.interpreter.library.language \
-	                 ${spoofax}/org.spoofax.jsglr \
-	                 ${spoofax}/org.spoofax.terms \
-                         ${spoofaxImp}/org.strategoxt.imp.editors.aster \
-                         ${spoofaxImp}/org.strategoxt.imp.editors.aterm \
-                         ${spoofaxImp}/org.strategoxt.imp.editors.editorservice \
-                         ${spoofaxImp}/org.strategoxt.imp.editors.pp \
-                         ${spoofaxImp}/org.strategoxt.imp.editors.rtg \
-                         ${spoofaxImp}/org.strategoxt.imp.editors.sdf \
-                         ${spoofaxImp}/org.strategoxt.imp.editors.spoofax \
-                         ${spoofaxImp}/org.strategoxt.imp.editors.stratego \
-                     ${spoofaxImp}/org.strategoxt.imp.testing \
-                         ${spoofaxImp}/org.strategoxt.imp.feature \
-	                 ${spoofaxImp}/org.strategoxt.imp.generator \
-	                 ${spoofaxImp}/org.strategoxt.imp.metatooling \
-	                 ${spoofaxImp}/org.strategoxt.imp.nativebundle \
-	                 ${spoofaxImp}/org.strategoxt.imp.runtime \
-	                 ${spoofaxImp}/org.strategoxt.imp.updatesite \
-                         ${spoofaxImp}/org.strategoxt.imp.debug.core \
-                         ${spoofaxImp}/org.strategoxt.imp.debug.stratego.core \
-                         ${spoofaxImp}/org.strategoxt.imp.debug.stratego.runtime \
-                         ${spoofaxImp}/org.strategoxt.imp.debug.stratego.test \
-                         ${spoofaxImp}/org.strategoxt.imp.debug.stratego.transformer \
-                         ${spoofaxImp}/org.strategoxt.imp.debug.ui
-	        do
-	            header "Copying $d"
-	                cp -R $d .
-	            stopNest
-	        done
-
-	        cp -R ${shrike} com.ibm.wala.shrike
-	        cp -R ${lpgRuntime} lpg.runtime.java
-	        cp -R ${strategoxtJavaBackend} org.strategoxt.strj
-	        
-	        chmod -R +w .
-                rm -rf \
-                   org.spoofax.jsglr/src/org/spoofax/jsglr/shared/RemoteParseTableService* \
-                   org.spoofax.jsglr/src/org/spoofax/client/JSGLREntryPoint.java \
-                   org.spoofax.jsglr/src/org/spoofax/jsglr/server/RemoteParseTableServiceImpl.java \
-                   org.spoofax.terms/src/org/spoofax/gwt/
-                sed -Ei 's|\.[0-9]\{12\}|.qualifier|g' org.strategoxt.imp.updatesite/site.xml
-                sed -Ei 's/(version="([0-9]+\.){3,}[0-9]+)"/\1-r${spoofaxRev}"/' org.strategoxt.imp.updatesite/site.xml
-                sed -Ei 's|\.[0-9]\{12\}|.qualifier|g' org.strategoxt.imp.feature/feature.xml
-                sed -Ei 's/(version="([0-9]+\.){3,}[0-9]+)"/\1-r${spoofaxRev}"/' org.strategoxt.imp.feature/feature.xml
-
-	        header "Patching org.eclipse.imp using ${spoofaxImp}/org.eclipse.imp/org.eclipse.imp.runtime.patch"
-	            patch -p0 < ${spoofaxImp}/org.eclipse.imp/org.eclipse.imp.runtime.patch
-	        stopNest
-	                
-	        stopNest
-	
-	      '';
-	    };
-
-	    build = pkgs.stdenv.mkDerivation rec {
-	      name = "spoofax-imp-r${spoofaxRev}";
-	      inherit (jobs) src;
-	      
-	      buildInputs = [ 
-	      	pkgs.maven3
-	      	strcJava 
-	      	pkgs.pkgconfig 
-	      	pkgs.which 
-	      	pkgs.ecj 
-	      	pkgs.jdk 
-	      	pkgs.ant
-	      ];
-	      mvnFlags = "-Dversion=1.0.0-SNAPSHOT -DgroupId=spoofax -Dtycho.targetPlatform=${eclipse}/eclipse -Dmaven.repo.local=/tmp/m3";
-	      buildPhase = ''
-            ulimit -s unlimited
-            export M2_REPO=/tmp/m3
-            export STRATEGOXT=${pkgs.strategoPackages.strategoxt}
-            export JAVA_FRONT=${pkgs.strategoPackages.javafront}
-            export SDF=${pkgs.strategoPackages.sdf}
-
-            #hack
-            mkdir -p plugins
-            export eclipsefakehome=`pwd`
+  jobs = with pkgs.lib; {
+    tests.install = eclipseTest;
+    src = pkgs.stdenv.mkDerivation {
+      name = "spoofax-imp-src-r${spoofaxRev}";
+
+      buildCommand = ''
+        ensureDir $out
+        cd $out
             
-            mvn org.sonatype.tycho:maven-tycho-plugin:generate-poms ${mvnFlags}
+        header "Preparing org.eclipse.imp"
+    
+        for d in ${orgEclipseImp}/org.eclipse.imp.cheatsheets \
+                 ${orgEclipseImp}/org.eclipse.imp.java.hosted \
+                 ${orgEclipseImp}/org.eclipse.imp.lpg \
+                 ${orgEclipseImp}/org.eclipse.imp.lpg.ide \
+                 ${orgEclipseImp}/org.eclipse.imp.lpg.metatooling \
+                 ${orgEclipseImp}/org.eclipse.imp.metatooling \
+                 ${orgEclipseImp}/org.eclipse.imp.preferences \
+                 ${orgEclipseImp}/org.eclipse.imp.prefspecs \
+                 ${orgEclipseImp}/org.eclipse.imp.presentation \
+                 ${orgEclipseImp}/org.eclipse.imp.runtime \
+                 ${orgEclipseImp}/org.eclipse.imp.smapi \
+                 ${orgEclipseImp}/org.eclipse.imp.smapifier \
+                 ${orgEclipseImp}/org.eclipse.imp.xform \
+                 ${spoofax}/org.spoofax.aterm \
+                 ${spoofax}/org.spoofax.compiler \
+                 ${spoofax}/org.spoofax.interpreter.core \
+                 ${spoofax}/org.spoofax.interpreter.library.jsglr \
+                 ${spoofax}/org.spoofax.interpreter.library.language \
+                 ${spoofax}/org.spoofax.jsglr \
+                 ${spoofax}/org.spoofax.terms \
+                 ${spoofaxImp}/org.strategoxt.imp.editors.aster \
+                 ${spoofaxImp}/org.strategoxt.imp.editors.aterm \
+                 ${spoofaxImp}/org.strategoxt.imp.editors.editorservice \
+                 ${spoofaxImp}/org.strategoxt.imp.editors.pp \
+                 ${spoofaxImp}/org.strategoxt.imp.editors.rtg \
+                 ${spoofaxImp}/org.strategoxt.imp.editors.sdf \
+                 ${spoofaxImp}/org.strategoxt.imp.editors.spoofax \
+                 ${spoofaxImp}/org.strategoxt.imp.editors.stratego \
+                 ${spoofaxImp}/org.strategoxt.imp.testing \
+                 ${spoofaxImp}/org.strategoxt.imp.feature \
+                 ${spoofaxImp}/org.strategoxt.imp.generator \
+                 ${spoofaxImp}/org.strategoxt.imp.metatooling \
+                 ${spoofaxImp}/org.strategoxt.imp.nativebundle \
+                 ${spoofaxImp}/org.strategoxt.imp.runtime \
+                 ${spoofaxImp}/org.strategoxt.imp.updatesite \
+                 ${spoofaxImp}/org.strategoxt.imp.debug.core \
+                 ${spoofaxImp}/org.strategoxt.imp.debug.stratego.core \
+                 ${spoofaxImp}/org.strategoxt.imp.debug.stratego.runtime \
+                 ${spoofaxImp}/org.strategoxt.imp.debug.stratego.test \
+                 ${spoofaxImp}/org.strategoxt.imp.debug.stratego.transformer \
+                 ${spoofaxImp}/org.strategoxt.imp.debug.ui
+        do
+          header "Copying $d"
+          cp -R $d .
+          stopNest
+        done
+
+        cp -R ${shrike} com.ibm.wala.shrike
+        cp -R ${lpgRuntime} lpg.runtime.java
+        cp -R ${strategoxtJavaBackend} org.strategoxt.strj
+            
+        chmod -R +w .
+        rm -rf \
+              org.spoofax.jsglr/src/org/spoofax/jsglr/shared/RemoteParseTableService* \
+              org.spoofax.jsglr/src/org/spoofax/client/JSGLREntryPoint.java \
+              org.spoofax.jsglr/src/org/spoofax/jsglr/server/RemoteParseTableServiceImpl.java \
+              org.spoofax.terms/src/org/spoofax/gwt/
+        sed -Ei 's|\.[0-9]\{12\}|.qualifier|g' org.strategoxt.imp.updatesite/site.xml
+        sed -Ei 's/(version="([0-9]+\.){3,}[0-9]+)"/\1-r${spoofaxRev}"/' org.strategoxt.imp.updatesite/site.xml
+        sed -Ei 's|\.[0-9]\{12\}|.qualifier|g' org.strategoxt.imp.feature/feature.xml
+        sed -Ei 's/(version="([0-9]+\.){3,}[0-9]+)"/\1-r${spoofaxRev}"/' org.strategoxt.imp.feature/feature.xml
+
+        header "Patching org.eclipse.imp using ${spoofaxImp}/org.eclipse.imp/org.eclipse.imp.runtime.patch"
+        patch -p0 < ${spoofaxImp}/org.eclipse.imp/org.eclipse.imp.runtime.patch
+        stopNest
+                    
+        stopNest
+      '';
+    };
+
+    build = pkgs.stdenv.mkDerivation rec {
+      name = "spoofax-imp-r${spoofaxRev}";
+      inherit (jobs) src;
+          
+      buildInputs = with pkgs; [ maven3 strcJava pkgconfig which ecj jdk ant ];
+      mvnFlags = "-Dversion=1.0.0-SNAPSHOT -DgroupId=spoofax -Dtycho.targetPlatform=${eclipse}/eclipse -Dmaven.repo.local=/tmp/m3";
+
+      M2_REPO="/tmp/m3";
+      MAVEN_OPTS="-Xss8m -Xmx1024m";
+      STRATEGOXT=pkgs.strategoPackages.strategoxt;
+      JAVA_FRONT=pkgs.strategoPackages.javafront;
+      SDF=pkgs.strategoPackages.sdf;
+
+      buildPhase = ''
+        ulimit -s unlimited
+
+        #hack
+        mkdir -p plugins
+        export eclipsefakehome=`pwd`
+            
+        mvn org.sonatype.tycho:maven-tycho-plugin:generate-poms ${mvnFlags}
 
-            cp ${strcJava}/share/strc-java/strategoxt.jar org.strategoxt.strj/java
+        cp ${strcJava}/share/strc-java/strategoxt.jar org.strategoxt.strj/java
 
-            header "Building org.strategoxt.imp.generator"
-            make -C org.strategoxt.imp.generator all
-            stopNest
-
-#            export CLASSPATH="`pwd`/utils/aster.jar:`pwd`/utils/strategoxt.jar:`pwd`/utils/sdf2imp.jar:`pwd`/utils/make_permissive.jar"
-            export MAVEN_OPTS="-Xss8m -Xmx1024m"
-
-            for e in */build.main.xml
-            do
-              POM=`dirname $e`/pom.xml
-              if [[ -f $POM ]] ; then
-                sed -i 's|</project>||' $POM
-                echo '
+        header "Building org.strategoxt.imp.generator"
+        make -C org.strategoxt.imp.generator all
+        stopNest
+
+        for e in */build.main.xml
+        do
+          POM=`dirname $e`/pom.xml
+          if [[ -f $POM ]] ; then
+             sed -i 's|</project>||' $POM
+             echo '
   <build>
     <plugins>
  <plugin>
@@ -237,44 +219,44 @@
                <id>generate-sources</id>
                <phase>generate-sources</phase>
                <configuration>
-                       <tasks>
-                               <echo>Running ant script</echo>
-                               <property name="external_classpath" refid="maven.compile.classpath"/>
-                               <property name="java.class.path" value="utils/aster.jar:utils/strategoxt.jar:utils/sdf2imp.jar:utils/make_permissive.jar"/>
-                               <property name="eclipse.spoofaximp.jars" value="utils/"/>
-                               <property name="eclipse.spoofaximp.strategojar" value="utils/strategoxt.jar"/>
-                               <property name="eclipse.home" value="${eclipse}/eclipse"/>
-                               <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
-                               <ant antfile="build.main.xml" inheritRefs="true">
-                               </ant>
-                       </tasks>
+                  <tasks>
+                          <echo>Running ant script</echo>
+                          <property name="external_classpath" refid="maven.compile.classpath"/>
+                          <property name="java.class.path" value="utils/aster.jar:utils/strategoxt.jar:utils/sdf2imp.jar:utils/make_permissive.jar"/>
+                          <property name="eclipse.spoofaximp.jars" value="utils/"/>
+                          <property name="eclipse.spoofaximp.strategojar" value="utils/strategoxt.jar"/>
+                          <property name="eclipse.home" value="${eclipse}/eclipse"/>
+                          <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
+                          <ant antfile="build.main.xml" inheritRefs="true">
+                          </ant>
+                  </tasks>
                </configuration>
                <goals>
-                       <goal>run</goal>
+                  <goal>run</goal>
                </goals>
        </execution>
     </executions>
   </plugin>
     </plugins>
 </build></project>' >>$POM
-              fi
-              mkdir -p `dirname $e`/utils/
-              cp -v org.strategoxt.imp.generator/lib/*.jar `dirname $e`/utils/
-              cp -v org.strategoxt.strj/java/strategoxt.jar `dirname $e`/utils/
-            done
-
-            mvn package ${mvnFlags} -e
-	      '';
-	      
-	      installPhase = ''
-	        ensureDir $out/nix-support
-            cp -Rv org.strategoxt.imp.updatesite/target/site $out/
-            touch $out/site/index.html
-            echo "file site $out/site" >> $out/nix-support/hydra-build-products
-	      '';
-	        
-	      __noChroot = true;
-	    } ;     
-    } ;
+          fi
+          mkdir -p `dirname $e`/utils/
+          cp -v org.strategoxt.imp.generator/lib/*.jar `dirname $e`/utils/
+          cp -v org.strategoxt.strj/java/strategoxt.jar `dirname $e`/utils/
+        done
+
+        mvn package ${mvnFlags} -e
+      '';
+          
+      installPhase = ''
+        ensureDir $out/nix-support
+        cp -Rv org.strategoxt.imp.updatesite/target/site $out/
+        touch $out/site/index.html
+        echo "file site $out/site" >> $out/nix-support/hydra-build-products
+      '';
+
+       __noChroot = true;
+     } ;     
+  } ;
 
 in jobs

From R.B.Vermaas at tudelft.nl  Tue May 10 13:49:32 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 10 May 2011 11:49:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22834 - hydra
Message-ID: <20110510114932.D2CAA2B8058@mx2.tudelft.nl>

Author: rob
Date: Tue May 10 11:49:32 2011
New Revision: 22834
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22834&sc=1

Log:
remove possible qualifiers

Modified:
   hydra/spoofax-fun.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Tue May 10 09:25:50 2011	(r22833)
+++ hydra/spoofax-fun.nix	Tue May 10 11:49:32 2011	(r22834)
@@ -32,6 +32,8 @@
     export LOCALCLASSPATH="utils/aster.jar:utils/make_permissive.jar:utils/sdf2imp.jar:utils/strategoxt.jar:$LOCALCLASSPATH"
     export ANT_OPTS="-Xss8m -Xmx2048m"
 
+    sed -Ei 's|\.[0-9]\{12\}|.qualifier|g' */site.xml
+    sed -Ei 's/(version="([0-9]+\.){3,}[0-9]+)"/\1-r${toString src.rev}"/' */site.xml
 
     for d in */build.main.xml ; do
       export dir="`dirname $d`"

From seba at informatik.uni-marburg.de  Tue May 10 14:07:04 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Tue, 10 May 2011 12:07:04 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22835 - in
	sugarj/trunk: compiler/org/sugarj/driver
	stdlib/org/sugarj/transformations update-site
Message-ID: <20110510120704.1D7327F801D@mx1.tudelft.nl>

Author: SebastianErdweg
Date: Tue May 10 12:07:03 2011
New Revision: 22835
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22835&sc=1

Log:
fixed checking editor service desugaring

Modified:
   sugarj/trunk/compiler/org/sugarj/driver/Driver.java
   sugarj/trunk/stdlib/org/sugarj/transformations/EditorServiceExtension.str
   sugarj/trunk/update-site/site.xml

Modified: sugarj/trunk/compiler/org/sugarj/driver/Driver.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/Driver.java	Tue May 10 11:49:32 2011	(r22834)
+++ sugarj/trunk/compiler/org/sugarj/driver/Driver.java	Tue May 10 12:07:03 2011	(r22835)
@@ -54,7 +54,7 @@
  */
 public class Driver{
   
-  public final static String CACHE_VERSION = "editor-base-0.7";
+  public final static String CACHE_VERSION = "editor-base-0.7a";
   
   private static class Key {
     private String source;

Modified: sugarj/trunk/stdlib/org/sugarj/transformations/EditorServiceExtension.str
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/transformations/EditorServiceExtension.str	Tue May 10 11:49:32 2011	(r22834)
+++ sugarj/trunk/stdlib/org/sugarj/transformations/EditorServiceExtension.str	Tue May 10 12:07:03 2011	(r22835)
@@ -19,30 +19,24 @@
 
 
 rules
-
+  
   service-to-sugar :
-    CheckingRuleErrors(r) -> ( []
-                             , [ transformation-elem(
+    Checking(_, rs) -> ([], <map(checkingrule-to-sugar)> rs)
+  
+  checkingrule-to-sugar :
+    CheckingRuleErrors(r) -> transformation-elem(
                                    Rules([RDefNoArgs("constraint-error", r)])
                                  )
-                               ]
-                             )
 
-  service-to-sugar :
-    CheckingRuleWarnings(r) -> ( []
-                               , [ transformation-elem(
+  checkingrule-to-sugar :
+    CheckingRuleWarnings(r) -> transformation-elem(
                                      Rules([RDefNoArgs("constraint-warning", r)])
                                    )
-                                 ]
-                               )
 
-  service-to-sugar :
-    CheckingRuleNotes(r) -> ( []
-                            , [ transformation-elem(
+  checkingrule-to-sugar :
+    CheckingRuleNotes(r) -> transformation-elem(
                                   Rules([RDefNoArgs("constraint-note", r)])
                                 )
-                              ]
-                            )
 
 
 strategies
@@ -65,7 +59,7 @@
            , SugarBody(elems)
            )
          ]
-    where <(extract-sugar-from-service-sections ; not(?(_, [])))> sections => (newsections, elems)
+    where <(extract-sugar-from-service-sections; not(?(_, [])))> sections => (newsections, elems)
 
   extract-sugar-from-service-sections :
     [] -> ([], [])

Modified: sugarj/trunk/update-site/site.xml
==============================================================================
--- sugarj/trunk/update-site/site.xml	Tue May 10 11:49:32 2011	(r22834)
+++ sugarj/trunk/update-site/site.xml	Tue May 10 12:07:03 2011	(r22835)
@@ -3,7 +3,7 @@
    <description name="SugarJ" url="sugarj.org/update">
       SugarJ
    </description>
-   <feature url="features/org.sugarj.editor_1.0.6.201105081855.jar" id="org.sugarj.editor" version="1.0.6.201105081855">
+   <feature url="features/org.sugarj.editor_1.0.6.201105101403.jar" id="org.sugarj.editor" version="1.0.6.201105101403">
       <category name="SugarJ"/>
    </feature>
    <category-def name="SugarJ" label="SugarJ">

From R.B.Vermaas at tudelft.nl  Tue May 10 14:29:09 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 10 May 2011 12:29:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22836 - hydra
Message-ID: <20110510122909.D0FFD2B8051@mx2.tudelft.nl>

Author: rob
Date: Tue May 10 12:29:09 2011
New Revision: 22836
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22836&sc=1

Log:


Modified:
   hydra/spoofax-fun.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Tue May 10 12:07:03 2011	(r22835)
+++ hydra/spoofax-fun.nix	Tue May 10 12:29:09 2011	(r22836)
@@ -32,7 +32,7 @@
     export LOCALCLASSPATH="utils/aster.jar:utils/make_permissive.jar:utils/sdf2imp.jar:utils/strategoxt.jar:$LOCALCLASSPATH"
     export ANT_OPTS="-Xss8m -Xmx2048m"
 
-    sed -Ei 's|\.[0-9]\{12\}|.qualifier|g' */site.xml
+    sed -Ei 's|\.[0-9]{12}|.qualifier|g' */site.xml
     sed -Ei 's/(version="([0-9]+\.){3,}[0-9]+)"/\1-r${toString src.rev}"/' */site.xml
 
     for d in */build.main.xml ; do

From R.B.Vermaas at tudelft.nl  Tue May 10 15:22:50 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 10 May 2011 13:22:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22837 - hydra
Message-ID: <20110510132250.F40987F805B@mx1.tudelft.nl>

Author: rob
Date: Tue May 10 13:22:50 2011
New Revision: 22837
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22837&sc=1

Log:


Modified:
   hydra/spoofax-fun.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Tue May 10 12:29:09 2011	(r22836)
+++ hydra/spoofax-fun.nix	Tue May 10 13:22:50 2011	(r22837)
@@ -35,6 +35,8 @@
     sed -Ei 's|\.[0-9]{12}|.qualifier|g' */site.xml
     sed -Ei 's/(version="([0-9]+\.){3,}[0-9]+)"/\1-r${toString src.rev}"/' */site.xml
 
+    mvn org.sonatype.tycho:maven-tycho-plugin:generate-poms -Dversion=${version}-SNAPSHOT -DgroupId=${name} -Dtycho.targetPlatform=${eclipse}/eclipse ${mvnFlags}
+
     for d in */build.main.xml ; do
       export dir="`dirname $d`"
       header "Prebuilding $dir..."
@@ -45,11 +47,89 @@
       cp -Rv `find ${eclipse} -name aster.jar` utils/
       cp -Rv `find ${eclipse} -name sdf2imp.jar` utils/
       cp -Rv `find ${eclipse} -name make_permissive.jar` utils/
-      ant -lib utils -f build.main.xml -Declipse.spoofaximp.jars=utils -Djava.jar.enabled=true all
+
+      if [[ -f pom.xml ]] ; then
+        sed -i 's|</project>||' pom.xml
+        echo '
+  <build>
+    <plugins>
+ <plugin>
+    <groupId>org.apache.maven.plugins</groupId>
+    <artifactId>maven-antrun-plugin</artifactId>
+    <dependencies>
+        <dependency>
+            <groupId>local</groupId>
+            <artifactId>aster</artifactId>
+            <version>1.0</version>
+            <scope>system</scope>
+            <systemPath>''${basedir}/utils/aster.jar</systemPath>
+        </dependency>
+        <dependency>
+            <groupId>local</groupId>
+            <artifactId>strategoxt</artifactId>
+            <version>1.0</version>
+            <scope>system</scope>
+            <systemPath>''${basedir}/utils/strategoxt.jar</systemPath>
+        </dependency>
+        <dependency>
+            <groupId>local</groupId>
+            <artifactId>sdf2imp</artifactId>
+            <version>1.0</version>
+            <scope>system</scope>
+            <systemPath>''${basedir}/utils/sdf2imp.jar</systemPath>
+        </dependency>
+        <dependency>
+            <groupId>local</groupId>
+            <artifactId>make_permissive.jar</artifactId>
+            <version>1.0</version>
+            <scope>system</scope>
+            <systemPath>''${basedir}/utils/make_permissive.jar</systemPath>
+        </dependency>
+        <dependency>
+           <groupId>com.sun</groupId>
+            <artifactId>tools</artifactId>
+            <version>1.4.2</version>
+            <scope>system</scope>
+            <systemPath>''${java.home}/../lib/tools.jar</systemPath>
+        </dependency>
+        <dependency>
+           <groupId>ecj</groupId>
+            <artifactId>ecj</artifactId>
+            <version>1.0</version>
+            <scope>system</scope>
+            <systemPath>${pkgs.ecj}/lib/java/ecj.jar</systemPath>
+        </dependency>
+    </dependencies>
+    <executions>
+       <execution>
+               <id>generate-sources</id>
+               <phase>generate-sources</phase>
+               <configuration>
+                  <tasks>
+                          <echo>Running ant script</echo>
+                          <property name="external_classpath" refid="maven.compile.classpath"/>
+                          <property name="java.class.path" value="utils/aster.jar:utils/strategoxt.jar:utils/sdf2imp.jar:utils/make_permissive.jar"/>
+                          <property name="eclipse.spoofaximp.jars" value="utils/"/>
+                          <property name="eclipse.spoofaximp.strategojar" value="utils/strategoxt.jar"/>
+                          <property name="eclipse.home" value="${eclipse}/eclipse"/>
+                          <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
+                          <ant antfile="build.main.xml" inheritRefs="true">
+                          </ant>
+                  </tasks>
+               </configuration>
+               <goals>
+                  <goal>run</goal>
+               </goals>
+       </execution>
+    </executions>
+  </plugin>
+    </plugins>
+</build></project>' >>pom.xml
+      fi
+
       cd ..
     done
 
-    mvn org.sonatype.tycho:maven-tycho-plugin:generate-poms -Dversion=${version}-SNAPSHOT -DgroupId=${name} -Dtycho.targetPlatform=${eclipse}/eclipse ${mvnFlags}
     mvn package -Dtycho.targetPlatform=${eclipse}/eclipse ${mvnFlags} -e
   '';
 	      

From R.B.Vermaas at tudelft.nl  Tue May 10 15:35:28 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 10 May 2011 13:35:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22838 - hydra
Message-ID: <20110510133528.9537D7F8018@mx1.tudelft.nl>

Author: rob
Date: Tue May 10 13:35:28 2011
New Revision: 22838
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22838&sc=1

Log:


Modified:
   hydra/spoofax-fun.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Tue May 10 13:22:50 2011	(r22837)
+++ hydra/spoofax-fun.nix	Tue May 10 13:35:28 2011	(r22838)
@@ -29,8 +29,7 @@
     export M2_REPO=/tmp/m3
     ulimit -s unlimited
 
-    export LOCALCLASSPATH="utils/aster.jar:utils/make_permissive.jar:utils/sdf2imp.jar:utils/strategoxt.jar:$LOCALCLASSPATH"
-    export ANT_OPTS="-Xss8m -Xmx2048m"
+    export MAVEN_OPTS="-Xss8m -Xmx2048m"
 
     sed -Ei 's|\.[0-9]{12}|.qualifier|g' */site.xml
     sed -Ei 's/(version="([0-9]+\.){3,}[0-9]+)"/\1-r${toString src.rev}"/' */site.xml
@@ -109,7 +108,7 @@
                           <echo>Running ant script</echo>
                           <property name="external_classpath" refid="maven.compile.classpath"/>
                           <property name="java.class.path" value="utils/aster.jar:utils/strategoxt.jar:utils/sdf2imp.jar:utils/make_permissive.jar"/>
-                          <property name="eclipse.spoofaximp.jars" value="utils/"/>
+                          <property name="eclipse.spoofaximp.jars" value="utils"/>
                           <property name="eclipse.spoofaximp.strategojar" value="utils/strategoxt.jar"/>
                           <property name="eclipse.home" value="${eclipse}/eclipse"/>
                           <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>

From R.B.Vermaas at tudelft.nl  Tue May 10 15:41:36 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 10 May 2011 13:41:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22839 - hydra
Message-ID: <20110510134136.05EAC108C018@mx3.tudelft.nl>

Author: rob
Date: Tue May 10 13:41:35 2011
New Revision: 22839
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22839&sc=1

Log:
test

Modified:
   hydra/spoofax-fun.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Tue May 10 13:35:28 2011	(r22838)
+++ hydra/spoofax-fun.nix	Tue May 10 13:41:35 2011	(r22839)
@@ -30,7 +30,8 @@
     ulimit -s unlimited
 
     export MAVEN_OPTS="-Xss8m -Xmx2048m"
-
+    mkdir utils 
+    cp -v `find $eclipse -name StrategoMix.def` utils/StrategoMix.def
     sed -Ei 's|\.[0-9]{12}|.qualifier|g' */site.xml
     sed -Ei 's/(version="([0-9]+\.){3,}[0-9]+)"/\1-r${toString src.rev}"/' */site.xml
 

From R.B.Vermaas at tudelft.nl  Tue May 10 15:44:55 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 10 May 2011 13:44:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22840 - hydra
Message-ID: <20110510134455.718607F8018@mx1.tudelft.nl>

Author: rob
Date: Tue May 10 13:44:55 2011
New Revision: 22840
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22840&sc=1

Log:


Modified:
   hydra/spoofax-fun.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Tue May 10 13:41:35 2011	(r22839)
+++ hydra/spoofax-fun.nix	Tue May 10 13:44:55 2011	(r22840)
@@ -112,6 +112,7 @@
                           <property name="eclipse.spoofaximp.jars" value="utils"/>
                           <property name="eclipse.spoofaximp.strategojar" value="utils/strategoxt.jar"/>
                           <property name="eclipse.home" value="${eclipse}/eclipse"/>
+                          <property name="java.jar.enabled" value="true"/>
                           <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
                           <ant antfile="build.main.xml" inheritRefs="true">
                           </ant>

From R.B.Vermaas at tudelft.nl  Tue May 10 15:53:52 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 10 May 2011 13:53:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22841 - hydra
Message-ID: <20110510135352.C86D47F8018@mx1.tudelft.nl>

Author: rob
Date: Tue May 10 13:53:52 2011
New Revision: 22841
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22841&sc=1

Log:
mehh

Modified:
   hydra/spoofax-fun.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Tue May 10 13:44:55 2011	(r22840)
+++ hydra/spoofax-fun.nix	Tue May 10 13:53:52 2011	(r22841)
@@ -56,35 +56,17 @@
  <plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-antrun-plugin</artifactId>
-    <dependencies>
-        <dependency>
-            <groupId>local</groupId>
-            <artifactId>aster</artifactId>
-            <version>1.0</version>
-            <scope>system</scope>
-            <systemPath>''${basedir}/utils/aster.jar</systemPath>
-        </dependency>
-        <dependency>
-            <groupId>local</groupId>
-            <artifactId>strategoxt</artifactId>
-            <version>1.0</version>
-            <scope>system</scope>
-            <systemPath>''${basedir}/utils/strategoxt.jar</systemPath>
-        </dependency>
-        <dependency>
-            <groupId>local</groupId>
-            <artifactId>sdf2imp</artifactId>
-            <version>1.0</version>
-            <scope>system</scope>
-            <systemPath>''${basedir}/utils/sdf2imp.jar</systemPath>
-        </dependency>
-        <dependency>
-            <groupId>local</groupId>
-            <artifactId>make_permissive.jar</artifactId>
-            <version>1.0</version>
-            <scope>system</scope>
-            <systemPath>''${basedir}/utils/make_permissive.jar</systemPath>
-        </dependency>
+    <dependencies>' >> pom.xml
+
+        for j in utils/*.jar ; do
+          echo -n '<dependency><groupId>local</groupId><artifactId>' >> pom.xml 
+          echo -n `basename $j .jar` >> pom.xml
+          echo -n '</artifactId><version>1.0</version><scope>system</scope><systemPath>''${basedir}/' >> pom.xml
+          echo -n $j >> pom.xml
+          echo '</systemPath></dependency>' >> pom.xml
+        done
+
+        echo '
         <dependency>
            <groupId>com.sun</groupId>
             <artifactId>tools</artifactId>

From R.B.Vermaas at tudelft.nl  Tue May 10 16:08:48 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 10 May 2011 14:08:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22842 - hydra
Message-ID: <20110510140848.7B0977F807F@mx1.tudelft.nl>

Author: rob
Date: Tue May 10 14:08:48 2011
New Revision: 22842
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22842&sc=1

Log:


Modified:
   hydra/spoofax-fun.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Tue May 10 13:53:52 2011	(r22841)
+++ hydra/spoofax-fun.nix	Tue May 10 14:08:48 2011	(r22842)
@@ -89,7 +89,7 @@
                <configuration>
                   <tasks>
                           <echo>Running ant script</echo>
-                          <property name="external_classpath" refid="maven.compile.classpath"/>
+                          <property name="externaljarx" refid="maven.compile.classpath"/>
                           <property name="java.class.path" value="utils/aster.jar:utils/strategoxt.jar:utils/sdf2imp.jar:utils/make_permissive.jar"/>
                           <property name="eclipse.spoofaximp.jars" value="utils"/>
                           <property name="eclipse.spoofaximp.strategojar" value="utils/strategoxt.jar"/>

From R.B.Vermaas at tudelft.nl  Tue May 10 16:15:54 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 10 May 2011 14:15:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22843 - hydra
Message-ID: <20110510141554.A91B22B8005@mx2.tudelft.nl>

Author: rob
Date: Tue May 10 14:15:54 2011
New Revision: 22843
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22843&sc=1

Log:
add some debugging

Modified:
   hydra/spoofax-fun.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Tue May 10 14:08:48 2011	(r22842)
+++ hydra/spoofax-fun.nix	Tue May 10 14:15:54 2011	(r22843)
@@ -59,6 +59,7 @@
     <dependencies>' >> pom.xml
 
         for j in utils/*.jar ; do
+          echo "Adding $j to pom.xml"
           echo -n '<dependency><groupId>local</groupId><artifactId>' >> pom.xml 
           echo -n `basename $j .jar` >> pom.xml
           echo -n '</artifactId><version>1.0</version><scope>system</scope><systemPath>''${basedir}/' >> pom.xml
@@ -113,7 +114,7 @@
       cd ..
     done
 
-    mvn package -Dtycho.targetPlatform=${eclipse}/eclipse ${mvnFlags} -e
+    mvn -X package -Dtycho.targetPlatform=${eclipse}/eclipse ${mvnFlags} -e
   '';
 	      
   installPhase = ''

From R.B.Vermaas at tudelft.nl  Tue May 10 16:36:08 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 10 May 2011 14:36:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22844 - hydra
Message-ID: <20110510143608.5DCE3108C018@mx3.tudelft.nl>

Author: rob
Date: Tue May 10 14:36:08 2011
New Revision: 22844
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22844&sc=1

Log:
debugging

Modified:
   hydra/spoofax-fun.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Tue May 10 14:15:54 2011	(r22843)
+++ hydra/spoofax-fun.nix	Tue May 10 14:36:08 2011	(r22844)
@@ -90,6 +90,8 @@
                <configuration>
                   <tasks>
                           <echo>Running ant script</echo>
+                          <echo message="compile classpath: ''${externaljarx}" />
+                          <echo message="compile classpath: ''${maven.compile.classpath}" />
                           <property name="externaljarx" refid="maven.compile.classpath"/>
                           <property name="java.class.path" value="utils/aster.jar:utils/strategoxt.jar:utils/sdf2imp.jar:utils/make_permissive.jar"/>
                           <property name="eclipse.spoofaximp.jars" value="utils"/>

From M.A.Akhter at student.tudelft.nl  Tue May 10 16:38:40 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Tue, 10 May 2011 14:38:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22845 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	analyze/esv codegen codegen/esv codegen/sdf codegen/str utils
Message-ID: <20110510143840.63A32CC122@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Tue May 10 14:38:40 2011
New Revision: 22845
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22845&sc=1

Log:
* changed code generation policy.
* now all the main file will be generated in .shadowdir root
* Language-Name = main sdf/str/esv module

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str	Tue May 10 14:36:08 2011	(r22844)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str	Tue May 10 14:38:40 2011	(r22845)
@@ -41,7 +41,7 @@
    constraint-esv-error: 
    	LanguageName( name ) -> (name, $[ Duplicate declaration of language name. Declared in following packages : [<pp-aterm>packages*]])
    	where
-   		<get-languagename-declaration-sites> name =>packages*;
+   			<get-languagename-declaration-sites> name =>packages*;
    			is-not-empty-list;
 				not(ensure-is-unique)
    		

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Tue May 10 14:36:08 2011	(r22844)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Tue May 10 14:38:40 2011	(r22845)
@@ -37,28 +37,30 @@
  		where 
 			<debug-compiler>$[codegen | ESV | Generate-esv-main  : [<pp-aterm>package-qname]]
 		with	 
- 			 relative-autogen-path :=  <qname-to-path>package-qname
- 			;package-esv-main-name := $[[<convert-qname(|"-")>package-qname].main.packed]
- 			;autogen-dir           :=$[[<Autogenerated-Artifacts-Dir>]/[relative-autogen-path]]
- 			;root-directory 			 := $[[project-path]/[<Autogenerated-Artifacts-Dir>]] 
+ 			 relative-autogen-path := <qname-to-path>package-qname
+ 			;package-esv-main-name := $[[<get-main-file-name>()].main.packed]
+ 			;autogen-dir           := $[[<Autogenerated-Artifacts-Dir>]/[relative-autogen-path]]
+ 			;root-directory 			 := $[[project-path]/[<Autogenerated-Artifacts-Dir>]]
  		where 
- 			{|  Declared-Language-Description,Declared-Builders-Description,Declared-Colorer-Description,
+ 			{|  //TODO : consider removing DR and use collect instead
+ 					Declared-Language-Description,Declared-Builders-Description,Declared-Colorer-Description,
  					Declared-Folding-Description,Declared-Outliner-Description,Declared-References-Description,
  					Declared-Completions-Description:
-						//TODO  : Q>> why do we need imports in main.packed.esv  ?
+						
  						<map(get-original-module-declaration;store-esv-defintions)>module-qname*
- 						;sections := <conc>(<add-package-ctree>(<qname-to-string>package-qname),   // adding ctree import by default
- 						 					<all-keys-Declared-Language-Description>, 
- 			 								<all-keys-Declared-Builders-Description> ,  
- 			 								<all-keys-Declared-Colorer-Description> , 
- 			 								<all-keys-Declared-Folding-Description>,
- 			 								<all-keys-Declared-Outliner-Description>,
- 			 								<all-keys-Declared-References-Description>,
- 			 								<all-keys-Declared-Completions-Description>
+ 						;sections := <conc>
+ 						 					(<add-package-ctree><get-main-file-name>(),   // adding ctree import by default
+ 						 					 <all-keys-Declared-Language-Description>, 
+ 			 								 <all-keys-Declared-Builders-Description> ,  
+ 			 								 <all-keys-Declared-Colorer-Description> , 
+ 			 								 <all-keys-Declared-Folding-Description>,
+ 			 								 <all-keys-Declared-Outliner-Description>,
+ 			 								 <all-keys-Declared-References-Description>,
+ 			 								 <all-keys-Declared-Completions-Description>
  			 							   )
  			|} 
  			;esv-aterm := Module(package-esv-main-name, Import([]), sections) 
- 			;<save-artifact(WriteToBinaryFile | package-qname , root-directory , <get-main-esv-output-path(|"esv")>(root-directory , package-qname))>esv-aterm
+ 			;<save-artifact(WriteToBinaryFile | package-qname , root-directory , <get-main-output-path(|$[[<get-main-file-name>()].main], "esv")>(root-directory , package-qname))>esv-aterm
 		where
 			<debug-compiler>$[ Codegen | ESV | Finished generation of packed esv for [<pp-aterm>package-qname].]
 		 		
@@ -68,9 +70,9 @@
 	* 
 	* @type packagename -> default semantic provider 
 	*/
-	add-package-ctree : package-name -> [SemanticProvider(package-output-ctree)] // TODO : get main package ctree
+	add-package-ctree : lang-name -> [SemanticProvider(lang-output-ctree)] // TODO : get main package ctree
 		where 
-				package-output-ctree := $[include/[package-name].ctree]
+				lang-output-ctree := $[include/[lang-name].ctree]
 	
 	/*
 	* Returns all the imports for the current namespace. 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Tue May 10 14:36:08 2011	(r22844)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Tue May 10 14:38:40 2011	(r22845)
@@ -46,7 +46,7 @@
 			 	;init-code-generation  
 				;<list-loop(generate-spx-package)>list-of-package-qname*
 				;<debug>$[......................Generating Build Scipt......................]
-				;<emit-build-script> list-of-package-qname*
+				;<emit-build-script> <filter(has-language-name-configured)>list-of-package-qname*
 				;<debug>$[......................Code Generation is done......................] 		
 			else
 				<debug>$[Please fix the errors before building the artifacts:  [<pp-aterm-forced>problems]]
@@ -55,6 +55,7 @@
 		;disable-compiler-debugging
 		;!current-term //restoring current term to avoid side effects  
 	
+	has-language-name-configured = ?Package(QName(_)) ; where(get-language-name)
 		
 rules
 
@@ -67,25 +68,41 @@
 		package-typed-qname at Package(untyped-qname) -> <id>
 		where 
 			<debug-compiler> $[Generate| Generate code for spx-package| Planning to Generate Artifacts : [<pp-aterm>]] 
+		with 
+			enclosed-module-typed-qnames := <get-enclosed-modules>package-typed-qname
 		where
 			if should-generate-code-this-package  then 
-				{|GetEnclosingPackageName,GeneratedSignature: 
-						rules ( GetEnclosingPackageName := package-typed-qname);
-						enclosed-module-typed-qnames := <get-enclosed-modules>package-typed-qname;
-						<list-loop(
-								generate-spx-module
-							)
-						>enclosed-module-typed-qnames;
-						<generate-main> enclosed-module-typed-qnames // generate all the main artifacts now  
+				{|GetEnclosingPackageName,GeneratedSignature:
+					 	rules (GetEnclosingPackageName := package-typed-qname);
+						// Generates artifacts from all the modules 	
+						<list-loop(generate-spx-module)>enclosed-module-typed-qnames;
+						if (language-name  := <get-language-name> package-typed-qname) then
+							// Since, the language-name is defined for this language 
+							// generate all the main artifacts  for this package
+							// if Language name is not defined for certain packaged, they will not be considered 
+							// as a language , rather will be treated as a langauge library to be reused by other 
+							// languages.
+							
+							//language-name := <get-language-name> package-typed-qname;
+							//<debug(!"Language name : ")>language-name ;
+							{| GetLanguageName : 
+										rules( GetLanguageName  := language-name);
+										<emit-package-signature-main>();
+										<generate-main> enclosed-module-typed-qnames 
+							|}  
+						end	  
 				|};		
-				where(
-					rules(PackageCodeGenerated: package-typed-qname -> package-typed-qname)
-				)
-				<+
+				where(rules(PackageCodeGenerated: package-typed-qname -> package-typed-qname)) // TODO : delete this rules. probably , it is reduntant 
+			<+
 				<debug-compiler> $[Generate| generate-spx-package > [<pp-aterm>package-typed-qname] Failed. ]
 				;fail
 			end
 	
+	
+	get-main-file-name : () ->lang-name 
+	with 
+		lang-name := <GetLanguageName> <+ debug(!"GetLanguageName encountered error. Please verify it is called within the scope defined for the DR")
+
 	// generates artifacts fro spx module
 	generate-spx-module: 
 		module-typed-qname at Module(untyped-qname) -> <id>
@@ -97,8 +114,8 @@
 				module-decl* := <get-original-module-declaration>module-typed-qname;
 				{|GetEnclosingModuleName:
 						rules( GetEnclosingModuleName := module-typed-qname);
-						<generate-all> module-decl* ;		// generating all the artifacts for the specified module
-						<emit-package-signature-main>()
+						
+								<generate-all> module-decl* 	// generating all the artifacts for the specified module
 				|};
 				module-abs-path := <DeclaredModule>untyped-qname;
 				where(
@@ -138,7 +155,8 @@
 		<post-coversion-adapter>adapted-result*  => resultant-block*
 
 
-	ensure-list-is-not-empty =  is-not-empty-list
+	// Verifies wheter a particular list is empty or not.
+	ensure-list-is-not-empty =  contracts(contract-requires (is-list| <id>)); is-not-empty-list
 	
 	
 rules

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Tue May 10 14:36:08 2011	(r22844)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Tue May 10 14:38:40 2011	(r22845)
@@ -59,11 +59,12 @@
  			 relative-autogen-path :=  <qname-to-path>package-qname;
  			 autogen-dir :=$[[<Autogenerated-Artifacts-Dir>]/[relative-autogen-path]];
 			 root-directory := $[[project-path]/[<Autogenerated-Artifacts-Dir>]];
-			 output-path := <get-main-output-path(|"sdf")>(root-directory, package-qname);
+			 main-sdf-module-name :=<get-main-file-name>(); 
+			 output-path := <get-main-output-path(|main-sdf-module-name, "sdf")>(root-directory, package-qname);
 			<debug-compiler>$[ Codegen | SDF | Generating main for the following package : [<pp-aterm> package-qname].]
  		where
 			sdf-string := 
-	    $[module [<get-main-file-name>package-qname]
+	    $[module [main-sdf-module-name]
 	         imports
 		      	[<map(pp-sdf-import)>module-qname*]   									 
 	     ]

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Tue May 10 14:36:08 2011	(r22844)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Tue May 10 14:38:40 2011	(r22845)
@@ -44,10 +44,10 @@
 	with 
  			project-path := <ProjectPath>
  			;Package(package-qname)   := <GetEnclosingPackageName>
- 			;package-name-string			:= <qname-to-string>package-qname
+ 			;language-name-string			:= <get-main-file-name>()
  	where 
 			<debug-compiler>$[Codegen|Generating main signature for the packagees]
-			;generated-signatures-string := $[module [package-name-string]-signatures 
+			;generated-signatures-string := $[module [language-name-string]-signatures 
 			 	imports 
 					[<map(\s -> $[[s]
 				]\)	><all-keys-GeneratedSignature>]	
@@ -55,8 +55,8 @@
 			;signatures-as-aterm-string := <to-signature-as-rtree >generated-signatures-string
 	where
 		 autogen-dir := $[[project-path]/include]
-	 	;output-path-str 		:=   $[[autogen-dir]/[package-name-string]-signatures.str]
-	 	;output-path-rtree 		:= $[[autogen-dir]/[package-name-string]-signatures.rtree]
+	 	;output-path-str 		:=   $[[autogen-dir]/[language-name-string]-signatures.str]
+	 	;output-path-rtree 		:= $[[autogen-dir]/[language-name-string]-signatures.rtree]
 	 	;<ensure-path-exists>(project-path, "include") 
    	;chdir-to-project-path 
 	where

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Tue May 10 14:36:08 2011	(r22844)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Tue May 10 14:38:40 2011	(r22845)
@@ -58,12 +58,12 @@
  			 root-directory 					:= $[[project-path]/[<Autogenerated-Artifacts-Dir>]]; 
  		   <debug-compiler> $[CodeGen | STR | Generate-str-main from package-name: [<pp-aterm>package-qname]]
  		where   	  
- 			 main-str-module-name :=  <get-main-file-name>package-qname; 
+ 			 main-str-module-name :=  <get-main-file-name>(); 
 			 str-aterm := Module( main-str-module-name  ,[Imports(<map(to-str-import);flatten-list>module-qname*)]);
 			 str-string := <pp-stratego-string> <parenthesize-Stratego>  str-aterm
 		where
-			<save-artifact(save-to-file      | package-qname , root-directory, <get-main-output-path(|"str")>(root-directory, package-qname))>str-string;
-			<save-artifact(WriteToBinaryFile | package-qname , root-directory, <get-main-output-path(|"rtree")>(root-directory, package-qname))>str-aterm;
+			<save-artifact(save-to-file      | package-qname , root-directory, <get-main-output-path(|main-str-module-name, "str")>(root-directory, package-qname))>str-string;
+			<save-artifact(WriteToBinaryFile | package-qname , root-directory, <get-main-output-path(|main-str-module-name, "rtree")>(root-directory, package-qname))>str-aterm;
 			<debug-compiler>$[ Codegen | STR | Generation of Main STR Module for package : [<pp-aterm> package-qname] is done.] 
 
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str	Tue May 10 14:36:08 2011	(r22844)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str	Tue May 10 14:38:40 2011	(r22845)
@@ -29,4 +29,10 @@
 	
 	
 	
-	contracts ( s ) =  where(s) <+ fail    
\ No newline at end of file
+	contracts ( s ) =  where(s) <+ fail
+	
+	
+	with-verification (preconditions, s ) = with-verification (preconditions, s , id)
+	 
+	
+	with-verification (preconditions, s , postconditions) = where(preconditions) ; s ; where(postconditions) <+ fail    
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str	Tue May 10 14:36:08 2011	(r22844)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str	Tue May 10 14:38:40 2011	(r22845)
@@ -2,6 +2,7 @@
 imports 
 	lib/editor-common.generated 
 	context/signatures
+	codegen/generate
 imports
 	common
 	utils/debug
@@ -39,7 +40,7 @@
 			!dir-path// there is no point of concat relative-path if its empty
 		end 
 	
-	get-main-file-name =
+		get-main-file-name =
 		?QName(qname-parts*);
 		<convert-qname(|"-")>QName(qname-parts*) => qname-as-string;
 		<concat-strings>[qname-as-string]
@@ -48,16 +49,14 @@
 		?sdf-module-name;
 		<concat-strings>[sdf-module-name,"-signature"]
 	
-	//TODO : refactor the repetation of same logic
-	get-main-esv-output-path(|extension)=
+	//TODO : refactor | eliminate repetative logic and reuse existing strategies
+	get-main-output-path(|main-file-name, extension)=
 		?(dir-path, QName(qname-parts*))
-		 ;artifact-main-file-name    := <qname-to-string>QName(qname-parts*)
+		 ;artifact-main-file-name    := main-file-name
 		 ;relative-path := <qname-to-path> QName(qname-parts*)
-		 // restructuring the autogenerated artifacts structure
-		 // ;<concat-strings> [dir-path, "/" , relative-path, "/" ,artifact-main-file-name, ".main" , ".", extension]
-		 ;<concat-strings> [dir-path, "/" ,artifact-main-file-name, ".main" , ".", extension]
-		
-	 		
+		 ;<concat-strings> [dir-path, "/" ,artifact-main-file-name, "." , extension]  
+	
+		 		
 	get-main-output-path(|extension)=
 		?(dir-path, QName(qname-parts*))
 		 ;artifact-main-file-name    := <get-main-file-name>QName(qname-parts*)

From M.A.Akhter at student.tudelft.nl  Tue May 10 17:47:54 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Tue, 10 May 2011 15:47:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22846 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	codegen context utils
Message-ID: <20110510154754.0B462108C008@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Tue May 10 15:47:53 2011
New Revision: 22846
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22846&sc=1

Log:
* generalizing the main modules for spoofax artifacts. Considering Language Name as a Main Module for SDF/STR/ESV. Whenever language name is not provided, artifacts are generated in a library mode. I.e.  could be used by other packages but cant't act as a language itself.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str	Tue May 10 14:38:40 2011	(r22845)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str	Tue May 10 15:47:53 2011	(r22846)
@@ -3,15 +3,16 @@
 imports 
   lib/editor-common.generated
 imports 
-	include/SpoofaxLang
+	include/SpoofaxLang
+	
 imports 
 	common
 	config 
 	utils/path
-	normalize/signatures
-	codegen/main
-	codegen/generate
-
+	normalize/-
+	context/-
+	codegen/-
+	
 rules
 	emit-build-script: package-qnames* -> package-qnames*  
 		with 
@@ -71,21 +72,21 @@
 		build-package-dependencies   :=	<map(get-package-target-name);separate-by(|",");concat-strings>pakage-qname*
 	
 	
-	emit-package-specific-ant : Package(package-qname at QName(qname-parts*)) -> $[ 
+	emit-package-specific-ant : p at Package(package-untyped-qname at QName(qname-parts*)) -> $[ 
 	
 	<target name="[package-target-name]">
-		<property name="package.name" value="[package-name]"/>
-		<property name="package.qname" value="[package-qname-string]"/>
-		<property name="package.path" location="[package-directory]"/>
-		<property name="package.main.sdf.module" value="[package-main-name]"/>
-		<property name="package.main.str.module" value="[package-main-name]"/>
-		<property name="package.main.esv.module" value="[package-name].main"/>
-		<property name="metasdfmodule" value="Stratego-[package-main-name]"/> 
+		<property name="package.path" location="[package-directory]"/>
+		<property name="package.name" value="[language-name]"/>
+		<property name="package.qname" value="[package-qname-string]"/>
+		<property name="package.main.sdf.module" value="[language-name]"/>
+		<property name="package.main.str.module" value="[language-name]"/>
+		<property name="package.main.esv.module" value="[language-name].main"/>
+		<property name="metasdfmodule" value="Stratego-[language-name]"/> 
 		
 		<antcall target = "spx.default">
 		  <param name = "package.name"  value = "${package.name}"/>
-		  <param name = "package.qname" value = "${package.qname}"/>
-			<param name = "package.path"  value = "${package.path}"/>
+		  <param name = "package.qname"  value = "${package.qname}"/>
+		  <param name = "package.path"  value = "${package.path}"/>
 		 	<param name = "package.main.sdf.module" value = "${package.main.sdf.module}"/>
 			<param name = "package.main.str.module" value = "${package.main.str.module}"/>
 		 	<param name = "package.main.esv.module" value = "${package.main.esv.module}"/>
@@ -94,12 +95,11 @@
 	</target>	
 	]
 	where 
-		 relative-autogen-path      := <qname-to-path>package-qname
+		 relative-autogen-path      := <qname-to-path>package-untyped-qname
 		;package-directory		      := $[[<Autogenerated-Artifacts-Dir>]/[relative-autogen-path]]
- 		;package-main-name          := <get-main-file-name>package-qname
- 		;package-name								:= <qname-to-string>package-qname
- 		;package-qname-string				:=  <convert-qname(|".");string-replace(|"-", ".")>package-qname
- 		;package-target-name				:= <get-package-target-name>package-qname    
+ 		;language-name							:= <get-language-name>p
+ 		;package-target-name				:= <get-package-target-name>package-untyped-qname  
+ 		;package-qname-string				:=  <convert-qname(|".");string-replace(|"-", ".")>package-untyped-qname
 
 
 	get-package-target-name : 
@@ -516,7 +516,7 @@
       <arg value="-o"/>
       <arg value="${build.stratego.outputfile}"/>
   		<arg value="-p"/> 
-  	  <arg value="${package.qname}"/>  <!-- TODO : after incorporating lang name in code  generation package.qname will be package.main.str.module -->
+  	  <arg value="${package.qname}"/>  <!-- Note : added this extra parameter since, java package name does not allow dash unlike the ID is defined-->
       <arg value="--library"/>
       <arg value="--clean"/>
   		<arg line="${build.stratego.args}"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str	Tue May 10 14:38:40 2011	(r22845)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str	Tue May 10 15:47:53 2011	(r22846)
@@ -18,10 +18,18 @@
 	utils/annotations
 	utils/path
 	utils/debug 
+	utils/contract
 			
 rules 
 	
-	get-language-name  = where(?Package(QName(_))) ; DeclaredLangaugeName
+	get-language-name  = 
+		contracts(
+			contract-requires(
+				?Package(QName(_)
+				)
+			)
+		); 
+		DeclaredLangaugeName
 	 
 	get-unique-language-name = get-all-language-name; ?[<id>]
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str	Tue May 10 14:38:40 2011	(r22845)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str	Tue May 10 15:47:53 2011	(r22846)
@@ -21,14 +21,16 @@
 			;fail 	 
 	
 	
-	contract-requires ( s | arg ) =
-			where(<s>arg)
+	contract-requires ( s | arg ) = <contract-requires (s)> arg
+	
+	
+	contract-requires (s) =
+			where(s)
 		<+
-			<debug> $[Contract | Requires Failed - argument :[<pp-aterm>arg] ]
+			<debug> $[Contract | Requires Failed - argument :[<pp-aterm>] ]
 			;fail 	 
 	
 	
-	
 	contracts ( s ) =  where(s) <+ fail
 	
 	

From M.A.Akhter at student.tudelft.nl  Tue May 10 21:50:57 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Tue, 10 May 2011 19:50:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22847 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test
Message-ID: <20110510195057.724812B8040@mx2.tudelft.nl>

Author: MdAdilAkhter
Date: Tue May 10 19:50:56 2011
New Revision: 22847
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22847&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/Lawoco-Test.spx
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/entity-lang.spx
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/test-without-package.spx

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/Lawoco-Test.spx
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/Lawoco-Test.spx	Tue May 10 15:47:53 2011	(r22846)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/Lawoco-Test.spx	Tue May 10 19:50:56 2011	(r22847)
@@ -16,4 +16,6 @@
     Var at ID "=" Exp                      -> Stm {"Assign"}
     Var at ID                              -> Exp {"Var"}         %% or, could be a Property!
     Exp "." Property at ID                 -> Exp {"PropAccess"}
-    "{" Stm* "}"                        -> Stm {"Block", scope(Var)}         
\ No newline at end of file
+    "{" Stm* "}"                        -> Stm {"Block", scope(Var)}   
+    
+                
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/entity-lang.spx
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/entity-lang.spx	Tue May 10 15:47:53 2011	(r22846)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/entity-lang.spx	Tue May 10 19:50:56 2011	(r22847)
@@ -16,11 +16,11 @@
 
 
 	     
-package entity-lang
+package entity-lang 
 	
 	module module-main
-		imports 
-			libstratego-lib
+		imports  
+			libstratego-lib 
 		
 		context-free start-symbols 
     	Start
@@ -37,7 +37,7 @@
 
 		language General properties
     	name          : entity-lang
-  		id            : entity-lang
+    	id            : entity-lang 
   		extends       : Root
                   
   		description   : "Spoofax/IMP-generated editor for the TestSpoofax language"
@@ -53,7 +53,7 @@
 	    // Fences (used for matching,            
 	  	// inserting, indenting brackets):       
 	  	fences                                 : [ ]
-	                                           ( )
+	                                           ( ) 
 	                                           { }
 	                                           
 	  	// Automatic indent hints                

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/test-without-package.spx
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/test-without-package.spx	Tue May 10 15:47:53 2011	(r22846)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/test-without-package.spx	Tue May 10 19:50:56 2011	(r22847)
@@ -1,5 +1,5 @@
 module test-main 
-		imports entity-lang
+	 imports entity-lang
 		
 		context-free start-symbols 
     	Start
@@ -8,6 +8,6 @@
 	    "module" ID Definition*       -> Start {cons("Module")}
 	    "entity" ID "{" Property* "}" -> Definition {cons("Entity")}
 	    ID ":" Type                   -> Property {cons("Property")}
-	    ID                            -> Type {cons("Type")}   
-  
- 
\ No newline at end of file
+	    ID                            -> Type {cons("Type")}    
+   
+   	   
\ No newline at end of file

From R.B.Vermaas at tudelft.nl  Wed May 11 08:19:02 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 11 May 2011 06:19:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22848 - hydra
Message-ID: <20110511061902.B9E93108C088@mx3.tudelft.nl>

Author: rob
Date: Wed May 11 06:19:01 2011
New Revision: 22848
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22848&sc=1

Log:


Modified:
   hydra/spoofax-fun.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Tue May 10 19:50:56 2011	(r22847)
+++ hydra/spoofax-fun.nix	Wed May 11 06:19:01 2011	(r22848)
@@ -93,7 +93,7 @@
                           <echo message="compile classpath: ''${externaljarx}" />
                           <echo message="compile classpath: ''${maven.compile.classpath}" />
                           <property name="externaljarx" refid="maven.compile.classpath"/>
-                          <property name="java.class.path" value="utils/aster.jar:utils/strategoxt.jar:utils/sdf2imp.jar:utils/make_permissive.jar"/>
+                          <property name="externaljar" value="utils/aster.jar:utils/strategoxt.jar:utils/sdf2imp.jar:utils/make_permissive.jar"/>
                           <property name="eclipse.spoofaximp.jars" value="utils"/>
                           <property name="eclipse.spoofaximp.strategojar" value="utils/strategoxt.jar"/>
                           <property name="eclipse.home" value="${eclipse}/eclipse"/>
@@ -116,7 +116,7 @@
       cd ..
     done
 
-    mvn -X package -Dtycho.targetPlatform=${eclipse}/eclipse ${mvnFlags} -e
+    mvn package -Dtycho.targetPlatform=${eclipse}/eclipse ${mvnFlags} -e
   '';
 	      
   installPhase = ''

From R.B.Vermaas at tudelft.nl  Wed May 11 08:25:32 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 11 May 2011 06:25:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22849 - hydra
Message-ID: <20110511062532.7527D7F805B@mx1.tudelft.nl>

Author: rob
Date: Wed May 11 06:25:32 2011
New Revision: 22849
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22849&sc=1

Log:


Modified:
   hydra/spoofax-fun.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Wed May 11 06:19:01 2011	(r22848)
+++ hydra/spoofax-fun.nix	Wed May 11 06:25:32 2011	(r22849)
@@ -90,10 +90,7 @@
                <configuration>
                   <tasks>
                           <echo>Running ant script</echo>
-                          <echo message="compile classpath: ''${externaljarx}" />
-                          <echo message="compile classpath: ''${maven.compile.classpath}" />
                           <property name="externaljarx" refid="maven.compile.classpath"/>
-                          <property name="externaljar" value="utils/aster.jar:utils/strategoxt.jar:utils/sdf2imp.jar:utils/make_permissive.jar"/>
                           <property name="eclipse.spoofaximp.jars" value="utils"/>
                           <property name="eclipse.spoofaximp.strategojar" value="utils/strategoxt.jar"/>
                           <property name="eclipse.home" value="${eclipse}/eclipse"/>

From R.B.Vermaas at tudelft.nl  Wed May 11 13:02:30 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 11 May 2011 11:02:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22850 - hydra/webdsl
Message-ID: <20110511110230.7772A7F809E@mx1.tudelft.nl>

Author: rob
Date: Wed May 11 11:02:30 2011
New Revision: 22850
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22850&sc=1

Log:
use firefox 3.6 for tests to be sure that webdriver is working properly

Modified:
   hydra/webdsl/tests-separate-compilation.nix
   hydra/webdsl/tests.nix

Modified: hydra/webdsl/tests-separate-compilation.nix
==============================================================================
--- hydra/webdsl/tests-separate-compilation.nix	Wed May 11 06:25:32 2011	(r22849)
+++ hydra/webdsl/tests-separate-compilation.nix	Wed May 11 11:02:30 2011	(r22850)
@@ -32,7 +32,7 @@
         require = [ ./machine.nix ];
         drv = pkgs.stdenv.mkDerivation {
           name = "webdsl-webcheck-r${toString webdslSrc.rev}";
-          buildInputs = [pkgs.ant pkgs.jdk pkgs.firefox webdsl];
+          buildInputs = [pkgs.ant pkgs.jdk pkgs.firefox36Pkgs.firefox webdsl];
           buildCommand = '' 
             ensureDir $out
             cp -R ${webdslSrc}/test/succeed-web succeed-web

Modified: hydra/webdsl/tests.nix
==============================================================================
--- hydra/webdsl/tests.nix	Wed May 11 06:25:32 2011	(r22849)
+++ hydra/webdsl/tests.nix	Wed May 11 11:02:30 2011	(r22850)
@@ -66,7 +66,7 @@
         require = [ ./machine.nix ];
         drv = pkgs.stdenv.mkDerivation {
           name = "webdsl-webcheck-r${toString webdslSrc.rev}";
-          buildInputs = [pkgs.ant pkgs.jdk pkgs.firefox webdsl];
+          buildInputs = [pkgs.ant pkgs.jdk pkgs.firefox36Pkgs.firefox webdsl];
           buildCommand = '' 
             ensureDir $out
             cp -R ${webdslSrc}/test/succeed-web succeed-web

From seba at informatik.uni-marburg.de  Wed May 11 16:15:44 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Wed, 11 May 2011 14:15:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22851 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20110511141544.9AA81108C074@mx3.tudelft.nl>

Author: SebastianErdweg
Date: Wed May 11 14:15:41 2011
New Revision: 22851
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22851&sc=1

Log:
deactivated auto-focusing of console after auto-completion. why would you want that?

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Wed May 11 11:02:30 2011	(r22850)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Wed May 11 14:15:41 2011	(r22851)
@@ -140,7 +140,9 @@
 					":: Completion triggered for: " + currentCompletionNode
 					+ parseErrorHelp
 					+ " (candidate sorts: " + sorts + ")" + "\n");
-				StrategoConsole.activateConsole(true);
+
+				// why would you want to do that?
+				// StrategoConsole.activateConsole(true);
 			} catch (IOException e) {
 				Environment.logWarning("Could not write to console", e);
 			}

From seba at informatik.uni-marburg.de  Wed May 11 16:16:56 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Wed, 11 May 2011 14:16:56 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22852 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20110511141656.6BA20CC11E@mx4.tudelft.nl>

Author: SebastianErdweg
Date: Wed May 11 14:16:53 2011
New Revision: 22852
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22852&sc=1

Log:
improved the heuristics for retrieving names from ASTs. In particular, the heuristics now ignore strings that are optional (wrapped in a 'Some' node).

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/LabelProvider.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/LabelProvider.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/LabelProvider.java	Wed May 11 14:15:41 2011	(r22851)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/LabelProvider.java	Wed May 11 14:16:53 2011	(r22852)
@@ -13,6 +13,7 @@
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.jsglr.client.imploder.IToken;
 import org.spoofax.jsglr.client.imploder.ITokenizer;
+import org.spoofax.terms.attachments.ParentAttachment;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.parser.ast.AstNodeLocator;
 
@@ -47,12 +48,12 @@
 		
 		if ("MethodDec".equals(constructor)
 				&& node.getSubtermCount() > 0 && node.getSubterm(0).getSubtermCount() > 3) {
-			return node.getSubterm(0).getSubterm(3).toString();
+			return getIdentifier(node.getSubterm(0).getSubterm(3));
 		} else if ("ClassDec".equals(constructor)
 				&& node.getSubtermCount() > 0 && node.getSubterm(0).getSubtermCount() > 1) {
-			return node.getSubterm(0).getSubterm(1).toString();
+			return getIdentifier(node.getSubterm(0).getSubterm(1));
 		} else if (node.getSubtermCount() == 1
-				&& node.getSubtermCount() > 0 && node.getSubterm(0).isList()) {
+				&& node.getSubterm(0).isList()) {
 			return getLeftToken(node).toString(); // e.g., "rules", "strategies"
 		} else {
 			return getIdentifier(node);
@@ -67,9 +68,29 @@
 		do {
 			IToken token = stream.getTokenAt(i);
 			int kind = token.getKind();
-
-			if (kind == TK_IDENTIFIER || kind == TK_STRING)
-				return token.toString();
+			
+			if (kind == TK_IDENTIFIER || kind == TK_STRING) {
+				
+				/*
+				 * heuristics: optional tokens are not representative labels
+				 *  => Figure out whether the token occurs in a 'Some' node.
+				 */
+				if (!(token.getAstNode() instanceof IStrategoTerm))
+					return token.toString();
+				IStrategoTerm term = (IStrategoTerm) token.getAstNode();
+				
+				boolean isOptional = false;
+				while (term != null && !term.equals(node)) {
+					if ("Some".equals(tryGetName(term))) {
+						isOptional = true;
+						break;
+					}
+					term = ParentAttachment.getParent(term);
+				}
+				
+				if (!isOptional)
+					return token.toString();
+			}
 			
 		} while (i++ < end);
 		

From M.A.Akhter at student.tudelft.nl  Thu May 12 00:55:39 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Wed, 11 May 2011 22:55:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22853 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans: .
	context editor unit-tests
Message-ID: <20110511225539.9E482108C091@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Wed May 11 22:55:37 2011
New Revision: 22853
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22853&sc=1

Log:
* added support for package's internal scope 
* logics to resolve symbol in the internal scope. During import , disabling resolve to look up the internal scope
* unit tests  to figure out / verify that internal scope setup is working

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/editor/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Wed May 11 14:16:53 2011	(r22852)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Wed May 11 22:55:37 2011	(r22853)
@@ -10,13 +10,17 @@
 	lib/Configuration/SpoofaxConfiguration
 	lib/editor-common.generated
 	spoofaxlang
+	normalize/signatures
 	
 rules 
-	default_package_name = !"_default"
+	default_package_name = !"__default"
 	
+	internal_module_name_string = !"__internal"
+	
+		
 rules 
 	initialize-configuration = 
-		?current-term
+		?current-term 
 		;<parse-spoofaxconfiguration-file>"spx.config" => config-aterms
 		;init-output-directory
 		;init-source-directory    		

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str	Wed May 11 14:16:53 2011	(r22852)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str	Wed May 11 22:55:37 2011	(r22853)
@@ -15,18 +15,18 @@
 	codegen/compile
 imports 	
 	common
+	config
 	utils/annotations
 	utils/path
 	utils/debug 
 	utils/contract
-			
+	
 rules 
 	
 	get-language-name  = 
 		contracts(
 			contract-requires(
-				?Package(QName(_)
-				)
+				?Package(QName(_))
 			)
 		); 
 		DeclaredLangaugeName

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str	Wed May 11 14:16:53 2011	(r22852)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str	Wed May 11 22:55:37 2011	(r22853)
@@ -11,13 +11,24 @@
 	normalize/signatures
 	codegen/compile 
 imports 	 
-	common 
+	common
+	config 
 	utils/annotations
 	utils/path
 	utils/debug
+
+rules 
+	
+	get_internal_module_qtname = 
+		?package-qt-name;
+		where(!package-qt-name => Package(QName(package-name-part*)));
+		!Module(QName([package-name-part*| [<internal_module_name_string>]]))
+
+	get_internal_module_qtname(|package-qt-name)  = <get_internal_module_qtname>package-qt-name
 	
 	
 rules 
+	
 	get-module-abs-filepath : Module(qname) -> result
 	where 
 			result := <DeclaredModule>qname 
@@ -32,11 +43,22 @@
 	
 rules	
 	// Add scopes for the symbol 
+	
 	to-global-symbol =
 		!(Globals(), <id>)
 	<+
 		<debug> $[Type| FAIL | Failed to convert it to Global symbol. <symbol> [<pp-aterm-forced>]]
 		;fail	
+	
+	to-intenal-scoped-symbol =
+		!(<GetEnclosingPackageName> , <GetEnclosingPackageName;get_internal_module_qtname> , <id>)
+		<+
+		to-global-symbol //if enclosing scope is not declared, then considering the namespace of the Symbol to be global 
+		<+
+		<debug> $[Type| FAIL | Failed to convert it to scoped symbol. 
+										<enclosing package> [<pp-aterm><GetEnclosingPackageName>] <enclosing module>[<pp-aterm-forced><GetEnclosingModuleName>] <symbol> [<pp-aterm-forced>]]
+		;fail	
+	 	
 		
 	to-scoped-symbol =  
 		!(<GetEnclosingPackageName> , <GetEnclosingModuleName> , <id>)
@@ -95,7 +117,8 @@
 	resolve-symbol-declarations(key-resolver, value-resolver) = 
 		?( current-package , current-module,symbol )
 		;<resolve-symbol-declarations(key-resolver, value-resolver|current-package , current-module)> symbol
-	
+
+rules	
 	// resolving declarations incrementally	
 	resolve-symbol-declarations(key-resolver, value-resolver|current-package , current-module)= 
 		?symbol; // NOTE : symbol does not contain any scope information
@@ -118,8 +141,10 @@
 			<+
 				where(<debug-symboltable>$[SymbolResolver| Resoving [<pp-aterm>symbol] in Imported Scopes.]);
 				where( 
+					// current package and module's untyped QName to create the scope 
 					!current-package => Package(untyped-package-qname);
 					!current-module  => Module(untyped-module-qname)
+					// getting all the using packages 
 					;<get-all-usings>( untyped-package-qname , untyped-module-qname) => imported-typedqname*
 					;<debug-symboltable>$[SymbolResolver| Getting List of dependening-on packages/modules : [<pp-aterm>]]
 					
@@ -132,14 +157,21 @@
 				fail
 		)
 
+rules
+		
 	resolve-symbol-declarations-internal(key-resolver,value-resolver,namespace-filter) =
 		key-resolver;
+		debug(!"1 : ");
 		filter(namespace-filter);
-	  mapconcat(value-resolver)
+		debug(!"2 : ");
+	  mapconcat(value-resolver);
+	  debug(!"3 : ")
 	<+     			 
 		<debug-symboltable>$[SymbolTable| FAIL | resolve-symbol-declarations | Failed to resolve following symbol [<pp-aterm>]]
 		;fail
-
+		 
+rules
+	
 	resolve-imported-symbol-declarations(key-resolver,value-resolver):
 		(symbol, scopes*) -> resolved*
 		where 
@@ -151,7 +183,17 @@
 			end
 		where 
 			if !currentscope => Package(_) then 
-				resolved* := <is-not-empty-list><resolve-symbol-declarations-internal(key-resolver, value-resolver,?(currentscope, _ , symbol))>symbol
+				internal_module_name := <get_internal_module_qtname>currentscope;
+				resolved* := <is-not-empty-list>
+												<resolve-symbol-declarations-internal(
+														key-resolver, 
+														value-resolver,
+														( 
+															//Filter to search all the symbold in package's scope
+															// Also, ensuring the visibility of the internal scope active 
+															?(currentscope, _ , symbol) ; not(?(currentscope, internal_module_name , symbol))
+														)
+												)>symbol
 			else
 				if !currentscope => Module(_) then 
 					resolved* := <is-not-empty-list><resolve-symbol-declarations-internal(key-resolver, value-resolver,?(_ , currentscope , symbol))>symbol
@@ -159,8 +201,4 @@
 			end;
 			where(<debug-symboltable>$[SymbolResolver| Resoving Symbol in Imported Scopes. Result: [<pp-aterm>resolved*]. Found in :[<pp-aterm>currentscope] ])
 		<+
-			resolved* := <resolve-imported-symbol-declarations(key-resolver  , value-resolver)> ( symbol, rest*)
-	
-	
-
-			 
\ No newline at end of file
+			resolved* := <resolve-imported-symbol-declarations(key-resolver  , value-resolver)> ( symbol, rest*)
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str	Wed May 11 14:16:53 2011	(r22852)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str	Wed May 11 22:55:37 2011	(r22853)
@@ -50,7 +50,7 @@
 	store-scope-reference: (typed-qname, typed-qname-ofparent) -> <id>
 		with 
 			rules( 
-				GetEnclosingScope :+ 	typed-qname 				 -> typed-qname-ofparent
+				GetEnclosingScope :+  typed-qname 				 -> typed-qname-ofparent
 				GetEnclosedScope  :+  typed-qname-ofparent -> typed-qname 
 			)				
 		where	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/editor/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/editor/main.str	Wed May 11 14:16:53 2011	(r22852)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/editor/main.str	Wed May 11 22:55:37 2011	(r22853)
@@ -8,6 +8,7 @@
 imports 
 	config
 	utils/cache	
+	utils/debug
 rules
 	//editor-resolve 
 	
@@ -23,10 +24,13 @@
 		with
 			rules(ProjectPath := project-path)
 			;initialize-configuration
+			 
 		with 
 			abs-path := <concat-strings;string-replace(|"\\", "/")>[project-path, "/" ,path]  
 		with 
 			<cache-currently-analyzing-ast>(abs-path  , ast)	 
 		with 
-			<compile-packages-of> abs-path  => ( errors, warnings, infos)
+			enable-symboltable-debugging;
+			<compile-packages-of> abs-path  => ( errors, warnings, infos);
+			disable-symboltable-debugging
 			 
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str	Wed May 11 14:16:53 2011	(r22852)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str	Wed May 11 22:55:37 2011	(r22853)
@@ -8,7 +8,24 @@
 	common
 	context/-
 	normalize/signatures
+	config
 rules
+	
+	get-internal-module-name-test:
+		(selected, position, ast, path, project-path) -> None()
+		with 
+			package-name := Package(QName(["Test" , "A"]));
+			expected 		 := Module( QName(["Test" , "A" , <internal_module_name_string>] ))
+		where 
+			<debug>$[Running Test .... ];
+			actual :=  <get_internal_module_qtname(|package-name)>
+		where
+			<debug> $[Verifying Expectaions .... ];
+			!expected  => actual;
+			<debug(!"SUCCESS. Actual and Expected :  ")> [actual, expected]
+		<+ 
+			<debug(!"FAILED. ")> [actual, expected]	
+				
 		
 	// Unit Test to check the resolve symbol is working as expected.	
 	test-resolving-symbol:

From M.A.Akhter at student.tudelft.nl  Thu May 12 00:56:38 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Wed, 11 May 2011 22:56:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22854 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax
Message-ID: <20110511225638.11880CC16B@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Wed May 11 22:56:37 2011
New Revision: 22854
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22854&sc=1

Log:
* 2 new reserve keywork is added 
* setting the right priority due to the new parser's behavior

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SPXCommon.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SpoofaxLang.sdf

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SPXCommon.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SPXCommon.sdf	Wed May 11 22:55:37 2011	(r22853)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SPXCommon.sdf	Wed May 11 22:56:37 2011	(r22854)
@@ -91,7 +91,8 @@
     "restrictions"      -> Reserved
   	"as"								-> Reserved
  		"main"							-> Reserved 
- 		"_default"					-> Reserved 
+ 		"__default"					-> Reserved
+ 		"__intenral"				-> Reserved 
  		
  		Reserved 						-> ReservedName[[ESV]]
  		ReservedName[[ESV]]	-> ID {reject}

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SpoofaxLang.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SpoofaxLang.sdf	Wed May 11 22:55:37 2011	(r22853)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SpoofaxLang.sdf	Wed May 11 22:56:37 2011	(r22854)
@@ -55,10 +55,10 @@
  
   context-free syntax
     QID "[" Symbols[[SDF]] "]" -> QName  {cons("ParamName")}
-    QID		  									 -> LegacyImportName {cons("Name")}	
-    {ID "." }+								 -> QName	 {cons("QName")}
-	  ID 												 -> QName	 {cons("Name"),prefer}
-    ID  											 -> SPXModuleName	 {cons("SPXModuleName")}
+    QID		  				   -> LegacyImportName {cons("Name")}	
+    {ID "." }+				   -> QName	 {cons("QName")}
+	ID	 					   -> QName	 {cons("Name"),prefer}
+    ID  					   -> SPXModuleName	 {cons("SPXModuleName")}
    	  
 	context-free syntax %% Imports   	
     %% TODO: SDF: "retains" clause eliminates need for "hiddens" section. except we need something to hide the start symbols
@@ -74,10 +74,10 @@
     "(" Import ")"                       -> Import {bracket, deprecated}
 
 	context-free syntax    
-    LegacyImportName				 				   -> ImportedModule{cons("ImportLegacyArtifact"), prefer}
-    QName "::" SPXModuleName 				   -> ImportedModule{cons("ImportSpxModule"), prefer} 
-    QName		   					   					 	 -> ImportedModule{cons("ImportPackage")}
-    QName "as" ID					   					 -> ImportedModule{cons("ImportPackageWithAlias"),prefer}	
+    LegacyImportName				 		-> ImportedModule{cons("ImportLegacyArtifact")}
+    QName "::" SPXModuleName 				-> ImportedModule{cons("ImportSpxModule"),prefer} 
+    QName		   					   		-> ImportedModule{cons("ImportPackage")  , prefer}
+    QName "as" ID					   		-> ImportedModule{cons("ImportPackageWithAlias"),prefer}	
 
 	context-free syntax
 		"[" {AttributeDef "," }+ "]"  	-> Attribute{cons("AttributeSection")}

From R.B.Vermaas at tudelft.nl  Thu May 12 10:49:40 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 12 May 2011 08:49:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22855 - hydra/webdsl
Message-ID: <20110512084940.39DB92B8046@mx2.tudelft.nl>

Author: rob
Date: Thu May 12 08:49:39 2011
New Revision: 22855
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22855&sc=1

Log:


Added:
   hydra/webdsl/editor.nix

Added: hydra/webdsl/editor.nix
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ hydra/webdsl/editor.nix	Thu May 12 08:49:39 2011	(r22855)
@@ -0,0 +1,51 @@
+{ nixpkgs ? /etc/nixos/nixpkgs
+, webdslJava ? builtins.storePath /nix/store/8ja3n4ysxf3mgssrzcflwmy10b008psw-webdsl-java-9.7pre4640  #{ outPath = ./.; rev = 1234; }
+, webdslEditor ? { outPath = ../../webdsl-editor ; rev = 1234; }
+, hydraConfig ? { outPath = ../../hydra-config ; rev = 1234; }
+}: 
+let
+  pkgs = import nixpkgs { system = "x86_64-linux"; };
+
+  eclipseFun = import "${hydraConfig}/eclipse.nix" pkgs ;
+
+/*
+webdsl.home=${user.home}/webdsl-java/src
+acoda.home=${user.home}/StructureEvolution
+
+externaldef=${webdsl.home}/org/webdsl/dsl/syntax/WebDSL.def
+externaljar=${webdsl.home}/webdsl.jar
+webdsl.projectdir=${webdsl.home}/org/webdsl/dsl/project
+
+*/
+
+  jobs = {
+
+    updatesite = import "${hydraConfig}/spoofax-fun.nix" {
+      inherit pkgs;
+      name = "webdsl";
+      version = "1.0.0";
+      src = webdslEditor;
+      buildInputs = [pkgs.strategoPackages.sdf];
+      preConfigure = ''
+      '';
+      updatesite = "http://www.lclnet.nl/update";
+    };
+
+/*
+    tests = {
+      install = eclipseFun {
+        name = "eclipse-mobl-install-test";
+        src =  pkgs.fetchurl {
+          url = http://download.springsource.com/release/ECLIPSE/helios/SR1/eclipse-SDK-3.6.1-linux-gtk.tar.gz ;
+          sha256 = "0s48rjaswi8m5gan1zlqvfwb4l06x5nslkq41wpkrbyj9ka8gh4x";
+        };
+        updatesites = [ "file://${jobs.updatesite}/site" ];
+        installIUs = [ "org.mobl_lang.feature.feature.group" ];
+        dontInstall = true;
+      };
+    };
+*/
+  };
+
+in jobs
+

From R.B.Vermaas at tudelft.nl  Thu May 12 14:06:33 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 12 May 2011 12:06:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22856 -
	strategoxt-java-backend/trunk/java
Message-ID: <20110512120633.390D1108C024@mx3.tudelft.nl>

Author: rob
Date: Thu May 12 12:06:33 2011
New Revision: 22856
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22856&sc=1

Log:
updating spoofax-libs.jar

Modified:
   strategoxt-java-backend/trunk/java/spoofax-libs.jar

Modified: strategoxt-java-backend/trunk/java/spoofax-libs.jar
==============================================================================
Binary file (source and/or target). No diff available.

From M.A.Akhter at student.tudelft.nl  Thu May 12 15:41:57 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 12 May 2011 13:41:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22857 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib
Message-ID: <20110512134157.10BA17F8021@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Thu May 12 13:41:56 2011
New Revision: 22857
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22857&sc=1

Log:


Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/SDF.tbl   (contents, props changed)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/SDF.tbl
==============================================================================
Binary file. No diff available.

From M.A.Akhter at student.tudelft.nl  Thu May 12 15:47:06 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 12 May 2011 13:47:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22858 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen:
	sdf str
Message-ID: <20110512134706.2B7FC108C023@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Thu May 12 13:47:05 2011
New Revision: 22858
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22858&sc=1

Log:
added legacy-artifacts parsers
- sdf 
- stratego

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/parser.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/parser.str

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/parser.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/parser.str	Thu May 12 13:47:05 2011	(r22858)
@@ -0,0 +1,29 @@
+module codegen/sdf/parser 
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-gpp
+	
+strategies
+
+  
+  parse-sdf-file =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(lib/SDF.tbl)>
+    )
+
+  
+  parse-sdf-string =
+    parse-string(
+      strsglr-report-parse-error
+    | <import-term(lib/SDF.tbl)>
+    )
+  
+  
+  parse-sdf-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(lib/SDF.tbl)>
+    )
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/parser.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/parser.str	Thu May 12 13:47:05 2011	(r22858)
@@ -0,0 +1,27 @@
+module codegen/sdf/parser 
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-gpp
+	
+strategies
+
+	parse-stratego =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(lib/Stratego-Sugar.tbl)>
+    )
+
+  parse-stratego-string =
+    parse-string(
+      strsglr-report-parse-error
+    | <import-term(lib/Stratego-Sugar.tbl)>
+    )
+  
+  parse-stratego-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(lib/Stratego-Sugar.tbl)>
+    )
+ 	
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Thu May 12 15:50:33 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 12 May 2011 13:50:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22859 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen
Message-ID: <20110512135033.0AE04108C023@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Thu May 12 13:50:32 2011
New Revision: 22859
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22859&sc=1

Log:
initial draft of parse-adapter

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str	Thu May 12 13:50:32 2011	(r22859)
@@ -0,0 +1,36 @@
+module codegen/parse-adapter
+
+imports
+	include/SpoofaxLang
+	context/signatures
+	normalize/signatures
+
+	
+rules
+	
+	parse-legacy-artifact: 
+		resolving-path -> parsed-string
+		with 
+			has-extension(|"sdf") + has-extension(|"def")
+		where 
+			parsed-string:= ""
+	
+	
+	parse-legacy-artifact: 
+		resolving-path -> parsed-string
+		with 
+			has-extension(|"rtree") + has-extension(|"str")
+		where 
+			parsed-string:= ""
+	
+	
+	parse-legacy-artifact: 
+		resolving-path -> parsed-string
+		with 
+			has-extension(|"esv") 
+		where 
+			parsed-string:= ""
+			
+			
+	
+    
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Thu May 12 16:38:48 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 12 May 2011 14:38:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22860 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans: .
	unit-tests
Message-ID: <20110512143848.05D9E2B8042@mx2.tudelft.nl>

Author: MdAdilAkhter
Date: Thu May 12 14:38:47 2011
New Revision: 22860
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22860&sc=1

Log:
* added unit tests to return the list of preconfigure legacy artifacts

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/config.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Thu May 12 13:50:32 2011	(r22859)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Thu May 12 14:38:47 2011	(r22860)
@@ -17,6 +17,8 @@
 	
 	internal_module_name_string = !"__internal"
 	
+	
+	get-known-legacy-extensions = !["sdf" , "def" , "str" , "rtree"] 
 		
 rules 
 	initialize-configuration = 

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/config.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/config.str	Thu May 12 14:38:47 2011	(r22860)
@@ -0,0 +1,22 @@
+module  unit-tests/config
+
+imports 
+	config
+
+rules 
+	
+	get-legacy-extension-names-test:
+		(selected, position, ast, path, project-path) -> None()
+		with 
+			expected 		 := ["sdf" , "def" , "str" , "rtree"]
+		where 
+			<debug>$[Running Test .... ];
+			actual :=  <get-known-legacy-extensions>
+		where
+			<debug> $[Verifying Expectaions .... ];
+			!expected  => actual;
+			<debug(!"SUCCESS. Actual and Expected :  ")> [actual, expected]
+		<+ 
+			<debug(!"FAILED. ")> [actual, expected]	
+				
+

From M.A.Akhter at student.tudelft.nl  Thu May 12 16:39:49 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 12 May 2011 14:39:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22861 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize
Message-ID: <20110512143949.9F717108C052@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Thu May 12 14:39:49 2011
New Revision: 22861
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22861&sc=1

Log:
* 1st draft of normalize legacy artifacts towards spx

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/to-spx.str

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/to-spx.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/to-spx.str	Thu May 12 14:39:49 2011	(r22861)
@@ -0,0 +1,28 @@
+module normalize/to-spx
+
+
+imports 
+	include/SpoofaxLang
+	utils/contract
+	normalize/-
+	
+rules 
+	
+	to-spx = to-spx-main-internal
+	
+	
+	to-spx-main-internal : legacy-artifact-details@(namespace, Module(Name(modulename)) , resolving-path) -> spx-content
+	where 
+		spx-content := ""
+	
+	
+	
+	sdf-to-spx(| package-type-qname, resolved-path) : sdf-content -> <id>	
+	with 
+		<has-extension(|"sdf") + has-extension(|"def")>resolved-path
+	with 
+		<contracts(
+			contract-requires(?Package(QName(_)))
+		)>package-type-qname
+		
+		 
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Thu May 12 17:27:56 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 12 May 2011 15:27:56 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22862 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	codegen codegen/sdf unit-tests utils
Message-ID: <20110512152756.35FD32B800E@mx2.tudelft.nl>

Author: MdAdilAkhter
Date: Thu May 12 15:27:55 2011
New Revision: 22862
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22862&sc=1

Log:
* added rule to check that whether the file extension is known
* added unit tests

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/path.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Thu May 12 14:39:49 2011	(r22861)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Thu May 12 15:27:55 2011	(r22862)
@@ -290,7 +290,7 @@
 			end	
 	
 	
-	//TODO : append additional checks . compilation should be incremental and if source not changed, show the cached errors/warnings/infos	
+	//TODO : append additional checks . compilation should be incremental and if source not changed, show the cached errors/warnings/infos
 	should-compile-this-package = 
 		?package-qname;
 		where(not(<currently-compiling-package>package-qname))
@@ -298,6 +298,7 @@
 
 rules 
 
+	
 	// Compile sdf, str, esv modules which are imported in the global nameepsace
 	compile-legacy-artifacts: package-tqnames* -> package-tqnames*
 	where
@@ -335,7 +336,17 @@
 					<+ 
 						<debug-compiler>$[compile-main | compile-legacy-artifact > failed to resolve]
 				end 	 
-			end	
+			else
+				debug(!"Not UnResolved + Hence legacy artifacts")
+				// checks whether it has known extension
+				
+				
+				
+				//read + normalize and then sent to declare
+				 
+				
+			end
+				
 		where
 			rules ( Resolved-ExternalArtifact : (modulename,resolving-path) ->resolving-path) 
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str	Thu May 12 14:39:49 2011	(r22861)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str	Thu May 12 15:27:55 2011	(r22862)
@@ -23,14 +23,4 @@
 		where 
 			parsed-string:= ""
 	
-	
-	parse-legacy-artifact: 
-		resolving-path -> parsed-string
-		with 
-			has-extension(|"esv") 
-		where 
-			parsed-string:= ""
-			
-			
-	
-    
\ No newline at end of file
+	    
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Thu May 12 14:39:49 2011	(r22861)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Thu May 12 15:27:55 2011	(r22862)
@@ -14,9 +14,9 @@
 	include/SpoofaxLang
 imports
 	codegen/compile
+	codegen/str/parser
 	codegen/main
 	codegen/generate
-	
 	context/signatures
 	normalize/signatures
 imports 
@@ -25,16 +25,8 @@
 	
 rules
 	
-		parse-str-string =
-    parse-string(
-      strsglr-report-parse-error
-    | <import-term(lib/Stratego-Sugar.tbl)>
-    )  
-	
 	to-signature-as-rtree =   
-		parse-str-string
-	
-	
+		parse-stratego-string
 			
 rules
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/path.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/path.str	Thu May 12 14:39:49 2011	(r22861)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/path.str	Thu May 12 15:27:55 2011	(r22862)
@@ -5,6 +5,28 @@
 	utils/path
 	include/SpoofaxLang
 rules
+
+	has-known-extensions-success-test:
+		(selected, position, ast, path, project-path) -> None()
+		where 
+			<debug>$[Running Test .... ];
+			<has-known-extensions> "c:\\A.sdf" ;
+			<debug>$[SUCCESS...]
+		<+ 
+			<debug>$[FAILED...]		
+				
+	has-known-extensions-should-fail-test:
+		(selected, position, ast, path, project-path) -> None()
+		where 
+			<debug>$[Running Test .... ];
+			<has-known-extensions> "c:\\A.doc" ;
+			<debug>$[SUCCESS...]
+		<+ 
+			<debug>$[FAILED...]	
+	
+
+	
+	
 	test-path:
 		(selected, position, ast, path, project-path) -> selected
 		where

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str	Thu May 12 14:39:49 2011	(r22861)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str	Thu May 12 15:27:55 2011	(r22862)
@@ -5,12 +5,26 @@
 	codegen/generate
 imports
 	common
+	config
 	utils/debug
 	include/SpoofaxLang
 	spoofaxlang
 
 rules 
 	
+	has-known-extensions  =
+		?file-path ;
+		get-known-legacy-extensions;
+		filter(?ext; <has-extension(|ext)>file-path);
+		is-not-empty-list;
+		!file-path
+	<+
+		<debug> $[Unknown File Type found at :[<pp-aterm>] . Supported File Extensions are : [<get-known-legacy-extensions;pp-aterm>]];
+		fail
+		
+
+rules 
+	
 	qname-to-path = 
 		convert-qname(|"/")
 	

From M.A.Akhter at student.tudelft.nl  Thu May 12 17:37:05 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 12 May 2011 15:37:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22863 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	codegen context editor
Message-ID: <20110512153705.8C0E0CC150@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Thu May 12 15:37:05 2011
New Revision: 22863
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22863&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/editor/main.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Thu May 12 15:27:55 2011	(r22862)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Thu May 12 15:37:05 2011	(r22863)
@@ -337,7 +337,7 @@
 						<debug-compiler>$[compile-main | compile-legacy-artifact > failed to resolve]
 				end 	 
 			else
-				debug(!"Not UnResolved + Hence legacy artifacts")
+				<debug(!"Not UnResolved + Hence legacy artifacts")>resolving-path
 				// checks whether it has known extension
 				
 				

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str	Thu May 12 15:27:55 2011	(r22862)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str	Thu May 12 15:37:05 2011	(r22863)
@@ -5,22 +5,25 @@
 	context/signatures
 	normalize/signatures
 
+imports 
+	codegen/sdf/parser
+	codegen/str/parser
 	
 rules
 	
 	parse-legacy-artifact: 
-		resolving-path -> parsed-string
+		resolved-path-> parsed-string
 		with 
 			has-extension(|"sdf") + has-extension(|"def")
 		where 
-			parsed-string:= ""
+			parsed-string:= <parse-sdf-file>resolved-path
 	
 	
 	parse-legacy-artifact: 
-		resolving-path -> parsed-string
+		resolved-path -> parsed-string
 		with 
 			has-extension(|"rtree") + has-extension(|"str")
 		where 
-			parsed-string:= ""
+			parsed-string:= <parse-sdf-file>resolved-path
 	
 	    
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str	Thu May 12 15:27:55 2011	(r22862)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str	Thu May 12 15:37:05 2011	(r22863)
@@ -161,11 +161,9 @@
 		
 	resolve-symbol-declarations-internal(key-resolver,value-resolver,namespace-filter) =
 		key-resolver;
-		debug(!"1 : ");
 		filter(namespace-filter);
-		debug(!"2 : ");
-	  mapconcat(value-resolver);
-	  debug(!"3 : ")
+		mapconcat(value-resolver)
+	  
 	<+     			 
 		<debug-symboltable>$[SymbolTable| FAIL | resolve-symbol-declarations | Failed to resolve following symbol [<pp-aterm>]]
 		;fail

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/editor/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/editor/main.str	Thu May 12 15:27:55 2011	(r22862)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/editor/main.str	Thu May 12 15:37:05 2011	(r22863)
@@ -30,7 +30,5 @@
 		with 
 			<cache-currently-analyzing-ast>(abs-path  , ast)	 
 		with 
-			enable-symboltable-debugging;
-			<compile-packages-of> abs-path  => ( errors, warnings, infos);
-			disable-symboltable-debugging
+			<compile-packages-of> abs-path  => ( errors, warnings, infos)
 			 
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Thu May 12 17:54:26 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 12 May 2011 15:54:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22864 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	codegen codegen/sdf codegen/str unit-tests
Message-ID: <20110512155426.AA6037F8002@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Thu May 12 15:54:26 2011
New Revision: 22864
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22864&sc=1

Log:
* renaming to make consistent with other naming convention
* adding code to check whether there is a known extension , i.e., legacy artifact has a known extension

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/parse.str
      - copied, changed from r22858, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/parser.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/parse.str
      - copied, changed from r22858, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/parser.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/parser.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/parser.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Thu May 12 15:37:05 2011	(r22863)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Thu May 12 15:54:26 2011	(r22864)
@@ -335,18 +335,20 @@
 						<read-stratego-signatures;declare-stratego-globals-top> modulename	
 					<+ 
 						<debug-compiler>$[compile-main | compile-legacy-artifact > failed to resolve]
+				else
+					<debug-compiler>$[compile-main | compile-legacy-artifact > Parsing following legacy artifacts : [<pp-aterm>resolving-path]];
+					
+					// Verify that the resource has a known extension.
+					<has-known-extensions>resolving-path 
+					
+					
+					
+					<+ <debug-compiler>$[compile-main | compile-legacy-artifact > Error occured in handling [<pp-aterm>resolving-path]. Hence, it is ignored.]  
+					
+					
+					//read + normalize and then sent to declare
 				end 	 
-			else
-				<debug(!"Not UnResolved + Hence legacy artifacts")>resolving-path
-				// checks whether it has known extension
-				
-				
-				
-				//read + normalize and then sent to declare
-				 
-				
 			end
-				
 		where
 			rules ( Resolved-ExternalArtifact : (modulename,resolving-path) ->resolving-path) 
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str	Thu May 12 15:37:05 2011	(r22863)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str	Thu May 12 15:54:26 2011	(r22864)
@@ -6,8 +6,8 @@
 	normalize/signatures
 
 imports 
-	codegen/sdf/parser
-	codegen/str/parser
+	codegen/sdf/parse
+	codegen/str/parse
 	
 rules
 	

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/parse.str (from r22858, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/parser.str)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/parser.str	Thu May 12 13:47:05 2011	(r22858, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/parse.str	Thu May 12 15:54:26 2011	(r22864)
@@ -1,4 +1,4 @@
-module codegen/sdf/parser 
+module codegen/sdf/parse
 
 imports
   libstratego-lib

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Thu May 12 15:37:05 2011	(r22863)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Thu May 12 15:54:26 2011	(r22864)
@@ -14,7 +14,7 @@
 	include/SpoofaxLang
 imports
 	codegen/compile
-	codegen/str/parser
+	codegen/str/parse
 	codegen/main
 	codegen/generate
 	context/signatures

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/parse.str (from r22858, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/parser.str)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/parser.str	Thu May 12 13:47:05 2011	(r22858, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/parse.str	Thu May 12 15:54:26 2011	(r22864)
@@ -1,4 +1,4 @@
-module codegen/sdf/parser 
+module codegen/sdf/parse 
 
 imports
   libstratego-lib

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str	Thu May 12 15:54:26 2011	(r22864)
@@ -0,0 +1,9 @@
+module parse
+
+
+imports
+	codegen/sdf/parse
+	codegen/str/parse
+	
+
+//C:/work/projects/spoofax/spx-imp/source-codes/trunk/org.strategoxt.imp.editors.spoofax/test2/Concepts.sdf
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Thu May 12 19:32:55 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 12 May 2011 17:32:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22865 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	codegen unit-tests
Message-ID: <20110512173255.D1530CC057@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Thu May 12 17:32:55 2011
New Revision: 22865
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22865&sc=1

Log:
:) all tests are green!

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str	Thu May 12 15:54:26 2011	(r22864)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str	Thu May 12 17:32:55 2011	(r22865)
@@ -13,7 +13,7 @@
 	
 	parse-legacy-artifact: 
 		resolved-path-> parsed-string
-		with 
+		where 
 			has-extension(|"sdf") + has-extension(|"def")
 		where 
 			parsed-string:= <parse-sdf-file>resolved-path
@@ -21,9 +21,16 @@
 	
 	parse-legacy-artifact: 
 		resolved-path -> parsed-string
-		with 
-			has-extension(|"rtree") + has-extension(|"str")
 		where 
-			parsed-string:= <parse-sdf-file>resolved-path
+			has-extension(|"str")
+		where 
+			parsed-string:= <parse-stratego>resolved-path
+	
 	
+	parse-legacy-artifact: 
+		resolved-path -> parsed-string
+		where 
+			has-extension(|"rtree") 
+		where 
+			parsed-string:= <ReadFromFile>resolved-path
 	    
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str	Thu May 12 15:54:26 2011	(r22864)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str	Thu May 12 17:32:55 2011	(r22865)
@@ -2,8 +2,69 @@
 
 
 imports
-	codegen/sdf/parse
-	codegen/str/parse
+	common
+	codegen/parse-adapter
 	
+rules 
+	
+	parse-sdf-test:
+		(selected, position, ast, path, project-path) -> None()
+		with 
+			file-path := "C:/work/projects/spoofax/spx-imp/source-codes/trunk/org.strategoxt.imp.editors.spoofax/syntax/Concepts.sdf"
+		where 
+			<debug>$[Running Test .... ];
+			actual :=  <parse-legacy-artifact>file-path
+		where
+			<debug> $[Verifying Expectaions .... ];
+			not(!actual => "");
+			<debug>$[SUCCESS.... ParsedContent : [<pp-aterm>actual]]
+		<+ 
+			<debug>$[FAILED...]
+			
+	parse-str-test:
+		(selected, position, ast, path, project-path) -> None()
+		with 
+			file-path := "C:/work/projects/spoofax/spx-imp/source-codes/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str"
+		where 
+			<debug>$[Running Test .... ];
+			actual :=  <parse-legacy-artifact>file-path
+		where
+			<debug> $[Verifying Expectaions .... ];
+			not(!actual => "");
+			<debug>$[SUCCESS.... ParsedContent : [<pp-aterm>actual]]
+		<+ 
+			<debug>$[FAILED...]		
+				
+	
+		parse-def-test:
+		(selected, position, ast, path, project-path) -> None()
+		with 
+			file-path := "C:/work/projects/spoofax/spx-imp/source-codes/trunk/org.strategoxt.imp.editors.spoofax/lib/SDF.def"
+		where 
+			<debug>$[Running Test .... ];
+			actual :=  <parse-legacy-artifact>file-path
+		where
+			<debug> $[Verifying Expectaions .... ];
+			not(!actual => "");
+			<debug>$[SUCCESS.... ParsedContent : [<pp-aterm>actual]]
+		<+ 
+			<debug>$[FAILED...]		
+			
+		parse-rtree-test:
+		(selected, position, ast, path, project-path) -> None()
+		with 
+			file-path := "C:/work/projects/spoofax/spx-imp/source-codes/trunk/org.strategoxt.imp.editors.spoofax/.shadowdir/entity-lang.rtree"
+		where 
+			<debug>$[Running Test .... ];
+			actual :=  <parse-legacy-artifact>file-path
+		where
+			<debug> $[Verifying Expectaions .... ];
+			not(!actual => "");
+			<debug>$[SUCCESS.... ParsedContent : [<pp-aterm>actual]]
+		<+ 
+			<debug>$[FAILED...]			
+							
 
+
+	
 //C:/work/projects/spoofax/spx-imp/source-codes/trunk/org.strategoxt.imp.editors.spoofax/test2/Concepts.sdf
\ No newline at end of file

From R.B.Vermaas at tudelft.nl  Fri May 13 09:21:29 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Fri, 13 May 2011 07:21:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22866 -
	strategoxt/branches/strategoxt-java
Message-ID: <20110513072129.3BB632B800C@mx2.tudelft.nl>

Author: rob
Date: Fri May 13 07:21:27 2011
New Revision: 22866
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22866&sc=1

Log:


Modified:
   strategoxt/branches/strategoxt-java/build.xml

Modified: strategoxt/branches/strategoxt-java/build.xml
==============================================================================
--- strategoxt/branches/strategoxt-java/build.xml	Thu May 12 17:32:55 2011	(r22865)
+++ strategoxt/branches/strategoxt-java/build.xml	Fri May 13 07:21:27 2011	(r22866)
@@ -20,11 +20,11 @@
         depends="ensure-dirs,syntax,generate-java,compile-java,jar"
     />
 
-    <target name="test">
+    <target name="test-test">
         <strj-test input="libraries/sglr/tests/stratego-sglr-tests.str" />
     </target>
 
-    <target name="tests">
+    <target name="test">
         <mkdir dir="generated" />
         <for param="deffile">
             <path>

From L.C.L.Kats at tudelft.nl  Fri May 13 11:13:13 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 13 May 2011 09:13:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22867 -
	strategoxt-java-backend/trunk/java/runtime/org/strategoxt/lang/compat/override
Message-ID: <20110513091313.448477F8053@mx1.tudelft.nl>

Author: LennartKats
Date: Fri May 13 09:13:13 2011
New Revision: 22867
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22867&sc=1

Log:
Spoofax/371: parse-string(|tbl) succeeds when parsing fails

Modified:
   strategoxt-java-backend/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser.str

Modified: strategoxt-java-backend/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser.str
==============================================================================
--- strategoxt-java-backend/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser.str	Fri May 13 07:21:27 2011	(r22866)
+++ strategoxt-java-backend/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser.str	Fri May 13 09:13:13 2011	(r22867)
@@ -30,7 +30,7 @@
     id // no such thing
     
   jsglr-parse-string(|tbl) =
-    jsglr-parse-string(id | tbl, None(), "string")
+    jsglr-parse-string(fail | tbl, None(), "string")
   
   jsglr-parse-string(on-parse-error | tbl, start-symbol, path) =
       where(<try(not(?ParseTable(_)); memo-open-parse-table)> tbl => ParseTable(internal-tbl))

From R.B.Vermaas at tudelft.nl  Fri May 13 12:57:17 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Fri, 13 May 2011 10:57:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22868 -
	strategoxt/branches/strategoxt-java
Message-ID: <20110513105717.A6286108C007@mx3.tudelft.nl>

Author: rob
Date: Fri May 13 10:57:17 2011
New Revision: 22868
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22868&sc=1

Log:


Modified:
   strategoxt/branches/strategoxt-java/strategoxt-build.xml

Modified: strategoxt/branches/strategoxt-java/strategoxt-build.xml
==============================================================================
--- strategoxt/branches/strategoxt-java/strategoxt-build.xml	Fri May 13 09:13:13 2011	(r22867)
+++ strategoxt/branches/strategoxt-java/strategoxt-build.xml	Fri May 13 10:57:17 2011	(r22868)
@@ -60,6 +60,7 @@
                     <pathelement location="./strategoxt.jar"/>
                     <pathelement path="${@{input}.dirname}/${@{input}.basename}"/>
                  </classpath>
+                 <jvmarg value="-Xss8m"/>
              </java>
         </sequential>
     </macrodef>

From R.B.Vermaas at tudelft.nl  Fri May 13 13:33:28 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Fri, 13 May 2011 11:33:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22869 -
	strategoxt/branches/strategoxt-java
Message-ID: <20110513113328.8E7DC108C007@mx3.tudelft.nl>

Author: rob
Date: Fri May 13 11:33:28 2011
New Revision: 22869
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22869&sc=1

Log:
stackoverflow was actually in strj

Modified:
   strategoxt/branches/strategoxt-java/strategoxt-build.xml

Modified: strategoxt/branches/strategoxt-java/strategoxt-build.xml
==============================================================================
--- strategoxt/branches/strategoxt-java/strategoxt-build.xml	Fri May 13 10:57:17 2011	(r22868)
+++ strategoxt/branches/strategoxt-java/strategoxt-build.xml	Fri May 13 11:33:28 2011	(r22869)
@@ -54,7 +54,9 @@
                            debug="true"
                            debuglevel="source"
                            compiler="classic"
-                    />
+                    >
+                 <compilerarg value="-Xss8m"/>
+             </javac>
              <java fork="true" classname="test.Main" failonerror="true" dir="${@{input}.dirname}">
                  <classpath>
                     <pathelement location="./strategoxt.jar"/>

From R.B.Vermaas at tudelft.nl  Fri May 13 14:03:22 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Fri, 13 May 2011 12:03:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22870 -
	strategoxt/branches/strategoxt-java
Message-ID: <20110513120322.3FB16CC118@mx4.tudelft.nl>

Author: rob
Date: Fri May 13 12:03:22 2011
New Revision: 22870
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22870&sc=1

Log:


Modified:
   strategoxt/branches/strategoxt-java/strategoxt-build.xml

Modified: strategoxt/branches/strategoxt-java/strategoxt-build.xml
==============================================================================
--- strategoxt/branches/strategoxt-java/strategoxt-build.xml	Fri May 13 11:33:28 2011	(r22869)
+++ strategoxt/branches/strategoxt-java/strategoxt-build.xml	Fri May 13 12:03:22 2011	(r22870)
@@ -55,14 +55,12 @@
                            debuglevel="source"
                            compiler="classic"
                     >
-                 <compilerarg value="-Xss8m"/>
              </javac>
              <java fork="true" classname="test.Main" failonerror="true" dir="${@{input}.dirname}">
                  <classpath>
                     <pathelement location="./strategoxt.jar"/>
                     <pathelement path="${@{input}.dirname}/${@{input}.basename}"/>
                  </classpath>
-                 <jvmarg value="-Xss8m"/>
              </java>
         </sequential>
     </macrodef>
@@ -368,6 +366,7 @@
                         <arg value="-D"/>
                         <arg value="SVN_REVISION_TERM=&quot;${revision}&quot;"/>
                         <strjargs />
+                        <jvmarg value="-Xss8m"/>
                     </java>
                 </action>
                 <deps>

From M.A.Akhter at student.tudelft.nl  Fri May 13 16:18:22 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Fri, 13 May 2011 14:18:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22871 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze:
	. esv
Message-ID: <20110513141822.EA8CDCC042@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Fri May 13 14:18:22 2011
New Revision: 22871
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22871&sc=1

Log:
* Fixed Bug 21-5... Language Name errors was showing multiple times. 
* 21-7 done! . Added Errors/Warning to ESV Definition to complain if a language Name is defined multiple time i.e. duplicate Language Names

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str	Fri May 13 12:03:22 2011	(r22870)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str	Fri May 13 14:18:22 2011	(r22871)
@@ -107,13 +107,15 @@
     end;
     error'*   := <conc;flatten-list> (serror*, error*);
     warning'* := <flatten-list> warning*
+
 	       
   analyze-section: 
-		ESVSection(ast) -> (error-esv*, [], [])
+		ESVSection(ast) -> (error-esv*, warning-esv* , [])
   	where
   		<debug-analysis>$[ErrorChecking | ESV Section : [<pp-aterm>]]
 		where
-  		error-esv*   := <collect-all(constraint-esv-error, conc)> ast
+  		error-esv*   := <collect-all(constraint-esv-error, conc)> ast;
+  		warning-esv* := <collect-all(constraint-esv-warning, conc)> ast
       	
   analyze-section: 
 		STRSection(ast) -> ( errors, warnings, [])

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str	Fri May 13 12:03:22 2011	(r22870)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str	Fri May 13 14:18:22 2011	(r22871)
@@ -26,24 +26,21 @@
 			not(<get-language-name>package-typed-qname)
 	
 	package-constraint-error :
-		package-typed-qname at Package(untyped-qname) -> (untyped-qname , $[Multple definitions of Language Name in the Package. Following definition is found : [<pp-aterm>configure-lang-names]])
+		package-typed-qname at Package(untyped-qname) -> (package-typed-qname , $[Multple definitions of Language Name in the Package. Following definition is found : [<pp-aterm>configure-lang-names]])
 		where 
 			<get-all-language-name>package-typed-qname => configure-lang-names;
 			is-not-empty-list;
+			make-set;
 			not(ensure-is-unique)
 			
-			
 rules 
 	analyze : p at Package(untyped-name) -> <id>
-	with 
+	with
 		current-scope := p
 	where 
-		errors*   := 	<collect-all(package-constraint-error, conc)>p  ;
+		errors*   := <collect-all(package-constraint-error, conc)> p  ;
 		warnings* := <collect-all(package-constraint-warning, conc)>p  ;
 		infos*    := []
 	where 	
-		rules
-		(
-			GetSemanticProblems :  current-scope  ->  ( errors* , warnings*, infos*)
-		)
+		rules(GetSemanticProblems :  current-scope  ->  ( errors* , warnings*, infos*))
 		 
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str	Fri May 13 12:03:22 2011	(r22870)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str	Fri May 13 14:18:22 2011	(r22871)
@@ -38,11 +38,22 @@
     where
       not(<string-ends-with(|".jar") + string-ends-with(|".ctree")> x)
    		
-   constraint-esv-error: 
+  constraint-esv-error: 
    	LanguageName( name ) -> (name, $[ Duplicate declaration of language name. Declared in following packages : [<pp-aterm>packages*]])
    	where
    			<get-languagename-declaration-sites> name =>packages*;
    			is-not-empty-list;
+   			make-set;
 				not(ensure-is-unique)
-   		
+rules
+	   		
+  constraint-esv-warning: 
+   	LanguageName( name ) -> (name, $[Same Language name is declared multiple times in this package.])
+   	where
+   			<get-languagename-declaration-sites> name =>packages*;
+   			is-not-empty-list;
+   			make-set;
+				ensure-is-unique
+		where		
+				not(!packages* => [_])
    	 		 
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str	Fri May 13 12:03:22 2011	(r22870)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str	Fri May 13 14:18:22 2011	(r22871)
@@ -62,8 +62,12 @@
 								)
 							><get-enclosed-modules>package-typed-qname
 					|};		
+				package-abs-path := <DeclaredPackage>untyped-qname;
 				where(
-					rules(AnalyzedPackage: package-typed-qname -> package-typed-qname)
+					rules(
+						AnalyzedPackage: package-typed-qname -> package-typed-qname
+						AnalyzedPackageDeclaredIn:+ package-abs-path -> package-typed-qname
+					)
 				)
 				<+
 				<debug-analysis> $[Analyze| analyze-spx-package > [<pp-aterm>package-typed-qname] Failed. ];
@@ -105,19 +109,48 @@
 	//lookups for the analyzed problems
 	get-all-analyzed-problems =  all-keys-GetSemanticProblems ; map(GetSemanticProblems); unzip-semantic-issuses 
 	
+	
+	get-semantic-problmes-by-file : file-abs-path ->problems
+		where
+			problems-at-modules*  := <get-semantic-problems(get-semantic-problmes-at-module-level)><bagof-AnalyzedModulesDeclaredIn>file-abs-path;
+			problems-at-packages* := <get-semantic-problems(get-semantic-problmes-at-package-level)><bagof-AnalyzedPackageDeclaredIn>file-abs-path;
+			problems := <merge-semantic-problems> ( problems-at-modules*   , problems-at-packages*) 
+			
+	
+	get-semantic-problems(s): scopes* -> problems
+	where
+			<map(s)>scopes* => problmes-zipped* ;  
+			<unzip-semantic-issuses>problmes-zipped* => problems
+	
+	get-semantic-problmes-at-package-level : p at Package(QName(_)) -> problems-package-level
+		where
+			<GetSemanticProblems>p => problems-package-level 
+	
+	get-semantic-problmes-at-module-level : module-typed-qname -> problems-module-level
+	where
+			<debug-compiler>$[ErrorChecking | Caching semantic issues for module [<pp-aterm>]]
+	where
+		<GetEnclosingScope> module-typed-qname => package-typed-qname;
+		<get-analyzed-problems-of> (package-typed-qname,module-typed-qname)=>problems-module-level
+		
+	<+
+		problems-module-level := ([] , [] , [])
+	where
+		<debug-compiler>$[ErrorChecking | Found Problems for this module : [<pp-aterm>problems-module-level]]	
+ 
+ 
 	get-analyzed-problems-of: scope@(package-typed-qname, module-typed-qname) -> problems
 		where 
 			contracts (
 					contract-requires(?Package(QName(_)) |package-typed-qname);
 					contract-requires(?Module(QName(_))  |module-typed-qname)
 			)	
+			;<GetSemanticProblems>scope 							=> problems
 		where
-			<GetSemanticProblems>scope 							=> problems-module-level;
-			<GetSemanticProblems>package-typed-qname => problems-package-level;
-			problems := <merge-semantic-problems> ( problems-package-level , problems-module-level) 
-		where
-			<debug-compiler> $[ErrorChecking |  Problmes found [<pp-aterm-forced>scope] :  [<pp-aterm-forced>problems]]	
-		
+			<debug-compiler> $[ErrorChecking |  Problmes found [<pp-aterm-forced>scope] :  [<pp-aterm-forced>problems]]
+				
+rules 
+			
 	merge-semantic-problems : (unziped-issues1 , unzipped-issues2)-> semantic-problems*
 	with 
 		!unziped-issues1  =>(merrors,mwarnings,minfos);
@@ -126,15 +159,14 @@
 	where		
 		<unzip-semantic-issuses>combined-problmes* => semantic-problems* 
 
-
-rules
 	/* Converts a list as following 
-	[([a1] , [b1] , [c1])
-	([a2] , [b2] , [c2])
-	([a3] , [b3] , [c3])
-	] 
-	To:
-	([a1,a2,a3] , [b1,b2,b3] , [c1,c2,c3])
+					[([a1] , [b1] , [c1])
+					([a2] , [b2] , [c2])
+					([a3] , [b3] , [c3])
+					] 
+		to:
+				([a1,a2,a3] , [b1,b2,b3] , [c1,c2,c3])
+				
 	*/
 	unzip-semantic-issuses:
 		list-of-semantic-issues -> unziped-list
@@ -175,21 +207,3 @@
 	where
 		<debug-compiler>$[Caching | Saving problems: [<pp-aterm>problmes-to-save*]];
 		<cache-semantic-issues>( filepath , problmes-to-save*)
-	
-	get-semantic-problmes-by-file : file-abs-path -> problems*
-		where 
-			<bagof-AnalyzedModulesDeclaredIn>file-abs-path=> list-of-modules*;
-			<map(get-semantic-problmes-by-module)>list-of-modules*  => problmes-zipped* ;  
-			<unzip-semantic-issuses>problmes-zipped* => problems*
-		
-	get-semantic-problmes-by-module : module-typed-qname -> problems
-	where
-			<debug-compiler>$[Caching | Caching semantic issues for module [<pp-aterm>]]
-	where
-		<GetEnclosingScope> module-typed-qname => package-typed-qname;
-		<get-analyzed-problems-of> (package-typed-qname,module-typed-qname)=>problems
-	<+
-		problems := ([] , [] , [])
-	where
-		<debug-compiler>$[Caching | Found Problems for this module : [<pp-aterm>problems]]	
- 		     
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Fri May 13 16:47:29 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Fri, 13 May 2011 14:47:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22872 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze
Message-ID: <20110513144729.B3DDFCC186@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Fri May 13 14:47:29 2011
New Revision: 22872
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22872&sc=1

Log:
fixed bug 21-6. Compiler-All is also showing the errors related to the  languages . I.e. Errors at the Package Level

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str	Fri May 13 14:18:22 2011	(r22871)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str	Fri May 13 14:47:29 2011	(r22872)
@@ -65,7 +65,7 @@
 				)	
 		where
 			<debug-compiler>$[ErrorChecking | Found semantic problems for [<pp-aterm-forced> (package-typed-qname,module-typed-qname)]  
-			Problems :[<pp-aterm-forced> unziped-issues*]]
+			                                  Problems :[<pp-aterm-forced> unziped-issues*]]
 							
 rules 
 			 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str	Fri May 13 14:18:22 2011	(r22871)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-package.str	Fri May 13 14:47:29 2011	(r22872)
@@ -43,4 +43,7 @@
 		infos*    := []
 	where 	
 		rules(GetSemanticProblems :  current-scope  ->  ( errors* , warnings*, infos*))
+	where
+			<debug-compiler>$[ErrorChecking | Found semantic problems for ([<pp-aterm-forced> current-scope])  
+			                                  Problems :[<pp-aterm-forced> ( errors* , warnings*, infos*)]]
 		 
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Fri May 13 16:48:31 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Fri, 13 May 2011 14:48:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22873 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor
Message-ID: <20110513144831.C65B8108C015@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Fri May 13 14:48:31 2011
New Revision: 22873
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22873&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv	Fri May 13 14:47:29 2011	(r22872)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv	Fri May 13 14:48:31 2011	(r22873)
@@ -39,7 +39,7 @@
   //builder : "test desugar" =
   // generate-desugar (openeditor) (realtime) (meta)
   
-  builder : "Compile" =  
+  builder : "Compile-All" =  
     compile-spx(openeditor) (realtime) (meta)
   
   

From M.A.Akhter at student.tudelft.nl  Fri May 13 18:00:23 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Fri, 13 May 2011 16:00:23 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22874 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	codegen context unit-tests unit-tests/resources
Message-ID: <20110513160023.3AE0FCC1A2@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Fri May 13 16:00:22 2011
New Revision: 22874
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22874&sc=1

Log:
* more refactoring  - parse-adapter now can parse SPX files. 
* compile become much more cohesive and clean. 
* removed resource dependencies for unit tests by adding a local resource folder just to use it from unit tests. Tests are passing .

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resources/
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resources/SDF.def
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resources/test.rtree
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resources/test.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resources/test.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Fri May 13 14:48:31 2011	(r22873)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Fri May 13 16:00:22 2011	(r22874)
@@ -7,29 +7,23 @@
 	utils/path
 	analyze/-
 	context/-
+	context/str/-
+	codegen/-
 imports
 	common 
 	config 
 imports 
-	lib/editor-common.generated
-	lib/Configuration/SpoofaxConfiguration  
 	include/SpoofaxLang
 imports	
-	codegen/generate
-	codegen/buildscripts
 	analyze/main
-	
-imports
-	context/declare 	
-	context/str/declare  
-	
+	lib/editor-common.generated
 	
 		
 //TODO : refactor : move it to declare all when handling all types of legacy artifacts. Currently only considering STR Libs
 	 
 
-rules			// Starting a new compilation session   
-	
+rules			
+	// Starting a new compilation session   
 	new-compile-session(s) =
 			{| 	CompiledPackage,currently-compiling-package,CompiledModule, 
 			 		UsedBy,Using,
@@ -53,8 +47,8 @@
 			|} 
 
 
-rules 	// Compiler initialization 
-			
+rules 	
+	// Compiler initialization 
 	compiler-init = 
 		// Getting Source directory to start parsing files if needed. 
 		// Otherwise, it reads from the cache
@@ -62,54 +56,14 @@
 			bagof-SPX-Source-Dir => spx-sources
 		);
 		//Iterating all the configured source directory 
-		<list-loop(parse-spx-sources)> spx-sources;
+		<list-loop(parse-spx-sources)> spx-sources; 
 		//Initializes global symbols / default primitives 
 		init-declaration    	
 
-rules
-	parse-spx-sources : 
-		(sourcedir , searchOption) -> <id>
-		where
-			{| current-working-root-dir :  
-				rules(
-					current-working-root-dir  := <getcwd>
-				);
-				<chdir>sourcedir;
-				<parse-spx-compilationUnits(|searchOption)> <getcwd>;
-				<chdir> <current-working-root-dir>
-			|}
-		
-	parse-spx-compilationUnits(|search-option) = 
-		readdir;
-		list-loop(
-    	if <isdir> <filemode> then  //FIXME : filemode / isdir contains bug. Common folder is not considered as directory which is a bug
-    		if not(Ignored-Spx-Souce-Dir); !search-option => AllDirectories()  then
-       		 chdir;
-        	 <parse-spx-compilationUnits(|search-option)<+ throw-unable-read-exception(|"Failed to read this directory : ")><getcwd>;
-           <chdir> ".."
-        end
-      else
-        where(parse-spx-compilationUnit) <+ throw-unable-read-file 
-      end
-    )
-    
- 	parse-spx-compilationUnit: filename -> <id>
- 		where
- 			if has-extension(|"spx") then 
-	 			where (<debug-compiler>$[Pre-Compiling| Parsing following file : [<pp-aterm>]]);
-	 			open-spx-compilation-unit(
-					spx-compilation-unit-path, 
-					spx-precompiled-cache-path, 
-					parse-spoofaxlang-file ,
-					pre-complile-compilation-unit
-				)
-			end 
 
 
 strategies				    
-	
 	// Pre-compilation before starting up actual compilation
-	
 	// Before starting primary compilation, 
 	// pre-compile normalize the parsed tree
 	// and creates scope-tree and namespace-reference table for 
@@ -351,23 +305,3 @@
 			end
 		where
 			rules ( Resolved-ExternalArtifact : (modulename,resolving-path) ->resolving-path) 
-	
-rules 			
-	
-	// Reference Resolving 
-	resolve-package-references = 
-		?list-of-package-tqnames;
-		<list-loop(
-			// Get the list of enclosed modules
-			// and then get module declarations
-			// Afterwards, from the declarations, import references are resolved.
-			where(<debug-compiler>$[ resolve-package-references |  Currently working on package : [<pp-aterm>]]);
-			get-enclosed-modules; 
-			get-module-declarations;
-			origin-track-forced(map(store-import-references))
-		<+
-			where(<debug-compiler>$[resolve-package-references | Failed to resolve package refernece:[<pp-aterm>]]);fail
-		)>list-of-package-tqnames
-		<+ 
-		<debug-compiler>$[resolve-package-references | Failed to resolve package referneces:[<pp-aterm>]];fail
-		

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str	Fri May 13 14:48:31 2011	(r22873)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str	Fri May 13 16:00:22 2011	(r22874)
@@ -4,10 +4,57 @@
 	include/SpoofaxLang
 	context/signatures
 	normalize/signatures
-
+	lib/Configuration/SpoofaxConfiguration  
+	lib/editor-common.generated
 imports 
 	codegen/sdf/parse
 	codegen/str/parse
+	codegen/-
+imports
+	utils/path
+	utils/debug
+	utils/cache	
+	config
+	common
+rules
+	parse-spx-sources : 
+		(sourcedir , searchOption) -> <id>
+		where
+			{| current-working-root-dir :  
+				rules(
+					current-working-root-dir  := <getcwd>
+				);
+				<chdir>sourcedir;
+				<parse-spx-compilationUnits(|searchOption)> <getcwd>;
+				<chdir> <current-working-root-dir>
+			|}
+		
+	parse-spx-compilationUnits(|search-option) = 
+		readdir;
+		list-loop(
+    	if <isdir> <filemode> then  //FIXME : filemode / isdir contains bug. Common folder is not considered as directory which is a bug
+    		if not(Ignored-Spx-Souce-Dir); !search-option => AllDirectories()  then
+       		 chdir;
+        	 <parse-spx-compilationUnits(|search-option)<+ throw-unable-read-exception(|"Failed to read this directory : ")><getcwd>;
+           <chdir> ".."
+        end
+      else
+        where(parse-spx-compilationUnit) <+ throw-unable-read-file 
+      end
+    )
+    
+ 	parse-spx-compilationUnit: filename -> <id>
+ 		where
+ 			if has-extension(|"spx") then 
+	 			where (<debug-compiler>$[Pre-Compiling| Parsing following file : [<pp-aterm>]]); 
+	 			open-spx-compilation-unit(
+					spx-compilation-unit-path, 
+					spx-precompiled-cache-path, 
+					parse-spoofaxlang-file ,
+					pre-complile-compilation-unit
+				)
+			end 
+
 	
 rules
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str	Fri May 13 14:48:31 2011	(r22873)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str	Fri May 13 16:00:22 2011	(r22874)
@@ -3,12 +3,8 @@
 	include/SpoofaxLang 
 	lib/editor-common.generated
 imports 
-	context/signatures
-	context/scope-tree
-  context/resolve-symbols
-  context/resolve-annotations
-  context/resolve-types
- 	normalize/signatures
+	context/-
+	normalize/signatures
 	codegen/compile
 imports 	
 	common
@@ -16,6 +12,27 @@
 	utils/path
 	utils/debug  
 
+rules 			
+	
+	// Reference Resolving 
+	resolve-package-references = 
+		?list-of-package-tqnames;
+		<list-loop(
+			// Get the list of enclosed modules
+			// and then get module declarations
+			// Afterwards, from the declarations, import references are resolved.
+			where(<debug-compiler>$[ resolve-package-references |  Currently working on package : [<pp-aterm>]]);
+			get-enclosed-modules; 
+			get-module-declarations;
+			origin-track-forced(map(store-import-references))
+		<+
+			where(<debug-compiler>$[resolve-package-references | Failed to resolve package refernece:[<pp-aterm>]]);fail
+		)>list-of-package-tqnames
+		<+ 
+		<debug-compiler>$[resolve-package-references | Failed to resolve package referneces:[<pp-aterm>]];fail
+		
+
+
 rules
 	store-import-references: m at Module(attrb*,modname,section*) -> Module(attrb*,modname,resulting-section*)
 		with 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str	Fri May 13 14:48:31 2011	(r22873)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str	Fri May 13 16:00:22 2011	(r22874)
@@ -4,13 +4,23 @@
 imports
 	common
 	codegen/parse-adapter
+	lib/editor-common.generated
 	
 rules 
 	
+	parse-tests : 
+		a@(selected, position, ast, path, project-path) -> None()
+	where
+		<try(parse-sdf-test)>a;
+		<try(parse-str-test)>a;
+		<try(parse-def-test)>a;
+		<try(parse-rtree-test)>a
+			
+		
 	parse-sdf-test:
 		(selected, position, ast, path, project-path) -> None()
 		with 
-			file-path := "C:/work/projects/spoofax/spx-imp/source-codes/trunk/org.strategoxt.imp.editors.spoofax/syntax/Concepts.sdf"
+			file-path := <concat-strings> [project-path , "/trans/" , "unit-tests/resources/test.sdf"] 
 		where 
 			<debug>$[Running Test .... ];
 			actual :=  <parse-legacy-artifact>file-path
@@ -24,7 +34,7 @@
 	parse-str-test:
 		(selected, position, ast, path, project-path) -> None()
 		with 
-			file-path := "C:/work/projects/spoofax/spx-imp/source-codes/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str"
+			file-path := <concat-strings> [project-path , "/trans/" , "unit-tests/resources/test.str"]
 		where 
 			<debug>$[Running Test .... ];
 			actual :=  <parse-legacy-artifact>file-path
@@ -39,7 +49,7 @@
 		parse-def-test:
 		(selected, position, ast, path, project-path) -> None()
 		with 
-			file-path := "C:/work/projects/spoofax/spx-imp/source-codes/trunk/org.strategoxt.imp.editors.spoofax/lib/SDF.def"
+			file-path := <concat-strings> [project-path , "/trans/" , "unit-tests/resources/SDF.def"]
 		where 
 			<debug>$[Running Test .... ];
 			actual :=  <parse-legacy-artifact>file-path
@@ -53,7 +63,7 @@
 		parse-rtree-test:
 		(selected, position, ast, path, project-path) -> None()
 		with 
-			file-path := "C:/work/projects/spoofax/spx-imp/source-codes/trunk/org.strategoxt.imp.editors.spoofax/.shadowdir/entity-lang.rtree"
+			file-path := <concat-strings> [project-path , "/trans/" , "unit-tests/resources/test.rtree"]
 		where 
 			<debug>$[Running Test .... ];
 			actual :=  <parse-legacy-artifact>file-path
@@ -63,7 +73,6 @@
 			<debug>$[SUCCESS.... ParsedContent : [<pp-aterm>actual]]
 		<+ 
 			<debug>$[FAILED...]			
-							
 
 
 	

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resources/SDF.def
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resources/SDF.def	Fri May 13 16:00:22 2011	(r22874)
@@ -0,0 +1,610 @@
+definition
+module languages/sdf2/syntax/Aliases
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  sorts Alias Aliases
+  context-free syntax 
+    "aliases" Aliases              -> Grammar  {cons("aliases")}
+    Symbol arrow:"->" alias:Symbol -> Alias    {cons("alias")}
+    list:Alias*                    -> Aliases
+
+
+
+module languages/sdf2/syntax/Restrictions
+
+imports languages/sdf2/syntax/CC
+
+exports
+  sorts Lookahead Lookaheads Restriction Restrictions
+
+  context-free syntax
+    CharClass                          -> Lookahead  {cons("char-class")}
+    head:CharClass "." tail:Lookaheads -> Lookahead  {cons("seq")}
+
+    Lookahead                                -> Lookaheads  {cons("single")}
+    "left":Lookaheads "|" "right":Lookaheads -> Lookaheads  {cons("alt"),right}
+    "(" Lookaheads ")"                       -> Lookaheads  {bracket}
+    "[[" list:{Lookahead ","}* "]]"          -> Lookaheads  {cons("list")}
+
+    Symbols "-/-" Lookaheads -> Restriction  {cons("follow")}
+
+    list:Restriction* -> Restrictions
+
+    "restrictions" Restrictions -> Grammar  {cons("restrictions")}
+
+    "reject" -> Attribute  {cons("reject")}
+    "prefer" -> Attribute  {cons("prefer")}
+    "avoid"  -> Attribute  {cons("avoid")}
+
+  context-free priorities    
+    CharClass "." Lookaheads    -> Lookahead >
+    Lookaheads "|" Lookaheads   -> Lookaheads
+
+
+module languages/sdf2/syntax/Labels
+
+imports languages/sdf2/syntax/Kernel 
+        basic/StrCon
+
+exports 
+  sorts Label
+
+  context-free syntax
+    StrCon -> Label {cons("quoted")}
+    IdCon  -> Label {cons("unquoted")}
+
+    Label ":" Symbol -> Symbol  {cons("label")}
+
+module languages/sdf2/syntax/Literals
+
+imports languages/sdf2/syntax/Kernel 
+imports basic/StrCon
+imports basic/IdentifierCon
+
+exports
+  sorts FunctionName SingleQuotedStrCon SingleQuotedStrChar
+  lexical syntax
+
+    "\\n"                      -> SingleQuotedStrChar {cons("newline")}
+    "\\t"                      -> SingleQuotedStrChar {cons("tab")}
+    "\\'"                      -> SingleQuotedStrChar {cons("quote")}
+    "\\\\"                     -> SingleQuotedStrChar {cons("backslash")}
+    "\\" a:[0-9]b:[0-9]c:[0-9] -> SingleQuotedStrChar {cons("decimal")}
+    ~[\0-\31\n\t\'\\]          -> SingleQuotedStrChar {cons("normal")}
+
+    [\'] chars:SingleQuotedStrChar* [\']   -> SingleQuotedStrCon  {cons("default")}
+
+  context-free syntax
+    IdCon  -> FunctionName {cons("unquoted-fun")}
+    StrCon -> FunctionName {cons("quoted-fun")}
+
+  context-free syntax
+    string:StrCon                -> Symbol {cons("lit")}
+    ci-string:SingleQuotedStrCon -> Symbol {cons("ci-lit")}
+
+    fun:FunctionName "(" arguments:{Symbol ","}* ")" "->" result:Symbol Attributes 
+	-> Production  {avoid, cons("prefix-fun")}
+
+module languages/sdf2/syntax/Start-Symbols
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  context-free syntax
+  
+    "start-symbols" Symbols                -> Grammar {cons("kernel-start-symbols")} 
+    "lexical" "start-symbols" Symbols      -> Grammar {cons("lexical-start-symbols")}
+    "context-free" "start-symbols" Symbols -> Grammar {cons("context-free-start-symbols")}
+
+module languages/sdf2/syntax/Sorts
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  sorts Sort
+  lexical syntax
+    head:[A-Z]                          -> Sort {cons("one-char")}
+    head:[A-Z] middle:[A-Za-z0-9\-]* last:[A-Za-z0-9] -> Sort 
+	{cons("more-chars")}
+
+  context-free syntax
+    Sort                                    -> Symbol  {cons("sort")}
+    Sort "[[" parameters:{Symbol ","}+ "]]" -> Symbol  {cons("parameterized-sort")}
+
+    "sorts" Symbols -> Grammar {cons("sorts")}
+
+  lexical restrictions
+    Sort -/- [A-Za-z0-9]
+
+module languages/sdf2/syntax/Character
+
+
+
+exports
+  sorts Character NumChar ShortChar
+  lexical syntax
+    [\\] number:[0-9]+                     -> NumChar   {cons("digits")}
+    character:[a-zA-Z0-9]                  -> ShortChar {cons("regular")}
+    [\\] escape:~[\0-\31A-Za-mo-qsu-z0-9]  -> ShortChar {cons("escaped")}
+
+  context-free syntax
+    NumChar   -> Character {cons("numeric")}
+    ShortChar -> Character {cons("short")}
+    "\\TOP"   -> Character {cons("top")}
+    "\\EOF"   -> Character {cons("eof")}
+    "\\BOT"   -> Character {cons("bot")}
+    "\\LABEL_START" -> Character {cons("label_start")}
+
+module languages/sdf2/syntax/Character-Class
+
+imports languages/sdf2/syntax/Character
+
+exports
+  sorts CharClass CharRange CharRanges OptCharRanges 
+  context-free syntax 
+    Character                           -> CharRange
+    start:Character "-" end:Character   -> CharRange            {cons("range")}
+
+    CharRange                                   -> CharRanges
+    "left":CharRanges "right":CharRanges        -> CharRanges   {cons("conc"),right,memo}
+    "(" CharRanges ")"                          -> CharRanges   {bracket}
+
+                              -> OptCharRanges  {cons("absent")}
+    CharRanges                -> OptCharRanges  {cons("present")}
+
+    "[" OptCharRanges "]"                    -> CharClass  {cons("simple-charclass")}
+    "~" CharClass                            -> CharClass  {cons("comp")}
+    "left":CharClass "/" "right":CharClass   -> CharClass  {cons("diff"),left,memo}
+    "left":CharClass "/\\" "right":CharClass -> CharClass  {cons("isect"),left,memo}
+    "left":CharClass "\\/" "right":CharClass -> CharClass  {cons("union"),left}
+    "(" CharClass ")"                        -> CharClass  {bracket, avoid}
+
+  context-free priorities
+    "~" CharClass             -> CharClass >
+    CharClass "/" CharClass   -> CharClass >
+    CharClass "/\\" CharClass -> CharClass >
+    CharClass "\\/" CharClass -> CharClass           
+
+
+module languages/sdf2/syntax/CC
+
+imports languages/sdf2/syntax/Character-Class 
+        languages/sdf2/syntax/Kernel
+
+exports
+  context-free syntax
+    CharClass -> Symbol {cons("char-class")}
+
+module languages/sdf2/syntax/Priority
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  sorts Associativity ArgumentIndicator Group Priority Priorities
+
+  context-free syntax
+    "left"      -> Associativity  {cons("left")}
+    "right"     -> Associativity  {cons("right")}
+    "non-assoc" -> Associativity  {cons("non-assoc")}
+    "assoc"     -> Associativity  {cons("assoc")}
+
+    "bracket"     -> Attribute  {cons("bracket")}
+    Associativity -> Attribute  {cons("assoc")}
+
+    "<" arguments:{NatCon ","}+ ">" -> ArgumentIndicator {cons("default")}
+
+    Group ArgumentIndicator               -> Group {non-assoc,cons("with-arguments")}
+    Group "."                             -> Group {non-assoc,cons("non-transitive")}
+
+    Production                            -> Group  {cons("simple-group")}
+    "{" Productions "}"                   -> Group  {cons("prods-group")}
+    "{" Associativity ":" Productions "}" -> Group  {cons("assoc-group")}
+
+    list:{Group ">"}+                                    -> Priority  {cons("chain")}
+    "left":Group Associativity "right":Group             -> Priority  {cons("assoc")}
+%%    Production "<" arguments:{NatCon ","}+ ">" ">" Group -> Priority  {cons("argument")}
+
+    list:{Priority  ","}* -> Priorities
+
+    "priorities" Priorities  -> Grammar  {cons("priorities")}
+
+module languages/sdf2/syntax/Lifting
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  context-free syntax
+    left-quote:"`" Symbol right-quote:"`" -> Symbol  {cons("lifting")}
+
+module languages/sdf2/syntax/Regular
+
+imports languages/sdf2/syntax/Kernel 
+imports languages/aterm/syntax/IntCon
+
+exports
+  context-free syntax
+    "(" ")"                                       -> Symbol {cons("empty")}
+    "(" head:Symbol tail:Symbol+ ")"              -> Symbol {cons("seq")}
+    Symbol "?"                                    -> Symbol {cons("opt")}
+    Symbol "+"                                    -> Symbol {cons("iter")}
+    Symbol "*"                                    -> Symbol {cons("iter-star")}
+    "{" Symbol sep:Symbol "}" "+"                 -> Symbol {cons("iter-sep")}
+    "{" Symbol sep:Symbol "}" "*"                 -> Symbol {cons("iter-star-sep")}
+    "<" head:Symbol "," rest:{Symbol ","}+ ">"    -> Symbol {cons("tuple")}
+    "(" arguments:Symbols "=>" results:Symbol ")" -> Symbol {cons("func")}
+    "left":Symbol "|" "right":Symbol              -> Symbol {right,cons("alt")}
+    "(" "left":Symbol "->" "right":Symbol ")"     -> Symbol {cons("strategy")}
+
+  context-free priorities
+    {Symbol "?"               -> Symbol
+    Symbol "*"                -> Symbol
+    Symbol "+"                -> Symbol} >
+    Symbol "|" Symbol         -> Symbol       
+
+
+module languages/sdf2/syntax/Renaming
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  sorts Renaming Renamings
+  context-free syntax 
+    "[" list:Renaming* "]" -> Renamings  {cons("renamings")}
+
+    from:Symbol "=>" to:Symbol                   -> Renaming  {cons("symbol")}
+    from-prod:Production "=>" to-prod:Production -> Renaming  {cons("production")}
+
+module languages/sdf2/syntax/Modules
+
+imports languages/sdf2/syntax/Kernel 
+        languages/sdf2/syntax/Renaming
+
+hiddens
+  sorts ModuleWord
+exports
+  context-free start-symbols Module
+
+  sorts ModuleId ModuleName Import Imports
+        Section Sections Module Definition ImpSection
+
+  lexical syntax    
+    letters:[A-Za-z0-9\_\-]+ -> ModuleWord  {cons("word")}
+
+    ModuleWord              -> ModuleId  {cons("leaf")}
+    sep:"/" basename:ModuleId            -> ModuleId  {cons("root")}
+    dirname:ModuleWord sep:"/" basename:ModuleId -> ModuleId  {cons("path")}
+         
+  context-free syntax
+    list:Module* -> Definition
+
+    "module" ModuleName list:ImpSection* Sections -> Module  {cons("module")}
+
+    "exports" Grammar            -> Section  {cons("exports")}
+    "hiddens" Grammar            -> Section  {cons("hiddens")}
+
+    list:Section*                -> Sections
+
+    ModuleId                        -> ModuleName  {cons("unparameterized")}
+    ModuleId "[" params:Symbols "]" -> ModuleName  {cons("parameterized")}
+
+    "id" "(" ModuleName ")" -> Attribute  {cons("id")}
+
+    "imports" list:Imports -> ImpSection  {cons("imports")}
+
+    ImpSection -> Grammar  {cons("imp-section")}
+
+    list:Import* -> Imports
+
+    ModuleName            -> Import  {cons("module")}
+    ModuleName Renamings  -> Import  {cons("renamed-module")}
+    "(" Import ")"        -> Import  {bracket}
+
+  lexical restrictions
+    ModuleWord -/- [A-Za-z0-9\_\-]
+    ModuleId -/- [\/]
+
+module languages/sdf2/syntax/Basic
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  context-free syntax
+    "lexical" "syntax"      Productions -> Grammar  {cons("lexical-syntax")}
+    "context-free" "syntax" Productions -> Grammar  {cons("context-free-syntax")}
+    "variables"             Productions -> Grammar  {cons("variables")}
+    "lexical" "variables"   Productions -> Grammar  {cons("lexical-variables")}
+
+    "<" Symbol "-CF"  ">"               -> Symbol  {cons("cf")}
+    "<" Symbol "-LEX" ">"               -> Symbol  {cons("lex")}
+    "<" Symbol "-VAR" ">"               -> Symbol  {cons("varsym")}
+
+    "LAYOUT"                            -> Symbol  {cons("layout")}
+
+module languages/sdf2/syntax/Grammars
+
+imports basic/Comments
+
+exports
+  sorts Grammar
+  context-free syntax    
+    "(/)"                          -> Grammar  {cons("empty-grammar")}
+    "left":Grammar "right":Grammar -> Grammar  {assoc,cons("conc-grammars")}
+    "(" Grammar ")"                -> Grammar  {bracket}
+
+module basic/Comments
+
+imports
+  basic/Whitespace
+
+exports
+  lexical syntax
+    "%%" line:~[\n]* "\n"	-> LAYOUT {cons("line"),category("Comment")}
+    "%" content:~[\%\n]+ "%"	-> LAYOUT {cons("nested"),category("Comment")}
+  context-free restrictions
+    LAYOUT? -/- [\%]
+
+module languages/sdf2/syntax/Symbols
+
+imports basic/Comments
+
+exports
+  sorts Symbol Symbols
+
+  context-free syntax
+    "(" Symbol ")" -> Symbol {bracket}
+
+    list:Symbol* -> Symbols
+
+
+
+module basic/IdentifierCon
+
+exports
+
+sorts IdCon
+
+lexical syntax
+
+head:[A-Za-z] tail:[A-Za-z\-0-9]* -> IdCon {cons("default")}
+
+lexical restrictions
+
+IdCon -/- [A-Za-z\-0-9]
+
+module basic/StrCon
+
+exports
+
+sorts StrCon StrChar
+
+lexical syntax
+    "\\n"                      -> StrChar {cons("newline")}
+    "\\t"                      -> StrChar {cons("tab")}
+    "\\\""                     -> StrChar {cons("quote")}
+    "\\\\"                     -> StrChar {cons("backslash")}
+    "\\" a:[0-9]b:[0-9]c:[0-9] -> StrChar {cons("decimal")}
+    ~[\0-\31\n\t\"\\]          -> StrChar {cons("normal")}
+
+    [\"] chars:StrChar* [\"]   -> StrCon  {cons("default")}
+
+module languages/aterm/syntax/RealCon
+
+imports languages/aterm/syntax/IntCon
+
+hiddens
+  context-free start-symbols 
+    RealCon
+
+exports
+  sorts OptExp RealCon
+
+  context-free syntax
+    "e" IntCon -> OptExp {cons("present")}
+               -> OptExp {cons("absent")}
+
+    base:IntCon "." decimal:NatCon exp:OptExp  -> RealCon {cons("real-con")}
+
+module basic/NatCon
+
+exports
+
+sorts NatCon
+
+lexical syntax
+  
+ [0-9]+ -> NatCon {cons("digits")}
+
+lexical restrictions
+
+ NatCon -/- [0-9]
+
+module basic/Whitespace
+
+exports
+  lexical syntax
+    [\ \t\n\r]	-> LAYOUT {cons("whitespace")}
+
+  context-free restrictions
+    LAYOUT? -/- [\ \t\n\r]
+
+module languages/aterm/syntax/IntCon
+
+imports basic/Whitespace
+	basic/NatCon
+
+hiddens
+  context-free start-symbols 
+    IntCon
+
+exports
+  sorts IntCon
+  context-free syntax
+    NatCon         -> IntCon {cons("natural")}
+    pos:"+" NatCon -> IntCon {cons("positive")}
+    neg:"-" NatCon -> IntCon {cons("negative")}
+
+module languages/aterm/syntax/ATerms
+
+imports languages/aterm/syntax/IntCon 
+        languages/aterm/syntax/RealCon
+	basic/StrCon
+	basic/IdentifierCon
+
+exports
+  sorts AFun ATerm Annotation
+
+  context-free syntax
+	StrCon 	-> AFun {cons("quoted")}
+	IdCon 	-> AFun {cons("unquoted")}
+
+  context-free syntax
+	IntCon 					-> ATerm {cons("int")}
+	RealCon					-> ATerm {cons("real")}
+	fun:AFun 				-> ATerm {cons("fun")}
+	fun:AFun "(" args:{ATerm ","}+ ")" 	-> ATerm {cons("appl")}
+	"<" type:ATerm ">" 			-> ATerm {cons("placeholder")}
+	"[" elems:{ATerm ","}* "]" 		-> ATerm {cons("list")}
+	trm:ATerm Annotation 			-> ATerm {cons("annotated")}
+
+  context-free syntax
+	"{" annos:{ ATerm ","}+ "}" 		-> Annotation {cons("default")}
+
+hiddens
+  context-free start-symbols 
+    ATerm
+
+module languages/sdf2/syntax/Kernel
+
+imports languages/aterm/syntax/ATerms 
+        languages/sdf2/syntax/Symbols 
+        languages/sdf2/syntax/Grammars
+
+exports
+  sorts Attribute ATermAttribute Attributes Production Productions
+  context-free syntax
+    aterm:ATerm    -> ATermAttribute  {cons("default")}
+    ATermAttribute -> Attribute       {cons("term")}
+
+    "{" list:{Attribute ","}* "}" -> Attributes  {cons("attrs")}
+                                  -> Attributes  {cons("no-attrs")}
+
+    Symbols "->" result:Symbol Attributes -> Production  {cons("prod")}
+
+    list:Production* -> Productions
+
+    "syntax" Productions -> Grammar {cons("syntax")}
+
+module languages/sdf2/syntax/Sdf2-Syntax
+
+imports languages/sdf2/syntax/Kernel
+        languages/sdf2/syntax/Basic
+        languages/sdf2/syntax/Modules
+        languages/sdf2/syntax/Regular
+        languages/sdf2/syntax/Lifting
+        languages/sdf2/syntax/Priority
+        languages/sdf2/syntax/CC
+        languages/sdf2/syntax/Sorts
+        languages/sdf2/syntax/Start-Symbols
+        languages/sdf2/syntax/Literals
+        languages/sdf2/syntax/Labels
+        languages/sdf2/syntax/Restrictions
+        languages/sdf2/syntax/Aliases
+
+exports
+  sorts SDF
+
+  context-free syntax
+    "<START>" -> Symbol {cons("start")}
+    "<Start>" -> Symbol {cons("file-start")}
+
+    "lexical"      "priorities" Priorities      -> Grammar {cons("lexical-priorities")}
+    "context-free" "priorities" Priorities      -> Grammar {cons("context-free-priorities")}
+    "lexical"      "restrictions" Restrictions  -> Grammar {cons("lexical-restrictions")}
+    "context-free" "restrictions" Restrictions  -> Grammar {cons("context-free-restrictions")}
+
+    "definition" Definition -> SDF {cons("definition")}
+
+  context-free priorities
+    Symbol "|" Symbol  -> Symbol >
+    Label ":" Symbol -> Symbol                  
+
+
+module languages/sdf2/syntax/Sdf2
+
+imports languages/sdf2/syntax/Sdf2-Syntax
+
+exports
+  lexical syntax
+    "LAYOUT"            -> Sort    {reject}
+
+  context-free syntax
+    "aliases"           -> ModuleName {reject}
+    "lexical"           -> ModuleName {reject}
+    "priorities"        -> ModuleName {reject}
+    "context-free"      -> ModuleName {reject}
+    "definition"        -> ModuleName {reject}
+    "syntax"            -> ModuleName {reject}
+    "variables"         -> ModuleName {reject}
+    "module"            -> ModuleName {reject}
+    "imports"           -> ModuleName {reject}
+    "exports"           -> ModuleName {reject}
+    "hiddens"           -> ModuleName {reject}
+    "left"              -> ModuleName {reject}
+    "right"             -> ModuleName {reject}
+    "assoc"             -> ModuleName {reject}
+    "non-assoc"         -> ModuleName {reject}
+    "bracket"           -> ModuleName {reject}
+    "sorts"             -> ModuleName {reject}
+    "bracket"           -> ModuleName {reject}
+    "sorts"             -> ModuleName {reject}
+    "restrictions"      -> ModuleName {reject}
+
+     StrCon "(" arguments:{Symbol ","}* ")" -> Symbols {reject}
+
+     Associativity -> Label   {reject}
+     Associativity -> ATermAttribute {reject}
+     "reject"      -> ATermAttribute {reject}
+     "prefer"      -> ATermAttribute {reject}
+     "avoid"       -> ATermAttribute {reject}
+     "bracket"     -> ATermAttribute {reject}
+     "id" "(" ModuleName ")" -> ATermAttribute {reject}
+
+  restrictions
+    <Sort -CF>
+    "aliases"
+    "lexical"
+    "priorities"
+    "context-free"
+    "definition"
+    "syntax"
+    "variables"
+    "module"
+    "imports"
+    "exports"
+    "hiddens"
+    "left"
+    "right"
+    "assoc"
+    "non-assoc"
+    "bracket"
+    "sorts"             -/- [A-Za-z0-9]
+    <NatCon -CF>        -/- [0-9]
+    <LAYOUT?-CF>        -/- [\ \t\n\%]
+    <NumChar -CF>       -/- [0-9]
+    <ModuleName -CF>    -/- [A-Za-z0-9\_\-]
+
+exports
+  context-free start-symbols
+    SDF Module
+
+module SDF
+imports languages/sdf2/syntax/Sdf2
+hiddens
+  context-free start-symbols
+    SDF Module
+
+  %% HACK
+  context-free syntax
+    Group "." -> Group {non-assoc,cons("non-transitive")}

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resources/test.rtree
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resources/test.rtree	Fri May 13 16:00:22 2011	(r22874)
@@ -0,0 +1 @@
+Module("entity-lang",[Imports([Import("entity/lang/common"),Import("entity/lang/common-signature"),Import("entity/lang/entity-builders"),Import("entity/lang/entity-builders-signature"),Import("entity/lang/module-main"),Import("entity/lang/module-main-signature")])])
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resources/test.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resources/test.sdf	Fri May 13 16:00:22 2011	(r22874)
@@ -0,0 +1,18 @@
+module Test
+
+imports
+  SPXCommon
+
+exports
+  
+context-free syntax
+  
+  %% TODO: consider using the "sorts" section for concepts?
+  
+  "concepts" ConceptDef* -> ConceptSection {cons("Concepts")}
+  "concepts"             -> ModuleName {reject}
+  
+  "concept" ID ":" Rule -> ConceptDef {cons("ConceptDef")}
+  "rule" Rule ":" ID*   -> ConceptDef {cons("RuleDef")}
+  ID                    -> Rule {cons("Rule1")}
+  ID "->" ID            -> Rule {cons("Rule2")}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resources/test.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resources/test.str	Fri May 13 16:00:22 2011	(r22874)
@@ -0,0 +1,76 @@
+module test
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  libstratego-sglr
+  libstratego-sdf
+  libstrc
+imports
+  include/SpoofaxLang
+  lib/editor-common.generated
+imports
+  codegen/str/to-stratego
+imports  
+  analyze/sdf/check
+  context/sdf/declare
+  context/str/declare
+imports
+  codegen/buildscripts
+	codegen/compile
+	codegen/esv/to-esv
+	codegen/sdf/to-sdf
+  codegen/sdf/to-signature
+imports 
+	normalize/main
+	normalize/signatures   
+imports 
+	context/-
+imports	 
+	utils/cache
+	common
+  config
+	unit-tests/-
+imports
+	 editor/main
+	 codegen/main
+	
+rules 
+	get-project-path = (ProjectPath <+ project-path)
+ 
+	
+rules  
+   
+  editor-complete:
+    (node, position, ast, path, project-path) -> proposals
+    where
+      proposals := <propose-completion <+ ![]> node
+ 
+  editor-resolve:
+    (sort(x), position, ast, path, project-path) -> target
+    where
+      target := <Declaration> x
+ 
+ /*  TODO : Fix Editor Resolve 
+  editor-resolve:
+    (unparameterized(x), position, ast, path, project-path) -> target
+    where
+      target := <parse-spoofaxlang-file> <resolve-import> x
+ */
+ 
+rules
+	
+  generate-aterm:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"aterm")> path;
+      result   := ast // we just return the input term
+	
+	generate-desugar:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"aterm.sugar")> path;
+      result   := <nomalize-all>ast // we just return the input term
+
+	 

From M.A.Akhter at student.tudelft.nl  Sun May 15 10:13:12 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sun, 15 May 2011 08:13:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22875 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans: .
	codegen context context/sdf unit-tests
Message-ID: <20110515081312.35809CC1BE@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Sun May 15 08:13:11 2011
New Revision: 22875
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22875&sc=1

Log:
* support for legacy artifacts. Now, spx can import (legacy) sdf, str artifacts. However, imports are intransitive.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Fri May 13 16:00:22 2011	(r22874)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Sun May 15 08:13:11 2011	(r22875)
@@ -178,7 +178,7 @@
 				;<list-loop(compile-depending-spx)>depeneding-typedqname*
 			
 				;{|GetEnclosingPackageName:
-						rules ( GetEnclosingPackageName      := package-typed-qname);
+						<declare-current-package-scope> package-typed-qname;
 						// Now, since all the depending-on artifacts are compiled
 						// start compiling the enclosing modules of this package.
 						// Note: currently we are not considering any nested packages.
@@ -231,7 +231,7 @@
 				<debug-compiler>$[compile-spx-module| Currently Compiling : [<pp-aterm>]]; //this package is not compiled before
 				module-decl* := <get-module-declarations>module-typed-qname;
 				{|GetEnclosingModuleName:
-						rules( GetEnclosingModuleName := module-typed-qname);
+						<declare-current-module-scope> module-typed-qname; 
 						<list-loop(
 								origin-track-forced(declare-all)
 								//declare-all
@@ -264,7 +264,6 @@
 					<list-loop(compile-legacy-artifact-package)>upackages	
 		|}
 
-
 	//Compile  a particular legacy SDF + STR Artifacts . Currently it only supports STR legacy artifacts . TODO  : add others 		
 	compile-legacy-artifact-package : p at Package(qname) ->p
 	where	
@@ -272,9 +271,11 @@
 		;<bagof-UsingLegacyArtifacts>qname=> legacy-artifact-details*
 		;<debug-compiler>$[compile-main | compile-legacy-artifacts | Artifact List:[<pp-aterm>legacy-artifact-details*]]
 	where
-		<map(compile-legacy-artifact)>legacy-artifact-details*	
-		
-	
+			{|GetEnclosingPackageName:
+						<declare-current-package-scope> p;
+						<map(compile-legacy-artifact)>legacy-artifact-details*	
+			|}
+			
 	compile-legacy-artifact: 
 		legacy-artifact-details@(namespace, Module(Name(modulename)) , resolving-path) -> legacy-artifact-details
 		where
@@ -282,7 +283,7 @@
 		where
 			if not(<Resolved-ExternalArtifact>(modulename,resolving-path)) then // check to see if already taken care off.  	
 				if (!resolving-path => Unresolved()) then 
-					  // logic : we are only supporting legacy STR lib at this moment which are not located in the file system . 
+					  // we are only supporting legacy STR lib at this moment which are not located in the file system . 
 					  // Hence, it is unresolved , we are giving it a try to resolve it as a lib
 	  				<get-cached-lib-ast(read-stratego-signatures);declare-stratego-globals-top>modulename
 					<+
@@ -290,14 +291,20 @@
 					<+ 
 						<debug-compiler>$[compile-main | compile-legacy-artifact > failed to resolve]
 				else
-					<debug-compiler>$[compile-main | compile-legacy-artifact > Parsing following legacy artifacts : [<pp-aterm>resolving-path]];
-					
 					// Verify that the resource has a known extension.
-					<has-known-extensions>resolving-path 
-					
-					
-					
-					<+ <debug-compiler>$[compile-main | compile-legacy-artifact > Error occured in handling [<pp-aterm>resolving-path]. Hence, it is ignored.]  
+					<has-known-extensions>resolving-path ;
+					{|GetEnclosingModuleName, LegacyModuleResolvedPath:
+							<declare-current-module-scope> <internal-module-typed-qname>;
+							with( rules(LegacyModuleResolvedPath := resolving-path));  
+						
+							// Known Extension found. Handling it.  
+							// Parsing the legacy content.
+							// Recoding the declarations for further analysis. 
+							<debug-compiler>$[compile-main | compile-legacy-artifact | Compiling following legacy artifacts : [<pp-aterm>resolving-path]];
+							<declare-legacy-artifact(|resolving-path)><parse-legacy-artifact>resolving-path
+					|}
+				<+ 
+					<debug-compiler>$[compile-main | compile-legacy-artifact > Error occured in handling [<pp-aterm>resolving-path]. Hence, it is ignored.]  
 					
 					
 					//read + normalize and then sent to declare

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str	Fri May 13 16:00:22 2011	(r22874)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str	Sun May 15 08:13:11 2011	(r22875)
@@ -17,6 +17,7 @@
 	config
 	common
 rules
+
 	parse-spx-sources : 
 		(sourcedir , searchOption) -> <id>
 		where

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Fri May 13 16:00:22 2011	(r22874)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Sun May 15 08:13:11 2011	(r22875)
@@ -6,17 +6,23 @@
   libstratego-gpp
 imports 
 	common
+	spoofaxlang
+imports 	
 	utils/debug
 	lib/Configuration/SpoofaxConfiguration
 	lib/editor-common.generated
-	spoofaxlang
+imports 	
 	normalize/signatures
+	context/signatures
+	include/SpoofaxLang
+	
 	
 rules 
 	default_package_name = !"__default"
 	
 	internal_module_name_string = !"__internal"
 	
+	internal-module-typed-qname = !Module(QName([<internal_module_name_string>]))  
 	
 	get-known-legacy-extensions = !["sdf" , "def" , "str" , "rtree"] 
 		

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Fri May 13 16:00:22 2011	(r22874)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Sun May 15 08:13:11 2011	(r22875)
@@ -11,13 +11,47 @@
 	lib/editor-common.generated
 imports
 	utils/annotations
-	utils/debug	
+	utils/debug
+	config	
 	common
 
 rules		
-	declare-all = declare-sdf-all;declare-esv-all ; declare-str-all; update-modified-module-declaration   
+	declare-all = declare-sdf-all; declare-esv-all ; declare-str-all; update-modified-module-declaration   
 
-	init-declaration = init-record-signatures 
+	init-declaration = init-record-signatures
+
+
+rules 
+	
+	declare-legacy-artifact(|resolved-path) : legacy-content -> legacy-content
+	where 
+		<has-extension(|"sdf") + has-extension(|"def")>resolved-path; 
+		<alltd(declare-sdf-definition-main)>legacy-content
+		
+	declare-legacy-artifact(|resolved-path) : legacy-content -> legacy-content
+	where 
+		<has-extension(|"str") + has-extension(|"rtree")>resolved-path; 
+		<alltd(declare-str-definition-main)>legacy-content
+	
+rules
+
+	// Declaring current scope for further analyze 
+	declare-current-scope(| package-typed-qname , module-typed-qname)=
+		with(
+			<declare-current-package-scope>package-typed-qname;
+			<declare-current-module-scope>module-typed-qname
+		) 
+	
+	declare-current-package-scope : 
+		package-typed-qname -> <id> 
+		with 
+			rules ( GetEnclosingPackageName      := package-typed-qname)
+		
+	declare-current-module-scope:
+			module-typed-qname -> <id> 
+			with 
+				rules ( GetEnclosingModuleName      := module-typed-qname)
+	 
 rules	
 	declare-sdf-all = declare-spxmodules-all(declare-sdf-section) 
 	declare-str-all = declare-spxmodules-all(declare-str-section)
@@ -42,6 +76,10 @@
 		where 
 			declared-definition* := <alltd(declare-sdf-definition-main)>definition*
 	
+	declare-sdf-section: 
+		SDFSectionEH(_,definition*) -><declare-sdf-section>SDFSection(definition*) 
+		
+	
 	declare-sdf-section: STRSection(def*) -> <id>
  
 	declare-sdf-section: ESVSection(def*) -> <id>  
@@ -49,6 +87,8 @@
 rules	
 	declare-str-section: SDFSection(def*) -> <id>
 	
+	declare-str-section: SDFSectionEH(_,def*) -> <id>
+	
 	declare-str-section: s at STRSection(def*) -> STRSection(m-definition*)
 	where 
 		m-definition* := <alltd(declare-str-definition-main)>def*
@@ -57,8 +97,11 @@
 	declare-str-section: ESVSection(def*) -> <id>   
 
 rules	
+	
 	declare-esv-section: SDFSection(def*) -> <id>
 	
+	declare-esv-section: SDFSectionEH(_, def*) -> <id>
+	
 	declare-esv-section: STRSection(def*) -> <id>
  
 	declare-esv-section: ESVSection(def*) -> <id> 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str	Fri May 13 16:00:22 2011	(r22874)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str	Sun May 15 08:13:11 2011	(r22875)
@@ -32,10 +32,25 @@
 	// Returns right hand side of the production. In case of A -> B, it
 	// retunrs B.
 	get-rhs-sort-name = 
-			try(?cf(<id>) + ?lex(<id>));
-      repeat(?label(_, <id>));
-      (?sort(<id>) + ?parameterized-sort(<id>, _))
+			try(
+					?cf(<id>) 
+				+ ?lex(<id>)
+			);
+      repeat(
+      	?label(_, <id>)
+      );
+      ( 
+      		?sort(<id>) 
+      	+ ?parameterized-sort(<id>, _)
+      )
+
+	is-lexical-sort = where(?lex(sort(_)))
+	
+	mark-as-lexical-syntax-block =	with(	rules (IsInsideLexicalSyntaxBlock :_) )			
+		
+		
 		
+			
 rules 
 	
 	//Stores operation name and operation declarations 
@@ -56,7 +71,23 @@
   where 
   		<debug-declaration> $[Operation Name :  [opname]]
 	
-	store-operation-declaration
+	
+	store-operation-declaration: 
+		p at prod(_,rhs-sort, _) ->  <id>
+		with 
+			 	if is-lexical-sort then
+			 		if not (IsInsideLexicalSyntaxBlock ) then
+			 			// Karnel Syntax and not marked as Lexical Syntax Block.
+			 			// Hence, marking it as a lexical syntax 
+			 			{| IsInsideLexicalSyntaxBlock:
+			 						mark-as-lexical-syntax-block;
+			 						<store-operation-declaration-internal>p	
+			 			|}
+			 		end
+			 	end 
+			 	
+	
+	store-operation-declaration-internal
   	=  ?p at prod(lhs , rhs-sort, attrs(attribute-list))
   		;rhs-sort-name := <get-rhs-sort-name>rhs-sort	
   		;{|lhs-sort, get-op-name:
@@ -67,7 +98,7 @@
   					;create-opname2opdecl-mapping(|operation-name , lhs-operands-types, rhs-sort-name , p) 
   		  |}
 			  
-	store-operation-declaration 
+	store-operation-declaration-internal 
   	= 	?p at prod(lhs , rhs-sort, no-attrs()) 
   		;rhs-sort-name := <get-rhs-sort-name>rhs-sort	
   	  ; {|lhs-sort :

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Fri May 13 16:00:22 2011	(r22874)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Sun May 15 08:13:11 2011	(r22875)
@@ -5,6 +5,7 @@
 	include/SpoofaxLang
 imports 
 	context/-
+	codegen/-
 	analyze/main
 	normalize/signatures	
 imports
@@ -43,7 +44,23 @@
     	alltd(declare-sdf-definition)
   
 rules
-	 
+
+
+	declare-sdf-definition:
+    renamed-module(x, renamings(y)) -> <id>
+    where
+      <all(try(?symbol(_, <id>); declare-sdf-simple-definition))> y
+
+
+	declare-sdf-definition:
+    parameterized(x, y) -> parameterized(x, y)
+    where
+      <declare-sdf-definition> unparameterized(x);
+      <alltd(declare-sdf-simple-definition)> y
+
+
+rules
+	  	 
  declare-sdf-definition:
     prod @ prod(lhs, sort, _) -> <id>
     where
@@ -56,15 +73,17 @@
     with
       <Declaration> qualified-sort-name 
     <+
-      file := <get-module-abs-filepath> <GetEnclosingModuleName>;
-      rules(
-       	Declaration		 :    qualified-sort-name  -> prod
-        DeclarationFile:    qualified-sort-name  -> file
-        // Added following two dynamic rules for the ESV Def. analysis
-        SortDeclaration  :  qualified-sort-name -> x
-       	SortProductionLHS:+ qualified-sort-name -> lhs
-      );
-      <debug-declaration> $[DeclareSDF | Storing Declaration : [<pp-aterm>qualified-sort-name]  -> [<pp-aterm>prod]]
+      (
+      	(GetEnclosingModuleName;get-module-abs-filepath <+ LegacyModuleResolvedPath) => file;
+      	rules(
+       		Declaration		 :    qualified-sort-name  -> prod
+        	DeclarationFile:    qualified-sort-name  -> file
+        	// Added following two dynamic rules for the ESV Def. analysis
+        	SortDeclaration  :  qualified-sort-name -> x
+       		SortProductionLHS:+ qualified-sort-name -> lhs
+      	);
+      	<debug-declaration> $[DeclareSDF | Storing Declaration : [<pp-aterm>qualified-sort-name]  -> [<pp-aterm>prod]]
+      )
     with
       <alltd(declare-sdf-usage)> lhs 
   
@@ -78,9 +97,10 @@
   declare-sdf-definition:
 		lex-syntax at lexical-syntax(lex-defintions) ->lex-syntax
 		with{| IsInsideLexicalSyntaxBlock:
-						rules (IsInsideLexicalSyntaxBlock :_);
-					  <declare-sdf-definition-main> lex-defintions
-				|} 
+							mark-as-lexical-syntax-block; 
+							<declare-sdf-definition-main> lex-defintions
+				|}
+					 
 				
 	declare-sdf-definition:
 		parameterized(x, y) -> parameterized(x, y)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str	Fri May 13 16:00:22 2011	(r22874)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str	Sun May 15 08:13:11 2011	(r22875)
@@ -22,7 +22,7 @@
 		with 
 			file-path := <concat-strings> [project-path , "/trans/" , "unit-tests/resources/test.sdf"] 
 		where 
-			<debug>$[Running Test .... ];
+			<debug>$[Running Test | parse-sdf-test ];
 			actual :=  <parse-legacy-artifact>file-path
 		where
 			<debug> $[Verifying Expectaions .... ];
@@ -36,7 +36,7 @@
 		with 
 			file-path := <concat-strings> [project-path , "/trans/" , "unit-tests/resources/test.str"]
 		where 
-			<debug>$[Running Test .... ];
+			<debug>$[Running Test | parse-str-test];
 			actual :=  <parse-legacy-artifact>file-path
 		where
 			<debug> $[Verifying Expectaions .... ];
@@ -46,12 +46,12 @@
 			<debug>$[FAILED...]		
 				
 	
-		parse-def-test:
+	parse-def-test:
 		(selected, position, ast, path, project-path) -> None()
 		with 
 			file-path := <concat-strings> [project-path , "/trans/" , "unit-tests/resources/SDF.def"]
 		where 
-			<debug>$[Running Test .... ];
+			<debug>$[Running Test | parse-def-test];
 			actual :=  <parse-legacy-artifact>file-path
 		where
 			<debug> $[Verifying Expectaions .... ];
@@ -65,7 +65,7 @@
 		with 
 			file-path := <concat-strings> [project-path , "/trans/" , "unit-tests/resources/test.rtree"]
 		where 
-			<debug>$[Running Test .... ];
+			<debug>$[Running Test | parse-def-test];
 			actual :=  <parse-legacy-artifact>file-path
 		where
 			<debug> $[Verifying Expectaions .... ];

From M.A.Akhter at student.tudelft.nl  Sun May 15 12:17:47 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sun, 15 May 2011 10:17:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22876 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans: .
	codegen context unit-tests
Message-ID: <20110515101747.8273DCC058@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Sun May 15 10:17:47 2011
New Revision: 22876
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22876&sc=1

Log:
* unit tests for verifying symbol resolving is working as expected

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Sun May 15 08:13:11 2011	(r22875)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Sun May 15 10:17:47 2011	(r22876)
@@ -294,7 +294,7 @@
 					// Verify that the resource has a known extension.
 					<has-known-extensions>resolving-path ;
 					{|GetEnclosingModuleName, LegacyModuleResolvedPath:
-							<declare-current-module-scope> <internal-module-typed-qname>;
+							<declare-current-module-scope> <get_internal_module_qtname> <GetEnclosingPackageName>;
 							with( rules(LegacyModuleResolvedPath := resolving-path));  
 						
 							// Known Extension found. Handling it.  

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Sun May 15 08:13:11 2011	(r22875)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Sun May 15 10:17:47 2011	(r22876)
@@ -22,8 +22,6 @@
 	
 	internal_module_name_string = !"__internal"
 	
-	internal-module-typed-qname = !Module(QName([<internal_module_name_string>]))  
-	
 	get-known-legacy-extensions = !["sdf" , "def" , "str" , "rtree"] 
 		
 rules 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str	Sun May 15 08:13:11 2011	(r22875)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str	Sun May 15 10:17:47 2011	(r22876)
@@ -181,15 +181,15 @@
 			end
 		where 
 			if !currentscope => Package(_) then 
-				internal_module_name := <get_internal_module_qtname>currentscope;
+				internal_module_qname := <get_internal_module_qtname>currentscope;
 				resolved* := <is-not-empty-list>
 												<resolve-symbol-declarations-internal(
 														key-resolver, 
 														value-resolver,
 														( 
-															//Filter to search all the symbold in package's scope
-															// Also, ensuring the visibility of the internal scope active 
-															?(currentscope, _ , symbol) ; not(?(currentscope, internal_module_name , symbol))
+															//Filter scopes to search in the imported scopes.
+															//In addition, skipping package's intenral scope. 
+															?(currentscope, _ , symbol) ; not(?(currentscope, internal_module_qname , symbol))
 														)
 												)>symbol
 			else

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str	Sun May 15 08:13:11 2011	(r22875)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/resolve-symbol.str	Sun May 15 10:17:47 2011	(r22876)
@@ -26,10 +26,67 @@
 		<+ 
 			<debug(!"FAILED. ")> [actual, expected]	
 				
-		
+	resolving-in-imported-scope-internal-symbol-fail:
+		(selected, position, ast, path, project-path) -> None()
+		where 
+			debug(!"starting test now. ");
+			editor-init;
+			enable-debug-all	
+		where	
+			pqname := QName(["A" , "P1"]);
+			mqname := QName(["A" , "P1" , "M1"]);
+			p1 := Package(pqname);
+			m1 := Package(mqname);
+			p2 := Package(QName(["A" , "P2"]))
+			;rules(Using :+ (pqname, mqname) -> p2) 	
+		where
+			symbol1 := "ID";
+			// Symbol is declared in the internal scope of the P2 package
+			<setup-declaration>( p2, <get_internal_module_qtname>p2, symbol1)		
+		where
+			{|GetEnclosingPackageName, GetEnclosingModuleName:	
+					rules(
+						GetEnclosingPackageName      :=  p1  
+						GetEnclosingModuleName			 :=  m1
+					);
+					<debug>$[Test1: Resolve Declaration in imported scopes:-----------------];
+					if not(<resolve-symbol-declarations(all-keys-Declaration , bagof-Declaration)><to-scoped-symbol>symbol1) then 
+						<debug>$[ Resolve Failed. Test Successful]
+					end	
+			 |} 
+				
+	resolving-in-package-scope-internal-symbol-success:
+		(selected, position, ast, path, project-path) -> None()
+		where 
+			debug(!"starting test now. ");
+			editor-init;
+			enable-debug-all	
+		where	
+			pqname := QName(["A" , "P1"]);
+			mqname := QName(["A" , "P1" , "M1"]);
+			p1 := Package(pqname);
+			m1 := Package(mqname);
+			p2 := Package(QName(["A" , "P2"]))
+			;rules(Using :+ (pqname, mqname) -> p2) 	
+		where
+			symbol1 := "ID";
+			// Symbol is declared in the internal scope of the P2 package
+			<setup-declaration>( p1, <get_internal_module_qtname>p1, symbol1)		
+		where
+			{|GetEnclosingPackageName, GetEnclosingModuleName:	
+					rules(
+						GetEnclosingPackageName      :=  p1  
+						GetEnclosingModuleName			 :=  m1
+					);
+					<debug>$[Test1: Resolve Declaration in imported scopes:-----------------];
+					if (result := <resolve-symbol-declarations(all-keys-Declaration , bagof-Declaration)><to-scoped-symbol>symbol1) then 
+						<debug>$[ Resolve Successful. Test Successful . Resolved Symbol : [<pp-aterm>result]]
+					end	
+			 |}
+			 			
 	// Unit Test to check the resolve symbol is working as expected.	
 	test-resolving-symbol:
-		(selected, position, ast, path, project-path) -> selected
+		(selected, position, ast, path, project-path) -> None()
 		where 
 			debug(!"starting test now. ");
 			editor-init

From M.A.Akhter at student.tudelft.nl  Sun May 15 12:34:14 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sun, 15 May 2011 10:34:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22877 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	analyze analyze/sdf analyze/str codegen codegen/sdf
	codegen/str normalize unit-tests
Message-ID: <20110515103414.3F5357F8061@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Sun May 15 10:34:14 2011
New Revision: 22877
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22877&sc=1

Log:


Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/parse-adapter.str
      - copied, changed from r22875, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/parse.str
      - copied, changed from r22864, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/parse.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/str/parse.str
      - copied, changed from r22864, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/parse.str
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/parse.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/parse.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/to-spx.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/parse-adapter.str (from r22875, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/parse-adapter.str	Sun May 15 08:13:11 2011	(r22875, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/parse-adapter.str	Sun May 15 10:34:14 2011	(r22877)
@@ -1,4 +1,4 @@
-module codegen/parse-adapter
+module analyze/parse-adapter
 
 imports
 	include/SpoofaxLang
@@ -7,8 +7,8 @@
 	lib/Configuration/SpoofaxConfiguration  
 	lib/editor-common.generated
 imports 
-	codegen/sdf/parse
-	codegen/str/parse
+	analyze/sdf/parse
+	analyze/str/parse
 	codegen/-
 imports
 	utils/path

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/parse.str (from r22864, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/parse.str)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/parse.str	Thu May 12 15:54:26 2011	(r22864, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/parse.str	Sun May 15 10:34:14 2011	(r22877)
@@ -1,4 +1,4 @@
-module codegen/sdf/parse
+module analyze/sdf/parse
 
 imports
   libstratego-lib

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/str/parse.str (from r22864, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/parse.str)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/parse.str	Thu May 12 15:54:26 2011	(r22864, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/str/parse.str	Sun May 15 10:34:14 2011	(r22877)
@@ -1,4 +1,4 @@
-module codegen/sdf/parse 
+module analyze/str/parse 
 
 imports
   libstratego-lib

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Sun May 15 10:17:47 2011	(r22876)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Sun May 15 10:34:14 2011	(r22877)
@@ -14,7 +14,7 @@
 	include/SpoofaxLang
 imports
 	codegen/compile
-	codegen/str/parse
+	analyze/str/parse
 	codegen/main
 	codegen/generate
 	context/signatures

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/to-spx.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/to-spx.str	Sun May 15 10:17:47 2011	(r22876)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/to-spx.str	Sun May 15 10:34:14 2011	(r22877)
@@ -8,6 +8,7 @@
 	
 rules 
 	
+	//TODO : normalize legacy artifacts to spx definition
 	to-spx = to-spx-main-internal
 	
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str	Sun May 15 10:17:47 2011	(r22876)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str	Sun May 15 10:34:14 2011	(r22877)
@@ -3,7 +3,7 @@
 
 imports
 	common
-	codegen/parse-adapter
+	analyze/parse-adapter
 	lib/editor-common.generated
 	
 rules 

From M.A.Akhter at student.tudelft.nl  Sun May 15 14:39:11 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sun, 15 May 2011 12:39:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22878 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	codegen codegen/sdf codegen/str context/sdf
Message-ID: <20110515123911.3617C2B8077@mx2.tudelft.nl>

Author: MdAdilAkhter
Date: Sun May 15 12:39:10 2011
New Revision: 22878
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22878&sc=1

Log:
* incorporate signature generation for the package's internal scope

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Sun May 15 10:34:14 2011	(r22877)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Sun May 15 12:39:10 2011	(r22878)
@@ -15,7 +15,6 @@
 	lib/editor-common.generated
 	include/SpoofaxLang
 imports	
-	
 	context/-
 	normalize/signatures
 imports 	
@@ -31,7 +30,21 @@
 	
 	refresh-file = is-in-command-line-mode  < id + refresh-workspace-file 
 	
+
+//TODO: OPTIMIZE : get the imports and resue it in all the generation phase rather traversing to find it out each time. 
+//TODO: OPTIMIZE : DR can be used to construct this imports  
+rules 
 	
+	init-code-generation = where(<emit-default-signatures>()) 
+	
+	generate-all = emit-sdf;emit-signatures ; emit-str <+ debug(!" Failed in Generate-all. "); fail
+
+	generate-main = 
+			?module-qname* ;generate-sdf-main;generate-str-main ; generate-esv-main 
+		<+ 
+			debug(!" Failed in Main Generation. "); fail    
+			
+		
 strategies 
 	build-all = 
 		?current-term
@@ -39,15 +52,15 @@
 		;new-compile-session(
 			list-of-package-qname* := <get-package-list> 
 			;<compile-internal>list-of-package-qname*
-			;<debug>$[......................Getting list of errors......................]
+			;<debug>$[-------------------Getting list of errors-------------------]
 			;<get-all-analyzed-problems>() => problems  
 			;if <fail-if-has-errors>problems then
-			 	 <debug>$[......................Generating artifacts......................]
+			 	 <debug>$[-------------------Generating artifacts-------------------]
 			 	;init-code-generation  
 				;<list-loop(generate-spx-package)>list-of-package-qname*
-				;<debug>$[......................Generating Build Scipt......................]
+				;<debug>$[-------------------------Generating Build Scipt---------------------]
 				;<emit-build-script> <filter(has-language-name-configured)>list-of-package-qname*
-				;<debug>$[......................Code Generation is done......................] 		
+				;<debug>$[-------------------------Code Generation is done-------------------------] 		
 			else
 				<debug>$[Please fix the errors before building the artifacts:  [<pp-aterm-forced>problems]]
 			end		 
@@ -76,6 +89,7 @@
 					 	rules (GetEnclosingPackageName := package-typed-qname);
 						// Generates artifacts from all the modules 	
 						<list-loop(generate-spx-module)>enclosed-module-typed-qnames;
+						<emit-internal-signatures>package-typed-qname;
 						if (language-name  := <get-language-name> package-typed-qname) then
 							// Since, the language-name is defined for this language 
 							// generate all the main artifacts  for this package
@@ -83,8 +97,6 @@
 							// as a language , rather will be treated as a langauge library to be reused by other 
 							// languages.
 							
-							//language-name := <get-language-name> package-typed-qname;
-							//<debug(!"Language name : ")>language-name ;
 							{| GetLanguageName : 
 										rules( GetLanguageName  := language-name);
 										<emit-package-signature-main>();
@@ -98,11 +110,6 @@
 				;fail
 			end
 	
-	
-	get-main-file-name : () ->lang-name 
-	with 
-		lang-name := <GetLanguageName> <+ debug(!"GetLanguageName encountered error. Please verify it is called within the scope defined for the DR")
-
 	// generates artifacts fro spx module
 	generate-spx-module: 
 		module-typed-qname at Module(untyped-qname) -> <id>
@@ -130,20 +137,12 @@
 				<debug-compiler> $[Generate| generate-spx-module| Ignored as already in the queue :[<pp-aterm>]] //this package is not compiled before
 			end		
 			
+	get-main-file-name : () ->lang-name 
+	with 
+		lang-name := <GetLanguageName> <+ debug(!"GetLanguageName encountered error. Please verify it is called within the scope defined for the DR")
 
-//TODO: OPTIMIZE : get the imports and resue it in all the generation phase rather traversing to find it out each time. 
-//TODO: OPTIMIZE : DR can be used to construct this imports  
-rules 
-	init-code-generation = where(<emit-default-signatures>()) 
+	
 		
-	generate-all = emit-sdf;emit-signatures;emit-str <+ debug(!" Failed in Generate-all. "); fail
-
-	generate-main = 
-			?module-qname* ;generate-sdf-main;generate-str-main ; generate-esv-main 
-		<+ 
-			debug(!" Failed in Main Generation. "); fail    
-			
-			
 rules
 	
 	to-generated-artifact-block(adapter, post-coversion-adapter) : list-stmt* -> resultant-block* 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Sun May 15 10:34:14 2011	(r22877)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Sun May 15 12:39:10 2011	(r22878)
@@ -10,6 +10,7 @@
 imports 
 	context/sdf/declare-signature
 	context/sdf/declare
+	context/-
 	codegen/sdf/to-sdf
 	include/SpoofaxLang
 imports
@@ -57,7 +58,8 @@
 		;<refresh-file>output-path-str
 		;<refresh-file>output-path-rtree
 	
-	
+rules 
+		
 	// Emits default signatures in Global\ directory 
 	emit-default-signatures:
 		() -> ()
@@ -84,6 +86,36 @@
 			rules( GeneratedSignature : sig-file-rel-path );    
 			<debug-compiler>$[ Codegen | SDF | Finishing generation of default signature]
 	
+rules 
+		
+	emit-internal-signatures: package-typed-qname at Package(QName(_))  -> <id>
+		with 
+ 			project-path := <ProjectPath>;
+ 			root-directory:= $[[project-path]/[<Autogenerated-Artifacts-Dir>]]
+ 		where
+ 			module-typed-qname := <get_internal_module_qtname>package-typed-qname  ;
+			!module-typed-qname => Module(module-untyped-qname);
+			!package-typed-qname => Package(package-untyped-qname);
+			 modulename-string := <internal_module_name_string>
+		where 
+			sig-file-name     :=  <get-signature-file-name><qname-to-path>module-untyped-qname;
+			sig-file-rel-path := $[[<Autogenerated-Artifacts-Dir>]/[<qname-to-path>module-untyped-qname]-signature]
+		where 
+			<debug-compiler>$[Codegen| SDF | Generating signature for the following module: [<pp-aterm>module-typed-qname]]			
+			;imports-string := $[imports 
+				Globals/Signatures
+			]
+			;generated-signatures-string :=  <get-signature-contents(|sig-file-name,imports-string)> <get-all-signatures-as-string(?(package-typed-qname, module-typed-qname, _))>
+			;signatures-as-aterm-string := <to-signature-as-rtree >generated-signatures-string
+		where  
+			<save-artifact(save-to-file| package-untyped-qname, root-directory, <get-output-path(|"signature", "str")>(root-directory, module-untyped-qname))>generated-signatures-string;
+			<save-artifact(WriteToBinaryFile| package-untyped-qname, root-directory, <get-output-path(|"signature", "rtree")>(root-directory, module-untyped-qname))>signatures-as-aterm-string;
+			rules( GeneratedSignature : sig-file-rel-path )
+		where
+			<debug-compiler>$[ Codegen | SDF | Finishing generation of Signature for [<pp-aterm> module-untyped-qname].]
+			
+rules				 
+	
 	// Emits signatures for the specified module definition		
 	emit-signatures:
 		m at Module(attrb* , modname , section*) -> m
@@ -102,7 +134,7 @@
 			;!modname => SPXModuleName(modulename-string)
 		where 
 			sig-file-name     :=  <get-signature-file-name><qname-to-path>module-untyped-qname;
-			sig-file-rel-path := $[[<Autogenerated-Artifacts-Dir>]/[<qname-to-path>module-untyped-qname]]
+			sig-file-rel-path := $[[<Autogenerated-Artifacts-Dir>]/[<qname-to-path>module-untyped-qname]-signature]
 		where 
 			<debug-compiler>$[Codegen| SDF | Generating signature for the following module: [<pp-aterm>module-typed-qname]]			
 			;imports-string := $[imports 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Sun May 15 10:34:14 2011	(r22877)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Sun May 15 12:39:10 2011	(r22878)
@@ -50,23 +50,6 @@
 	 	 ;<debug-compiler>$[ Codegen | STR | Finishing generation of following module: [<pp-aterm> module-untyped-qname].]
 
 	
-	// Generates main stratego module for the specified package-name
-	generate-str-main:  module-qname* -> <id>
-		with 
- 			 project-path             := <ProjectPath>;
- 			 Package(package-qname)   := <GetEnclosingPackageName>;
- 			 root-directory 					:= $[[project-path]/[<Autogenerated-Artifacts-Dir>]]; 
- 		   <debug-compiler> $[CodeGen | STR | Generate-str-main from package-name: [<pp-aterm>package-qname]]
- 		where   	  
- 			 main-str-module-name :=  <get-main-file-name>(); 
-			 str-aterm := Module( main-str-module-name  ,[Imports(<map(to-str-import);flatten-list>module-qname*)]);
-			 str-string := <pp-stratego-string> <parenthesize-Stratego>  str-aterm
-		where
-			<save-artifact(save-to-file      | package-qname , root-directory, <get-main-output-path(|main-str-module-name, "str")>(root-directory, package-qname))>str-string;
-			<save-artifact(WriteToBinaryFile | package-qname , root-directory, <get-main-output-path(|main-str-module-name, "rtree")>(root-directory, package-qname))>str-aterm;
-			<debug-compiler>$[ Codegen | STR | Generation of Main STR Module for package : [<pp-aterm> package-qname] is done.] 
-
-	
 	// emit stratego concrete syntax
 	emit-str-concrte-syntax (|package-untyped-qname, module-untyped-qname , root-dir) : 
 		str-rtree -> str-concrete-syntax
@@ -90,7 +73,24 @@
 			 													 )
 			 										)
 			;<save-artifact(WriteToBinaryFile | package-untyped-qname, root-dir,output-path-rtree)> str-aterm 
- 			
+
+	// Generates main stratego module for the specified package-name
+	generate-str-main:  module-qname* -> <id>
+		with 
+ 			 project-path             := <ProjectPath>;
+ 			 Package(package-qname)   := <GetEnclosingPackageName>;
+ 			 root-directory 					:= $[[project-path]/[<Autogenerated-Artifacts-Dir>]]; 
+ 		   <debug-compiler> $[CodeGen | STR | Generate-str-main from package-name: [<pp-aterm>package-qname]]
+ 		where   	  
+ 			 main-str-module-name :=  <get-main-file-name>(); 
+			 str-aterm := Module( main-str-module-name  ,[Imports(<get-str-imports(|<GetEnclosingPackageName>)>module-qname*)]);
+			 str-string := <pp-stratego-string> <parenthesize-Stratego>  str-aterm
+		where
+			<save-artifact(save-to-file      | package-qname , root-directory, <get-main-output-path(|main-str-module-name, "str")>(root-directory, package-qname))>str-string;
+			<save-artifact(WriteToBinaryFile | package-qname , root-directory, <get-main-output-path(|main-str-module-name, "rtree")>(root-directory, package-qname))>str-aterm;
+			<debug-compiler>$[ Codegen | STR | Generation of Main STR Module for package : [<pp-aterm> package-qname] is done.] 
+
+	 			
 				
 rules
 	
@@ -125,8 +125,22 @@
 		end;
 		module-qualified-path := <qname-to-path>module-qname ;
 		str-import-block := <flatten-list>[[Imports([Import(<get-signature-file-name>module-qualified-path)])], str-import-block'] 
-						 
-			
+
+
+rules						 
+	
+	// Returns the import statements for this package. 
+	// In addition, it imports Internal Signatures for this package
+	// And by default add reference to libstratego-lib
+	get-str-imports(|package-qname): module-qnames* -> result 
+	where
+		result' := <map(to-str-import);flatten-list>module-qnames*    
+	where
+		<to-str-import><get_internal_module_qtname>package-qname => [_, sig-import];
+		result := <conc>([Import("libstratego-lib"),sig-import] , result')
+	
+rules
+				
 	to-str-import: 
 		package-name -> [Import(package-name) , Import(<get-signature-file-name>package-name)]
 		where 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str	Sun May 15 10:34:14 2011	(r22877)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str	Sun May 15 12:39:10 2011	(r22878)
@@ -73,7 +73,7 @@
 	
 	
 	store-operation-declaration: 
-		p at prod(_,rhs-sort, _) ->  <id>
+		p at prod(_,rhs-sort, _) ->  <store-operation-declaration-internal>p
 		with 
 			 	if is-lexical-sort then
 			 		if not (IsInsideLexicalSyntaxBlock ) then
@@ -240,7 +240,6 @@
 	*/		  
 	create-opname2opdecl-mapping(|operation-name, opernand-sorts*, resultant-sort , production) =
 		where (<debug-declaration> $[DeclareSDF | Storing Signature for following production: [<pp-aterm> production]])
-		//;enable-declaration-debugging
 		;available-opdecl*     := <getOperationSignatures>operation-name
 		;scoped-operation-name := <to-scoped-symbol>operation-name   
 		;if(
@@ -257,7 +256,6 @@
  		 				DeclareSignature | Debug-info: scoped-op-name [<pp-aterm>scoped-operation-name]. 
  		 			 ]
 		end
-		//;disable-declaration-debugging
 			
 	
 	create-opname2opdecl-mapping(|operation-name, resultant-sort , production): alt-sort -> alt-sort  

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Sun May 15 10:34:14 2011	(r22877)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Sun May 15 12:39:10 2011	(r22878)
@@ -66,7 +66,8 @@
     where
       x:= <get-rhs-sort-name>sort;
       qualified-sort-name := <to-scoped-symbol> x 
-   	with
+   	with
+   		enable-declaration-debugging;
   		<store-operation-declaration>prod
   	with
       <topdown(try(store-namespace-def))> lhs
@@ -85,7 +86,9 @@
       	<debug-declaration> $[DeclareSDF | Storing Declaration : [<pp-aterm>qualified-sort-name]  -> [<pp-aterm>prod]]
       )
     with
-      <alltd(declare-sdf-usage)> lhs 
+      <alltd(declare-sdf-usage)> lhs
+      ;disable-declaration-debugging
+		 
   
   store-namespace-def:
     namespacedef(name, sort) -> <id>

From M.A.Akhter at student.tudelft.nl  Sun May 15 14:57:42 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sun, 15 May 2011 12:57:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22879 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	analyze analyze/sdf analyze/str codegen/sdf context
	context/sdf context/str unit-tests
Message-ID: <20110515125742.7B0657F8065@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Sun May 15 12:57:41 2011
New Revision: 22879
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22879&sc=1

Log:
* moving few modules a bit to restructure

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/parse-adapter.str
      - copied, changed from r22877, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/parse-adapter.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/parse.str
      - copied unchanged from r22877, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/parse.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/parse.str
      - copied, changed from r22877, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/str/parse.str
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/parse-adapter.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/parse.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/str/parse.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Sun May 15 12:39:10 2011	(r22878)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Sun May 15 12:57:41 2011	(r22879)
@@ -15,7 +15,7 @@
 	include/SpoofaxLang
 imports
 	codegen/compile
-	analyze/str/parse
+	context/str/parse
 	codegen/main
 	codegen/generate
 	context/signatures

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/parse-adapter.str (from r22877, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/parse-adapter.str)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/parse-adapter.str	Sun May 15 10:34:14 2011	(r22877, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/parse-adapter.str	Sun May 15 12:57:41 2011	(r22879)
@@ -1,4 +1,4 @@
-module analyze/parse-adapter
+module context/parse-adapter
 
 imports
 	include/SpoofaxLang
@@ -7,8 +7,8 @@
 	lib/Configuration/SpoofaxConfiguration  
 	lib/editor-common.generated
 imports 
-	analyze/sdf/parse
-	analyze/str/parse
+	context/sdf/parse
+	context/str/parse
 	codegen/-
 imports
 	utils/path

Copied: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/parse.str (from r22877, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/parse.str)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/parse.str	Sun May 15 12:57:41 2011	(r22879, copy of r22877, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/parse.str)
@@ -0,0 +1,29 @@
+module analyze/sdf/parse
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-gpp
+	
+strategies
+
+  
+  parse-sdf-file =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(lib/SDF.tbl)>
+    )
+
+  
+  parse-sdf-string =
+    parse-string(
+      strsglr-report-parse-error
+    | <import-term(lib/SDF.tbl)>
+    )
+  
+  
+  parse-sdf-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(lib/SDF.tbl)>
+    )
\ No newline at end of file

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/parse.str (from r22877, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/str/parse.str)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/str/parse.str	Sun May 15 10:34:14 2011	(r22877, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/parse.str	Sun May 15 12:57:41 2011	(r22879)
@@ -1,4 +1,4 @@
-module analyze/str/parse 
+module context/str/parse 
 
 imports
   libstratego-lib

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str	Sun May 15 12:39:10 2011	(r22878)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/parse.str	Sun May 15 12:57:41 2011	(r22879)
@@ -3,7 +3,7 @@
 
 imports
 	common
-	analyze/parse-adapter
+	context/parse-adapter
 	lib/editor-common.generated
 	
 rules 

From L.C.L.Kats at tudelft.nl  Sun May 15 16:21:33 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sun, 15 May 2011 14:21:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22880 -
	strategoxt/trunk/stratego-libraries/sglr/lib/native
Message-ID: <20110515142133.BAC2B2B8078@mx2.tudelft.nl>

Author: LennartKats
Date: Sun May 15 14:21:33 2011
New Revision: 22880
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22880&sc=1

Log:
patch by Rob Economopoulos for StrategoXT/860

Modified:
   strategoxt/trunk/stratego-libraries/sglr/lib/native/position-info.c

Modified: strategoxt/trunk/stratego-libraries/sglr/lib/native/position-info.c
==============================================================================
--- strategoxt/trunk/stratego-libraries/sglr/lib/native/position-info.c	Sun May 15 12:57:41 2011	(r22879)
+++ strategoxt/trunk/stratego-libraries/sglr/lib/native/position-info.c	Sun May 15 14:21:33 2011	(r22880)
@@ -157,7 +157,13 @@
   }
   else if(isTreeAppl(t)) {
     ATermList args = traverseArgs((ATermList) ATgetArgument(t, 1), session);
+    ATermList annos = (ATermList) ATgetAnnotations(t);
+    if(annos == NULL) {
+      annos = ATempty;
+    }
+
     t = makeTreeAppl(ATgetArgument(t, 0), args);
+    t = ATsetAnnotations(t, (ATerm) annos);
   }
   else if (isTreeAmb(t)) {
     ATermList args = (ATermList) ATgetArgument(t, 0);

From L.C.L.Kats at tudelft.nl  Mon May 16 10:29:23 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 16 May 2011 08:29:23 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22881 -
	strategoxt-java-backend/trunk/java/runtime/org/strategoxt/lang/compat/sglr
Message-ID: <20110516082923.CFDC5108C058@mx3.tudelft.nl>

Author: LennartKats
Date: Mon May 16 08:29:23 2011
New Revision: 22881
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22881&sc=1

Log:
Spoofax/374: asfix-anno-location rewrite amb([..., ...]) to amb(...,...)

Modified:
   strategoxt-java-backend/trunk/java/runtime/org/strategoxt/lang/compat/sglr/STRSGLR_anno_location.java

Modified: strategoxt-java-backend/trunk/java/runtime/org/strategoxt/lang/compat/sglr/STRSGLR_anno_location.java
==============================================================================
--- strategoxt-java-backend/trunk/java/runtime/org/strategoxt/lang/compat/sglr/STRSGLR_anno_location.java	Sun May 15 14:21:33 2011	(r22880)
+++ strategoxt-java-backend/trunk/java/runtime/org/strategoxt/lang/compat/sglr/STRSGLR_anno_location.java	Mon May 16 08:29:23 2011	(r22881)
@@ -104,7 +104,7 @@
 		}
 
 		private IStrategoTerm makeTreeAmb(IStrategoTerm[] ts) {
-			return factory.makeAppl(amb, ts);
+			return factory.makeAppl(amb, factory.makeList(ts));
 		}
 
 		private int getTreeChar(IStrategoTerm tree) {

From L.C.L.Kats at tudelft.nl  Mon May 16 10:39:37 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 16 May 2011 08:39:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22882 -
	strategoxt-java-backend/trunk/java
Message-ID: <20110516083937.3CAD0108C064@mx3.tudelft.nl>

Author: LennartKats
Date: Mon May 16 08:39:36 2011
New Revision: 22882
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22882&sc=1

Log:
Possible workaround for IndexOutOfBoundsException (Spoofax/359)

Modified:
   strategoxt-java-backend/trunk/java/spoofax-libs.jar

Modified: strategoxt-java-backend/trunk/java/spoofax-libs.jar
==============================================================================
Binary file (source and/or target). No diff available.

From L.C.L.Kats at tudelft.nl  Mon May 16 10:53:29 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 16 May 2011 08:53:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22883 - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	dynamicloading services
Message-ID: <20110516085329.7D0E0CC181@mx4.tudelft.nl>

Author: LennartKats
Date: Mon May 16 08:53:29 2011
New Revision: 22883
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22883&sc=1

Log:
Workaround for Spoofax/364

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/BuilderFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/FoldingUpdater.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/BuilderFactory.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/BuilderFactory.java	Mon May 16 08:39:36 2011	(r22882)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/BuilderFactory.java	Mon May 16 08:53:29 2011	(r22883)
@@ -46,8 +46,12 @@
 
 		addBuilders(d, controller, builders, null);
 		addCustomStrategyBuilder(d, controller, builders, derivedFromEditor);
-		if (EditorState.isUIThread()) // don't show for background (realtime) builders; not threadsafe
-			addRefactorings(d, controller, builders);
+		try {
+			if (EditorState.isUIThread()) // don't show for background (realtime) builders; not threadsafe
+				addRefactorings(d, controller, builders);
+		} catch (RuntimeException e) { // defensive coding...
+			Environment.logException("Could not determine possible refactorings", e);
+		}
 		if (Environment.allowsDebugging(d)) // Descriptor allows debugging)
 		{
 			addDebugModeBuilder(d, controller, builders, derivedFromEditor);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/FoldingUpdater.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/FoldingUpdater.java	Mon May 16 08:39:36 2011	(r22882)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/FoldingUpdater.java	Mon May 16 08:53:29 2011	(r22883)
@@ -48,7 +48,7 @@
 				if (folding.getAttribute(constructor, sort, 0) != null) {
 					makeCompleteAnnotation(node);
 					// TODO: Fold node by default
-					Environment.logException("Folding annotation (folded) not implemented");
+					Environment.logWarning("Folding annotation (folded) not implemented");
 					break;
 				}
 			}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java	Mon May 16 08:39:36 2011	(r22882)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java	Mon May 16 08:53:29 2011	(r22883)
@@ -213,12 +213,11 @@
 							 // return the node furthest up the ancestor
 							 // chain
 		}
-		boolean isMatch = isMatchOnConstructorOrSort(mappings, selectionNode);
+		boolean isMatch = false;
 		while (!isMatch && selectionNode != null && selectionNode != getParent(ancestor)) {
-			selectionNode = getParent(selectionNode);
 			isMatch = isMatchOnConstructorOrSort(mappings, selectionNode);
+			selectionNode = getParent(selectionNode);
 		}
-		/* XXX: this makes no sense .. taking the constructor of a list? */
 		// Creates a sublist with single element.
 		// Usecase: extract refactoring is defined on a (sub)list (refactoring
 		// X+: ...) and should be applicable when only one X is selected

From m.dejonge at tudelft.nl  Mon May 16 12:21:22 2011
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 16 May 2011 10:21:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22884 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20110516102122.536C02B8050@mx2.tudelft.nl>

Author: MaartjeDeJonge
Date: Mon May 16 10:21:22 2011
New Revision: 22884
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22884&sc=1

Log:
bugfix 364

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java	Mon May 16 08:53:29 2011	(r22883)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java	Mon May 16 10:21:22 2011	(r22884)
@@ -213,15 +213,15 @@
 							 // return the node furthest up the ancestor
 							 // chain
 		}
-		boolean isMatch = false;
-		while (!isMatch && selectionNode != null && selectionNode != getParent(ancestor)) {
-			isMatch = isMatchOnConstructorOrSort(mappings, selectionNode);
+		boolean isMatch = isMatchOnConstructorOrSort(mappings, selectionNode);
+		while (!isMatch && selectionNode != getParent(ancestor)) {
 			selectionNode = getParent(selectionNode);
+			isMatch = isMatchOnConstructorOrSort(mappings, selectionNode);
 		}
 		// Creates a sublist with single element.
 		// Usecase: extract refactoring is defined on a (sub)list (refactoring
 		// X+: ...) and should be applicable when only one X is selected
-		if (!isMatch && !ancestor.isList() && getParent(ancestor).isList()) {
+		if (!isMatch && !ancestor.isList() && getParent(ancestor) != null && getParent(ancestor).isList()) {
 			selectionNode = StrategoSubList.createSublist((IStrategoList) getParent(ancestor),
 					ancestor, ancestor, true);
 			isMatch = isMatchOnConstructorOrSort(mappings, selectionNode);

From tobivollebregt at gmail.com  Mon May 16 14:44:40 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 16 May 2011 12:44:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22885 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.template
	org.strategoxt.imp.editors.template.test
	org.strategoxt.imp.editors.template/trans
Message-ID: <20110516124440.A79B3CC29D@mx4.tudelft.nl>

Author: tvo
Date: Mon May 16 12:44:40 2011
New Revision: 22885
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22885&sc=1

Log:
Fix some issues wrt newline handling
Update of generated code

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/build.generated.xml	Mon May 16 10:21:22 2011	(r22884)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/build.generated.xml	Mon May 16 12:44:40 2011	(r22885)
@@ -19,9 +19,12 @@
         <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
             <isset property="externaldef"/>
         </condition>
-        <condition property="externaljarimport" value=":${externaljar}" else="">
+        <condition property="externaljarimport1" value=":${externaljar}" else="">
             <isset property="externaljar"/>
         </condition>
+        <condition property="externaljarimport2" value=":${externaljarx}" else="">
+            <isset property="externaljarx"/>
+        </condition>
         <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
             <isset property="eclipse.running"/>
         </condition>
@@ -378,7 +381,7 @@
                 <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
                 <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
             </antcall>
-            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <!-- copy imported terms -->
             <copy todir="${build}/trans">
                 <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
@@ -489,9 +492,9 @@
 	        <javac destdir="${build}" source="1.5" target="1.5" debug="on">
 	    		<!-- attribute in javac: srcdir="${src-gen}" -->
 	    		<src path="${src-gen}"/>
-	        	<!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"  -->
+	        	<!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"  -->
 	        	<classpath>
-	        		<pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+	        		<pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
 	        		<pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
 	        		<pathelement location="utils/stratego-debug-runtime-java.jar"/>
 	        	</classpath>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.generated.xml	Mon May 16 10:21:22 2011	(r22884)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.generated.xml	Mon May 16 12:44:40 2011	(r22885)
@@ -19,9 +19,12 @@
         <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
             <isset property="externaldef"/>
         </condition>
-        <condition property="externaljarimport" value=":${externaljar}" else="">
+        <condition property="externaljarimport1" value=":${externaljar}" else="">
             <isset property="externaljar"/>
         </condition>
+        <condition property="externaljarimport2" value=":${externaljarx}" else="">
+            <isset property="externaljarx"/>
+        </condition>
         <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
             <isset property="eclipse.running"/>
         </condition>
@@ -378,7 +381,7 @@
                 <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
                 <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
             </antcall>
-            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <!-- copy imported terms -->
             <copy todir="${build}/trans">
                 <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
@@ -489,9 +492,9 @@
 	        <javac destdir="${build}" source="1.5" target="1.5" debug="on">
 	    		<!-- attribute in javac: srcdir="${src-gen}" -->
 	    		<src path="${src-gen}"/>
-	        	<!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"  -->
+	        	<!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"  -->
 	        	<classpath>
-	        		<pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+	        		<pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
 	        		<pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
 	        		<pathelement location="utils/stratego-debug-runtime-java.jar"/>
 	        	</classpath>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Mon May 16 10:21:22 2011	(r22884)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Mon May 16 12:44:40 2011	(r22885)
@@ -96,14 +96,28 @@
     with
       <alltd(declare-use)> part*
 
+  sort-has-leading-newline =
+    bagof-Template;
+    ?[_|_];
+    all(?TemplateProduction(_, Template([Newline(_)| _]), _))
+
+  sort-has-trailing-newline =
+    bagof-Template;
+    ?[_|_];
+    let trailing-newline =
+          at-suffix([Newline(id), ?Layout(_) + ?Indent(_)] <+ [Newline(id)])
+    in
+      all(?TemplateProduction(_, Template(<trailing-newline>), _))
+    end
+
   declare-placeholders =
-       ?[Newline(_), Layout(_), Placeholder(_, _, _, _), Newline(_) | _];
+       ?[Newline(_), Layout(_), Placeholder(_, _, _, _){}, Newline(_) | _];
        [add-anno(|Leading()), id, add-anno(|Blank()), add-anno(|Trailing()) | id];
        [id, id, id | declare-placeholders]
-    <+ ?[Newline(_), Placeholder(_, _, _, _), Newline(_) | _];
+    <+ ?[Newline(_), Placeholder(_, _, _, _){}, Newline(_) | _];
        [add-anno(|Leading()), add-anno(|Blank()), add-anno(|Trailing()) | id];
        [id, id | declare-placeholders]
-    <+ ?[Placeholder(_, Sort(x), _, _) | _];
+    <+ ?[Placeholder(_, Sort(x), _, _){} | _];
        [id | declare-placeholders];
        rules(CanNotBeBlank :+ x -> x)
     <+ ?[_ | _];

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str	Mon May 16 10:21:22 2011	(r22884)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str	Mon May 16 12:44:40 2011	(r22885)
@@ -66,6 +66,20 @@
                                 A* -/- [A-Za-z0-9\_] ]|]
         end
       end;
+      // rejections
+      // let is-identifier-ish =
+      //       where(explode-string; un-double-quote-chars; all(is-alphanum))
+      //     to-rejection =
+      //       \L -> p|[ L -> ID {reject} ]|\
+      // in
+      //   p2* := <collect-om(?lit(<is-identifier-ish>));
+      //           nub; string-sort-ex; map(to-rejection)> p*;
+      //   if !p2* => [] then
+      //     rejection* := []
+      //   else
+      //     rejection* := [|[ context-free syntax p2* ]|]
+      //   end
+      // end;
       // SDF grammars
       // (each one is put in a separate `exports' section because SDF doesn't
       //  use a flat list for the grammars within a section, but a tree...)
@@ -111,34 +125,79 @@
   template-element-to-sdf:
     String(x) -> <string-to-sdf> x
 
+  // Insert "\n" into generated grammar whenever
+  // 1) leading or trailing newlines is enabled
+  // 2) the sort itself does not contain a leading resp. trailing newline
+  // 3) the placeholder is on its own on the line
   template-element-to-sdf:
+    p@ Placeholder(_, Sort(sort), None(), _){Blank()} -> t'
+    with
+      t := <placeholder-to-sdf> p;
+      t' := <newlines-switch(id,
+        if not(<sort-has-leading-newline> sort) then
+          ?A; !A|[ ("\\n" A) ]|
+        end,
+        if not(<sort-has-trailing-newline> sort) then
+          ?A; !A|[ (A "\\n") ]|
+        end
+      )> t
+
+  // FIXME: generates suboptimal SDF (bad AST)
+  template-element-to-sdf:
+    p@ Placeholder(_, Sort(sort), <?Plus() + ?Star() + ?Option()>, _){Blank()} -> t'
+    with
+      t := <placeholder-to-sdf> p;
+      t' := <newlines-switch(id,
+        if not(<sort-has-leading-newline> sort) then
+          ?A; !A|[ ("\\n" A)? ]|
+        end,
+        if not(<sort-has-trailing-newline> sort) then
+          ?A; !A|[ (A "\\n")? ]|
+        end
+      )> t
+
+  template-element-to-sdf:
+    Placeholder(_, _, _, _){} -> <placeholder-to-sdf>
+
+  placeholder-to-sdf:
     Placeholder(_, Sort(S'), None(), _) -> A|[ S' ]|
 
   // TODO: this needs improvement, too much duplication and not readable enough
 
-  template-element-to-sdf:
+  placeholder-to-sdf:
     Placeholder(_, Sort(S), Star(), Options(option*)) -> A|[ S* ]|
     where <not(one(Separator(not(all-whitespace))))> option*
 
-  template-element-to-sdf:
+  placeholder-to-sdf:
     Placeholder(_, Sort(S), Star(), Options(option*)) -> A|[ { S L }* ]|
     where <one(Separator(not(all-whitespace)))> option*
     with L := <separator-to-literal> option*
 
-  template-element-to-sdf:
+  placeholder-to-sdf:
     Placeholder(_, Sort(S), Plus(), Options(option*)) -> A|[ S+ ]|
     where <not(one(Separator(not(all-whitespace))))> option*
 
-  template-element-to-sdf:
+  placeholder-to-sdf:
     Placeholder(_, Sort(S), Plus(), Options(option*)) -> A|[ { S L }+ ]|
     where <one(Separator(not(all-whitespace)))> option*
     with L := <separator-to-literal> option*
 
-  all-whitespace = string-as-chars(all(' ' + '\t' + '\r' + '\n'))
-  remove-whitespace = string-as-chars(filter(not(' ' + '\t' + '\r' + '\n')))
-  separator-to-literal = !lit(<collect-one(?Separator(<remove-whitespace>)); escape; double-quote>)
+  // name conflicts with is-whitespace from the library
+  xxx-is-whitespace =
+    // if use-no-newlines then
+      ' ' + '\t' + '\r' + '\n'
+    // else
+    //   ' ' + '\t' + '\r'
+    // end
 
-  template-element-to-sdf:
+  all-whitespace = string-as-chars(all(xxx-is-whitespace))
+
+  remove-whitespace = string-as-chars(filter(not(xxx-is-whitespace)))
+
+  separator-to-literal =
+    !lit(<collect-one(?Separator(<remove-whitespace>)); escape; double-quote>)
+
+  placeholder-to-sdf:
     Placeholder(_, Sort(S'), Option(), _) -> A|[ S'? ]|
 
   sort-to-contentcomplete:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Mon May 16 10:21:22 2011	(r22884)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Mon May 16 12:44:40 2011	(r22885)
@@ -18,7 +18,6 @@
 
         pp-option(s) = \None() -> ""\ + \Some(t) -> <s> t\
         pp-list(s|t) = map(s); separate-by(|t); concat-strings
-        pp-list(s)   = map(s); concat-strings
 
         [ih]
 
@@ -41,13 +40,15 @@
     with
       ih := <newlines-switch(
         // No newlines: need to prepend a newline+indent if the string is non-empty.
-        // pp-blank is used when there is no indent before the placeholder.
         !$[// ih = indent helper, t = indent string (including "\n")
-           pp-ih(|t) = "" <+ string-replace(|"\n", t); <conc-strings> (t, <id>)
-           pp-blank  = "" <+ <conc-strings> ("\n", <id>)],
+           pp-ih(|t) = "" <+ string-replace(|"\n", t); <conc-strings> (t, <id>)],
         // Leading newlines: easy, since indent is (per definition) also leading.
         !$[// ih = indent helper, t = indent string (including "\n")
-           pp-ih(|t) = string-replace(|"\n", t)],
+           pp-ih(|t) = "" <+
+             string-replace(|"\n", t);
+             if not(string-starts-with(|t)) then
+               <conc-strings> (t, <id>)
+             end],
         // Trailing newlines: harder, since indent and newline are separated.
         !$[// ih = indent helper, t = indent string (excluding "\n")
            pp-ih(|t) = "" <+ all-lines(<conc-strings>(t, <id>))]
@@ -116,22 +117,17 @@
     Placeholder(_, Sort(_){name}, _, _) -> name
 
   template-element-to-stratego =
-    // No/leading newlines.
+    newlines-switch(
+      // No newlines
       \[Newline(_), Indent(indent), Placeholder(_, Sort(_){name}, _, _){Blank()} | tail] ->
-        [$[<pp-ih(|"\n[indent]")> [name]'] | tail] where not(use-trailing-newlines)\
-    <+
-      \[Newline(_), Placeholder(_, Sort(_){name}, _, _){Blank()} | tail] ->
-        [$[<pp-blank> [name]'] | tail] where use-no-newlines\
-    <+
-      \[Newline(_), Placeholder(_, Sort(_){name}, _, _){Blank()} | tail] ->
-        [$[[name]'] | tail] where use-leading-newlines\
-    // Trailing newlines.
-    <+
+        [$[<pp-ih(|"\n[indent]")> [name]'] | tail]\,
+      // Leading newlines
+      \[Newline(_), Indent(indent), Placeholder(_, Sort(_){name}, _, _){Blank()} | tail] ->
+        [$[<pp-ih(|"\n[indent]")> [name]'] | tail]\,
+      // Trailing newlines
       \[Indent(indent), Placeholder(_, Sort(_){name}, _, _){Blank()}, Newline(_) | tail] ->
-        [$[<pp-ih(|"[indent]")> [name]'] | tail] where use-trailing-newlines\
-    <+
-      \[Placeholder(_, Sort(_){name}, _, _){Blank()}, Newline(_) | tail] ->
-        [$[[name]'] | tail] where use-trailing-newlines\
+        [$[<pp-ih(|"[indent]")> [name]'] | tail]\
+    )
     // Anything else.
     <+
       [template-element-to-stratego' | id]
@@ -154,7 +150,7 @@
       if sep := <collect-one(?Separator(<id>))> opt* then
         t := $[[name]' := <pp-list(prettyprint-[x]|"[<escape> sep]")> [name]]
       else
-        t := $[[name]' := <pp-list(prettyprint-[x])> [name]]
+        t := $[[name]' := <pp-list(prettyprint-[x]|" ")> [name]]
       end
 
   template-element-to-assignment:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Mon May 16 10:21:22 2011	(r22884)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Mon May 16 12:44:40 2011	(r22885)
@@ -25,18 +25,17 @@
     x{a*} -> <id>
     where <one(?anno)> a*
 
+  // is-layout is already defined somewhere else
+  xxx-is-layout = ?Layout(_) + ?Indent(_) + ?Newline(_)
+
   trim-leading-layout =
-    repeat(  \[Layout(_)  | tail] -> tail\
-           + \[Indent(_)  | tail] -> tail\
-           + \[Newline(_) | tail] -> tail\ )
+    ltrim(xxx-is-layout)
 
   trim-trailing-layout =
-    listbu(   \[Layout(_)]  -> []\
-           <+ \[Indent(_)]  -> []\
-           <+ \[Newline(_)] -> []\ <+ id)
+    rtrim(xxx-is-layout)
 
   trim-trailing-indent =
-    listbu(\[Indent(_)]  -> []\ <+ id)
+    rtrim(?Indent(_))
 
   trim-layout =
     trim-leading-layout;
@@ -72,11 +71,7 @@
       // Add a newline because indent-string contains a newline as anchor.
       indent' := <string-replace(|indent-string, "")> <conc-strings>("\n", indent);
       tail' := <re-indent(|indent-string)> tail;
-      if !indent' => "" then
-        result := [Newline("\n") | tail']
-      else
-        result := [Newline("\n"), Indent(indent') | tail']
-      end\
+      result := [Newline("\n"), Indent(indent') | tail']\
   <+
     \[head | tail] -> [head | <re-indent(|indent-string)> tail]\
   <+

From tobivollebregt at gmail.com  Mon May 16 16:28:06 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 16 May 2011 14:28:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22886 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans
Message-ID: <20110516142806.17BDBCC1FA@mx4.tudelft.nl>

Author: tvo
Date: Mon May 16 14:28:05 2011
New Revision: 22886
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22886&sc=1

Log:
tweaks

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str	Mon May 16 12:44:40 2011	(r22885)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str	Mon May 16 14:28:05 2011	(r22886)
@@ -39,8 +39,7 @@
     with
       part*  := <template-elements-to-completion-parts> e*;
       anno   := <template-sort-to-anno> sort;
-      if !part* => [PlaceholderWithSort(_, _) | _] then
-        prefix := <collect-one(?sdf-cons(<id>))> attr*;
+      if prefix := <collect-one(?sdf-cons(<id>))> attr* then
         t := |[ completion template ~sort : ~prefix = ~*part* ~anno ]|
       else
         t := |[ completion template ~sort : ~*part* ~anno ]|

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str	Mon May 16 12:44:40 2011	(r22885)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str	Mon May 16 14:28:05 2011	(r22886)
@@ -63,7 +63,7 @@
           restriction* := []
         else
           restriction* := [|[ lexical restrictions
-                                A* -/- [A-Za-z0-9\_] ]|]
+                                A* -/- [A-Za-z0-9\_\-] ]|]
         end
       end;
       // rejections

From tobivollebregt at gmail.com  Mon May 16 16:38:18 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 16 May 2011 14:38:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22887 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20110516143818.E8D3C108C075@mx3.tudelft.nl>

Author: tvo
Date: Mon May 16 14:38:18 2011
New Revision: 22887
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22887&sc=1

Log:
Fix display of arguments in e.g. Stratego editor

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/Completion.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/Completion.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/Completion.java	Mon May 16 14:28:05 2011	(r22886)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/Completion.java	Mon May 16 14:38:18 2011	(r22887)
@@ -57,9 +57,8 @@
 	}
 
 	public static Completion makeSemantic(IStrategoList completionParts, String description) {
-		final String prefix = ((IStrategoString) completionParts.head()).stringValue();
 		final LazyColor color = completionParts.size() == 1 ? identifierColor : null; // identifier proposal?
-		return new Completion(prefix, null, completionParts, SEMANTIC, description, color);
+		return new Completion(null, null, completionParts, SEMANTIC, description, color);
 	}
 
 	private final String prefix;
@@ -78,6 +77,7 @@
 
 	private final LazyColor color;
 
+	// prefix overrides the default prefix (calculated from newTextParts)
 	protected Completion(String prefix, String sort, IStrategoList newTextParts, int flags, String description, LazyColor color) {
 		this.prefix = prefix != null ? prefix : getPrefix(newTextParts);
 		this.sort = sort;
@@ -91,7 +91,8 @@
 
 	private static String getPrefix(IStrategoList completionParts) {
 		IStrategoTerm prefixTerm = completionParts.head();
-		boolean noPrefix = !"String".equals(cons(prefixTerm));
+		boolean noPrefix = prefixTerm.getTermType() != IStrategoTerm.STRING
+				&& !"String".equals(cons(prefixTerm));
 		return noPrefix ? "" : termContents(prefixTerm);
 	}
 

From M.A.Akhter at student.tudelft.nl  Mon May 16 19:28:12 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Mon, 16 May 2011 17:28:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22888 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	codegen codegen/esv context/sdf editor
Message-ID: <20110516172812.88F72CC201@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Mon May 16 17:28:12 2011
New Revision: 22888
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22888&sc=1

Log:
By default adding include\lang-name.tbl in the esv definition.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/editor/main.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str	Mon May 16 14:38:18 2011	(r22887)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str	Mon May 16 17:28:12 2011	(r22888)
@@ -535,7 +535,9 @@
       <delete dir="${src-gen}/trans"/>
 		</target>
 	
-	  <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+	  <!-- <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/> -->
+	  
+	  <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse"/>
 	        
 		<target name="sdf2imp.eclipse" if="eclipse.running" >
 			<copy file="${packages.root}/${package.main.esv.module}.esv" tofile="${include}/${package.name}.packed.esv" preservelastmodified="true"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Mon May 16 14:38:18 2011	(r22887)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Mon May 16 17:28:12 2011	(r22888)
@@ -49,7 +49,9 @@
 						
  						<map(get-original-module-declaration;store-esv-defintions)>module-qname*
  						;sections := <conc>
- 						 					(<add-package-ctree><get-main-file-name>(),   // adding ctree import by default
+ 						 					(
+ 						 					 <inject-package-ctree><get-main-file-name>(),   // adding ctree import by default
+ 						 					 <inject-table-definition><get-main-file-name>(),   // default table definition
  						 					 <all-keys-Declared-Language-Description>, 
  			 								 <all-keys-Declared-Builders-Description> ,  
  			 								 <all-keys-Declared-Colorer-Description> , 
@@ -65,18 +67,21 @@
 			<debug-compiler>$[ Codegen | ESV | Finished generation of packed esv for [<pp-aterm>package-qname].]
 		 		
 	
-	/*
-	* Adding package ctree as the default semantic provider0
-	* 
-	* @type packagename -> default semantic provider 
-	*/
-	add-package-ctree : lang-name -> [SemanticProvider(lang-output-ctree)] // TODO : get main package ctree
+	//Adding package ctree as the default semantic provider0
+	inject-package-ctree : 
+		lang-name -> [Builders("",[SemanticProvider(lang-output-ctree)])]  
 		where 
 				lang-output-ctree := $[include/[lang-name].ctree]
 	
-	/*
-	* Returns all the imports for the current namespace. 
-	*/
+	
+	// Injects the default table definition in ESV definition.
+	inject-table-definition : 
+		lang-name -> [Language("Default Table Specifiactio" , [default-table-def])]
+		where
+			default-table-def := Table($[include/[lang-name].tbl])
+			
+	
+	//Returns all the imports for the current namespace.
  	get-all-imports = 
  		?mod-qname*
  		;import-decl* := <map(to-esv-import) ; flatten-list ;	make-set> mod-qname*
@@ -106,12 +111,14 @@
 		 with
 		 	<alltd(store-esv-def)> section* 
  
- 	/**
- 	* Storing Esv Definitions that specifies Langauge 
- 	*/
- 	store-esv-def : l at Language(_,_) -> l
+ 	
+ 	// Storing Esv Definitions that specifies Langauge 
+ 	store-esv-def : 
+ 		l at Language(_,properties*) -> l
  		with 
  			rules ( Declared-Language-Description :+ l -> l)
+ 		
+ 			 	 
  	
  	/**
  	* Storing Esv Definitions that specifies the builders for the 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Mon May 16 14:38:18 2011	(r22887)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Mon May 16 17:28:12 2011	(r22888)
@@ -67,7 +67,7 @@
       x:= <get-rhs-sort-name>sort;
       qualified-sort-name := <to-scoped-symbol> x 
    	with
-   		enable-declaration-debugging;
+   //		enable-declaration-debugging;
   		<store-operation-declaration>prod
   	with
       <topdown(try(store-namespace-def))> lhs
@@ -87,7 +87,7 @@
       )
     with
       <alltd(declare-sdf-usage)> lhs
-      ;disable-declaration-debugging
+     // ;disable-declaration-debugging
 		 
   
   store-namespace-def:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/editor/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/editor/main.str	Mon May 16 14:38:18 2011	(r22887)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/editor/main.str	Mon May 16 17:28:12 2011	(r22888)
@@ -10,15 +10,29 @@
 	utils/cache	
 	utils/debug
 rules
-	//editor-resolve 
-	
-	
-rules
-	//editor-complete 
+	// Resolves a reference when the user control-clicks or presses F3 in the editor.
+  editor-resolve:
+    (node, position, ast, path, project-path) -> elem
+    where 
+    	<id> node => elem
+    		 
+    	
+  // Returns "hover help" information for a particular node in the editor.
+  // For references, this rule is invoked using the resolved term.
+  editor-hover:
+    (target, position, ast, path, project-path) -> $[Hover help: [<write-to-string> target]]
+
+
+  // Completes an identifier when the user presses control-space
+  // (the completion identifier in the AST provides additional context information)
+  editor-complete:
+    (node, position, ast, path, project-path) ->[]
+  
 
 rules
 	//editor-analyze	
- 	editor-analyze: (ast, path, project-path) -> (ast, errors, warnings, infos) // TODO : ast -> get the analyzed AST 
+ 	editor-analyze: 
+ 		(ast, path, project-path) -> (ast, errors, warnings, infos) // TODO : ast -> get the analyzed AST 
     with 
 			editor-init
 		with

From M.A.Akhter at student.tudelft.nl  Mon May 16 19:40:01 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Mon, 16 May 2011 17:40:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22889 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test-lang
Message-ID: <20110516174001.281B57F80B3@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Mon May 16 17:40:00 2011
New Revision: 22889
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22889&sc=1

Log:
spx-entitylanguage example 1

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test-lang/
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test-lang/common.spx
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test-lang/editorservices.spx
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test-lang/entitylang.spx
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test-lang/languagedescription.spx
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test-lang/test.tent

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test-lang/common.spx
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test-lang/common.spx	Mon May 16 17:40:00 2011	(r22889)
@@ -0,0 +1,46 @@
+package language.entitylang
+
+	module Common
+  
+	  lexical syntax
+	  
+	    [a-zA-Z][a-zA-Z0-9]* -> ID
+	    "-"? [0-9]+          -> INT
+	    
+	    "\"" StringChar* "\"" -> STRING
+	    ~[\"\n]               -> StringChar 
+	    "\\\""                -> StringChar
+	    BackSlashChar         -> StringChar
+	    "\\"                  -> BackSlashChar 
+	    
+	    [\ \t\n\r] -> LAYOUT
+	    
+	    [\*]                             -> CommentChar
+	    "/*" (~[\*] | CommentChar)* "*/" -> LAYOUT
+	    "//" ~[\n\r]* ([\n\r] | EOF)     -> LAYOUT   
+	    
+	    -> EOF
+	  
+	 lexical restrictions
+  
+	    //Ensure greedy matching for lexicals
+	  
+	    CommentChar   -/- [\/]
+	    INT           -/- [0-9]
+	    ID            -/- [a-zA-Z0-9\_]
+	    
+	    //EOF may not be followed by any char
+	    
+	    EOF           -/- ~[]
+	
+	    //Backslash chars in strings may not be followed by " 
+	    
+	    BackSlashChar -/- [\"]
+
+	  context-free restrictions
+  
+  		  //Ensure greedy matching for comments
+
+		    LAYOUT? -/- [\ \t\n\r]
+		    LAYOUT? -/- [\/].[\/]
+		    LAYOUT? -/- [\/].[\*]
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test-lang/editorservices.spx
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test-lang/editorservices.spx	Mon May 16 17:40:00 2011	(r22889)
@@ -0,0 +1,80 @@
+package language.entitylang
+
+module codecompletion 
+	completions
+	  completion proposer                  : editor-complete
+	  completion trigger                   : ":"
+
+
+module commonsyntax  
+	
+	language Syntax properties (static defaults)
+	                                           
+	  // Comment constructs:                   
+	  line comment                           : "//"
+	  block comment                          : "/*" * "*/"
+	                                           
+	  // Fences (used for matching,            
+	  // inserting, indenting brackets):       
+	  fences                                 : [ ]
+	                                           ( )
+	                                           { }
+	                                           
+	  // Automatic indent hints                
+	  // (indent after these tokens):          
+	  indent after                           : "="
+	                                           ":"
+	                                           
+	  // Regular expression for identifiers:   
+	  identifier lexical                     : "[A-Za-z0-9_]+"
+  
+
+
+
+module colorer
+
+	colorer Default, token-based highlighting
+	                                  
+	  keyword    : 127 0 85 bold      
+	  identifier : default            
+	  string     : blue               
+	  number     : darkgreen          
+	  var        : 255 0 100 italic   
+	  operator   : 0 0 128            
+	  layout     : 63 127 95 italic   
+
+	colorer System colors
+	                            
+	  darkred   = 128 0 0       
+	  red       = 255 0 0       
+	  darkgreen = 0 128 0       
+	  green     = 0 255 0       
+	  darkblue  = 0 0 128       
+	  blue      = 0 0 255       
+	  cyan      = 0 255 255     
+	  magenta   = 255 0 255     
+	  yellow    = 255 255 0     
+	  white     = 255 255 255   
+	  black     = 0 0 0         
+	  gray      = 128 128 128   
+	  grey      = gray          
+	  orange    = 255 165 0     
+	  pink      = 255 105 180   
+	  brown     = 139 69 19     
+	  default   = _            
+  
+
+
+module outliner
+
+	outliner Default outliner        
+	  Start.Module
+	  Definition.Entity
+	
+
+
+module folding
+
+	folding Default folding definitions
+	  Start.Module
+	  Definition.Entity
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test-lang/entitylang.spx
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test-lang/entitylang.spx	Mon May 16 17:40:00 2011	(r22889)
@@ -0,0 +1,56 @@
+package language.entitylang 
+
+module entitydefinition
+
+  context-free start-symbols
+    Start 
+
+  context-free syntax 
+  
+    "module" ID Definition*       -> Start {cons("Module")}
+    "entity" ID "{" Property* "}" -> Definition {cons("Entity")}
+    ID ":" Type                   -> Property {cons("Property")}
+    ID                            -> Type {cons("Type")} 
+
+	
+module languagebuilders 
+		builders
+	  	observer : editor-analyze         	                                                                          
+	    builder  : "Show abstract syntax (for selection)" = generate-aterm (openeditor) (realtime) (meta) (source)
+	 	
+	 	references
+    	reference _ : editor-resolve
+  		hover _     : editor-hover
+	 	
+	 	rules
+	 		 
+  		// Prints the abstract syntax ATerm of a selection.
+  		generate-aterm:
+    		(selected, position, ast, path, project-path) -> (filename, result)
+    		with
+      		filename := <guarantee-extension(|"aterm")> path;
+      		result   := selected // we just return the input term
+      		
+	 		 editor-analyze:
+    		(ast, path, project-path) -> (ast, errors, warnings, notes)
+    		with
+     			errors   := []; 
+      	 	warnings := [];
+      		notes    := []
+      			 	  
+		  // Resolves a reference when the user control-clicks or presses F3 in the editor.
+	  	editor-resolve:
+	    	(node, position, ast, path, project-path) -> elem
+	    	where 
+	    		<id> node => elem
+	    		 
+      // Returns "hover help" information for a particular node in the editor.
+		  // For references, this rule is invoked using the resolved term.
+		  editor-hover:
+		    (target, position, ast, path, project-path) -> $[Hover help: [<write-to-string> target]]
+		
+		
+		  // Completes an identifier when the user presses control-space
+		  // (the completion identifier in the AST provides additional context information)
+		  editor-complete:
+		    (node, position, ast, path, project-path) ->[]
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test-lang/languagedescription.spx
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test-lang/languagedescription.spx	Mon May 16 17:40:00 2011	(r22889)
@@ -0,0 +1,17 @@
+package language.entitylang 
+
+module languagedescription
+	
+	language General properties
+                  
+	  name          : entitylang
+	  id            : entitylang
+	  extends       : Root
+	                  
+	  description   : "Spoofax/IMP-generated editor for the Test language"
+	  url           : http://strategoxt.org
+	                  
+	  extensions    : tent 
+	  start symbols : Start 
+   
+

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test-lang/test.tent
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test-lang/test.tent	Mon May 16 17:40:00 2011	(r22889)
@@ -0,0 +1,18 @@
+module example
+
+// Example "Test" program (see syntax/Test.sdf for the grammar)
+
+entity User {
+  name     : String
+  password : String
+  homepage : URL
+}
+
+entity BlogPosting {
+  poster : User
+  body   : String
+}
+
+entity URL {
+  location : String
+}
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Mon May 16 19:42:05 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Mon, 16 May 2011 17:42:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22890 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize
Message-ID: <20110516174205.C28492B8021@mx2.tudelft.nl>

Author: MdAdilAkhter
Date: Mon May 16 17:42:05 2011
New Revision: 22890
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22890&sc=1

Log:
* added comments. restructured code a bit

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str	Mon May 16 17:40:00 2011	(r22889)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str	Mon May 16 17:42:05 2011	(r22890)
@@ -48,8 +48,8 @@
 			rules(
 				PackageCommonImports:+ _ -> i
 			)
-	
-	
+			
+rules	
 	
 	desugar-spx-package:
 		Package(Name(package-name) , modules* ) -> normalized-package-definition
@@ -59,6 +59,7 @@
 			!QName([package-name]) 																=> package-qname;
 			<desugar-spx-package>Package(package-qname, modules*) => normalized-package-definition 
 		
+	
 	desugar-spx-package:	
 		p at Package(package-qname , modules* ) -> modifiedPackageDescription
 		with
@@ -77,7 +78,7 @@
 		where
 			<store-package-abspath>(package-qname ,package-abs-path)
 		
-		/* seems not needed at this moment. hence, commenting this code.
+		/* it seems not to be needed at this moment. hence, commenting this code.
 		where
 			if <get-package-declaration> package-qname => Package(package-qname, module-def*) then
 				modifiedPackageDescription' 						 := Package(package-qname, <conc>(module-def* , desugared-modules*))
@@ -86,7 +87,9 @@
 			end;
 			<store-declaration(|Packages())>	(package-qname,  modifiedPackageDescription')
 		*/	
-	
+
+rules
+		
 	desugar-spx: 
 		m at Module(attrb* , modname , section*) -> modifiedModuleDescription
 		with 
@@ -114,16 +117,21 @@
 			<store-module-abspath> (enclosing-module-qname, package-abs-path);
 			<store-declaration(|Modules())>(enclosing-module-qname,  modifiedModuleDescription);
 			<store-scope-reference>(Module(enclosing-module-qname),  package);
-			<store-original-declaration(|Modules())>(enclosing-module-qname,  m) // stored original ast 
-
+			<store-original-declaration(|Modules())>(enclosing-module-qname,  m) // also storing original AST. 
+rules
+	
 	//Desugaring SDF Sections 
 	desugar-spx : SDFSection ( sectionDef ) -> <add-annotation(|<EnclosingNamespace>)> <id>
 	
+	desugar-spx : SDFSectionEH ( _, sectionDef ) -> <add-annotation(|<EnclosingNamespace>)> <id>
+
+rules	
 	//Desugarting STR sections 
 	desugar-spx : STRSection ( sectionDef ) -> <add-annotation(|<EnclosingNamespace>)> STRSection ( sectionDef' )
 		with 
 			<basic-stratego-desugar-top> sectionDef => sectionDef'  		
-	
+
+rules	
 	//Desugaring ESV Sections 
 	desugar-spx : ESVSection ( sectionDef ) -> <add-annotation(|<EnclosingNamespace>)> <id>
 		with

From M.A.Akhter at student.tudelft.nl  Mon May 16 22:32:09 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Mon, 16 May 2011 20:32:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22891 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	codegen context normalize
Message-ID: <20110516203209.3620E108C04F@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Mon May 16 20:32:08 2011
New Revision: 22891
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22891&sc=1

Log:
configuring buildscipts.str to turn on java.jar where-ever possible. This decision has been taken based on LanguageId specified in language description.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str	Mon May 16 17:42:05 2011	(r22890)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str	Mon May 16 20:32:08 2011	(r22891)
@@ -76,17 +76,20 @@
 	
 	<target name="[package-target-name]">
 		<property name="package.path" location="[package-directory]"/>
+		<property name="lang.id.specific.directoy" value="[language-id-directory]"/>
 		<property name="package.name" value="[language-name]"/>
 		<property name="package.qname" value="[package-qname-string]"/>
 		<property name="package.main.sdf.module" value="[language-name]"/>
 		<property name="package.main.str.module" value="[language-name]"/>
 		<property name="package.main.esv.module" value="[language-name].main"/>
-		<property name="metasdfmodule" value="Stratego-[language-name]"/> 
+		<property name="metasdfmodule" value="Stratego-[language-name]"/>
+		 
 		
 		<antcall target = "spx.default">
 		  <param name = "package.name"  value = "${package.name}"/>
 		  <param name = "package.qname"  value = "${package.qname}"/>
-		  <param name = "package.path"  value = "${package.path}"/>
+		  <param name = "package.path"  value = "${package.path}"/>
+		  <param name = "lang.id.specific.directoy"  value = "${lang.id.specific.directoy}"/>
 		 	<param name = "package.main.sdf.module" value = "${package.main.sdf.module}"/>
 			<param name = "package.main.str.module" value = "${package.main.str.module}"/>
 		 	<param name = "package.main.esv.module" value = "${package.main.esv.module}"/>
@@ -98,10 +101,12 @@
 		 relative-autogen-path      := <qname-to-path>package-untyped-qname
 		;package-directory		      := $[[<Autogenerated-Artifacts-Dir>]/[relative-autogen-path]]
  		;language-name							:= <get-language-name>p
+ 		;language-id-directory			:= <get-language-id; language-id-to-file-path>p
  		;package-target-name				:= <get-package-target-name>package-untyped-qname  
  		;package-qname-string				:=  <convert-qname(|".");string-replace(|"-", ".")>package-untyped-qname
 
-
+rules
+	
 	get-package-target-name : 
 		Package(q at QName(qname-parts*)) -> $[build.package.[package-qname-str]]
 		where
@@ -111,7 +116,16 @@
 		package-qname at QName(qname-parts*) -> $[build.package.[package-qname-str]]
 		where
 			package-qname-str					:= 	<convert-qname(|".")>package-qname
-		
+
+	language-id-to-file-path =
+			where(is-string);
+			string-tokenize(|<explode-string>".");
+			separate-by(|"/");
+			concat-strings
+			
+		
+rules
+			
 	get-ant-autogeneratedscript : () ->
 $[<?xml version="1.0" encoding="UTF-8" ?>
 
@@ -121,7 +135,7 @@
 	<target name="spx.default.jar"   depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,java.jar,sdf2imp,refresh"/>
 	          
   <!-- Initialization -->
-  <available file="${build}/org/strategoxt/imp/editors/spoofax/strategies/Main.class" property="java.jar.enabled"/>
+  <available file="${build}/${lang.id.specific.directoy}/strategies/Main.class" property="java.jar.enabled"/>
   <condition property="java.jar.import" value="-la org.strategoxt.imp.editors.spoofax.strategies" else="">
       <isset property="java.jar.enabled"/>
   </condition>
@@ -240,7 +254,7 @@
             <arg value="-I"/>
             <arg value="${packages.root}"/>
             <arg value="-I"/>
-            <arg value="${packages.path}"/>
+            <arg value="${package.path}"/>
             <arg value="-I"/>
             <arg value="${lib}"/>
             <arg line="${utils-include}"/>
@@ -510,7 +524,7 @@
   	<delete file="${include}/${package.name}.rtree" failonerror="false"/>
   	<java classname="org.strategoxt.strj.Main" failonerror="true">
   		<arg value="-I"/>
-    	<arg value="${packages.path}"/>
+    	<arg value="${package.path}"/>
   		<arg value="-i"/>
       <arg value="${packages.root}/${package.main.str.module}.str"/>
       <arg value="-o"/>
@@ -559,4 +573,3 @@
 </project>
 ]
 
-	
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str	Mon May 16 17:42:05 2011	(r22890)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str	Mon May 16 20:32:08 2011	(r22891)
@@ -23,6 +23,14 @@
 	
 rules 
 	
+	get-language-id = 
+		contracts(
+			contract-requires(
+				?Package(QName(_))
+			)
+		); 
+		DeclaredLangaugeId
+		
 	get-language-name  = 
 		contracts(
 			contract-requires(

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str	Mon May 16 17:42:05 2011	(r22890)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str	Mon May 16 20:32:08 2011	(r22891)
@@ -65,17 +65,23 @@
 		where
 			<debug-symboltable>$[ScopeTree|Storing Declaration [<pp-aterm>(Type, scoped-x)] -> [<pp-aterm>x]]	
 	
-	// stores langauge name. It keeps mapping of package name and its defined language-names
+	// Stores langauge name. It keeps mapping of package name and its defined language-names
 	// extended dynamic rules are used to verify that language name is not declare multple times 
 	// in a package scope. Additional checks will be added to verify a language-name is unique 
 	// in a project scope. 
-	store-langauge-name (| package-typed-qname ) : 
+	store-langauge-properties (| package-typed-qname ) : 
 		LanguageName(name) -> <id>
 		with 
 			rules( DeclaredLangaugeName :+ package-typed-qname -> name);
 			rules( DeclaredLangaugeNameInScope :+ name -> package-typed-qname )
 		where
 			<debug-symboltable> $[ ScopeTree| [<pp-aterm>package-typed-qname] storing  following language name : [<pp-aterm>name]]
-				
 	
+	// Stores Language ID. 
+	store-langauge-properties (| package-typed-qname ) : 
+		LanguageId(id-string) -> <id> 
+		with 
+			rules( DeclaredLangaugeId :+ package-typed-qname -> id-string)
+		where
+			<debug-symboltable> $[ ScopeTree| [<pp-aterm>package-typed-qname] storing  following language Id : [<pp-aterm>id-string]]
 	 		 		
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str	Mon May 16 17:42:05 2011	(r22890)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str	Mon May 16 20:32:08 2011	(r22891)
@@ -135,6 +135,6 @@
 	//Desugaring ESV Sections 
 	desugar-spx : ESVSection ( sectionDef ) -> <add-annotation(|<EnclosingNamespace>)> <id>
 		with
-			<alltd(store-langauge-name(|<EnclosingParentNamespace>))>sectionDef 
-
+			<alltd(store-langauge-properties(|<EnclosingParentNamespace>))>sectionDef
+			
 			
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Tue May 17 01:07:16 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Mon, 16 May 2011 23:07:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22892 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str
Message-ID: <20110516230716.4D6F2108C04F@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Mon May 16 23:07:16 2011
New Revision: 22892
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22892&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/signature-generator.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str	Mon May 16 20:32:08 2011	(r22891)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str	Mon May 16 23:07:16 2011	(r22892)
@@ -96,9 +96,7 @@
 	declare-stratego-globals-top =
     if not(NoAnalysis) then
     	where(<debug-declaration>$[DeclareSTR | Inside stratego-globals-top : [<pp-aterm>]]);
-    	//TODO : FIX handle it during legacy-compilation
-    	//with(<declare-str-globals>Import("libstratego-lib")); 
-      alltd(declare-str-definition)
+     		alltd(declare-str-definition)
     end
 
   declare-str-definition:
@@ -148,8 +146,8 @@
     dec @ RDecT(x, s*, t*) -> RDecT(x', s*, t*)
     where
       not(!x => COMPLETION(_))
-    with
-      x' := x{<declare-cookie-of>}
+    with
+    	x' := x{<declare-cookie-of>}
     <+
       cookie := <newterm>;
       x'  := x{cookie};
@@ -158,23 +156,33 @@
       sig := (x, s'*, t'*);
       scoped-cookie :=<to-scoped-symbol> cookie;
       scoped-sig    :=<to-scoped-symbol> sig;
-      scoped-x      :=<to-scoped-symbol> sig;
+      scoped-x      :=<to-scoped-symbol> x;
       rules(
         DeclareCookie:  scoped-sig    -> cookie
         DeclareCookie:  scoped-x      -> cookie
         STRDeclaration: scoped-cookie -> dec
       );
       // See https://svn.strategoxt.org/repos/StrategoXT/strategoxt/trunk/strc-core/lib/stratego/strc/front/lift-dynamic-rules.str
-      ![ "new", "undefine", "aux", "once", "bagof", "reverse-bagof", "bigbagof", "all-keys"
-       , "innermost-scope", "break", "break-to-label", "break-bp", "continue", "continue-to-label"
-       , "throw", "chain", "bigchain", "fold", "bigfold" ];
-      list-loop({prefix, sig, cookie':
-        ?prefix;
-        sig := ($[[prefix]-[x]], s'*, t'*);
-        scoped-sig' := <to-scoped-symbol> sig;
-        rules(DeclareCookie: scoped-sig'  -> cookie)
-      })
+      <declare-dr-rule(|x, cookie, 0, 2)> "new";
+      <declare-dr-rule(|x, cookie, 0, 1)> "undefine";
+      <declare-dr-rule(|x, cookie, s'*, <inc> t'*)> "aux";   // FIXME: dependent on number of free variables in lhs
+      <declare-dr-rule(|x, cookie, <inc> s'*, t'*)> "reverse-bagof";
+      <declare-dr-rule(|x, cookie, 1, 0)> "innermost-scope";
+      <map(declare-dr-rule(|x, cookie, s'*, <inc> t'*))>
+        ["break-to-label","continue-to-label"];
+      <declare-dr-rule(|x, cookie, <inc> s'*, <inc> t'*)> "throw";
+      <map(declare-dr-rule(|x, cookie, <inc> s'*, t'*))>
+        ["fold", "bigfold"];
+      <map(declare-dr-rule(|x, cookie, s'*, t'*))>
+        ["once", "bagof", "bigbagof", "all-keys", "innermost-scope", "break", "break-bp", "continue", "chain", "bigchain"]
 
+   declare-dr-rule(|x,cookie,s,t) =
+    ?prefix;
+    sig := ($[[prefix]-[x]], s, t);
+    scoped-sig := <to-scoped-symbol> sig;
+    rules(DeclareCookie: scoped-sig -> cookie)
+
+
   dr-scope-declare-cookies(defs, s):
     t -> t'
     with

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/signature-generator.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/signature-generator.str	Mon May 16 20:32:08 2011	(r22891)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/signature-generator.str	Mon May 16 23:07:16 2011	(r22892)
@@ -45,6 +45,11 @@
 
   signature-of:
     DynRuleScopeId(x) -> <remove-quote> x
+  
+  
+  signature-of: x -> (<remove-quote> x, 0, 0)
+  where 
+  	is-string
   
   remove-quote:
     COMPLETION(s) -> COMPLETION(<remove-quote> s)

From R.B.Vermaas at tudelft.nl  Tue May 17 13:30:17 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 17 May 2011 11:30:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22893 -
	strategoxt/branches/strategoxt-java
Message-ID: <20110517113017.2AE5E7F8008@mx1.tudelft.nl>

Author: rob
Date: Tue May 17 11:30:16 2011
New Revision: 22893
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22893&sc=1

Log:
remove parse-hack as most important bugs have been fixed in jsglr. only some bugs left in stratego-sglr-tests

Modified:
   strategoxt/branches/strategoxt-java/build.xml

Modified: strategoxt/branches/strategoxt-java/build.xml
==============================================================================
--- strategoxt/branches/strategoxt-java/build.xml	Mon May 16 23:07:16 2011	(r22892)
+++ strategoxt/branches/strategoxt-java/build.xml	Tue May 17 11:30:16 2011	(r22893)
@@ -21,6 +21,7 @@
     />
 
     <target name="test-test">
+        <strj-test input="libraries/lib/tests/dynamic-rules-lowlevel-test.str" />
         <strj-test input="libraries/sglr/tests/stratego-sglr-tests.str" />
     </target>
 
@@ -51,36 +52,6 @@
             </sequential>
         </for>
     </target>
-
-    <target name="parse-hack">
-        <for param="strfile">
-            <path>
-                <fileset dir="." includes="**/*.str" />
-            </path>
-            <sequential>
-                <basename file="@{strfile}" property="@{strfile}.basename" suffix=".str" />
-                <dirname file="@{strfile}" property="@{strfile}.dirname" />
-                    <echo message="Parsing @{strfile} -> ${@{strfile}.dirname}/${@{strfile}.basename}.rtree"/>
-
-                <exec executable="parse-stratego">
-                    <arg value="-i"/>
-                    <arg value="@{strfile}"/>
-                    <arg value="-o"/>
-                    <arg value="${@{strfile}.dirname}/${@{strfile}.basename}.rtree"/>
-                    <arg value="-I"/>
-                    <arg value="${syntaxstr}"/>
-                    <arg value="-I"/>
-                    <arg value="${syntaxrtg}"/>
-                    <arg value="-I"/>
-                    <arg value="${syntaxbox}"/>
-                    <arg value="-I"/>
-                    <arg value="${syntaxsdf}"/>
-                    <arg value="-I"/>
-                    <arg value="${syntaxjavaemb}"/>
-                </exec>
-            </sequential>
-        </for>
-    </target>
 
     <target name="clean">
         <delete dir="bin"/>

From v.vergu at gmail.com  Tue May 17 14:02:34 2011
From: v.vergu at gmail.com (Vlag Vergu)
Date: Tue, 17 May 2011 12:02:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22894 - in
	spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego:
	. editor lib-refactoring trans trans/signatures trans/utils
Message-ID: <20110517120234.39EB22B8011@mx2.tudelft.nl>

Author: VladVergu
Date: Tue May 17 12:02:33 2011
New Revision: 22894
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22894&sc=1

Log:
- fixed pretty printing of sort variables
- cleaned up error checking rules
- extracted sort variable renaming into separate strategy
- working sort variable inference using deferred sort application
- some utilities & tests
- report errors when sort application in signatures are not incompatible
- report warning when sort variables in signatures are not polymorphic

Added:
   spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/utils/
   spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/utils/test.str
   spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/utils/utils.str
Modified:
   spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/   (props changed)
   spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Builders.esv
   spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/lib-refactoring/rename-generic.str
   spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/lib-refactoring/user-interaction.str
   spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/analysis.str
   spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/rename.str
   spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/check.str
   spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/constructors.str
   spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/map.str
   spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/pp.str
   spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/project.str
   spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/stratego_sugar.str

Modified: spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Builders.esv
==============================================================================
--- spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Builders.esv	Tue May 17 11:30:16 2011	(r22893)
+++ spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Builders.esv	Tue May 17 12:02:33 2011	(r22894)
@@ -25,5 +25,10 @@
     generate-desugared-aterm (realtime) (meta) (openeditor) (source)
 
   builder : "Show AST (selection)" =
-    generate-aterm (realtime) (meta)(openeditor) (source) 
+    generate-aterm (realtime) (meta)(openeditor) (source)
+    
+ builder : "Show signatures & constraints" =
+     generate-sort-signatures (realtime) (meta)(openeditor) (source)
+ 
+ builder : "Run tests" = run-tests
  
\ No newline at end of file

Modified: spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/lib-refactoring/rename-generic.str
==============================================================================
--- spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/lib-refactoring/rename-generic.str	Tue May 17 11:30:16 2011	(r22893)
+++ spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/lib-refactoring/rename-generic.str	Tue May 17 12:02:33 2011	(r22894)
@@ -60,7 +60,29 @@
     where
       <report-invalid-selection> ref-name;
       renamed-asts := <apply-renaming(|ref-name, new-name)> analyzed-asts;
-      <report-semantic-issues(re-analyse, collect-sem-errors|ref-name, new-name)> (analyzed-asts, renamed-asts);
+      endangered-names := [<rm-annotations> ref-name, new-name];
+      <report-semantic-issues(re-analyse, collect-sem-errors|endangered-names)> (analyzed-asts, renamed-asts);
+      changed-asts := <get-changed-asts> (analyzed-asts, renamed-asts)
+
+  /**
+   * Handles rename refactoring workflow.
+   * Input: asts annotated with unique names
+   * REMARK: save all resources before collecting ASTs and applying the refactoring 
+   * - Checks if selected term is indeed a reference or declaration name
+   * - Checks if the semantic errors before and after the transformation are the same
+   * - Checks if the name bindings are preserved
+   * @type (List(T)) -> List((T, T'))
+   * @param List(T) -> List(T) strategy that annotates all names with a unique reference name. 
+   * @param List(T) -> List(ERROR), with ERROR either a string or a tuple (term, String)   
+   * @param List(String, String) list with changes that should be applied (s{ref}, s') renames s{ref} to s'
+   */
+  apply-rename-refactoring(re-analyse, collect-sem-errors|renamings):
+    analyzed-asts -> changed-asts
+    where
+      <map(Fst; report-invalid-selection)> renamings;
+      renamed-asts := <apply-renaming(|renamings)> analyzed-asts;
+      endangered-names := <unzip; conc; make-set; map(rm-annotations)> renamings;
+      <report-semantic-issues(re-analyse, collect-sem-errors|endangered-names)> (analyzed-asts, renamed-asts);
       changed-asts := <get-changed-asts> (analyzed-asts, renamed-asts)
             
   report-invalid-selection = 
@@ -68,22 +90,22 @@
       message-invalid-selection
     end
     
-  report-semantic-issues(analyse, collect-sem-errors|ref-name, new-name) =
-    check-semantics(analyse, collect-sem-errors|ref-name, new-name);
+  report-semantic-issues(analyse, collect-sem-errors|endangered-names) =
+    check-semantics(analyse, collect-sem-errors|endangered-names);
     (
     	report-semantic-problems <+
     	(try(dr-scope-all-end); dr-scope-all-start; fail) //do not store analysis results in name tables after rollback
     	//TODO: better solution
     )
     
-  check-semantics(analyse, collect-sem-errors|ref-name, new-name) :
+  check-semantics(analyse, collect-sem-errors|endangered-names) :
     (analyzed-asts, asts-after) -> (var-capture-warnings, <make-set> introduced-errors, <make-set> solved-errors)
     where    	
       errors-before        := <get-sem-errors(collect-sem-errors)> analyzed-asts; //debug(!"errors before: ");
       analyzed-asts-after  := <analyse> asts-after; //debug(!"asts-after: ");
       errors-after         := <get-sem-errors(collect-sem-errors)> analyzed-asts-after; //debug(!"errors after: ");
       (introduced-errors, solved-errors) := <check-consistency-changes> (errors-before, errors-after); 
-      var-capture-warnings := <check-var-captures(|ref-name, new-name)> (analyzed-asts, analyzed-asts-after)
+      var-capture-warnings := <check-var-captures(|endangered-names)> (analyzed-asts, analyzed-asts-after)
     	   	
   get-changed-asts:
     (asts-before, asts-after) -> changed-asts
@@ -99,6 +121,15 @@
     topdown(try(?ref-name; !new-name)); 
     topdown(try(strip-annos))
     
+  apply-renaming (|renamings) =
+    topdown(try(rename-identifier(|renamings))); 
+    topdown(try(strip-annos))
+  
+  rename-identifier(|renamings):
+  	refname -> newname{ref}
+  	where
+  	<?_{ref}> refname;
+  	<fetch-elem(?(refname, newname))> renamings
     
 rules // consistency preservation
   
@@ -117,35 +148,34 @@
   	  
 rules // behaviour preservation: invariant check for variabele capture
 
-  check-var-captures(|ref-name, new-name):
+  check-var-captures(|endangered-names):
     (analyzed-asts, analyzed-asts-after) -> errors
     where
-      old-name := <strip-annos> ref-name; 
       errors   := <
-        get-var-captures(|old-name, new-name);
+        get-var-captures(|endangered-names);
         map(!(<id>, <!$[Variabele captures detected for '[<strip-annos>]']>))
       > (analyzed-asts, analyzed-asts-after)
   
-  get-var-captures(|old-name, new-name):
+  get-var-captures(|endangered-names):
     (analyzed-asts, analyzed-asts-after) -> var-captures
     where 
       paired-asts     := <zip> (analyzed-asts, analyzed-asts-after); //external definitions of transformed asts should not be obtained from cache
-      reference-pairs := <map(get-paired-references(|old-name, new-name)); flatten-list> paired-asts;
+      reference-pairs := <map(get-paired-references(|endangered-names)); flatten-list> paired-asts;
       var-captures    := <check-invariant; map(Fst)> reference-pairs
     
   //compares the references of analysed ast before- and after- rename transformation     
-  get-paired-references(|old-name, new-name):
+  get-paired-references(|endangered-names):
     (ast-before, ast-after) -> ref-pairs
     where
-      invariant_before := <get-listed-refnames(|old-name, new-name)> ast-before; //debug(!"invariant before: ");
-      invariant_after  := <get-listed-refnames(|old-name, new-name)> ast-after; //debug(!"invariant after: ");
+      invariant_before := <get-listed-refnames(|endangered-names)> ast-before; //debug(!"invariant before: ");
+      invariant_after  := <get-listed-refnames(|endangered-names)> ast-after; //debug(!"invariant after: ");
       ref-pairs     := <zip> (invariant_before, invariant_after)
           
-  get-listed-refnames(|old-name, new-name) =
+  get-listed-refnames(|endangered-names) =
     collect-om(
       where(
       	strip-annos;
-      	(equal(|old-name) <+ equal(|new-name))
+      	<elem> (<id>, endangered-names)
       ),
       conc
     )

Modified: spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/lib-refactoring/user-interaction.str
==============================================================================
--- spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/lib-refactoring/user-interaction.str	Tue May 17 11:30:16 2011	(r22893)
+++ spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/lib-refactoring/user-interaction.str	Tue May 17 12:02:33 2011	(r22894)
@@ -33,8 +33,10 @@
   message-unexpected-failure =
     <message-errors> "Refactoring fails unexpectedly, no changes are made"
       
-  message-invalid-selection =
-    <message-errors> "Refactoring is not applicable to the selected fragment"
+  message-invalid-selection :
+  	selection -> <message-errors> 
+  	$[Refactoring is not applicable to the selected fragment: 
+  	'[<write-to-string; string-as-chars(take(|100))> selection]']
   
   message-invalid-input =
     <message-errors> "Refactoring is not applicable with this input"
@@ -105,7 +107,7 @@
   make-error-string :
     (term, message) -> error-string
     where 
-      if (txt, line, column):= <origin-source-info> then  //TODO: filename
+      if (txt, line, column):= <origin-source-info> term then  //TODO: filename
         error-string := $[ ([line],[column]): [message]] 
       else 
         error-string := message

Modified: spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/analysis.str
==============================================================================
--- spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/analysis.str	Tue May 17 11:30:16 2011	(r22893)
+++ spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/analysis.str	Tue May 17 12:02:33 2011	(r22894)
@@ -65,10 +65,6 @@
 
   signature-of:
     OpDecl(x, t) -> (<remove-quote> x, <dec> <occurrences(?ConstType(_))> t)
-    
-  
-  	
-  	
 
   signature-of:
     ExtOpDecl(x, t) -> (<remove-quote> x, <dec> <occurrences(?ConstType(_))> t)
@@ -164,7 +160,7 @@
       redeclare-definition
 
   declare-globals:
-    w at OpDecl(x, t) -> OpDecl(x', t)
+    OpDecl(x, t) -> OpDecl(x', t')
     with
       cookie := <redeclare-definition>;
       x'     := x{cookie}
@@ -172,11 +168,16 @@
       // Declare congruence
       (x'', n) := <signature-of>;
       sig'     := (x'', n, 0);
-      type-sig := <poly-sort-signature-of> w;
-      <store-sort-decl> type-sig;
       rules(
         DeclareCookie: sig' -> cookie
       )
+    with try(
+    	rename-sort-vars => t';
+      poly-sort-signature-of;
+      infer-var-sorts;
+      where (debug(!"> "));
+     	store-sort-decl
+    )
   
   declare-globals:
   	w at OpDeclInj(_) -> w

Modified: spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/rename.str
==============================================================================
--- spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/rename.str	Tue May 17 11:30:16 2011	(r22893)
+++ spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/rename.str	Tue May 17 12:02:33 2011	(r22894)
@@ -30,22 +30,43 @@
       ast-change-tuples := <apply-rename-refactoring(
       	re-analyse-names, 
       	collect-sem-errors |
-      	ref-name,
-      	newname
+      	<get-renamings> (ref-name, newname)
       )> asts
- 
+  
+  get-renamings:
+  	r@(refname, newname) -> renamings
+  	where
+  	  <?_{ref}> refname;
+      if <Declaration; ?RDecT(oldname, _, _)> ref then 
+      	old-names := <prefixes-dynrules; map(!$[[<id>]-[oldname]]{ref})>;
+      	new-names := <prefixes-dynrules; map(!$[[<id>]-[newname]])>;
+      	renamings := [(oldname{ref}, newname)|<zip>(old-names, new-names)]
+      else
+      	renamings := [r]
+      end
+
+  prefixes-dynrules =
+  	!["once", "bagof", "bigbagof", "all-keys", "innermost-scope", "break", "break-bp", 
+  	  "continue", "chain", "bigchain", "new", "undefine", "aux", "reverse-bagof", "innermost-scope",
+  	  "break-to-label","continue-to-label", "throw", "fold", "bigfold"]
+
 rules //precondition checks
 
-//TODO: better solution?	
+//TODO: better solution
 //FIXME: no declaration outside asts (lib or generated), since these files are not changed
 //NOW: a declaration in asts exists
 precondition-error(|ref-name):
 	asts -> ([$[Declaration can not be found in [<project-path>]/trans]],[])
 	where
-	  <?_{ref}> ref-name;
-	  <is-global-ref> ref;
-	  dec_sig := <Declaration; signature-of> ref;
-	  <not(oncetd(where(declare-globals); topdown(strip-annos); signature-of; equal(|dec_sig)))> asts
+	  <?_{ref}> ref-name; 
+	  <is-global-ref> ref; 
+	  decl := <Declaration> ref;
+	  decl-cons := <get-constructor> decl;
+	  <not(oncetd(
+	  	if <equal> (<get-constructor>, decl-cons) then 
+	  		topdown(strip-annos) 
+	  	end; 
+	  	equal(|decl)))> asts
 
 rules //name analysis
     

Modified: spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/check.str
==============================================================================
--- spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/check.str	Tue May 17 11:30:16 2011	(r22893)
+++ spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/check.str	Tue May 17 12:02:33 2011	(r22894)
@@ -8,46 +8,68 @@
 	signatures/pp
 
 rules // sort constraints
-	// not declared SortNoArgs
-	global-constraint-error:
-		s at SortNoArgs(_) -> (s, $[The sort [<pp-sort-signature-top> s'] is not declared])
-		where
-			sort-signature-of => s';
-			get-sort-decl;
-			?[]
 	
-	// not declared Sort(s,t)
+	// not declared SortNoArgs or Sort
 	global-constraint-error:
-		s at Sort(_,_) -> (s,$[The sort [<pp-sort-signature-top> s'] is not declared])
+		_ -> (s, $[The sort [<pp-sort-signature-top> s'] is not declared])
+		where
+			?s at SortNoArgs(_) + ?s at Sort(_,_)
 		where
 			sort-signature-of => s';
-			get-sort-decl;
+			get-sort-decls;
 			?[]
 
-	// unknown generic sorts on RHS of signature
+	// unknown generic sort vars on RHS of signature
 	global-constraint-error:
 		d at OpDecl(_,_) -> msgs 
 		where
-			poly-sort-signature-of => sig at ConstSig(_,_,sort,_);
+			poly-sort-signature-of => sig at ConstSig(_,[_|_],sort,_);
 			srtVars := <collect-all(?Var(_),union)> sort;
 			<filter(\
 				Var(v) -> v
 				where not( <is-freevar(|v)> sig )
 			\)> srtVars;
 			map(\
-				v -> (v, $[Unknown sort variable [v]. It should be declared in left-hand-side])
+				v -> (v, $[Unknown sort variable [<RenamedVarCookie> v]. It should be declared in left-hand-side])
+			\) => msgs@[_|_] // force fail if no errors
+	
+	constraint-warning:
+		d at OpDecl(_,_) -> msgs
+		where
+			poly-sort-signature-of => sig at ConstSig(_,[],sort,_);
+			srtVars := <collect-all(?Var(_),union)> sort;
+			map(\
+				Var(v) -> (v, $[Unknown sort variable [<RenamedVarCookie> v]. Either declare in left-hand-side or remove it from right-hand-side])
 			\) => msgs
 	
 	// incompatible sort application
 	global-constraint-error:
-		s at Sort(_,_) -> (s,$[The sort [<pp-sort-signature-top> s'] is not compatible with any of its declarations:
+		s at Sort(_,_) -> (s,$[The sort application [<pp-sort-signature-top> s'] is not compatible with any of its declarations:
 			 [<pp-list(pp-sort-signature-top|", ")> decl]])
+		where debug(!"Checking: ")
 		where
 			sort-signature-of => s';
-			get-sort-decl;
+			get-sort-decls;
 			map(signature-sort) => decl;
-			<sort-apply> (s',decl);
-			?[]
-
-
-
+			<not(sort-apply)> (s',decl);
+			<innermost(\ Var(v) -> <get-var-sorts;not(?[])> v \);collect-all(?Var(_));?[]> decl
+			
+			
+	// Warn about sort variables that are constrained to a single Sort which is not Term or List or Option
+	constraint-warning:
+		d at OpDecl(_,_) -> messages
+		where
+			poly-sort-signature-of => ConstSig(_,_,_,freevars);
+			// for each variable get their possible sorts
+			// for all the variables that have only a single possible sort which is not Term, give a warning
+			<map(\
+				var -> (Var(var),$[Sort variable [<RenamedVarCookie> var] is not polymorphic ([<pp-sort-signature> srt])])
+				where
+					<get-var-sorts> var;
+					?[srt];
+					not(?[Term()])
+			\)> freevars => messages
+			
+			
+	
+	

Modified: spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/constructors.str
==============================================================================
--- spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/constructors.str	Tue May 17 11:30:16 2011	(r22893)
+++ spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/constructors.str	Tue May 17 12:02:33 2011	(r22894)
@@ -1,5 +1,6 @@
 module signatures/constructors
 
+
 imports 
 	signatures/project
 /*
@@ -11,7 +12,6 @@
 signature
 	constructors
 		/* built-in primitive Sorts + Types */
-		// Sort: Sort
 		Term: Sort
 		ATerm: Sort
 		Int: Sort
@@ -25,137 +25,22 @@
 			
 signature
 	constructors // helpers
-		Var: String -> Var 
-		
+		Var: String -> Var
+				
 signature
 	constructors
 		/* signature type signatures */
 		
 		/*
-		* Signature constructor for signature signatures
-		* args:
-		* 1. String -> the name of the constructor
-		* 2. List(Sort) -> the sorts of the constructor arguments
-		* 3. Sort -> the output sort of the constructor
-		*/
-		/*
-		* Representation for a parametric polymorphic signature
-		* arguments:
-			1. constructor name
+		 * Representation for a parametric polymorphic signature
+		 * arguments:
+			*1. constructor name
 			2. argument sorts
 			3. output sort
 			4. for All variables list
 		*/
 		ConstSig: String * List(Sort) * Sort * List(Var) -> ConstSig
 
-rules //constructor signatures
-		/* Steps
-		* 1. pass through all the signatures:
-				a. store the constructor signatures -> as constructor declaration
-				b. store the constructor signatures -> as sort declaration
-				- we have to be able to look-up possible constructors for the given Sort!!! 
-					because we use constructors in rules, but sorts in declarations
-			2. pass through all the signatures:
-				a. check that all the sorts used in the signatures are declared
-		*/
-		
-	
-rules // sort applications
-	
-	/*
-	* rules to implement application of sort signatures
-	* sort-apply: (sig, applyTo) -> resulting sort signature OR fail
-	*/
-	
-	
-	// dispatch for lists
-	sort-apply:
-		(s,l) -> <filter(\ l' -> <sort-apply> (s,l') \)> l
-		where
-			<is-list> l
-	
-	/* rules for primitive applications */
-	
-	sort-apply:
-		(s,Term()) -> s
-	
-	sort-apply:
-		(s,ATerm()) -> s
-	
-	sort-apply:
-		(Int(), Int()) -> Int()
-	
-	sort-apply:
-		(Double(),Double()) -> Double()
-	
-	sort-apply:
-		(Int(), Double()) -> Double()
-	
-	sort-apply:
-		(String(), String()) -> String()
-	
-	// the sort application for collections propagates inside the sorts collected
-	sort-apply:
-		(List(s),List(k)) -> List(<sort-apply> (s,k))
-	
-	// empty lists collect the Nothing sort (which doesn't exist). On application to a List of sort a, the result is a list of sort a
-	sort-apply:
-		(List(),List()) -> List()
-	
-	sort-apply:
-		(List(),List(_)) -> List()
-	
-	// TODO: is this true always?
-	sort-apply:
-		(List(_),List()) -> <fail>
-		
-	sort-apply:
-		(Option(s),Option(k)) -> Option(<sort-apply> (s,k))
-	
-	sort-apply:
-		(Option(),Option()) -> Option()
-	
-	sort-apply:
-		(Option(),Option(k)) -> Option()
-	
-	// TODO: is this true always?
-	sort-apply:
-		(Option(_),Option()) -> <fail>
-	
-	/* rules for sort variables */
-	
-	// FIXME: this should result in a condition placed on the sort of the actual variable
-	/**
-	* Sort application to a sort variable
-	* A variable has conditions enforced on it
-	* If the application is possible, the variable should be refined
-	*/
-	sort-apply:
-		(s,Var(_)) -> s 
-	
-	// FIXME: we should look-up what the sort variable conditions are and check whether we can do this without violating them
-	sort-apply:
-		(Var(_),s) -> s
-		where not(<is-list> s)
-	
-	/* rules for user-declared sorts */
-	
-	sort-apply:
-		(a,a) -> a
-		where not(<is-list> a)
-		
-	sort-apply:
-		(s,t) -> c#(<zip(sort-apply)> (p,p'))
-		where not(
-			<is-prim> s +
-			<is-prim> t +
-			<is-list> t
-		)
-		where
-			!s;
-			?c#(p);
-			!t;
-			?c#(p')
 			
 
 		

Modified: spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/map.str
==============================================================================
--- spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/map.str	Tue May 17 11:30:16 2011	(r22893)
+++ spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/map.str	Tue May 17 12:02:33 2011	(r22894)
@@ -3,7 +3,9 @@
 imports
 	signatures/constructors
 	signatures/project
-
+	libstrc
+	utils/utils
+	
 rules // store & retrieve sorts
 			
 		store-sort-decl:
@@ -17,16 +19,14 @@
 				not(
 					<elem> (sig,<bagof-DeclaredSort> cookie)
 				) <
-					// where(!sig; debug(!"STORE  "));
 					rules (
 						DeclaredSort:+ cookie -> sig
 					)
 					+
 					id
 		
-		get-sort-decl:
+		get-sort-decls:
 			sort -> decls
-			// where debug(!"GET ")
 			where
 				?_{cookie};
 				decls := <bagof-DeclaredSort> cookie
@@ -105,7 +105,6 @@
 			with
 				cookie := <newterm>;
 				sig := ConstSig(srt,[],srt#([]){cookie},[]);
-				// debug(!"STOREP ");
 				rules (
 					SortCookie:+ sort -> cookie
 					DeclaredSort:+ cookie -> sig
@@ -123,8 +122,113 @@
 			with
 				cookie := <newterm>;
 				sig := ConstSig(srt,[Var("a")],srt#([Var("a")]),["a"]);
-				// debug(!"STOREP ");
 				rules (
 					SortCookie:+ sort -> cookie
 					DeclaredSort:+ cookie -> sig
-				)
\ No newline at end of file
+				)
+
+rules // rename variables
+	
+	rename-sort-vars = {| RenamedVar: alltd(rename-sort-var) |}
+	
+	rename-sort-var:
+		SortVar(v) -> SortVar(v){<rename> v}
+		where debug(!$[Renamed variable [v] to [<rename> v] ])
+		
+	rename:
+		v -> v'
+		where
+			is-string;
+			RenamedVar => v'
+	
+	rename:
+		v -> v'
+		where
+			is-string;
+			not(RenamedVar)
+		with
+			v' := <newterm>;
+			rules (
+				RenamedVar : v -> v'
+				RenamedVarCookie: v' -> v
+			)
+	
+
+rules // variable sort storage
+	
+	chain-proxy-varsort(|var,pos):
+		sig@(_#(use-args)) -> var
+		with
+			if(not(<VarToProxy> var => old_cookie)) then
+				old_cookie := -42
+			end;
+			cookie := <newterm>;
+			// verify that a var actually exists at the given position
+			var-positions := <get-indices(?Var(var))> use-args;
+			<elem> (pos,var-positions);
+			num_args := <length> use-args
+		with
+			if(<gt> (old_cookie,0)) then
+				// a rule already exists, cleanup
+				rules (
+					VarToProxy:- var
+					SortVar:- var
+				)
+			end;
+			rules (
+				VarToProxy: var -> cookie
+				DeferredApplication: cookie -> result
+					with
+						<get-sort-decls> sig;
+						// keep from the decls only those that have the right number of arguments
+						map(signature-sort);
+						filter(\
+							_#(decl-args) -> decl-args
+							where <eq> (<length> decl-args, num_args)
+							\);
+						// FIXME: keep from the remaining decls only those that apply in non-variable positions
+						// FIXME: this is loss of strictness
+						// keep only the positions at POS
+						map(elem-at-index(|pos)) => elems;
+						if(<gt> (old_cookie,0)) then
+							<sort-apply <+ ![]> (<DeferredApplication> old_cookie, elems) => result
+						else
+							<sort-apply <+ ![]> (Term(), elems) => result
+						end
+				SortVar: var -> <DeferredApplication> cookie
+			)
+	
+	
+	chain-proxy-varsort(|var):
+		sig@(_#(use-args)) -> var
+		with
+			var-positions := <get-indices(?Var(var))> use-args;
+			<map(\ 
+				pos -> <chain-proxy-varsort(|var,pos)> sig
+			\)> var-positions
+			
+	get-var-sorts:
+		var -> srts
+		where all-keys-SortVar;fetch(?var)
+		with {|Strace:
+			if(<Strace> var) then
+				<debug(!"Cyclic lookup detected on ")> Var(<RenamedVarCookie> var);
+				srts := [Term()]
+			else
+				rules (
+					Strace: var
+				);
+				<SortVar> var => srts
+			end
+		|}
+	
+	get-var-sorts:
+		var -> [Term()]
+		where all-keys-SortVar;not(fetch(?var))
+	
+	store-var-sorts(|var):
+		srts -> srts
+		where <is-list> srts
+		with rules (
+			SortVar: var -> srts
+		)
\ No newline at end of file

Modified: spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/pp.str
==============================================================================
--- spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/pp.str	Tue May 17 11:30:16 2011	(r22893)
+++ spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/pp.str	Tue May 17 12:02:33 2011	(r22894)
@@ -2,7 +2,7 @@
 
 imports
 	signatures/constructors
-
+	signatures/map
 
 rules // pretty print for constructor signatures
 
@@ -13,14 +13,14 @@
 		ConstSig(name,args,srt,[]) -> $[[name] : [<pp-list(pp-sort-signature-top|" * ")> args] => [<pp-sort-signature-top> srt]]
 	
 	pp-sort-signature:
-		ConstSig(name,args,srt,fvars@[_|_]) -> $[[name]([<pp-list(|", ")> fvars]) : [<pp-list(pp-sort-signature-top|" * ")> args] => [<pp-sort-signature-top> srt]]
+		ConstSig(name,args,srt,fvars@[_|_]) -> $[[name]([<pp-list(RenamedVarCookie|", ")> fvars]) : [<pp-list(pp-sort-signature-top|" * ")> args] => [<pp-sort-signature-top> srt]]
 	
 	pp-sort-signature:
 		x -> x
 		where is-string
 		
 	pp-sort-signature:
-		Var(a) -> <pp-sort-signature-top> a
+		Var(a) -> <RenamedVarCookie;pp-sort-signature-top> a
 	
 	pp-sort-signature:
 		c#([]) -> $[[c]]

Modified: spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/project.str
==============================================================================
--- spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/project.str	Tue May 17 11:30:16 2011	(r22893)
+++ spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/signatures/project.str	Tue May 17 12:02:33 2011	(r22894)
@@ -32,8 +32,8 @@
 rules // Stage 1
 	
 	poly-sort-signature-of =
-		sort-signature-of;
-		to-poly-signature
+			sort-signature-of;
+			to-poly-signature
 
 	// normal signature with name and function	
 	sort-signature-of: 
@@ -65,9 +65,7 @@
 		ConstType(s) -> <sort-signature-of> s
 	
 	sort-signature-of:
-		SortVar(v) -> Var(v)
-		where
-			<is-string> v
+		SortVar(v){vnum} -> Var(vnum)
 	
 	sort-signature-of:
 		SortNoArgs(s) -> sort
@@ -89,4 +87,137 @@
 	to-poly-signature:
 		ConstSig(n,args,srt,_) -> ConstSig(n,args,srt,freevars)
 		with
-			freevars := <collect-all(\ Var(a) -> a \,union)> args
\ No newline at end of file
+			freevars := <collect-all(\ Var(a) -> a \,union)> args
+
+rules // sort applications
+	
+	/*
+	* rules to implement application of sort signatures
+	* sort-apply: (sig, applyTo) -> resulting sort signature OR fail
+	*/
+	
+	sort-apply:
+		(s,l@[_|_]) -> <filter(\ l' -> <sort-apply> (s,l') \);not(?[]);flatten-list;make-set> l
+		where <not(is-list)> s
+	
+	sort-apply:
+		(s@[_|_],l) -> <filter(\ s' -> <sort-apply> (s',l) \);not(?[]);flatten-list;make-set> s
+	
+	/* rules for primitive applications */
+	
+	sort-apply:
+		(s,Term()) -> s
+		where <not(is-list + ?Var(_))> s
+		
+	sort-apply:
+		(Term(),s) -> s
+		where 
+			<not(is-list + ?Var(_))> s
+	
+	sort-apply:
+		(Int(), Int()) -> Int()
+	
+	sort-apply:
+		(Double(),Double()) -> Double()
+	
+	sort-apply:
+		(Int(), Double()) -> []
+	
+	sort-apply:
+		(String(), String()) -> String()
+	
+	// the sort application for collections propagates inside the sorts collected
+	sort-apply:
+		(List(s),List(k)) -> List(<sort-apply> (s,k))
+	
+	// empty lists collect the Nothing sort (which doesn't exist). On application to a List of sort a, the result is a list of sort a
+	sort-apply:
+		(List(),List()) -> List()
+	
+	sort-apply:
+		(List(),List(_)) -> List()
+	
+	// TODO: is this true always?
+	sort-apply:
+		(List(_),List()) -> <fail>
+		
+	sort-apply:
+		(Option(s),Option(k)) -> Option(<sort-apply> (s,k))
+	
+	sort-apply:
+		(Option(),Option()) -> Option()
+	
+	sort-apply:
+		(Option(),Option(k)) -> Option()
+	
+	// TODO: is this true always?
+	sort-apply:
+		(Option(_),Option()) -> <fail>
+	
+	/* rules for sort variables */
+
+	sort-apply:
+		(s,Var(v)) -> <sort-apply> (s, <get-var-sorts> v)
+		where <not(?Var(_))> s
+	
+	sort-apply:
+		(Var(v),s) -> <sort-apply> (<get-var-sorts> v, s)
+		where not(<is-list> s)
+			
+	/* rules for user-declared sorts */
+	
+	sort-apply:
+		(a,a) -> a
+		where not(<is-list> a)
+		
+	sort-apply:
+		(s,t) -> c#(<zip(sort-apply)> (p,p'))
+		where not(
+			<is-prim> s +
+			<is-prim> t +
+			<is-list> t
+		)
+		where
+			!s;
+			?c#(p);
+			!t;
+			?c#(p')
+			
+			
+rules // variable inference
+	infer-var-sorts:
+		sig at ConstSig(_,_,_,[]) -> sig
+	
+	infer-var-sorts:
+		sig at ConstSig(_, args, _, f) -> sig
+		where
+			<map(\
+				var -> <map(innermost(infer-proxies(|Var(var))))> args
+			\)> f
+	
+	infer-proxies(|var):
+		sig@(c#(args@[_|_])) -> <fail> // always fail so that can eventually get out of this loop
+		where
+			// only if there are actually uses of the variable at this level
+			<elem> (var,args)
+		with
+			Var(v) := var;
+			<debug(!"DEFERRING: ")> (var,sig);
+			<chain-proxy-varsort(|v)> sig
+				
+
+	
+		
+		
+
+
+	
+		
+		
+				
+			
+			
+	
+	
+	
+		
\ No newline at end of file

Modified: spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/stratego_sugar.str
==============================================================================
--- spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/stratego_sugar.str	Tue May 17 11:30:16 2011	(r22893)
+++ spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/stratego_sugar.str	Tue May 17 12:02:33 2011	(r22894)
@@ -15,7 +15,8 @@
   signatures/project
   signatures/map
   signatures/check
-
+	utils/test
+	
 strategies
 
 rules
@@ -77,17 +78,23 @@
     where
 			<signature-of> node; // only show definitions
 			text := <pp-stratego-string> node
-			// sig := <poly-sort-signature-of> node;
-			// text := <pp-sort-signature-top> sig
  	
  	editor-hover:
-    (node, position, ast, path, project-path) -> text
+    (node, _, _, _, _) -> text
     where
     	<sort-signature-of> node;
-    	get-sort-decl;
+    	get-sort-decls;
     	pp-list(pp-sort-signature-top|"<br/>") => text
   
   editor-hover:
+    (node at SortVar(v){cookie}, _, _, _, _) -> text
+    where
+    	// dr-debug-rule-set(|"SortVar");
+    	// dr-debug-rule-set(|"DeferredApplication");
+    	text := $[[v]: [<get-var-sorts;pp-list(pp-sort-signature-top|", ")> cookie]]
+    	
+  
+  editor-hover:
     (node at ToMetaExpr(_), position, ast, path, project-path) -> text
     where
       str := <meta-explode(false) ; Stratego-Ensugar>node 
@@ -111,9 +118,17 @@
       filename := <guarantee-extension(|"a.aterm")> path;
       result   := <DecoratedAst> selected
   
-  // FIXME: for debugging
+  // FIXME: for debugging only
   generate-sort-signatures:
   	(selected, position, ast, path, project-path) -> (filename, result)
     with
       filename := <guarantee-extension(|"sig.aterm")> path;
-      result   := <all-keys-DeclaredSort; mapconcat(bagof-DeclaredSort)>
+      all-keys-DeclaredSort;
+      mapconcat(bagof-DeclaredSort) => signs;
+      collect-all(?Var(_)); make-set;
+      map(\ Var(x) -> $[Var([<RenamedVarCookie> x]) => [<get-var-sorts;pp-sort-signature-top> x]] \) => vars;
+      result := [signs,vars]
+	
+	run-tests = test-all
+
+

Added: spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/utils/test.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/utils/test.str	Tue May 17 12:02:33 2011	(r22894)
@@ -0,0 +1,150 @@
+module test
+
+imports
+	utils/utils
+	signatures/constructors
+	signatures/map
+	signatures/project
+
+rules // tests
+	
+	test-all =
+		test-elem-at-index-1
+		;debug(!"---------")
+		;test-elem-at-index-2
+		;debug(!"---------")
+		;test-elem-at-index-3
+		;debug(!"---------")
+		;test-at-indices
+		;debug(!"---------")
+		;test-get-indices
+		;debug(!"---------")
+		;test-sort-apply-1
+		;debug(!"---------")
+		;test-sort-apply-2
+		;debug(!"---------")
+		;test-chain-proxy-varsort-1
+		;debug(!"---------")
+		;test-chain-proxy-varsort-2
+		;debug(!"---------")
+ 		;test-chain-proxy-varsort-3
+		;debug(!"---------")
+		;test-chain-proxy-varsort-4
+		;debug(!"---------")
+		;test-chain-proxy-varsort-5
+		;debug(!"---------")
+		// ;test-dr-higher-order
+		// ;debug(!"---------")
+		;debug(!"All tests succeeded")
+ 	
+ 	test-elem-at-index-1 =
+ 		<elem-at-index(|2)> [1,2,3,4,5] => out;
+ 		(?3 <+ <fatal-err(|"Test elem-at-index failed \n Expected 3 but got: ")> out)
+ 	
+ 	test-elem-at-index-2 =
+ 		<elem-at-index(|4)> [1,2,3,4,5] => out;
+ 		(?5 <+ <fatal-err(|"Test elem-at-index failed \n Expected 5 but got: ")> out)
+ 	
+ 	test-elem-at-index-3 = not(<elem-at-index(|6)> [1,2,3,4,5])
+ 	
+ 	test-at-indices =
+ 		list := [5,4,3,2,1];
+ 		pos := [0,2];
+ 		<at-indices(|pos)> list => out;
+ 		(?[5,3] <+ <fatal-err(|"Test test-list-at-indices failed \n Expected [5,3] but got: ")> out)
+ 	
+ 	test-get-indices = 
+ 		list := ["foo","bar","is", "foo", "and", "bar"];
+ 		<get-indices(?"foo")> list => out;
+ 		(?[0,3] <+ <fatal-err(|"Test test-get-indices failed \n Expected [0,3] but got: ")> out);
+ 		<get-indices(?"foo" + ?"bar")> list => out2;
+ 		(?[0,1,3,5] <+ <fatal-err(|"Test test-get-indices failed \n Expected [0,1,3,5] but got: ")> out2)
+ 	
+ 	test-sort-apply-1 =
+ 		if(<sort-apply> ([Int(),Double(),String()],[Int()]) => out) then
+ 			!out;
+ 			?[Int()] <+ <fatal-err(|"Test sort-apply failed \n Expected [Int()] but got: ")> out
+ 		else
+ 			fatal-err(|"Test sort-apply failed ")
+		end
+	
+	test-sort-apply-2 =	
+		!([Int(),Double()],[String()]);
+		sort-apply <+ fatal-err(|"Test test-sort-apply-2 failed ")
+		 	
+ 	test-chain-proxy-varsort-1 = 
+ 		use1 := "T"#([Var(123)]);
+ 		decl1 := "T"#([Int()]);
+ 		sig1 := ConstSig("", [], decl1, []);
+ 		{|DeclaredSort,SortCookie,VarToProxy,SortVar,DeferredApplication:
+ 			<store-sort-decl> sig1 => sort-cookie;
+ 			<chain-proxy-varsort(|123,0)> use1{sort-cookie};
+ 			// check that we get Int as the var sort
+ 			<get-var-sorts> 123 => out;
+ 			(?[Int()] <+ <fatal-err(|"Test chain-proxy-varsort-1 failed \n Expected [Int()] but got: ")> out)
+ 		|}
+ 	
+ 	test-chain-proxy-varsort-2 = 
+ 		use1 := "T"#([Var(123)]);
+ 		decl1 := "T"#([Int()]);
+ 		sig1 := ConstSig("", [], decl1, []);
+ 		{|DeclaredSort,SortCookie,VarToProxy,SortVar,DeferredApplication:
+ 			<store-sort-decl> sig1 => sort-cookie;
+ 			<chain-proxy-varsort(|123,0)> use1{sort-cookie};
+ 			<chain-proxy-varsort(|123,0)> use1{sort-cookie};
+ 			// check that we get Int as the var sort
+ 			<get-var-sorts> 123 => out;
+ 			(?[Int()] <+ <fatal-err(|"Test chain-proxy-varsort-1 failed \n Expected [Int()] but got: ")> out)
+ 		|}
+ 		
+ 	test-chain-proxy-varsort-3 = 
+ 		use1 := "T"#([Var(123),Var(123)]);
+ 		decl1 := "T"#([Int(),Int()]);
+ 		sig1 := ConstSig("", [], decl1, []);
+ 		{|DeclaredSort,SortCookie,VarToProxy,SortVar,DeferredApplication:
+ 			<store-sort-decl> sig1 => sort-cookie;
+ 			<chain-proxy-varsort(|123)> use1{sort-cookie};
+ 			<get-var-sorts> 123 => out;
+ 			(?[Int()] <+ <fatal-err(|"Test chain-proxy-varsort-1 failed \n Expected [Int()] but got: ")> out)
+ 		|}
+ 		
+ 	test-chain-proxy-varsort-4 = 
+ 		use1 := "T"#([Var(123)]);
+ 		decl1a := "T"#([String()]);
+ 		decl1b := "T"#([Int()]);
+ 		decl1c := "T"#([Double()]);
+ 		sig1a := ConstSig("", [], decl1a, []);
+ 		sig1b := ConstSig("", [], decl1b, []);
+ 		sig1c := ConstSig("", [], decl1c, []);
+ 		use2 := "T2"#([Var(123)]);
+ 		decl2a := "T2"#([Int()]);
+ 		decl2b := "T2"#([Double()]);
+ 		sig2a := ConstSig("",[],decl2a,[]);
+ 		sig2b := ConstSig("",[],decl2b,[]);
+ 		{|DeclaredSort,SortCookie,VarToProxy,SortVar,DeferredApplication:
+ 			<store-sort-decl> sig1a => c1a;
+ 			<store-sort-decl> sig1b => c1a;
+ 			<store-sort-decl> sig1c => c1a;
+ 			<store-sort-decl> sig2a => c2;
+ 			<store-sort-decl> sig2b => c2;
+ 			<chain-proxy-varsort(|123)> use1{c1a};
+ 			<chain-proxy-varsort(|123)> use2{c2};
+ 			<get-var-sorts> 123 => out;
+ 			(?[Double(),Int()] <+ <fatal-err(|"Test chain-proxy-varsort-1 failed \n Expected [Int(),Double()] but got: ")> out)
+ 		|}
+	
+	test-chain-proxy-varsort-5 = 
+ 		use1 := "T"#([Var(123)]);
+ 		decl1 := "T"#([String()]);
+ 		sig1 := ConstSig("", [], decl1, []);
+ 		use2 := "T2"#([Var(123)]);
+ 		decl2 := "T2"#([Int()]);
+ 		sig2 := ConstSig("",[],decl2,[]);
+ 		{|DeclaredSort,SortCookie,VarToProxy,SortVar,DeferredApplication:
+ 			<store-sort-decl> sig1 => c1;
+ 			<store-sort-decl> sig2 => c2;
+ 			<chain-proxy-varsort(|123)> use1{c1};
+ 			<chain-proxy-varsort(|123)> use2{c2};
+ 			<get-var-sorts> 123 => out;
+ 			(?[] <+ <fatal-err(|"Test chain-proxy-varsort-1 failed \n Expected [] but got: ")> out)
+ 		|}
\ No newline at end of file

Added: spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/utils/utils.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/stratego-editor/org.strategoxt.imp.editors.stratego/trans/utils/utils.str	Tue May 17 12:02:33 2011	(r22894)
@@ -0,0 +1,49 @@
+module utils
+
+rules // utilities
+
+
+	/**
+	* returns a list containing the indices at which the given strategy succeeds
+	* List(a) -> List(Int)
+	*/
+	get-indices(s) = get-indices(s|0)
+	// 
+	get-indices(s|index):
+		[x|xs] -> [index|<get-indices(s|<inc> index)> xs]
+		where <s> x
+	// 
+	get-indices(s|index):
+		[x|xs] -> <get-indices(s|<inc> index)> xs
+		where <not(s)> x
+	// 
+	get-indices(s|index): [] -> []
+	
+ 			
+ 	/**
+ 	* returns a sublist consisting of the elements at the given indices
+ 	* List(a) -> List(a)
+ 	*/
+	at-indices(|indices) = at-indices(|indices,0)
+	
+	at-indices(|indices,curindex):
+		[x|xs] -> [x|<at-indices(|indices,<inc> curindex)> xs]
+		where <elem> (curindex,indices)
+	
+	at-indices(|indices,curindex):
+		[x|xs] -> <at-indices(|indices,<inc> curindex)> xs
+		where <not(elem)> (curindex,indices)
+	
+	at-indices(|indices,curindex):
+		[] -> []
+ 	
+ 	elem-at-index(|index) = elem-at-index(|index,0)
+ 	
+ 	elem-at-index(|index,pos)=
+ 		?[x|xs];
+ 		if(<eq> (pos,index)) then
+ 			!x
+ 		else
+ 			<elem-at-index(|index,<inc> pos)> xs
+ 		end
+ 	

From L.C.L.Kats at tudelft.nl  Tue May 17 19:12:40 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 17 May 2011 17:12:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22895 -
	spoofax-imp/trunk/experimental/NamingExperiment/trans
Message-ID: <20110517171240.57AC0108C01C@mx3.tudelft.nl>

Author: LennartKats
Date: Tue May 17 17:12:40 2011
New Revision: 22895
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22895&sc=1

Log:
minor fixes and copied two library functions from lawoco

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-library.str	Tue May 17 12:02:33 2011	(r22894)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-library.str	Tue May 17 17:12:40 2011	(r22895)
@@ -52,7 +52,7 @@
         // HACK: use Some() constructor to force origin tracking...
         (Some(ast2), defs) := <analyze-defs(|Anon(), Anon())> Some(ast);
         full-path    := $[[project-path]/[path]];
-        prim("LANG_index_setup", $[[full-path]/.cache/index], $[project-path], [], []);
+        prim("LANG_index_setup", $[[project-path]/.cache/index], $[project-path], [], []);
         prim("LANG_index_clear_file", full-path);
         <index-summary-parts(|full-path)> defs;
         ast3         := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast2;
@@ -237,6 +237,9 @@
   index-lookup:
     x{[namespace | path]} -> <index-lookup(id |<index-namespace-unwrap> namespace, path)>
 
+  index-lookup-all:
+    x{[namespace | path]} -> <index-lookup-all(id |<index-namespace-unwrap> namespace, path)>
+
   index-lookup(is-adjust-lookup-enabled |namespace, path):
     x -> def
     where
@@ -247,6 +250,19 @@
       [_ | path'] := path;
       def         := <index-lookup(is-adjust-lookup-enabled |namespace, path')> x
 
+  index-lookup-all(is-adjust-lookup-enabled |namespace, path):
+    x -> defs'
+    where
+      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path)>;
+      defs       := <index-select-all(|namespace, path, x)>;
+      // TODO: optimize: try not to call do-adjust-index-lookup from here
+      if [_ | path'] := path then
+        defs2 := <index-lookup-all(is-adjust-lookup-enabled |namespace, path')> x;
+        defs' := <conc> (defs, defs2)
+      else
+        defs' := defs
+      end
+
   index-lookup-outermost:
     x{[namespace | path]} -> <index-lookup-outermost(id |<index-namespace-unwrap> namespace, path)>
 
@@ -336,6 +352,13 @@
       where(
         ?Def([_, <SRTS-EXT-eq-ignore-annos(|use)> | _])
       )
+    )
+
+  index-select-all(|namespace, path, use) =
+    filter(
+      where(
+        ?Def([_, <SRTS-EXT-eq-ignore-annos(|use)> | _])
+      )
     )
   
   do-adjusted-index-path(|namespace, path, def) =

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Tue May 17 12:02:33 2011	(r22894)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Tue May 17 17:12:40 2011	(r22895)
@@ -47,7 +47,7 @@
     with
       editor-init;
       filename := <guarantee-extension(|"analyzed.aterm")> path;
-      result   := <analyze-top> selected // we just return the input term
+      result   := <analyze-top> (selected, path, project-path) // we just return the input term
   
   // Resolves a reference when the user control-clicks or presses F3 in the editor.
   // Only succeeds for nodes of the form Type(_) for which GetEntity is defined.

From tobivollebregt at gmail.com  Tue May 17 20:57:49 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 17 May 2011 18:57:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22896 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: editor trans
Message-ID: <20110517185749.D16A92B8045@mx2.tudelft.nl>

Author: tvo
Date: Tue May 17 18:57:49 2011
New Revision: 22896
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22896&sc=1

Log:
+ Made generated prettyprinter a bit better presentable :)
+ Disable background color

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv	Tue May 17 17:12:40 2011	(r22895)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv	Tue May 17 18:57:49 2011	(r22896)
@@ -17,4 +17,5 @@
   PlaceholderText2        : template
   _.Placeholder           : _ bold
 
-  template = 0 0 255 240 240 240
+  template = 0 0 255
+  // 240 240 240

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Tue May 17 17:12:40 2011	(r22895)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Tue May 17 18:57:49 2011	(r22896)
@@ -89,7 +89,7 @@
     TemplateProduction(sort, Template(elem*), attr*) ->
     <trim-chars(' ' + '\t' + '\r' + '\n')> // Workaround Stratego/856
     $[prettyprint-[sort]:
-        [cons]([arg*]) -> t
+        [cons]([arg*]) -> zz
         with
           [let'*]]
     where
@@ -97,7 +97,9 @@
     with
       cons    := <collect-one(?sdf-cons(<un-double-quote>))> attr*;
       elem'*  := <try-re-indent;
-                  map(try(rename-template-element))> elem*;
+                  !(<id>, 0);
+                  thread-map(try(rename-template-element));
+                  ?(<id>, _)> elem*;
       arg*    := <filter(template-element-to-cons-arg);
                   separate-by(|", ")> elem'*;
       part*   := <newlines-switch(trim-layout, trim-trailing-layout,
@@ -106,12 +108,15 @@
                   concatenate-consecutive-strings;
                   map(try(?String(<escape-and-double-quote>)));
                   separate-by(|", ")> elem'*;
-      result  := <concat-strings>["t := <concat-strings> [", part*, "]"];
+      result  := <concat-strings>["zz := <concat-strings> [", part*, "]"];
       let*    := <filter(template-element-to-assignment)> elem'*;
       let'*   := <separate-by(|";\n")> [let*, result]
 
   rename-template-element:
-    Placeholder(a, b@ Sort(x), c, d){a*} -> Placeholder(a, b{<newname> x}, c, d){a*}
+    (Placeholder(a, b@ Sort(x), c, d){a*}, index) -> (Placeholder(a, b{newname}, c, d){a*}, newindex)
+    with
+      newname  := <implode-string> [<addi> ('a', index)];
+      newindex := <inc> index
 
   template-element-to-cons-arg:
     Placeholder(_, Sort(_){name}, _, _) -> name

From M.A.Akhter at student.tudelft.nl  Tue May 17 22:23:09 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Tue, 17 May 2011 20:23:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22897 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	analyze context
Message-ID: <20110517202309.D22AFCC258@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Tue May 17 20:23:08 2011
New Revision: 22897
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22897&sc=1

Log:
updated error checking | semantic analysis

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str	Tue May 17 18:57:49 2011	(r22896)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str	Tue May 17 20:23:08 2011	(r22897)
@@ -81,21 +81,10 @@
 			SDFSection(ast) -> <analyze-sdf-errors>ast 
 			where
 				<debug-analysis>$[ErrorChecking | SDF Section : [<pp-aterm>]]
-    	with
-	      // We only collect-om since we don't want inner warning dupes
-	      error*   := <collect-om(?context-free-syntax(<collect-om(context-free-syntax-error)>), conc)> ast;
-	      warning* := <collect-om(?context-free-syntax(<collect-om(context-free-syntax-warning)>), conc)> ast;
-	      if <file-exists> $[[<get-project-path>]/.disable-global-analysis] then
-	        serror* := []
-	      else
-	        serror* := <collect-om(context-free-syntax-sort-error, conc)> ast
-	      end;
-	      error'*   := <conc;flatten-list> (serror*, error*);
-	      warning'* := <flatten-list> warning*
-	
+   
 	analyze-sdf-errors : ast -> (error'*, warning'*, [])
 	where
-		<debug-analysis>$[ErrorChecking | SDF Section : [<pp-aterm>]]
+		<debug-analysis>$[ErrorChecking | SDF  : [<pp-aterm>]]
 	with
     // We only collect-om since we don't want inner warning dupes
     error*   := <collect-om(?context-free-syntax(<collect-om(context-free-syntax-error)>), conc)> ast;

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Tue May 17 18:57:49 2011	(r22896)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Tue May 17 20:23:08 2011	(r22897)
@@ -91,7 +91,7 @@
 	
 	declare-str-section: s at STRSection(def*) -> STRSection(m-definition*)
 	where 
-		m-definition* := <alltd(declare-str-definition-main)>def*
+		m-definition* := <declare-str-definition-main>def*
 	
 		
 	declare-str-section: ESVSection(def*) -> <id>   

From M.A.Akhter at student.tudelft.nl  Tue May 17 22:35:19 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Tue, 17 May 2011 20:35:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22898 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans: .
	analyze analyze/esv analyze/sdf analyze/str context/str
Message-ID: <20110517203519.B4730108C004@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Tue May 17 20:35:19 2011
New Revision: 22898
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22898&sc=1

Log:
Fixed STR declarations and symbol retrieval from the scope tree.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/str/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str	Tue May 17 20:23:08 2011	(r22897)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str	Tue May 17 20:35:19 2011	(r22898)
@@ -74,42 +74,3 @@
 		;<debug-analysis>$[ErrorChecking | Ignoring Section: [<pp-aterm>]] 
 		;!([], [], [])		
 
-	analyze-section: 
-			SDFSectionEH(_, ast) -> <analyze-sdf-errors>ast
-	
-	analyze-section: 
-			SDFSection(ast) -> <analyze-sdf-errors>ast 
-			where
-				<debug-analysis>$[ErrorChecking | SDF Section : [<pp-aterm>]]
-   
-	analyze-sdf-errors : ast -> (error'*, warning'*, [])
-	where
-		<debug-analysis>$[ErrorChecking | SDF  : [<pp-aterm>]]
-	with
-    // We only collect-om since we don't want inner warning dupes
-    error*   := <collect-om(?context-free-syntax(<collect-om(context-free-syntax-error)>), conc)> ast;
-    warning* := <collect-om(?context-free-syntax(<collect-om(context-free-syntax-warning)>), conc)> ast;
-    if <file-exists> $[[<get-project-path>]/.disable-global-analysis] then
-      serror* := []
-    else
-      serror* := <collect-om(context-free-syntax-sort-error, conc)> ast
-    end;
-    error'*   := <conc;flatten-list> (serror*, error*);
-    warning'* := <flatten-list> warning*
-
-	       
-  analyze-section: 
-		ESVSection(ast) -> (error-esv*, warning-esv* , [])
-  	where
-  		<debug-analysis>$[ErrorChecking | ESV Section : [<pp-aterm>]]
-		where
-  		error-esv*   := <collect-all(constraint-esv-error, conc)> ast;
-  		warning-esv* := <collect-all(constraint-esv-warning, conc)> ast
-      	
-  analyze-section: 
-		STRSection(ast) -> ( errors, warnings, [])
-		where
-  		<debug-analysis>$[ErrorChecking | STR Section : [<pp-aterm>]]
-		with
-    	errors   := <collect-all(global-constraint-error + constraint-error, conc)> ast;
-      warnings := <collect-all(constraint-warning, conc)> ast
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str	Tue May 17 20:23:08 2011	(r22897)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/esv/check.str	Tue May 17 20:35:19 2011	(r22898)
@@ -14,8 +14,18 @@
 // TODO: check if provider/imported/etc. files exist
 // TODO: check if there is _any_ provider for observer etc.
  
+rules
+  
+  analyze-section: 
+		ESVSection(ast) -> (error-esv*, warning-esv* , [])
+  	where
+  		<debug-analysis>$[ErrorChecking | ESV Section : [<pp-aterm>]]
+		where
+  		error-esv*   := <collect-all(constraint-esv-error, conc)> ast;
+  		warning-esv* := <collect-all(constraint-esv-warning, conc)> ast
 
-//TODO : check whether language description is there . Otherwise raise warning as build will fail anyway if the information is not provided.
+
+	
 
 rules 
 	resolve-sdf-sort-declaration = 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str	Tue May 17 20:23:08 2011	(r22897)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str	Tue May 17 20:35:19 2011	(r22898)
@@ -7,6 +7,30 @@
   context/-
   include/SpoofaxLang
 	
+rules
+	analyze-section: SDFSectionEH(_, ast) -> <analyze-sdf-errors>ast
+		
+	analyze-section: 
+		SDFSection(ast) -> <analyze-sdf-errors>ast 
+		where
+			<debug-analysis>$[ErrorChecking | SDF Section : [<pp-aterm>]]
+   
+	analyze-sdf-errors : 
+		ast -> (error'*, warning'*, [])
+		where
+			<debug-analysis>$[ErrorChecking | SDF  : [<pp-aterm>]]
+		with
+	    // We only collect-om since we don't want inner warning dupes
+	    error*   := <collect-om(?context-free-syntax(<collect-om(context-free-syntax-error)>), conc)> ast;
+	    warning* := <collect-om(?context-free-syntax(<collect-om(context-free-syntax-warning)>), conc)> ast;
+	    if <file-exists> $[[<get-project-path>]/.disable-global-analysis] then
+	      serror* := []
+	    else
+	      serror* := <collect-om(context-free-syntax-sort-error, conc)> ast
+	    end;
+	    error'*   := <conc;flatten-list> (serror*, error*);
+	    warning'* := <flatten-list> warning*
+
 
 strategies 
   /**

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/str/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/str/check.str	Tue May 17 20:23:08 2011	(r22897)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/str/check.str	Tue May 17 20:35:19 2011	(r22898)
@@ -13,8 +13,16 @@
 	context/sdf/declare-signature
 	context/str/declare
 	context/str/signature-generator
-	 
-	
+
+rules
+  analyze-section: 
+		STRSection(ast) -> ( errors, warnings, [])
+		where
+  		<debug-analysis>$[ErrorChecking | STR Section : [<pp-aterm>]]
+		with
+    	errors   := <collect-all(global-constraint-error + constraint-error, conc)> ast;
+      warnings := <collect-all(constraint-warning, conc)> ast
+      
 rules 
 	//TODO : Use new Is-declared in other cases where needed. 		
   is-declared( |actual-no-of-arguments)=

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str	Tue May 17 20:23:08 2011	(r22897)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str	Tue May 17 20:35:19 2011	(r22898)
@@ -17,6 +17,12 @@
 	utils/debug
 	utils/path
 	config
+	editor/main
+
+	
+rules 
+	get-project-path = (ProjectPath <+ project-path)
+
 
 strategies 
 	//pretty printing aterm 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str	Tue May 17 20:23:08 2011	(r22897)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str	Tue May 17 20:35:19 2011	(r22898)
@@ -25,14 +25,14 @@
 	
 	getStrDeclaration = 
  		?cookie; 
- 		<resolve-symbol-unique-declaration(all-keys-STRDeclaration, bagof-STRDeclaration)><to-scoped-symbol>cookie 
+ 		<to-scoped-symbol;resolve-symbol-declarations(all-keys-STRDeclaration, bagof-STRDeclaration);last>cookie 
  	<+
  		<debug-declaration> $[DeclareSTR | Failed to retrive STRDeclaration for cookie [<pp-aterm-forced><to-scoped-symbol>]];
  		fail
 	
 	getCookie =
 			?sig; 
- 			<resolve-symbol-unique-declaration(all-keys-DeclareCookie, bagof-DeclareCookie)><to-scoped-symbol>sig
+ 			<to-scoped-symbol;resolve-symbol-declarations(all-keys-DeclareCookie, bagof-DeclareCookie);last>sig
  		<+
  			<debug-declaration> $[DeclareSTR | Failed to retrive DeclareCookie for signature [<pp-aterm>]];
  			fail

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str	Tue May 17 20:23:08 2011	(r22897)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str	Tue May 17 20:35:19 2011	(r22898)
@@ -35,11 +35,7 @@
 imports
 	 editor/main
 	 codegen/main
-	
-rules 
-	get-project-path = (ProjectPath <+ project-path)
- 
-	
+
 rules  
    
   editor-complete:

From L.C.L.Kats at tudelft.nl  Tue May 17 23:49:03 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 17 May 2011 21:49:03 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22899 - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	. services
Message-ID: <20110517214903.B9059CC240@mx4.tudelft.nl>

Author: LennartKats
Date: Tue May 17 21:49:03 2011
New Revision: 22899
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22899&sc=1

Log:
Spoofax/378: Disambiguator causes error
should use unshared (string) terms in InputBuilder. to be safe I set Environment.getTermFactory() to use them by default

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	Tue May 17 20:35:19 2011	(r22898)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	Tue May 17 21:49:03 2011	(r22899)
@@ -85,7 +85,7 @@
 	static {
 		descriptors = Collections.synchronizedMap(new HashMap<String, Descriptor>());
 		unmanagedTables = Collections.synchronizedMap(new HashMap<String, ParseTableProvider>());
-		termFactory = new TermFactory();
+		termFactory = new TermFactory().getFactoryWithStorageType(IStrategoTerm.MUTABLE);
 		parseTableManager = new ParseTableManager(termFactory);
 		parseTables = Collections.synchronizedMap(new HashMap<String, ParseTableProvider>());
 		checkJVMOptions();

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java	Tue May 17 20:35:19 2011	(r22898)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java	Tue May 17 21:49:03 2011	(r22899)
@@ -89,6 +89,7 @@
 		}
 		
 		ITermFactory factory = Environment.getTermFactory();
+		assert factory.getDefaultStorageType() == IStrategoTerm.MUTABLE;
 		String path = resource == null ? "input" : resource.getProjectRelativePath().toPortableString();
 		String absolutePath = resource == null ? "." : tryGetProjectPath(resource);
 		

From M.A.Akhter at student.tudelft.nl  Wed May 18 00:22:56 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Tue, 17 May 2011 22:22:56 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22900 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	codegen context context/str
Message-ID: <20110517222256.E9C6B7F8075@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Tue May 17 22:22:56 2011
New Revision: 22900
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22900&sc=1

Log:
*major update on str declaration and analysis. splitting the declaration part in two phases - in first phases it only considers global stuff + later phase it more focus on str bodies. 
* changed in policy - do not care about duplicate module body 
* refactored code a bit
* added debug-declaration switch for future str debugging

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Tue May 17 21:49:03 2011	(r22899)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Tue May 17 22:22:56 2011	(r22900)
@@ -182,7 +182,9 @@
 						// Now, since all the depending-on artifacts are compiled
 						// start compiling the enclosing modules of this package.
 						// Note: currently we are not considering any nested packages.
+						<declare-package>package-typed-qname;
 						<list-loop(compile-spx-module)><get-enclosed-modules>package-typed-qname
+						
 				|};
 			
 				// Making this package as compiled.
@@ -213,7 +215,7 @@
 						// symbols that consist in this particular module are marked/realized
 						// as private symbols. 
 						enclosing-package-typed-qname := <GetEnclosingScope>typed-qname;
-						<compile-spx-package>enclosing-package-typed-qname 				 
+						<compile-spx-package>enclosing-package-typed-qname
 				else
 					<debug-compiler> $[compile-depending-spx | Illegenal depending spx artifact: [<pp-aterm> typed-qname]];
 					fail
@@ -229,14 +231,10 @@
 		where 
 			if not(<CompiledModule>module-typed-qname) then
 				<debug-compiler>$[compile-spx-module| Currently Compiling : [<pp-aterm>]]; //this package is not compiled before
-				module-decl* := <get-module-declarations>module-typed-qname;
+				module-decl := <get-module-declaration>module-typed-qname;
 				{|GetEnclosingModuleName:
 						<declare-current-module-scope> module-typed-qname; 
-						<list-loop(
-								origin-track-forced(declare-all)
-								//declare-all
-						 	)
-						 >module-decl*
+						<declare-module(declare-all)>module-decl
 				|};
 				where(rules(CompiledModule: module-typed-qname -> module-typed-qname))
 			else

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Tue May 17 21:49:03 2011	(r22899)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Tue May 17 22:22:56 2011	(r22900)
@@ -12,15 +12,30 @@
 imports
 	utils/annotations
 	utils/debug
+	utils/contract
 	config	
 	common
 
 rules		
+	declare-package = 
+		contracts(
+			contract-requires(
+				?Package(QName(_))
+			)
+		);
+		get-enclosed-modules;debug;
+		map(get-module-declaration);
+		list-loop(declare-module(declare-global-symbol))
+	
+	declare-module(s) = origin-track-forced(s)
+		
 	declare-all = declare-sdf-all; declare-esv-all ; declare-str-all; update-modified-module-declaration   
+	
+	declare-global-symbol = declare-str-global ;  update-modified-module-declaration
+		
+	init-declaration = init-record-signatures 
 
-	init-declaration = init-record-signatures
-
-
+	
 rules 
 	
 	declare-legacy-artifact(|resolved-path) : legacy-content -> legacy-content
@@ -32,32 +47,17 @@
 	where 
 		<has-extension(|"str") + has-extension(|"rtree")>resolved-path; 
 		<alltd(declare-str-definition-main)>legacy-content
-	
-rules
 
-	// Declaring current scope for further analyze 
-	declare-current-scope(| package-typed-qname , module-typed-qname)=
-		with(
-			<declare-current-package-scope>package-typed-qname;
-			<declare-current-module-scope>module-typed-qname
-		) 
-	
-	declare-current-package-scope : 
-		package-typed-qname -> <id> 
-		with 
-			rules ( GetEnclosingPackageName      := package-typed-qname)
-		
-	declare-current-module-scope:
-			module-typed-qname -> <id> 
-			with 
-				rules ( GetEnclosingModuleName      := module-typed-qname)
-	 
 rules	
+	
 	declare-sdf-all = declare-spxmodules-all(declare-sdf-section) 
 	declare-str-all = declare-spxmodules-all(declare-str-section)
 	declare-esv-all = declare-spxmodules-all(declare-esv-section)
-
+	declare-str-global = declare-spxmodules-all(declare-str-global-section)
+	
+	
 rules
+	
 	declare-spxmodules-all(s): 
 		Module(attrb* , modname , section*) -> Module(attrb* , modname , m-sections*) 
 		where
@@ -96,6 +96,19 @@
 		
 	declare-str-section: ESVSection(def*) -> <id>   
 
+rules
+	
+	declare-str-global-section: SDFSection(def*) -> <id>
+	
+	declare-str-global-section: SDFSectionEH(_,def*) -> <id>
+	
+	declare-str-global-section: s at STRSection(def*) -> STRSection(m-definition*)
+	where 
+		m-definition* := <declare-stratego-globals-top>def*
+	
+		
+	declare-str-section: ESVSection(def*) -> <id>   
+
 rules	
 	
 	declare-esv-section: SDFSection(def*) -> <id>
@@ -108,4 +121,23 @@
 	
 	
 	
-	   
\ No newline at end of file
+	
+rules
+
+	// Declaring current scope for further analyze 
+	declare-current-scope(| package-typed-qname , module-typed-qname)=
+		with(
+			<declare-current-package-scope>package-typed-qname;
+			<declare-current-module-scope>module-typed-qname
+		) 
+
+	declare-current-package-scope : 
+		package-typed-qname -> <id> 
+		with 
+			rules ( GetEnclosingPackageName      := package-typed-qname)
+		
+	declare-current-module-scope:
+			module-typed-qname -> <id> 
+			with 
+				rules ( GetEnclosingModuleName      := module-typed-qname)
+	 	   
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str	Tue May 17 21:49:03 2011	(r22899)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-symbols.str	Tue May 17 22:22:56 2011	(r22900)
@@ -33,13 +33,13 @@
 	where 
 			result := <DeclaredModule>qname 
 			<+
-			debug(!"SymbolTable| Failed to retrieve module's abs file path.");fail
+			<debug-symboltable>$[SymbolTable| Failed to retrieve module's abs file path.];fail
 			 
 	get-package-abs-filepath : Module(qname) -> result
 	where 
 			result := <DeclaredPackage>qname 
 			<+
-			debug(!"SymbolTable| Failed to retrieve package's abs file path.");fail
+			<debug-symboltable>$[SymbolTable| Failed to retrieve package's abs file path.];fail
 	
 rules	
 	// Add scopes for the symbol 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str	Tue May 17 21:49:03 2011	(r22899)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str	Tue May 17 22:22:56 2011	(r22900)
@@ -69,30 +69,35 @@
           DeclareCookie:  scoped-sig  -> cookie
           STRDeclaration: scoped-cookie  -> def
         )
+        ;<debug-declaration>$[DeclareSTR | declare-definition | Storing DeclareCookie : [<pp-aterm>scoped-sig] -> [<pp-aterm>cookie]]
+				;<debug-declaration>$[DeclareSTR | declare-definition | Storing STRDeclaration : [<pp-aterm>scoped-cookie] -> [<pp-aterm>def]]      
       else
        	cookie := <getCookie> sig 
       end
-
+		
 
   redeclare-definition:
     def -> cookie
     with
-    	sig := <signature-of>
+    	 sig := <signature-of>
       ;cookie := <newterm>
       ;scoped-cookie :=<to-scoped-symbol> cookie
       ;scoped-sig    :=<to-scoped-symbol> sig
       ;rules(
         DeclareCookie:  scoped-sig    -> cookie
         STRDeclaration: scoped-cookie -> def
-      )
+      )
+		where
+			<debug-declaration>$[DeclareSTR | redeclare-definition | Storing DeclareCookie : [<pp-aterm>scoped-sig] -> [<pp-aterm>cookie]];
+			<debug-declaration>$[DeclareSTR | redeclare-definition | Storing STRDeclaration : [<pp-aterm>scoped-cookie] -> [<pp-aterm>def]]      
+  
   external SRTS-EXT-newint(|)
   
 rules 
 	
-	declare-str-definition-main =  
-		declare-stratego-globals-top;
-		declare-bodies-top
-	
+	declare-str-definition-main =  declare-bodies-top
+		
+		 
 	declare-stratego-globals-top =
     if not(NoAnalysis) then
     	where(<debug-declaration>$[DeclareSTR | Inside stratego-globals-top : [<pp-aterm>]]);
@@ -118,6 +123,8 @@
       rules(
         DeclareCookie: scoped-sig' -> cookie
       )
+    where
+    	<debug-declaration>$[DeclareSTR | declare-str-definition [<pp-aterm>]| Storing DeclareCookie : [<pp-aterm>scoped-sig'] -> [<pp-aterm>cookie]]  
   
    declare-str-definition:
     ExtSDef(x, s*, t*) -> <id>
@@ -141,7 +148,11 @@
       scoped-sig'  :=<to-scoped-symbol> sig';
       rules(
         DeclareCookie: scoped-sig'   -> cookie
-      )
+      )
+    where
+    	<debug-declaration>$[DeclareSTR | declare-str-definition [<pp-aterm>] | Storing DeclareCookie : [<pp-aterm>scoped-sig'] -> [<pp-aterm>cookie]]  
+    
+    
   declare-dynrule:
     dec @ RDecT(x, s*, t*) -> RDecT(x', s*, t*)
     where
@@ -180,8 +191,9 @@
     ?prefix;
     sig := ($[[prefix]-[x]], s, t);
     scoped-sig := <to-scoped-symbol> sig;
-    rules(DeclareCookie: scoped-sig -> cookie)
-
+    rules(DeclareCookie: scoped-sig -> cookie);
+		where(<debug-declaration>$[DeclareSTR | declare-dr-rule [<pp-aterm>prefix]| Storing DeclareCookie : [<pp-aterm>scoped-sig] -> [<pp-aterm>cookie]])  
+  
 
   dr-scope-declare-cookies(defs, s):
     t -> t'
@@ -395,11 +407,9 @@
   declare-bodies:
     Op(x, t*) -> Op(x', t'*)
     where
-      x' := x{<declare-cookie-of>}
+      x' := x{<declare-cookie-of>}
     with
       t'* := <declare-bodies-top> t*
-
-
 rules 
 
 	// TODO IMPLEMENT IMPORT handling => needs to be moved to the compile-legacy-artifacts

From M.A.Akhter at student.tudelft.nl  Wed May 18 00:37:45 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Tue, 17 May 2011 22:37:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22901 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test: .
	TestLanguage
Message-ID: <20110517223745.4AF9B108C032@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Tue May 17 22:37:45 2011
New Revision: 22901
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22901&sc=1

Log:


Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/Common.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/TestLanguage/
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/Lawoco-Test.spx
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/entity-lang.spx
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/test-without-package.spx

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/Common.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/Common.sdf	Tue May 17 22:37:45 2011	(r22901)
@@ -0,0 +1,8 @@
+module Common 
+
+
+exports
+
+  lexical syntax
+  
+    [a-zA-Z][a-zA-Z0-9\_\-]* -> ID-Test

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/Lawoco-Test.spx
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/Lawoco-Test.spx	Tue May 17 22:22:56 2011	(r22900)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/Lawoco-Test.spx	Tue May 17 22:37:45 2011	(r22901)
@@ -1,21 +1,32 @@
 module Lawoco
-	imports entity-lang
+	imports M2
 
-context-free syntax
-  
-    "module" Module@=ID Definition*     -> Start {"Module", scope(Entity, Module)}
-    "entity" Entity@=ID "{" Member* "}" -> Definition {"Entity", scope(Property, Function)}
-    Entity at ID Property@=ID              -> Member {"Property"}
 
-    Function@=ID "(" { Param "," }* ")" Stm -> Member {"Function", scope(Var)}
-    Var@=ID ":" Entity at ID           -> Param {"Param"}
-    
-    Function at ID "(" {Exp ","}* ")"      -> Exp {"Call"}        %% or, could be an Entity 
-    "var" Var@=ID ":" Entity at ID         -> Stm {"VarDecl"}
-    "var" Var@=ID ":" Entity at ID "=" Exp -> Stm {"VarDeclInit"}
-    Var at ID "=" Exp                      -> Stm {"Assign"}
-    Var at ID                              -> Exp {"Var"}         %% or, could be a Property!
-    Exp "." Property at ID                 -> Exp {"PropAccess"}
-    "{" Stm* "}"                        -> Stm {"Block", scope(Var)}   
-    
-                
\ No newline at end of file
+rules  	
+	position-of-term1:
+    [t | t*] -> position 
+    where
+      if id then
+        position := MARKER()
+      else
+        position := "test2" 
+      end 
+signature 
+	constructors
+	
+	  COMPLETION : String -> Term 
+	  NOCONTEXT  : Term   -> Term
+	  MARKER     : Term
+	
+	  // Below are copies of the signatures of the terms used in example
+	  // trans/test.str file. These definitions should also be automatically 
+	  // generated in the imported include/Test.str module. However,
+	  // to ensure that the example transformation doesn't break when the
+	  // syntax is changed, we also hard-coded them here.
+	          
+	  Module   : ID * List(Entity)   -> Module
+	  Entity   : ID * List(Property) -> Entity
+	  Property : ID * Type           -> Property
+	  Type     : ID                  -> Type   	  
+ 
+

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/entity-lang.spx
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/entity-lang.spx	Tue May 17 22:22:56 2011	(r22900)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/entity-lang.spx	Tue May 17 22:37:45 2011	(r22901)
@@ -1,7 +1,8 @@
-package test
+package M1
 	
-	module test-main 
-		imports entity-lang
+	module B 
+		imports M2
+		
 		
 		context-free start-symbols 
     	Start
@@ -10,19 +11,21 @@
 	    "module" ID Definition*       -> Start {cons("Module")}
 	    "entity" ID "{" Property* "}" -> Definition {cons("Entity")}
 	    ID ":" Type                   -> Property {cons("Property")}
-	    ID                            -> Type {cons("Type")}
-
-
-
+	    ID                            -> Type {cons("Type")} 
 
+		
 	     
-package entity-lang 
-	
-	module module-main
+package M2       
+	 
+	module A
+		language General properties 
+    	name          : entity-lang    
+       	  
+    	
 		imports  
 			libstratego-lib 
-		
-		context-free start-symbols 
+		 
+		context-free start-symbols  
     	Start
  
   	context-free syntax
@@ -34,9 +37,23 @@
 		rules
   	 generate-aterm:
     	(selected, position, ast, path, project-path) -> path
+		
+			
+  
+  	rules
+  		position-of-term1:
+    [t | t*] -> position
+    where
+      if id then
+        position := "test"
+      else
+        position := "test2"
+      end
 
+        
+	     
 		language General properties
-    	name          : entity-lang
+    	
     	id            : entity-lang 
   		extends       : Root
                   

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/test-without-package.spx
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/test-without-package.spx	Tue May 17 22:22:56 2011	(r22900)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/test-without-package.spx	Tue May 17 22:37:45 2011	(r22901)
@@ -1,6 +1,8 @@
 module test-main 
-	 imports entity-lang
-		
+	 imports  
+	 		M2 
+			test/Common   
+			 
 		context-free start-symbols 
     	Start
 
@@ -8,6 +10,7 @@
 	    "module" ID Definition*       -> Start {cons("Module")}
 	    "entity" ID "{" Property* "}" -> Definition {cons("Entity")}
 	    ID ":" Type                   -> Property {cons("Property")}
-	    ID                            -> Type {cons("Type")}    
+	    ID                            -> Type {cons("Type")}
+	    ID-Test                       -> Type {cons("Type")}        
    
-   	   
\ No newline at end of file
+   	     
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Wed May 18 00:40:22 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Tue, 17 May 2011 22:40:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22902 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context
Message-ID: <20110517224022.4A3A6CC037@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Tue May 17 22:40:22 2011
New Revision: 22902
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22902&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Tue May 17 22:37:45 2011	(r22901)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Tue May 17 22:40:22 2011	(r22902)
@@ -23,7 +23,7 @@
 				?Package(QName(_))
 			)
 		);
-		get-enclosed-modules;debug;
+		get-enclosed-modules;
 		map(get-module-declaration);
 		list-loop(declare-module(declare-global-symbol))
 	

From M.A.Akhter at student.tudelft.nl  Wed May 18 02:44:48 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Wed, 18 May 2011 00:44:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22903 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	codegen/str utils
Message-ID: <20110518004448.E70E9CC235@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Wed May 18 00:44:48 2011
New Revision: 22903
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22903&sc=1

Log:
* playing with code-contract | soft type system in stratego|SpoofaxLang

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-contracts.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-contracts.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-contracts.str	Wed May 18 00:44:48 2011	(r22903)
@@ -0,0 +1,64 @@
+module codegen/str/to-contracts
+imports 
+  libstrc
+  lib/editor-common.generated
+  context/str/declare
+  include/SpoofaxLang 
+  
+rules
+  
+  generate-code-contracts:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"contracts.str")> path;
+      result   := <generate-contracts-analysis; pp-stratego-string> selected
+    
+  generate-contracts-analysis:
+    ast ->  Module( "codecontract-generated", <conc>( imports , str-with-code-contracts))
+		where
+			strsection := <collect-om(?STRSection(<id>), conc)> ast;
+			str-with-code-contracts := <alltd(inject-code-contracts)>strsection;
+			imports := [Imports([Import("utils/contract")])]  
+
+rules	
+	inject-code-contracts:  
+		Rule(t1, t2,c) ->  Rule(t1', t2' , condition*)
+		where
+			t1* := <convert-to-list>t1;
+			t2* := <convert-to-list>t2;
+			c*  := <convert-to-list>c  
+		with 
+			t1' := <alltd(convert-to-untyped-var)>t1* ;
+			t2' := <alltd(convert-to-untyped-var)>t2* ;
+			condition* := <conc>(<flatten-list><collect-all(fetch-contracts)>t1* , c* , <flatten-list><collect-all(fetch-contracts)>t2* )  
+			
+	inject-code-contracts:  
+		RuleNoCond(t1, t2) -> <inject-code-contracts>Rule(t1, t2,[])  
+		
+rules
+			
+	convert-to-untyped-var :  VarWithType( v at Var(x) , type) -> v
+	 
+	convert-to-untyped-var :  Var(x) -> Var(x)  
+	
+	fetch-contracts :    Var(x)  -> []
+	
+	fetch-contracts :    
+		VarWithType( v at Var(x) , type-rule)   -> 
+										WhereClause(
+                			BA(
+                				Call(
+                  				SVar("contracts")
+                					, [Call(SVar("contract-requires"), [CallNoArgs(SVar(type-rule))])]
+                				)
+                				, Var(x)
+											)
+										)	
+										
+   convert-to-list : arg -> arg*
+   where 
+   	if <not(is-list)>arg then 
+			arg* := [arg]
+		else
+			arg* := arg
+		end          												
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str	Tue May 17 22:40:22 2011	(r22902)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str	Wed May 18 00:44:48 2011	(r22903)
@@ -1,5 +1,4 @@
-module 
-	utils/contract 
+module 	utils/contract 
 imports 
 	common
 	utils/debug	
@@ -37,4 +36,9 @@
 	with-verification (preconditions, s ) = with-verification (preconditions, s , id)
 	 
 	
-	with-verification (preconditions, s , postconditions) = where(preconditions) ; s ; where(postconditions) <+ fail    
\ No newline at end of file
+	with-verification (preconditions, s , postconditions) = where(preconditions) ; s ; where(postconditions) <+ fail
+	
+rules
+	String = is-string 
+	
+	List = is-list	    
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Wed May 18 02:50:37 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Wed, 18 May 2011 00:50:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22904 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test
Message-ID: <20110518005037.95AEFCC25E@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Wed May 18 00:50:36 2011
New Revision: 22904
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22904&sc=1

Log:
example of spoofaxlang supporting code contracts. internally, it creates a soft type systems to verify and validate pre and post conditions of executing a stratego rule.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/Lawoco-Test.spx

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/Lawoco-Test.spx
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/Lawoco-Test.spx	Wed May 18 00:44:48 2011	(r22903)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/test/Lawoco-Test.spx	Wed May 18 00:50:36 2011	(r22904)
@@ -1,15 +1,45 @@
 module Lawoco
-	imports M2
+	imports M2 
 
+context-free syntax
+  
+    "module" Module@=ID Definition*     -> Start {"Module", scope(Entity, Module)}
+    "entity" Entity@=ID "{" Member* "}" -> Definition {"Entity", scope(Property, Function)}
+    Entity at ID Property@=ID              -> Member {"Property"}
+		    Function@=ID "(" { Param "," }* ")" Stm -> Member {"Function", scope(Var)}
+    Var@=ID ":" Entity at ID           -> Param {"Param"}
+    
+    Function at ID "(" {Exp ","}* ")"      -> Exp {"Call"}        %% or, could be an Entity 
+    "var" Var@=ID ":" Entity at ID         -> Stm {"VarDecl"}
+    "var" Var@=ID ":" Entity at ID "=" Exp -> Stm {"VarDeclInit"}
+    Var at ID "=" Exp                      -> Stm {"Assign"}
+    Var at ID                              -> Exp {"Var"}         %% or, could be a Property!
+    Exp "." Property at ID                 -> Exp {"PropAccess"}
+    "{" Stm* "}"                        -> Stm {"Block", scope(Var)}   
+    
 
 rules  	
+	
+	// Stratego Rules supporting code contracts 
+	
+	remove-quote: 
+    s as String -> s' as String 
+    with
+      if explode-string => ['\'' | s_tail] then 
+        s' := <implode-string> s_tail
+      else
+        s' := s
+      end
+	
 	position-of-term1:
-    [t | t*] -> position 
+    [t | t* as List] -> position as List 
+    where
+    	is-list
     where
       if id then
         position := MARKER()
       else
-        position := "test2" 
+        position := "test2"   
       end 
 signature 
 	constructors
@@ -30,3 +60,4 @@
 	  Type     : ID                  -> Type   	  
  
 
+

From seba at informatik.uni-marburg.de  Wed May 18 11:28:10 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Wed, 18 May 2011 09:28:10 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22905 - in
	sugarj/trunk/compiler: . META-INF org/sugarj/driver
Message-ID: <20110518092810.86E32108C071@mx3.tudelft.nl>

Author: SebastianErdweg
Date: Wed May 18 09:28:09 2011
New Revision: 22905
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22905&sc=1

Log:
improved error recovery for failed SGLR parses

Modified:
   sugarj/trunk/compiler/.classpath
   sugarj/trunk/compiler/META-INF/MANIFEST.MF
   sugarj/trunk/compiler/build.properties
   sugarj/trunk/compiler/org/sugarj/driver/ATermCommands.java
   sugarj/trunk/compiler/org/sugarj/driver/Driver.java
   sugarj/trunk/compiler/org/sugarj/driver/ModuleSystemCommands.java
   sugarj/trunk/compiler/org/sugarj/driver/RetractableTokenizer.java
   sugarj/trunk/compiler/org/sugarj/driver/RetractableTreeBuilder.java
   sugarj/trunk/compiler/org/sugarj/driver/SDFCommands.java

Modified: sugarj/trunk/compiler/.classpath
==============================================================================
--- sugarj/trunk/compiler/.classpath	Wed May 18 00:50:36 2011	(r22904)
+++ sugarj/trunk/compiler/.classpath	Wed May 18 09:28:09 2011	(r22905)
@@ -5,5 +5,6 @@
 	<classpathentry kind="src" path=""/>
 	<classpathentry exported="true" kind="lib" path="make_permissive.jar"/>
 	<classpathentry exported="true" kind="lib" path="commons-cli-1.2.jar"/>
+	<classpathentry kind="lib" path="commons-collections-3.2.1.jar"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>

Modified: sugarj/trunk/compiler/META-INF/MANIFEST.MF
==============================================================================
--- sugarj/trunk/compiler/META-INF/MANIFEST.MF	Wed May 18 00:50:36 2011	(r22904)
+++ sugarj/trunk/compiler/META-INF/MANIFEST.MF	Wed May 18 09:28:09 2011	(r22905)
@@ -21,4 +21,5 @@
  org.sugarj.driver.transformations
 Bundle-ClassPath: make_permissive.jar,
  .,
- commons-cli-1.2.jar
+ commons-cli-1.2.jar,
+ commons-collections-3.2.1.jar

Modified: sugarj/trunk/compiler/build.properties
==============================================================================
--- sugarj/trunk/compiler/build.properties	Wed May 18 00:50:36 2011	(r22904)
+++ sugarj/trunk/compiler/build.properties	Wed May 18 09:28:09 2011	(r22905)
@@ -3,4 +3,5 @@
 bin.includes = META-INF/,\
                .,\
                make_permissive.jar,\
-               commons-cli-1.2.jar
+               commons-cli-1.2.jar,\
+               commons-collections-3.2.1.jar

Modified: sugarj/trunk/compiler/org/sugarj/driver/ATermCommands.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/ATermCommands.java	Wed May 18 00:50:36 2011	(r22904)
+++ sugarj/trunk/compiler/org/sugarj/driver/ATermCommands.java	Wed May 18 09:28:09 2011	(r22905)
@@ -1,7 +1,5 @@
 package org.sugarj.driver;
 
-import static org.sugarj.driver.Log.log;
-
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Collection;
@@ -130,6 +128,11 @@
     return term.getTermType() == IStrategoTerm.LIST;
   }
   
+  public static boolean isString(IStrategoTerm term) {
+    return term.getTermType() == IStrategoTerm.STRING;
+  }
+
+  
   public static List<IStrategoTerm> getList(IStrategoTerm term) {
     
     if (term.getTermType() == IStrategoTerm.LIST)
@@ -371,5 +374,4 @@
         throw new UnsupportedOperationException();
     }
   }
-  
 }

Modified: sugarj/trunk/compiler/org/sugarj/driver/Driver.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/Driver.java	Wed May 18 00:50:36 2011	(r22904)
+++ sugarj/trunk/compiler/org/sugarj/driver/Driver.java	Wed May 18 09:28:09 2011	(r22905)
@@ -34,6 +34,7 @@
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.jsglr.client.InvalidParseTableException;
 import org.spoofax.jsglr.client.ParseTable;
+import org.spoofax.jsglr.client.imploder.IToken;
 import org.spoofax.jsglr.client.imploder.ImploderAttachment;
 import org.spoofax.jsglr.shared.BadTokenException;
 import org.spoofax.jsglr.shared.SGLRException;
@@ -54,7 +55,7 @@
  */
 public class Driver{
   
-  public final static String CACHE_VERSION = "editor-base-0.7a";
+  public final static String CACHE_VERSION = "editor-base-0.9";
   
   private static class Key {
     private String source;
@@ -329,6 +330,7 @@
 
   private IncrementalParseResult parseNextToplevelDeclaration(String input, boolean recovery)
       throws IOException, ParseException, InvalidParseTableException, TokenExpectedException, BadTokenException, SGLRException {
+    int start = inputTreeBuilder.getTokenizer() == null ? 0 : inputTreeBuilder.getTokenizer().getStartOffset();
     log.beginTask("parsing", "PARSE the next toplevel declaration.");
     try {
       IStrategoTerm remainingInputTerm = currentParse(input, recovery);
@@ -362,6 +364,30 @@
       log.log("next toplevel declaration parsed: " + tmpFile);
 
       return new IncrementalParseResult(toplevelDecl, rest);
+    } catch (Exception e) {
+      if (!recovery)
+        throw new SGLRException(parser.getParser(), "parsing failed", e);
+      
+      String msg = e.getClass().getName() + " " + e.getLocalizedMessage() != null ? e.getLocalizedMessage() : e.toString();
+      
+      if (!(e instanceof StrategoException))
+        e.printStackTrace();
+      else
+        log.logErr(msg);
+      
+      if (inputTreeBuilder.getTokenizer().getStartOffset() > start) {
+        IToken token = inputTreeBuilder.getTokenizer().getTokenAtOffset(start);
+        ((RetractableTokenizer) inputTreeBuilder.getTokenizer()).retractTo(token.getIndex());
+        inputTreeBuilder.setOffset(start);
+      }
+      
+      IToken right = inputTreeBuilder.getTokenizer().makeToken(start + input.length() - 1, IToken.TK_STRING, true);
+      IToken left = inputTreeBuilder.getTokenizer().getTokenAtOffset(start);
+      inputTreeBuilder.getTokenizer().makeToken(inputTreeBuilder.getTokenizer().getStartOffset() - 1, IToken.TK_EOF, true);
+      IStrategoTerm term = ATermCommands.factory.makeString(input);
+      ImploderAttachment.putImploderAttachment(term, false, "String", left, right);
+      ATermCommands.setErrorMessage(term, msg);
+      return new IncrementalParseResult(term, "");
     } finally {
       log.endTask();
     }
@@ -540,6 +566,10 @@
            */
           for (IStrategoTerm term : ATermCommands.getList(toplevelDecl))
             processToplevelDeclaration(term);
+        else if (ATermCommands.isString(toplevelDecl)) {
+          if (!sugaredTypeOrSugarDecls.contains(lastSugaredToplevelDecl))
+            sugaredTypeOrSugarDecls.add(lastSugaredToplevelDecl);
+        }
         else
           throw new IllegalArgumentException("unexpected toplevel declaration, desugaring probably failed: " + toplevelDecl.toString(5));
       } catch (Exception e) {
@@ -639,7 +669,10 @@
         res = parseNextToplevelDeclaration(remainingInput, false);
         term = res.getToplevelDecl();
       }
-      catch (Throwable t) { }
+      catch (Throwable t) {
+        res = null;
+        term = null;
+      }
       finally {         
         log.endSilent(); 
       }

Modified: sugarj/trunk/compiler/org/sugarj/driver/ModuleSystemCommands.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/ModuleSystemCommands.java	Wed May 18 00:50:36 2011	(r22904)
+++ sugarj/trunk/compiler/org/sugarj/driver/ModuleSystemCommands.java	Wed May 18 09:28:09 2011	(r22905)
@@ -39,9 +39,12 @@
    * @throws IOException
    */
   public static boolean importClass(String modulePath, IStrategoTerm importTerm, String javaOutFile, HybridInterpreter interp, Result driverResult) throws IOException {
-    if (searchFile(modulePath, ".class") == null)
+    URI classUri = searchFile(modulePath, ".class");
+    if (classUri == null)
       return false;
     
+    driverResult.addFileDependency(classUri.getPath());
+    
     log.beginTask("Generate Java code");
     try {
       driverResult.appendToFile(javaOutFile, SDFCommands.prettyPrintJava(importTerm, interp) + "\n");

Modified: sugarj/trunk/compiler/org/sugarj/driver/RetractableTokenizer.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/RetractableTokenizer.java	Wed May 18 00:50:36 2011	(r22904)
+++ sugarj/trunk/compiler/org/sugarj/driver/RetractableTokenizer.java	Wed May 18 09:28:09 2011	(r22905)
@@ -1,11 +1,11 @@
 package org.sugarj.driver;
 
-import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getLeftToken;
 import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getTokenizer;
 
 import org.spoofax.interpreter.terms.ISimpleTerm;
 import org.spoofax.jsglr.client.KeywordRecognizer;
 import org.spoofax.jsglr.client.imploder.IToken;
+import org.spoofax.jsglr.client.imploder.ImploderAttachment;
 import org.spoofax.jsglr.client.imploder.Tokenizer;
 
 /**
@@ -19,8 +19,11 @@
   
   public void retract(ISimpleTerm node) {
     assert getTokenizer(node) == this;
-    
-    IToken tok = getLeftToken(node);
+    retractTo(ImploderAttachment.getLeftToken(node).getIndex());
+  }
+  
+  public void retractTo(int index) {
+    IToken tok = getTokenAt(index);
     
     int start = tok.getIndex();
     

Modified: sugarj/trunk/compiler/org/sugarj/driver/RetractableTreeBuilder.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/RetractableTreeBuilder.java	Wed May 18 00:50:36 2011	(r22904)
+++ sugarj/trunk/compiler/org/sugarj/driver/RetractableTreeBuilder.java	Wed May 18 09:28:09 2011	(r22905)
@@ -38,6 +38,10 @@
     setOffset(getTokenizer().getStartOffset());
   }
   
+  public void setOffset(int offset) {
+    super.setOffset(offset);
+  }
+  
   public boolean isInitialized() {
     return isInitialized;
   }

Modified: sugarj/trunk/compiler/org/sugarj/driver/SDFCommands.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/SDFCommands.java	Wed May 18 00:50:36 2011	(r22904)
+++ sugarj/trunk/compiler/org/sugarj/driver/SDFCommands.java	Wed May 18 09:28:09 2011	(r22905)
@@ -10,6 +10,11 @@
 import java.util.Collection;
 import java.util.LinkedList;
 import java.util.List;
+import java.util.concurrent.Callable;
+import java.util.concurrent.ExecutionException;
+import java.util.concurrent.FutureTask;
+import java.util.concurrent.TimeUnit;
+import java.util.concurrent.TimeoutException;
 import java.util.regex.Pattern;
 
 import org.spoofax.interpreter.terms.IStrategoTerm;
@@ -46,6 +51,11 @@
   
   private final static Pattern SDF_FILE_PATTERN = Pattern.compile(".*\\.sdf");
   
+  /*
+   * timeout for parsing files (in milliseconds)
+   */
+  private final static long PARSE_TIMEOUT = 30000;
+  
   public static ModuleKeyCache<String> sdfCache = null;
   
   private static void packSdf(String sdf, String def, Context sdfContext) throws IOException {
@@ -267,7 +277,7 @@
    * @throws BadTokenException 
    * @throws TokenExpectedException 
    */
-  private static IStrategoTerm jsglri(ParseTable table, String source, String start, ITreeBuilder treeBuilder, JSGLRI parser) throws IOException, InvalidParseTableException, TokenExpectedException, BadTokenException, SGLRException {
+  private static IStrategoTerm jsglri(ParseTable table, final String source, String start, ITreeBuilder treeBuilder, final JSGLRI parser) throws IOException, InvalidParseTableException, TokenExpectedException, BadTokenException, SGLRException {
     parser.setParseTable(table);
     parser.setStartSymbol(start);
     
@@ -276,7 +286,25 @@
     
     parser.getParser().setTreeBuilder(treeBuilder);
 
-    return parser.parse(source, "in-file declaration");
+    FutureTask<IStrategoTerm> res = new FutureTask<IStrategoTerm>(new Callable<IStrategoTerm>() {
+      @Override
+      public IStrategoTerm call() throws Exception {
+        return parser.parse(source, "in-file declaration");
+      }
+    });
+    
+    try {
+      new Thread(res).start();
+      return res.get(PARSE_TIMEOUT, TimeUnit.MILLISECONDS);
+    } catch (ExecutionException e) {
+      if (e.getCause() instanceof SGLRException)
+        throw (SGLRException) e.getCause();
+      throw new SGLRException(parser.getParser(), "unexpected execution error", e);
+    } catch (InterruptedException e) {
+      throw new SGLRException(parser.getParser(), "parser was interrupted", e);
+    } catch (TimeoutException e) {
+      throw new SGLRException(parser.getParser(), "parser timed out, timeout at " + PARSE_TIMEOUT + "ms", e);
+    }
   }
   
 //  /**

From seba at informatik.uni-marburg.de  Wed May 18 11:28:57 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Wed, 18 May 2011 09:28:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22906 - in
	sugarj/trunk/stdlib/org/sugarj: languages transformations
Message-ID: <20110518092857.25DA7108C087@mx3.tudelft.nl>

Author: SebastianErdweg
Date: Wed May 18 09:28:56 2011
New Revision: 22906
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22906&sc=1

Log:
some older changes

Modified:
   sugarj/trunk/stdlib/org/sugarj/languages/EditorServices.def
   sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.def
   sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.str
   sugarj/trunk/stdlib/org/sugarj/transformations/EditorServiceExtension.str

Modified: sugarj/trunk/stdlib/org/sugarj/languages/EditorServices.def
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/languages/EditorServices.def	Wed May 18 09:28:09 2011	(r22905)
+++ sugarj/trunk/stdlib/org/sugarj/languages/EditorServices.def	Wed May 18 09:28:56 2011	(r22906)
@@ -69,13 +69,13 @@
   (
 
   syntax
-    "refactorings" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF>      {cons("Refactorings")}
+    "refactorings" <SectionName-LEX> <LAYOUT?-CF> <RefactoringRule*-CF> -> <Section-CF>      {cons("Refactorings")}
     "refactorings"                                                   -> <ReservedName-CF> 
 
   context-free syntax
-    "pp-table" ":" StrategoCall                                            -> SemanticRule {cons("PPTable")}
-    "pretty-print" ":" StrategoCall                                        -> SemanticRule {cons("PrettyPrint")}
-    "refactoring" SemanticNode* ":" String "=" StrategoCall BuilderOption* -> SemanticRule {cons("Refactoring")}
+    "pp-table" ":" StrategoCall                                            -> RefactoringRule {cons("PPTable")}
+    "pretty-print" ":" StrategoCall                                        -> RefactoringRule {cons("PrettyPrint")}
+    "refactoring" SemanticNode* ":" String "=" StrategoCall BuilderOption* -> RefactoringRule {cons("Refactoring")}
 
   )
 
@@ -84,15 +84,15 @@
 
 exports
   syntax
-    "builders" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF>      {cons("Builders")}
+    "builders" <SectionName-LEX> <LAYOUT?-CF> <BuilderRule*-CF> -> <Section-CF>      {cons("Builders")}
     "builders"                                                   -> <ReservedName-CF> 
-    "analysis" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF>      {cons("Builders"), deprecated("Use 'builders' instead")}
+    "analysis" <SectionName-LEX> <LAYOUT?-CF> <BuilderRule*-CF> -> <Section-CF>      {cons("Builders"), deprecated("Use 'builders' instead")}
     "analysis"                                                   -> <ReservedName-CF> 
 
   context-free syntax
-    "observer" ":" StrategoCall                          -> SemanticRule  {cons("SemanticObserver")}
-    "builder" ":" String "=" StrategoCall BuilderOption* -> SemanticRule  {cons("Builder")}
-    "builder" "caption" ":" PropertyValue                -> SemanticRule  {cons("BuilderCaption")}
+    "observer" ":" StrategoCall                          -> BuilderRule  {cons("SemanticObserver")}
+    "builder" ":" String "=" StrategoCall BuilderOption* -> BuilderRule  {cons("Builder")}
+    "builder" "caption" ":" PropertyValue                -> BuilderRule  {cons("BuilderCaption")}
     "(openeditor)"                                       -> BuilderOption {cons("OpenEditor")}
     "(realtime)"                                         -> BuilderOption {cons("RealTime")}
     "(persistent)"                                       -> BuilderOption {cons("Persistent")}
@@ -107,20 +107,20 @@
   sorts CompletionPart CompletionAnno
 
   syntax
-    "completions" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF>      {cons("Completions")}
+    "completions" <SectionName-LEX> <LAYOUT?-CF> <CompletionRule*-CF> -> <Section-CF>      {cons("Completions")}
     "completions"                                                   -> <ReservedName-CF> 
 
   context-free syntax
-    "completion" "proposer" ":" StrategoCall                                           -> SemanticRule {cons("CompletionProposer")}
-    "completion" "lexical" ":" PropertyValue                                           -> SemanticRule {cons("IdentifierLexical"), deprecated("Use 'identifier lexical' instead")}
-    "identifier" "lexical" ":" PropertyValue                                           -> SemanticRule {cons("IdentifierLexical")}
-    "completion" "keyword" ":" PropertyValue CompletionAnno                            -> SemanticRule {cons("CompletionKeyword")}
-    "completion" "template" ":" CompletionPart CompletionPart* CompletionAnno          -> SemanticRule {cons("CompletionTemplate")}
-    "completion" "template" ":" Id CompletionPart+ CompletionAnno                      -> SemanticRule {cons("CompletionTemplate"), avoid, deprecated("Add quotes to the starting literal")}
-    "completion" "template" ":" Sort "=" CompletionPart CompletionPart* CompletionAnno -> SemanticRule {cons("CompletionTemplateWithSort")}
-    "completion" "template" ":" PropertyValue CompletionPart* CompletionAnno           -> SemanticRule {cons("CompletionTemplate"), recover, avoid}
-    "completion" "template" ":" Sort "=" PropertyValue CompletionPart* CompletionAnno  -> SemanticRule {cons("CompletionTemplateWithSort"), recover, avoid}
-    "completion" "trigger" ":" PropertyValue CompletionAnno                            -> SemanticRule {cons("CompletionTrigger")}
+    "completion" "proposer" ":" StrategoCall                                           -> CompletionRule {cons("CompletionProposer")}
+    "completion" "lexical" ":" PropertyValue                                           -> CompletionRule {cons("IdentifierLexical"), deprecated("Use 'identifier lexical' instead")}
+    "identifier" "lexical" ":" PropertyValue                                           -> CompletionRule {cons("IdentifierLexical")}
+    "completion" "keyword" ":" PropertyValue CompletionAnno                            -> CompletionRule {cons("CompletionKeyword")}
+    "completion" "template" ":" CompletionPart CompletionPart* CompletionAnno          -> CompletionRule {cons("CompletionTemplate")}
+    "completion" "template" ":" Id CompletionPart+ CompletionAnno                      -> CompletionRule {cons("CompletionTemplate"), avoid, deprecated("Add quotes to the starting literal")}
+    "completion" "template" ":" Sort "=" CompletionPart CompletionPart* CompletionAnno -> CompletionRule {cons("CompletionTemplateWithSort")}
+    "completion" "template" ":" PropertyValue CompletionPart* CompletionAnno           -> CompletionRule {cons("CompletionTemplate"), recover, avoid}
+    "completion" "template" ":" Sort "=" PropertyValue CompletionPart* CompletionAnno  -> CompletionRule {cons("CompletionTemplateWithSort"), recover, avoid}
+    "completion" "trigger" ":" PropertyValue CompletionAnno                            -> CompletionRule {cons("CompletionTrigger")}
 
   context-free syntax
     "completions" -> StrategoCall   {reject}
@@ -152,14 +152,14 @@
 
 exports
   syntax
-    "references" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF>      {cons("References")}
+    "references" <SectionName-LEX> <LAYOUT?-CF> <ReferenceRule*-CF> -> <Section-CF>      {cons("References")}
     "references"                                                   -> <ReservedName-CF> 
 
   context-free syntax
-    "reference" SemanticNode ":" StrategoCall StrategoCall -> SemanticRule {cons("ReferenceHoverRule"), deprecated}
-    "reference" SemanticNode ":" StrategoCall              -> SemanticRule {cons("ReferenceRule")}
-    "hover" SemanticNode ":" StrategoCall                  -> SemanticRule {cons("HoverRule")}
-    "occurrence" SemanticNode ":" StrategoCall             -> SemanticRule {cons("OccurrenceRule")}
+    "reference" SemanticNode ":" StrategoCall StrategoCall -> ReferenceRule {cons("ReferenceHoverRule"), deprecated}
+    "reference" SemanticNode ":" StrategoCall              -> ReferenceRule {cons("ReferenceRule")}
+    "hover" SemanticNode ":" StrategoCall                  -> ReferenceRule {cons("HoverRule")}
+    "occurrence" SemanticNode ":" StrategoCall             -> ReferenceRule {cons("OccurrenceRule")}
 
   context-free syntax
     "references" -> StrategoCall {reject}
@@ -262,9 +262,18 @@
 
   context-free syntax
     Node                                    -> SemanticNode 
-    "provider" PropertyValue                -> SemanticRule {cons("SemanticProvider"), deprecated("Use 'provider :'")}
-    "provider" ":" PropertyValue            -> SemanticRule {cons("SemanticProvider")}
-    "on" "save" ":" StrategoCall OnSaveAnno -> SemanticRule {cons("OnSave")}
+    "provider" PropertyValue                -> RefactoringRule {cons("SemanticProvider"), deprecated("Use 'provider :'")}
+    "provider" ":" PropertyValue            -> RefactoringRule {cons("SemanticProvider")}
+    "on" "save" ":" StrategoCall OnSaveAnno -> RefactoringRule {cons("OnSave")}
+    "provider" PropertyValue                -> BuilderRule {cons("SemanticProvider"), deprecated("Use 'provider :'")}
+    "provider" ":" PropertyValue            -> BuilderRule {cons("SemanticProvider")}
+    "on" "save" ":" StrategoCall OnSaveAnno -> BuilderRule {cons("OnSave")}
+    "provider" PropertyValue                -> CompletionRule {cons("SemanticProvider"), deprecated("Use 'provider :'")}
+    "provider" ":" PropertyValue            -> CompletionRule {cons("SemanticProvider")}
+    "on" "save" ":" StrategoCall OnSaveAnno -> CompletionRule {cons("OnSave")}
+    "provider" PropertyValue                -> ReferenceRule {cons("SemanticProvider"), deprecated("Use 'provider :'")}
+    "provider" ":" PropertyValue            -> ReferenceRule {cons("SemanticProvider")}
+    "on" "save" ":" StrategoCall OnSaveAnno -> ReferenceRule {cons("OnSave")}
     StrategoId                              -> StrategoCall {cons("Strategy")}
     "id" "." StrategoId                     -> StrategoCall {cons("Attribute")}
                                             -> OnSaveAnno   {cons("None")}
@@ -433,7 +442,10 @@
             Section          => EditorServiceSection
             OnSaveAnno       => EditorServiceOnSaveAnno
             StrategoCall     => EditorServiceStrategoCall
-            SemanticRule     => EditorServiceSemanticRule
+            RefactoringRule  => EditorServiceRefactoringRule
+            BuilderRule      => EditorServiceBuilderRule
+            CompletionRule   => EditorServiceCompletionRule
+            ReferenceRule    => EditorServiceReferenceRule
             SemanticNode     => EditorServiceSemanticNode
             StrategoId       => EditorServiceStrategoId
             ModuleName       => EditorServiceModuleName

Modified: sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.def
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.def	Wed May 18 09:28:09 2011	(r22905)
+++ sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.def	Wed May 18 09:28:56 2011	(r22906)
@@ -157,14 +157,15 @@
     AnnoOrSugarMod* "editor" "services" JavaId -> EditorServicesDecHead {cons("EditorServicesDecHead")}
     "{" EditorServiceSection* "}"              -> EditorServicesBody    {cons("EditorServicesBody")}
 
-  syntax
-    "checking" <EditorServiceSectionName-LEX> <LAYOUT?-CF> <CheckingRule*-CF> -> <EditorServiceSection-CF>      {cons("Checking")}
-    "checking"                                                                -> <EditorServiceReservedName-CF> 
+  context-free syntax
+    ChecksDecHead ChecksBody   -> ToplevelDeclaration              {cons("ChecksDec")}
+    AnnoOrSugarMod* "checks" JavaId -> ChecksDecHead {cons("ChecksDecHead")}
+    "{" CheckingRule* "}"              -> ChecksBody    {cons("ChecksBody")}
 
   context-free syntax
-    "errors" ":" CheckingRuleBody                          -> CheckingRule     {cons("CheckingRuleErrors")}
-    "warnings" ":" CheckingRuleBody                        -> CheckingRule     {cons("CheckingRuleWarnings")}
-    "notes" ":" CheckingRuleBody                           -> CheckingRule     {cons("CheckingRuleNotes")}
+    "errors" CheckingRuleBody                          -> CheckingRule     {cons("CheckingRuleErrors")}
+    "warnings" CheckingRuleBody                        -> CheckingRule     {cons("CheckingRuleWarnings")}
+    "notes" CheckingRuleBody                           -> CheckingRule     {cons("CheckingRuleNotes")}
     StrategoTerm "=" StrategoTerm                          -> CheckingRuleBody {cons("RuleNoCond")}
     StrategoTerm "=" StrategoTerm "where" StrategoStrategy -> CheckingRuleBody {cons("Rule")}
     StrategoTerm "=" StrategoTerm StrategoRuleCond+        -> CheckingRuleBody {cons("Rule"), avoid}

Modified: sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.str
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.str	Wed May 18 09:28:09 2011	(r22905)
+++ sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.str	Wed May 18 09:28:56 2011	(r22906)
@@ -43,4 +43,7 @@
     EditorServicesDec          : EditorServicesDecHead * EditorServicesDecBody -> SugarDec
     EditorServicesDecHead      : List(Annos) * JavaId -> EditorServicesDecHead
     EditorServicesBody         : List(EditorServicesSection) -> EditorServiceBody
+    ChecksDec          : EditorServicesDecHead * EditorServicesDecBody -> SugarDec
+    ChecksDecHead      : List(Annos) * JavaId -> EditorServicesDecHead
+    ChecksBody         : List(EditorServicesSection) -> EditorServiceBody
     
\ No newline at end of file

Modified: sugarj/trunk/stdlib/org/sugarj/transformations/EditorServiceExtension.str
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/transformations/EditorServiceExtension.str	Wed May 18 09:28:09 2011	(r22905)
+++ sugarj/trunk/stdlib/org/sugarj/transformations/EditorServiceExtension.str	Wed May 18 09:28:56 2011	(r22906)
@@ -20,8 +20,10 @@
 
 rules
   
-  service-to-sugar :
-    Checking(_, rs) -> ([], <map(checkingrule-to-sugar)> rs)
+  desugar = changed-tree(checks-to-sugar)
+  
+  checks-to-sugar : 
+    ChecksDec(ChecksDecHead(mods, name), ChecksBody(rs)) -> SugarDec(SugarDecHead(mods, name), SugarBody(<map(checkingrule-to-sugar)> rs))
   
   checkingrule-to-sugar :
     CheckingRuleErrors(r) -> transformation-elem(
@@ -45,6 +47,8 @@
 
 
 rules
+	
+	service-to-sugar = fail
 
   extract-sugar-from-service :
     EditorServicesDec(

From m.dejonge at tudelft.nl  Wed May 18 15:45:29 2011
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Wed, 18 May 2011 13:45:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22907 -
	spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client
Message-ID: <20110518134529.512FE7F80D9@mx1.tudelft.nl>

Author: MaartjeDeJonge
Date: Wed May 18 13:45:29 2011
New Revision: 22907
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22907&sc=1

Log:
penalty for Water recovery rules

Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/SGLR.java

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/SGLR.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/SGLR.java	Wed May 18 09:28:56 2011	(r22906)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/SGLR.java	Wed May 18 13:45:29 2011	(r22907)
@@ -785,7 +785,13 @@
 	}
 
 	private int calcRecoverCount(Production prod, Path path) {
-		return path.getRecoverCount() + (prod.isRecoverProduction() ? 1 : 0);
+		int result = path.getRecoverCount();
+		if (prod.isRecoverProduction()){
+			result += 1;
+			if (path.getLength() > 0)
+				result += 1; //Hack: insertion rules (length 0) should be preferred above water rules.
+		}
+		return result;
 	}
 
 	private boolean inReduceStacks(Queue<Frame> q, Frame frame) {

From tobivollebregt at gmail.com  Wed May 18 16:02:05 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 18 May 2011 14:02:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22908 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax
Message-ID: <20110518140205.785B4108C0D3@mx3.tudelft.nl>

Author: tvo
Date: Wed May 18 14:02:05 2011
New Revision: 22908
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22908&sc=1

Log:
(Temporarily?) undeprecate old-style completion templates

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf	Wed May 18 13:45:29 2011	(r22907)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf	Wed May 18 14:02:05 2011	(r22908)
@@ -28,7 +28,7 @@
     "completion" "template" ":" Id CompletionPart+ OptCompletionAnno -> SemanticRule {cons("CompletionTemplate"), avoid, deprecated("Add quotes to the starting literal")}
 
     %% Deprecated: replaced by CompletionTemplateEx
-    "completion" "template" ":" Sort "=" CompletionPart CompletionPart* OptCompletionAnno -> SemanticRule {cons("CompletionTemplateWithSort"), avoid, deprecated("Move the sort before ':' and remove '='")}
+    "completion" "template" ":" Sort "=" CompletionPart CompletionPart* OptCompletionAnno -> SemanticRule {cons("CompletionTemplateWithSort"), avoid} %% deprecated("Move the sort before ':' and remove '='")
 
     %% Used as content completion triggers
     %% "completion" "template" PropertyValue CompletionPart* OptCompletionAnno -> SemanticRule {cons("CompletionTemplate"), recover, avoid}

From L.C.L.Kats at tudelft.nl  Wed May 18 16:09:45 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 18 May 2011 14:09:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22909 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice
Message-ID: <20110518140945.863627F807E@mx1.tudelft.nl>

Author: LennartKats
Date: Wed May 18 14:09:45 2011
New Revision: 22909
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22909&sc=1

Log:
+build.properties

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.properties

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.properties	Wed May 18 14:09:45 2011	(r22909)
@@ -0,0 +1,8 @@
+source.. = editor/java/
+output.. = bin/
+bin.includes = META-INF/,\
+               .,\
+               plugin.xml,\
+               include/,\
+               bin/,\
+               .

From M.A.Akhter at student.tudelft.nl  Wed May 18 16:39:01 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Wed, 18 May 2011 14:39:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22910 -
	spoofax-contrib/Lawoco/trans
Message-ID: <20110518143901.55EA2108C0E2@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Wed May 18 14:39:00 2011
New Revision: 22910
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22910&sc=1

Log:
* adjusting the import statements to refer to the new directory structure

Modified:
   spoofax-contrib/Lawoco/trans/analyze.str
   spoofax-contrib/Lawoco/trans/check.str
   spoofax-contrib/Lawoco/trans/generate-java.str
   spoofax-contrib/Lawoco/trans/generate-xml.str
   spoofax-contrib/Lawoco/trans/lawoco.str
   spoofax-contrib/Lawoco/trans/types.str

Modified: spoofax-contrib/Lawoco/trans/analyze.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/analyze.str	Wed May 18 14:09:45 2011	(r22909)
+++ spoofax-contrib/Lawoco/trans/analyze.str	Wed May 18 14:39:00 2011	(r22910)
@@ -1,8 +1,8 @@
 module analyze
 
 imports
-  .shadowdir/Lawoco/Lawoco-signature
-  .shadowdir/Lawoco/Lawoco
+  .shadowdir/__default/Lawoco-signature
+  .shadowdir/__default/Lawoco
   analysis-library
   types
   lib/analysis-library

Modified: spoofax-contrib/Lawoco/trans/check.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/check.str	Wed May 18 14:09:45 2011	(r22909)
+++ spoofax-contrib/Lawoco/trans/check.str	Wed May 18 14:39:00 2011	(r22910)
@@ -2,8 +2,8 @@
 
 imports
   libstratego-lib
-  .shadowdir/Lawoco/Lawoco-signature
-  .shadowdir/Lawoco/Lawoco
+  .shadowdir/__default/Lawoco-signature
+  .shadowdir/__default/Lawoco
   lib/editor-common.generated
   analysis-library
   types

Modified: spoofax-contrib/Lawoco/trans/generate-java.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/generate-java.str	Wed May 18 14:09:45 2011	(r22909)
+++ spoofax-contrib/Lawoco/trans/generate-java.str	Wed May 18 14:39:00 2011	(r22910)
@@ -4,7 +4,7 @@
   libstratego-lib
   libstratego-gpp
   libstratego-aterm
-  .shadowdir/Lawoco/Lawoco-signature
+  .shadowdir/__default/Lawoco-signature
   lib/editor-common.generated
 
 rules

Modified: spoofax-contrib/Lawoco/trans/generate-xml.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/generate-xml.str	Wed May 18 14:09:45 2011	(r22909)
+++ spoofax-contrib/Lawoco/trans/generate-xml.str	Wed May 18 14:39:00 2011	(r22910)
@@ -4,7 +4,7 @@
   libstratego-lib
   libstratego-gpp
   libstratego-aterm
-  .shadowdir/Lawoco/Lawoco-signature
+  .shadowdir/__default/Lawoco-signature
   lib/editor-common.generated
 
 rules

Modified: spoofax-contrib/Lawoco/trans/lawoco.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/lawoco.str	Wed May 18 14:09:45 2011	(r22909)
+++ spoofax-contrib/Lawoco/trans/lawoco.str	Wed May 18 14:39:00 2011	(r22910)
@@ -4,7 +4,7 @@
   libstratego-lib
   libstratego-gpp
   libstratego-aterm
-  .shadowdir/Lawoco/Lawoco
+  .shadowdir/__default/Lawoco
   lib/-
   analyze
   check

Modified: spoofax-contrib/Lawoco/trans/types.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/types.str	Wed May 18 14:09:45 2011	(r22909)
+++ spoofax-contrib/Lawoco/trans/types.str	Wed May 18 14:39:00 2011	(r22910)
@@ -2,7 +2,7 @@
 
 imports
   analysis-library
-  .shadowdir/Lawoco/Lawoco-signature
+  .shadowdir/__default/Lawoco-signature
 
 signature constructors
 

From M.A.Akhter at student.tudelft.nl  Wed May 18 16:41:59 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Wed, 18 May 2011 14:41:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22911 - in
	spoofax-contrib/Lawoco: lib syntax
Message-ID: <20110518144159.2E4322B806E@mx2.tudelft.nl>

Author: MdAdilAkhter
Date: Wed May 18 14:41:58 2011
New Revision: 22911
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22911&sc=1

Log:
* adding language name in spx def otherwise, it is not generating main artifacts according the current code gen policy.

* also committing new spoofaxlang.jar

Modified:
   spoofax-contrib/Lawoco/lib/spoofaxlang.jar
   spoofax-contrib/Lawoco/syntax/Lawoco.spx

Modified: spoofax-contrib/Lawoco/lib/spoofaxlang.jar
==============================================================================
Binary file (source and/or target). No diff available.

Modified: spoofax-contrib/Lawoco/syntax/Lawoco.spx
==============================================================================
--- spoofax-contrib/Lawoco/syntax/Lawoco.spx	Wed May 18 14:39:00 2011	(r22910)
+++ spoofax-contrib/Lawoco/syntax/Lawoco.spx	Wed May 18 14:41:58 2011	(r22911)
@@ -1,7 +1,7 @@
 module Lawoco
 
 context-free start-symbols
-   Start
+   Start  
 
 context-free syntax
   
@@ -24,4 +24,12 @@
     Var at ID "=" Exp                 -> Stm {"Assign"}
     Var at ID                         -> Exp {"Var"}
     Exp "." Property at ID            -> Exp {"PropAccess"}
-    "{" Stm* "}"                   -> Stm {"Block", scope(Var)}   
\ No newline at end of file
+    "{" Stm* "}"                   -> Stm {"Block", scope(Var)}
+
+
+
+language General properties
+  name          : Lawoco
+  id            : Lawoco
+
+

From L.C.L.Kats at tudelft.nl  Wed May 18 16:54:41 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 18 May 2011 14:54:41 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22912 -
	spoofax-contrib/Lawoco
Message-ID: <20110518145441.3C2DA108C086@mx3.tudelft.nl>

Author: LennartKats
Date: Wed May 18 14:54:41 2011
New Revision: 22912
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22912&sc=1

Log:
different main module for syntax

Modified:
   spoofax-contrib/Lawoco/build.main.xml

Modified: spoofax-contrib/Lawoco/build.main.xml
==============================================================================
--- spoofax-contrib/Lawoco/build.main.xml	Wed May 18 14:41:58 2011	(r22911)
+++ spoofax-contrib/Lawoco/build.main.xml	Wed May 18 14:54:41 2011	(r22912)
@@ -87,7 +87,7 @@
               <arg value="-o"/>
               <targetfile/>
               <arg value="-m"/>
-              <arg value="_default/_default-main"/>
+              <arg value="Lawoco"/>
               
               <fileset file="${include}/${sdfmodule}-Permissive.def"/>
               <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>

From seba at informatik.uni-marburg.de  Wed May 18 17:05:30 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Wed, 18 May 2011 15:05:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22913 - in
	sugarj/trunk: compiler compiler/org/sugarj/driver
	editor/editor/java/org/sugarj/editor feature update-site
Message-ID: <20110518150530.5316ACC1F4@mx4.tudelft.nl>

Author: SebastianErdweg
Date: Wed May 18 15:05:30 2011
New Revision: 22913
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22913&sc=1

Log:
caches respect transitive dependencies now

Added:
   sugarj/trunk/compiler/commons-collections-3.2.1.jar   (contents, props changed)
Deleted:
   sugarj/trunk/compiler/org/sugarj/driver/PendingResult.java
Modified:
   sugarj/trunk/compiler/org/sugarj/driver/Driver.java
   sugarj/trunk/compiler/org/sugarj/driver/FileCommands.java
   sugarj/trunk/compiler/org/sugarj/driver/ModuleSystemCommands.java
   sugarj/trunk/compiler/org/sugarj/driver/Result.java
   sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParseController.java
   sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParser.java
   sugarj/trunk/feature/feature.xml
   sugarj/trunk/update-site/site.xml

Added: sugarj/trunk/compiler/commons-collections-3.2.1.jar
==============================================================================
Binary file. No diff available.

Modified: sugarj/trunk/compiler/org/sugarj/driver/Driver.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/Driver.java	Wed May 18 14:54:41 2011	(r22912)
+++ sugarj/trunk/compiler/org/sugarj/driver/Driver.java	Wed May 18 15:05:30 2011	(r22913)
@@ -22,8 +22,12 @@
 import java.net.URL;
 import java.net.URLClassLoader;
 import java.text.ParseException;
+import java.util.AbstractMap;
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
+import java.util.Map.Entry;
 
 import org.apache.commons.cli.CommandLine;
 import org.apache.commons.cli.CommandLineParser;
@@ -80,6 +84,7 @@
   private final static int PENDING_TIMEOUT = 120000;
 
   private static LRUMap resultCache = new LRUMap(50);
+  private static Map<String, Entry<String, Driver>> pendingRuns = new HashMap<String, Map.Entry<String,Driver>>();
 
   private static List<URI> allInputFiles;
   private static List<URI> pendingInputFiles;
@@ -132,29 +137,58 @@
   
   private List<String> generatedJavaClasses = new ArrayList<String>();
   
+  
+  
+  static {
+    try {
+      Environment.init();
+      
+      if (Environment.cacheDir != null)
+        FileCommands.createDir(Environment.cacheDir);
+      
+      FileCommands.createDir(Environment.bin);
+      
+      initializeCaches();
+    } catch (IOException e) {
+      throw new RuntimeException("error while initializin driver", e);
+    }
+    
+    allInputFiles = new ArrayList<URI>();
+    pendingInputFiles = new ArrayList<URI>();
+    currentlyProcessing = new ArrayList<URI>();
+  }
+  
+  
+  
+  
+  
   private static synchronized Result getResult(String source, String moduleName) {
     return (Result) resultCache.get(new Key(source, moduleName));
   }
   
-  private static Result getNonPendingResult(String source, String moduleName) {
-    Key key = new Key(source, moduleName);
-    Result r;
-    int count = 0;
-    synchronized (key) {
+  private static synchronized Entry<String, Driver> getPendingRun(String file) {
+    return pendingRuns.get(file);
+  }
+  
+  private static synchronized void putPendingRun(String file, String source, Driver driver) {
+    pendingRuns.put(file, new AbstractMap.SimpleImmutableEntry<String, Driver>(source, driver));
+  }
+  
+  private static void waitForPending(String file) {
+    Integer count = 0;
+    synchronized (count) {
       while (true) {
-        synchronized (resultCache) {
-          r = (Result) resultCache.get(key);
+        synchronized (pendingRuns) {
+          if (!pendingRuns.containsKey(file))
+            return;
         }
         
-        if (r != null && !(r instanceof PendingResult))
-          return r;
-        
         if (count > PENDING_TIMEOUT)
-          throw new IllegalStateException("pending result timed out for module " + moduleName);
+          throw new IllegalStateException("pending result timed out for " + file);
         
         count += 100;
         try {
-          key.wait(100);
+          count.wait(100);
         } catch (InterruptedException e) {
         }
       }
@@ -189,29 +223,36 @@
   
   public static Result compile(String source, String moduleName, String file) throws IOException, TokenExpectedException, BadTokenException, ParseException, InvalidParseTableException, SGLRException, InterruptedException {
     Driver driver = new Driver();
+    Entry<String, Driver> pending = null;
     
-    boolean isPending = false;
     synchronized (Driver.class) {
-      Result result = getResult(source, moduleName);
-      if (result != null && result instanceof PendingResult)
-        isPending = true;
-      else if (result != null && result.isUpToDate())
-        return result;
-      
-      // mark this module as pending 
-      if (!isPending)
-        putResult(source, moduleName, new PendingResult(driver));
+      pending = getPendingRun(file);
+      if (pending != null && !pending.getKey().equals(source)) {
+        log.log("interrupting " + moduleName);
+        pending.getValue().interrupt();
+      }
+
+      if (pending == null) {
+        Result result = getResult(source, file);
+        if (result != null && result.isUpToDate(source.hashCode()))
+          return result;
+      }
+      
+      if (pending == null)
+        putPendingRun(file, source, driver);
     }
     
-    if (isPending && getNonPendingResult(source, moduleName) != null) 
+    if (pending != null) {
+      waitForPending(file);
       return compile(source, moduleName, file);
+    }
     
     try {
-      initialize();
-      driver.process(source, moduleName);
+      driver.process(source, moduleName, file);
       storeCaches();
     } finally {
-        putResult(source, moduleName, driver == null || driver.driverResult.getSugaredSyntaxTree() == null ? null : driver.driverResult);
+        pendingRuns.remove(file);
+        putResult(source, file, driver.driverResult.getSugaredSyntaxTree() == null ? null : driver.driverResult);
     }
     
     return driver.driverResult;
@@ -232,11 +273,12 @@
    * @throws TokenExpectedException 
    * @throws InterruptedException 
    */
-  private void process(String source, String moduleName) throws IOException, TokenExpectedException, BadTokenException, ParseException, InvalidParseTableException, SGLRException, InterruptedException {
+  private void process(String source, String moduleName, String file) throws IOException, TokenExpectedException, BadTokenException, ParseException, InvalidParseTableException, SGLRException, InterruptedException {
     log.beginTask("processing", "BEGIN PROCESSING " + moduleName);
     boolean success = false;
     try {
       init(moduleName);
+      driverResult.setSourceFile(file, source.hashCode());
 
       remainingInput = source;
   
@@ -247,7 +289,7 @@
         boolean wocache = Environment.wocache;
         Environment.wocache |= skipCache;
         
-        if (interrupt) throw new InterruptedException();
+        stopIfInterrupted();
         
         // PARSE the next top-level declaration
         IncrementalParseResult parseResult =
@@ -255,7 +297,7 @@
         lastSugaredToplevelDecl = parseResult.getToplevelDecl();
         remainingInput = parseResult.getRest();
         
-        if (interrupt) throw new InterruptedException();
+        stopIfInterrupted();
         
         // DESUGAR the parsed top-level declaration
         IStrategoTerm desugared = currentDesugar(lastSugaredToplevelDecl);
@@ -263,7 +305,7 @@
         // reset cache skipping
         Environment.wocache = wocache;
         
-        if (interrupt) throw new InterruptedException();
+        stopIfInterrupted();
         
         // PROCESS the assimilated top-level declaration
         processToplevelDeclaration(desugared);
@@ -271,21 +313,15 @@
         done = parseResult.parsingFinished();
       }
       
-      if (interrupt) throw new InterruptedException();
+      stopIfInterrupted();
             
-      if (Environment.generateJavaFile && !generatedJavaClasses.isEmpty()) {
-        String f = Environment.bin + sep + relPackageNameSep() + mainModuleName + ".java";
-        driverResult.generateFile(f, FileCommands.readFileAsString(javaOutFile));
-        log.log("Wrote generated Java file to " + f);
-      }
-      
       try {
         // check final grammar and transformation for errors
         if (!Environment.noChecking) {
           checkCurrentGrammar();
         }
         
-        if (interrupt) throw new InterruptedException();
+        stopIfInterrupted();
         
         // need to build current transformation program for editor services
         checkCurrentTransformation();
@@ -294,7 +330,7 @@
         e.printStackTrace();
       }
       
-      if (interrupt) throw new InterruptedException();
+      stopIfInterrupted();
       
       // COMPILE the generated java file
       compileGeneratedJavaFile();
@@ -344,7 +380,7 @@
       String rest = getString(restTerm);
 
       if (input.equals(rest))
-        throw new RuntimeException("empty toplevel declaration parse rule");
+        throw new SGLRException(parser.getParser(), "empty toplevel declaration parse rule");
       
       try {
         if (!rest.isEmpty())
@@ -370,7 +406,7 @@
       
       String msg = e.getClass().getName() + " " + e.getLocalizedMessage() != null ? e.getLocalizedMessage() : e.toString();
       
-      if (!(e instanceof StrategoException))
+      if (!(e instanceof StrategoException) && !(e instanceof SGLRException))
         e.printStackTrace();
       else
         log.logErr(msg);
@@ -445,6 +481,7 @@
         editorServices = ATermCommands.registerSemanticProvider(editorServices, currentTransProg);
   
         String editorServicesFile = bin + sep + relPackageNameSep() + extName + ".serv";
+        String depFile = bin + sep + relPackageNameSep() + extName + ".dep";
         FileCommands.createFile(editorServicesFile);
   
         log.log("writing editor services to " + editorServicesFile);
@@ -460,6 +497,7 @@
         }
         
         driverResult.generateFile(editorServicesFile, buf.toString());
+        driverResult.writeDependencyFile(depFile);
       } finally {
         log.endTask();
       }
@@ -519,10 +557,12 @@
         String plainContent = Term.asJavaString(ATermCommands.getApplicationSubterm(body, "PlainBody", 0));
         
         String plainFile = bin + sep + relPackageNameSep() + extName + (extension == null ? "" : ("." + extension));
+        String depFile = bin + sep + relPackageNameSep() + extName + ".dep";
         FileCommands.createFile(plainFile);
   
         log.log("writing plain content to " + plainFile);
         driverResult.generateFile(plainFile, plainContent);
+        driverResult.writeDependencyFile(depFile);
       } finally {
         log.endTask();
       }
@@ -701,9 +741,6 @@
     
     sugaredImportDecls.add(lastSugaredToplevelDecl);
     
-    if (javaOutFile == null)
-      javaOutFile = javaOutDir + sep + mainModuleName + ".java";
-    
     log.beginTask("processing", "PROCESS the desugared import declaration.");
     try {
       String importModule = ModuleSystemCommands.extractImportedModuleName(toplevelDecl, interp);
@@ -712,28 +749,38 @@
       
       String modulePath = FileCommands.getRelativeModulePath(importModule);
   
-      boolean success = processImport(modulePath, toplevelDecl);
-      
-      URI sourceFile = ModuleSystemCommands.locateSourceFile(modulePath);
-      
-      if (sourceFile != null &&
-          !modulePath.startsWith("org/sugarj") &&
-          !modulePath.endsWith("*")) {
-        
-        URI classUri = ModuleSystemCommands.searchFile(modulePath, ".class");
-        if (!success ||
-            pendingInputFiles.contains(sourceFile) ||
-            (classUri != null && new File(sourceFile).lastModified() > new File(classUri).lastModified())) {
+      if (!modulePath.startsWith("org/sugarj")) {
+        URI depUri = ModuleSystemCommands.searchFile(modulePath, ".dep");
+        Result res = null;
+        URI sourceUri = null;
+        
+        if (depUri != null) {
+          res = Result.readDependencyFile(depUri.getPath());
+          
+          if (res != null && res.getSourceFile() != null)
+            sourceUri = new File(res.getSourceFile()).toURI();
+        }
 
+        if (sourceUri == null)
+          sourceUri = ModuleSystemCommands.locateSourceFile(modulePath);
+
+        if (sourceUri != null && (res == null || pendingInputFiles.contains(res.getSourceFile()) || !res.isUpToDate(res.getSourceFile()))) {
           log.log("Need to compile the imported module first ; processing it now.");
-          compile(sourceFile);
+          compile(sourceUri);
           log.log("CONTINUE PROCESSING'" + moduleName + "'.");
-          
-          // try again
-          success = processImport(modulePath, toplevelDecl);
         }
+        
+        if (depUri == null)
+          depUri = ModuleSystemCommands.searchFile(modulePath, ".dep");
+        
+        if (depUri == null)
+          throw new IllegalStateException("dependency descriptor for module not found " + importModule);
+        
+        driverResult.addDependency(depUri.getPath());
       }
       
+      boolean success = processImport(modulePath, toplevelDecl);
+      
       if (!success)
         ATermCommands.setErrorMessage(toplevelDecl, "module not found " + importModule);
       
@@ -797,12 +844,11 @@
         
         String decName = Term.asJavaString(dec.getSubterm(0).getSubterm(1).getSubterm(0));
         
-        generatedJavaClasses.add(
-            bin + sep 
-          + (relPackageName == null || relPackageName.isEmpty() ? "" : (relPackageName + sep))
-          + decName + ".class");
-      
+        String outName = bin + sep + relPackageNameSep() + decName;
+        
+        generatedJavaClasses.add(outName + ".class");
         driverResult.appendToFile(javaOutFile, SDFCommands.prettyPrintJava(dec, interp) + "\n");
+        driverResult.writeDependencyFile(outName + ".dep");
       } finally {
         log.endTask();
       }
@@ -884,13 +930,9 @@
         log.endTask();
       }
       
-      String sdfExtension =
-          bin + sep + relPackageNameSep()
-              + extName + ".sdf";
-  
-      String strExtension =
-          bin + sep + relPackageNameSep()
-              + extName + ".str";
+      String sdfExtension = bin + sep + relPackageNameSep() + extName + ".sdf";
+      String strExtension = bin + sep + relPackageNameSep() + extName + ".str";
+      String depFile = bin + sep + relPackageNameSep() + extName + ".dep";
       
       FileCommands.delete(sdfExtension);
       FileCommands.delete(strExtension);
@@ -968,30 +1010,36 @@
         if (CommandExecution.FULL_COMMAND_LINE)
           log.log("Wrote Stratego file to '" + new File(strExtension).getAbsolutePath() + "'.");
       }
+      
+      driverResult.writeDependencyFile(depFile);
 
+      /*
+       * adapt current grammar
+       */
       if (FileCommands.exists(sdfExtension)) {
         String currentGrammarName =
           FileCommands.hashFileName("sugarj", currentGrammarModule + fullExtName);
         currentGrammarSDF =
           Environment.tmpDir + sep + currentGrammarName + ".sdf";
-        driverResult.generateFile(currentGrammarSDF, 
+        FileCommands.writeToFile(currentGrammarSDF, 
             "module " + currentGrammarName + "\n"
             + "imports " + currentGrammarModule + "\n" 
             + "        " + fullExtName);
         currentGrammarModule = currentGrammarName;
-        driverResult.addFileDependency(sdfExtension);
       }
 
+      /*
+       * adapt current transformation
+       */
       if (FileCommands.exists(strExtension)) {
         String currentTransName =
           FileCommands.hashFileName("sugarj", currentTransModule + fullExtName);
         currentTransSTR = Environment.tmpDir + sep + currentTransName + ".str";
-        driverResult.generateFile(currentTransSTR,
+        FileCommands.writeToFile(currentTransSTR,
             "module " + currentTransName + "\n" 
             + "imports " + currentTransModule + "\n"
             + "        " + fullExtName);
         currentTransModule = currentTransName;
-        driverResult.addFileDependency(strExtension);
       }
 
     } finally {
@@ -1035,25 +1083,10 @@
       driverResult.addEditorService(service);
   }
   
-  private static void initialize() throws IOException {
-    Environment.init();
-    
-    if (Environment.cacheDir != null)
-      FileCommands.createDir(Environment.cacheDir);
-    
-    FileCommands.createDir(Environment.bin);
-    
-    initializeCaches();
-    
-    allInputFiles = new ArrayList<URI>();
-    pendingInputFiles = new ArrayList<URI>();
-    currentlyProcessing = new ArrayList<URI>();
-  }
-  
   private void init(String moduleName) throws FileNotFoundException, IOException, InvalidParseTableException {
     this.moduleName = moduleName;
 
-    javaOutDir = FileCommands.newTempDir();
+    javaOutDir = Environment.bin;
     javaOutFile = null; 
     // FileCommands.createFile(tmpOutdir, relModulePath + ".java");
 
@@ -1094,8 +1127,6 @@
   public static void main(String[] args) {
     // log.log("This is the extensible java compiler.");
     try {
-      initialize();
-      
       String[] sources = handleOptions(args);
 
       ClassLoader loader = new URLClassLoader(new URL[] {new File(Environment.src).toURI().toURL()});
@@ -1454,4 +1485,11 @@
   public synchronized void interrupt() {
     this.interrupt = true;
   }
+  
+  private synchronized void stopIfInterrupted() throws InterruptedException {
+    if (interrupt) {
+      log.log("interrupted " + mainModuleName);
+      throw new InterruptedException();
+    }
+  }
 }

Modified: sugarj/trunk/compiler/org/sugarj/driver/FileCommands.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/FileCommands.java	Wed May 18 14:54:41 2011	(r22912)
+++ sugarj/trunk/compiler/org/sugarj/driver/FileCommands.java	Wed May 18 15:05:30 2011	(r22913)
@@ -12,12 +12,7 @@
 import java.io.OutputStream;
 import java.net.URI;
 import java.net.URL;
-import java.util.Collection;
-import java.util.HashMap;
-import java.util.HashSet;
 import java.util.List;
-import java.util.Map;
-import java.util.Set;
 
 /**
  * Provides methods for doing stuff with files.

Modified: sugarj/trunk/compiler/org/sugarj/driver/ModuleSystemCommands.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/ModuleSystemCommands.java	Wed May 18 14:54:41 2011	(r22912)
+++ sugarj/trunk/compiler/org/sugarj/driver/ModuleSystemCommands.java	Wed May 18 15:05:30 2011	(r22913)
@@ -43,8 +43,6 @@
     if (classUri == null)
       return false;
     
-    driverResult.addFileDependency(classUri.getPath());
-    
     log.beginTask("Generate Java code");
     try {
       driverResult.appendToFile(javaOutFile, SDFCommands.prettyPrintJava(importTerm, interp) + "\n");
@@ -70,8 +68,6 @@
     if (sdfUri == null)
       return null;
     
-    driverResult.addFileDependency(sdfUri.getPath());
-    
     log.beginTask("Incorporation", "Incorporate the imported grammar " + modulePath);
     try {
       // build extension of current grammar
@@ -86,7 +82,7 @@
       + "imports " + currentGrammarModule + "\n"
       + "        " + modulePath;
       
-      driverResult.generateFile(newGrammar, grammar);
+      FileCommands.writeToFile(newGrammar, grammar);
 
       availableSDFImports.add(modulePath);
 
@@ -111,8 +107,6 @@
     if (strUri == null)
       return null;
     
-    driverResult.addFileDependency(strUri.getPath());
-    
     log.beginTask("Incorporation", "Incorporate the imported desugaring rules " + modulePath);
     try {
       // build extension of current transformation
@@ -126,7 +120,7 @@
         + "imports " + currentTransModule + "\n"
         + "        " + modulePath;
       
-      driverResult.generateFile(newTrans, trans);
+      FileCommands.writeToFile(newTrans, trans);
 
       availableSTRImports.add(modulePath);
 
@@ -149,8 +143,6 @@
     if (servUri == null)
       return false;
     
-    driverResult.addFileDependency(servUri.getPath());
-    
     log.beginTask("Incorporation", "Incorporate the imported editor services " + modulePath);
     try {
       BufferedReader reader = new BufferedReader(new FileReader(new File(servUri)));
@@ -226,7 +218,6 @@
   }
   
   private static ClassLoader createClassLoader(Collection<String> path) throws MalformedURLException {
-    // log.beginTask("Creating", "Create a class loader for " + what);
     try {
       URL[] urls = new URL[path.size() + 1];
       
@@ -242,7 +233,6 @@
        */
       return new URLClassLoader(urls, null);
     } finally {
-      // log.endTask();
     }
   }
 }

Modified: sugarj/trunk/compiler/org/sugarj/driver/Result.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/Result.java	Wed May 18 14:54:41 2011	(r22912)
+++ sugarj/trunk/compiler/org/sugarj/driver/Result.java	Wed May 18 15:05:30 2011	(r22913)
@@ -1,6 +1,10 @@
 package org.sugarj.driver;
 
-import java.io.File;
+import java.io.BufferedOutputStream;
+import java.io.BufferedReader;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.FileReader;
 import java.io.IOException;
 import java.util.Collection;
 import java.util.HashMap;
@@ -14,25 +18,48 @@
 import org.spoofax.jsglr.shared.BadTokenException;
 
 public class Result {
-  private Map<String, Integer> fileDependencyHashes = new HashMap<String, Integer>();
+  // private Map<String, Integer> fileDependencyHashes = new HashMap<String, Integer>();
+  private Map<String, Integer> dependencies = new HashMap<String, Integer>();
   private Map<String, Integer> generatedFileHashes = new HashMap<String, Integer>();
   private Set<IStrategoTerm> editorServices = new HashSet<IStrategoTerm>();
   private Set<BadTokenException> collectedErrors = new HashSet<BadTokenException>();
   private IStrategoTerm sugaredSyntaxTree = null;
-  private List<String> generatedJavaClasses;
   private String desugaringsFile;
-
-  void addFileDependency(String file) throws IOException {
-    fileDependencyHashes.put(file, FileCommands.fileHash(file));
-  }
-  
-  public Collection<String> getFileDependencies() {
-    return fileDependencyHashes.keySet();
+  private String sourceFile;
+  private Integer sourceFileHash;
+  private Set<String> allDependentFiles = new HashSet<String>();
+
+  private final static Result OUTDATED_RESULT = new Result() {
+    @Override
+    boolean isUpToDate(String file) {
+      return false;
+    }
+
+    @Override
+    boolean isUpToDate(int hash) {
+      return false;
+    }
+  };
+  
+  void addDependency(String depFile) throws IOException {
+    dependencies.put(depFile, FileCommands.fileHash(depFile));
+    allDependentFiles.addAll(readDependencyFile(depFile).getFileDependencies());
+  }
+  
+  public Collection<String> getFileDependencies() throws IOException {
+    if (allDependentFiles == null) {
+      allDependentFiles = new HashSet<String>(generatedFileHashes.keySet());
+      for (String depFile : dependencies.keySet())
+        allDependentFiles.addAll(readDependencyFile(depFile).getFileDependencies());
+    }
+    
+    return allDependentFiles;
   }
   
   void generateFile(String file, String content) throws IOException {
     FileCommands.writeToFile(file, content);
     generatedFileHashes.put(file, FileCommands.fileHash(file));
+    allDependentFiles.add(file);
   }
   
   void appendToFile(String file, String content) throws IOException {
@@ -48,20 +75,27 @@
     return editorServices;
   }
   
-  boolean isUpToDate() throws IOException {
-    if (generatedJavaClasses != null)
-      for (String classFile : generatedJavaClasses)
-        if (!new File(classFile).exists())
-          return false;
-
-    for (Entry<String, Integer> entry : fileDependencyHashes.entrySet())
-      if (FileCommands.fileHash(entry.getKey()) != entry.getValue())
-        return false;
+  boolean isUpToDate(String inputFile) throws IOException {
+    return isUpToDate(FileCommands.fileHash(inputFile));
+  }
+  
+  boolean isUpToDate(int inputHash) throws IOException {
+    if (inputHash != sourceFileHash)
+      return false;
     
     for (Entry<String, Integer> entry : generatedFileHashes.entrySet())
       if (FileCommands.fileHash(entry.getKey()) != entry.getValue())
         return false;
-    
+
+    for (Entry<String, Integer> entry : dependencies.entrySet()) {
+      if (FileCommands.fileHash(entry.getKey()) != entry.getValue())
+        return false;
+      
+      Result r = Result.readDependencyFile(entry.getKey());
+      if (r == null || !r.isUpToDate(r.getSourceFile()))
+        return false;
+    }
+
     return true;
   }
   
@@ -82,8 +116,9 @@
   }
 
   void compileJava(String javaOutFile, String bin, List<String> path, List<String> generatedJavaClasses) throws IOException {
-    this.generatedJavaClasses = generatedJavaClasses;    
     JavaCommands.javac(javaOutFile, bin, path);
+    for (String cl : generatedJavaClasses)
+      generatedFileHashes.put(cl, FileCommands.fileHash(cl));
   }
   
   void registerEditorDesugarings(String jarfile) throws IOException {
@@ -94,4 +129,76 @@
   String getDesugaringsFile() {
     return desugaringsFile;
   }
+  
+  void writeDependencyFile(String dep) throws IOException {
+    BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(dep));
+    
+    try {
+      byte[] newline = "\n".getBytes();
+      
+      out.write(sourceFile.getBytes());
+      out.write(newline);
+      out.write(Integer.toString(sourceFileHash).getBytes());
+      out.write(newline);
+      
+      for (Entry<String, Integer> entry : dependencies.entrySet()) {
+        out.write(entry.getKey().getBytes());
+        out.write(newline);
+        out.write(Integer.toString(entry.getValue()).getBytes());
+        out.write(newline);
+      }
+      
+      out.write(newline);
+      
+      for (Entry<String, Integer> e : generatedFileHashes.entrySet()) {
+        out.write(e.getKey().getBytes());
+        out.write(newline);
+        out.write(e.getValue().toString().getBytes());
+        out.write(newline);
+      }
+    } finally {
+      out.close();
+    }
+  }
+  
+  static Result readDependencyFile(String dep) throws IOException {
+    Result result = new Result();
+    result.allDependentFiles = null;
+    
+    try {
+      BufferedReader in = new BufferedReader(new FileReader(dep));
+      
+      result.sourceFile = in.readLine();
+      result.sourceFileHash = Integer.parseInt(in.readLine());
+      
+      String line;
+      while ((line = in.readLine()) != null && !line.isEmpty()) {
+        String file = line;
+        Integer hash = Integer.parseInt(in.readLine());
+        result.dependencies.put(file, hash);
+      }
+      
+      while ((line = in.readLine()) != null && !line.isEmpty()) {
+        String file = line;
+        Integer hash = Integer.parseInt(in.readLine());
+        result.generatedFileHashes.put(file, hash);
+      }
+    } catch (FileNotFoundException e) {
+      return OUTDATED_RESULT;
+    } catch (Exception e) {
+      e.printStackTrace();
+      return OUTDATED_RESULT;
+    }
+    
+    return result;
+  }
+  
+  void setSourceFile(String sourceFile, int sourceFileHash) {
+    this.sourceFile = sourceFile;
+    this.sourceFileHash = sourceFileHash;
+  }
+
+  public String getSourceFile() {
+    return sourceFile;
+  }
 }
\ No newline at end of file

Modified: sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParseController.java
==============================================================================
--- sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParseController.java	Wed May 18 14:54:41 2011	(r22912)
+++ sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParseController.java	Wed May 18 15:05:30 2011	(r22913)
@@ -1,6 +1,7 @@
 package org.sugarj.editor;
 
 import java.io.File;
+import java.util.ArrayList;
 
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.imp.model.ISourceProject;
@@ -23,6 +24,7 @@
   private String projectPath;
 
   private String outputPath;
+  private ArrayList<String> includePath;
   
   @Override
   public IParseController getWrapped() {
@@ -35,6 +37,7 @@
 
         sugarjParser.setProjectPath(projectPath);
         sugarjParser.setOutputPath(outputPath);
+        sugarjParser.setIncludePath(includePath);
         
         ((SGLRParseController) result).setParser(sugarjParser);
       }
@@ -71,6 +74,14 @@
         try { 
           
           outputPath = projectPath + File.separator + javaProject.getOutputLocation().makeRelativeTo(project.getRawProject().getFullPath()).toString();
+          
+          includePath = new ArrayList<String>();
+          for (String reqProject : javaProject.getRequiredProjectNames()) {
+            IJavaProject reqJavaProject = JavaCore.create(project.getRawProject().getWorkspace().getRoot().getProject(reqProject));
+            IPath reqProjectPath = reqJavaProject.getProject().getLocation().makeAbsolute();
+            if (reqJavaProject != null)
+              includePath.add(reqProjectPath + File.separator  + reqJavaProject.getOutputLocation().makeRelativeTo(reqJavaProject.getProject().getFullPath()).toPortableString());
+          }
         } catch (JavaModelException e) { 
           outputPath = null; 
         }
@@ -81,6 +92,7 @@
     if (sugarjParser != null) {
       sugarjParser.setProjectPath(projectPath);
       sugarjParser.setOutputPath(outputPath);
+      sugarjParser.setIncludePath(includePath);
     }
   }
 }
\ No newline at end of file

Modified: sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParser.java
==============================================================================
--- sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParser.java	Wed May 18 14:54:41 2011	(r22912)
+++ sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParser.java	Wed May 18 15:05:30 2011	(r22913)
@@ -26,6 +26,7 @@
   private String projectPath;
   private String outputPath;
   private Result result;
+  private List<String> includePath;
 
   public SugarJParser(JSGLRI parser) {
     super(parser.getParseTable(), parser.getStartSymbol(), parser.getController());
@@ -40,8 +41,9 @@
     if (Environment.cacheDir == null)
       Environment.cacheDir = System.getProperty("user.home") + "/.sugarj/cache";
     
+    Environment.includePath.addAll(includePath);
     Environment.includePath.add(new StrategoJarAntPropertyProvider().getAntPropertyValue(""));
-
+    
     assert projectPath != null;
     Environment.src = projectPath;
     Environment.bin = outputPath != null ? outputPath : projectPath;
@@ -62,8 +64,7 @@
     try {
       result = Driver.compile(input, FileCommands.fileName(filename), filename);
     } catch (Throwable e) {
-      org.strategoxt.imp.runtime.Environment.logException(e);
-      return super.doParse(input, filename);
+      throw new RuntimeException("parsing " + FileCommands.fileName(filename) + " failed", e);
     }
     
     return result.getSugaredSyntaxTree();
@@ -77,6 +78,10 @@
   public void setOutputPath(String outputPath) {
     this.outputPath = outputPath;
   }
+  
+  public void setIncludePath(List<String> includePath) {
+    this.includePath = includePath;
+  }
 
   @Override
   public Set<BadTokenException> getCollectedErrors() {

Modified: sugarj/trunk/feature/feature.xml
==============================================================================
--- sugarj/trunk/feature/feature.xml	Wed May 18 14:54:41 2011	(r22912)
+++ sugarj/trunk/feature/feature.xml	Wed May 18 15:05:30 2011	(r22913)
@@ -2,7 +2,7 @@
 <feature
       id="org.sugarj.editor"
       label="SugarJ"
-      version="1.0.6.qualifier"
+      version="1.0.9.qualifier"
       provider-name="sugarj.org">
 
    <description url="http://www.sugarj.org/update">

Modified: sugarj/trunk/update-site/site.xml
==============================================================================
--- sugarj/trunk/update-site/site.xml	Wed May 18 14:54:41 2011	(r22912)
+++ sugarj/trunk/update-site/site.xml	Wed May 18 15:05:30 2011	(r22913)
@@ -3,7 +3,7 @@
    <description name="SugarJ" url="sugarj.org/update">
       SugarJ
    </description>
-   <feature url="features/org.sugarj.editor_1.0.6.201105101403.jar" id="org.sugarj.editor" version="1.0.6.201105101403">
+   <feature url="features/org.sugarj.editor_1.0.9.201105181653.jar" id="org.sugarj.editor" version="1.0.9.201105181653">
       <category name="SugarJ"/>
    </feature>
    <category-def name="SugarJ" label="SugarJ">

From L.C.L.Kats at tudelft.nl  Wed May 18 17:26:13 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 18 May 2011 15:26:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22914 - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime: .
	src/org/strategoxt/imp/runtime/services
	test/org/strategoxt/imp/runtime/services
Message-ID: <20110518152613.2B1A9CC1E3@mx4.tudelft.nl>

Author: LennartKats
Date: Wed May 18 15:26:11 2011
New Revision: 22914
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22914&sc=1

Log:
Reverted r22811 (Spoofax/380)

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/imp/runtime/services/TestFilterCompletions.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch	Wed May 18 15:05:30 2011	(r22913)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch	Wed May 18 15:26:11 2011	(r22914)
@@ -14,7 +14,7 @@
 <booleanAttribute key="includeOptional" value="true"/>
 <stringAttribute key="location" value="${workspace_loc}/../runtime-spoofax-imp"/>
 <stringAttribute key="org.eclipse.debug.core.source_locator_id" value="org.eclipse.pde.ui.launcher.PDESourceLookupDirector"/>
-<stringAttribute key="org.eclipse.debug.core.source_locator_memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;sourceLookupDirector&gt;&#10;&lt;sourceContainers duplicates=&quot;false&quot;&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;folder nest=&amp;quot;false&amp;quot; path=&amp;quot;/org.strategoxt.imp.editors.stratego/editor/java&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.folder&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;folder nest=&amp;quot;false&amp;quot; path=&amp;quot;/webdsl/src/bin&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.folder&quot;/&gt;&#10;&lt;contai
 ner memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;folder nest=&amp;quot;false&amp;quot; path=&amp;quot;/mobl/editor/java/trans&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.folder&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;folder nest=&amp;quot;false&amp;quot; path=&amp;quot;/nwl/editor/java&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.folder&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;default/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.default&quot;/&gt;&#10;&lt;/sourceContainers&gt;&#10;&lt;
 /sourceLookupDirector&gt;&#10;"/>
+<stringAttribute key="org.eclipse.debug.core.source_locator_memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;sourceLookupDirector&gt;&#10;&lt;sourceContainers duplicates=&quot;false&quot;&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;folder nest=&amp;quot;false&amp;quot; path=&amp;quot;/org.strategoxt.imp.testing/editor/java&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.folder&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;folder nest=&amp;quot;false&amp;quot; path=&amp;quot;/webdsl/src/bin&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.folder&quot;/&gt;&#10;&lt;container memen
 to=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;folder nest=&amp;quot;false&amp;quot; path=&amp;quot;/mobl/editor/java/trans&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.folder&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;folder nest=&amp;quot;false&amp;quot; path=&amp;quot;/nwl/editor/java&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.folder&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;default/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.default&quot;/&gt;&#10;&lt;/sourceContainers&gt;&#10;&lt;/sourceLo
 okupDirector&gt;&#10;"/>
 <listAttribute key="org.eclipse.debug.ui.favoriteGroups">
 <listEntry value="org.eclipse.debug.ui.launchGroup.debug"/>
 <listEntry value="org.eclipse.debug.ui.launchGroup.run"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Wed May 18 15:05:30 2011	(r22913)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Wed May 18 15:26:11 2011	(r22914)
@@ -306,7 +306,7 @@
 				continue;
 			if (!backTrackResultsOnly && proposalPrefix.regionMatches(IGNORE_TEMPLATE_PREFIX_CASE, 0, prefix, 0, prefix.length())) {
 				if (!proposal.isBlankLineRequired() || isBlankBeforeOffset(document, offset - prefix.length()))
-					//if (proposal.isSemantic() || prefix.length() > 0 || proposalPrefix.length() == 0 || identifierLexical.matcher(proposalPrefix).lookingAt())
+					if (proposal.isSemantic() || prefix.length() > 0 || proposalPrefix.length() == 0 || identifierLexical.matcher(proposalPrefix).lookingAt())
 						results.add(new ContentProposal(this, proposal, prefix, offsetPosition, viewer));
 			}
 			if (prefix.length() == 0) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/imp/runtime/services/TestFilterCompletions.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/imp/runtime/services/TestFilterCompletions.java	Wed May 18 15:05:30 2011	(r22913)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/imp/runtime/services/TestFilterCompletions.java	Wed May 18 15:26:11 2011	(r22914)
@@ -81,7 +81,7 @@
 	public void testNonIdentifier() {
 		completions.add(Completion.makeTemplate(", avoid", null));
 		filterCompletions("", "", 0, 0, noSorts);
-		assertEquals(1, results.length);
+		assertEquals(0, results.length);
 	}
 	
 	@Test

From M.A.Akhter at student.tudelft.nl  Wed May 18 17:35:02 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Wed, 18 May 2011 15:35:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22915 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans
Message-ID: <20110518153502.B68577F807E@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Wed May 18 15:35:02 2011
New Revision: 22915
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22915&sc=1

Log:
* loading default configuration if there is a problem with configuration file / configuration file is missing

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Wed May 18 15:26:11 2011	(r22914)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Wed May 18 15:35:02 2011	(r22915)
@@ -20,14 +20,27 @@
 rules 
 	default_package_name = !"__default"
 	
+	default_src_directory= !"src"
+	
+	default_output_directory= !".shadowdir"
+	
 	internal_module_name_string = !"__internal"
 	
 	get-known-legacy-extensions = !["sdf" , "def" , "str" , "rtree"] 
 		
 rules 
+	
+	fallback-configuration = 
+		<file-exists <+ mkdir> $[[<get-project-path>]/[<default_src_directory>]];
+		!Configuration(
+		  [ Includes([Sources(AllDirectories(), [<default_src_directory>])])
+		  , CodeGeneration([OutputDirectory(<default_output_directory>)])
+		  ]
+		)	
+	
 	initialize-configuration = 
 		?current-term 
-		;<parse-spoofaxconfiguration-file>"spx.config" => config-aterms
+		;<parse-spoofaxconfiguration-file<+<debug>$[Failed to Load Configuration... Loading Default Configuration.]; fallback-configuration>"spx.config" => config-aterms
 		;init-output-directory
 		;init-source-directory    		
 		;<init-ignored-directories>[".svn"]

From M.A.Akhter at student.tudelft.nl  Wed May 18 18:15:29 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Wed, 18 May 2011 16:15:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22916 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans
Message-ID: <20110518161529.4B17DCC0B7@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Wed May 18 16:15:27 2011
New Revision: 22916
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22916&sc=1

Log:
- Working fine without configuration file. 
	* all the spx file in the project is included 
	* output is generated in .shadowdir

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Wed May 18 15:35:02 2011	(r22915)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Wed May 18 16:15:27 2011	(r22916)
@@ -20,7 +20,9 @@
 rules 
 	default_package_name = !"__default"
 	
-	default_src_directory= !"src"
+	default_src_directory = !"src"
+	
+	root_directory = !"."
 	
 	default_output_directory= !".shadowdir"
 	
@@ -31,9 +33,8 @@
 rules 
 	
 	fallback-configuration = 
-		<file-exists <+ mkdir> $[[<get-project-path>]/[<default_src_directory>]];
 		!Configuration(
-		  [ Includes([Sources(AllDirectories(), [<default_src_directory>])])
+		  [ Includes([Sources(AllDirectories(), [<root_directory>])])
 		  , CodeGeneration([OutputDirectory(<default_output_directory>)])
 		  ]
 		)	
@@ -192,10 +193,18 @@
  	;make-set
  
  
+	convert-abs-path(|project-path) : (s, o) -> (s' , o)
+	where
+		 if !s => <root_directory>  then 
+		 		s' := $[[project-path]] 
+		 else 
+		 		s' := $[[project-path]/[s]]
+		 end
+		 	
 	get-all-sources(|project-path) =
  		collect-all(?Sources(_, _));
  		get-local-sources;
- 		map(\(s,o)-> ($[[project-path]/[s]],o)\)
+ 		map(convert-abs-path(|project-path))
  	<+ 
   		debug(!"Failed to get list of source directory.") ; fail
  

From M.A.Akhter at student.tudelft.nl  Wed May 18 18:29:31 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Wed, 18 May 2011 16:29:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22917 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax
Message-ID: <20110518162931.710B57F807E@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Wed May 18 16:29:31 2011
New Revision: 22917
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22917&sc=1

Log:
:( forgot to check-in the changes in syntax.
* added for doing some temp. prototyping with code-contracts.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SpoofaxLang.sdf

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SpoofaxLang.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SpoofaxLang.sdf	Wed May 18 16:15:27 2011	(r22916)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SpoofaxLang.sdf	Wed May 18 16:29:31 2011	(r22917)
@@ -113,4 +113,12 @@
     "deprecated"                -> Attribute[[SDF]] {prefer, ast("term(default(fun(unquoted(\"deprecated\"))))")}
     "deprecated" "(" STRING ")" -> Attribute[[SDF]] {prefer, ast("term(default(appl(unquoted(\"deprecated\"), [fun(quoted(<1>))])))")}
     "cons" "(" Constructor ")"  -> Attribute[[SDF]] {prefer, ast("term(default(appl(unquoted(\"cons\"), [fun(quoted(<1>))])))")}
-    StrCon[[SDF]]               -> Constructor	    
\ No newline at end of file
+    StrCon[[SDF]]               -> Constructor	  
+  
+  
+    
+  %% for testing only. playing with code-contracts in spoofax lang. 
+  context-free syntax
+		Var[[STR]] "as" ID -> Var[[STR]] {avoid, cons("VarWithType")} 
+ 
+  	    
\ No newline at end of file

From seba at informatik.uni-marburg.de  Thu May 19 08:34:08 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Thu, 19 May 2011 06:34:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22918 -
	sugarj/trunk/compiler/org/sugarj/driver
Message-ID: <20110519063408.C19DCCC1A1@mx4.tudelft.nl>

Author: SebastianErdweg
Date: Thu May 19 06:34:06 2011
New Revision: 22918
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22918&sc=1

Log:
bugfix

Modified:
   sugarj/trunk/compiler/org/sugarj/driver/Driver.java

Modified: sugarj/trunk/compiler/org/sugarj/driver/Driver.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/Driver.java	Wed May 18 16:29:31 2011	(r22917)
+++ sugarj/trunk/compiler/org/sugarj/driver/Driver.java	Thu May 19 06:34:06 2011	(r22918)
@@ -175,8 +175,9 @@
   }
   
   private static void waitForPending(String file) {
-    Integer count = 0;
-    synchronized (count) {
+    int count = 0;
+    Object lock = new Object();
+    synchronized (lock) {
       while (true) {
         synchronized (pendingRuns) {
           if (!pendingRuns.containsKey(file))
@@ -188,7 +189,7 @@
         
         count += 100;
         try {
-          count.wait(100);
+          lock.wait(100);
         } catch (InterruptedException e) {
         }
       }
@@ -773,10 +774,8 @@
         if (depUri == null)
           depUri = ModuleSystemCommands.searchFile(modulePath, ".dep");
         
-        if (depUri == null)
-          throw new IllegalStateException("dependency descriptor for module not found " + importModule);
-        
-        driverResult.addDependency(depUri.getPath());
+        if (depUri != null)
+          driverResult.addDependency(depUri.getPath());
       }
       
       boolean success = processImport(modulePath, toplevelDecl);

From tobivollebregt at gmail.com  Thu May 19 10:49:38 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Thu, 19 May 2011 08:49:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22919 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: syntax
	trans trans/include
Message-ID: <20110519084938.2F1102B8009@mx2.tudelft.nl>

Author: tvo
Date: Thu May 19 08:49:37 2011
New Revision: 22919
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22919&sc=1

Log:
Template lang: switch to parameterized sorts (prep for inclusion in SpoofaxLang)

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/include/Template-Signatures.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Module.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SdfRenamed.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Module.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Module.sdf	Thu May 19 06:34:06 2011	(r22918)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Module.sdf	Thu May 19 08:49:37 2011	(r22919)
@@ -1,7 +1,7 @@
 module Module
 imports
-	Common
-	SdfKeywords
+  Common
+  SdfKeywords
   SdfRenamed
 
 exports
@@ -21,4 +21,4 @@
     ModuleName -> Import {cons("Import")}
 
   context-free syntax
-    SDF-Grammar -> Grammar {cons("SDF-Grammar")}
+    Grammar[[SDF]] -> Grammar {cons("SdfGrammar")}

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SdfRenamed.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SdfRenamed.sdf	Thu May 19 06:34:06 2011	(r22918)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SdfRenamed.sdf	Thu May 19 08:49:37 2011	(r22919)
@@ -4,67 +4,10 @@
 
   languages/sdf2/syntax/Sdf2 [
 
-    %% LAYOUT => SDF-DISABLED
+    %% LAYOUT => IGNORED
 
-    "left":Grammar "right":Grammar -> Grammar => -> SDF-DISABLED
-    "module" ModuleName list:ImpSection* Sections -> Module => -> SDF-DISABLED
-    ImpSection -> Grammar => -> SDF-DISABLED
+    "left":Grammar "right":Grammar -> Grammar => -> IGNORED
+    "module" ModuleName list:ImpSection* Sections -> Module => -> IGNORED
+    ImpSection -> Grammar => -> IGNORED
 
-%% parse-sdf-definition -i SDF.def |
-%%   grep -E -o 'sort\("[^"]+"\)' | sort | uniq |
-%%   sed -r 's/sort\("([^"]+)"\)/\1 => SDF-\1/g'
-    AFun => SDF-AFun
-    Alias => SDF-Alias
-    Aliases => SDF-Aliases
-    Annotation => SDF-Annotation
-    ArgumentIndicator => SDF-ArgumentIndicator
-    Associativity => SDF-Associativity
-    ATerm => SDF-ATerm
-    ATermAttribute => SDF-ATermAttribute
-    Attribute => SDF-Attribute
-    Attributes => SDF-Attributes
-    Character => SDF-Character
-    CharClass => SDF-CharClass
-    CharRange => SDF-CharRange
-    CharRanges => SDF-CharRanges
-    Definition => SDF-Definition
-    FunctionName => SDF-FunctionName
-    Grammar => SDF-Grammar
-    Group => SDF-Group
-    IdCon => SDF-IdCon
-    Import => SDF-Import
-    Imports => SDF-Imports
-    ImpSection => SDF-ImpSection
-    IntCon => SDF-IntCon
-    Label => SDF-Label
-    Lookahead => SDF-Lookahead
-    Lookaheads => SDF-Lookaheads
-    Module => SDF-Module
-    ModuleId => SDF-ModuleId
-    ModuleName => SDF-ModuleName
-    ModuleWord => SDF-ModuleWord
-    NatCon => SDF-NatCon
-    NumChar => SDF-NumChar
-    OptCharRanges => SDF-OptCharRanges
-    OptExp => SDF-OptExp
-    Priorities => SDF-Priorities
-    Priority => SDF-Priority
-    Production => SDF-Production
-    Productions => SDF-Productions
-    RealCon => SDF-RealCon
-    Renaming => SDF-Renaming
-    Renamings => SDF-Renamings
-    Restriction => SDF-Restriction
-    Restrictions => SDF-Restrictions
-    SDF => SDF-SDF
-    Section => SDF-Section
-    Sections => SDF-Sections
-    ShortChar => SDF-ShortChar
-    SingleQuotedStrChar => SDF-SingleQuotedStrChar
-    SingleQuotedStrCon => SDF-SingleQuotedStrCon
-    Sort => SDF-Sort
-    StrChar => SDF-StrChar
-    StrCon => SDF-StrCon
-    Symbol => SDF-Symbol
-    Symbols => SDF-Symbols
   ]

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf	Thu May 19 06:34:06 2011	(r22918)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf	Thu May 19 08:49:37 2011	(r22919)
@@ -9,6 +9,7 @@
 exports
   context-free start-symbols
     Module
+    Template %% Workaround StrategoXT/862
 
   context-free syntax
     %% "grammars"
@@ -16,12 +17,12 @@
     %% "completion" "templates" CompletionTemplate* -> Grammar {cons("Templates")}
 
     %% template productions
-    ID "=" SDF-Symbols SDF-Attributes -> SDF-Production {cons("SdfProduction")}
-    ID "=" Template SDF-Attributes -> TemplateProduction {cons("TemplateProduction")}
+    ID "=" Symbols[[SDF]] Attributes[[SDF]] -> Production[[SDF]] {cons("SdfProduction")}
+    ID "=" Template Attributes[[SDF]] -> TemplateProduction {cons("TemplateProduction")}
 
     %% template productions `sort.cons = ...'
-    ID "." ID "=" SDF-Symbols SDF-Attributes -> SDF-Production {cons("SdfProductionWithCons")}
-    ID "." ID "=" Template SDF-Attributes -> TemplateProduction {cons("TemplateProductionWithCons")}
+    ID "." ID "=" Symbols[[SDF]] Attributes[[SDF]] -> Production[[SDF]] {cons("SdfProductionWithCons")}
+    ID "." ID "=" Template Attributes[[SDF]] -> TemplateProduction {cons("TemplateProductionWithCons")}
 
     %% placeholders
     "<" PlaceholderPrefix1 PlaceholderSort PlaceholderSuffix PlaceholderOptions ">" -> TemplatePart1 {cons("Placeholder")}

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Thu May 19 06:34:06 2011	(r22918)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Thu May 19 08:49:37 2011	(r22919)
@@ -2,6 +2,7 @@
 imports
   libstratego-lib
   include/Template
+  include/Template-Signatures
   lib/editor-common.generated
   desugar
   generation-utils

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str	Thu May 19 06:34:06 2011	(r22918)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str	Thu May 19 08:49:37 2011	(r22919)
@@ -2,6 +2,7 @@
 imports
   libstratego-lib
   include/Template
+  include/Template-Signatures
 
 overlays
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str	Thu May 19 06:34:06 2011	(r22918)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str	Thu May 19 08:49:37 2011	(r22919)
@@ -4,6 +4,7 @@
   lib/editor-common.generated
   include/EditorService
   include/Template
+  include/Template-Signatures
   lib/pp
   analysis
   desugar

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str	Thu May 19 06:34:06 2011	(r22918)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str	Thu May 19 08:49:37 2011	(r22919)
@@ -3,6 +3,7 @@
   libstratego-lib
   libstratego-sglr
   include/Template
+  include/Template-Signatures
   lib/sdf-desugar
   lib/sdf-parenthesize
   lib/sdf-pretty-print
@@ -83,7 +84,7 @@
       // SDF grammars
       // (each one is put in a separate `exports' section because SDF doesn't
       //  use a flat list for the grammars within a section, but a tree...)
-      section'* := <filter(\SDF-Grammar(t) -> exports(t)\)> section*;
+      section'* := <filter(\SdfGrammar(t) -> exports(t)\)> section*;
       s* := [restriction*, section'*]
 
   sdf-to-string =

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Thu May 19 06:34:06 2011	(r22918)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Thu May 19 08:49:37 2011	(r22919)
@@ -2,6 +2,7 @@
 imports
   libstratego-lib
   include/Template
+  include/Template-Signatures
   analysis
   desugar
   generation-utils
@@ -94,8 +95,9 @@
           [let'*]]
     where
       not(!elem* => [String(_)])
+    where
+      cons    := <collect-one(?sdf-cons(<un-double-quote>))> attr*
     with
-      cons    := <collect-one(?sdf-cons(<un-double-quote>))> attr*;
       elem'*  := <try-re-indent;
                   !(<id>, 0);
                   thread-map(try(rename-template-element));

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Thu May 19 06:34:06 2011	(r22918)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Thu May 19 08:49:37 2011	(r22919)
@@ -3,6 +3,7 @@
   libstratego-lib
   lib/editor-common.generated
   include/Template
+  include/Template-Signatures
   analysis
 
 signature

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/include/Template-Signatures.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/include/Template-Signatures.str	Thu May 19 08:49:37 2011	(r22919)
@@ -0,0 +1,17 @@
+// Signatures which (erroneously) aren't generated by sdf2rtg | rtg2sig
+// i.e. workaround for StrategoXT/862
+
+module Template-Signatures
+
+signature
+  constructors
+    SdfProductionWithCons      : ID * ID * Symbols_SDF * Attributes_SDF -> Production_SDF
+    SdfProduction              : ID * Symbols_SDF * Attributes_SDF -> Production_SDF
+
+    TemplateProductionWithCons : ID * ID * Template * Attributes_SDF -> TemplateProduction
+    TemplateProduction         : ID * Template * Attributes_SDF -> TemplateProduction
+
+    SdfGrammar                 : Grammar_SDF -> Grammar
+    Templates                  : List(TemplateProduction) -> Grammar
+
+    Import                     : ModuleName -> Import

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Thu May 19 06:34:06 2011	(r22918)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Thu May 19 08:49:37 2011	(r22919)
@@ -5,6 +5,7 @@
   libstratego-gpp
   libstratego-aterm
   include/Template
+  include/Template-Signatures
   lib/editor-common.generated
   analysis
   desugar

From tobivollebregt at gmail.com  Thu May 19 12:15:52 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Thu, 19 May 2011 10:15:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22920 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.template.test/syntax
	org.strategoxt.imp.editors.template.test/test
	org.strategoxt.imp.editors.template/syntax org....
Message-ID: <20110519101552.B33447F803F@mx1.tudelft.nl>

Author: tvo
Date: Thu May 19 10:15:52 2011
New Revision: 22920
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22920&sc=1

Log:
Template lang:
* Fixed parameterized sort usage
* Added Sort.Cons references to templates in context-free priorities section
* Updated example

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SDFMix.sdf
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/include/Template-Signatures.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/Layout.tmpl
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/TemplateTest.tmpl
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/test/example.tmpl-test
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SdfRenamed.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/Layout.tmpl
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/Layout.tmpl	Thu May 19 08:49:37 2011	(r22919)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/Layout.tmpl	Thu May 19 10:15:52 2011	(r22920)
@@ -34,17 +34,23 @@
   [\ \t\r] -> LayoutChar
   LayoutChar -> LAYOUT
 
-  "\n" ("\n" | LayoutChar)* -> LineBreak
+  [\n] ([\n] | LayoutChar)* -> LineBreak
   LineBreak -> LAYOUT
 
   "//" ~[\n]* -> Comment
   Comment -> LayoutChar
 
+  "/*" (~[\*] | Asterisk)* "*/" -> Comment
+  "*" -> Asterisk
+
 lexical restrictions
   LineBreak -/- [\ \t\n\r]
   LineBreak -/- [\/].[\/]
+  LineBreak -/- [\/].[\*]
   Comment   -/- ~[\n]
+  Asterisk  -/- [\/]
 
 context-free restrictions
   LAYOUT? -/- [\ \t\r]
   LAYOUT? -/- [\/].[\/]
+  LAYOUT? -/- [\/].[\*]

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/TemplateTest.tmpl
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/TemplateTest.tmpl	Thu May 19 08:49:37 2011	(r22919)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/TemplateTest.tmpl	Thu May 19 10:15:52 2011	(r22920)
@@ -27,7 +27,10 @@
 
   Definition.Entity = <<
     entity <ID> {
-      <Property*; separator="\n">
+      <Property*
+        ; separator="\n" // (no newlines)
+        // ; separator=""   // (leading/trailing newlines)
+        >
     }
   >>
 
@@ -37,6 +40,20 @@
 
   Type.Type = <<<Type:ID>>>
 
-lexical syntax
+  Definition.Expression = <<
+    expression <ID> {
+      <Expression>
+    }
+  >>
+
+  Expression.Plus  = <<<Expression> + <Expression>>> {left}
+  Expression.Minus = <<<Expression> - <Expression>>> {left}
+  Expression.Times = <<<Expression> * <Expression>>> {left}
+  Expression.Over  = <<<Expression> / <Expression>>> {left}
+  Expression.Value = <<<INT>>>
+  Expression = <<(<Expression>)>> {bracket}
+
+context-free priorities
 
-  [A-Za-z][A-Za-z0-9]* -> ID
+  {left: Expression.Times Expression.Over } >
+  {left: Expression.Plus  Expression.Minus}

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/test/example.tmpl-test
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/test/example.tmpl-test	Thu May 19 08:49:37 2011	(r22919)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/test/example.tmpl-test	Thu May 19 10:15:52 2011	(r22920)
@@ -20,3 +20,7 @@
 entity Empty {
 
 }
+
+expression Exp {
+  1 + 2 - 3 * 12
+}

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SDFMix.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SDFMix.sdf	Thu May 19 10:15:52 2011	(r22920)
@@ -0,0 +1,56 @@
+module SDFMix[Ctx0]
+imports SDF
+          [ SDF                 => SDF[[Ctx0]]
+            Aliases             => Aliases[[Ctx0]]
+            Alias               => Alias[[Ctx0]]
+            Restrictions        => Restrictions[[Ctx0]]
+            Restriction         => Restriction[[Ctx0]]
+            Label               => Label[[Ctx0]]
+            FunctionName        => FunctionName[[Ctx0]]
+            SingleQuotedStrCon  => SingleQuotedStrCon[[Ctx0]]
+            SingleQuotedStrChar => SingleQuotedStrChar[[Ctx0]]
+            Sort                => Sort[[Ctx0]]
+            OptCharRanges       => OptCharRanges[[Ctx0]]
+            CharRange           => CharRange[[Ctx0]]
+            Character           => Character[[Ctx0]]
+            ShortChar           => ShortChar[[Ctx0]]
+            NumChar             => NumChar[[Ctx0]]
+            Priorities          => Priorities[[Ctx0]]
+            Priority            => Priority[[Ctx0]]
+            ArgumentIndicator   => ArgumentIndicator[[Ctx0]]
+            Associativity       => Associativity[[Ctx0]]
+            Import              => Import[[Ctx0]]
+            Imports             => Imports[[Ctx0]]
+            ImpSection          => ImpSection[[Ctx0]]
+            ModuleName          => ModuleName[[Ctx0]]
+            Sections            => Sections[[Ctx0]]
+            Section             => Section[[Ctx0]]
+            Module              => Module[[Ctx0]]
+            Definition          => Definition[[Ctx0]]
+            ModuleId            => ModuleId[[Ctx0]]
+            ModuleWord          => ModuleWord[[Ctx0]]
+            Renaming            => Renaming[[Ctx0]]
+            Renamings           => Renamings[[Ctx0]]
+            Productions         => Productions[[Ctx0]]
+            Production          => Production[[Ctx0]]
+            Attributes          => Attributes[[Ctx0]]
+            Attribute           => Attribute[[Ctx0]]
+            ATermAttribute      => ATermAttribute[[Ctx0]]
+            Symbols             => Symbols[[Ctx0]]
+            Annotation          => Annotation[[Ctx0]]
+            ATerm               => ATerm[[Ctx0]]
+            AFun                => AFun[[Ctx0]]
+            IdCon               => IdCon[[Ctx0]]
+            StrCon              => StrCon[[Ctx0]]
+            StrChar             => StrChar[[Ctx0]]
+            RealCon             => RealCon[[Ctx0]]
+            OptExp              => OptExp[[Ctx0]]
+            IntCon              => IntCon[[Ctx0]]
+            NatCon              => NatCon[[Ctx0]]
+            Lookahead           => Lookahead[[Ctx0]]
+            Grammar             => Grammar[[Ctx0]]
+            Symbol              => Symbol[[Ctx0]]
+            CharRanges          => CharRanges[[Ctx0]]
+            CharClass           => CharClass[[Ctx0]]
+            Lookaheads          => Lookaheads[[Ctx0]]
+            Group               => Group[[Ctx0]] ]

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SdfRenamed.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SdfRenamed.sdf	Thu May 19 08:49:37 2011	(r22919)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SdfRenamed.sdf	Thu May 19 10:15:52 2011	(r22920)
@@ -2,7 +2,7 @@
 
 imports
 
-  languages/sdf2/syntax/Sdf2 [
+  SDFMix[SDF] [
 
     %% LAYOUT => IGNORED
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf	Thu May 19 08:49:37 2011	(r22919)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf	Thu May 19 10:15:52 2011	(r22920)
@@ -12,6 +12,12 @@
     Template %% Workaround StrategoXT/862
 
   context-free syntax
+    %% references to productions using sort.cons notation in priority specification
+    SortCons                                   -> Group[[SDF]]  {cons("simple-ref-group")}
+    "{" SortCons+ "}"                          -> Group[[SDF]]  {cons("prods-ref-group")}
+    "{" Associativity[[SDF]] ":" SortCons+ "}" -> Group[[SDF]]  {cons("assoc-ref-group")}
+
+  context-free syntax
     %% "grammars"
     "templates" TemplateProduction* -> Grammar {cons("Templates")}
     %% "completion" "templates" CompletionTemplate* -> Grammar {cons("Templates")}
@@ -21,8 +27,10 @@
     ID "=" Template Attributes[[SDF]] -> TemplateProduction {cons("TemplateProduction")}
 
     %% template productions `sort.cons = ...'
-    ID "." ID "=" Symbols[[SDF]] Attributes[[SDF]] -> Production[[SDF]] {cons("SdfProductionWithCons")}
-    ID "." ID "=" Template Attributes[[SDF]] -> TemplateProduction {cons("TemplateProductionWithCons")}
+    SortCons "=" Symbols[[SDF]] Attributes[[SDF]] -> Production[[SDF]] {cons("SdfProductionWithCons")}
+    SortCons "=" Template Attributes[[SDF]] -> TemplateProduction {cons("TemplateProductionWithCons")}
+
+    ID "." ID -> SortCons {cons("SortCons")}
 
     %% placeholders
     "<" PlaceholderPrefix1 PlaceholderSort PlaceholderSuffix PlaceholderOptions ">" -> TemplatePart1 {cons("Placeholder")}

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Thu May 19 08:49:37 2011	(r22919)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analysis.str	Thu May 19 10:15:52 2011	(r22920)
@@ -2,7 +2,6 @@
 imports
   libstratego-lib
   include/Template
-  include/Template-Signatures
   lib/editor-common.generated
   desugar
   generation-utils
@@ -85,6 +84,9 @@
       TemplateProduction(sort, Template(part'*), attrs)
     with
       rules(Template :+ sort -> template);
+      if cons := <collect-one(?sdf-cons(<un-double-quote>))> attrs then
+        rules(Template :+ (sort, cons) -> template)
+      end;
       part'* := <declare-placeholders> part*
     with
       <Declaration> sort

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str	Thu May 19 08:49:37 2011	(r22919)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str	Thu May 19 10:15:52 2011	(r22920)
@@ -2,7 +2,6 @@
 imports
   libstratego-lib
   include/Template
-  include/Template-Signatures
 
 overlays
 
@@ -27,13 +26,13 @@
     SdfProduction(sort, symbol*, attr*) -> prod(symbol*, sort(sort), attr*)
 
   desugar:
-    SdfProductionWithCons(sort, cons, symbol*, attrs(attr*)) ->
+    SdfProductionWithCons(SortCons(sort, cons), symbol*, attrs(attr*)) ->
       prod(symbol*, sort(sort), attrs(attr'*))
     with
       attr'* := [sdf-cons(<double-quote> cons)|attr*]
 
   desugar:
-    TemplateProductionWithCons(sort, cons, tmpl, attrs(attr*)) ->
+    TemplateProductionWithCons(SortCons(sort, cons), tmpl, attrs(attr*)) ->
       TemplateProduction(sort, tmpl, attrs(attr'*))
     with
       attr'* := [sdf-cons(<double-quote> cons)|attr*]

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str	Thu May 19 08:49:37 2011	(r22919)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-esv.str	Thu May 19 10:15:52 2011	(r22920)
@@ -4,7 +4,6 @@
   lib/editor-common.generated
   include/EditorService
   include/Template
-  include/Template-Signatures
   lib/pp
   analysis
   desugar

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str	Thu May 19 08:49:37 2011	(r22919)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str	Thu May 19 10:15:52 2011	(r22920)
@@ -3,7 +3,6 @@
   libstratego-lib
   libstratego-sglr
   include/Template
-  include/Template-Signatures
   lib/sdf-desugar
   lib/sdf-parenthesize
   lib/sdf-pretty-print
@@ -51,9 +50,11 @@
                 <+ \Imports(t) -> [imports(<map(\Import(M) -> i|[ M ]|\)> t)]\> import*
       else
         (M, is) := ("example", [])
-      end;
+      end
+    with
       // main productions
-      p* := <collect-om(template-to-sdf)> x;
+      p* := <collect-om(template-production-to-sdf)> x
+    with
       // lexical restrictions
       let ends-with-identifier-char =
         where(explode-string; un-double-quote-chars; last; (is-alphanum + '_'))
@@ -66,7 +67,7 @@
           restriction* := [|[ lexical restrictions
                                 A* -/- [A-Za-z0-9\_\-] ]|]
         end
-      end;
+      end
       // rejections
       // let is-identifier-ish =
       //       where(explode-string; un-double-quote-chars; all(is-alphanum))
@@ -84,9 +85,25 @@
       // SDF grammars
       // (each one is put in a separate `exports' section because SDF doesn't
       //  use a flat list for the grammars within a section, but a tree...)
-      section'* := <filter(\SdfGrammar(t) -> exports(t)\)> section*;
+    with
+      section'* := <filter(\SdfGrammar(t) -> exports(<try(rewrite-sortcons-references)> t)\)> section*
+    with
       s* := [restriction*, section'*]
 
+  rewrite-sortcons-references:
+    context-free-priorities(t) -> context-free-priorities(t')
+    with
+      let rewrite =
+            \SortCons(sort, cons) ->
+              <Template; template-production-to-sdf-no-attrs> (sort, cons)\
+      in
+        t' := <alltd(
+                  \simple-ref-group(ref) -> simple-group(<rewrite> ref)\
+                + \prods-ref-group(ref*) -> prods-group(<map(rewrite)> ref*)\
+                + \assoc-ref-group(a, ref*) -> assoc-group(a, <map(rewrite)> ref*)\
+              )> t
+      end
+
   sdf-to-string =
     bottomup(try(
         \conc-grammars(x, context-free-syntax([])) -> x\
@@ -97,17 +114,33 @@
     sdf-parenthesize;
     pp-sdf-string
 
-  template-to-sdf:
-    TemplateProduction(S', Template(e* @[_|_]), attrs')
+  template-production-to-sdf-no-attrs:
+    TemplateProduction(S', t /*@ Template([_|_])*/, _)
+      -> p|[ A* -> S' ]|
+    with
+      A* := <template-to-sdf> t
+
+  template-production-to-sdf:
+    TemplateProduction(S', t /*@ Template([_|_])*/, attrs')
       -> p|[ A* -> S' attrs' ]|
     with
+      A* := <template-to-sdf> t
+
+/*
+  template-production-to-sdf:
+    TemplateProduction(S', Template([]), attrs')
+      -> p|[ -> S' attrs' ]|
+*/
+
+  template-to-sdf:
+    Template(e* @[_|_]) -> A*
+    with
       A* := <newlines-switch(id, trim-trailing-layout, trim-leading-layout);
              combine-consecutive-newlines;
              filter(template-element-to-sdf)> e*
 
   template-to-sdf:
-    TemplateProduction(S', Template([]), attrs')
-      -> p|[ -> S' attrs' ]|
+    Template([]) -> []
 
   template-element-to-sdf:
     Newline(_){ /* neither Leading() nor Trailing() */ } -> A|[ "\\n" ]|

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Thu May 19 08:49:37 2011	(r22919)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Thu May 19 10:15:52 2011	(r22920)
@@ -2,7 +2,6 @@
 imports
   libstratego-lib
   include/Template
-  include/Template-Signatures
   analysis
   desugar
   generation-utils

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Thu May 19 08:49:37 2011	(r22919)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Thu May 19 10:15:52 2011	(r22920)
@@ -3,7 +3,6 @@
   libstratego-lib
   lib/editor-common.generated
   include/Template
-  include/Template-Signatures
   analysis
 
 signature

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Thu May 19 08:49:37 2011	(r22919)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/template.str	Thu May 19 10:15:52 2011	(r22920)
@@ -5,7 +5,6 @@
   libstratego-gpp
   libstratego-aterm
   include/Template
-  include/Template-Signatures
   lib/editor-common.generated
   analysis
   desugar
@@ -51,13 +50,13 @@
 rules // Local checks
 
   templates-error:
-    TemplateProductionWithCons(_, _, _, attrs(attr*)) ->
+    TemplateProductionWithCons(_, _, attrs(attr*)) ->
       (x, $[Constructor already specified at start of production. Please remove this cons attribute.])
     where
       <collect-one(?sdf-cons(x))> attr*
 
   context-free-syntax-error:
-    SdfProductionWithCons(_, _, _, attrs(attr*)) ->
+    SdfProductionWithCons(_, _, attrs(attr*)) ->
       (x, $[Constructor already specified at start of production. Please remove this cons attribute.])
     where
       <collect-one(?sdf-cons(x))> attr*

From seba at informatik.uni-marburg.de  Thu May 19 15:18:00 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Thu, 19 May 2011 13:18:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22921 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor
Message-ID: <20110519131800.C9F71108C091@mx3.tudelft.nl>

Author: SebastianErdweg
Date: Thu May 19 13:18:00 2011
New Revision: 22921
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22921&sc=1

Log:
completion rules for SDF with sort filtering, Spoofax/380

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv	Thu May 19 10:15:52 2011	(r22920)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv	Thu May 19 13:18:00 2011	(r22921)
@@ -14,146 +14,88 @@
   completion proposer:
     editor-complete
 
-  completion template:
-  	"context-free syntax" "\n\t" (blank)
-
-  completion template:
-  	"lexical syntax" "\n\t" (blank)
-
-  completion template:
-  	"syntax" "\n\t" (blank)
-
-  completion template:
+  completion template : ImpSection =
   	"imports" "\n\t" (blank)
 
-  completion template:
+  completion template : Section =
   	"exports" "\n\t" (blank)
 
-  completion template:
+  completion template : Section =
     "hiddens" "\n\t" (blank)
 
-  completion template:
-  	"context-free restrictions" "\n\t" (blank)
-
-  completion template:
-  	"lexical restrictions" "\n\t" (blank)
-
-  completion template:
-  	"restrictions" "\n\t" (blank)
-
-  completion template:
+  completion template : Grammar =
   	"context-free start-symbols" "\n\t" <Start> (blank)
 
-  completion template:
+  completion template : Grammar =
   	"lexical start-symbols" "\n\t" <Start> (blank)
 
-  completion template:
+  completion template : Grammar =
   	"start-symbols" "\n\t" <Start> (blank)
 
-  completion template:
-  	"sorts" "\n\t" (blank)
-
-  completion template:
-  	"variables" "\n\t" (blank)
-
-  completion template:
-  	"aliases" "\n\t" (blank)
-
-  completion template:
-  	"priorities" "\n\t" (blank)
-
   completion template : Module =
   	"module" " " <x> "\n\t\nexports\n\t" (blank)
 
-  completion template: 
-  	"lexical variables" "\n\t" (blank)
-
-  completion template:
-    "{cons" "(\"" <Name> "\")"
-
-  completion template:
-    "{deprecated" "(\"" <explanation> "\")"
-
-  completion keyword:
-    "{reject"
-
-  completion keyword:
-    "{left"
-
-  completion keyword:
-    "{right"
-
-  completion keyword:
-    "{non-assoc"
-
-  completion keyword:
-    "{avoid"
-
-  completion keyword:
-    "{prefer"
-
-  completion keyword:
-    "{bracket"
+  completion template : Grammar =
+    "context-free syntax" "\n\t" (blank)
 
-  completion keyword:
-    "{recover"
+  completion template : Grammar =
+    "lexical syntax" "\n\t" (blank)
 
-  completion template:
-    ", cons" "(\"" <Name> "\")"
+  completion template : Grammar =
+    "syntax" "\n\t" (blank)
 
-  completion template:
-    ", deprecated" "(\"" <explanation> "\")"
+  completion template : Grammar =
+    "context-free restrictions" "\n\t" (blank)
 
-  completion keyword:
-    ", reject"
+  completion template : Grammar =
+    "lexical restrictions" "\n\t" (blank)
 
-  completion keyword:
-    ", left"
+  completion template : Grammar =
+    "restrictions" "\n\t" (blank)
 
-  completion keyword:
-    ", right"
+  completion template : Grammar =
+    "sorts" "\n\t" (blank)
 
-  completion keyword:
-    ", non-assoc"
+  completion template : Grammar =
+    "variables" "\n\t" (blank)
 
-  completion keyword:
-    ", avoid"
+  completion template : Grammar =
+    "aliases" "\n\t" (blank)
 
-  completion keyword:
-    ", prefer"
+  completion template : Grammar =
+    "priorities" "\n\t" (blank)
 
-  completion keyword:
-    ", bracket"
+  completion template : Grammar = 
+    "lexical variables" "\n\t" (blank)
+    
+  completion template : Attribute =
+    "cons" "(\"" <Name> "\")"
 
-  completion keyword:
-    ", recover"
+  completion template : Attribute =
+    "deprecated" "(\"" <explanation> "\")"
 
-  completion template:
-    ",cons" "(\"" <Name> "\")"
+  completion template : Attribute =
+    "reject"
 
-  completion template:
-    ",deprecated" "(\"" <explanation> "\")"
+  completion template : Attribute =
+    "left"
 
-  completion keyword:
-    ",reject"
+  completion template : Attribute =
+    "right"
 
-  completion keyword:
-    ",left"
+  completion template : Attribute =
+    "non-assoc"
 
-  completion keyword:
-    ",right"
+  completion template : Attribute =
+    "avoid"
 
-  completion keyword:
-    ",non-assoc"
+  completion template : Attribute =
+    "prefer"
 
-  completion keyword:
-    ",avoid"
+  completion template : Attribute =
+    "bracket"
 
-  completion keyword:
-    ",prefer"
+  completion template : Attribute =
+    "recover"
 
-  completion keyword:
-    ",bracket"
 
-  completion keyword:
-    ",recover"

From M.A.Akhter at student.tudelft.nl  Fri May 20 01:19:37 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 19 May 2011 23:19:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22922 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans: .
	context/sdf
Message-ID: <20110519231937.D80082B80A9@mx2.tudelft.nl>

Author: MdAdilAkhter
Date: Thu May 19 23:19:37 2011
New Revision: 22922
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22922&sc=1

Log:
* config without config file is supported now. 
* Fixed : reject sdf def was failing in declaration phase.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Thu May 19 13:18:00 2011	(r22921)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Thu May 19 23:19:37 2011	(r22922)
@@ -195,9 +195,9 @@
  
 	convert-abs-path(|project-path) : (s, o) -> (s' , o)
 	where
-		 if !s => <root_directory>  then 
+		 if root_directory => s  then
 		 		s' := $[[project-path]] 
-		 else 
+		 else
 		 		s' := $[[project-path]/[s]]
 		 end
 		 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str	Thu May 19 13:18:00 2011	(r22921)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str	Thu May 19 23:19:37 2011	(r22922)
@@ -73,7 +73,7 @@
 	
 	
 	store-operation-declaration: 
-		p at prod(_,rhs-sort, _) ->  <store-operation-declaration-internal>p
+		p at prod(_,rhs-sort, _) -> <id> 
 		with 
 			 	if is-lexical-sort then
 			 		if not (IsInsideLexicalSyntaxBlock ) then
@@ -84,18 +84,23 @@
 			 						<store-operation-declaration-internal>p	
 			 			|}
 			 		end
-			 	end 
+			 	end
+		where
+			<store-operation-declaration-internal>p	 	 
 			 	
 	
 	store-operation-declaration-internal
   	=  ?p at prod(lhs , rhs-sort, attrs(attribute-list))
   		;rhs-sort-name := <get-rhs-sort-name>rhs-sort	
   		;{|lhs-sort, get-op-name:
-  					<find-sorts>lhs
-  					;<get-opration-name>attribute-list  
-  					;operation-name := <get-op-name>
-  					;lhs-operands-types := <reverse><bagof-lhs-sort>  
-  					;create-opname2opdecl-mapping(|operation-name , lhs-operands-types, rhs-sort-name , p) 
+  		 			<find-sorts>lhs
+  					;<try(get-opration-name)>attribute-list
+  					;if operation-name := <get-op-name> then
+  						lhs-operands-types := <reverse><bagof-lhs-sort>  
+  						;create-opname2opdecl-mapping(|operation-name , lhs-operands-types, rhs-sort-name , p)
+  					else
+  						<debug-declaration> $[DeclareSignature | Failed to retrive Operation Name . Hence Ignoring : [<pp-aterm> p].]
+  					end	  
   		  |}
 			  
 	store-operation-declaration-internal 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Thu May 19 13:18:00 2011	(r22921)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Thu May 19 23:19:37 2011	(r22922)
@@ -67,8 +67,8 @@
       x:= <get-rhs-sort-name>sort;
       qualified-sort-name := <to-scoped-symbol> x 
    	with
-   //		enable-declaration-debugging;
-  		<store-operation-declaration>prod
+   	//	enable-declaration-debugging;
+   		<store-operation-declaration>prod
   	with
       <topdown(try(store-namespace-def))> lhs
     with
@@ -85,7 +85,7 @@
       	);
       	<debug-declaration> $[DeclareSDF | Storing Declaration : [<pp-aterm>qualified-sort-name]  -> [<pp-aterm>prod]]
       )
-    with
+    with
       <alltd(declare-sdf-usage)> lhs
      // ;disable-declaration-debugging
 		 

From M.A.Akhter at student.tudelft.nl  Fri May 20 01:22:46 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 19 May 2011 23:22:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22923 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax
Message-ID: <20110519232246.2A7117F80DD@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Thu May 19 23:22:45 2011
New Revision: 22923
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22923&sc=1

Log:
example config file that includes all spx files available in the project

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/spx.config

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/spx.config
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/spx.config	Thu May 19 23:19:37 2011	(r22922)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/spx.config	Thu May 19 23:22:45 2011	(r22923)
@@ -1,7 +1,7 @@
 Configuration
 	Includes
 		RootDirectory
-				test 
-	
+			.		//include the whole project directory
+			
 	CodeGeneration 
-		OutputDirectory		.shadowdir
\ No newline at end of file
+		OutputDirectory		.shadowdir  
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Fri May 20 01:41:15 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 19 May 2011 23:41:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22924 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax
Message-ID: <20110519234115.D9E7D108C00E@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Thu May 19 23:41:14 2011
New Revision: 22924
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22924&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/spx.config

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/spx.config
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/spx.config	Thu May 19 23:22:45 2011	(r22923)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/spx.config	Thu May 19 23:41:14 2011	(r22924)
@@ -1,6 +1,6 @@
 Configuration
 	Includes
-		RootDirectory
+		AllDirectories
 			.		//include the whole project directory
 			
 	CodeGeneration 

From seba at informatik.uni-marburg.de  Fri May 20 09:19:55 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Fri, 20 May 2011 07:19:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22925 - in
	sugarj/trunk: compiler/org/sugarj/driver
	stdlib/org/sugarj/init stdlib/org/sugarj/languages
Message-ID: <20110520071955.332F5CC1E3@mx4.tudelft.nl>

Author: SebastianErdweg
Date: Fri May 20 07:19:53 2011
New Revision: 22925
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22925&sc=1

Log:


Modified:
   sugarj/trunk/compiler/org/sugarj/driver/Driver.java
   sugarj/trunk/compiler/org/sugarj/driver/SDFCommands.java
   sugarj/trunk/stdlib/org/sugarj/init/initGrammar.sdf
   sugarj/trunk/stdlib/org/sugarj/languages/EditorServices.def
   sugarj/trunk/stdlib/org/sugarj/languages/Java-15.def
   sugarj/trunk/stdlib/org/sugarj/languages/Sdf2.def
   sugarj/trunk/stdlib/org/sugarj/languages/Stratego.def
   sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.def

Modified: sugarj/trunk/compiler/org/sugarj/driver/Driver.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/Driver.java	Thu May 19 23:41:14 2011	(r22924)
+++ sugarj/trunk/compiler/org/sugarj/driver/Driver.java	Fri May 20 07:19:53 2011	(r22925)
@@ -59,7 +59,7 @@
  */
 public class Driver{
   
-  public final static String CACHE_VERSION = "editor-base-0.9";
+  public final static String CACHE_VERSION = "editor-base-0.10";
   
   private static class Key {
     private String source;
@@ -370,12 +370,27 @@
     int start = inputTreeBuilder.getTokenizer() == null ? 0 : inputTreeBuilder.getTokenizer().getStartOffset();
     log.beginTask("parsing", "PARSE the next toplevel declaration.");
     try {
-      IStrategoTerm remainingInputTerm = currentParse(input, recovery);
+      IStrategoTerm remainingInputTerm = null;
+      
+      try {
+        remainingInputTerm = currentParse(input, recovery);
+      } catch (Exception e) {
+        if (recovery) {
+          e.printStackTrace();
+          remainingInputTerm = currentParse(input, false);
+        }
+        
+        if (remainingInputTerm == null)
+          throw e;
+      }
 
       if (remainingInputTerm == null)
         throw new ParseException("could not parse toplevel declaration in:\n"
             + input, -1);
 
+      if (!isApplication(remainingInputTerm, "NextToplevelDeclaration"))
+        throw new ATermCommands.MatchError(remainingInputTerm, "NextToplevelDeclaration");
+      
       IStrategoTerm toplevelDecl = getApplicationSubterm(remainingInputTerm, "NextToplevelDeclaration", 0);
       IStrategoTerm restTerm = getApplicationSubterm(remainingInputTerm, "NextToplevelDeclaration", 1);
       String rest = getString(restTerm);

Modified: sugarj/trunk/compiler/org/sugarj/driver/SDFCommands.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/SDFCommands.java	Thu May 19 23:41:14 2011	(r22924)
+++ sugarj/trunk/compiler/org/sugarj/driver/SDFCommands.java	Fri May 20 07:19:53 2011	(r22925)
@@ -54,7 +54,15 @@
   /*
    * timeout for parsing files (in milliseconds)
    */
-  private final static long PARSE_TIMEOUT = 30000;
+  private static long PARSE_TIMEOUT = 60000;
+  
+  static {
+    try {
+      PARSE_TIMEOUT = Long.parseLong(System.getProperty("org.sugarj.parse_timeout"));
+      Log.log.log("set parse timeout to " + PARSE_TIMEOUT);
+    } catch (Exception e) {
+    }
+  }
   
   public static ModuleKeyCache<String> sdfCache = null;
   
@@ -299,7 +307,7 @@
     } catch (ExecutionException e) {
       if (e.getCause() instanceof SGLRException)
         throw (SGLRException) e.getCause();
-      throw new SGLRException(parser.getParser(), "unexpected execution error", e);
+      throw new RuntimeException("unexpected execution error", e);
     } catch (InterruptedException e) {
       throw new SGLRException(parser.getParser(), "parser was interrupted", e);
     } catch (TimeoutException e) {

Modified: sugarj/trunk/stdlib/org/sugarj/init/initGrammar.sdf
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/init/initGrammar.sdf	Thu May 19 23:41:14 2011	(r22924)
+++ sugarj/trunk/stdlib/org/sugarj/init/initGrammar.sdf	Fri May 20 07:19:53 2011	(r22925)
@@ -18,7 +18,7 @@
   
     
   lexical syntax %% Rest
-    ~[]* -> Rest
+  	~[]* -> Rest
   
   lexical restrictions
     Rest -/- ~[]

Modified: sugarj/trunk/stdlib/org/sugarj/languages/EditorServices.def
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/languages/EditorServices.def	Thu May 19 23:41:14 2011	(r22924)
+++ sugarj/trunk/stdlib/org/sugarj/languages/EditorServices.def	Fri May 20 07:19:53 2011	(r22925)
@@ -351,7 +351,7 @@
     ~[\*]                           -> CommChar    
     Asterisk                        -> CommChar    
     "*"                             -> Asterisk    
-    Ws                              -> LAYOUT      
+%%    Ws                              -> LAYOUT      
     ShortCom                        -> LAYOUT      
     LongCom                         -> LAYOUT      
                                     -> Eof         

Modified: sugarj/trunk/stdlib/org/sugarj/languages/Java-15.def
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/languages/Java-15.def	Thu May 19 23:41:14 2011	(r22924)
+++ sugarj/trunk/stdlib/org/sugarj/languages/Java-15.def	Fri May 20 07:19:53 2011	(r22925)
@@ -1244,7 +1244,7 @@
 module languages/java-15/lexical/WhiteSpace
 exports
   lexical syntax
-    [\ \t\12\r\n] -> LAYOUT 
+%%    [\ \t\12\r\n] -> LAYOUT 
 
   context-free restrictions
     LAYOUT? -/- [\ \t\12\n\r]

Modified: sugarj/trunk/stdlib/org/sugarj/languages/Sdf2.def
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/languages/Sdf2.def	Thu May 19 23:41:14 2011	(r22924)
+++ sugarj/trunk/stdlib/org/sugarj/languages/Sdf2.def	Fri May 20 07:19:53 2011	(r22925)
@@ -403,7 +403,7 @@
 module basic/Whitespace
 exports
   lexical syntax
-    [\ \t\n\r] -> LAYOUT {cons("whitespace")}
+%%    [\ \t\n\r] -> LAYOUT {cons("whitespace")}
 
   context-free restrictions
     LAYOUT? -/- [\ \t\n\r]

Modified: sugarj/trunk/stdlib/org/sugarj/languages/Stratego.def
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/languages/Stratego.def	Thu May 19 23:41:14 2011	(r22924)
+++ sugarj/trunk/stdlib/org/sugarj/languages/Stratego.def	Fri May 20 07:19:53 2011	(r22925)
@@ -589,7 +589,7 @@
   lexical syntax
     ShortCom -> LAYOUT 
     LongCom  -> LAYOUT 
-    Ws       -> LAYOUT 
+%%    Ws       -> LAYOUT 
 
   context-free restrictions
     LAYOUT? -/- [\ \t\n\r]

Modified: sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.def
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.def	Thu May 19 23:41:14 2011	(r22924)
+++ sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.def	Fri May 20 07:19:53 2011	(r22925)
@@ -65,6 +65,7 @@
         ToplevelDeclaration SugarJLayout
 
   lexical syntax
+    [\ \t\12\r\n] -> LAYOUT
     [\ \t\12\r\n]         -> SugarJLayout 
     JavaComment           -> SugarJLayout 
     "%%" line:~[\n]* "\n" -> SugarJLayout {cons("line"), category("Comment")}

From seba at informatik.uni-marburg.de  Fri May 20 09:20:03 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Fri, 20 May 2011 07:20:03 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22926 -
	sugarj/trunk/editor/editor/java/org/sugarj/editor
Message-ID: <20110520072003.6DD6D2B802A@mx2.tudelft.nl>

Author: SebastianErdweg
Date: Fri May 20 07:20:03 2011
New Revision: 22926
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22926&sc=1

Log:


Modified:
   sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParser.java

Modified: sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParser.java
==============================================================================
--- sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParser.java	Fri May 20 07:19:53 2011	(r22925)
+++ sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParser.java	Fri May 20 07:20:03 2011	(r22926)
@@ -64,6 +64,7 @@
     try {
       result = Driver.compile(input, FileCommands.fileName(filename), filename);
     } catch (Throwable e) {
+      e.printStackTrace();
       throw new RuntimeException("parsing " + FileCommands.fileName(filename) + " failed", e);
     }
     

From tobivollebregt at gmail.com  Fri May 20 15:50:45 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Fri, 20 May 2011 13:50:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22927 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.template.test/syntax
	org.strategoxt.imp.editors.template.test/test
	org.strategoxt.imp.editors.template/trans
Message-ID: <20110520135045.04F99CC20A@mx4.tudelft.nl>

Author: tvo
Date: Fri May 20 13:50:44 2011
New Revision: 22927
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22927&sc=1

Log:
Template lang: built-in parenthesation in prettyprinter

No need to go through sdf2table & sdf2parenthesize,
it is directly built from an SDF abstract syntax tree.

A {bracket} production without cons must be present or
the prettyprinter won't even compile.

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/sdf2conflicts.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/TemplateTest.tmpl
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/test/example.tmpl-test
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/TemplateTest.tmpl
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/TemplateTest.tmpl	Fri May 20 07:20:03 2011	(r22926)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/syntax/TemplateTest.tmpl	Fri May 20 13:50:44 2011	(r22927)
@@ -50,10 +50,12 @@
   Expression.Minus = <<<Expression> - <Expression>>> {left}
   Expression.Times = <<<Expression> * <Expression>>> {left}
   Expression.Over  = <<<Expression> / <Expression>>> {left}
+  Expression.Power = <<<Expression>^<Expression>>> {right}
   Expression.Value = <<<INT>>>
   Expression = <<(<Expression>)>> {bracket}
 
 context-free priorities
 
+  Expression.Power >
   {left: Expression.Times Expression.Over } >
   {left: Expression.Plus  Expression.Minus}

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/test/example.tmpl-test
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/test/example.tmpl-test	Fri May 20 07:20:03 2011	(r22926)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/test/example.tmpl-test	Fri May 20 13:50:44 2011	(r22927)
@@ -21,6 +21,22 @@
 
 }
 
-expression Exp {
-  1 + 2 - 3 * 12
+expression LeftAssociative {
+  1 * (2 * 3)
+}
+
+expression RightAssociative {
+  2^2^2
+}
+
+expression Priorities {
+  1 - 2 / 3
+}
+
+expression Priorities {
+  1 / 2 * 3
+}
+
+expression Parentheses {
+  (7 - 5)^((1 + 1) * (2 + 2))
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str	Fri May 20 07:20:03 2011	(r22926)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-sdf.str	Fri May 20 13:50:44 2011	(r22927)
@@ -8,11 +8,12 @@
   lib/sdf-pretty-print
   analysis
   generation-utils
+  sdf2conflicts
 
 strategies
 
   to-sdf:
-    x -> <try(sdf-to-string)> d|[
+    x -> <sdf2conflicts; try(sdf-to-string)> d|[
       definition
       m*
       module Completion-Support
@@ -115,29 +116,22 @@
     pp-sdf-string
 
   template-production-to-sdf-no-attrs:
-    TemplateProduction(S', t /*@ Template([_|_])*/, _)
-      -> p|[ A* -> S' ]|
+    TemplateProduction(S', t, _) -> p|[ A* -> S' ]|
     with
       A* := <template-to-sdf> t
 
   template-production-to-sdf:
-    TemplateProduction(S', t /*@ Template([_|_])*/, attrs')
-      -> p|[ A* -> S' attrs' ]|
+    TemplateProduction(S', t, attrs') -> p|[ A* -> S' attrs' ]|
     with
       A* := <template-to-sdf> t
 
-/*
-  template-production-to-sdf:
-    TemplateProduction(S', Template([]), attrs')
-      -> p|[ -> S' attrs' ]|
-*/
-
   template-to-sdf:
     Template(e* @[_|_]) -> A*
     with
       A* := <newlines-switch(id, trim-trailing-layout, trim-leading-layout);
              combine-consecutive-newlines;
-             filter(template-element-to-sdf)> e*
+             filter(template-element-to-sdf);
+             flatten-list> e*
 
   template-to-sdf:
     Template([]) -> []

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Fri May 20 07:20:03 2011	(r22926)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Fri May 20 13:50:44 2011	(r22927)
@@ -5,6 +5,7 @@
   analysis
   desugar
   generation-utils
+  sdf2conflicts
 
 strategies
 
@@ -81,15 +82,16 @@
     TemplateProduction(sort, Template([String(t)]), attr*) ->
     $[prettyprint-[sort]:
         [cons]() -> [result]]
+    where
+      cons   := <collect-one(?sdf-cons(<un-double-quote>))> attr*
     with
-      cons   := <collect-one(?sdf-cons(<un-double-quote>))> attr*;
       result := <escape-and-double-quote> t
 
   template-to-prettyprint-strategy:
     TemplateProduction(sort, Template(elem*), attr*) ->
     <trim-chars(' ' + '\t' + '\r' + '\n')> // Workaround Stratego/856
     $[prettyprint-[sort]:
-        [cons]([arg*]) -> zz
+        [cons]([arg'*]) -> zz
         with
           [let'*]]
     where
@@ -101,8 +103,8 @@
                   !(<id>, 0);
                   thread-map(try(rename-template-element));
                   ?(<id>, _)> elem*;
-      arg*    := <filter(template-element-to-cons-arg);
-                  separate-by(|", ")> elem'*;
+      arg*    := <filter(template-element-to-cons-arg)> elem'*;
+      arg'*   := <separate-by(|", ")> arg*;
       part*   := <newlines-switch(trim-layout, trim-trailing-layout,
                                   trim-leading-layout ; trim-trailing-indent);
                   listtd(template-element-to-stratego);
@@ -110,9 +112,39 @@
                   map(try(?String(<escape-and-double-quote>)));
                   separate-by(|", ")> elem'*;
       result  := <concat-strings>["zz := <concat-strings> [", part*, "]"];
-      let*    := <filter(template-element-to-assignment)> elem'*;
+      confl*  := <bagof-SubtermConflicts> Symbol(cons, <length> arg*);
+      if !confl* => [] then
+        let*  := <filter(template-element-to-assignment)> elem'*
+      else
+        let*  := <filter(?Placeholder(_, _, _, _));
+                  add-indices;
+                  filter(template-element-to-parenthesize(|confl*))> elem'*
+      end;
       let'*   := <separate-by(|";\n")> [let*, result]
 
+  // Production without cons but with bracket annotation
+  // (cons + bracket -> no need to parenthesize)
+  template-to-prettyprint-strategy:
+    TemplateProduction(sort, Template(elem*), attr*) ->
+    ${parenthesize-{sort}(not-allowed) =
+        if not-allowed then
+          <concat-strings> ["{open}", <prettyprint-{sort}>, "{close}"]
+        else
+          prettyprint-{sort}
+        end}
+    where
+      not(<collect-one(?sdf-cons(<un-double-quote>))> attr*);
+      <collect-one(?bracket())> attr*
+    where
+      <length> <filter(?Placeholder(_, _, _, _))> elem* => 1
+      <+ debug(!"Bracket production must have exactly one placeholder: "); fail
+    with
+      (before, placeholder, after) := <split-fetch-keep(?Placeholder(_, _, _, _))> elem*
+    where
+      [String(open)]  := <map(template-element-to-stratego'); concatenate-consecutive-strings> before;
+      [String(close)] := <map(template-element-to-stratego'); concatenate-consecutive-strings> after
+      <+ debug(!"Bracket production must have text before and after the placeholder: "); fail
+
   rename-template-element:
     (Placeholder(a, b@ Sort(x), c, d){a*}, index) -> (Placeholder(a, b{newname}, c, d){a*}, newindex)
     with
@@ -161,3 +193,17 @@
 
   template-element-to-assignment:
     Placeholder(_, Sort(x){name}, Option(), _) -> $[[name]' := <pp-option(prettyprint-[x])> [name]]
+
+  template-element-to-parenthesize(|conflicts):
+    (i1, Placeholder(_, Sort(x){name}, None(), _)) -> $[[name]' := <parenthesize-[x]([na])> [name]]
+    with
+      i0 := <dec> i1;
+      let subterm-conflict-to-match = {x, n, a*:
+            ( (i0, Symbol(x, n)) -> <concat-strings> ["?", x, "(", a*, ")"]
+              with a* := <range; map(!"_"); separate-by(|", ")> (0, n) )
+          }
+      in
+        na := <filter(subterm-conflict-to-match);
+               separate-by(|" + ");
+               try(\ [] -> ["fail"] \)> conflicts
+      end

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/sdf2conflicts.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/sdf2conflicts.str	Fri May 20 13:50:44 2011	(r22927)
@@ -0,0 +1,260 @@
+// Author: Tobi Vollebregt
+
+// Calculates SubtermConflicts from an SDF definition.
+// (instead of calculating them from a parse table as sdf2parenthesize does)
+
+// This is slightly inspired by sdftools/trans/sdf2ast-conflicts.str
+
+module sdf2conflicts
+imports
+  libstratego-lib
+  libstratego-sglr
+
+signature
+  constructors
+    Symbol : String * Int -> Symbol
+
+overlays
+  sdf-cons(name) = term(default(appl(unquoted("cons"), [fun(quoted(name))])))
+
+strategies
+
+  /*
+   * sdf2conflicts: Calculate set of conflicts that are filtered out using
+   * priorities, i.e. that need parenthesis when prettyprinting.
+   *
+   * The input term is an SDF AST. It is not modified. The main side-effect
+   * is the initialization of the SubtermConflicts dynamic rule:
+   *
+   *  SubtermConflicts: Symbol => (Int, Symbol)
+   *
+   * This maps each symbol (cons + arity) X to a list of pairs (arg, Y)
+   * which mean that Y is not allowed as child of X at position arg.
+   * (To get to the list use `<bagof-SubtermConflicts> symbol'!)
+   */
+  sdf2conflicts:
+    ast -> ast
+    with
+      prod-hash := <new-hashtable> // (sym*, sort) => attr*
+    with
+      let err(|msg) = debug(!<conc-strings> (msg, ": ")); fail
+
+          // push the attributes of a production into prod-hash
+          declare-prod =
+      	    \ p@ prod(sym*, sort, attrs(attr*)) -> p
+      	      with <hashtable-pushlist(|(sym*, sort), attr*)> prod-hash \
+
+          // add all attributes defined anywhere to a production
+          lookup-prod = {attr*:
+          	\ p@ prod(sym*, sort, _) -> prod(sym*, sort, attrs(attr*))
+          	  with attr* := <hashtable-get(|(sym*, sort)) <+ ![]> prod-hash \
+          }
+
+          priority-section =
+            ?context-free-priorities(<id>)
+          + ?lexical-priorities(<id>)
+          + ?priorities(<id>)
+
+          // get rid of simple-group ; add attributes to productions
+          normalize-group-and-add-attributes =
+            assoc-group(id, map(lookup-prod))
+          + prods-group(map(lookup-prod))
+          + \ simple-group(p) -> prods-group([<lookup-prod> p]) \
+
+          // from core-sdf-grammar2rtg.str
+          /**
+           * @type  Symbol -> Symbol
+           */
+          is-empty-sym = ?lit(_)
+          is-empty-sym = ?ci-lit(_)
+          is-empty-sym = ?layout()
+          is-empty-sym = opt(is-empty-sym)
+          is-empty-sym = cf(is-empty-sym)
+          is-empty-sym = lex(is-empty-sym)
+          is-empty-sym = label(id, is-empty-sym)
+
+          cons-of-prod =
+            ?prod(_, _, attrs(<id>));
+            fetch-elem(?sdf-cons(<un-double-quote>))
+
+          assoc-of-prod =
+            ?prod(_, _, attrs(<id>));
+            fetch-elem(?assoc(<id>))
+
+          // from sdf2ast-conflicts.str
+          Prod2Symbol = {x, n:
+            \ p at prod(syms, _, _) -> Symbol(x, n)
+              where
+                n := <filter(not(is-empty-sym)); length> syms
+              ; x := <cons-of-prod <+ err(|"production does not have a cons")> p \
+          }
+
+          // from sdf2ast-conflicts.str
+          /**
+           * @type Int -> Int
+           */
+          arg-for-symbol(|p) = {arg, syms, syms':
+            ?arg
+            ; prod(syms, _, _) := p
+            ; syms' := <add-indices; retain-all((id, not(is-empty-sym)); ?(<id>, _))> syms
+            ; (<get-index; dec> (<inc> arg, syms') <+ !())
+          }
+
+          chaintd(s) = list-loop(chain(listtd(where(s))))
+
+          chainloop(s) = list-loop(chain(list-loop(s)))
+
+          fetch-group =
+            try(?non-transitive(<id>));
+            try(?with-arguments(<id>, _))
+
+          fetch-prods =
+            fetch-group;
+            (?assoc-group(_, <id>) + ?prods-group(<id>))
+
+          for-each-prod-pair(s) =
+            (fetch-prods, fetch-prods);
+            for-each-pair(s)
+
+          add-subterm-conflict(|lhs, arg, rhs) =
+            if not(<bagof-SubtermConflicts; fetch(?(arg, rhs))> lhs) then
+              {lhs', arg', rhs':
+                <debug(!"adding subterm conflict: ")> (lhs, (arg, rhs));
+                lhs' := lhs;
+                arg' := arg;
+                rhs' := rhs;
+                rules(SubtermConflicts :+ lhs' -> (arg', rhs'))
+              }
+            end
+
+          add-prio(|arg) = {lhs, rhs, lhs', rhs':
+            ?(lhs, rhs);
+            lhs' := <Prod2Symbol> lhs;
+            rhs' := <Prod2Symbol> rhs;
+            add-subterm-conflict(|lhs', arg, rhs')
+          }
+
+          add-gtr-prio = {lhs, rhs, n:
+            ?(lhs, rhs);
+            Symbol(_, n) := <Prod2Symbol> lhs;
+            <range> (0, n);
+            map(\ arg -> arg with <add-prio(|arg)> (lhs, rhs) \)
+          }
+
+          add-arg-gtr-prio(|indices) = {lhs, rhs:
+            ?(lhs, rhs);
+            !indices;
+            map(\ arg -> arg with <add-prio(|<arg-for-symbol(|lhs)> arg)> (lhs, rhs) \)
+          }
+
+          add-left-assoc = {lhs, rhs, n:
+            ?(lhs, rhs);
+            Symbol(_, n) := <Prod2Symbol> lhs;
+            <add-prio(|<dec> n)> (lhs, rhs)
+          }
+
+          add-right-assoc = {lhs, rhs:
+            ?(lhs, rhs);
+            <add-prio(|0)> (lhs, rhs)
+          }
+
+          add-group(match) = {first, second, indices, indices':
+          	?[]
+          + ?[_]
+          + ?[first, second | _];
+            if <match> first then
+              if <?with-arguments(_, default(indices))> first then
+              	indices' := <map(string-to-int)> indices;
+                <for-each-prod-pair(add-arg-gtr-prio(|indices'))> (first, second)
+              else
+                <for-each-prod-pair(add-gtr-prio)> (first, second)
+              end
+            end
+          }
+
+          add-transitives = chaintd(add-group(not(?non-transitive(_))))
+
+          add-non-transitives = chaintd(add-group(?non-transitive(_)))
+
+          // associativity within a group
+          add-associativity = {associativity, prod*:
+            fetch-group;
+            if ?assoc-group(associativity, prod*) then
+              if <?left() + ?assoc() + ?non-assoc()> associativity then
+                <for-each-pair(add-left-assoc)> (prod*, prod*)
+              end;
+              if <?right() + ?non-assoc()> associativity then
+                <for-each-pair(add-right-assoc)> (prod*, prod*)
+              end
+            end
+          }
+
+          add-associativities = chainloop(add-associativity)
+
+          add-self-associativity = {associativity, p:
+            ?p@ prod(_, _, _);
+            if assoc-of-prod => associativity then
+              if <?left() + ?assoc() + ?non-assoc()> associativity then
+                <add-left-assoc> (p, p)
+              end;
+              if <?right() + ?non-assoc()> associativity then
+                <add-right-assoc> (p, p)
+              end
+            end
+          }
+
+          add-self-associativities =
+            with(
+              <hashtable-getlist> prod-hash;
+              list-loop(
+                \ ((sym*, sort), attr*) -> prod(sym*, sort, attrs(attr*)) \;
+                add-self-associativity
+              )
+            )
+
+          make-transitive-step =
+            all-keys-SubtermConflicts; nub; // List(Symbol)
+            // For each symbol X
+            list-loop({lhs:
+              ?lhs;
+              bagof-SubtermConflicts; // List((Int, Symbol))
+              // For each symbol Y with X > Y
+              list-loop({arg:
+                ?(arg, <bagof-SubtermConflicts>); // List((Int, Symbol))
+                // For each symbol Z with Y > Z
+                list-loop({rhs:
+                  ?(_, rhs);
+                  // Add X > Z if it doesn't exist
+                  add-subterm-conflict(|lhs, arg, rhs)
+                })
+              })
+            })
+
+          make-transitive =
+            with( \SubtermConflicts/* make-transitive-step )
+
+          // Debug
+          print-SubtermConflicts(|msg) =
+            with(
+              <debug> msg;
+              all-keys-SubtermConflicts;
+              list-loop(debug(!"key: "); bagof-SubtermConflicts; debug(!"values: "))
+            )
+
+      in
+        !ast;
+        alltd(declare-prod);
+        collect-om(priority-section); concat; // List(chain(_))
+        alltd(normalize-group-and-add-attributes);
+
+        add-transitives;
+        // print-SubtermConflicts(|"=== before applying transitivity relation ===");
+        make-transitive;
+        add-non-transitives;
+        add-associativities;
+        add-self-associativities
+
+        ;print-SubtermConflicts(|"=== FINAL ===")
+      end
+    with
+      <hashtable-destroy> prod-hash

From M.A.Akhter at student.tudelft.nl  Fri May 20 16:54:33 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Fri, 20 May 2011 14:54:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22928 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	analyze/sdf codegen codegen/sdf codegen/str context
	context/sdf context/str utils
Message-ID: <20110520145433.113527F803A@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Fri May 20 14:54:32 2011
New Revision: 22928
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22928&sc=1

Log:
* changed from unique declaration to declarations to allow duplicates
* added resolver for that.
* removed redundant debug info	
* more refactoring
* issue : https://www.gravitydev.com/project/9901/issues/28

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/cache.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str	Fri May 20 13:50:44 2011	(r22927)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str	Fri May 20 14:54:32 2011	(r22928)
@@ -51,7 +51,7 @@
   context-free-syntax-sort-error:
     sort(x) -> (x, $[No definition for [x]])
     where
-      not(<resolve-sdf-declaration> x) 
+      not(<resolve-sdf-declarations> x) 
   
   context-free-syntax-sort-error:
     parameterized-sort(_, _) -> [] // not supported

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Fri May 20 13:50:44 2011	(r22927)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Fri May 20 14:54:32 2011	(r22928)
@@ -258,17 +258,19 @@
 		<debug-compiler>$[compile-main | compile-legacy-artifacts | List:[<pp-aterm>upackages]]
 	where
 		{| Resolved-ExternalArtifact:
-					<compile-legacy-artifact>(Unresolved() , Module(Name("libstratego-lib")) ,Unresolved()); 
+					//TODO : Make it configurable which lib to include by default. Hence remove following hardcoding. 
+					<compile-legacy-artifact>(Globals() , Module(Name("libstratego-lib")) ,Unresolved());
 					<list-loop(compile-legacy-artifact-package)>upackages	
+					
 		|}
 
 	//Compile  a particular legacy SDF + STR Artifacts . Currently it only supports STR legacy artifacts . TODO  : add others 		
 	compile-legacy-artifact-package : p at Package(qname) ->p
-	where	
+	with	
 		 <debug-compiler>$[compile-main | compile-legacy-artifacts | Current Package:[<pp-aterm>]]
 		;<bagof-UsingLegacyArtifacts>qname=> legacy-artifact-details*
 		;<debug-compiler>$[compile-main | compile-legacy-artifacts | Artifact List:[<pp-aterm>legacy-artifact-details*]]
-	where
+	with
 			{|GetEnclosingPackageName:
 						<declare-current-package-scope> p;
 						<map(compile-legacy-artifact)>legacy-artifact-details*	
@@ -277,9 +279,9 @@
 	compile-legacy-artifact: 
 		legacy-artifact-details@(namespace, Module(Name(modulename)) , resolving-path) -> legacy-artifact-details
 		where
-			<debug-compiler>$[compile-main | compile-legacy-artifact > planning to compile following legacy artifact: [<pp-aterm>]] 
+			<debug-compiler>$[compile-main | compile-legacy-artifact | planning to compile following legacy artifact: [<pp-aterm>]] 
 		where
-			if not(<Resolved-ExternalArtifact>(modulename,resolving-path)) then // check to see if already taken care off.  	
+			if not(<Resolved-ExternalArtifact>(namespace, modulename,resolving-path)) then // check to see if already taken care off.  	
 				if (!resolving-path => Unresolved()) then 
 					  // we are only supporting legacy STR lib at this moment which are not located in the file system . 
 					  // Hence, it is unresolved , we are giving it a try to resolve it as a lib
@@ -287,7 +289,7 @@
 					<+
 						<read-stratego-signatures;declare-stratego-globals-top> modulename	
 					<+ 
-						<debug-compiler>$[compile-main | compile-legacy-artifact > failed to resolve]
+						<debug-compiler>$[compile-main | compile-legacy-artifact | Error :  failed to resolve]
 				else
 					// Verify that the resource has a known extension.
 					<has-known-extensions>resolving-path ;
@@ -298,15 +300,12 @@
 							// Known Extension found. Handling it.  
 							// Parsing the legacy content.
 							// Recoding the declarations for further analysis. 
-							<debug-compiler>$[compile-main | compile-legacy-artifact | Compiling following legacy artifacts : [<pp-aterm>resolving-path]];
+							<debug-compiler>$[compile-main | compile-legacy-artifact | Compiling following legacy artifacts : [<pp-aterm>resolving-path] for package : [<GetEnclosingPackageName;pp-aterm>]];
 							<declare-legacy-artifact(|resolving-path)><parse-legacy-artifact>resolving-path
 					|}
 				<+ 
 					<debug-compiler>$[compile-main | compile-legacy-artifact > Error occured in handling [<pp-aterm>resolving-path]. Hence, it is ignored.]  
-					
-					
-					//read + normalize and then sent to declare
 				end 	 
 			end
 		where
-			rules ( Resolved-ExternalArtifact : (modulename,resolving-path) ->resolving-path) 
+			rules ( Resolved-ExternalArtifact : (namespace, modulename,resolving-path) ->resolving-path) 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Fri May 20 13:50:44 2011	(r22927)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Fri May 20 14:54:32 2011	(r22928)
@@ -108,7 +108,7 @@
  	
  	sdf-import-adapter : legacy-artifact at Name(name)  -> 	result
  	where 
- 			if(<UsedLegacyArtifacts>(Globals(), name) => Unresolved()) then
+ 			if(<UsedLegacyArtifacts>(<GetEnclosingPackageName>, name) => Unresolved()) then
  				result := [] 
  			else 
  				result :=  'module(unparameterized(name)) 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Fri May 20 13:50:44 2011	(r22927)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Fri May 20 14:54:32 2011	(r22928)
@@ -149,7 +149,7 @@
 	to-str-import: 
 		legacy-artifact at Name(name)  -> 	result 
  	where
- 			if(<UsedLegacyArtifacts>(Globals(), name) => Unresolved()) then
+ 			if(<UsedLegacyArtifacts>(<GetEnclosingPackageName> , name) => Unresolved()) then
  				result := [Import(name)]  // Probably lib legacy imports . SInce, it is unresolved, no signature is generated for this import
  			else 
  				result :=  [Import(name) , Import(<get-signature-file-name>name)] 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Fri May 20 13:50:44 2011	(r22927)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Fri May 20 14:54:32 2011	(r22928)
@@ -20,7 +20,14 @@
 	include/SpoofaxLang
  
 rules 
-	resolve-sdf-declaration = 
+	resolve-sdf-declarations =
+		?symbol; 
+ 		<resolve-symbol-declarations(all-keys-Declaration , bagof-Declaration)><to-scoped-symbol>symbol 
+ 	<+
+ 		<debug-analysis> $[ErrorChecking| FAIL| Failed to retrive SDF declaration for symbol [<pp-aterm>]];
+ 		fail
+ 		 
+	resolve-unique-sdf-declaration = 
  		?symbol; 
  		<resolve-symbol-unique-declaration(all-keys-Declaration , bagof-Declaration)><to-scoped-symbol>symbol 
  	<+

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str	Fri May 20 13:50:44 2011	(r22927)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str	Fri May 20 14:54:32 2011	(r22928)
@@ -76,7 +76,7 @@
 		where 
 			<debug-symboltable>$[ImportReferenceResolver| store-import-declaration|storing module reference : [<pp-aterm>]]
 		with
-			module-qname := <get-module-untyped-qname> (package-qname-parts , modname)//TODO: construct modules qualified name
+			module-qname := <get-module-untyped-qname> (package-qname-parts , modname)			//TODO: construct modules qualified name
 		where 
 			if <DeclaredModule>module-qname then
 					<store-spx-import-declaration(|enclosing-namespace-qname)> Module(module-qname)
@@ -88,7 +88,7 @@
 		 
 		// Store import references in the 2nd pass of the traversals
 	store-import-declaration(|enclosing-namespace-qname):
-		i at ImportPackage(Name(package-name)) -> annotated-import-decl 
+		i at ImportPackage(Name(package-name)) -> annotated-import-decl
 		where 
 			<debug-symboltable>$[ImportReferenceResolver| store-import-declaration|storing reference : [<pp-aterm>]]
 		where 
@@ -119,13 +119,15 @@
 			;if (!resolved-path => Unresolved()) then 
 				<debug-symboltable>$[SymbolTable|storing enclosing imports reference| FAIL <UsingLegacyArtifacts>: [<pp-aterm>i]]
 				;annotated-import-decl :=  <add-annotation(|Unresolved())>i
+				;ns := Globals() // TODO :  Make it consistent. currently some DR is using Typed QName , others using UnTyped 
 			else
+				ns := Package(enclosing-namespace); // TODO :  Make it consistent. currently some DR is using Typed QName , others using UnTyped
 				annotated-import-decl :=  i
 			end	
 		with
 			rules(
-					UsedLegacyArtifacts:   (Globals(), modulename) -> resolved-path
-					UsingLegacyArtifacts:+ enclosing-namespace	   -> (Globals(), Module(Name(modulename)), resolved-path)    
+					UsedLegacyArtifacts:   (ns , modulename) -> resolved-path
+					UsingLegacyArtifacts:+  enclosing-namespace	   -> (ns, Module(Name(modulename)), resolved-path)    
 				)
 			;<debug-symboltable>$[ImportReferenceResolver| storing enclosing imports reference| <UsingLegacyArtifacts>: [<pp-aterm>enclosing-namespace]-> [<pp-aterm>(Globals(), Module(Name(modulename)), resolved-path)]]
 			

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str	Fri May 20 13:50:44 2011	(r22927)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare.str	Fri May 20 14:54:32 2011	(r22928)
@@ -100,8 +100,7 @@
 		 
 	declare-stratego-globals-top =
     if not(NoAnalysis) then
-    	where(<debug-declaration>$[DeclareSTR | Inside stratego-globals-top : [<pp-aterm>]]);
-     		alltd(declare-str-definition)
+    		alltd(declare-str-definition)
     end
 
   declare-str-definition:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/cache.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/cache.str	Fri May 20 13:50:44 2011	(r22927)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/cache.str	Fri May 20 14:54:32 2011	(r22928)
@@ -53,13 +53,13 @@
 			<spx-lib-cache-path> name => cache-path
 		where
 			if not(invalidate-lib-cache) then
-			 	<debug-compiler>$[Caching | Cache is invalidated. read it.];
+			 	<debug-compiler>$[Caching | Cache is invalidated for [name]. read it.];
 	     	fail	 
 	     else
 				if <file-exists> cache-path then
-				 	<debug-compiler>$[Caching | lib Cache is still valid  :[<pp-aterm>]]
+				 	<debug-compiler>$[Caching | lib Cache is still valid  for [name]]
 				 	;<ReadFromFile> cache-path => ast
-				 	;<debug-compiler>$[Caching | Found ast:[<pp-aterm>ast]]
+				 	;<debug-compiler>$[Caching | Found ast [name].]
 				else
 					<read-lib>name => ast
 					;<cache-lib-ast>( name , ast) 		 

From tobivollebregt at gmail.com  Fri May 20 19:40:47 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Fri, 20 May 2011 17:40:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22929 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.template.test/test
	org.strategoxt.imp.editors.template/trans
Message-ID: <20110520174047.1B7F97F8040@mx1.tudelft.nl>

Author: tvo
Date: Fri May 20 17:40:45 2011
New Revision: 22929
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22929&sc=1

Log:
Template lang: priority group with associativity does not imply self-associativity of its members

(for group with single member this is different from SDF, but this
design makes assoc-group and assoc attribute orthogonal features...)

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/test/example.tmpl-test
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/sdf2conflicts.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/test/example.tmpl-test
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/test/example.tmpl-test	Fri May 20 14:54:32 2011	(r22928)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template.test/test/example.tmpl-test	Fri May 20 17:40:45 2011	(r22929)
@@ -22,7 +22,7 @@
 }
 
 expression LeftAssociative {
-  1 * (2 * 3)
+  1 * 2 * 3
 }
 
 expression RightAssociative {

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/sdf2conflicts.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/sdf2conflicts.str	Fri May 20 14:54:32 2011	(r22928)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/sdf2conflicts.str	Fri May 20 17:40:45 2011	(r22929)
@@ -176,15 +176,18 @@
 
           add-non-transitives = chaintd(add-group(?non-transitive(_)))
 
-          // associativity within a group
+          // Associativity within a group
+          // (does not make group members self-associative)
+          // Note: In SDF if there is only one group member it does
+          //       make it self-associative. (StrategoXT/863)
           add-associativity = {associativity, prod*:
             fetch-group;
             if ?assoc-group(associativity, prod*) then
               if <?left() + ?assoc() + ?non-assoc()> associativity then
-                <for-each-pair(add-left-assoc)> (prod*, prod*)
+                <for-each-pair(eq <+ add-left-assoc)> (prod*, prod*)
               end;
               if <?right() + ?non-assoc()> associativity then
-                <for-each-pair(add-right-assoc)> (prod*, prod*)
+                <for-each-pair(eq <+ add-right-assoc)> (prod*, prod*)
               end
             end
           }

From M.A.Akhter at student.tudelft.nl  Fri May 20 20:22:29 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Fri, 20 May 2011 18:22:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22930 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen:
	. sdf str
Message-ID: <20110520182229.5A1522B8043@mx2.tudelft.nl>

Author: MdAdilAkhter
Date: Fri May 20 18:22:29 2011
New Revision: 22930
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22930&sc=1

Log:
* Fixed : libstratego-lib was included in sdf (generated) due to recent changes
* Issue : http://www.gravitydev.com/project/9901/issues/31

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str	Fri May 20 17:40:45 2011	(r22929)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str	Fri May 20 18:22:29 2011	(r22930)
@@ -49,12 +49,12 @@
     <property name="dist" location="bin/dist"/>
     
 		<!-- Environment configuration for command-line builds -->
-    <property name="build.sdf.imports" value= "-I &quot;${packages.root}&quot;"/>
+    <property name="build.sdf.imports" value= "-I &quot;${basedir}&quot; -I &quot;${packages.root}&quot;"/>
     <property name="build.stratego.args" value="
                     --library
                     -I &quot;${packages.root}&quot;
                     -I &quot;${basedir}&quot;
-                    -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm"/>
+                    -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm  -la strc -la stratego-sdf"/>
 
 		<condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
         <isset property="eclipse.spoofaximp.nativeprefix"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Fri May 20 17:40:45 2011	(r22929)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Fri May 20 18:22:29 2011	(r22930)
@@ -107,8 +107,8 @@
  		<is-string>name
  	
  	sdf-import-adapter : legacy-artifact at Name(name)  -> 	result
- 	where 
- 			if(<UsedLegacyArtifacts>(<GetEnclosingPackageName>, name) => Unresolved()) then
+	where 
+ 			if(<UsedLegacyArtifacts>(Globals(), name) => Unresolved()) then
  				result := [] 
  			else 
  				result :=  'module(unparameterized(name)) 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Fri May 20 17:40:45 2011	(r22929)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Fri May 20 18:22:29 2011	(r22930)
@@ -149,7 +149,7 @@
 	to-str-import: 
 		legacy-artifact at Name(name)  -> 	result 
  	where
- 			if(<UsedLegacyArtifacts>(<GetEnclosingPackageName> , name) => Unresolved()) then
+ 			if(<UsedLegacyArtifacts>(Globals() , name) => Unresolved()) then
  				result := [Import(name)]  // Probably lib legacy imports . SInce, it is unresolved, no signature is generated for this import
  			else 
  				result :=  [Import(name) , Import(<get-signature-file-name>name)] 

From tobivollebregt at gmail.com  Sat May 21 14:09:52 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Sat, 21 May 2011 12:09:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22931 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: editor
	syntax trans
Message-ID: <20110521120952.42C887F8027@mx1.tudelft.nl>

Author: tvo
Date: Sat May 21 12:09:50 2011
New Revision: 22931
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22931&sc=1

Log:
Template lang: add escapes

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv	Fri May 20 18:22:29 2011	(r22930)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv	Sat May 21 12:09:50 2011	(r22931)
@@ -11,6 +11,7 @@
   SDF-StrCon._            : blue
 
   _.String                : template
+  _.Escape                : 127 0 85 bold
   _.Layout                : template
   _.Newline               : template //0 0 255 255 0 0  (highlight trailing whitespace)
   PlaceholderText1        : template

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf	Fri May 20 18:22:29 2011	(r22930)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf	Sat May 21 12:09:50 2011	(r22931)
@@ -58,35 +58,88 @@
   syntax
     %% templates
     "<<" <TemplatePart1-CF>* ">>" -> <Template-CF> {cons("Template")}
-    <TemplatePart1-LEX>   -> <TemplatePart1-CF> {cons("String")}
+    <TemplateString1-LEX> -> <TemplatePart1-CF> {cons("String")}
+    <TemplateEscape1-LEX> -> <TemplatePart1-CF> {cons("Escape")}
     <TemplateLayout-LEX>  -> <TemplatePart1-CF> {cons("Layout")}
     <TemplateNewline-LEX> -> <TemplatePart1-CF> {cons("Newline")}
 
     "[[" <TemplatePart2-CF>* "]]" -> <Template-CF> {cons("Template")}
-    <TemplatePart2-LEX>   -> <TemplatePart2-CF> {cons("String")}
+    <TemplateString2-LEX> -> <TemplatePart2-CF> {cons("String")}
+    <TemplateEscape2-LEX> -> <TemplatePart2-CF> {cons("Escape")}
     <TemplateLayout-LEX>  -> <TemplatePart2-CF> {cons("Layout")}
     <TemplateNewline-LEX> -> <TemplatePart2-CF> {cons("Newline")}
 
-    "\"" <TemplatePart3-CF>* "\"" -> <Template-CF> {cons("Template")}
-    <TemplatePart3-LEX>   -> <TemplatePart3-CF> {cons("String")}
-    <TemplateLayout-LEX>  -> <TemplatePart3-CF> {cons("Layout")}
-    <TemplateNewline-LEX> -> <TemplatePart3-CF> {cons("Newline")}
+    %% special: no placeholders, no newlines
+    "\"" <TemplatePartQ-CF>* "\"" -> <Template-CF> {cons("Template")}
+    <TemplateStringQ-LEX> -> <TemplatePartQ-CF> {cons("String")}
+    <TemplateEscapeQ-LEX> -> <TemplatePartQ-CF> {cons("Escape")}
+    <TemplateLayout-LEX>  -> <TemplatePartQ-CF> {cons("Layout")}
 
   lexical syntax
-    [\ \t\r]* [\n]   -> TemplateNewline
-    [\ \t\r]+        -> TemplateLayout
-    ~[\<\>\ \t\r\n]+ -> TemplatePart1
-    ~[\[\]\ \t\r\n]+ -> TemplatePart2
-    ~[\"\ \t\r\n]+   -> TemplatePart3
-
     ~[\<\>\:]+ -> PlaceholderText1
     ~[\[\]\:]+ -> PlaceholderText2
 
   lexical restrictions
-    TemplateLayout -/- [\ \t\r\n]
-    TemplatePart1  -/- ~[\<\>\ \t\r\n]
-    TemplatePart2  -/- ~[\[\]\ \t\r\n]
-    TemplatePart3  -/- ~[\"\ \t\r\n]
-
     PlaceholderText1 -/- ~[\:]
     PlaceholderText2 -/- ~[\:]
+
+  lexical syntax
+    [\ \t\r]* [\n] -> TemplateNewline
+    [\ \t\r]+      -> TemplateLayout
+
+    (~[\\\<\>\ \t\r\n] | Backslash1)+ -> TemplateString1
+    (~[\\\[\]\ \t\r\n] | Backslash2)+ -> TemplateString2
+    ~[\\\"\ \t]+                      -> TemplateStringQ
+
+    [\\] -> Backslash1
+    [\\] -> Backslash2
+
+  lexical restrictions
+    TemplateLayout -/- [\ \t\r\n]
+
+    %% must be followed by:
+    TemplateString1 -/- ~[\\\<\>\ \t\r\n]
+    TemplateString2 -/- ~[\\\[\]\ \t\r\n]
+    TemplateStringQ -/- ~[\\\"\ \t]
+
+    %% if followed by a backslash, then the backslash must be followed by:
+    TemplateString1 -/- [\\].~[\<\>\\]
+    TemplateString2 -/- [\\].~[\[\]\\]
+
+    Backslash1 -/- [\<\>\\]
+    Backslash2 -/- [\[\]\\]
+
+  lexical syntax
+    %% this are the escapes which StringTemplate has
+    "\\<"  -> TemplateEscape1
+    "\\>"  -> TemplateEscape1
+    "\\\\" -> TemplateEscape1
+    "\\["  -> TemplateEscape2
+    "\\]"  -> TemplateEscape2
+    "\\\\" -> TemplateEscape2
+
+    "<" EscapedChar* ">"    -> TemplateEscape1
+    "<\\\\>" [\ \t\r]* [\n] -> TemplateEscape1
+    "[" EscapedChar* "]"    -> TemplateEscape2
+    "[\\\\]" [\ \t\r]* [\n] -> TemplateEscape2
+
+    %% double-backslash isn't allowed in <<>> / [[]] templates
+    %% (would clash with <\\> / [\\] line continuation construct)
+    ("\\\\" | EscapedChar)+ -> TemplateEscapeQ
+
+    %% escapes allowed in a placeholder-like construct
+    "\\ "  -> EscapedChar
+    "\\\"" -> EscapedChar
+    "\\t"  -> EscapedChar
+    "\\r"  -> EscapedChar
+    "\\n"  -> EscapedChar
+    "\\u" [0-9A-Fa-f]+ -> UnicodeEscapedChar
+    UnicodeEscapedChar -> EscapedChar
+
+    "\\" ~[] -> EscapedChar {recover, cons("WATER")}
+    "<" ~[\>]+ ">" -> TemplateEscape1 {recover, cons("WATER")}
+    "[" ~[\]]+ "]" -> TemplateEscape2 {recover, cons("WATER")}
+
+  lexical restrictions
+    TemplateEscapeQ    -/- [\\]
+    UnicodeEscapedChar -/- [0-9A-Fa-f]

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str	Fri May 20 18:22:29 2011	(r22930)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/desugar.str	Sat May 21 12:09:50 2011	(r22931)
@@ -9,7 +9,7 @@
 
 strategies
 
-  desugar-top = downup(try(desugar))
+  desugar-top = innermost(desugar)
 
 rules
 
@@ -39,3 +39,33 @@
 
   desugar:
     Separator(x) -> Separator(<un-double-quote; unescape> x)
+
+  desugar:
+    Escape(t) -> String(t')
+    with
+      let parse-unicode = {before*, mid, after*:
+             split-fetch-keep(not(is-hexnum)) => (before*, mid, after*);
+             ![<hex-chars-to-int> before*, mid | after*]
+          <+ ![<hex-chars-to-int>]
+          }
+          unescape =
+            string-as-chars(rec x(
+               \['\', ' ' | tail] -> [' '  | <x> tail]\
+            <+ \['\', '"' | tail] -> ['"'  | <x> tail]\
+            <+ \['\', '\' | tail] -> ['\'  | <x> tail]\
+            <+ \['\', 't' | tail] -> ['\t' | <x> tail]\
+            <+ \['\', 'r' | tail] -> ['\r' | <x> tail]\
+            <+ \['\', 'n' | tail] -> ['\n' | <x> tail]\
+            <+ \['\', '<' | tail] -> ['<'  | <x> tail]\
+            <+ \['\', '>' | tail] -> ['>'  | <x> tail]\
+            <+ \['\', '[' | tail] -> ['['  | <x> tail]\
+            <+ \['\', ']' | tail] -> [']'  | <x> tail]\
+            <+ \['\', 'u' | tail] -> <parse-unicode; [id | x]> tail\
+            <+ \['<', '\', '\', '>' | tail] -> <x> tail\
+            <+ \['[', '\', '\', ']' | tail] -> <x> tail\
+            <+ \[_ | tail] -> <x> tail\
+            <+ []
+            ))
+      in
+        t' := <unescape> t
+      end

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Fri May 20 18:22:29 2011	(r22930)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generate-str.str	Sat May 21 12:09:50 2011	(r22931)
@@ -114,10 +114,10 @@
       result  := <concat-strings>["zz := <concat-strings> [", part*, "]"];
       confl*  := <bagof-SubtermConflicts> Symbol(cons, <length> arg*);
       if !confl* => [] then
-        let*  := <filter(template-element-to-assignment)> elem'*
+        let*  := <filter(template-element-to-prettyprint)> elem'*
       else
         let*  := <filter(?Placeholder(_, _, _, _));
-                  add-indices;
+                  add-indices; map((dec, id));
                   filter(template-element-to-parenthesize(|confl*))> elem'*
       end;
       let'*   := <separate-by(|";\n")> [let*, result]
@@ -179,10 +179,10 @@
     + \Indent(t) -> String(t)\
     + \Newline(t) -> String(t)\
 
-  template-element-to-assignment:
+  template-element-to-prettyprint:
     Placeholder(_, Sort(x){name}, None(), _) -> $[[name]' := <prettyprint-[x]> [name]]
 
-  template-element-to-assignment:
+  template-element-to-prettyprint:
     Placeholder(_, Sort(x){name}, <Star() + Plus()>, Options(opt*)) -> t
     with
       if sep := <collect-one(?Separator(<id>))> opt* then
@@ -191,19 +191,25 @@
         t := $[[name]' := <pp-list(prettyprint-[x]|" ")> [name]]
       end
 
-  template-element-to-assignment:
+  template-element-to-prettyprint:
     Placeholder(_, Sort(x){name}, Option(), _) -> $[[name]' := <pp-option(prettyprint-[x])> [name]]
 
   template-element-to-parenthesize(|conflicts):
-    (i1, Placeholder(_, Sort(x){name}, None(), _)) -> $[[name]' := <parenthesize-[x]([na])> [name]]
+    (i0, Placeholder(_, Sort(x){name}, None(), _)) -> $[[name]' := <parenthesize-[x]([na])> [name]]
+    where
+      not(<filter(?(i0, <id>))> conflicts => conflicts' => [])
     with
-      i0 := <dec> i1;
-      let subterm-conflict-to-match = {x, n, a*:
-            ( (i0, Symbol(x, n)) -> <concat-strings> ["?", x, "(", a*, ")"]
-              with a* := <range; map(!"_"); separate-by(|", ")> (0, n) )
-          }
+      let to-match =
+            {a*: \ Symbol(x, n) -> <concat-strings> ["?", x, "(", a*, ")"]
+                   with a* := <range; map(!"_"); separate-by(|", ")> (0, n) \}
       in
-        na := <filter(subterm-conflict-to-match);
-               separate-by(|" + ");
-               try(\ [] -> ["fail"] \)> conflicts
+        na := <filter(to-match); separate-by(|" + ")> conflicts'
       end
+
+  template-element-to-parenthesize(|conflicts):
+    (i0, p@ Placeholder(_, Sort(x){name}, None(), _)) -> <template-element-to-prettyprint> p
+    where
+      <filter(?(i0, _))> conflicts => []
+
+  template-element-to-parenthesize(|conflicts):
+    (i0, p@ Placeholder(_, Sort(x){name}, <not(?None())>, _)) -> <template-element-to-prettyprint> p

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Fri May 20 18:22:29 2011	(r22930)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/generation-utils.str	Sat May 21 12:09:50 2011	(r22931)
@@ -105,6 +105,7 @@
     <+ []
 
   escape-and-double-quote =
+    string-replace(|"\\", "\\\\");
     string-replace(|"\t", "\\t");
     string-replace(|"\r", "\\r");
     string-replace(|"\n", "\\n");

From M.A.Akhter at student.tudelft.nl  Sat May 21 16:45:43 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sat, 21 May 2011 14:45:43 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22932 -
	spoofax-contrib/Lawoco
Message-ID: <20110521144543.A93102B802B@mx2.tudelft.nl>

Author: MdAdilAkhter
Date: Sat May 21 14:45:43 2011
New Revision: 22932
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22932&sc=1

Log:
* adding references to the external projects. Hybrid SPX+STR project or PURE SPX project can be references by just commenting / uncommenting config file.

Modified:
   spoofax-contrib/Lawoco/spx.config

Modified: spoofax-contrib/Lawoco/spx.config
==============================================================================
--- spoofax-contrib/Lawoco/spx.config	Sat May 21 12:09:50 2011	(r22931)
+++ spoofax-contrib/Lawoco/spx.config	Sat May 21 14:45:43 2011	(r22932)
@@ -1,8 +1,11 @@
 Configuration
 	Includes
 		RootDirectory
-				syntax // specify relative path of local source directories
-		AllDirectories
-	
+			syntax 
+		
+		SpxProjects
+			//../DatabaseLang 
+			../DatabaseSPXLang 
+			
 	CodeGeneration 
-		OutputDirectory		.shadowdir
\ No newline at end of file
+		OutputDirectory		.shadowdir 
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Sat May 21 16:46:50 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sat, 21 May 2011 14:46:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22933 -
	spoofax-contrib/Lawoco/trans
Message-ID: <20110521144650.2FD247F804F@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Sat May 21 14:46:49 2011
New Revision: 22933
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22933&sc=1

Log:
* Added Model Transformation from the Entity Langauge to the DatabaseLang

Added:
   spoofax-contrib/Lawoco/trans/to-databaselang.str
Modified:
   spoofax-contrib/Lawoco/trans/lawoco.str

Modified: spoofax-contrib/Lawoco/trans/lawoco.str
==============================================================================
--- spoofax-contrib/Lawoco/trans/lawoco.str	Sat May 21 14:45:43 2011	(r22932)
+++ spoofax-contrib/Lawoco/trans/lawoco.str	Sat May 21 14:46:49 2011	(r22933)
@@ -4,13 +4,15 @@
   libstratego-lib
   libstratego-gpp
   libstratego-aterm
-  .shadowdir/__default/Lawoco
   lib/-
   analyze
   check
   generate-java
   generate-xml
+  to-databaselang
   analyze
+  .shadowdir/languages/DatabaseLang/-
+  .shadowdir/__default/-
 
 rules // Main editor interface (defined by editor/NamingExperiment-Builders and -References.esv)
   
@@ -25,6 +27,18 @@
       warnings := <collect-all(constraint-warning, conc)> ast';
       notes    := <collect-all(constraint-note, conc)> ast'
   
+  // Transforms a selection to DBLang
+  generate-dblang:
+    (selected, position, ast, path, project-path) -> <prettyprint-aterm>(<to-dblang>selected, position, ast, path, project-path) 
+    
+	// Transforms a selection to DBLang
+  generate-dblang-ast:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"db.aterm")> path;
+      result   := <to-dblang> selected
+
+
   // Transforms a selection to Java
   generate-java:
     (selected, position, ast, path, project-path) -> (filename, result)
@@ -37,13 +51,13 @@
     with
       filename := <guarantee-extension(|"xml")> path;
       result   := <to-xml> selected
-  
+   
   // Prints the abstract syntax ATerm of a selection.
   generate-aterm:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       filename := <guarantee-extension(|"aterm")> path;
-      result   := selected // we just return the input term
+      result   := selected // we just return the input term 
   
   // Prints the abstract syntax ATerm of a selection.
   generate-analyzed:

Added: spoofax-contrib/Lawoco/trans/to-databaselang.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/Lawoco/trans/to-databaselang.str	Sat May 21 14:46:49 2011	(r22933)
@@ -0,0 +1,43 @@
+module to-databaselang
+
+imports 
+	.shadowdir/__default/Lawoco-signature
+	.shadowdir/languages/DatabaseLang/-
+
+rules 
+	
+	to-dblang: Module(x, d*) ->DatabaseSchema( x ,  <to-dblang>d*)	
+    
+  to-dblang:
+    Entity(x, p*) -> TableDef ( x , p'*)
+    with 
+    	i  := <unique-key-column-def> ;
+    	p' := <to-dblang> p* ;
+    	p'* := <conc;flatten-list>(i , p')
+   
+  to-dblang: 
+  	Property(Type(t), x) -> 
+  		[ ColumnDef(x , UuidDBType()) , 
+  			ConstraintDef(fk-name , fk-definition)
+  		]
+  	with 
+  		fk-name :=  <foreign-key-name>( x , t);
+  		fk-definition := <foeirgn-key-constraint-def>( x , t)   
+  		
+	to-dblang: 
+		Property(t, x) -> ColumnDef(x , <to-db-type>t) 
+   	where
+    	not(!t => Type(_))
+ 
+	to-dblang:  t* -> <map(to-dblang)> t*
+
+
+rules 
+
+	// Converts type to DBType
+	to-db-type: StringType() -> StringDBType() 
+
+  to-db-type: IntType() -> IntegerDBType()
+
+  to-db-type: DateType() -> DateTimeDBType()
+

From M.A.Akhter at student.tudelft.nl  Sat May 21 16:47:12 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sat, 21 May 2011 14:47:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22934 -
	spoofax-contrib/Lawoco/editor
Message-ID: <20110521144712.C0BD1108C071@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Sat May 21 14:47:12 2011
New Revision: 22934
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22934&sc=1

Log:
* builders for transformation

Modified:
   spoofax-contrib/Lawoco/editor/Lawoco-Builders.esv

Modified: spoofax-contrib/Lawoco/editor/Lawoco-Builders.esv
==============================================================================
--- spoofax-contrib/Lawoco/editor/Lawoco-Builders.esv	Sat May 21 14:46:49 2011	(r22933)
+++ spoofax-contrib/Lawoco/editor/Lawoco-Builders.esv	Sat May 21 14:47:12 2011	(r22934)
@@ -16,15 +16,10 @@
                                                                                                               
   observer : editor-analyze                                                                                   
                                                                                                               
+ 
+  builder  : "Generate Database code (for selection)" = generate-dblang(openeditor) (realtime)
+  builder  : "Generate Database AST(for selection)"   = generate-dblang-ast(openeditor) (realtime)
   builder  : "Generate Java code (for selection)"   = generate-java (openeditor) (realtime)                   
   builder  : "Generate XML (for selection)"         = generate-xml (openeditor) (realtime)                   
   builder  : "Show abstract syntax (for selection)" = generate-aterm (openeditor) (realtime) (meta) (source)  
                                                                                                               
-
-refactorings
-                                                                                 
-  pp-table                  : get-pp-table                                       
-                                                                                 
-  refactoring ID            : "Rename Entity" = rename-entity (source) (cursor)  
-                                                                                 
-  // on save: generate-java                                                      
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Sat May 21 16:48:00 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sat, 21 May 2011 14:48:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22935 -
	spoofax-contrib/Lawoco/lib
Message-ID: <20110521144800.DAB8FCC124@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Sat May 21 14:48:00 2011
New Revision: 22935
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22935&sc=1

Log:
* updated libs

Modified:
   spoofax-contrib/Lawoco/lib/spoofaxlang.jar

Modified: spoofax-contrib/Lawoco/lib/spoofaxlang.jar
==============================================================================
Binary file (source and/or target). No diff available.

From M.A.Akhter at student.tudelft.nl  Sat May 21 16:51:40 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sat, 21 May 2011 14:51:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22936 - in
	spoofax-contrib/DatabaseSPXLang: . .externalToolBuilders
	META-INF editor editor/java editor/java/DatabaseSPXLang
	editor/java/DatabaseSPXLang/strategies src src/...
Message-ID: <20110521145140.ADD80108C071@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Sat May 21 14:51:40 2011
New Revision: 22936
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22936&sc=1

Log:
Database SPX Language ( implemented using SPX Lang only)

Added:
   spoofax-contrib/DatabaseSPXLang/
   spoofax-contrib/DatabaseSPXLang/.classpath
   spoofax-contrib/DatabaseSPXLang/.externalToolBuilders/
   spoofax-contrib/DatabaseSPXLang/.externalToolBuilders/DatabaseSPXLang build.main.xml.launch
   spoofax-contrib/DatabaseSPXLang/.project
   spoofax-contrib/DatabaseSPXLang/META-INF/
   spoofax-contrib/DatabaseSPXLang/META-INF/MANIFEST.MF
   spoofax-contrib/DatabaseSPXLang/build.properties
   spoofax-contrib/DatabaseSPXLang/build.spx.packages.generated.xml
   spoofax-contrib/DatabaseSPXLang/build.spx.packages.xml
   spoofax-contrib/DatabaseSPXLang/editor/
   spoofax-contrib/DatabaseSPXLang/editor/java/
   spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/
   spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/Activator.java
   spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/DatabaseSPXLangParseController.java
   spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/DatabaseSPXLangParseControllerGenerated.java
   spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/DatabaseSPXLangValidator.java
   spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/strategies/
   spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/strategies/InteropRegisterer.java
   spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/strategies/Main.java
   spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/strategies/java_strategy_0_0.java
   spoofax-contrib/DatabaseSPXLang/plugin.xml
   spoofax-contrib/DatabaseSPXLang/spx.config
   spoofax-contrib/DatabaseSPXLang/src/
   spoofax-contrib/DatabaseSPXLang/src/databaselang.spx
   spoofax-contrib/DatabaseSPXLang/src/languagedescription.spx
   spoofax-contrib/DatabaseSPXLang/src/lib/
   spoofax-contrib/DatabaseSPXLang/src/lib/Common.spx
   spoofax-contrib/DatabaseSPXLang/src/lib/editor-common.generated.spx
   spoofax-contrib/DatabaseSPXLang/src/services/
   spoofax-contrib/DatabaseSPXLang/src/services/editorservices.spx
   spoofax-contrib/DatabaseSPXLang/test/
   spoofax-contrib/DatabaseSPXLang/test/example.aterm
   spoofax-contrib/DatabaseSPXLang/test/example.pp.sdb
   spoofax-contrib/DatabaseSPXLang/test/example.sdb

Added: spoofax-contrib/DatabaseSPXLang/.classpath
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/.classpath	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<classpath>
+	<classpathentry kind="src" excluding="trans/**" path="editor/java"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/4"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
\ No newline at end of file

Added: spoofax-contrib/DatabaseSPXLang/.externalToolBuilders/DatabaseSPXLang build.main.xml.launch
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/.externalToolBuilders/DatabaseSPXLang build.main.xml.launch	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
+<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
+<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES"/>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+</listAttribute>
+<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value=""/>
+<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="build-spx-packages,"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${none}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/DatabaseSPXLang/build.spx.packages.xml}"/>
+<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/DatabaseSPXLang}"/>
+<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
+</launchConfiguration>

Added: spoofax-contrib/DatabaseSPXLang/.project
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/.project	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<projectDescription>
+      <name>DatabaseSPXLang</name>
+      <comment></comment>
+      <buildSpec>
+        <buildCommand>
+          <name>org.eclipse.jdt.core.javabuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+            <name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+            <triggers>full,incremental,</triggers>
+            <arguments>
+                <dictionary>
+                    <key>LaunchConfigHandle</key>
+                    <value>&lt;project&gt;/.externalToolBuilders/DatabaseSPXLang build.main.xml.launch</value>
+                </dictionary>
+            </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.ManifestBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.SchemaBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+      </buildSpec>
+      <natures>
+        <nature>org.eclipse.pde.PluginNature</nature>
+        <nature>org.eclipse.jdt.core.javanature</nature>
+      </natures>
+    </projectDescription>
\ No newline at end of file

Added: spoofax-contrib/DatabaseSPXLang/META-INF/MANIFEST.MF
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/META-INF/MANIFEST.MF	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,21 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: DatabaseSPXLang Plug-in
+Bundle-SymbolicName: DatabaseSPXLang; singleton:=true
+Bundle-Version: 1.0.0
+Bundle-Activator: DatabaseSPXLang.Activator
+Import-Package: org.osgi.framework;version="1.3.0"
+Require-Bundle: org.eclipse.core.runtime,
+  org.eclipse.core.resources,
+  org.eclipse.imp.runtime,
+  org.eclipse.ui,
+  lpg.runtime,
+  org.eclipse.jface.text,
+  org.eclipse.ui.editors,
+  org.eclipse.ui.workbench.texteditor,
+  org.strategoxt.imp.runtime,
+  org.spoofax.jsglr,
+  org.strategoxt.strj
+Bundle-RequiredExecutionEnvironment: J2SE-1.5
+Bundle-ActivationPolicy: lazy
+Export-Package: DatabaseSPXLang

Added: spoofax-contrib/DatabaseSPXLang/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/build.properties	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,8 @@
+source.. = editor/java/
+output.. = bin/
+bin.includes = META-INF/,\
+               plugin.xml,\
+               include/,\
+               bin/,\
+               lib/,\
+               .

Added: spoofax-contrib/DatabaseSPXLang/build.spx.packages.generated.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/build.spx.packages.generated.xml	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,444 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="build.spx.generated">
+	<target name="spx.default" depends="spx.default.ctree"/>
+  <target name="spx.default.ctree" depends="check-classpath,init,sdf2table,meta-sdf2table, ppgen,pppack,stratego.aster,stratego.ctree,java.jar,sdf2imp, refresh"/>
+	<target name="spx.default.jar"   depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,java.jar,sdf2imp,refresh"/>
+	          
+  <!-- Initialization -->
+  <available file="${build}/${lang.id.specific.directoy}/strategies/Main.class" property="java.jar.enabled"/>
+  <condition property="java.jar.import" value="-la org.strategoxt.imp.editors.spoofax.strategies" else="">
+      <isset property="java.jar.enabled"/>
+  </condition>
+  <condition property="java.jar.classpath" value=":${include}/${package.main.str.module}-java.jar" else="">
+      <isset property="java.jar.enabled"/>
+  </condition>
+  <available file="${packages.root}/${package.main.str.module}.rtree" property="build.stratego.enabled"/>
+  <dirname property="externaldefdir" file="${externaldef}"/>
+  <condition property="externaldefimport" value="-I ${externaldefdir}" else="">
+      <isset property="externaldef"/>
+  </condition>
+  <condition property="externaljarimport" value=":${externaljar}" else="">
+      <isset property="externaljar"/>
+  </condition>
+  <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+      <isset property="eclipse.running"/>
+  </condition>
+  <condition property="externaljarflags" value="${externaljarflags}" else="">
+      <isset property="externaljarflags"/>
+  </condition>
+  <condition property="metasdfmodule.available" value="1">
+      <available file="${packages.root}/${metasdfmodule}.sdf"/>
+  </condition>
+    
+	<fail unless="build" message="Please use build.spx.main.xml to build this project or configure the required properties manually"/>
+  <mkdir dir="${build}"/>
+  <mkdir dir="${src-gen}"/>
+  <mkdir dir="${dist}"/>
+  <mkdir dir="${include}"/>
+  <mkdir dir="${lib}"/>
+  <mkdir dir="${syntax}"/>
+
+	<target name="init" if="eclipse.running">
+	  <!-- refresh one file/dir in the project to trigger an Ant rebuild with the next build command -->
+	  <java classname="org.strategoxt.imp.metatooling.building.AntForceRefreshScheduler" failonerror="false">
+	      <arg value="${include}"/>
+	  </java>
+	</target>
+	      
+		<target name="check-classpath">
+        <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
+        <antcall target="check-classpath.helper"/>  
+		</target>
+  	
+		<target name="java.jar" if="java.jar.enabled">
+    		<jar basedir="${build}" excludes="{packages.root}/**" update="true" destfile="${include}/${package.name}-java.jar"/>
+ 		</target>
+		
+		<target name="check-classpath.helper" unless="check-classpath.available">
+	        <echo level="error" message="Could not load the Spoofax plugin loading classes."/>
+	        <echo level="error" message="Make sure it is on the class path."/>
+	        <echo level="error" message=""/>               
+	        <echo level="error" message="In Eclipse, make sure the Ant builder is configured properly:"/>
+	        <echo level="error" message="right-click on build.main.xml, go to Run as, Ant build..., JRE tab,"/>
+	        <echo level="error" message="and ensure Run in the same JRE as the workspace is selected"/>
+	        <echo level="error" message="alternatively, build the project using Build Project in the Project menu"/>
+	        <fail/>
+	    </target>
+	        
+		<!--lots of redundant steps. TODO : remove the redundant build steps-->
+		<target name="refresh" if="eclipse.running">
+    		<eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+        <eclipse.convertPath fileSystemPath="${packages.root}" property="packagesroot.dir"/>
+        <eclipse.convertPath fileSystemPath="${lib}" property="libdir"/>
+				<eclipse.convertPath fileSystemPath="${include}" property="includedir"/>
+				<eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+				<eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>	
+			
+				<eclipse.refreshLocal resource="${libdir}" depth="infinite"/>
+				<eclipse.refreshLocal resource="${libdir}/editor-common.generated.str" depth="infinite"/>
+				
+				<eclipse.refreshLocal resource="${package.path}" depth="infinite"/>
+				<eclipse.refreshLocal resource="${packages.root}" depth="infinite"/>
+				
+				<eclipse.refreshLocal resource="${projectdir}/build.spx.autogenerated.xml" depth="infinite"/>
+				<eclipse.refreshLocal resource="${packagesroot.dir}" depth="infinite"/>
+				<eclipse.refreshLocal resource="${includedir}" depth="infinite"/>
+            
+        <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+        <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+    </target>
+        
+		<target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
+        <mkdir dir="utils"/>
+        <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
+        <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
+        <copy file="${eclipse.spoofaximp.jars}/aster.jar" todir="utils" failonerror="false"/>
+        <copy file="${eclipse.spoofaximp.strategojar}" todir="utils" failonerror="false"/>
+  	</target>
+  
+	  <!-- Pack SDF -->
+	  <target name="pack-sdf" unless="externaldef">
+        <dependset>
+            <srcfileset dir="${packages.root}">
+                <include name="**/*.sdf"/>
+            </srcfileset>
+            <srcfileset dir="${lib}">
+                <include name="**/*.def"/>
+            </srcfileset>
+            <targetfileset file="${include}/${package.name}.def"/>
+        </dependset>
+        <available file="${include}/${package.name}.def" property="pack-sdf.available"/>
+        <antcall target="pack-sdf.helper"/>
+    </target>
+
+    <target name="pack-sdf.helper" unless="pack-sdf.available">
+        <condition property="utils-include" value="-I ${utils}" else="">
+            <available file="${utils}"/>
+        </condition>
+        <java classname="run" failonerror="true">
+            <arg value="org.strategoxt.tools.main-pack-sdf"/>
+            <arg value="-i"/>
+            <arg value="${packages.root}/${package.main.sdf.module}.sdf"/>
+            <arg value="-o"/>
+            <arg value="${include}/${package.name}.def"/>
+            <arg value="-I"/>
+            <arg value="${packages.root}"/>
+            <arg value="-I"/>
+            <arg value="${package.path}"/>
+            <arg value="-I"/>
+            <arg value="${lib}"/>
+            <arg line="${utils-include}"/>
+            <arg line="${build.sdf.imports}"/>
+        </java>
+    </target>
+	
+	<target name="copy-sdf" if="externaldef">
+		  <copy file="${externaldef}" tofile="${include}/${package.name}.def" preservelastmodified="true"/>
+	  </target>
+
+	<!-- SDF-To-Table -->
+	<target name="meta-sdf2table" if="metasdfmodule.available">
+		<fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+		<antcall target="sdf2table">
+			<param name="sdfmodule" value="${metasdfmodule}"/>
+			<param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+		</antcall>
+		<antcall target="meta-sdf2table.helper"/>
+    </target>
+	
+	<target name="meta-sdf2table.helper" if="eclipse.running">
+	   <eclipse.convertPath fileSystemPath="${include}" property="includeresource"/>
+	   <eclipse.refreshLocal resource="${includeresource}/${metasdfmodule}.tbl" depth="infinite"/>
+    </target>
+	
+	<target name="sdf2table" depends="make-permissive">
+		<apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
+			<arg value="-i"/>
+			<srcfile/>
+			<arg value="-o"/>
+			<targetfile/>
+			<arg value="-m"/>
+			<arg value="${package.name}"/>
+			
+			<fileset file="${include}/${package.name}-Permissive.def"/>
+			<mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+		</apply>
+   </target>
+	
+	<target name="make-permissive" depends="pack-sdf,copy-sdf">
+		<dependset>
+			<srcfileset file="${include}/${package.name}.def"/>
+			<targetfileset file="${include}/${package.name}-Permissive.def"/>
+    </dependset>
+		<available file="${include}/${package.name}-Permissive.def" property="permissive-grammar.available"/>
+    <antcall target="make-permissive.helper"/>
+  </target>
+	
+	<target name="make-permissive.helper" unless="permissive-grammar.available">
+		<java classname="org.strategoxt.permissivegrammars.make_permissive" failonerror="true">
+			<arg value="-i"/>
+			<arg value="${include}/${package.name}.def"/>
+			<arg value="-o"/>
+			<arg value="${include}/${package.name}-Permissive.def"/>
+			<arg line="--optimize on"/>
+        </java>
+    </target>
+	
+	
+	<!-- PP Generation -->
+	<target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
+	  <dependset>
+	      <srcfileset    file="${include}/${package.name}.def"/>
+	      <targetfileset file="${syntax}/${package.name}.generated.pp"/>
+	      <targetfileset file="${include}/${package.name}.generated.pp.af"/>
+	  </dependset>
+	  <available file="${include}/${package.name}.generated.pp.af" property="ppgen.available"/>
+	  <antcall target="ppgen.helper"/>
+	  <available file="${include}/${package.name}.generated.pp.af" property="ppgen.available"/>
+	  <antcall target="ppgen.helper.fallback"/>
+	</target>
+	    
+  <target name="ppgen.helper" unless="ppgen.available">
+      <!-- Any failures here are ignored; they are only a problem when imported from Stratego -->
+      <java classname="run" failonerror="false">
+          <arg value="org.strategoxt.tools.main-ppgen"/>
+          <arg value="-i"/>
+          <arg value="${include}/${package.name}.def"/>
+          <arg value="-o"/>
+          <arg value="${include}/${package.name}.generated.pp.af"/>
+          <arg value="-t"/>
+      </java>
+  	
+      <java classname="run" failonerror="false">
+          <arg value="org.strategoxt.tools.main-pp-pp-table"/>
+          <arg value="-i"/>
+          <arg value="${include}/${package.name}.generated.pp.af"/>
+          <arg value="-o"/>
+          <arg value="${package.path}/${package.name}.generated.pp"/>
+      </java>
+  </target>
+	    
+  <target name="ppgen.helper.fallback" unless="ppgen.available">
+  	<echo file="${include}/${package.name}.generated.pp.af" message="PP-Table([ ])"/>
+  </target>
+  
+	
+	<!-- PP Packing -->
+  <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
+      <dependset>
+          <srcfileset file="${package.path}/${package.name}.pp"/>
+          <targetfileset file="${include}/${package.name}.pp.af"/>
+      </dependset>
+      <available file="${package.path}/${package.name}.pp" property="pppack.source-available"/>
+      <available file="${include}/${package.name}.pp.af" property="pppack.available"/>
+      <antcall target="pppack.helper"/>
+      <available file="${include}/${package.name}.pp.af" property="pppack.available"/>
+      <antcall target="pppack.helper.fallback"/>
+  </target>
+	
+	 <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
+	 	<java classname="run" failonerror="true">
+	  	<arg value="org.strategoxt.tools.main-parse-pp-table"/>
+	    <arg value="-i"/>
+	    <arg value="${package.path}/${package.name}.pp"/>
+	    <arg value="-o"/>
+	    <arg value="${include}/${package.name}.pp.af"/>
+	  </java>
+	</target>
+
+	<target name="pppack.helper.fallback" unless="pppack.available">
+      <echo file="${include}/${package.name}.pp.af" message="PP-Table([ ])"/>
+  </target>
+	
+	<target name="copy-jar" if="externaljar">
+  	<copy file="${externaljar}" todir="${include}" preservelastmodified="true"/>
+  </target>
+	
+	<!-- Generates Signature file  *.STR from RTG file -->
+	<target name="rtg2sig" if="build.stratego.enabled" depends="sdf2rtg">
+		<dependset>
+	  	<srcfileset file="${include}/${package.name}.rtg"/>
+	   	<targetfileset file="${include}/${package.name}.str"/>
+	  </dependset>
+	  <available file="${include}/${package.name}.str" property="rtg2sig.available"/>
+	  <antcall target="rtg2sig.helper"/>
+	</target>
+	    
+	<target name="rtg2sig.helper" unless="rtg2sig.available">
+		<java classname="run" failonerror="true">
+	  	<arg value="org.strategoxt.tools.main-rtg2sig"/>
+    	<arg value="-i"/>
+	    <arg value="${include}/${package.name}.rtg"/>
+	    <arg value="-o"/>
+	    <arg value="${include}/${package.name}.str"/>
+	    <arg value="--module"/>
+	    <arg value="${sdfmodule}"/>
+	 	</java>
+	</target>
+	 
+	
+	<!-- Generates *.RTG file from SDF *def files  -->
+	<target name="sdf2rtg" depends="pack-sdf,copy-sdf">
+		<dependset>
+	  	<srcfileset file="${include}/${package.name}.def"/>
+	    <targetfileset file="${include}/${package.name}.rtg"/>
+	  </dependset>
+	  <available file="${include}/${package.name}.rtg" property="sdf2rtg.available"/>
+	  <antcall target="sdf2rtg.helper"/>
+	</target>
+	    
+	<target name="sdf2rtg.helper" unless="sdf2rtg.available">
+		<java classname="run" failonerror="true">
+	  	<arg value="org.strategoxt.tools.main-sdf2rtg"/>
+	    <arg value="-i"/>
+	    <arg value="${include}/${package.name}.def"/>
+	    <arg value="-m"/>
+	    <arg value="${sdfmodule}"/>
+			<arg value="-o"/>
+	    <arg value="${include}/${package.name}.rtg"/>
+	    <arg value="--ignore-missing-cons"/>
+	    <arg value="-Xnativepath"/>
+	    <arg value="${build.strategoxt.sdf}"/>
+	 </java>
+	</target>
+	
+	
+  <!-- Aster to Stratego -->
+   <target name="stratego.aster">
+       <available file="${packages.root}/${package.main.str.module}.rtree" property="aster-output.available"/>
+       <pathconvert property="aster-input" setonempty="false" pathsep=" ">
+           <path><fileset dir="${basedir}" includes="*.astr"/></path>
+       </pathconvert>
+       <dependset>
+           <srcfileset dir="${basedir}">
+               <include name="**/*.astr"/>
+           </srcfileset>
+           <targetfileset file="${packages.root}/${package.main.str.module}.rtree"/>
+       </dependset>
+       <condition property="aster-output.uptodate">
+           <and>
+               <isset property="aster-output.available"/>
+               <available file="${packages.root}/${package.main.str.module}.rtree"/>
+           </and>
+       </condition>
+       <available file="${packages.root}/${package.main.str.module}.rtree" property="aster-output.uptodate"/>
+       <antcall target="stratego.aster.helper"/>
+   </target>
+
+   <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+       <java classname="org.strategoxt.aster.Main" failonerror="true">
+           <arg value="-i"/>
+           <fileset dir="${packages.root}">
+               <include name="**/*.astr"/>
+           </fileset>
+       </java>
+   </target>
+	
+   <!-- Stratego to Java compiler -->
+   <target name="stratego.jar" depends="rtg2sig,utils-files">
+   	<dependset>
+    	<srcfileset dir="${package.path}">
+      	<include name="**/*.str"/>
+        <include name="**/*.astr"/>
+        <exclude name="lib/editor-common.generated.str"/>
+			</srcfileset>
+    	<targetfileset file="${src-gen}/trans/Main.java"/>
+         </dependset>
+         <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+         <antcall target="copy-jar"/>
+         <antcall target="stratego.jar.deletehelper"/>
+         <antcall target="stratego.jvm.helper">
+         		<param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+            <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+         </antcall>
+         <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+         <!-- copy imported terms -->
+         <copy todir="${build}/trans">
+             <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+         </copy>
+         <jar basedir="${build}" includes="trans/**" destfile="${include}/${package.name}.tmp.jar"/>
+         <move file="${include}/${package.name}.tmp.jar" tofile="${include}/${package.name}.jar"/>
+         <delete><fileset dir="${build}" includes="trans/**"/></delete>
+     </target>
+	
+	
+		<!-- Stratego to Java interpreter -->
+    <target name="stratego.ctree" >
+    	<dependset>
+      		<srcfileset dir="${packages.root}">
+          	<include name="**/*.rtree"/>
+      			<include name="**/*.str"/>
+          </srcfileset>
+    			<srcfileset dir="${lib}">
+    	    	<include name="**/*.str"/>
+    				<exclude name="lib/editor-common.generated.str"/>
+    	    </srcfileset>
+    	    <targetfileset file="${include}/${package.name}.ctree"/>
+      </dependset>
+      <available file="${include}/${package.name}.ctree" property="strc-java.available"/>
+      <antcall target="copy-jar"/>
+      <antcall target="stratego.jvm.helper">
+      	<param name="build.stratego.outputfile" value="${include}/${package.name}.ctree"/>
+      	<param name="build.stratego.extraargs" value="-F"/>
+      </antcall>
+    </target>
+        
+    <target name="stratego.jar.deletehelper" unless="strc-java.available">
+	    <delete>
+	      <fileset dir="${src-gen}" includes="trans/**"/>
+        <fileset dir="${build}" includes="trans/**"/>
+      </delete>
+	  </target>
+            
+  <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
+  	<delete file="${include}/${package.name}.rtree" failonerror="false"/>
+  	<java classname="org.strategoxt.strj.Main" failonerror="true">
+  		<arg value="-I"/>
+    	<arg value="${package.path}"/>
+  		<arg value="-i"/>
+      <arg value="${packages.root}/${package.main.str.module}.str"/>
+      <arg value="-o"/>
+      <arg value="${build.stratego.outputfile}"/>
+  		<arg value="-p"/> 
+  	  <arg value="${package.qname}"/>  <!-- Note : added this extra parameter since, java package name does not allow dash unlike the ID is defined-->
+      <arg value="--library"/>
+      <arg value="--clean"/>
+  		<arg line="${build.stratego.args}"/>
+      <arg line="${build.stratego.extraargs}"/>
+      <arg line="${externaljarflags}"/>
+      <arg line="${externaldefimport}"/>
+      <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+  </java>
+  <delete file="${include}/${package.name}.rtree" failonerror="false"/>
+  <mkdir dir="${build}/trans"/>
+</target>
+                
+		<target name="clean" description="clean up">
+      <delete dir="${build}"/>
+      <delete file="${include}/${package.main.sdf.module}.def"/>
+      <delete dir="${src-gen}/trans"/>
+		</target>
+	
+	  <!-- <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/> -->
+	  
+	  <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse"/>
+	        
+		<target name="sdf2imp.eclipse" if="eclipse.running" >
+			<copy file="${packages.root}/${package.main.esv.module}.esv" tofile="${include}/${package.name}.packed.esv" preservelastmodified="true"/>
+			<copy file="${packages.root}/${package.main.esv.module}.esv" tofile="${include}/${package.name}.main.esv" preservelastmodified="true"/>
+			<antcall target = "refresh"/>  
+			<java classname="org.strategoxt.imp.metatooling.building.AntSpxDescriptorBuilder" failonerror="true">
+				<arg value="${include}/${package.name}.packed.esv"/> <!-- esv main file-->
+			</java>
+		</target>
+	
+  <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2table,sdf2rtg">
+		<java classname="org.strategoxt.imp.generator.sdf2imp" failonerror="true">
+			<arg value="-i"/>
+      <arg value="${packages.root}/${package.main.esv.module}.packed.esv"/>
+      <arg value="-p"/>
+      <arg value="${include}/${package.name}.tbl"/>
+    </java>
+  </target>
+</project>

Added: spoofax-contrib/DatabaseSPXLang/build.spx.packages.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/build.spx.packages.xml	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+		
+		<project name="build.spx.packages" default="build-spx-packages">
+  <!-- autogenerated artifacts relative directory path -->	
+		<property name="packages.root" location=".shadowdir"/>
+		
+		<!-- prject directories -->
+  <property name="trans" location="trans"/>
+  <property name="src-gen" location="editor/java"/>
+  <property name="syntax" location="syntax"/>
+  <property name="include" location="include"/>
+  <property name="lib" location="lib"/>
+  <property name="build" location="bin"/> 
+  <property name="dist" location="bin/dist"/>
+  
+		<!-- Environment configuration for command-line builds -->
+  <property name="build.sdf.imports" value= "-I &quot;${basedir}&quot; -I &quot;${packages.root}&quot;"/>
+  <property name="build.stratego.args" value="
+                  --library
+                  -I &quot;${packages.root}&quot;
+                  -I &quot;${basedir}&quot;
+                  -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm  -la strc -la stratego-sdf"/>
+
+		<condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
+      <isset property="eclipse.spoofaximp.nativeprefix"/>
+  </condition>
+  <property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin"/>
+	  
+	  <import file="build.spx.packages.generated.xml"/>
+	  
+	  
+	  <target name="build.package.languages.DatabaseLang">
+	  	<property name="package.path" location=".shadowdir/languages/DatabaseLang"/>
+	  	<property name="lang.id.specific.directoy" value="DatabaseSPXLang"/>
+	  	<property name="package.name" value="DatabaseSPXLang"/>
+	  	<property name="package.qname" value="languages.DatabaseLang"/>
+	  	<property name="package.main.sdf.module" value="DatabaseSPXLang"/>
+	  	<property name="package.main.str.module" value="DatabaseSPXLang"/>
+	  	<property name="package.main.esv.module" value="DatabaseSPXLang.main"/>
+	  	<property name="metasdfmodule" value="Stratego-DatabaseSPXLang"/>
+	  	 
+	  	
+	  	<antcall target = "spx.default">
+	  	  <param name = "package.name"  value = "${package.name}"/>
+	  	  <param name = "package.qname"  value = "${package.qname}"/>
+	  	  <param name = "package.path"  value = "${package.path}"/>
+	  	  <param name = "lang.id.specific.directoy"  value = "${lang.id.specific.directoy}"/>
+	  	 	<param name = "package.main.sdf.module" value = "${package.main.sdf.module}"/>
+	  		<param name = "package.main.str.module" value = "${package.main.str.module}"/>
+	  	 	<param name = "package.main.esv.module" value = "${package.main.esv.module}"/>
+	  		<param name = "metasdfmodule" value = "${metasdfmodule}"/>
+	  	</antcall>
+	  </target>	
+	  
+		
+		<!-- Main target -->
+	<target name="build-spx-packages" depends="build.package.languages.DatabaseLang"/>
+</project>
\ No newline at end of file

Added: spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/Activator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/Activator.java	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,44 @@
+package DatabaseSPXLang;
+
+import org.eclipse.imp.preferences.PreferencesService;
+import org.eclipse.imp.runtime.PluginBase;
+import org.osgi.framework.BundleContext;
+
+public class Activator extends PluginBase 
+{ 
+  public static final String kPluginID = "DatabaseSPXLang";
+
+  public static final String kLanguageName = "DatabaseSPXLang";
+
+  protected static Activator sPlugin;
+
+  public static Activator getInstance()
+  { 
+    if(sPlugin == null)
+      return new Activator();
+    return sPlugin;
+  }
+
+  public Activator () 
+  { 
+    super();
+    sPlugin = this;
+  }
+
+  @Override public void start(BundleContext context) throws Exception
+  { 
+    super.start(context);
+  }
+
+  @Override public String getID()
+  { 
+    return kPluginID;
+  }
+
+  @Override public String getLanguageID()
+  { 
+    return kLanguageName;
+  }
+
+  protected static PreferencesService preferencesService = null;
+}
\ No newline at end of file

Added: spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/DatabaseSPXLangParseController.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/DatabaseSPXLangParseController.java	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,4 @@
+package DatabaseSPXLang;
+
+public class DatabaseSPXLangParseController extends DatabaseSPXLangParseControllerGenerated 
+{ }
\ No newline at end of file

Added: spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/DatabaseSPXLangParseControllerGenerated.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/DatabaseSPXLangParseControllerGenerated.java	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,108 @@
+package DatabaseSPXLang;
+
+import java.io.InputStream;
+import java.io.IOException;
+import java.io.File;
+import java.io.FileInputStream;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class DatabaseSPXLangParseControllerGenerated extends DynamicParseController 
+{ 
+  public static final String LANGUAGE = new String("DatabaseSPXLang");
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static volatile Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static synchronized Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  protected static synchronized void setDescriptor(Descriptor descriptor)
+  { 
+    DatabaseSPXLangParseControllerGenerated.descriptor = descriptor;
+  }
+
+  protected static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = DatabaseSPXLangParseControllerGenerated.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = DatabaseSPXLangParseControllerGenerated.class.getResourceAsStream(TABLE);
+      boolean filesystem = false;
+      if(descriptorStream == null && new File("./" + DESCRIPTOR).exists())
+      { 
+        descriptorStream = new FileInputStream("./" + DESCRIPTOR);
+        filesystem = true;
+      }
+      if(table == null && new File("./" + TABLE).exists())
+      { 
+        table = new FileInputStream("./" + TABLE);
+        filesystem = true;
+      }
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
+      descriptor = DescriptorFactory.load(descriptorStream, table, filesystem ? Path.fromPortableString("./") : null);
+      descriptor.setAttachmentProvider(DatabaseSPXLangParseControllerGenerated.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  private static String getPluginLocation()
+  { 
+    return DatabaseSPXLangParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(this, getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Added: spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/DatabaseSPXLangValidator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/DatabaseSPXLangValidator.java	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,12 @@
+package DatabaseSPXLang;
+
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
+
+public class DatabaseSPXLangValidator extends MetaFileLanguageValidator 
+{ 
+  @Override public Descriptor getDescriptor()
+  { 
+    return DatabaseSPXLangParseController.getDescriptor();
+  }
+}
\ No newline at end of file

Added: spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/strategies/InteropRegisterer.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/strategies/InteropRegisterer.java	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,14 @@
+package DatabaseSPXLang.strategies;
+
+import org.strategoxt.lang.JavaInteropRegisterer;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * Helper class for {@link java_strategy_0_0}.
+ */
+public class InteropRegisterer extends JavaInteropRegisterer {
+
+  public InteropRegisterer() {
+    super(new Strategy[] { java_strategy_0_0.instance });
+  }
+}

Added: spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/strategies/Main.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/strategies/Main.java	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,11 @@
+package DatabaseSPXLang.strategies;
+
+import org.strategoxt.lang.Context;
+
+public class Main {
+  
+  public static void init(Context context) {
+    // Called when the editor is being initialized
+  }
+
+}

Added: spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/strategies/java_strategy_0_0.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/editor/java/DatabaseSPXLang/strategies/java_strategy_0_0.java	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,32 @@
+package DatabaseSPXLang.strategies;
+
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * Example Java strategy implementation.
+ *
+ * This strategy can be used by editor services and can be called
+ * in Stratego modules by declaring it as an external strategy
+ * as follows:
+ *
+ * <code>
+ *  external java-strategy(|)
+ * </code>
+ *
+ * @see InteropRegisterer  This class registers java_strategy_0_0 for use.
+ */
+public class java_strategy_0_0 extends Strategy {
+  
+  public static java_strategy_0_0 instance = new java_strategy_0_0();
+
+  @Override
+  public IStrategoTerm invoke(Context context, IStrategoTerm current) {
+    context.getIOAgent().printError("Input for java-strategy: " + current);
+    ITermFactory factory = context.getFactory();
+    return factory.makeString("Regards from java-strategy");
+  }
+
+}

Added: spoofax-contrib/DatabaseSPXLang/plugin.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/plugin.xml	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<?eclipse version="3.0"?>
+
+<plugin>
+       <extension point="org.eclipse.imp.runtime.languageDescription">
+          <language extensions="sdb" description="DatabaseSPXLang" language="DatabaseSPXLang" derivedFrom="DynamicRoot" validator="DatabaseSPXLang.DatabaseSPXLangValidator" validatorClass="DatabaseSPXLang.DatabaseSPXLangValidator"></language>
+       </extension>
+       <extension id="DatabaseSPXLang.parser" name="DatabaseSPXLang Parser" point="org.eclipse.imp.runtime.parser">
+          <parser class="DatabaseSPXLang.DatabaseSPXLangParseController" language="DatabaseSPXLang">
+          </parser>
+       </extension>    
+    </plugin>
\ No newline at end of file

Added: spoofax-contrib/DatabaseSPXLang/spx.config
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/spx.config	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,7 @@
+Configuration
+	Includes
+		AllDirectories src
+		
+				
+	CodeGeneration 
+		OutputDirectory		.shadowdir
\ No newline at end of file

Added: spoofax-contrib/DatabaseSPXLang/src/databaselang.spx
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/src/databaselang.spx	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,107 @@
+package languages.DatabaseLang      
+module syntaxdefinition
+
+  context-free start-symbols
+    Start
+
+  context-free syntax
+    "SCHEMA"  ID TableDef*																			-> Start {"DatabaseSchema"}
+    "CREATE" "TABLE"  ID "(" {TableProperty ","}* ")" ";"				-> TableDef {"TableDef"}
+    ID  DBType							         														-> TableProperty{"ColumnDef"}
+    "CONSTRAINT"  ID  RefConstraint															-> TableProperty{"ConstraintDef"}
+    "PRIMARY" "KEY" "(" ID ")"	 																-> RefConstraint{"PKConstraint"}
+    "FOREIGN" "KEY"  "(" ID ")" "REFERENCES"	ID "(" ID ")"			-> RefConstraint{"FKConstraint"} 
+     
+   
+	 	
+  context-free syntax 
+		"int"							 -> DBType{"IntegerDBType",prefer}
+		"varchar" 				 -> DBType{"StringDBType",  prefer}
+		"datetime" 				 -> DBType{"DateTimeDBType",prefer}
+		"uniqueidentifier" -> DBType{"UuidDBType",    prefer}		 
+
+
+module languagebuilders 
+		imports editor.generated
+  
+		
+	 	rules
+	 		// Prints the abstract syntax ATerm of a selection.
+  		generate-aterm:
+    		(selected, position, ast, path, project-path) -> (filename, result)
+    		with
+      		filename := <guarantee-extension(|"aterm")> path;
+      		result   := selected // we just return the input term
+      		
+			// Prints the abstract syntax ATerm of a selection.
+  		prettyprint-aterm:
+    		(selected, position, ast, path, project-path) -> (filename, result)
+    		with
+      		filename := <guarantee-extension(|"pp.sdb")> path;
+      		result   := <pp-dblang>selected // we just return the input term
+
+module  prettyprinter
+	
+	rules	
+		pp-dblang: 
+			DatabaseSchema(x, td*) ->
+			$[SCHEMA [x]  
+  			[<pp-dblang> td*]
+			 ]	
+			
+		pp-dblang: 
+				TableDef(x, c*) -> 
+  			$[CREATE TABLE [x](  
+  					[<pp-dblang;separate-by(|","); concat-strings> c*]
+  			);
+  			]
+  		
+		pp-dblang : 
+				ColumnDef(x, t) -> 
+				$[[x] [<pp-db-type>t]
+    		]
+		pp-dblang:
+				ConstraintDef(x , refconstraint) -> 
+    		$[CONSTRAINT [x] [<pp-dblang>refconstraint]
+    		]
+			
+		pp-dblang:
+			FKConstraint(x, tName, cName) ->  
+			$[FOREIGN KEY ([x]) REFERENCES [tName]([cName])]
+			
+		pp-dblang: 
+			PKConstraint(cName) ->   
+			$[PRIMARY KEY ([cName])]
+		
+		pp-dblang : 
+			t* -> <map(pp-dblang)>t*
+			
+
+	rules 
+		pp-db-type: StringDBType() -> "varchar"
+
+		pp-db-type: IntegerDBType() -> "int"
+
+		pp-db-type: DateTimeDBType() -> "datetime"
+  	
+		pp-db-type: UuidDBType()-> "uniqueidentifier"
+
+			
+
+module adapter  
+
+	rules
+		unique-column-name = !"_ID"
+		
+		primary-key-name = is-string ; ! $[PK_[<id>]]
+		
+		foreign-key-name  = ?(cname , tablename) ; ! $[FK_[cname]_[tablename]_[<unique-column-name>]]
+		
+		foeirgn-key-constraint-def : 
+			(cname , tablename) ->  FKConstraint( cname , tablename , <unique-column-name>)
+			
+		unique-key-column-def = 
+			![ColumnDef(<unique-column-name>  , UuidDBType()), 
+				ConstraintDef(<unique-column-name;primary-key-name>, PKConstraint(<unique-column-name> ))
+			 ]
+			 	
\ No newline at end of file

Added: spoofax-contrib/DatabaseSPXLang/src/languagedescription.spx
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/src/languagedescription.spx	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,25 @@
+package languages.DatabaseLang 
+
+module languagedescription
+	
+	language General properties
+                  
+		name          : DatabaseSPXLang 
+  	id            : DatabaseSPXLang
+  	extends       : Root
+                  
+  	description   : "Spoofax/IMP-generated editor for the DatabaseSPXLang language"
+  	url           : http://strategoxt.org
+                  
+  	extensions    : sdb
+	  start symbols : Start    
+   
+
+		builders
+	  	provider : include/DatabaseSPXLang-java.jar   
+	  	
+	    builder  : "Show abstract syntax (for selection)" = generate-aterm (openeditor) (realtime) (meta) (source)
+	    
+	 		builder  : "Show concrete syntax (for selection)" = prettyprint-aterm (openeditor) (realtime) (meta) (source)
+	 		
+	 	
\ No newline at end of file

Added: spoofax-contrib/DatabaseSPXLang/src/lib/Common.spx
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/src/lib/Common.spx	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,62 @@
+package languages.DatabaseLang
+
+module Common
+
+ 
+  lexical syntax
+  
+    [a-zA-Z\_][a-zA-Z0-9\_]* -> ID
+    "-"? [0-9]+          -> INT
+    
+    "\"" StringChar* "\"" -> STRING
+    ~[\"\n]               -> StringChar
+    "\\\""                -> StringChar
+    BackSlashChar         -> StringChar
+    "\\"                  -> BackSlashChar
+    
+    [\ \t\n\r] -> LAYOUT
+    
+    [\*]                             -> CommentChar
+    "/*" (~[\*] | CommentChar)* "*/" -> LAYOUT
+    "//" ~[\n\r]* ([\n\r] | EOF)     -> LAYOUT
+    
+    -> EOF
+  
+  lexical syntax 
+ 		
+ 		"KEY"					  			-> RESERVED
+ 		"FOREIGN"			  			-> RESERVED
+ 		"PRIMARY"	  					-> RESERVED
+ 		"REFERENCES"	  			-> RESERVED
+ 		"CONSTRAINT"	  			-> RESERVED
+  	"TABLE"  							-> RESERVED
+  	"SCHEMA" 							-> RESERVED
+  	"int" 	 							-> RESERVED
+  	"uniqueidentifier" 	 	-> RESERVED
+  	"datetime" 	 					-> RESERVED
+  	
+  	 RESERVED 						-> ID{reject}
+  	 	
+  lexical restrictions
+  
+    %% Ensure greedy matching for lexicals
+  
+    CommentChar   -/- [\/]
+    INT           -/- [0-9]
+    ID            -/- [a-zA-Z0-9\_]
+   
+    %% EOF may not be followed by any char
+    
+    EOF           -/- ~[]
+
+    %% Backslash chars in strings may not be followed by " 
+    
+    BackSlashChar -/- [\"]
+
+  context-free restrictions
+  
+    %% Ensure greedy matching for comments
+
+    LAYOUT? -/- [\ \t\n\r]
+    LAYOUT? -/- [\/].[\/]
+    LAYOUT? -/- [\/].[\*]

Added: spoofax-contrib/DatabaseSPXLang/src/lib/editor-common.generated.spx
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/src/lib/editor-common.generated.spx	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,259 @@
+package editor.generated  
+
+module common 
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-gpp 
+  
+
+
+strategies
+
+  parse-file = parse-test-file
+  parse-test-file =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(include/Test.tbl)>
+    )
+
+  parse-string = parse-test-string 
+  parse-test-string = 
+    parse-string( 
+      strsglr-report-parse-error
+    | <import-term(include/Test.tbl)>
+    )
+  
+  parse-stream = parse-test-stream
+  parse-test-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(include/Test.tbl)>
+    )
+
+  pp-test-string =
+    ast2abox(|[<import-term(include/Test.generated.pp.af)>,
+               <import-term(include/Test.pp.af)>]); 
+    box2text-string(|100)
+
+strategies
+  
+  /**
+   * Processes an import during semantic analysis.
+   * Ensures proper caching of files and prevents
+   * processing duplicate imports more than once.
+   *
+   * @param resolve-path  Resolves the filesystem path of this import
+   * @param parse-file    Parses a file (optionally removing definition bodies
+   *                      so only signatures are stored in the cache)
+   * @param record-declarations
+   *                      Performs semantic analysis on a tree
+   */
+  open-import(resolve-path, parse-file, record-declarations):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path       := <resolve-path> import;
+        cache-path := <import-cache-path> path;
+        if not(<IsImported> path) then
+          rules(
+            IsImported: path
+          );
+          ( <is-newer> (cache-path, path);
+            file := <ReadFromFile> cache-path
+          <+
+            file := <parse-file> path;
+            if <file-exists> path then
+              // Only cache if on filesystem (e.g., ignore libstratego-lib)
+              <WriteToBinaryFile> (cache-path, file)
+            end        
+          ); 
+          {| CurrentFile:
+            rules(CurrentFile := path)
+          	;<record-declarations> file    
+          |}
+        end
+      end  
+
+  open-wildcard-import(resolve-path, parse-file, record-declarations, is-source-file):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path := <resolve-path> import;
+        readdir;
+        list-loop(
+          if is-source-file then
+            <open-import(id, parse-file, record-declarations)>
+              $[[path]/[<id>]]
+          <+
+            try(?one-failed)
+          end
+        );
+        not(!one-failed)
+      end
+  
+  import-cache-path:
+    full-path -> cache-path
+    with
+      project-path := <project-path>;
+      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
+      full-path'   := <string-replace(|"/", "+"); string-replace(|"\\", "+"); string-replace(|":", "+")> full-path;
+      cache-path   := $[[cache-dir]/[full-path'].sig]
+
+  project-path = prim("SSL_EXT_projectpath")
+  
+  plugin-path = prim("SSL_EXT_pluginpath")
+  
+  candidate-sorts = prim("SSL_EXT_candidatesorts")
+
+  is-newer:
+    (file1, file2) -> <id>
+    where
+      <gt> (<file-exists; modification-time> file1, <file-exists; modification-time> file2) 
+
+strategies
+  
+  editor-init =
+    // Ensure all dynamic rules are properly scoped
+    try(dr-scope-all-end);
+    dr-scope-all-start
+  
+  refresh-workspace-file:
+    path -> <prim("SSL_EXT_refreshresource", path)>
+  
+  string-starts-with-capital =
+    explode-string; Hd; is-upper 
+
+strategies
+  
+  origin-term      = prim("SSL_EXT_origin_term", <id>)
+  origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-location  = prim("SSL_EXT_origin_location", <id>)
+  origin-line      = origin-location => (<id>, _, _, _)
+  origin-column    = origin-location => (_, <id>, _, _)
+  origin-strip     = prim("SSL_EXT_origin_strip", <id>)
+  origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+  
+  origin-surrounding-comments =
+    prim("SSL_EXT_origin_surrounding_comments", "Test", <id>)
+    
+  origin-documentation-comment =
+    origin-surrounding-comments;
+    filter(string-as-chars(documentation-comment-chars));
+    concat-strings
+  
+  documentation-comment-chars:
+    ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
+  
+  origin-track-forced(s) =
+    ![<id>]; all(s); ?[<id>]
+
+strategies
+
+  desugar-position(desugar|ast): 
+    position -> position'
+    where
+      ast'  := <at-position(!<id>{MARKER()}|position)> ast;
+      ast'' := <topdown(repeat(preserve-annos({?x; desugar; not(?x)})))> ast';
+      position' := <position-of-term({?_{a*}; <one(?MARKER())> a*})> ast''
+   
+  at-position(s|position):
+    c#(t*) -> t'
+    where
+      !position => [i | position']
+    where
+      t' := c#(<at-index(at-position(s|position'))> (i, t*))
+
+  at-position(s|position):
+    t -> t'
+    where
+      !position => [];
+      t' := <s> t
+
+  position-of-term(is-term):
+    t -> []
+    where
+      is-term
+  
+  position-of-term(is-term):
+    _#(t*) -> <position-of-term(is-term|0)> t*
+  
+  position-of-term(is-term|start-index):
+    [t | t*] -> position  
+    where
+      if i* := <position-of-term(is-term)> t then
+        position := [start-index | i*]
+      else
+        position := <position-of-term(is-term | <inc> start-index)> t*
+      end
+
+  term-at-position(|position):
+    t -> t'
+    where 
+      at-position(?t'|position) 
+
+  parent-at-position(|position):
+    t -> t'
+    where
+      !position => [i, _];
+      t' := <subterm-at(|i)> t
+  
+  parent-at-position(|position):
+    t -> <parent-at-position(|position')> t'
+    where
+      !position => [i | position' @ [_, _ | _]];
+      t' := <subterm-at(|i)> t
+
+  subterm-at(|index):
+    _#(t*) -> <index(|<inc> index)> t*
+  
+
+strategies
+  
+  // Set markers for a given file. Use when checking files from a queued strategy.
+  // Current term: (ast-desugared, errors, warnings, notes) tuple
+  // ast: the root node of the file to set markers on 
+  set-markers(|ast) = prim("SSL_EXT_set_markers", ast)
+
+  // Indicate that one or more files need analysis. 
+  // Current term: ss a list of absolute file paths, or a single absolute file path to analyze
+  queue-analysis = 
+       (is-list; list-loop(queue-analysis))
+    <+ prim("SSL_EXT_queue_analysis") 
+
+  // Set the total number of work units to complete. Can be called multiple times. 
+  // Current term: number of work units (int).
+  set-total-work-units = prim("SSL_EXT_set_total_work_units")
+  
+  // Complete one work unit and update progress monitors.
+  // Current term: ignored
+  complete-work-unit = prim("SSL_EXT_complete_work_unit")
+  
+  // Queue a strategy for background processing with a progress indicator.
+  // Current term: the term to pass to the background strategy
+  // s: the strategy, as string
+  // description: name of the task (will be shown in progress view)
+  queue-strategy(|s,description) = prim("SSL_EXT_queue_strategy", s, description)
+  
+  // Return the result of this strategy to indicate a non-completed (backgrounded) analysis.
+  // Editor services (hover, resolve) will be delayed until a complete analysis is performed. 
+  set-analysis-backgrounded = !"BACKGROUNDED"
+
+signature constructors
+
+  COMPLETION : String -> Term
+  NOCONTEXT  : Term   -> Term
+  MARKER     : Term
+
+  // Below are copies of the signatures of the terms used in example
+  // trans/test.str file. These definitions should also be automatically 
+  // generated in the imported include/Test.str module. However,
+  // to ensure that the example transformation doesn't break when the
+  // syntax is changed, we also hard-coded them here.
+          
+  Module   : ID * List(Entity)   -> Module
+  Entity   : ID * List(Property) -> Entity
+  Property : ID * Type           -> Property
+  Type     : ID                  -> Type   
+   

Added: spoofax-contrib/DatabaseSPXLang/src/services/editorservices.spx
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/src/services/editorservices.spx	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,70 @@
+package languages.DatabaseLang 
+
+module codecompletion 
+	completions
+	  completion proposer                  : editor-complete
+	  completion trigger                   : ":"
+
+
+module commonsyntax  
+	
+	language Syntax properties (static defaults)
+	                                           
+	  // Comment constructs:                   
+	  line comment                           : "//"
+	  block comment                          : "/*" * "*/"
+	                                           
+	  // Fences (used for matching,            
+	  // inserting, indenting brackets):       
+	  fences                                 : [ ]
+	                                           ( )
+	                                           { }
+	                                           
+	  // Automatic indent hints                
+	  // (indent after these tokens):          
+	  indent after                           : "="
+	                                           ":"
+	                                           
+	  // Regular expression for identifiers:   
+	  identifier lexical                     : "[A-Za-z0-9_]+"
+  
+
+
+
+module colorer
+
+	colorer 
+		DBType : 66 92 217 
+		ID :  85 85 85 italic 
+		
+	colorer Default, token-based highlighting
+	                                  
+	  keyword    : 127 0 85 bold      
+	  identifier : default            
+	  string     : blue               
+	  number     : darkgreen          
+	  var        : 255 0 100 italic   
+	  operator   : 0 0 128            
+	  layout     : 63 127 95 italic   
+
+	colorer System colors
+	                            
+	  darkred   = 128 0 0       
+	  red       = 255 0 0       
+	  darkgreen = 0 128 0       
+	  green     = 0 255 0       
+	  darkblue  = 0 0 128       
+	  blue      = 0 0 255       
+	  cyan      = 0 255 255     
+	  magenta   = 255 0 255     
+	  yellow    = 255 255 0     
+	  white     = 255 255 255   
+	  black     = 0 0 0         
+	  gray      = 128 128 128   
+	  grey      = gray          
+	  orange    = 255 165 0     
+	  pink      = 255 105 180   
+	  brown     = 139 69 19     
+	  default   = _            
+  
+	
\ No newline at end of file

Added: spoofax-contrib/DatabaseSPXLang/test/example.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/test/example.aterm	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,34 @@
+DatabaseSchema(
+  "test"
+, [ TableDef(
+      "Person"
+    , [ ColumnDef("ID", UuidDBType())
+      , ColumnDef("name", StringDBType())
+      , ColumnDef("firstname", StringDBType())
+      , ColumnDef("bithdate", DateTimeDBType())
+      , ConstraintDef("te__st", FKConstraint("a", "Person", "ID"))
+      , ConstraintDef("test", PKConstraint("ID"))
+      ]
+    )
+  , TableDef("Person", [ColumnDef("ID", UuidDBType())])
+  , TableDef(
+      "Person"
+    , [ ColumnDef("_ID", UuidDBType())
+      , ConstraintDef("PKID", PKConstraint("_ID"))
+      , ColumnDef("name", StringDBType())
+      , ColumnDef("firstname", StringDBType())
+      , ColumnDef("bithdate", DateTimeDBType())
+      , ColumnDef("ownedCar", UuidDBType())
+      , ConstraintDef("FKownedCarCarID", FKConstraint("ownedCar", "Car", "_ID"))
+      ]
+    )
+  , TableDef(
+      "Car"
+    , [ ColumnDef("_ID", UuidDBType())
+      , ConstraintDef("PK__ID", PKConstraint("_ID"))
+      , ColumnDef("make", StringDBType())
+      , ColumnDef("mode", StringDBType())
+      ]
+    )
+  ]
+)
\ No newline at end of file

Added: spoofax-contrib/DatabaseSPXLang/test/example.pp.sdb
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/test/example.pp.sdb	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,15 @@
+SCHEMA test  
+CREATE TABLE Person(  
+		ID uniqueidentifier
+		,name varchar
+		,firstname varchar
+		,bithdate datetime
+		,CONSTRAINT test FOREIGN KEY (a) REFERENCES Person(ID)
+		,CONSTRAINT test PRIMARY KEY (ID)
+		
+)
+CREATE TABLE Person(  
+		ID uniqueidentifier
+		
+)
+

Added: spoofax-contrib/DatabaseSPXLang/test/example.sdb
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseSPXLang/test/example.sdb	Sat May 21 14:51:40 2011	(r22936)
@@ -0,0 +1,34 @@
+SCHEMA test  
+CREATE TABLE Person (
+		ID uniqueidentifier ,
+		CONSTRAINT te__st FOREIGN KEY (a) REFERENCES  Person(ID),
+		name varchar ,  
+		firstname varchar,
+		bithdate datetime,
+		CONSTRAINT test PRIMARY KEY (ID)  
+	);  
+				
+	
+	CREATE	TABLE Person (
+		ID uniqueidentifier 
+	);			
+		
+
+CREATE TABLE Person(  
+		_ID uniqueidentifier
+		,CONSTRAINT PKID PRIMARY KEY (_ID)
+		,name varchar
+		,firstname varchar
+		,bithdate datetime
+		,ownedCar uniqueidentifier
+		,CONSTRAINT FKownedCarCarID FOREIGN KEY (ownedCar) REFERENCES Car(_ID)
+		
+);
+CREATE TABLE Car(  
+		_ID uniqueidentifier
+		,CONSTRAINT PK__ID PRIMARY KEY (_ID)
+		,make varchar
+		,mode varchar
+		
+);
+

From M.A.Akhter at student.tudelft.nl  Sat May 21 17:12:44 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sat, 21 May 2011 15:12:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22937 - in
	spoofax-contrib/DatabaseLang: . .externalToolBuilders
	META-INF editor editor/java editor/java/DatabaseLang
	editor/java/DatabaseLang/strategies lib syntax test t...
Message-ID: <20110521151244.BEDDE7F804F@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Sat May 21 15:12:44 2011
New Revision: 22937
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22937&sc=1

Log:
DatabaseLang Project ( Hybrid Implementation . uses both SPX and legacy STR)

Added:
   spoofax-contrib/DatabaseLang/
   spoofax-contrib/DatabaseLang/.classpath
   spoofax-contrib/DatabaseLang/.externalToolBuilders/
   spoofax-contrib/DatabaseLang/.externalToolBuilders/DatabaseLang build.main.xml.launch
   spoofax-contrib/DatabaseLang/.project
   spoofax-contrib/DatabaseLang/META-INF/
   spoofax-contrib/DatabaseLang/META-INF/MANIFEST.MF
   spoofax-contrib/DatabaseLang/build.generated.xml
   spoofax-contrib/DatabaseLang/build.main.xml
   spoofax-contrib/DatabaseLang/build.properties
   spoofax-contrib/DatabaseLang/editor/
   spoofax-contrib/DatabaseLang/editor/DatabaseLang-Builders.esv
   spoofax-contrib/DatabaseLang/editor/DatabaseLang-Builders.generated.esv
   spoofax-contrib/DatabaseLang/editor/DatabaseLang-Colorer.esv
   spoofax-contrib/DatabaseLang/editor/DatabaseLang-Colorer.generated.esv
   spoofax-contrib/DatabaseLang/editor/DatabaseLang-Completions.esv
   spoofax-contrib/DatabaseLang/editor/DatabaseLang-Completions.generated.esv
   spoofax-contrib/DatabaseLang/editor/DatabaseLang-Folding.esv
   spoofax-contrib/DatabaseLang/editor/DatabaseLang-Folding.generated.esv
   spoofax-contrib/DatabaseLang/editor/DatabaseLang-Outliner.esv
   spoofax-contrib/DatabaseLang/editor/DatabaseLang-Outliner.generated.esv
   spoofax-contrib/DatabaseLang/editor/DatabaseLang-References.esv
   spoofax-contrib/DatabaseLang/editor/DatabaseLang-References.generated.esv
   spoofax-contrib/DatabaseLang/editor/DatabaseLang-Syntax.esv
   spoofax-contrib/DatabaseLang/editor/DatabaseLang-Syntax.generated.esv
   spoofax-contrib/DatabaseLang/editor/DatabaseLang.main.esv
   spoofax-contrib/DatabaseLang/editor/java/
   spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/
   spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/Activator.java
   spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/DatabaseLangParseController.java
   spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/DatabaseLangParseControllerGenerated.java
   spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/DatabaseLangValidator.java
   spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/strategies/
   spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/strategies/InteropRegisterer.java
   spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/strategies/Main.java
   spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/strategies/java_strategy_0_0.java
   spoofax-contrib/DatabaseLang/lib/
   spoofax-contrib/DatabaseLang/lib/editor-common.generated.str
   spoofax-contrib/DatabaseLang/lib/refactor-common.generated.str
   spoofax-contrib/DatabaseLang/lib/spoofaxlang.jar   (contents, props changed)
   spoofax-contrib/DatabaseLang/plugin.xml
   spoofax-contrib/DatabaseLang/spx.config
   spoofax-contrib/DatabaseLang/syntax/
   spoofax-contrib/DatabaseLang/syntax/Common.spx
   spoofax-contrib/DatabaseLang/syntax/DatabaseLang.spx
   spoofax-contrib/DatabaseLang/test/
   spoofax-contrib/DatabaseLang/test/example.aterm
   spoofax-contrib/DatabaseLang/test/example.edb
   spoofax-contrib/DatabaseLang/test/test.aterm
   spoofax-contrib/DatabaseLang/test/test.edb
   spoofax-contrib/DatabaseLang/test/test.pp.edb
   spoofax-contrib/DatabaseLang/trans/
   spoofax-contrib/DatabaseLang/trans/databaselang.str

Added: spoofax-contrib/DatabaseLang/.classpath
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/.classpath	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<classpath>
+	<classpathentry kind="src" excluding="trans/**" path="editor/java"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/4"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/.externalToolBuilders/DatabaseLang build.main.xml.launch
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/.externalToolBuilders/DatabaseLang build.main.xml.launch	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
+<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
+<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
+<listEntry value="/DatabaseLang/build.main.xml"/>
+</listAttribute>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
+<listEntry value="1"/>
+</listAttribute>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+</listAttribute>
+<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value=""/>
+<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${none}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/DatabaseLang/build.main.xml}"/>
+<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/DatabaseLang}"/>
+<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
+</launchConfiguration>

Added: spoofax-contrib/DatabaseLang/.project
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/.project	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<projectDescription>
+      <name>DatabaseLang</name>
+      <comment></comment>
+      <buildSpec>
+        <buildCommand>
+          <name>org.eclipse.jdt.core.javabuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+            <name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+            <triggers>full,incremental,</triggers>
+            <arguments>
+                <dictionary>
+                    <key>LaunchConfigHandle</key>
+                    <value>&lt;project&gt;/.externalToolBuilders/DatabaseLang build.main.xml.launch</value>
+                </dictionary>
+            </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.ManifestBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.SchemaBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+      </buildSpec>
+      <natures>
+        <nature>org.eclipse.pde.PluginNature</nature>
+        <nature>org.eclipse.jdt.core.javanature</nature>
+      </natures>
+    </projectDescription>
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/META-INF/MANIFEST.MF
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/META-INF/MANIFEST.MF	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,21 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: DatabaseLang Plug-in
+Bundle-SymbolicName: DatabaseLang; singleton:=true
+Bundle-Version: 1.0.0
+Bundle-Activator: DatabaseLang.Activator
+Import-Package: org.osgi.framework;version="1.3.0"
+Require-Bundle: org.eclipse.core.runtime,
+  org.eclipse.core.resources,
+  org.eclipse.imp.runtime,
+  org.eclipse.ui,
+  lpg.runtime,
+  org.eclipse.jface.text,
+  org.eclipse.ui.editors,
+  org.eclipse.ui.workbench.texteditor,
+  org.strategoxt.imp.runtime,
+  org.spoofax.jsglr,
+  org.strategoxt.strj
+Bundle-RequiredExecutionEnvironment: J2SE-1.5
+Bundle-ActivationPolicy: lazy
+Export-Package: DatabaseLang

Added: spoofax-contrib/DatabaseLang/build.generated.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/build.generated.xml	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,600 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="build.generated">
+
+        <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
+    
+        <!-- Initialization -->
+        <available file="${build}/DatabaseLang/strategies/Main.class" property="java.jar.enabled"/>
+        <condition property="java.jar.import" value="-la DatabaseLang.strategies" else="">
+            <isset property="java.jar.enabled"/>
+        </condition>
+        <condition property="java.jar.classpath" value=":${include}/${strmodule}-java.jar" else="">
+            <isset property="java.jar.enabled"/>
+        </condition>
+        <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
+        <dirname property="externaldefdir" file="${externaldef}"/>
+        <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
+            <isset property="externaldef"/>
+        </condition>
+        <condition property="externaljarimport1" value=":${externaljar}" else="">
+            <isset property="externaljar"/>
+        </condition>
+        <condition property="externaljarimport2" value=":${externaljarx}" else="">
+            <isset property="externaljarx"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <isset property="eclipse.running"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <available classname="org.eclipse.jdt.core.JDTCompilerAdapter"/>
+        </condition>
+        <condition property="externaljarflags" value="${externaljarflags}" else="">
+            <isset property="externaljarflags"/>
+        </condition>
+        <condition property="metasdfmodule.available" value="1">
+            <available file="${syntax}/${metasdfmodule}.sdf"/>
+        </condition>
+        
+        <fail unless="build" message="Please use build.main.xml to build this project or configure the required properties manually"/>
+        <mkdir dir="${build}"/>
+        <mkdir dir="${src-gen}"/>
+        <mkdir dir="${dist}"/>
+        <mkdir dir="${include}"/>
+        <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
+
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+        
+        <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
+                <arg value="${include}/${esvmodule}.packed.esv"/>
+            </java>
+        </target>
+        
+        <target name="refresh" if="eclipse.running">
+            <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+            <eclipse.convertPath fileSystemPath="${syntax}" property="syntaxdir"/>
+            <eclipse.convertPath fileSystemPath="${lib}" property="libdir"/>
+            <eclipse.refreshLocal resource="${libdir}" depth="infinite"/>
+            <eclipse.refreshLocal resource="${syntaxdir}/${sdfmodule}.pp.generated" depth="infinite"/>
+            <eclipse.refreshLocal resource="${libdir}/editor-common.generated.str" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Builders.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Colorer.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Completions.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+            <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
+            <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+            <!-- Might cause the editor to be reloaded?
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            -->
+        </target>
+        
+        <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
+                <arg value="-p"/>
+                <arg value="${include}/${sdfmodule}.tbl"/>
+            </java>
+        </target>
+        
+        <target name="check-classpath">
+            <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
+            <antcall target="check-classpath.helper"/>  
+        </target>
+        
+        <target name="init" if="eclipse.running">
+            <!-- refresh one file/dir in the project to trigger an Ant rebuild with the next build command -->
+            <java classname="org.strategoxt.imp.metatooling.building.AntForceRefreshScheduler" failonerror="false">
+                <arg value="${include}"/>
+            </java>
+        </target>
+  
+        <target name="check-classpath.helper" unless="check-classpath.available">
+            <echo level="error" message="Could not load the Spoofax plugin loading classes."/>
+            <echo level="error" message="Make sure it is on the class path."/>
+            <echo level="error" message=""/>               
+            <echo level="error" message="In Eclipse, make sure the Ant builder is configured properly:"/>
+            <echo level="error" message="right-click on build.main.xml, go to Run as, Ant build..., JRE tab,"/>
+            <echo level="error" message="and ensure Run in the same JRE as the workspace is selected"/>
+            <echo level="error" message="alternatively, build the project using Build Project in the Project menu"/>
+            <fail/>
+        </target>
+    
+        <target name="sdf2table" depends="make-permissive">
+            <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                
+                <fileset file="${include}/${sdfmodule}-Permissive.def"/>
+                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+            </apply>
+        </target>
+        
+        <target name="meta-sdf2table" if="metasdfmodule.available">
+            <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+            <antcall target="sdf2table">
+                <param name="sdfmodule" value="${metasdfmodule}"/>
+                <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+            </antcall>
+            <antcall target="meta-sdf2table.helper"/>
+        </target>
+        
+        <target name="meta-sdf2table.helper" if="eclipse.running">
+           <eclipse.convertPath fileSystemPath="${include}" property="includeresource"/>
+           <eclipse.refreshLocal resource="${includeresource}/${metasdfmodule}.tbl" depth="infinite"/>
+        </target>
+        
+        <target name="make-permissive" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-Permissive.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <antcall target="make-permissive.helper"/>
+        </target>
+    
+        <target name="make-permissive.helper" unless="permissive-grammar.available">
+            <java classname="org.strategoxt.permissivegrammars.make_permissive" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-Permissive.def"/>
+                <arg line="--optimize on"/>
+            </java>
+        </target>
+
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
+            <mkdir dir="utils"/>
+            <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/aster.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.strategojar}" todir="utils" failonerror="false"/>
+        </target>
+    
+        <target name="pack-sdf" unless="externaldef">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.sdf"/>
+                </srcfileset>
+                <srcfileset dir="${lib}">
+                    <include name="**/*.def"/>
+                </srcfileset>
+                <targetfileset file="${include}/${sdfmodule}.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.def" property="pack-sdf.available"/>
+            <antcall target="pack-sdf.helper"/>
+        </target>
+    
+        <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <condition property="utils-include" value="-I ${utils}" else="">
+                <available file="${utils}"/>
+            </condition>
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-pack-sdf"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.sdf"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-I"/>
+                <arg value="${syntax}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg line="${utils-include}"/>
+                <arg line="${build.sdf.imports}"/>
+            </java>
+        </target>
+    
+        <target name="copy-sdf" if="externaldef">
+            <copy file="${externaldef}" tofile="${include}/${sdfmodule}.def" preservelastmodified="true"/>
+        </target>
+    
+        <target name="copy-jar" if="externaljar">
+            <copy file="${externaljar}" todir="${include}" preservelastmodified="true"/>
+        </target>
+    
+        <target name="rtg2sig" if="build.stratego.enabled" depends="sdf2rtg">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.rtg"/>
+                <targetfileset file="${include}/${sdfmodule}.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.str" property="rtg2sig.available"/>
+            <antcall target="rtg2sig.helper"/>
+        </target>
+    
+        <target name="rtg2sig.helper" unless="rtg2sig.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-rtg2sig"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.str"/>
+                <arg value="--module"/>
+                <arg value="${sdfmodule}"/>
+            </java>
+        </target>
+        
+        <target name="sdf2rtg" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}.rtg"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.rtg" property="sdf2rtg.available"/>
+            <antcall target="sdf2rtg.helper"/>
+        </target>
+    
+        <target name="sdf2rtg.helper" unless="sdf2rtg.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-sdf2rtg"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="--ignore-missing-cons"/>
+                <arg value="-Xnativepath"/>
+                <arg value="${build.strategoxt.sdf}"/>
+            </java>
+        </target>
+        
+        <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${syntax}/${sdfmodule}.generated.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.generated.pp.af"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
+        </target>
+    
+        <target name="ppgen.helper" unless="ppgen.available">
+            <!-- Any failures here are ignored; they are only a problem when imported from Stratego -->
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-ppgen"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-t"/>
+                <arg value="-b"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+            </java>
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-pp-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+                <arg value="-o"/>
+                <arg value="${syntax}/${sdfmodule}.generated.pp"/>
+            </java>
+        </target>
+    
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
+        
+        <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${syntax}/${sdfmodule}.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+            </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
+        </target>
+    
+        <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-parse-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.pp"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.pp.af"/>
+            </java>
+        </target>
+    
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+    
+        <!-- Aster to Stratego -->
+        <target name="stratego.aster">
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <fileset dir="${basedir}" id="aster-input-set">
+              <include name="**/*.astr"/>
+            </fileset>
+            <pathconvert pathsep=" " setonempty="false" property="aster-input" refid="aster-input-set"/>
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.astr"/>
+                </srcfileset>
+                <targetfileset file="${trans}/${strmodule}.rtree"/>
+            </dependset>
+            <condition property="aster-output.uptodate">
+                <and>
+                    <isset property="aster-output.available"/>
+                    <available file="${trans}/${strmodule}.rtree"/>
+                </and>
+            </condition>
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.uptodate"/>
+            <antcall target="stratego.aster.helper"/>
+        </target>
+    
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg line="${aster-input}"/>
+            </java>
+        </target>
+        
+        <target name="java.jar" if="java.jar.enabled">
+            <jar basedir="${build}" excludes="trans/**" update="true" destfile="${include}/${strmodule}-java.jar"/>
+        </target>
+    
+        <!-- Stratego to Java interpreter -->
+        <target name="stratego.ctree" depends="rtg2sig">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/*.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${include}/${strmodule}.ctree"/>
+            </dependset>
+            <available file="${include}/${strmodule}.ctree" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputfile" value="${include}/${strmodule}.ctree"/>
+                <param name="build.stratego.extraargs" value="-F"/>
+            </antcall>
+        </target>
+    
+        <!-- Stratego to Java compiler -->
+        <target name="stratego.jar" depends="rtg2sig,utils-files">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/*.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="trans/**"/>
+                <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+        </target>
+            
+        <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans}/${strmodule}.str"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
+                
+        <!-- begin: targets used for adding debugging instrumentation to stratego -->
+        
+		<!-- 
+			if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
+			Only used by stratego.jvm.helper.debug 
+		-->
+		<condition property="transformer-output" value="" else="--output-rtree">
+			<isset property="debug.the.debug.transformer"/>
+		</condition>
+		
+		<!-- 
+			if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
+			if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
+			Only used by stratego.jvm.helper.debug
+		-->
+		<condition property="strj.input.file.type" value="str" else="rtree">
+			<isset property="debug.the.debug.transformer"/>
+		</condition>
+        
+        <!-- value determines which target will be executed.
+        	If the file ".debugmode" can be found in the project root call stratego.jar.debug
+        	else call stratego.jar
+        -->
+        <condition property="stratego.jar.target" value="call.stratego.jar.debug" else="call.stratego.jar">
+            <available file=".debugmode"/>
+        </condition>
+		
+		<!-- will save the stratego files with debug info in this folder -->
+		<property name="trans-debug" location="trans-debug"/>
+		
+		<!-- this helper target determines what target to call, based on debug.build.enabled -->
+		<target name="stratego.jar.helper">
+			<antcall target="${stratego.jar.target}"/>
+		</target>
+		
+		<!-- call stratego.jar unless debug.build.enabled property is set --> 
+		<target name="call.stratego.jar" depends="stratego.jar">
+			<echo message="call.stratego.jar - ${stratego.jar.target}"/>
+		</target>
+		
+		<!-- call stratego.jar.debug when debug.build.enabled property is set -->
+		<target name="call.stratego.jar.debug" depends="stratego.jar.debug">
+			<echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
+		</target>
+		
+		<!-- copy stratego runtime jars to utils folder -->
+		<target name="utils-files-debug" depends="utils-files">
+			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
+			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
+		</target>
+		
+	    <!-- Stratego to Java compiler with debugging capabilities -->
+	    <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
+	        <dependset>
+	            <srcfileset dir="${basedir}">
+	                <include name="**/*.str"/>
+	                <include name="**/*.astr"/>
+	                <exclude name="lib/editor-common.generated.str"/>
+	            </srcfileset>
+	            <targetfileset file="${src-gen}/trans/Main.java"/>
+	        </dependset>
+	        <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+	        <antcall target="copy-jar"/>
+	        <antcall target="stratego.jar.deletehelper"/>
+	    	<!-- compile stratego to java -->
+	        <antcall target="stratego.jvm.helper.debug">
+	            <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+	            <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+	        </antcall>
+	    	<!-- compile java to class -->
+	        <javac destdir="${build}" source="1.5" target="1.5" debug="on">
+	    		<!-- attribute in javac: srcdir="${src-gen}" -->
+	    		<src path="${src-gen}"/>
+	        	<!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"  -->
+	        	<classpath>
+	        		<pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+	        		<pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
+	        		<pathelement location="utils/stratego-debug-runtime-java.jar"/>
+	        	</classpath>
+	        	<!-- attribute in javac: includes="trans/**"  -->
+	        	<include name="trans/**"/>
+	    	</javac>
+	        <!-- copy imported terms -->
+	        <copy todir="${build}/trans">
+	            <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+	        </copy>
+	    	<!-- create a jar from the class files -->
+	        <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+	        <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+	        <delete><fileset dir="${build}" includes="trans/**"/></delete>
+	    </target>
+		
+		<!-- instrument the stratego program and compile it to java -->
+	    <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
+	    	<echo message="generate stratego with debug information"/>
+	    	<echo message="${basedir}"/>
+	    	<available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
+	    	<!-- add debug information -->
+	  		<java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
+	  		     <classpath>
+					<pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
+	  		     	<pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
+	  		     	<pathelement location="${eclipse.spoofaximp.strategojar}"/>
+	  		     </classpath>
+	  			<arg value="-i"/>
+	  			<arg value="${trans}/${strmodule}.str"/>
+	  			<arg value="--gen-dir"/>
+	  			<arg value="${trans-debug}"/>
+	  			<arg value="--base-dir"/> <!-- set the basedir to the project dir -->
+	  			<arg value="${basedir}"/>
+	  			<!-- "arg line='val'" val should contain space-separated arguments --> 
+	  			<arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
+	  			
+	  			<!-- arguments should start with two '-'-characters -->
+	  			<!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
+	  			<!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
+	  			<!-- <arg value="-output-rtree"/> --> 
+	    	</java>
+	    	<!-- now compile instrumented stratego to java -->
+	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+	        <java classname="org.strategoxt.strj.Main" failonerror="true">
+	            <arg value="-i"/>
+	            <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
+	            <arg value="-o"/>
+	            <arg value="${build.stratego.outputfile}"/>
+	            <arg value="-p"/>
+	            <arg value="trans"/>
+	            <arg value="--library"/>
+	            <arg value="--clean"/>
+	            <arg line="${build.stratego.args}"/>
+	            <arg line="${build.stratego.extraargs}"/>
+	            <arg line="${externaljarflags}"/>
+	            <arg line="${externaldefimport}"/>
+	            <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+	        	<!-- put strategodebuglib.rtree on the include path -->
+	        	<arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
+	        	<arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
+	        </java>
+	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+	        <mkdir dir="${build}/trans"/>
+	    </target>
+        
+        
+        <!-- end: targets used for adding debugging instrumentation to stratego -->
+
+
+        <!-- Stratego to C-based native executable -->
+        <target name="stratego.c">
+            <antcall target="stratego.c.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/include"/>
+                <param name="build.stratego.extraargs" value=""/>
+                <param name="build.stratego.extension" value=""/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+        
+        <!-- Helper target for calling the stratego compiler -->
+        <target name="stratego.c.helper" depends="rtg2sig" if="build.stratego.enabled">
+            <apply executable="${build.strategoxt.stratego}/${build.stratego.compiler}" dest="${build.stratego.outputpath}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                
+                <fileset file="${trans}/${strmodule}.str"/>
+                <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>
+            </apply>
+        </target>
+        
+        <target name="clean" description="clean up">
+            <delete dir="${build}"/>
+            <delete file="${include}/${sdfmodule}.def"/>
+            <delete dir="${src-gen}/trans"/>
+        </target>
+    </project>
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/build.main.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/build.main.xml	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,114 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="DatabaseLang" default="all">
+        
+	 <!-- Key input modules -->
+			<property name="sdfmodule" value="DatabaseLang"/> <!-- output sdf module name -->
+			<property name="default.generated.signatures" value="${sdfmodule}-signatures"/>
+			
+			
+	        <property name="metasdfmodule" value="Stratego-DatabaseLang"/>
+	        <property name="esvmodule" value="DatabaseLang"/>
+	        <property name="strmodule" value="DatabaseLang"/>
+	    
+	        <!-- Project directories -->
+	        <property name="trans" location="trans"/>
+	        <property name="src-gen" location="editor/java"/>
+	        <property name="syntax" location=".shadowdir/"/>
+	        <property name="include" location="include"/>
+	        <property name="lib" location="lib"/>
+	        <property name="build" location="bin"/>
+	        <property name="dist" location="bin/dist"/>
+	        
+	        <!-- Imports -->
+	        <property name="build.sdf.imports" value="-I &quot;${basedir}/.shadowdir&quot;"/>
+			<property name="build.stratego.args" value="
+	                        --library
+	                        -I &quot;${trans}&quot;
+	                        -I &quot;${basedir}&quot;
+	                        -I &quot;${basedir}/.shadowdir&quot;
+	                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm"/>
+	        
+	        <!-- Optional: external .def and .jar locations
+	        <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+	        <property name="externaljar" value="../lib.jar"/>
+	        <property name="externaljarflags" value="-la org.lib"/>
+	        -->
+	    
+	        <!-- Environment configuration for command-line builds -->
+	        <condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
+	            <isset property="eclipse.spoofaximp.nativeprefix"/>
+	        </condition>
+	        <property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin"/>
+	    
+			 <import file="build.generated.xml"/>	
+			
+		      <target name="SPXgen">
+		        <java classname="run" failonerror="true">
+	            <arg value="${basedir}/lib/spoofaxlang.jar"/>
+		        	<arg value="build-spoofax-main"/>
+		      	  <arg value="-i"/>
+		      	  <arg value="${basedir}"/>
+		      	</java>
+		      	<antcall target = "referesh.autogen.artifacts"/>
+		      </target>
+		
+				<target name = "referesh.autogen.artifacts" if="eclipse.running">
+					 <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+					 <eclipse.refreshLocal resource="${projectdir}/.shadowdir" depth="infinite"/>
+				</target>	
+		
+		      <target name="build-syntax-hack">
+	          <java classname="run" failonerror="true">
+	              <arg value="org.strategoxt.tools.main-pack-sdf"/>
+	              <arg value="-i"/>
+	              <arg value="${basedir}/.shadowdir/${sdfmodule}.sdf"/>
+	              <arg value="-o"/>
+	              <arg value="${include}/${sdfmodule}.def"/>
+	              <arg value="-I"/>
+	              <arg value="${basedir}/.shadowdir"/>
+	              <arg value="-I"/>
+	              <arg value="${lib}"/>
+	          </java>
+	          <java classname="org.strategoxt.permissivegrammars.make_permissive" failonerror="true">
+	              <arg value="-i"/>
+	              <arg value="${include}/${sdfmodule}.def"/>
+	              <arg value="-o"/>
+	              <arg value="${include}/${sdfmodule}-Permissive.def"/>
+	              <arg line="--optimize on"/>
+	          </java>
+		      	<apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
+	              <arg value="-i"/>
+	              <srcfile/>
+	              <arg value="-o"/>
+	              <targetfile/>
+	              <arg value="-m"/>
+	              <arg value="_default/_default-main"/>
+	              
+	              <fileset file="${include}/${sdfmodule}-Permissive.def"/>
+	              <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+	          </apply>
+		        <echo file="${include}/${sdfmodule}.rtg" message="regular tree grammar start Start productions Start -> &lt;nil&gt;()"/>
+	          	<echo file="${include}/${sdfmodule}.str" message="module include/${sdfmodule} imports include/${default.generated.signatures}"/>
+		      </target>
+		
+		      <target name="del-rtrees-hack">
+		      	<delete>
+		      	    <fileset dir="${basedir}/.shadowdir">
+		      	       <include name="**/*.rtree" />
+		      	    </fileset>
+		      	</delete>
+		      </target>
+	    
+	        <!-- Main target -->
+	        <!-- 
+	      		<target name="all" depends="check-classpath,init,SPXgen,build-syntax-hack,del-rtrees-hack,spoofaximp.default.ctree"/>
+		    -->
+		
+			<target name="skip-rtg">
+				<antcall target="sdf2table"/>
+		    	<echo file="${include}/${sdfmodule}.rtg" message="regular tree grammar start Start productions Start -> &lt;nil&gt;()"/>
+	        	<echo file="${include}/${sdfmodule}.str" message="module include/${sdfmodule} imports include/${default.generated.signatures}"/>
+			</target>
+	    	<target name="all" depends="check-classpath,init,SPXgen,sdf2table,skip-rtg,spoofaximp.default.ctree"/>
+    </project>
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/build.properties	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,8 @@
+source.. = editor/java/
+output.. = bin/
+bin.includes = META-INF/,\
+               plugin.xml,\
+               include/,\
+               bin/,\
+               lib/,\
+               .

Added: spoofax-contrib/DatabaseLang/editor/DatabaseLang-Builders.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/DatabaseLang-Builders.esv	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,18 @@
+
+module DatabaseLang-Builders
+
+imports DatabaseLang-Builders.generated
+
+builders
+                                                                      
+  // This file can be used for custom analysis and builder rules.     
+  //                                                                  
+  // See the imported file for a brief introduction and examples.     
+
+builders
+                                                                                                              
+  provider : include/databaselang.ctree                                                                       
+  provider : include/databaselang-java.jar                                                                    
+                                                                                                              
+                     
+  builder  : "Show abstract syntax (for selection)" = generate-aterm (openeditor) (realtime) (meta) (source)  

Added: spoofax-contrib/DatabaseLang/editor/DatabaseLang-Builders.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/DatabaseLang-Builders.generated.esv	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,52 @@
+
+module DatabaseLang-Builders.generated
+
+builders
+                                                                                                           
+  // Building and analysis is defined in Stratego program or programs:                                     
+  //                                                                                                       
+  //   provider : stratego-program.ctree                                                                   
+  //   provider : stratego-library.jar                                                                     
+  //                                                                                                       
+  // Analysis is carried out by a Stratego rule that can be selected as follows:                           
+  //                                                                                                       
+  //   observer : analysis-rule                                                                            
+  //                                                                                                       
+  // Any dynamic rules set in the analysis may be used by other semantic services,                         
+  // such as reference resolving or the builders.                                                          
+  //                                                                                                       
+  // Builders may carry out custom transformations on a file or selection.                                 
+  // (At run-time, they can be accessed using the toolbar button with the star icon.)                      
+  // Builders can be specified as follows:                                                                 
+  //                                                                                                       
+  //   builder : "Generate Java code" = generate-java (openeditor) (persistent) (realtime)                 
+  //                                                                                                       
+  // In this example, the caption "Generate Java code" is used in the build button dropdown menu,          
+  // and the generate-java rule is used to carry out the tranformation.                                    
+  // Builder definitions can also specify any combination of the following annotations:                    
+  //                                                                                                       
+  //   (cursor)      The builder should always transform the tree node at the cursor.                      
+  //   (meta)        Indicates the builder should only be available to meta-programmers                    
+  //                 (i.e., not when the plugin is deployed to end-users).                                 
+  //   (openeditor)  Indicates an editor should be opened with the result.                                 
+  //   (persistent)  Indicates that the resulting file should be saved to disk.                            
+  //   (realtime)    Indicates that the resulting editor should be updated in real-time                    
+  //                 as the source file is edited.                                                         
+  //   (source)      Always apply this builder to the source AST, not to the AST                           
+  //                 after it has been analyzed/desugared by the observer.                                 
+  //                                                                                                       
+  // Refactorings are used for transformations that modify the original source code;                       
+  // the original layout is preserved for unchanged fragments,                                             
+  // while newly inserted nodes are pretty printed using a custom pretty-print strategy,                   
+  // or the layout definitions in the pp-table.                                                            
+  //   pp-table: get-pp-table                                                                              
+  //   pretty-print: prettyprint                                                                           
+  //                                                                                                       
+  // Refactorings can be specified as shown below, whereby Property* indicates on which constructs the     
+  // refactoring is specified (<sort>.<constructor>).                                                      
+  //                                                                                                       
+  //   refactoring Property*: "Extract Entity" =  extract-entity (source)                                  
+  //                                                                                                       
+  // The 'on save' handler can be used  to generate code as files are saved:                               
+  //                                                                                                       
+  //   on save : generate-java                                                                             
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/editor/DatabaseLang-Colorer.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/DatabaseLang-Colorer.esv	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,9 @@
+module DatabaseLang-Colorer
+
+imports DatabaseLang-Colorer.generated
+
+colorer
+                                                                      
+  // This file can be used for custom colorer rules.                  
+  //                                                                  
+  // See the imported file for a brief introduction and examples.     
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/editor/DatabaseLang-Colorer.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/DatabaseLang-Colorer.generated.esv	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,46 @@
+module DatabaseLang-Colorer.generated
+
+colorer
+                                                                                             
+  // Sort-based highlighting with background color                                           
+  //   Id: yellow green                                                                      
+  //                                                                                         
+  // Sort- and constructor-based highlighting                                                
+  //   ClassBodyDec.MethodDec: yellow                                                        
+  //                                                                                         
+  // Constructor-based highlighting                                                          
+  //   _.MethodDec: 255 0 0                                                                  
+  //                                                                                         
+  // Example: background colors for ToMetaExpr/FromMetaExpr, if supported by the grammar     
+  //   environment _.ToMetaExpr:   _ 220 230 200                                             
+  //   environment _.FromMetaExpr: _ white                                                   
+
+colorer Default, token-based highlighting
+                                  
+  keyword    : 127 0 85 bold      
+  identifier : default            
+  string     : blue               
+  number     : darkgreen          
+  var        : 255 0 100 italic   
+  operator   : 0 0 128            
+  layout     : 63 127 95 italic   
+
+colorer System colors
+                            
+  darkred   = 128 0 0       
+  red       = 255 0 0       
+  darkgreen = 0 128 0       
+  green     = 0 255 0       
+  darkblue  = 0 0 128       
+  blue      = 0 0 255       
+  cyan      = 0 255 255     
+  magenta   = 255 0 255     
+  yellow    = 255 255 0     
+  white     = 255 255 255   
+  black     = 0 0 0         
+  gray      = 128 128 128   
+  grey      = gray          
+  orange    = 255 165 0     
+  pink      = 255 105 180   
+  brown     = 139 69 19     
+  default   = _             
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/editor/DatabaseLang-Completions.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/DatabaseLang-Completions.esv	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,31 @@
+module DatabaseLang-Completions
+
+imports DatabaseLang-Completions.generated
+
+completions
+                                                                   
+  // This file is used to define content completion.               
+  //                                                               
+  // See the imported file for a brief introduction and examples.  
+                                                                   
+
+completions
+                                             
+  // Syntax completion:                      
+                                             
+  completion template Start :
+    "module " <m> (blank)  
+                                             
+  completion template Definition :
+    "entity " <e> " {" (cursor) "}" (blank)  
+                                             
+  completion template Property : "prop" =
+    <x> " : " <T> (blank)  
+                                             
+
+completions
+  // Semantic (identifier) completion:   
+                                         
+  completion proposer                  : editor-complete
+                                         
+  completion trigger                   : ":"
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/editor/DatabaseLang-Completions.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/DatabaseLang-Completions.generated.esv	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,51 @@
+module DatabaseLang-Completions.generated
+
+completions
+                                                                                          
+  // Syntactic content completion can be defined as follows:                              
+  //                                                                                      
+  //   completion keyword  : "keyword"                                                    
+  //   completion template : "if " <e> " then\n\t" <s> "\nend"                            
+  //                                                                                      
+  // This defines keyword completion for "keyword" and                                    
+  // a template completion for the "if" keyword (note the use of \n, \t, and spaces).     
+  // In this template, the text selection expands to the "e" placeholder identifier       
+  // enclosed in <> brackets.                                                             
+  //                                                                                      
+  // Use the (blank) annotation if you want a template completion only to                 
+  // appear on blank lines:                                                               
+  //                                                                                      
+  //   completion template: "section " <title> "\n\t" (blank)                             
+  //                                                                                      
+  // You can specify a specific SDF sort for which a completion                           
+  // rule should trigger as follows:                                                      
+  //                                                                                      
+  //   completion template Section :                                                      
+  //     "section " <title> "\n\t" (blank)                                                
+  //                                                                                      
+  // Finally, you can override the prefix of the completion:                              
+  //                                                                                      
+  //   completion template Statement : "assignment" =                                     
+  //     <x> " = " <y> (blank)                                                            
+  //                                                                                      
+  // Semantic content completion can be defined as follows:                               
+  //                                                                                      
+  //   completion proposer : completion-function-call                                     
+  //   completion trigger  : "\."                                                         
+  //                                                                                      
+  // This sets completion-function-call as the completion strategy,                       
+  // and declares that [A-Za-z0-9_]+ may be used as a lexical pattern                     
+  // to parse identifiers (used to set the text selection with suggestions).              
+  // The completion trigger uses a regular expression to specify that                     
+  // completions should be proposed as the user types ".".                                
+  //                                                                                      
+  // Completions make use of the identifier lexical defined in YourLanguage-Syntax.esv    
+  // to select identifiers in completion suggestions.                                     
+  //                                                                                      
+  // Semantic completion uses the semantic provider defined in YourLanguage-Builders.esv  
+  // All semantic services may make use of the dynamic rules created by the observer.     
+
+completions
+                                     
+  // Derived completions may follow  
+                                     
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/editor/DatabaseLang-Folding.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/DatabaseLang-Folding.esv	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,9 @@
+module DatabaseLang-Folding
+
+imports DatabaseLang-Folding.generated
+
+folding
+  
+  // This file can be used for custom folding rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/editor/DatabaseLang-Folding.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/DatabaseLang-Folding.generated.esv	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,22 @@
+module DatabaseLang-Folding.generated
+
+folding Default folding definitions
+  
+  // Folding rules indicate which syntactic constructs can be folded,
+  // and take one of the following forms:
+  //
+  //   <sort>.<constructor>
+  //
+  //   <sort>._
+  //
+  //   _.<constructor>
+  //
+  // To indicate that an element should always be folded, add
+  // a (folded) annotation:
+  //
+  //   _.Imports (folded)
+  //
+  // To disable a folding rule defined elsewhere, add a (disabled) annotation:
+  //
+  //   Definition._ (disabled)
+  
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/editor/DatabaseLang-Outliner.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/DatabaseLang-Outliner.esv	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,9 @@
+module DatabaseLang-Outliner
+
+imports DatabaseLang-Outliner.generated
+
+outliner
+  
+  // This file can be used for custom outliner rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/editor/DatabaseLang-Outliner.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/DatabaseLang-Outliner.generated.esv	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,14 @@
+module DatabaseLang-Outliner.generated
+
+outliner Default outliner        
+  
+  
+  // Outliner rules indicate which syntactic constructs should be shown in the outline
+  // and quick outline views, and take one of the following forms:
+  //
+  //   <sort>.<constructor>
+  //
+  //   <sort>._
+  //
+  //   _.<constructor>
+  
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/editor/DatabaseLang-References.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/DatabaseLang-References.esv	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,10 @@
+module DatabaseLang-References
+
+imports DatabaseLang-References.generated
+
+references
+                                                                                                   
+  // This file can be used to specify reference resolving and hover help, and content completion.  
+  //                                                                                               
+  // See the imported file for a brief introduction and examples.                                  
+                                                                                                   

Added: spoofax-contrib/DatabaseLang/editor/DatabaseLang-References.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/DatabaseLang-References.generated.esv	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,19 @@
+
+module DatabaseLang-References.generated
+
+references
+                                                                                          
+  // Reference resolving rules can specify the syntax constructors for which              
+  // a reference resolving function is available:                                         
+  //                                                                                      
+  //   reference FunctionCall : resolve-function-call                                     
+  //                                                                                      
+  // This defines that for each FunctionCall, resolve-function-call                       
+  // will retrieve the AST node that declares it.                                         
+  //                                                                                      
+  // Likewise, hover help can be specified as follows:                                    
+  //                                                                                      
+  //   hover FunctionCall : hover-help-function-call                                      
+  //                                                                                      
+  // Reference resolving uses the semantic provider defined in YourLanguage-Builders.esv  
+  // All semantic services may make use of the dynamic rules created by the observer.     
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/editor/DatabaseLang-Syntax.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/DatabaseLang-Syntax.esv	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,9 @@
+module DatabaseLang-Syntax
+
+imports DatabaseLang-Syntax.generated
+
+language
+                                                                   
+  // This file can be used for custom syntax rules.                
+  //                                                               
+  // See the imported file for a brief introduction and examples.  
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/editor/DatabaseLang-Syntax.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/DatabaseLang-Syntax.generated.esv	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,21 @@
+module DatabaseLang-Syntax.generated
+
+language Syntax properties (static defaults)
+                                           
+  // Comment constructs:                   
+  line comment                           : "//"
+  block comment                          : "/*" * "*/"
+                                           
+  // Fences (used for matching,            
+  // inserting, indenting brackets):       
+  fences                                 : [ ]
+                                           ( )
+                                           { }
+                                           
+  // Automatic indent hints                
+  // (indent after these tokens):          
+  indent after                           : "="
+                                           ":"
+                                           
+  // Regular expression for identifiers:   
+  identifier lexical                     : "[A-Za-z0-9_]+"
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/editor/DatabaseLang.main.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/DatabaseLang.main.esv	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,17 @@
+module DatabaseLang.main
+
+imports DatabaseLang-Builders DatabaseLang-Colorer DatabaseLang-Completions DatabaseLang-Folding DatabaseLang-Outliner DatabaseLang-References DatabaseLang-Syntax
+
+language General properties
+                  
+  name          : DatabaseLang
+  id            : DatabaseLang
+  extends       : Root
+                  
+  description   : "Spoofax/IMP-generated editor for the DatabaseLang language"
+  url           : http://strategoxt.org
+                  
+  extensions    : edb
+  table         : include/DatabaseLang.tbl
+  start symbols : Start 
+   
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/Activator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/Activator.java	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,44 @@
+package DatabaseLang;
+
+import org.eclipse.imp.preferences.PreferencesService;
+import org.eclipse.imp.runtime.PluginBase;
+import org.osgi.framework.BundleContext;
+
+public class Activator extends PluginBase 
+{ 
+  public static final String kPluginID = "DatabaseLang";
+
+  public static final String kLanguageName = "DatabaseLang";
+
+  protected static Activator sPlugin;
+
+  public static Activator getInstance()
+  { 
+    if(sPlugin == null)
+      return new Activator();
+    return sPlugin;
+  }
+
+  public Activator () 
+  { 
+    super();
+    sPlugin = this;
+  }
+
+  @Override public void start(BundleContext context) throws Exception
+  { 
+    super.start(context);
+  }
+
+  @Override public String getID()
+  { 
+    return kPluginID;
+  }
+
+  @Override public String getLanguageID()
+  { 
+    return kLanguageName;
+  }
+
+  protected static PreferencesService preferencesService = null;
+}
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/DatabaseLangParseController.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/DatabaseLangParseController.java	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,4 @@
+package DatabaseLang;
+
+public class DatabaseLangParseController extends DatabaseLangParseControllerGenerated 
+{ }
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/DatabaseLangParseControllerGenerated.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/DatabaseLangParseControllerGenerated.java	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,108 @@
+package DatabaseLang;
+
+import java.io.InputStream;
+import java.io.IOException;
+import java.io.File;
+import java.io.FileInputStream;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class DatabaseLangParseControllerGenerated extends DynamicParseController 
+{ 
+  public static final String LANGUAGE = new String("DatabaseLang");
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static volatile Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static synchronized Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  protected static synchronized void setDescriptor(Descriptor descriptor)
+  { 
+    DatabaseLangParseControllerGenerated.descriptor = descriptor;
+  }
+
+  protected static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = DatabaseLangParseControllerGenerated.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = DatabaseLangParseControllerGenerated.class.getResourceAsStream(TABLE);
+      boolean filesystem = false;
+      if(descriptorStream == null && new File("./" + DESCRIPTOR).exists())
+      { 
+        descriptorStream = new FileInputStream("./" + DESCRIPTOR);
+        filesystem = true;
+      }
+      if(table == null && new File("./" + TABLE).exists())
+      { 
+        table = new FileInputStream("./" + TABLE);
+        filesystem = true;
+      }
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
+      descriptor = DescriptorFactory.load(descriptorStream, table, filesystem ? Path.fromPortableString("./") : null);
+      descriptor.setAttachmentProvider(DatabaseLangParseControllerGenerated.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  private static String getPluginLocation()
+  { 
+    return DatabaseLangParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(this, getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/DatabaseLangValidator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/DatabaseLangValidator.java	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,12 @@
+package DatabaseLang;
+
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
+
+public class DatabaseLangValidator extends MetaFileLanguageValidator 
+{ 
+  @Override public Descriptor getDescriptor()
+  { 
+    return DatabaseLangParseController.getDescriptor();
+  }
+}
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/strategies/InteropRegisterer.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/strategies/InteropRegisterer.java	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,14 @@
+package DatabaseLang.strategies;
+
+import org.strategoxt.lang.JavaInteropRegisterer;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * Helper class for {@link java_strategy_0_0}.
+ */
+public class InteropRegisterer extends JavaInteropRegisterer {
+
+  public InteropRegisterer() {
+    super(new Strategy[] { java_strategy_0_0.instance });
+  }
+}

Added: spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/strategies/Main.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/strategies/Main.java	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,11 @@
+package DatabaseLang.strategies;
+
+import org.strategoxt.lang.Context;
+
+public class Main {
+  
+  public static void init(Context context) {
+    // Called when the editor is being initialized
+  }
+
+}

Added: spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/strategies/java_strategy_0_0.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/editor/java/DatabaseLang/strategies/java_strategy_0_0.java	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,32 @@
+package DatabaseLang.strategies;
+
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * Example Java strategy implementation.
+ *
+ * This strategy can be used by editor services and can be called
+ * in Stratego modules by declaring it as an external strategy
+ * as follows:
+ *
+ * <code>
+ *  external java-strategy(|)
+ * </code>
+ *
+ * @see InteropRegisterer  This class registers java_strategy_0_0 for use.
+ */
+public class java_strategy_0_0 extends Strategy {
+  
+  public static java_strategy_0_0 instance = new java_strategy_0_0();
+
+  @Override
+  public IStrategoTerm invoke(Context context, IStrategoTerm current) {
+    context.getIOAgent().printError("Input for java-strategy: " + current);
+    ITermFactory factory = context.getFactory();
+    return factory.makeString("Regards from java-strategy");
+  }
+
+}

Added: spoofax-contrib/DatabaseLang/lib/editor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/lib/editor-common.generated.str	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,254 @@
+module lib/editor-common.generated
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-gpp
+
+strategies
+
+  parse-file = parse-databaselang-file
+  parse-databaselang-file =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(include/DatabaseLang.tbl)>
+    )
+
+  parse-string = parse-databaselang-string
+  parse-databaselang-string =
+    parse-string(
+      strsglr-report-parse-error
+    | <import-term(include/DatabaseLang.tbl)>
+    )
+  
+  parse-stream = parse-databaselang-stream
+  parse-databaselang-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(include/DatabaseLang.tbl)>
+    )
+
+  pp-databaselang-string =
+    ast2abox(|[<import-term(include/DatabaseLang.generated.pp.af)>,
+               <import-term(include/DatabaseLang.pp.af)>]);
+    box2text-string(|100)
+
+strategies
+  
+  /**
+   * Processes an import during semantic analysis.
+   * Ensures proper caching of files and prevents
+   * processing duplicate imports more than once.
+   *
+   * @param resolve-path  Resolves the filesystem path of this import
+   * @param parse-file    Parses a file (optionally removing definition bodies
+   *                      so only signatures are stored in the cache)
+   * @param record-declarations
+   *                      Performs semantic analysis on a tree
+   */
+  open-import(resolve-path, parse-file, record-declarations):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path       := <resolve-path> import;
+        cache-path := <import-cache-path> path;
+        if not(<IsImported> path) then
+          rules(
+            IsImported: path
+          );
+          ( <is-newer> (cache-path, path);
+            file := <ReadFromFile> cache-path
+          <+
+            file := <parse-file> path;
+            if <file-exists> path then
+              // Only cache if on filesystem (e.g., ignore libstratego-lib)
+              <WriteToBinaryFile> (cache-path, file)
+            end        
+          );
+          {| CurrentFile:
+            rules(CurrentFile := path);
+            <record-declarations> file
+          |}
+        end
+      end
+
+  open-wildcard-import(resolve-path, parse-file, record-declarations, is-source-file):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path := <resolve-path> import;
+        readdir;
+        list-loop(
+          if is-source-file then
+            <open-import(id, parse-file, record-declarations)>
+              $[[path]/[<id>]]
+          <+
+            try(?one-failed)
+          end
+        );
+        not(!one-failed)
+      end
+  
+  import-cache-path:
+    full-path -> cache-path
+    with
+      project-path := <project-path>;
+      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
+      full-path'   := <string-replace(|"/", "+"); string-replace(|"\\", "+"); string-replace(|":", "+")> full-path;
+      cache-path   := $[[cache-dir]/[full-path'].sig]
+
+  project-path = prim("SSL_EXT_projectpath")
+  
+  plugin-path = prim("SSL_EXT_pluginpath")
+  
+  candidate-sorts = prim("SSL_EXT_candidatesorts")
+
+  is-newer:
+    (file1, file2) -> <id>
+    where
+      <gt> (<file-exists; modification-time> file1, <file-exists; modification-time> file2) 
+
+strategies
+  
+  editor-init =
+    // Ensure all dynamic rules are properly scoped
+    try(dr-scope-all-end);
+    dr-scope-all-start
+  
+  refresh-workspace-file:
+    path -> <prim("SSL_EXT_refreshresource", path)>
+  
+  string-starts-with-capital =
+    explode-string; Hd; is-upper
+
+strategies
+  
+  origin-term      = prim("SSL_EXT_origin_term", <id>)
+  origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-location  = prim("SSL_EXT_origin_location", <id>)
+  origin-line      = origin-location => (<id>, _, _, _)
+  origin-column    = origin-location => (_, <id>, _, _)
+  origin-strip     = prim("SSL_EXT_origin_strip", <id>)
+  origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+  
+  origin-surrounding-comments =
+    prim("SSL_EXT_origin_surrounding_comments", "DatabaseLang", <id>)
+    
+  origin-documentation-comment =
+    origin-surrounding-comments;
+    filter(string-as-chars(documentation-comment-chars));
+    concat-strings
+  
+  documentation-comment-chars:
+    ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
+  
+  origin-track-forced(s) =
+    ![<id>]; all(s); ?[<id>]
+
+strategies
+
+  desugar-position(desugar|ast):
+    position -> position'
+    where
+      ast'  := <at-position(!<id>{MARKER()}|position)> ast;
+      ast'' := <topdown(repeat(preserve-annos({?x; desugar; not(?x)})))> ast';
+      position' := <position-of-term({?_{a*}; <one(?MARKER())> a*})> ast''
+   
+  at-position(s|position):
+    c#(t*) -> t'
+    where
+      !position => [i | position']
+    where
+      t' := c#(<at-index(at-position(s|position'))> (i, t*))
+
+  at-position(s|position):
+    t -> t'
+    where
+      !position => [];
+      t' := <s> t
+
+  position-of-term(is-term):
+    t -> []
+    where
+      is-term
+  
+  position-of-term(is-term):
+    _#(t*) -> <position-of-term(is-term|0)> t*
+  
+  position-of-term(is-term|start-index):
+    [t | t*] -> position
+    where
+      if i* := <position-of-term(is-term)> t then
+        position := [start-index | i*]
+      else
+        position := <position-of-term(is-term | <inc> start-index)> t*
+      end
+
+  term-at-position(|position):
+    t -> t'
+    where
+      at-position(?t'|position) 
+
+  parent-at-position(|position):
+    t -> t'
+    where
+      !position => [i, _];
+      t' := <subterm-at(|i)> t
+  
+  parent-at-position(|position):
+    t -> <parent-at-position(|position')> t'
+    where
+      !position => [i | position' @ [_, _ | _]];
+      t' := <subterm-at(|i)> t
+
+  subterm-at(|index):
+    _#(t*) -> <index(|<inc> index)> t*
+  
+signature constructors
+
+  COMPLETION : String -> Term
+  NOCONTEXT  : Term   -> Term
+  MARKER     : Term
+
+  // Below are copies of the signatures of the terms used in example
+  // trans/databaselang.str file. These definitions should also be automatically 
+  // generated in the imported include/DatabaseLang.str module. However,
+  // to ensure that the example transformation doesn't break when the
+  // syntax is changed, we also hard-coded them here.
+          
+  Module   : ID * List(Entity)   -> Module
+  Entity   : ID * List(Property) -> Entity
+  Property : ID * Type           -> Property
+  Type     : ID                  -> Type
+
+strategies
+  
+  // Set markers for a given file. Use when checking files from a queued strategy.
+  // Current term: (ast-desugared, errors, warnings, notes) tuple
+  // ast: the root node of the file to set markers on 
+  set-markers(|ast) = prim("SSL_EXT_set_markers", ast)
+
+  // Indicate that one or more files need analysis. 
+  // Current term: ss a list of absolute file paths, or a single absolute file path to analyze
+  queue-analysis = 
+       (is-list; list-loop(queue-analysis))
+    <+ prim("SSL_EXT_queue_analysis")
+
+  // Set the total number of work units to complete. Can be called multiple times. 
+  // Current term: number of work units (int).
+  set-total-work-units = prim("SSL_EXT_set_total_work_units")
+  
+  // Complete one work unit and update progress monitors.
+  // Current term: ignored
+  complete-work-unit = prim("SSL_EXT_complete_work_unit")
+  
+  // Queue a strategy for background processing with a progress indicator.
+  // Current term: the term to pass to the background strategy
+  // s: the strategy, as string
+  // description: name of the task (will be shown in progress view)
+  queue-strategy(|s,description) = prim("SSL_EXT_queue_strategy", s, description)
+  
+  // Return the result of this strategy to indicate a non-completed (backgrounded) analysis.
+  // Editor services (hover, resolve) will be delayed until a complete analysis is performed. 
+  set-analysis-backgrounded = !"BACKGROUNDED"
+  

Added: spoofax-contrib/DatabaseLang/lib/refactor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/lib/refactor-common.generated.str	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,67 @@
+module lib/refactor-common.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+
+strategies //transformation
+
+/**
+ * Replaces elements in a list (once, starting from the right)
+ * @param match strategy for partial list
+ * @param new elements List(b)
+ * @type List(a) -> List(a,b)
+ */
+replace-sublist(match-sublist|new-elems): 
+  list -> <
+    at-suffix(match-sublist;!new-elems) <+
+    (
+      init; 
+      replace-sublist(match-sublist|new-elems);
+      at-end(![<last> list])
+    )
+  > list 
+
+/**
+ * Inserts an element at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list element 
+ * @type Term -> Term
+ */
+insert-elem(|pos, elem)=
+  insert-sublist(|pos, [elem])
+
+/**
+ * Inserts a list of elements at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list elements 
+ * @type Term -> Term
+ */	
+insert-sublist(|pos, elems)=
+  at-position(
+    split-at(|<last> pos);
+    ?(prefix, suffix);
+    <concat>[prefix, elems, suffix]
+    |<init> pos
+  )
+
+
+strategies //user-input
+
+/**
+ * Opens an input dialog for one string value that represents an identifier
+ * The language is used to check if the input value matches the identifier pattern
+ * @type (String, String, String, String) -> String
+ */
+input-dialog:
+  (language, title, label, default-value) -> <prim("SSL_EXT_newnamedialog", language, title, label, default-value)>
+  
+input-dialog:
+  (title, label, default-value) -> <input-dialog>("", title, label, default-value)
+
+strategies //pp-table
+	
+get-pp-table=
+  import-term(include/DatabaseLang.generated.pp.af)
+	

Added: spoofax-contrib/DatabaseLang/lib/spoofaxlang.jar
==============================================================================
Binary file. No diff available.

Added: spoofax-contrib/DatabaseLang/plugin.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/plugin.xml	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<?eclipse version="3.0"?>
+
+<plugin>
+       <extension point="org.eclipse.imp.runtime.languageDescription">
+          <language extensions="edb" description="DatabaseLang" language="DatabaseLang" derivedFrom="DynamicRoot" validator="DatabaseLang.DatabaseLangValidator" validatorClass="DatabaseLang.DatabaseLangValidator"></language>
+       </extension>
+       <extension id="DatabaseLang.parser" name="DatabaseLang Parser" point="org.eclipse.imp.runtime.parser">
+          <parser class="DatabaseLang.DatabaseLangParseController" language="DatabaseLang">
+          </parser>
+       </extension>    
+    </plugin>
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/spx.config
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/spx.config	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,7 @@
+Configuration
+	Includes
+		RootDirectory 		syntax
+	
+	
+	CodeGeneration 
+		OutputDirectory		.shadowdir
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/syntax/Common.spx
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/syntax/Common.spx	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,61 @@
+package languages.DatabaseLang
+
+module Common
+
+  lexical syntax
+  
+    [a-zA-Z\_][a-zA-Z0-9\_]* -> ID
+    "-"? [0-9]+          -> INT
+    
+    "\"" StringChar* "\"" -> STRING
+    ~[\"\n]               -> StringChar
+    "\\\""                -> StringChar
+    BackSlashChar         -> StringChar
+    "\\"                  -> BackSlashChar
+    
+    [\ \t\n\r] -> LAYOUT
+    
+    [\*]                             -> CommentChar
+    "/*" (~[\*] | CommentChar)* "*/" -> LAYOUT
+    "//" ~[\n\r]* ([\n\r] | EOF)     -> LAYOUT
+    
+    -> EOF
+  
+ 	lexical syntax 
+ 		
+ 		"KEY"					  			-> RESERVED
+ 		"FOREIGN"			  			-> RESERVED
+ 		"PRIMARY"	  					-> RESERVED
+ 		"REFERENCES"	  			-> RESERVED
+ 		"CONSTRAINT"	  			-> RESERVED
+  	"TABLE"  							-> RESERVED
+  	"SCHEMA" 							-> RESERVED
+  	"int" 	 							-> RESERVED
+  	"uniqueidentifier" 	 	-> RESERVED
+  	"datetime" 	 					-> RESERVED
+  	
+  	 RESERVED 						-> ID{reject}
+  	
+  lexical restrictions
+  
+    %% Ensure greedy matching for lexicals
+  
+    CommentChar   -/- [\/]
+    INT           -/- [0-9]
+    ID            -/- [a-zA-Z0-9\_]
+    
+    %% EOF may not be followed by any char
+    
+    EOF           -/- ~[]
+
+    %% Backslash chars in strings may not be followed by " 
+    
+    BackSlashChar -/- [\"]
+
+  context-free restrictions
+  
+    %% Ensure greedy matching for comments
+
+    LAYOUT? -/- [\ \t\n\r]
+    LAYOUT? -/- [\/].[\/]
+    LAYOUT? -/- [\/].[\*]

Added: spoofax-contrib/DatabaseLang/syntax/DatabaseLang.spx
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/syntax/DatabaseLang.spx	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,108 @@
+package languages.DatabaseLang 
+
+module syntaxdefinition
+
+   context-free start-symbols
+    Start
+
+  context-free syntax
+    "SCHEMA"  ID TableDef*																			-> Start {"DatabaseSchema"}
+    "CREATE" "TABLE"  ID "(" {TableProperty ","}* ")" ";"				-> TableDef {"TableDef"}
+    ID  DBType							         														-> TableProperty{"ColumnDef"}
+    "CONSTRAINT"  ID  RefConstraint															-> TableProperty{"ConstraintDef"}
+    "PRIMARY" "KEY" "(" ID ")"	 																-> RefConstraint{"PKConstraint"}
+    "FOREIGN" "KEY"  "(" ID ")" "REFERENCES"	ID "(" ID ")"			-> RefConstraint{"FKConstraint"} 
+     
+   
+	 	
+  context-free syntax 
+		"int"							 -> DBType{"IntegerDBType",prefer}
+		"varchar" 				 -> DBType{"StringDBType",  prefer}
+		"datetime" 				 -> DBType{"DateTimeDBType",prefer}
+		"uniqueidentifier" -> DBType{"UuidDBType",    prefer}		 
+
+language General properties
+  name          : DatabaseLang 
+  id            : DatabaseLang 
+
+
+
+module languagebuilders 
+		imports editor.generated
+  
+		
+	 	rules
+      		
+			// Prints the abstract syntax ATerm of a selection.
+  		prettyprint-aterm:
+    		(selected, position, ast, path, project-path) -> (filename, result)
+    		with
+      		filename := <guarantee-extension(|"pp.edb")> path;
+      		result   := <pp-dblang>selected // we just return the input term
+
+
+module  prettyprinter
+	
+	rules	
+		pp-dblang: 
+			DatabaseSchema(x, td*) ->
+			$[SCHEMA [x]  
+  			[<pp-dblang> td*]
+			 ]	
+			
+		pp-dblang: 
+				TableDef(x, c*) -> 
+  			$[CREATE TABLE [x](  
+  					[<pp-dblang;separate-by(|","); concat-strings> c*]
+  			);
+  			]
+  		
+		pp-dblang : 
+				ColumnDef(x, t) -> 
+				$[[x] [<pp-db-type>t]
+    		]
+		pp-dblang:
+				ConstraintDef(x , refconstraint) -> 
+    		$[CONSTRAINT [x] [<pp-dblang>refconstraint]
+    		]
+			
+		pp-dblang:
+			FKConstraint(x, tName, cName) ->  
+			$[FOREIGN KEY ([x]) REFERENCES [tName]([cName])]
+			
+		pp-dblang: 
+			PKConstraint(cName) ->   
+			$[PRIMARY KEY ([cName])]
+		
+		pp-dblang : 
+			t* -> <map(pp-dblang)>t*
+			
+
+	rules 
+		pp-db-type: StringDBType() -> "varchar"
+
+		pp-db-type: IntegerDBType() -> "int"
+
+		pp-db-type: DateTimeDBType() -> "datetime"
+  	
+		pp-db-type: UuidDBType()-> "uniqueidentifier"
+
+			
+
+module adapter  
+
+	rules
+		unique-column-name = !"_ID"
+		
+		primary-key-name = is-string ; ! $[PK_[<id>]]
+		
+		foreign-key-name  = ?(cname , tablename) ; ! $[FK_[cname]_[tablename]_[<unique-column-name>]]
+		
+		foeirgn-key-constraint-def : 
+			(cname , tablename) ->  FKConstraint( cname , tablename , <unique-column-name>)
+			
+		unique-key-column-def = 
+			![ColumnDef(<unique-column-name>  , UuidDBType()), 
+				ConstraintDef(<unique-column-name;primary-key-name>, PKConstraint(<unique-column-name> ))
+			 ]
+			 	
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/test/example.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/test/example.aterm	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,16 @@
+DatabaseSchema(
+  "example"
+, [ Table(
+      "User"
+    , [ Column("id", UuidDBType())
+      , Column("name", StringDBType())
+      , Column("password", StringDBType())
+      , Reference("url", TableType("URL"))
+      ]
+    )
+  , Table(
+      "URL"
+    , [Column("id", UuidDBType()), Column("url", StringDBType())]
+    )
+  ]
+)
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/test/example.edb
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/test/example.edb	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,15 @@
+Schema example
+
+Table User 
+  id			 : uniqueidentifier 
+  name     : varchar
+  password : varchar
+	url 		-> URL 
+
+
+Table URL 
+  id			 : uniqueidentifier 
+  url      : varchar
+
+
+  

Added: spoofax-contrib/DatabaseLang/test/test.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/test/test.aterm	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,34 @@
+DatabaseSchema(
+  "test"
+, [ TableDef(
+      "Person"
+    , [ ColumnDef("ID", UuidDBType())
+      , ConstraintDef("te__st", FKConstraint("a", "Person", "ID"))
+      , ColumnDef("name", StringDBType())
+      , ColumnDef("firstname", StringDBType())
+      , ColumnDef("bithdate", DateTimeDBType())
+      , ConstraintDef("test", PKConstraint("ID"))
+      ]
+    )
+  , TableDef("Person", [ColumnDef("ID", UuidDBType())])
+  , TableDef(
+      "Person"
+    , [ ColumnDef("_ID", UuidDBType())
+      , ConstraintDef("PKID", PKConstraint("_ID"))
+      , ColumnDef("name", StringDBType())
+      , ColumnDef("firstname", StringDBType())
+      , ColumnDef("bithdate", DateTimeDBType())
+      , ColumnDef("ownedCar", UuidDBType())
+      , ConstraintDef("FKownedCarCarID", FKConstraint("ownedCar", "Car", "_ID"))
+      ]
+    )
+  , TableDef(
+      "Car"
+    , [ ColumnDef("_ID", UuidDBType())
+      , ConstraintDef("PK__ID", PKConstraint("_ID"))
+      , ColumnDef("make", StringDBType())
+      , ColumnDef("mode", StringDBType())
+      ]
+    )
+  ]
+)
\ No newline at end of file

Added: spoofax-contrib/DatabaseLang/test/test.edb
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/test/test.edb	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,34 @@
+SCHEMA test  
+CREATE TABLE Person (
+		ID uniqueidentifier ,
+		CONSTRAINT te__st FOREIGN KEY (a) REFERENCES  Person(ID),
+		name varchar ,  
+		firstname varchar,
+		bithdate datetime,
+		CONSTRAINT test PRIMARY KEY (ID)  
+	);  
+				
+	
+	CREATE	TABLE Person (
+		ID uniqueidentifier 
+	);			
+		
+
+CREATE TABLE Person(  
+		_ID uniqueidentifier
+		,CONSTRAINT PKID PRIMARY KEY (_ID)
+		,name varchar
+		,firstname varchar
+		,bithdate datetime
+		,ownedCar uniqueidentifier
+		,CONSTRAINT FKownedCarCarID FOREIGN KEY (ownedCar) REFERENCES Car(_ID)
+		
+);
+CREATE TABLE Car(  
+		_ID uniqueidentifier
+		,CONSTRAINT PK__ID PRIMARY KEY (_ID)
+		,make varchar
+		,mode varchar
+		
+);
+

Added: spoofax-contrib/DatabaseLang/test/test.pp.edb
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/test/test.pp.edb	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,32 @@
+SCHEMA test  
+CREATE TABLE Person(  
+		ID uniqueidentifier
+		,CONSTRAINT te__st FOREIGN KEY (a) REFERENCES Person(ID)
+		,name varchar
+		,firstname varchar
+		,bithdate datetime
+		,CONSTRAINT test PRIMARY KEY (ID)
+		
+);
+CREATE TABLE Person(  
+		ID uniqueidentifier
+		
+);
+CREATE TABLE Person(  
+		_ID uniqueidentifier
+		,CONSTRAINT PKID PRIMARY KEY (_ID)
+		,name varchar
+		,firstname varchar
+		,bithdate datetime
+		,ownedCar uniqueidentifier
+		,CONSTRAINT FKownedCarCarID FOREIGN KEY (ownedCar) REFERENCES Car(_ID)
+		
+);
+CREATE TABLE Car(  
+		_ID uniqueidentifier
+		,CONSTRAINT PK__ID PRIMARY KEY (_ID)
+		,make varchar
+		,mode varchar
+		
+);
+

Added: spoofax-contrib/DatabaseLang/trans/databaselang.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/DatabaseLang/trans/databaselang.str	Sat May 21 15:12:44 2011	(r22937)
@@ -0,0 +1,18 @@
+module databaselang
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  .shadowdir/languages/DatabaseLang/-
+rules 
+  
+  // Prints the abstract syntax ATerm of a selection.
+  generate-aterm:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"aterm")> path;
+      result   := selected // we just return the input term
+		where
+			<debug(!"PP : ")> <pp-dblang>selected      
+      

From M.A.Akhter at student.tudelft.nl  Sat May 21 19:07:01 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sat, 21 May 2011 17:07:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22938 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax: syntax
	trans/utils
Message-ID: <20110521170701.7E2017F804F@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Sat May 21 17:07:01 2011
New Revision: 22938
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22938&sc=1

Log:
* Def file is now recognized as a known file to process by the parser adapter
* restricting "language" as a reserved keyword 
* fixed import name => Common = SPXCommon in Naming.sdf

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/Naming.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SPXCommon.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/Naming.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/Naming.sdf	Sat May 21 15:12:44 2011	(r22937)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/Naming.sdf	Sat May 21 17:07:01 2011	(r22938)
@@ -1,9 +1,11 @@
 module Naming
 
-imports Common
+imports SPXCommon
 
 exports
 
+	
+	 
 context-free syntax
   
   Namespace "@=" Symbol[[SDF]] -> Symbol[[SDF]] {cons("namespacedef")}

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SPXCommon.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SPXCommon.sdf	Sat May 21 15:12:44 2011	(r22937)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/SPXCommon.sdf	Sat May 21 17:07:01 2011	(r22938)
@@ -13,7 +13,7 @@
     BackSlashChar         -> StringChar
     "\\"                  -> BackSlashChar
     
-    [\ \t\n\r] -> LAYOUT
+    [\ \t\n\r] -> LAYOUT 
     
     [\*]                             -> CommentChar
     "/*" (~[\*] | CommentChar)* "*/" -> LAYOUT
@@ -50,11 +50,13 @@
 		"main"
 		"module" 
 		"package" 
-		"imports"	-/- [A-Za-z0-9\_]
+		"imports"	
+		"language" -/- [A-Za-z0-9\_]
 		 
 
 	lexical syntax     
     
+    "language"          -> Reserved
     "project"           -> Reserved
     "retain"            -> Reserved
     "with"              -> Reserved

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str	Sat May 21 15:12:44 2011	(r22937)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/path.str	Sat May 21 17:07:01 2011	(r22938)
@@ -15,7 +15,7 @@
 	has-known-extensions  =
 		?file-path ;
 		get-known-legacy-extensions;
-		filter(?ext; <has-extension(|ext)>file-path);
+		filter({ext : ?ext; <has-extension(|ext)>file-path});
 		is-not-empty-list;
 		!file-path
 	<+

From M.A.Akhter at student.tudelft.nl  Sat May 21 19:08:16 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sat, 21 May 2011 17:08:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22939 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen:
	sdf str
Message-ID: <20110521170816.81B63CC043@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Sat May 21 17:08:16 2011
New Revision: 22939
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22939&sc=1

Log:
* updated lagacy import handler with updated Scope Tree

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Sat May 21 17:07:01 2011	(r22938)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Sat May 21 17:08:16 2011	(r22939)
@@ -107,12 +107,13 @@
  		<is-string>name
  	
  	sdf-import-adapter : legacy-artifact at Name(name)  -> 	result
-	where 
- 			if(<UsedLegacyArtifacts>(Globals(), name) => Unresolved()) then
- 				result := [] 
- 			else 
- 				result :=  'module(unparameterized(name)) 
-			end 
+ 	where 
+ 		//Importing Legacy artifact only if it is a SDF or DEF file 	
+		if <has-extension(|"sdf") + has-extension(|"def")><UsedLegacyArtifacts>(Globals(), name) then  
+				result :=  'module(unparameterized(name))
+		else
+				result :=  [] 	
+		end 
 			
 
 rules

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Sat May 21 17:07:01 2011	(r22938)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Sat May 21 17:08:16 2011	(r22939)
@@ -148,12 +148,19 @@
 			
 	to-str-import: 
 		legacy-artifact at Name(name)  -> 	result 
- 	where
- 			if(<UsedLegacyArtifacts>(Globals() , name) => Unresolved()) then
- 				result := [Import(name)]  // Probably lib legacy imports . SInce, it is unresolved, no signature is generated for this import
- 			else 
- 				result :=  [Import(name) , Import(<get-signature-file-name>name)] 
-			end	
+ 		where
+			if(<UsedLegacyArtifacts>(Globals() , name) => Unresolved()) 
+						<+ 
+					<has-extension(|"str")+has-extension(|"str")><UsedLegacyArtifacts>(<GetEnclosingPackageName> , name
+				)   then
+				// Importing legacy artifact. Please note that , for legacy artifact, signatrue is not included
+				//	as it is taken care of during signature generation of _Internal module for every package. 
+				result :=  [Import(name)] 
+			else
+				result :=  []
+			end
+				
+		
  		
 	to-str-import: 
 		Module(q at QName(qnameparts*))->[Import(str-import),Import(sig-import)]

From L.C.L.Kats at tudelft.nl  Sun May 22 14:23:01 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sun, 22 May 2011 12:23:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22940 - in
	spoofax-imp/trunk/org.strategoxt.imp.testing: . editor trans
Message-ID: <20110522122301.24B6B2B8010@mx2.tudelft.nl>

Author: LennartKats
Date: Sun May 22 12:23:00 2011
New Revision: 22940
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22940&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.testing/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.testing/editor/Spoofax-Testing-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.testing/trans/file-resolving.str
   spoofax-imp/trunk/org.strategoxt.imp.testing/trans/spoofax_testing.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/build.generated.xml	Sat May 21 17:08:16 2011	(r22939)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/build.generated.xml	Sun May 22 12:23:00 2011	(r22940)
@@ -1,13 +1,13 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
 <project name="build.generated">
-        <property name="external_classpath" value=""/>        
+
         <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
         <target name="spoofaximp.default.ctree" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.ctree,sdf2imp,refresh"/>
         <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
     
         <!-- Initialization -->
-        <available file="${src-gen}/org/strategoxt/imp/testing/strategies/Main.java" property="java.jar.enabled"/>
+        <available file="${build}/org/strategoxt/imp/testing/strategies/Main.class" property="java.jar.enabled"/>
         <condition property="java.jar.import" value="-la org.strategoxt.imp.testing.strategies" else="">
             <isset property="java.jar.enabled"/>
         </condition>
@@ -19,9 +19,12 @@
         <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
             <isset property="externaldef"/>
         </condition>
-        <condition property="externaljarimport" value=":${externaljar}" else="">
+        <condition property="externaljarimport1" value=":${externaljar}" else="">
             <isset property="externaljar"/>
         </condition>
+        <condition property="externaljarimport2" value=":${externaljarx}" else="">
+            <isset property="externaljarx"/>
+        </condition>
         <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
             <isset property="eclipse.running"/>
         </condition>
@@ -378,7 +381,7 @@
                 <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
                 <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
             </antcall>
-            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}:${external_classpath}" srcdir="${src-gen}" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <!-- copy imported terms -->
             <copy todir="${build}/trans">
                 <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
@@ -489,9 +492,9 @@
 	        <javac destdir="${build}" source="1.5" target="1.5" debug="on">
 	    		<!-- attribute in javac: srcdir="${src-gen}" -->
 	    		<src path="${src-gen}"/>
-	        	<!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"  -->
+	        	<!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"  -->
 	        	<classpath>
-	        		<pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}:${external_classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+	        		<pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
 	        		<pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
 	        		<pathelement location="utils/stratego-debug-runtime-java.jar"/>
 	        	</classpath>
@@ -538,7 +541,7 @@
 	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
 	        <java classname="org.strategoxt.strj.Main" failonerror="true">
 	            <arg value="-i"/>
-	            <arg value="${trans-debug}/trans/${strmodule}.{strj.input.file.type}"/>
+	            <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
 	            <arg value="-o"/>
 	            <arg value="${build.stratego.outputfile}"/>
 	            <arg value="-p"/>
@@ -594,4 +597,4 @@
             <delete file="${include}/${sdfmodule}.def"/>
             <delete dir="${src-gen}/trans"/>
         </target>
-    </project>
+    </project>
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/editor/Spoofax-Testing-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/editor/Spoofax-Testing-Completions.esv	Sat May 21 17:08:16 2011	(r22939)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/editor/Spoofax-Testing-Completions.esv	Sun May 22 12:23:00 2011	(r22940)
@@ -1,6 +1,6 @@
 module Spoofax-Testing-Completions
 
-imports Spoofax-Testing-Completions.generated
+//imports Spoofax-Testing-Completions.generated
 
 completions
                                                                    

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/trans/file-resolving.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/trans/file-resolving.str	Sat May 21 17:08:16 2011	(r22939)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/trans/file-resolving.str	Sun May 22 12:23:00 2011	(r22940)
@@ -52,7 +52,8 @@
           current-path         := path
           current-project-path := project-path
         ) ;
-        proposals := <propose-completion> node
+        proposals := <propose-completion> node;
+        not([])
       |}
 
   propose-completion :

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/trans/spoofax_testing.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/trans/spoofax_testing.str	Sat May 21 17:08:16 2011	(r22939)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/trans/spoofax_testing.str	Sun May 22 12:23:00 2011	(r22940)
@@ -103,7 +103,7 @@
        language (<spt-get-default-language>)
        
        test First test
-         [[), " ", "test", " ]]\n"
+         [[), " ", "test", " ]]\n\n"
     ]]
 	
   editor-complete:

From L.C.L.Kats at tudelft.nl  Sun May 22 18:41:44 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sun, 22 May 2011 16:41:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22941 - in
	spoofax-imp/trunk/org.strategoxt.imp.testing: editor syntax
Message-ID: <20110522164144.8ADF4CC1EB@mx4.tudelft.nl>

Author: LennartKats
Date: Sun May 22 16:41:44 2011
New Revision: 22941
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22941&sc=1

Log:
Testing syntax fixes for problems triggered by parser improvements

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.testing/editor/Spoofax-Testing-Syntax.esv
   spoofax-imp/trunk/org.strategoxt.imp.testing/syntax/Spoofax-Testing.sdf

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/editor/Spoofax-Testing-Syntax.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/editor/Spoofax-Testing-Syntax.esv	Sun May 22 12:23:00 2011	(r22940)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/editor/Spoofax-Testing-Syntax.esv	Sun May 22 16:41:44 2011	(r22941)
@@ -11,8 +11,8 @@
   // Fences (used for matching,            
   // inserting, indenting brackets):       
   fences                                 : [ ]
-                                           // [[ ]]
-                                           // [[[ ]]]
+                                           [[ ]
+                                           [[[ ]
                                            { }
                                            ( )
                                            

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/syntax/Spoofax-Testing.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/syntax/Spoofax-Testing.sdf	Sun May 22 12:23:00 2011	(r22940)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/syntax/Spoofax-Testing.sdf	Sun May 22 16:41:44 2011	(r22941)
@@ -52,16 +52,12 @@
     Strategy   -> TestStratego
 
     STRING                               -> TestStratego {reject}
-    "(" STRING ")"                       -> TestStratego {reject} %% (e.g., refactor ("STRING"))
     "[" {Strategy ","}* "]"              -> TestStratego {reject}
     "[" {Strategy ","}* "|" Strategy "]" -> TestStratego {reject}
+    "(" {Strategy ","}* ")"              -> TestStratego {reject}
     Strategy "=>" Term                   -> TestStratego {reject}
-    "build"                              -> TestStratego {reject}
-    "resolve"                            -> TestStratego {reject}
-    "refactor"                           -> TestStratego {reject}
-    "complete"                           -> TestStratego {reject}
-    "parse"                              -> TestStratego {reject}
-    "run"                                -> TestStratego {reject}
+    ID                                   -> TestStratego {reject}
+    INT                                  -> TestStratego {reject}
     
     "build"                              -> Term {reject}
     "resolve"                            -> Term {reject}

From m.dejonge at tudelft.nl  Sun May 22 19:05:38 2011
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Sun, 22 May 2011 17:05:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22942 -
	spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client
Message-ID: <20110522170538.4E6C2108C052@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Sun May 22 17:05:38 2011
New Revision: 22942
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22942&sc=1

Log:
Bugfix in left associativity filter (issue 379)

Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java	Sun May 22 16:41:44 2011	(r22941)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/Disambiguator.java	Sun May 22 17:05:38 2011	(r22942)
@@ -785,7 +785,7 @@
 				}
 				rest[rest.length - 1] = last;
 				ambiguityManager.increaseAmbiguityCount();
-				return ParseNode.createAmbNode(rest);
+				return new ParseNode(t.getLabel(), rest, AbstractParseNode.PARSENODE);
 			} else {
 				throw new FilterException(parser);
 			}

From L.C.L.Kats at tudelft.nl  Sun May 22 21:48:52 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sun, 22 May 2011 19:48:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22943 -
	strategoxt-java-backend/trunk/java
Message-ID: <20110522194852.406F4CC1EA@mx4.tudelft.nl>

Author: LennartKats
Date: Sun May 22 19:48:50 2011
New Revision: 22943
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22943&sc=1

Log:
new-libs

Modified:
   strategoxt-java-backend/trunk/java/spoofax-libs.jar

Modified: strategoxt-java-backend/trunk/java/spoofax-libs.jar
==============================================================================
Binary file (source and/or target). No diff available.

From tobivollebregt at gmail.com  Mon May 23 12:47:02 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 23 May 2011 10:47:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22944 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: editor syntax
Message-ID: <20110523104702.E808C108C030@mx3.tudelft.nl>

Author: tvo
Date: Mon May 23 10:47:02 2011
New Revision: 22944
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22944&sc=1

Log:
TemplateLang: colorer and completion fixes

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Common.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv	Sun May 22 19:48:50 2011	(r22943)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Colorer.esv	Mon May 23 10:47:02 2011	(r22944)
@@ -8,8 +8,6 @@
   //
   // See the imported file for a brief introduction and examples.
 
-  SDF-StrCon._            : blue
-
   _.String                : template
   _.Escape                : 127 0 85 bold
   _.Layout                : template
@@ -17,6 +15,7 @@
   PlaceholderText1        : template
   PlaceholderText2        : template
   _.Placeholder           : _ bold
+  PlaceholderSort.Sort    : _ bold
+  PlaceholderSuffix._     : _ bold
 
-  template = 0 0 255
-  // 240 240 240
+  template = 0 0 255 // 240 240 240

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Completions.esv	Sun May 22 19:48:50 2011	(r22943)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/Template-Completions.esv	Mon May 23 10:47:02 2011	(r22944)
@@ -8,12 +8,19 @@
   //
   // See the imported file for a brief introduction and examples.
 
+  // TemplateLang completions
   completion template TemplateProduction : "template" =
+    <Sort> "." <Cons> " = <<" (cursor) ">>" (blank)
+
+  completion template TemplateProduction : "multiline template" =
     <Sort> "." <Cons> " = <<\n\t" (cursor) "\n>>" (blank)
 
   completion template TemplatePart1 : "placeholder" = "<" <text> ":" <Sort> ">"
   completion template TemplatePart2 : "placeholder" = "[" <text> ":" <Sort> "]"
 
+  completion template PlaceholderOption : "separator" "=\"" (cursor) "\""
+  completion template PlaceholderOptions : "separator" = "; separator=\"" (cursor) "\""
+
 completions
   // Semantic (identifier) completion:
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Common.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Common.sdf	Sun May 22 19:48:50 2011	(r22943)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Common.sdf	Mon May 23 10:47:02 2011	(r22944)
@@ -4,6 +4,8 @@
 
   lexical syntax
 
+    [a-zA-Z]* "CONTENTCOMPLETE" [0-9]+ -> CONTENTCOMPLETE {avoid}
+
     [a-zA-Z]                          -> ID
     [a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9] -> ID
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf	Sun May 22 19:48:50 2011	(r22943)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/Template.sdf	Mon May 23 10:47:02 2011	(r22944)
@@ -9,7 +9,12 @@
 exports
   context-free start-symbols
     Module
-    Template %% Workaround StrategoXT/862
+
+  context-free syntax
+    %% tweaks for content completion
+    CONTENTCOMPLETE -> TemplateProduction {recover, cons("WATER")}
+    CONTENTCOMPLETE -> PlaceholderOption  {recover, cons("WATER")}
+    CONTENTCOMPLETE -> PlaceholderOptions {recover, cons("WATER")}
 
   context-free syntax
     %% references to productions using sort.cons notation in priority specification

From tobivollebregt at gmail.com  Mon May 23 13:36:17 2011
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 23 May 2011 11:36:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22945 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20110523113617.B3AF8CC146@mx4.tudelft.nl>

Author: tvo
Date: Mon May 23 11:36:17 2011
New Revision: 22945
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22945&sc=1

Log:
Runtime: escape HTML special chars in content proposal description

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposal.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposal.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposal.java	Mon May 23 10:47:02 2011	(r22944)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposal.java	Mon May 23 11:36:17 2011	(r22945)
@@ -80,7 +80,11 @@
 
 	public String getAdditionalProposalInfo() {
 		// TODO: support newlines and tabs in proposal descriptions?
-		return completion.getDescription();
+		return escapeHtml(completion.getDescription());
+	}
+	
+	private String escapeHtml(String input) {
+		return input.replace("&", "&amp;").replace("<", "&lt;").replace(">", "&gt;");
 	}
 
 	private Point proposalPartsToSelection(IDocument document, IStrategoList proposalParts, int offset) {

From n.bruning at student.tudelft.nl  Mon May 23 15:01:43 2011
From: n.bruning at student.tudelft.nl (Nathan Bruning)
Date: Mon, 23 May 2011 13:01:43 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22946 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans
Message-ID: <20110523130145.707102B8012@mx2.tudelft.nl>

Author: NathanBruning
Date: Mon May 23 13:01:43 2011
New Revision: 22946
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22946&sc=1

Log:
Enable already-bound warnings for assignments using "=>"

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	Mon May 23 11:36:17 2011	(r22945)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	Mon May 23 13:01:43 2011	(r22946)
@@ -704,12 +704,15 @@
       map(!(<id>, "Build symbol in match pattern")) => builds;
       require([])
 
-  constraint-warning:
-    Assign(v @ Var(x), _) -> (x, $[Variable '[x]' may be bound already])
-    where
-      Var(x') := <declaration-of> v;
-      require(<origin-equal(|x)> x')
-
+  constraint-warning: elem -> (x, $[Variable '[x]' may be bound already]) 
+    where v at Var(x) := <get-assign-var> elem; 
+          Var(x') := <declaration-of> v;
+          require(<origin-equal(|x)> x')
+        
+  get-assign-var =
+    ?Assign(<id>, _)
+    <+ ?AM(_, <id>)
+        
   constraint-warning:
     Var(x) -> (x, $[Unparenthesized constructor: use '[x]()' instead])
     where

From M.A.Akhter at student.tudelft.nl  Mon May 23 15:40:26 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Mon, 23 May 2011 13:40:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22947 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	analyze/sdf codegen/sdf codegen/str context context/sdf utils
Message-ID: <20110523134026.5EA592B8012@mx2.tudelft.nl>

Author: MdAdilAkhter
Date: Mon May 23 13:40:26 2011
New Revision: 22947
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22947&sc=1

Log:
* change unknown sort to warning. 
* fixed the issue with importing legacy imports
* parse-adapter now will start from the project-path instead of current directory 
* adding run-strategy in code contract

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/parse-adapter.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str	Mon May 23 13:01:43 2011	(r22946)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str	Mon May 23 13:40:26 2011	(r22947)
@@ -14,7 +14,7 @@
 		SDFSection(ast) -> <analyze-sdf-errors>ast 
 		where
 			<debug-analysis>$[ErrorChecking | SDF Section : [<pp-aterm>]]
-   
+     
 	analyze-sdf-errors : 
 		ast -> (error'*, warning'*, [])
 		where
@@ -48,7 +48,7 @@
 // Limited exisiting sort checking  
 rules  //global checks
  
-  context-free-syntax-sort-error:
+  context-free-syntax-warning:
     sort(x) -> (x, $[No definition for [x]])
     where
       not(<resolve-sdf-declarations> x) 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Mon May 23 13:01:43 2011	(r22946)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Mon May 23 13:40:26 2011	(r22947)
@@ -107,9 +107,11 @@
  		<is-string>name
  	
  	sdf-import-adapter : legacy-artifact at Name(name)  -> 	result
+ 	where debug
  	where 
- 		//Importing Legacy artifact only if it is a SDF or DEF file 	
-		if <has-extension(|"sdf") + has-extension(|"def")><UsedLegacyArtifacts>(Globals(), name) then  
+ 		if <has-extension(|"sdf")+has-extension(|"def")><UsedLegacyArtifacts>(<GetEnclosingPackageName> , name)then  
+				// Importing Legacy artifact only if it is a SDF or DEF file
+				// Assumption : unresolved imports refers to stratego lib and declared in global scope. 
 				result :=  'module(unparameterized(name))
 		else
 				result :=  [] 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Mon May 23 13:01:43 2011	(r22946)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Mon May 23 13:40:26 2011	(r22947)
@@ -151,17 +151,15 @@
  		where
 			if(<UsedLegacyArtifacts>(Globals() , name) => Unresolved()) 
 						<+ 
-					<has-extension(|"str")+has-extension(|"str")><UsedLegacyArtifacts>(<GetEnclosingPackageName> , name
-				)   then
+					<has-extension(|"str")+has-extension(|"str")><UsedLegacyArtifacts>(<GetEnclosingPackageName> , name)
+			then
 				// Importing legacy artifact. Please note that , for legacy artifact, signatrue is not included
-				//	as it is taken care of during signature generation of _Internal module for every package. 
+				// as it is taken care of during signature generation of _Internal module for every package. 
 				result :=  [Import(name)] 
 			else
 				result :=  []
 			end
-				
 		
- 		
 	to-str-import: 
 		Module(q at QName(qnameparts*))->[Import(str-import),Import(sig-import)]
 		where 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/parse-adapter.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/parse-adapter.str	Mon May 23 13:01:43 2011	(r22946)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/parse-adapter.str	Mon May 23 13:40:26 2011	(r22947)
@@ -13,21 +13,24 @@
 imports
 	utils/path
 	utils/debug
-	utils/cache	
+	utils/cache
+	utils/contract	
 	config
 	common
+	
 rules
 
 	parse-spx-sources : 
 		(sourcedir , searchOption) -> <id>
 		where
 			{| current-working-root-dir :  
-				rules(
-					current-working-root-dir  := <getcwd>
-				);
-				<chdir>sourcedir;
-				<parse-spx-compilationUnits(|searchOption)> <getcwd>;
-				<chdir> <current-working-root-dir>
+					rules(
+						current-working-root-dir  := <get-project-path>
+					);
+					if run-strategy( <chdir>sourcedir , fail | $[Warning | Failed to change current directory to : [<pp-aterm>sourcedir]]) then 
+						<parse-spx-compilationUnits(|searchOption)> <getcwd>;
+						run-strategy( <chdir> <current-working-root-dir> , fail | $[Warning | Failed  to change current directory to : [<pp-aterm><current-working-root-dir>]])
+					end
 			|}
 		
 	parse-spx-compilationUnits(|search-option) = 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Mon May 23 13:01:43 2011	(r22946)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Mon May 23 13:40:26 2011	(r22947)
@@ -54,7 +54,7 @@
 
 
 	declare-sdf-definition:
-    renamed-module(x, renamings(y)) -> <id>
+    renamings(y) -> <id>
     where
       <all(try(?symbol(_, <id>); declare-sdf-simple-definition))> y
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str	Mon May 23 13:01:43 2011	(r22946)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str	Mon May 23 13:40:26 2011	(r22947)
@@ -37,7 +37,12 @@
 	 
 	
 	with-verification (preconditions, s , postconditions) = where(preconditions) ; s ; where(postconditions) <+ fail
+
+
+rules
 	
+	run-strategy(  s  , on-fail | msg) = s <+  <debug> msg ; on-fail
+	 
 rules
 	String = is-string 
 	

From L.C.L.Kats at tudelft.nl  Mon May 23 16:25:05 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 23 May 2011 14:25:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22948 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20110523142505.17BAECC140@mx4.tudelft.nl>

Author: LennartKats
Date: Mon May 23 14:25:04 2011
New Revision: 22948
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22948&sc=1

Log:
Don't set char set for existing output files; not allowed apparently

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	Mon May 23 13:40:26 2011	(r22947)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	Mon May 23 14:25:04 2011	(r22948)
@@ -387,7 +387,7 @@
 			throw new RuntimeException(e);
 		}
 		if (file.exists()) {
-			file.setCharset("UTF-8", null);
+			// UNDONE: file.setCharset("UTF-8", null); // not allowed for existing file?
 			file.setContents(resultStream, true, true, null);
 		} else {
 			createDirs(file.getParent());

From M.A.Akhter at student.tudelft.nl  Mon May 23 17:44:36 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Mon, 23 May 2011 15:44:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22949 - in
	spoofax-contrib/Lawoco: . lib
Message-ID: <20110523154436.461167F8011@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Mon May 23 15:44:34 2011
New Revision: 22949
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22949&sc=1

Log:
* added java15prefixed.def to enable java expression in Lawoco.
* updated the Lawoco syntax to extend property with initializer (JAVAExpr). right now, imports+others related to Java is commented out so that it works as before.
* build file is updated with -Idef . Again, it is currently commented out.

So, To turn on Java15 Expression, uncomment following .

1] Build.main.xml => uncomment build.sdf.imports that has -Idef specified. 
2] Lawoco.spx => uncomment  a) Import to Java15Prefixed.  b) Production named "PropertyWithInit"

Added:
   spoofax-contrib/Lawoco/lib/Java15Prefixed.def
Modified:
   spoofax-contrib/Lawoco/build.main.xml
   spoofax-contrib/Lawoco/lib/spoofaxlang.jar
   spoofax-contrib/Lawoco/spx.config

Modified: spoofax-contrib/Lawoco/build.main.xml
==============================================================================
--- spoofax-contrib/Lawoco/build.main.xml	Mon May 23 14:25:04 2011	(r22948)
+++ spoofax-contrib/Lawoco/build.main.xml	Mon May 23 15:44:34 2011	(r22949)
@@ -21,8 +21,12 @@
         <property name="dist" location="bin/dist"/>
         
         <!-- Imports -->
-        <property name="build.sdf.imports" value="-I &quot;${basedir}/.shadowdir&quot;"/>
-		<property name="build.stratego.args" value="
+				<property name="build.sdf.imports" value="-I &quot;${basedir}/.shadowdir&quot;"/> 
+				<!-- 
+						<property name="build.sdf.imports" value="-I &quot;${basedir}/.shadowdir&quot; -Idef &quot;${basedir}/lib/Java15Prefixed.def&quot;"/> 
+				-->
+	
+				<property name="build.stratego.args" value="
                         --library
                         -I &quot;${trans}&quot;
                         -I &quot;${basedir}&quot;
@@ -73,6 +77,7 @@
               <arg value="${basedir}/.shadowdir"/>
               <arg value="-I"/>
               <arg value="${lib}"/>
+          		<arg line="${build.sdf.imports}"/>
           </java>
           <java classname="org.strategoxt.permissivegrammars.make_permissive" failonerror="true">
               <arg value="-i"/>

Added: spoofax-contrib/Lawoco/lib/Java15Prefixed.def
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/Lawoco/lib/Java15Prefixed.def	Mon May 23 15:44:34 2011	(r22949)
@@ -0,0 +1,1855 @@
+definition
+module languages/java-15/expressions/Priorities
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/expressions/Main
+
+exports
+  context-free priorities
+      Expr "." "new" TypeArgs? Id TypeArgs? "(" {Expr ","}* ")" ClassBody? -> Expr
+    > {right:
+        Expr "++" -> Expr
+        Expr "--" -> Expr
+      } 
+
+  context-free priorities
+      {right:
+        Expr "++" -> Expr
+        Expr "--" -> Expr
+      }
+    > { "(" PrimType ")" Expr -> Expr    
+        "(" RefType  ")" Expr -> Expr
+      }
+
+  context-free priorities
+      "(" PrimType ")" Expr -> Expr
+    > {left:
+        Expr "*" Expr -> Expr
+        Expr "/" Expr -> Expr
+        Expr "%" Expr -> Expr
+      } 
+
+  context-free priorities
+      "(" RefType ")" Expr -> Expr 
+    > {
+        "++" Expr -> Expr
+        "--" Expr -> Expr
+        "+"  Expr -> Expr
+        "-"  Expr -> Expr
+      }
+
+  context-free priorities
+    {
+      Expr ArraySubscript -> ArrayAccess
+      Expr "." Id -> FieldAccess
+      Expr "." TypeArgs? Id -> MethodSpec
+    }
+  > {right:
+      Expr "++" -> Expr
+      Expr "--" -> Expr
+    }
+  > {
+      "++" Expr -> Expr
+      "--" Expr -> Expr
+      "+"  Expr -> Expr
+      "-"  Expr -> Expr
+      "~"  Expr -> Expr
+      "!"  Expr -> Expr
+    }
+  > {left:
+      Expr "*" Expr -> Expr
+      Expr "/" Expr -> Expr
+      Expr "%" Expr -> Expr
+    } 
+  > {left:
+      Expr "+" Expr -> Expr
+      Expr "-" Expr -> Expr
+    }
+  > {left:
+      Expr "<<"  Expr -> Expr
+      Expr ">>"  Expr -> Expr
+      Expr ">>>" Expr -> Expr
+    }
+  > {left:
+      Expr "instanceof" RefType -> Expr
+      Expr "<"   Expr -> Expr
+      Expr ">"   Expr -> Expr
+      Expr "<="  Expr -> Expr
+      Expr ">="  Expr -> Expr
+    }
+  > {left:
+      Expr "=="  Expr -> Expr
+      Expr "!="  Expr -> Expr
+    }
+  >   Expr "&"   Expr -> Expr
+  >   Expr "^"   Expr -> Expr
+  >   Expr "|"   Expr -> Expr
+  >   Expr "&&"  Expr -> Expr
+  >   Expr "||"  Expr -> Expr
+  >   Expr CondMid Expr -> Expr
+  > {right:
+      LHS "="    Expr -> Expr
+      LHS "*="   Expr -> Expr
+      LHS "/="   Expr -> Expr
+      LHS "%="   Expr -> Expr
+      LHS "+="   Expr -> Expr
+      LHS "-="   Expr -> Expr
+      LHS "<<="  Expr -> Expr
+      LHS ">>="  Expr -> Expr
+      LHS ">>>=" Expr -> Expr
+      LHS "&="   Expr -> Expr
+      LHS "^="   Expr -> Expr
+      LHS "|="   Expr -> Expr
+    }
+
+module languages/java-15/expressions/Restrictions
+exports
+  lexical restrictions
+    "+" -/- [\+]
+    "-" -/- [\-]
+    "/" -/- [\/]
+
+module languages/java-15/expressions/AssignmentOperators
+imports
+  languages/java-15/expressions/Main
+
+exports
+  sorts LHS
+  context-free syntax
+    LHS "="    Expr -> Expr {cons("Assign")}
+    LHS "*="   Expr -> Expr {cons("AssignMul")}
+    LHS "/="   Expr -> Expr {cons("AssignDiv")}
+    LHS "%="   Expr -> Expr {cons("AssignRemain")}
+    LHS "+="   Expr -> Expr {cons("AssignPlus")}
+    LHS "-="   Expr -> Expr {cons("AssignMinus")}
+    LHS "<<="  Expr -> Expr {cons("AssignLeftShift")}
+    LHS ">>="  Expr -> Expr {cons("AssignRightShift")}
+    LHS ">>>=" Expr -> Expr {cons("AssignURightShift")}
+    LHS "&="   Expr -> Expr {cons("AssignAnd")}
+    LHS "^="   Expr -> Expr {cons("AssignExcOr")}
+    LHS "|="   Expr -> Expr {cons("AssignOr")}
+
+    ExprName    -> LHS
+    FieldAccess -> LHS
+    ArrayAccess -> LHS
+
+
+module languages/java-15/expressions/BinaryOperators
+imports
+  languages/java-15/expressions/Main
+  languages/java-15/types/Main
+
+exports
+  sorts CondMid
+  context-free syntax
+    Expr "instanceof" RefType -> Expr {cons("InstanceOf")}
+
+    Expr "*"   Expr -> Expr  {left, cons("Mul")}
+    Expr "/"   Expr -> Expr  {left, cons("Div")}
+    Expr "%"   Expr -> Expr  {left, cons("Remain")}
+
+    Expr "+"   Expr -> Expr  {left, cons("Plus")}
+    Expr "-"   Expr -> Expr  {left, cons("Minus")}
+
+    Expr "<<"  Expr -> Expr  {left, cons("LeftShift")}
+    Expr ">>"  Expr -> Expr  {left, cons("RightShift")}
+    Expr ">>>" Expr -> Expr  {left, cons("URightShift")}
+
+    Expr "<"   Expr -> Expr  {left, cons("Lt")}
+    Expr ">"   Expr -> Expr  {left, cons("Gt")}
+    Expr "<="  Expr -> Expr  {left, cons("LtEq")}
+    Expr ">="  Expr -> Expr  {left, cons("GtEq")}
+    Expr "=="  Expr -> Expr  {left, cons("Eq")}
+    Expr "!="  Expr -> Expr  {left, cons("NotEq")}
+
+    Expr "&&"  Expr -> Expr  {left, cons("LazyAnd")}
+    Expr "||"  Expr -> Expr  {left, cons("LazyOr")}
+
+    Expr "&" Expr -> Expr {left, cons("And")}
+    Expr "^" Expr -> Expr {left, cons("ExcOr")}
+    Expr "|" Expr -> Expr {left, cons("Or")}
+
+    %% todo JFR-30
+    Expr CondMid Expr -> Expr {right, cons("Cond")}
+    "?" Expr ":" -> CondMid {bracket}
+
+module languages/java-15/expressions/UnaryOperators
+imports 
+  languages/java-15/expressions/Main
+exports
+  context-free syntax
+    "+" Expr -> Expr {cons("Plus")}
+    "-" Expr -> Expr {cons("Minus")}
+
+    "++" Expr -> Expr {cons("PreIncr")}
+    "--" Expr -> Expr {cons("PreDecr")}
+
+    "~" Expr -> Expr {cons("Complement")}
+    "!" Expr -> Expr {cons("Not")}
+
+    "(" PrimType ")" Expr -> Expr {cons("CastPrim")}
+    "(" RefType  ")" Expr -> Expr {cons("CastRef")}
+
+module languages/java-15/expressions/Postfix
+imports 
+  languages/java-15/expressions/Main
+
+exports
+  context-free syntax
+    ExprName  -> Expr
+    Expr "++" -> Expr {cons("PostIncr")}
+    Expr "--" -> Expr {cons("PostDecr")}
+
+module languages/java-15/expressions/MethodInvocation
+imports
+  languages/java-15/expressions/Main
+
+exports
+  sorts MethodSpec
+  context-free syntax
+    MethodSpec "(" {Expr ","}* ")" -> Expr {cons("Invoke")}
+
+                               MethodName -> MethodSpec {cons("Method")}
+                    Expr "." TypeArgs? Id -> MethodSpec {cons("Method")}
+                 "super" "." TypeArgs? Id -> MethodSpec {cons("SuperMethod")}
+    TypeName "." "super" "." TypeArgs? Id -> MethodSpec {cons("QSuperMethod")}
+                 AmbName "." TypeArgs  Id -> MethodSpec {cons("GenericMethod")}
+
+  %% This priority forbids a Expr "." MethodSpec if the expression is a plain ExprName.
+  %% This solves an ambiguity with the MethodName and AmbName . TypeArgs MethodSpecs.
+  %% foo.bar.fred() results in a MethodName MethodSpec.
+  %% (foo.bar).fred() results in the Expr. MethodSpec
+  %% foo.bar.<T>fred() results in a GenericMethod
+  context-free priorities
+      Expr "." TypeArgs? Id -> MethodSpec
+    > ExprName  -> Expr
+
+
+module languages/java-15/expressions/ArrayAccess
+imports
+  languages/java-15/expressions/Main
+exports
+  sorts
+    ArrayAccess
+    ArraySubscript
+
+  context-free syntax
+    ArrayAccess -> Expr
+
+    %% todo: JFR-29
+    Expr ArraySubscript -> ArrayAccess {cons("ArrayAccess")}
+    "[" Expr "]" -> ArraySubscript {bracket}
+
+    ArrayCreationExpr ArraySubscript -> ArrayAccess {reject}
+
+module languages/java-15/expressions/FieldAccess
+imports
+  languages/java-15/expressions/Main
+
+exports
+  sorts FieldAccess
+  context-free syntax
+    FieldAccess -> Expr
+
+  context-free syntax
+
+                    Expr "." Id -> FieldAccess {cons("Field")}
+                ExprName "." Id -> FieldAccess {reject}
+                 "super" "." Id -> FieldAccess {cons("SuperField")}
+    TypeName "." "super" "." Id -> FieldAccess {cons("QSuperField")}
+
+module languages/java-15/expressions/ArrayCreation
+imports
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    ArrayCreationExpr
+    ArrayBaseType
+    Dim
+    DimExpr
+
+  context-free syntax
+    ArrayCreationExpr     -> Expr
+
+    "new" ArrayBaseType DimExpr+ Dim*  -> ArrayCreationExpr {cons("NewArray")}
+    "new" ArrayBaseType Dim+ ArrayInit -> ArrayCreationExpr {cons("NewArray")}
+
+    PrimType -> ArrayBaseType
+    TypeName -> ArrayBaseType
+    TypeName "<" "?" ">" -> ArrayBaseType {cons("UnboundWld")}
+
+    "[" Expr "]" -> DimExpr {cons("Dim")}
+    "[" "]"      -> Dim     {cons("Dim")}
+
+module languages/java-15/expressions/ClassInstanceCreation
+imports
+  languages/java-15/expressions/Main
+  languages/java-15/classes/ClassDeclarations
+
+exports
+  context-free syntax
+
+             "new" TypeArgs? ClassOrInterfaceType "(" {Expr ","}* ")" ClassBody? -> Expr {cons("NewInstance")}
+    Expr "." "new" TypeArgs? Id         TypeArgs? "(" {Expr ","}* ")" ClassBody? -> Expr {cons("QNewInstance")}
+
+module languages/java-15/expressions/Primary
+imports
+  languages/java-15/lexical/literals/Main
+  languages/java-15/names/Main
+  languages/java-15/expressions/Main
+
+exports
+  %%%
+   %% Section 15.8.1: Lexical Literals
+   %%%
+  sorts Literal
+  context-free syntax
+    Literal -> Expr {cons("Lit")}
+
+    IntLiteral    -> Literal
+    FloatLiteral  -> Literal
+    BoolLiteral   -> Literal 
+    CharLiteral   -> Literal
+    StringLiteral -> Literal
+    NullLiteral   -> Literal
+
+  %%%
+   %% Section 15.8.2: Class Literals
+   %%%
+  sorts ClassLiteral
+  context-free syntax
+    ClassLiteral -> Literal
+    Type   "." "class" -> ClassLiteral {cons("Class")}
+    "void" "." "class" -> ClassLiteral {cons("VoidClass")}
+
+  %%%
+   %% Section 15.8.3/4: (Qualified this)
+   %%%
+  context-free syntax
+                 "this" -> Expr {cons("This")}
+    TypeName "." "this" -> Expr {cons("QThis")}
+
+  %%%
+   %% Section 15.8.5: Parenthesized Expression
+   %%%
+  context-free syntax
+    "(" Expr ")"          -> Expr {bracket}
+
+module languages/java-15/expressions/Main
+imports
+  languages/java-15/expressions/Primary
+  languages/java-15/expressions/ClassInstanceCreation
+  languages/java-15/expressions/ArrayCreation
+  languages/java-15/expressions/FieldAccess
+  languages/java-15/expressions/ArrayAccess
+  languages/java-15/expressions/MethodInvocation
+  languages/java-15/expressions/Postfix
+  languages/java-15/expressions/UnaryOperators
+  languages/java-15/expressions/BinaryOperators
+  languages/java-15/expressions/AssignmentOperators
+  languages/java-15/expressions/Restrictions
+  languages/java-15/expressions/Priorities
+
+exports
+  sorts
+    Expr
+
+module languages/java-15/statements/Main
+imports
+  languages/java-15/statements/Blocks
+  languages/java-15/statements/LocalVariableDeclarations
+  languages/java-15/statements/Statements
+
+
+module languages/java-15/arrays/Main
+imports
+  languages/java-15/arrays/ArrayInitializers
+
+
+module languages/java-15/interfaces/Main
+imports
+  languages/java-15/interfaces/InterfaceDeclarations
+  languages/java-15/interfaces/AbstractMethodDeclarations
+  languages/java-15/interfaces/AnnotationTypes
+  languages/java-15/interfaces/Annotations
+
+
+module languages/java-15/classes/Main
+imports
+  languages/java-15/classes/ClassDeclarations
+  languages/java-15/classes/EnumDeclarations
+
+
+module languages/java-15/packages/PackageDeclarations
+imports
+  languages/java-15/names/Main
+  languages/java-15/interfaces/Annotations
+
+exports
+  sorts
+    PackageDec
+
+  context-free syntax
+    Anno* "package" PackageName ";" -> PackageDec {cons("PackageDec")}
+
+module languages/java-15/packages/ImportDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/names/Main
+
+exports
+  sorts
+    ImportDec
+
+  context-free syntax
+    "import" TypeName                  ";"  -> ImportDec {cons("TypeImportDec")}
+    "import" PackageName       "." "*" ";"  -> ImportDec {cons("TypeImportOnDemandDec")}
+    "import" "static" TypeName "." Id  ";"  -> ImportDec {cons("StaticImportDec")}
+    "import" "static" TypeName "." "*" ";"  -> ImportDec {cons("StaticImportOnDemandDec")}
+
+module languages/java-15/interfaces/AnnotationTypes
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/classes/ClassDeclarations
+  languages/java-15/classes/EnumDeclarations
+  languages/java-15/interfaces/InterfaceDeclarations
+  languages/java-15/interfaces/AbstractMethodDeclarations
+  languages/java-15/interfaces/ConstantDeclarations
+  languages/java-15/interfaces/Annotations
+
+exports
+  sorts
+    AnnoDec
+    AnnoDecHead
+
+  context-free syntax
+    AnnoDecHead "{" AnnoElemDec* "}" -> AnnoDec {cons("AnnoDec")}
+    (Anno | InterfaceMod)* "@" "interface" Id -> AnnoDecHead {cons("AnnoDecHead")}
+
+  sorts
+    AnnoElemDec
+    DefaultVal
+
+  context-free syntax
+    AbstractMethodMod* Type Id "(" ")" DefaultVal? ";" -> AnnoElemDec {cons("AnnoMethodDec")}
+
+    ConstantDec  -> AnnoElemDec
+    ClassDec     -> AnnoElemDec
+    InterfaceDec -> AnnoElemDec
+    EnumDec      -> AnnoElemDec
+    AnnoDec      -> AnnoElemDec
+    ";"          -> AnnoElemDec {cons("Semicolon")}
+
+    "default" ElemVal -> DefaultVal {cons("DefaultVal")}
+
+module languages/java-15/interfaces/AbstractMethodDeclarations
+imports
+  languages/java-15/lexical/Modifiers
+  languages/java-15/names/Main
+  languages/java-15/types/Main
+  languages/java-15/classes/MethodDeclarations
+
+exports
+  sorts
+    AbstractMethodDec
+    AbstractMethodMod
+
+  context-free syntax
+    (Anno | AbstractMethodMod)* TypeParams? ResultType
+      Id "(" {FormalParam ","}* ")" Throws? ";" -> AbstractMethodDec {cons("AbstractMethodDec")}
+
+    (Anno | AbstractMethodMod)* TypeParams? ResultType
+      Id "(" {FormalParam ","}* ")" Dim+ Throws? ";" -> AbstractMethodDec {cons("DeprAbstractMethodDec")}
+
+    Public   -> AbstractMethodMod
+    Abstract -> AbstractMethodMod
+
+
+
+module languages/java-15/interfaces/ConstantDeclarations
+imports
+  languages/java-15/lexical/Modifiers
+  languages/java-15/types/Main
+  languages/java-15/classes/MethodDeclarations
+  languages/java-15/interfaces/Annotations
+
+exports
+  sorts
+    ConstantDec
+    ConstantMod
+
+  context-free syntax
+    (Anno | ConstantMod)* Type {VarDec ","}+ ";" -> ConstantDec {cons("ConstantDec")}
+
+    Public -> ConstantMod
+    Static -> ConstantMod
+    Final  -> ConstantMod
+
+
+module languages/java-15/interfaces/InterfaceDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/names/Main
+  languages/java-15/types/Main
+  languages/java-15/classes/ClassDeclarations
+  languages/java-15/classes/MethodDeclarations
+  languages/java-15/interfaces/ConstantDeclarations
+  languages/java-15/interfaces/AbstractMethodDeclarations
+  languages/java-15/interfaces/AnnotationTypes
+  languages/java-15/interfaces/Annotations
+
+exports
+  sorts
+    InterfaceDec
+    InterfaceDecHead
+    ExtendsInterfaces
+    InterfaceMemberDec
+    InterfaceMod
+
+  context-free syntax
+    AnnoDec -> InterfaceDec
+
+    InterfaceDecHead "{" InterfaceMemberDec* "}" -> InterfaceDec {cons("InterfaceDec")}
+
+    (Anno | InterfaceMod)* "interface" Id TypeParams? ExtendsInterfaces? -> InterfaceDecHead {cons("InterfaceDecHead")}
+    "extends" {InterfaceType ","}+ -> ExtendsInterfaces {cons("ExtendsInterfaces")}
+
+  context-free syntax
+    ConstantDec       -> InterfaceMemberDec
+    AbstractMethodDec -> InterfaceMemberDec
+    ClassDec          -> InterfaceMemberDec
+    InterfaceDec      -> InterfaceMemberDec
+    ";"               -> InterfaceMemberDec {cons("Semicolon")}
+
+  context-free syntax
+    Public         -> InterfaceMod
+    Protected      -> InterfaceMod
+    Private        -> InterfaceMod
+    Abstract       -> InterfaceMod
+    Static         -> InterfaceMod
+    StrictFP       -> InterfaceMod
+
+
+module languages/java-15/classes/EnumDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/classes/ClassDeclarations
+
+exports
+  sorts
+    EnumDec
+    EnumDecHead
+    EnumBody
+    EnumConst
+    EnumConstArgs
+    EnumBodyDecs
+
+  context-free syntax
+    EnumDecHead EnumBody -> EnumDec {cons("EnumDec")}
+
+    (Anno | ClassMod)* "enum" Id Interfaces? -> EnumDecHead {cons("EnumDecHead")}
+
+    "{" {EnumConst ","}*     EnumBodyDecs? "}" -> EnumBody {cons("EnumBody")}
+    "{" {EnumConst ","}* "," EnumBodyDecs? "}" -> EnumBody {cons("EnumBody")}
+
+    Id EnumConstArgs? ClassBody?  -> EnumConst {cons("EnumConst")}
+    "(" {Expr ","}* ")"  -> EnumConstArgs {bracket}
+
+    ";" ClassBodyDec* -> EnumBodyDecs {cons("EnumBodyDecs")}
+
+module languages/java-15/classes/ConstructorDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/interfaces/Annotations
+  languages/java-15/statements/Main
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    ConstrDec
+    ConstrBody
+    ConstrHead
+    ConstrInv
+
+  context-free syntax
+    ConstrHead ConstrBody ->  ConstrDec {cons("ConstrDec")}
+    (Anno | ConstrMod)* TypeParams? Id "(" {FormalParam ","}* ")" Throws? -> ConstrHead {cons("ConstrDecHead")}
+
+
+    "{" ConstrInv? BlockStm* "}" -> ConstrBody {cons("ConstrBody")}
+
+             TypeArgs? "this"  "(" {Expr ","}* ")" ";" -> ConstrInv {cons("AltConstrInv")}
+             TypeArgs? "super" "(" {Expr ","}* ")" ";" -> ConstrInv {cons("SuperConstrInv")}
+    Expr "." TypeArgs? "super" "(" {Expr ","}* ")" ";" -> ConstrInv {cons("QSuperConstrInv")}
+
+  sorts ConstrMod
+  context-free syntax  
+    Public    -> ConstrMod
+    Protected -> ConstrMod
+    Private   -> ConstrMod
+
+
+module languages/java-15/classes/StaticInitializers
+imports
+  languages/java-15/statements/Blocks
+
+exports
+  sorts
+    StaticInit
+
+  context-free syntax
+    "static" Block -> StaticInit   {cons("StaticInit")}
+
+module languages/java-15/classes/InstanceInitializers
+imports
+  languages/java-15/statements/Blocks
+
+exports
+  sorts
+    InstanceInit
+
+  context-free syntax
+    Block -> InstanceInit {cons("InstanceInit")}
+
+module languages/java-15/statements/Statements
+imports
+  languages/java-15/statements/LocalVariableDeclarations
+  languages/java-15/statements/Blocks
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    Stm
+
+  context-free syntax
+    Block      -> Stm
+
+  %%%
+   %% Section 14.6: The Empty Statement
+   %%%
+  context-free syntax
+    ";"        -> Stm {cons("Empty")}
+
+  %%%
+   %% Section 14.7: Labeled Statements
+   %%%
+  context-free syntax
+    Id ":" Stm -> Stm {cons("Labeled")}
+
+  %%%
+   %% Section 14.8: Expressions Statements
+   %%%
+  context-free syntax
+    Expr ";"   -> Stm {cons("ExprStm")}
+
+  %%%
+   %% Section 14.9: The If Statement
+   %%%
+  context-free syntax
+    "if" "(" Expr ")" Stm             -> Stm {prefer, cons("If")}
+    "if" "(" Expr ")" Stm  "else" Stm -> Stm {cons("If")}
+
+  %%%
+   %% Section 14.10: The Assert Statement
+   %%%
+  context-free syntax
+    "assert" Expr          ";" -> Stm  {cons("AssertStm")}
+    "assert" Expr ":" Expr ";" -> Stm  {cons("AssertStm")}
+
+
+  %%%
+   %% Section 14.11: The Switch Statement
+   %%%
+  sorts SwitchBlock SwitchGroup SwitchLabel
+  context-free syntax
+    "switch" "(" Expr ")" SwitchBlock -> Stm {cons("Switch")}
+    "{" SwitchGroup* SwitchLabel* "}" -> SwitchBlock {cons("SwitchBlock")}
+    SwitchLabel+ BlockStm+ -> SwitchGroup  {cons("SwitchGroup")}
+
+    "case" Expr ":" -> SwitchLabel {cons("Case")}
+    "default"   ":" -> SwitchLabel {cons("Default")}
+
+  %%%
+   %% Section 14.12: The While Statement
+   %%%
+  context-free syntax
+    "while" "(" Expr ")" Stm -> Stm {cons("While")}
+
+  %%%
+   %% Section 14.13: The Do Statement
+   %%%
+  context-free syntax
+  "do" Stm "while" "(" Expr ")" ";" -> Stm {cons("DoWhile")}
+
+
+  %%%
+   %% Section 14.14: The For Statement
+   %%%
+  context-free syntax
+    "for" "(" LocalVarDec ";" Expr? ";" {Expr ","}* ")" Stm -> Stm {cons("For")}
+    "for" "(" {Expr ","}* ";" Expr? ";" {Expr ","}* ")" Stm -> Stm {cons("For")}
+
+    "for" "(" FormalParam ":" Expr ")" Stm -> Stm {cons("ForEach")}
+
+  %%%
+   %% Section 14.15: The Break Statement
+   %%%
+  context-free syntax
+    "break"    Id? ";"   -> Stm {cons("Break")}
+
+  %%%
+   %% Section 14.16: The Continue Statement
+   %%%
+  context-free syntax
+    "continue" Id? ";"   -> Stm {cons("Continue")}
+
+  %%%
+   %% Section 14.17: The Return Statement
+   %%%
+  context-free syntax
+    "return"   Expr? ";" -> Stm {cons("Return")}
+
+  %%%
+   %% Section 14.18: The Throw Statement
+   %%%
+  context-free syntax
+    "throw"    Expr  ";" -> Stm {cons("Throw")}
+
+  %%%
+   %% Section 14.19: The Synchronized Statement
+   %%%
+  context-free syntax
+    "synchronized" "(" Expr ")" Block -> Stm {cons("Synchronized")}
+
+  %%%
+   %% Section 14.20: The Try Statement
+   %%%
+  sorts CatchClause
+  context-free syntax
+    "try" Block CatchClause+ -> Stm {cons("Try")}
+    "try" Block CatchClause* "finally" Block -> Stm {cons("Try")}
+    "catch" "(" FormalParam ")" Block -> CatchClause {cons("Catch")}
+
+module languages/java-15/statements/LocalVariableDeclarations
+imports
+  languages/java-15/classes/MethodDeclarations
+  languages/java-15/classes/FieldDeclarations
+
+exports
+  sorts
+    LocalVarDecStm
+    LocalVarDec
+
+  context-free syntax
+    LocalVarDec ";" -> LocalVarDecStm {prefer, cons("LocalVarDecStm")}
+    (Anno | VarMod)* Type {VarDec ","}+ -> LocalVarDec {prefer, cons("LocalVarDec")}
+
+module languages/java-15/statements/Blocks
+imports
+  languages/java-15/classes/ClassDeclarations
+  languages/java-15/statements/LocalVariableDeclarations
+  languages/java-15/statements/Statements
+
+exports
+  sorts
+    BlockStm
+    Block
+
+  context-free syntax
+    "{" BlockStm* "}" -> Block {cons("Block")}
+
+    LocalVarDecStm  -> BlockStm 
+    ClassDec        -> BlockStm {cons("ClassDecStm")}
+    Stm             -> BlockStm
+
+
+module languages/java-15/classes/MethodDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/types/Main
+  languages/java-15/classes/FieldDeclarations
+  languages/java-15/interfaces/Annotations
+  languages/java-15/statements/Blocks
+
+exports
+  sorts
+    MethodDec
+    MethodDecHead
+    ResultType
+
+  context-free syntax
+    MethodDecHead MethodBody -> MethodDec {cons("MethodDec")}
+
+    (Anno | MethodMod)* TypeParams? ResultType Id "(" {FormalParam ","}* ")" Throws?      -> MethodDecHead {cons("MethodDecHead")}
+    (Anno | MethodMod)* TypeParams? ResultType Id "(" {FormalParam ","}* ")" Dim+ Throws? -> MethodDecHead {cons("DeprMethodDecHead")}
+
+    Type   -> ResultType
+    "void" -> ResultType {cons("Void")}
+
+  sorts FormalParam
+  context-free syntax
+    (Anno | VarMod)* Type       VarDecId -> FormalParam {cons("Param")}
+    (Anno | VarMod)* Type "..." VarDecId -> FormalParam {cons("VarArityParam")}
+
+  sorts VarMod
+  context-free syntax
+    Final -> VarMod
+
+  sorts MethodMod
+  context-free syntax
+    Public         -> MethodMod
+    Protected      -> MethodMod
+    Private        -> MethodMod
+
+    Abstract       -> MethodMod
+    Static         -> MethodMod
+    Final          -> MethodMod
+    Synchronized   -> MethodMod
+    Native         -> MethodMod
+    StrictFP       -> MethodMod
+
+  %%%
+   %% Section 8.4.6: Method Throws
+   %%%
+  sorts
+    Throws
+    ExceptionType
+
+  context-free syntax
+    "throws" {ExceptionType ","}+ -> Throws {cons("ThrowsDec")}
+    ClassType -> ExceptionType
+    %% TypeVar -> ExceptionType
+
+  %%%
+   %% Section 8.4.7: Method Body
+   %%% 
+  sorts MethodBody
+  context-free syntax
+    Block -> MethodBody
+    ";"   -> MethodBody {cons("NoMethodBody")}
+
+module languages/java-15/arrays/ArrayInitializers
+imports
+  languages/java-15/classes/FieldDeclarations
+
+exports
+  sorts ArrayInit
+  context-free syntax
+    "{" {VarInit ","}*     "}" -> ArrayInit {cons("ArrayInit")}
+    "{" {VarInit ","}* "," "}" -> ArrayInit {cons("ArrayInit")}
+
+module languages/java-15/interfaces/Annotations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/names/Main
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    Anno
+    ElemVal
+    ElemValPair
+
+  context-free syntax
+    "@" TypeName "(" {ElemValPair ","}* ")" -> Anno {cons("Anno")}
+    "@" TypeName "(" ElemVal ")"            -> Anno {cons("SingleElemAnno")}
+    "@" TypeName                            -> Anno {cons("MarkerAnno")}
+
+  context-free syntax  
+    Id "=" ElemVal -> ElemValPair {cons("ElemValPair")}
+
+    Expr -> ElemVal
+    Anno -> ElemVal
+
+    "{" {ElemVal ","}*     "}" -> ElemVal {cons("ElemValArrayInit")}
+    "{" {ElemVal ","}* "," "}" -> ElemVal {cons("ElemValArrayInit")}
+
+    %% Assignments are not allowed as element values.
+    LHS "=" Expr -> ElemVal {reject}
+
+module languages/java-15/classes/FieldDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/types/Main
+  languages/java-15/interfaces/Annotations
+  languages/java-15/arrays/ArrayInitializers
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    FieldDec
+    VarDec
+    VarDecId
+    Dim
+    VarInit
+
+  context-free syntax
+    (Anno | FieldMod)* Type { VarDec ","}+ ";" -> FieldDec {cons("FieldDec")}
+
+    VarDecId             -> VarDec {cons("VarDec")}
+    VarDecId "=" VarInit -> VarDec {cons("VarDec")}
+
+    Id      -> VarDecId
+    Id Dim+ -> VarDecId {cons("ArrayVarDecId")}
+
+    "[" "]" -> Dim {cons("Dim")}
+
+    Expr      -> VarInit
+    ArrayInit -> VarInit
+
+  sorts FieldMod
+  context-free syntax
+    Public    -> FieldMod
+    Protected -> FieldMod
+    Private   -> FieldMod
+
+    Static    -> FieldMod
+    Final     -> FieldMod
+    Transient -> FieldMod
+    Volatile  -> FieldMod
+
+
+module languages/java-15/classes/ClassDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/types/ReferenceTypes
+  languages/java-15/types/TypeVariables
+  languages/java-15/classes/FieldDeclarations
+  languages/java-15/classes/MethodDeclarations
+  languages/java-15/classes/InstanceInitializers
+  languages/java-15/classes/StaticInitializers
+  languages/java-15/classes/ConstructorDeclarations
+  languages/java-15/classes/EnumDeclarations
+  languages/java-15/interfaces/InterfaceDeclarations
+
+exports
+  sorts
+    ClassDec
+    ClassBody
+    ClassDecHead
+
+  context-free syntax
+    EnumDec -> ClassDec
+
+    ClassDecHead ClassBody -> ClassDec {cons("ClassDec")}
+    "{" ClassBodyDec* "}" -> ClassBody {cons("ClassBody")}
+
+    (Anno | ClassMod)* "class" Id  TypeParams? Super? Interfaces? -> ClassDecHead {cons("ClassDecHead")}
+
+  %% 8.1.1: Class Modifiers
+  sorts ClassMod
+  context-free syntax
+    Abstract  -> ClassMod
+    Public    -> ClassMod
+    Protected -> ClassMod
+    Private   -> ClassMod
+    Static    -> ClassMod
+    Final     -> ClassMod
+    StrictFP  -> ClassMod
+
+  %% 8.1.4: Superclasses and Subclasses
+  sorts Super
+  context-free syntax
+
+    "extends" ClassType -> Super {cons("SuperDec")}
+
+  %% 8.1.5: Superinterfaces
+  sorts Interfaces
+  context-free syntax
+    "implements" {InterfaceType ","}+ -> Interfaces {cons("ImplementsDec")}
+
+
+  %% 8.1.6: Class Body and Member Declarations
+  sorts
+    ClassBodyDec
+    ClassMemberDec
+
+  context-free syntax
+    ClassMemberDec -> ClassBodyDec
+    InstanceInit   -> ClassBodyDec
+    StaticInit     -> ClassBodyDec
+    ConstrDec      -> ClassBodyDec
+
+  context-free syntax
+    FieldDec     -> ClassMemberDec
+    MethodDec    -> ClassMemberDec
+    ClassDec     -> ClassMemberDec
+    InterfaceDec -> ClassMemberDec
+    ";"          -> ClassMemberDec {cons("Semicolon")}
+
+module languages/java-15/packages/TypeDeclarations
+imports
+  languages/java-15/classes/ClassDeclarations
+  languages/java-15/interfaces/InterfaceDeclarations
+
+exports
+  sorts
+    TypeDec
+
+  context-free syntax
+    ClassDec      -> TypeDec
+    InterfaceDec  -> TypeDec
+    ";"           -> TypeDec {cons("Semicolon")}
+
+module languages/java-15/packages/CompilationUnits
+imports
+  languages/java-15/packages/PackageDeclarations
+  languages/java-15/packages/ImportDeclarations
+  languages/java-15/packages/TypeDeclarations
+
+exports
+  sorts
+    CompilationUnit
+
+  context-free syntax
+    PackageDec? ImportDec* TypeDec+ -> CompilationUnit   {cons("CompilationUnit")}
+
+module languages/java-15/packages/Main
+imports
+  languages/java-15/packages/CompilationUnits
+  languages/java-15/packages/ImportDeclarations
+  languages/java-15/packages/PackageDeclarations
+
+
+module languages/java-15/names/Main
+imports
+  languages/java-15/lexical/Identifiers
+exports
+  sorts PackageName
+  context-free syntax
+    {Id "."}+ -> PackageName {cons("PackageName")}
+
+  sorts
+    TypeName
+    ExprName
+    MethodName
+    PackageOrTypeName
+    AmbName
+
+  context-free syntax
+    Id             -> AmbName {cons("AmbName")}
+    AmbName "." Id -> AmbName {cons("AmbName")}
+
+    Id                       -> TypeName {cons("TypeName")}
+    PackageOrTypeName "." Id -> TypeName {cons("TypeName")}
+
+    Id             -> ExprName {cons("ExprName")}
+    AmbName "." Id -> ExprName {cons("ExprName")}
+
+    Id             -> MethodName  {cons("MethodName")}
+    AmbName "." Id -> MethodName  {cons("MethodName")}
+
+    Id                       -> PackageOrTypeName {cons("PackageOrTypeName")}
+    PackageOrTypeName "." Id -> PackageOrTypeName {cons("PackageOrTypeName")}
+
+module languages/java-15/types/ParameterizedTypes
+imports
+  languages/java-15/types/ReferenceTypes
+
+exports
+  sorts
+    TypeArgs
+    ActualTypeArg
+    WildcardBound
+    
+  context-free syntax
+    "<" {ActualTypeArg ","}+ ">" -> TypeArgs {cons("TypeArgs")}
+
+    Type               -> ActualTypeArg
+    "?" WildcardBound? -> ActualTypeArg {cons("Wildcard")}
+
+    "extends" RefType -> WildcardBound {cons("WildcardUpperBound")}
+    "super"   RefType -> WildcardBound {cons("WildcardLowerBound")}
+
+module languages/java-15/types/TypeVariables
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/types/ReferenceTypes
+
+exports
+  sorts
+    TypeParams
+    TypeParam
+    TypeBound
+    TypeVarId
+  
+  context-free syntax
+    TypeVarId TypeBound? -> TypeParam {cons("TypeParam")}
+    
+    "extends" {ClassOrInterfaceType "&"}+ -> TypeBound {cons("TypeBound")}
+    "<" {TypeParam ","}+ ">" -> TypeParams {cons("TypeParams")}
+
+    Id -> TypeVarId
+    
+
+module languages/java-15/types/ReferenceTypes
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/names/Main
+  languages/java-15/types/Main  
+  languages/java-15/types/ParameterizedTypes
+  languages/java-15/types/TypeVariables
+
+
+exports
+  sorts
+    RefType
+    ClassOrInterfaceType
+    ClassType
+    InterfaceType
+    TypeDecSpec
+    ArrayType
+    TypeVar
+
+  context-free syntax
+    ClassOrInterfaceType -> RefType
+    ArrayType            -> RefType
+    
+    %% This production rule is highly ambiguous, since every
+    %% TypeVar can be a ClassOrInterfaceType. A later disambiguation
+    %% phase has to find out if a ClassOrInterfaceType is in fact
+    %% a TypeVar.
+    
+    %% TypeVar -> RefType {avoid}
+
+  context-free syntax
+  
+    %% ClassType and InterfaceType are ambiguous. We modify the
+    %% production of ClassOrInterfaceType to make this ambiguity explicit.
+    
+    TypeDecSpec TypeArgs? -> ClassOrInterfaceType {cons("ClassOrInterfaceType")}
+    TypeDecSpec TypeArgs? -> ClassType {cons("ClassType")}
+    TypeDecSpec TypeArgs? -> InterfaceType {cons("InterfaceType")}
+
+    TypeName -> TypeDecSpec
+    TypeDecSpec TypeArgs "." Id -> TypeDecSpec {cons("Member")}
+    
+  context-free syntax    
+    TypeVarId -> TypeVar {cons("TypeVar")}
+
+  context-free syntax
+    Type "[" "]" -> ArrayType  {cons("ArrayType")}
+
+module languages/java-15/types/PrimitiveTypes
+exports
+  sorts
+    PrimType
+    NumType
+    IntType  
+    FloatType
+
+  context-free syntax
+    NumType   -> PrimType
+    "boolean" -> PrimType {cons("Boolean")}
+
+    IntType   -> NumType
+    FloatType -> NumType
+
+    "byte"   -> IntType   {cons("Byte")}
+    "short"  -> IntType   {cons("Short")}
+    "int"    -> IntType   {cons("Int")}
+    "long"   -> IntType   {cons("Long")}
+    "char"   -> IntType   {cons("Char")}
+    "float"  -> FloatType {cons("Float")}
+    "double" -> FloatType {cons("Double")}
+
+module languages/java-15/types/Main
+imports
+  languages/java-15/types/PrimitiveTypes
+  languages/java-15/types/ReferenceTypes
+  languages/java-15/types/TypeVariables
+  languages/java-15/types/ParameterizedTypes
+
+exports
+  sorts
+    Type
+
+  context-free syntax
+    PrimType -> Type
+    RefType  -> Type
+
+
+module languages/java-15/lexical/literals/NullLiteral
+exports
+  sorts NullLiteral
+  context-free syntax
+    "null"  -> NullLiteral {cons("Null")}
+
+module languages/java-15/lexical/literals/StringLiterals
+imports
+  languages/java-15/lexical/literals/EscapeSequences
+  languages/java-15/lexical/UnicodeEscapes
+
+exports
+  sorts
+    StringLiteral
+    StringPart
+    StringChars
+    FooStringChars
+
+  syntax
+    StringLiteral -> <StringLiteral-CF>
+    
+    "\"" StringPart* "\"" -> StringLiteral {cons("String")}
+    StringChars    -> StringPart {cons("Chars")}
+    UnicodeEscape  -> StringPart
+    EscapeSeq      -> StringPart
+
+    <FooStringChars-LEX> -> StringChars
+    ~[\"\\\n\13]+  -> <FooStringChars-LEX>
+
+  restrictions
+    StringChars -/- ~[\"\\\n\13]
+
+module languages/java-15/lexical/literals/EscapeSequences
+imports
+
+exports
+  sorts
+    EscapeSeq
+    NamedEscape
+    OctaEscape
+    LastOcta
+
+  syntax
+    OctaEscape  -> EscapeSeq
+    NamedEscape -> EscapeSeq
+
+    "\\" [btnfr\"\'\\]     -> NamedEscape {cons("NamedEscape")}
+    "\\" LastOcta          -> OctaEscape  {cons("OctaEscape1")}
+    "\\" [0-3] LastOcta    -> OctaEscape  {cons("OctaEscape2")}
+    "\\" [4-7] [0-7]       -> OctaEscape  {cons("OctaEscape2")}
+    "\\" [0-3] [0-7] [0-7] -> OctaEscape  {cons("OctaEscape3")}
+
+    [0-7] -> LastOcta
+
+  restrictions
+    LastOcta -/- [0-7]
+
+module languages/java-15/lexical/literals/CharacterLiterals
+imports
+  languages/java-15/lexical/literals/EscapeSequences
+  languages/java-15/lexical/UnicodeEscapes
+
+exports
+  sorts
+    CharLiteral
+    CharContent
+    SingleChar
+
+  syntax
+    CharLiteral   -> <CharLiteral-CF>
+
+    "'" CharContent "'" -> CharLiteral {cons("Char")}
+    SingleChar    -> CharContent {cons("Single")}
+    UnicodeEscape -> CharContent
+    EscapeSeq     -> CharContent
+
+    ~[\r\n\'\\] -> SingleChar
+
+
+module languages/java-15/lexical/literals/BooleanLiterals
+exports
+  sorts
+    Bool
+    BoolLiteral
+
+  context-free syntax
+    Bool -> BoolLiteral {cons("Bool")}
+    "true"  -> Bool {cons("True")}
+    "false" -> Bool {cons("False")}
+
+module languages/java-15/lexical/literals/FloatingPointLiterals
+exports
+  sorts
+    FloatLiteral
+    DeciFloatLiteral
+    HexaFloatLiteral      
+  
+  context-free syntax
+    DeciFloatLiteral -> FloatLiteral {cons("Float")}
+    HexaFloatLiteral -> FloatLiteral {cons("Float")}
+
+  lexical syntax
+    DeciFloatNumeral [fFdD]? -> DeciFloatLiteral
+    HexaFloatNumeral [fFdD]? -> HexaFloatLiteral
+    
+    %% Reject plain integer literals as decimal float literals.
+    %% A similar rejection for hexadecimal float literals is not
+    %% required, since these always contain an exponent part.
+    [0-9]+ -> DeciFloatLiteral {reject}
+
+  lexical restrictions
+    DeciFloatLiteral -/- [fFdD]
+    HexaFloatLiteral -/- [fFdD]
+
+  %%%
+   %% Decimal Floating Point Numerals
+   %%%
+  sorts
+    DeciFloatNumeral
+    DeciFloatDigits
+    DeciFloatExponentPart
+
+  lexical syntax
+    DeciFloatDigits DeciFloatExponentPart? -> DeciFloatNumeral
+
+    [0-9]* "." [0-9]* -> DeciFloatDigits
+           "."        -> DeciFloatDigits {reject}
+    [0-9]+            -> DeciFloatDigits
+
+    [eE] SignedInteger -> DeciFloatExponentPart
+    
+    [\+\-]? [0-9]+ -> SignedInteger    
+
+  lexical restrictions
+    DeciFloatDigits  -/- [0-9]
+    DeciFloatExponentPart -/- [0-9]
+
+  %%%
+   %% Hexadecimal Floating Point Literals
+   %%%
+  sorts
+    HexaFloatNumeral
+    HexaSignificand
+    BinaryExponent
+    SignedInteger
+    
+  lexical syntax
+    HexaSignificand BinaryExponent -> HexaFloatNumeral
+
+    [0][xX] [0-9a-fA-F]+                  -> HexaSignificand
+    [0][xX] [0-9a-fA-F]* "." [0-9a-fA-F]* -> HexaSignificand
+    [0][xX]              "."              -> HexaSignificand {reject}
+
+    [pP] SignedInteger -> BinaryExponent
+  lexical restrictions
+    HexaSignificand -/- [0-9a-fA-F]
+    SignedInteger   -/- [0-9]
+
+module languages/java-15/lexical/literals/IntegerLiterals
+exports
+  sorts
+    IntLiteral
+    DeciLiteral
+    HexaLiteral
+    OctaLiteral
+    DeciNumeral
+    HexaNumeral
+    OctaNumeral
+
+  context-free syntax
+    DeciLiteral -> IntLiteral {cons("Deci")}
+    HexaLiteral -> IntLiteral {cons("Hexa")}
+    OctaLiteral -> IntLiteral {cons("Octa")}
+
+  lexical syntax
+    DeciNumeral [lL]? -> DeciLiteral
+    HexaNumeral [lL]? -> HexaLiteral
+    OctaNumeral [lL]? -> OctaLiteral
+
+    "0" -> DeciNumeral
+    [1-9][0-9]*  -> DeciNumeral
+    [0][xX] [0-9a-fA-F]+ -> HexaNumeral
+    [0]     [0-7]+       -> OctaNumeral
+
+  lexical restrictions
+    DeciNumeral -/- [0-9\.fFdD]
+    HexaNumeral -/- [0-9a-fA-F]
+    OctaNumeral -/- [0-7]
+
+    DeciLiteral -/- [lL]
+    HexaLiteral -/- [lL]
+    OctaLiteral -/- [lL]
+
+module languages/java-15/lexical/literals/Main
+imports
+  languages/java-15/lexical/literals/IntegerLiterals
+  languages/java-15/lexical/literals/FloatingPointLiterals
+  languages/java-15/lexical/literals/BooleanLiterals  
+  languages/java-15/lexical/literals/CharacterLiterals  
+  languages/java-15/lexical/literals/StringLiterals
+  languages/java-15/lexical/literals/NullLiteral
+
+
+module languages/java-15/lexical/Modifiers
+exports
+  sorts
+    Public
+    Private
+    Protected
+    Abstract
+    Final
+    Static
+    Native
+    Transient
+    Volatile
+    Synchronized
+    StrictFP
+    Modifier
+
+  context-free syntax
+    "public"       -> Public       {cons("Public")}
+    "private"      -> Private      {cons("Private")}
+    "protected"    -> Protected    {cons("Protected")}
+
+    "abstract"     -> Abstract     {cons("Abstract")}
+    "final"        -> Final        {cons("Final")}
+    "static"       -> Static       {cons("Static")}
+    "native"       -> Native       {cons("Native")}
+    "transient"    -> Transient    {cons("Transient")}
+    "volatile"     -> Volatile     {cons("Volatile")}
+    "synchronized" -> Synchronized {cons("Synchronized")}
+    "strictfp"     -> StrictFP     {cons("StrictFP")}
+
+    Public       -> Modifier
+    Private      -> Modifier
+    Protected    -> Modifier
+    Abstract     -> Modifier
+    Final        -> Modifier
+    Static       -> Modifier
+    Native       -> Modifier
+    Transient    -> Modifier
+    Volatile     -> Modifier
+    Synchronized -> Modifier
+    StrictFP     -> Modifier
+
+
+module languages/java-15/lexical/Keywords
+exports
+  sorts Keyword
+  lexical syntax
+    "abstract"      -> Keyword
+    "assert"        -> Keyword
+    "boolean"       -> Keyword
+    "break"         -> Keyword
+    "byte"          -> Keyword
+    "case"          -> Keyword
+    "catch"         -> Keyword
+    "char"          -> Keyword
+    "class"         -> Keyword
+    "const"         -> Keyword
+    "continue"      -> Keyword
+    "default"       -> Keyword
+    "do"            -> Keyword
+    "double"        -> Keyword
+    "else"          -> Keyword
+    "enum"          -> Keyword
+    "extends"       -> Keyword
+    "final"         -> Keyword
+    "finally"       -> Keyword
+    "float"         -> Keyword
+    "for"           -> Keyword
+    "goto"          -> Keyword
+    "if"            -> Keyword
+    "implements"    -> Keyword
+    "import"        -> Keyword
+    "instanceof"    -> Keyword
+    "int"           -> Keyword
+    "interface"     -> Keyword
+    "long"          -> Keyword
+    "native"        -> Keyword
+    "new"           -> Keyword
+    "package"       -> Keyword
+    "private"       -> Keyword
+    "protected"     -> Keyword
+    "public"        -> Keyword
+    "return"        -> Keyword
+    "short"         -> Keyword
+    "static"        -> Keyword
+    "strictfp"      -> Keyword
+    "super"         -> Keyword
+    "switch"        -> Keyword
+    "synchronized"  -> Keyword
+    "this"          -> Keyword
+    "throw"         -> Keyword
+    "throws"        -> Keyword
+    "transient"     -> Keyword
+    "try"           -> Keyword
+    "void"          -> Keyword
+    "volatile"      -> Keyword
+    "while"         -> Keyword
+
+  lexical restrictions
+
+    "abstract"
+    "assert"
+    "boolean" 
+    "break"   
+    "byte"    
+    "case"    
+    "catch"   
+    "char"     
+    "class"
+    "const"    
+    "continue" 
+    "default"  
+    "do"       
+    "double"   
+    "else"     
+    "enum"
+    "extends"  
+    "final"     
+    "finally"   
+    "float"     
+    "for"       
+    "goto"       
+    "if"         
+    "implements" 
+    "import"     
+    "instanceof" 
+    "int"        
+    "interface"  
+    "long"       
+    "native"     
+    "new"        
+    "package"    
+    "private"    
+    "protected"   
+    "public"       
+    "return"       
+    "short"        
+    "static"     
+    "strictfp"
+    "super"        
+    "switch"       
+    "synchronized" 
+    "this"         
+    "throw"        
+    "throws"       
+    "transient"    
+    "try"          
+    "void"         
+    "volatile"     
+    "while"       -/- [A-Za-z0-9\_\$]
+
+module languages/java-15/lexical/Identifiers
+imports
+  languages/java-15/lexical/Keywords
+exports
+  sorts
+    Id
+    ID
+
+  context-free syntax
+    ID -> Id {cons("Id")}
+
+  lexical syntax
+    [A-Za-z\_\$][A-Za-z0-9\_\$]* -> ID
+    
+    Keyword -> ID {reject}
+    "true"  -> ID {reject}
+    "false" -> ID {reject}
+    "null"  -> ID {reject}
+
+  lexical restrictions
+    ID -/- [a-zA-Z0-9\_\$]
+
+module languages/java-15/lexical/Comments
+imports
+  languages/java-15/lexical/LineTerminators
+exports
+  sorts
+    Comment
+    EOLCommentChars
+    CommentPart
+    UnicodeEscape
+    BlockCommentChars
+    Asterisk
+    EscEscChar
+    EscChar
+
+  lexical syntax
+    Comment -> LAYOUT
+
+    "//" EOLCommentChars LineTerminator -> Comment
+    ~[\n\r]* -> EOLCommentChars
+
+    "/*"  CommentPart* "*/" -> Comment
+    "/**" CommentPart* "*/" -> Comment
+    "/**/"                  -> Comment %% Strange javadoc comment
+
+    BlockCommentChars -> CommentPart
+    EscChar           -> CommentPart
+    EscEscChar        -> CommentPart
+    Asterisk          -> CommentPart
+    UnicodeEscape     -> CommentPart
+
+    ~[\*\\]+ -> BlockCommentChars
+
+    "*"    -> Asterisk
+    "\\\\" -> EscEscChar
+    "\\"   -> EscChar
+
+    "\\" [u]+ [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F] -> UnicodeEscape
+
+  lexical restrictions
+    "/**"    -/- [\/]
+    "/*"     -/- [\*]
+    Asterisk -/- [\/]
+    EscChar  -/- [\\u]
+
+    BlockCommentChars -/- ~[\*\\]
+    EOLCommentChars   -/- ~[\n\13]
+
+  context-free restrictions
+    LAYOUT?  -/- [\/].[\*]
+    LAYOUT?  -/- [\/].[\/]
+
+module languages/java-15/lexical/WhiteSpace
+exports
+  lexical syntax
+    [\ \t\12\r\n] -> LAYOUT
+
+  context-free restrictions
+    LAYOUT? -/- [\ \t\12\n\r]
+
+module languages/java-15/lexical/LineTerminators
+exports
+  sorts
+    LineTerminator CarriageReturn EndOfFile
+
+  lexical syntax
+    [\n]           -> LineTerminator
+    [\r][\n]       -> LineTerminator
+    CarriageReturn -> LineTerminator
+    EndOfFile      -> LineTerminator
+
+    [\r] -> CarriageReturn
+
+  lexical restrictions
+    CarriageReturn -/- [\n]
+
+  %% End of file is empty.
+  lexical syntax    
+    -> EndOfFile
+
+  lexical restrictions
+    EndOfFile -/- ~[]
+
+module languages/java-15/lexical/UnicodeEscapes
+exports
+  sorts
+    UnicodeEscape
+
+  syntax
+    "\\" [u]+ [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F] -> UnicodeEscape {cons("UnicodeEscape")}
+
+module languages/java-15/lexical/Main
+imports
+  languages/java-15/lexical/UnicodeEscapes
+  languages/java-15/lexical/LineTerminators
+  languages/java-15/lexical/WhiteSpace
+  languages/java-15/lexical/Comments
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Keywords
+  languages/java-15/lexical/Modifiers
+  languages/java-15/lexical/literals/Main
+
+module languages/java-15/Main
+imports
+  languages/java-15/lexical/Main
+  languages/java-15/types/Main
+  languages/java-15/names/Main
+  languages/java-15/packages/Main
+  languages/java-15/classes/Main
+  languages/java-15/interfaces/Main
+  languages/java-15/arrays/Main
+  languages/java-15/statements/Main
+  languages/java-15/expressions/Main
+
+
+module Java-15
+imports
+  languages/java-15/Main
+
+exports
+  context-free start-symbols
+    Anno
+    AnnoDec
+    Block
+    BlockStm
+    ClassBodyDec
+    ClassMemberDec
+    CompilationUnit
+    Expr
+    FormalParam
+    Id
+    InterfaceDec
+    InterfaceMemberDec
+    Literal
+    PackageName
+    Stm
+    Type
+    TypeDec
+    TypeVar
+    TypeName
+    
+module lib/Java15Prefixed
+imports Java-15
+          [ CompilationUnit       => JavaCompilationUnit
+            TypeDec               => JavaTypeDec
+            ImportDec             => JavaImportDec
+            PackageDec            => JavaPackageDec
+            ElemVal               => JavaElemVal
+            ElemValPair           => JavaElemValPair
+            Anno                  => JavaAnno
+            LHS                   => JavaLHS
+            CondMid               => JavaCondMid
+            ArraySubscript        => JavaArraySubscript
+            DimExpr               => JavaDimExpr
+            ArrayBaseType         => JavaArrayBaseType
+            ArrayCreationExpr     => JavaArrayCreationExpr
+            ClassMemberDec        => JavaClassMemberDec
+            ClassBodyDec          => JavaClassBodyDec
+            Interfaces            => JavaInterfaces
+            Super                 => JavaSuper
+            ClassMod              => JavaClassMod
+            ClassDecHead          => JavaClassDecHead
+            ClassBody             => JavaClassBody
+            ClassDec              => JavaClassDec
+            InterfaceMod          => JavaInterfaceMod
+            InterfaceMemberDec    => JavaInterfaceMemberDec
+            ExtendsInterfaces     => JavaExtendsInterfaces
+            InterfaceDecHead      => JavaInterfaceDecHead
+            InterfaceDec          => JavaInterfaceDec
+            DefaultVal            => JavaDefaultVal
+            AnnoElemDec           => JavaAnnoElemDec
+            AnnoDecHead           => JavaAnnoDecHead
+            AnnoDec               => JavaAnnoDec
+            AbstractMethodMod     => JavaAbstractMethodMod
+            AbstractMethodDec     => JavaAbstractMethodDec
+            ConstantMod           => JavaConstantMod
+            ConstantDec           => JavaConstantDec
+            EnumBodyDecs          => JavaEnumBodyDecs
+            EnumConstArgs         => JavaEnumConstArgs
+            EnumConst             => JavaEnumConst
+            EnumBody              => JavaEnumBody
+            EnumDecHead           => JavaEnumDecHead
+            EnumDec               => JavaEnumDec
+            ConstrMod             => JavaConstrMod
+            ConstrInv             => JavaConstrInv
+            ConstrBody            => JavaConstrBody
+            ConstrHead            => JavaConstrHead
+            ConstrDec             => JavaConstrDec
+            StaticInit            => JavaStaticInit
+            InstanceInit          => JavaInstanceInit
+            MethodBody            => JavaMethodBody
+            ExceptionType         => JavaExceptionType
+            Throws                => JavaThrows
+            MethodMod             => JavaMethodMod
+            VarMod                => JavaVarMod
+            FormalParam           => JavaFormalParam
+            ResultType            => JavaResultType
+            MethodDecHead         => JavaMethodDecHead
+            MethodDec             => JavaMethodDec
+            BlockStm              => JavaBlockStm
+            Block                 => JavaBlock
+            CatchClause           => JavaCatchClause
+            SwitchLabel           => JavaSwitchLabel
+            SwitchGroup           => JavaSwitchGroup
+            SwitchBlock           => JavaSwitchBlock
+            Stm                   => JavaStm
+            LocalVarDec           => JavaLocalVarDec
+            LocalVarDecStm        => JavaLocalVarDecStm
+            FieldMod              => JavaFieldMod
+            VarInit               => JavaVarInit
+            Dim                   => JavaDim
+            VarDecId              => JavaVarDecId
+            VarDec                => JavaVarDec
+            FieldDec              => JavaFieldDec
+            ArrayInit             => JavaArrayInit
+            ClassLiteral          => JavaClassLiteral
+            Literal               => JavaLiteral
+            Type                  => JavaType
+            ArrayType             => JavaArrayType
+            TypeVar               => JavaTypeVar
+            TypeDecSpec           => JavaTypeDecSpec
+            InterfaceType         => JavaInterfaceType
+            ClassType             => JavaClassType
+            ClassOrInterfaceType  => JavaClassOrInterfaceType
+            RefType               => JavaRefType
+            TypeVarId             => JavaTypeVarId
+            TypeParams            => JavaTypeParams
+            TypeBound             => JavaTypeBound
+            TypeParam             => JavaTypeParam
+            WildcardBound         => JavaWildcardBound
+            ActualTypeArg         => JavaActualTypeArg
+            TypeArgs              => JavaTypeArgs
+            PackageOrTypeName     => JavaPackageOrTypeName
+            MethodName            => JavaMethodName
+            ExprName              => JavaExprName
+            TypeName              => JavaTypeName
+            AmbName               => JavaAmbName
+            PackageName           => JavaPackageName
+            FloatType             => JavaFloatType
+            IntType               => JavaIntType
+            NumType               => JavaNumType
+            PrimType              => JavaPrimType
+            NullLiteral           => JavaNullLiteral
+            FooStringChars        => JavaFooStringChars
+            StringChars           => JavaStringChars
+            StringPart            => JavaStringPart
+            StringLiteral         => JavaStringLiteral
+            SingleChar            => JavaSingleChar
+            CharContent           => JavaCharContent
+            CharLiteral           => JavaCharLiteral
+            LastOcta              => JavaLastOcta
+            OctaEscape            => JavaOctaEscape
+            NamedEscape           => JavaNamedEscape
+            EscapeSeq             => JavaEscapeSeq
+            Bool                  => JavaBool
+            BoolLiteral           => JavaBoolLiteral
+            BinaryExponent        => JavaBinaryExponent
+            HexaSignificand       => JavaHexaSignificand
+            HexaFloatNumeral      => JavaHexaFloatNumeral
+            SignedInteger         => JavaSignedInteger
+            DeciFloatExponentPart => JavaDeciFloatExponentPart
+            DeciFloatDigits       => JavaDeciFloatDigits
+            DeciFloatNumeral      => JavaDeciFloatNumeral
+            FloatLiteral          => JavaFloatLiteral
+            HexaFloatLiteral      => JavaHexaFloatLiteral
+            DeciFloatLiteral      => JavaDeciFloatLiteral
+            IntLiteral            => JavaIntLiteral
+            OctaNumeral           => JavaOctaNumeral
+            HexaNumeral           => JavaHexaNumeral
+            DeciNumeral           => JavaDeciNumeral
+            OctaLiteral           => JavaOctaLiteral
+            HexaLiteral           => JavaHexaLiteral
+            DeciLiteral           => JavaDeciLiteral
+            Modifier              => JavaModifier
+            StrictFP              => JavaStrictFP
+            Synchronized          => JavaSynchronized
+            Volatile              => JavaVolatile
+            Transient             => JavaTransient
+            Native                => JavaNative
+            Static                => JavaStatic
+            Final                 => JavaFinal
+            Abstract              => JavaAbstract
+            Protected             => JavaProtected
+            Private               => JavaPrivate
+            Public                => JavaPublic
+            Id                    => JavaId
+            ID                    => JavaID
+            Keyword               => JavaKeyword
+            EscChar               => JavaEscChar
+            EscEscChar            => JavaEscEscChar
+            Asterisk              => JavaAsterisk
+            BlockCommentChars     => JavaBlockCommentChars
+            CommentPart           => JavaCommentPart
+            EOLCommentChars       => JavaEOLCommentChars
+            Comment               => JavaComment
+            EndOfFile             => JavaEndOfFile
+            CarriageReturn        => JavaCarriageReturn
+            LineTerminator        => JavaLineTerminator
+            UnicodeEscape         => JavaUnicodeEscape
+            ArrayAccess           => JavaArrayAccess
+            FieldAccess           => JavaFieldAccess
+            MethodSpec            => JavaMethodSpec
+            Expr                  => JavaExpr ]

Modified: spoofax-contrib/Lawoco/lib/spoofaxlang.jar
==============================================================================
Binary file (source and/or target). No diff available.

Modified: spoofax-contrib/Lawoco/spx.config
==============================================================================
--- spoofax-contrib/Lawoco/spx.config	Mon May 23 14:25:04 2011	(r22948)
+++ spoofax-contrib/Lawoco/spx.config	Mon May 23 15:44:34 2011	(r22949)
@@ -1,7 +1,6 @@
 Configuration
 	Includes
-		RootDirectory
-			syntax 
+		RootDirectory  syntax 
 		
 		SpxProjects
 			//../DatabaseLang 

From M.A.Akhter at student.tudelft.nl  Mon May 23 18:20:16 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Mon, 23 May 2011 16:20:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22950 -
	spoofax-contrib/Lawoco/syntax
Message-ID: <20110523162016.B2E0B108C008@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Mon May 23 16:20:16 2011
New Revision: 22950
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22950&sc=1

Log:
* renamed constructor name to PropAssign according to the LWC document.

Modified:
   spoofax-contrib/Lawoco/syntax/Lawoco.spx

Modified: spoofax-contrib/Lawoco/syntax/Lawoco.spx
==============================================================================
--- spoofax-contrib/Lawoco/syntax/Lawoco.spx	Mon May 23 15:44:34 2011	(r22949)
+++ spoofax-contrib/Lawoco/syntax/Lawoco.spx	Mon May 23 16:20:16 2011	(r22950)
@@ -1,5 +1,7 @@
 module Lawoco
 
+//imports lib/Java15Prefixed
+
 context-free start-symbols
    Start  
 
@@ -7,29 +9,30 @@
   
     "module" Module@=ID Definition*     -> Start {"Module", scope(Entity, Module)}
     "entity" Entity@=ID "{" Member* "}" -> Definition {"Entity", scope(Property, Function)}
-    Type Property@=ID                   -> Member {"Property"}
+    Type Property@=ID  								  -> Member {"Property"}
     Entity at ID                           -> Type {"Type"}
     "date"                              -> Type {"DateType", prefer}
     "string"                            -> Type {"StringType", prefer}
     "int"                               -> Type {"IntType", prefer}
-
+	  //Type Property@=ID  "=" JavaExpr			-> Member {"PropAssign"}
+		
     "package" Package@=ID "{" Definition* "}" -> Definition {"Package", scope(Entity)}
 
     Function@=ID "(" { Param "," }* ")" Stm -> Member {"Function", scope(Var)}
     Var@=ID ":" Type                        -> Param {"Param"}
     
-    Function at ID "(" {Exp ","}* ")" -> Exp {"Call"}
-    "var" Var@=ID ":" Type         -> Stm {"VarDecl"}
-    "var" Var@=ID ":" Type "=" Exp -> Stm {"VarDeclInit"}
-    Var at ID "=" Exp                 -> Stm {"Assign"}
-    Var at ID                         -> Exp {"Var"}
-    Exp "." Property at ID            -> Exp {"PropAccess"}
-    "{" Stm* "}"                   -> Stm {"Block", scope(Var)}
+    Function at ID "(" {Exp ","}* ")" 			-> Exp {"Call"}
+    "var" Var@=ID ":" Type         			-> Stm {"VarDecl"}
+    "var" Var@=ID ":" Type "=" Exp 			-> Stm {"VarDeclInit"}
+    Var at ID "=" Exp                 			-> Stm {"Assign"}
+    Var at ID                         			-> Exp {"Var"}
+    Exp "." Property at ID            			-> Exp {"PropAccess"}
+    "{" Stm* "}"                   			-> Stm {"Block", scope(Var)}
 
 
 
 language General properties
   name          : Lawoco
-  id            : Lawoco
+  id            : Lawoco   
 
 

From L.C.L.Kats at tudelft.nl  Fri May 27 14:59:15 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 27 May 2011 12:59:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22951 - in
	spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.testing/editor org.strategoxt.imp.testing/syntax
	org.strategoxt.imp.testing/trans org.strategox...
Message-ID: <20110527125915.A393F108C00A@mx3.tudelft.nl>

Author: LennartKats
Date: Fri May 27 12:59:14 2011
New Revision: 22951
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22951&sc=1

Log:
Testing language:
- fixed ambiguity in check clause
- updated content completion templates
- warning about 'start symbol' not working atm

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.testing/editor/Spoofax-Testing-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.testing/syntax/Spoofax-Testing.sdf
   spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check.str
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Mon May 23 16:20:16 2011	(r22950)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Fri May 27 12:59:14 2011	(r22951)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.6.1.2"
+      version="0.6.1.4"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/editor/Spoofax-Testing-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/editor/Spoofax-Testing-Completions.esv	Mon May 23 16:20:16 2011	(r22950)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/editor/Spoofax-Testing-Completions.esv	Fri May 27 12:59:14 2011	(r22951)
@@ -36,11 +36,29 @@
   completion template : TestDecl =
     "test" " " <description> "\n\t" "[[" <  > "]] => " <pattern> (blank)
     
-  completion template : Result = "fails"    
-  completion template : Result = "fails parsing"  
+  completion template : Result = "parse to file " <path>
+  completion template : Result = "parse to " <term>
+  completion template : Result = "parse fails" 
+  completion template : Result = "parse succeeds" 
   completion template : Result = "succeeds"
-  completion template : Result = "=> file " <path>
-  completion template : Result = "resolves " <x>
-  completion template : Result = "resolves " <x> "#2 to " <x> "#1"
-  completion template : Result = "completes " <x> " to " <x>
-  
\ No newline at end of file
+  completion template : Result = "fails"    
+  completion template : Result = <n> " errors" 
+  completion template : Result = <n> " warnings" 
+  completion template : Result = "resolve " <x>
+  completion template : Result = "resolve " <#2> " to  " <#1>
+  completion template : Result = "complete " <#1>
+  completion template : Result = "complete " <#1> " to " <\"name\">
+  completion template : Result = "build " <builder> "(" <> /*<OptArgument:>*/ ") to " <OptPattern:output>
+  completion template : Result = "refactor " <refactoring> "(" <> ") to " <OptPattern:output>
+  completion template : Result = "run " <builder> "(" <> ") " <OptPattern:to>
+  
+
+  completion template : OptArgument = ""
+  completion template : OptArgument = "\"" <arg> "\""
+
+  completion template : OptPattern = ""
+  completion template : OptPattern = "fails"
+  completion template : OptPattern = "to file " <file>
+  completion template : OptPattern = "to " <term>
+  completion template : OptPattern = "to " <term>
+  completion template : OptPattern = "to [[ " <output> " ]]"

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/syntax/Spoofax-Testing.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/syntax/Spoofax-Testing.sdf	Mon May 23 16:20:16 2011	(r22950)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/syntax/Spoofax-Testing.sdf	Fri May 27 12:59:14 2011	(r22951)
@@ -92,7 +92,6 @@
     "parse" "fails"      -> Result {cons("FailsParsing")}
     "succeeds"           -> Result {cons("Success")}
     "parse" "succeeds"   -> Result {cons("SuccessParsing")}
-    "parse"              -> Result {cons("SuccessParsing")}
 
     "file" PathName -> Input {cons("file")}
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check.str	Mon May 23 16:20:16 2011	(r22950)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check.str	Fri May 27 12:59:14 2011	(r22951)
@@ -27,6 +27,9 @@
   
   check-note = fail
   
+  check-warning:
+    TopSort(s) -> (s, $[Start symbol filter not implemented; use a setup block instead])
+  
   check-error:
     Test(_, d, _, [_, _ | _]) -> (d, "Specify only one success condition)") // maybe in the future...
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	Mon May 23 16:20:16 2011	(r22950)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	Fri May 27 12:59:14 2011	(r22951)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.6.1.2.jar" id="org.strategoxt.imp" version="0.6.1.2">
+   <feature url="features/org.strategoxt.imp_0.6.1.4.jar" id="org.strategoxt.imp" version="0.6.1.4">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">

From M.A.Akhter at student.tudelft.nl  Sat May 28 17:43:05 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sat, 28 May 2011 15:43:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22952 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	codegen codegen/sdf utils
Message-ID: <20110528154305.E9E367F8072@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Sat May 28 15:43:04 2011
New Revision: 22952
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22952&sc=1

Log:
* autogenerate -IDEF args for pack.sdf. SDF sections are analyzed to figure out **legal** DEF imports. Afterwards just add those DEF imports during generating build scripts.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/sourcedir.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str	Fri May 27 12:59:14 2011	(r22951)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/buildscripts.str	Sat May 28 15:43:04 2011	(r22952)
@@ -49,7 +49,7 @@
     <property name="dist" location="bin/dist"/>
     
 		<!-- Environment configuration for command-line builds -->
-    <property name="build.sdf.imports" value= "-I &quot;${basedir}&quot; -I &quot;${packages.root}&quot;"/>
+    <property name="build.sdf.imports" value= "-I &quot;${basedir}&quot; "/>
     <property name="build.stratego.args" value="
                     --library
                     -I &quot;${packages.root}&quot;
@@ -73,7 +73,6 @@
 	
 	
 	emit-package-specific-ant : p at Package(package-untyped-qname at QName(qname-parts*)) -> $[ 
-	
 	<target name="[package-target-name]">
 		<property name="package.path" location="[package-directory]"/>
 		<property name="lang.id.specific.directoy" value="[language-id-directory]"/>
@@ -83,7 +82,8 @@
 		<property name="package.main.str.module" value="[language-name]"/>
 		<property name="package.main.esv.module" value="[language-name].main"/>
 		<property name="metasdfmodule" value="Stratego-[language-name]"/>
-		 
+		<property name="lang.sdf.specific.params" value="[language-sdf-specific-params]"/>
+		<property name="lang.str.specific.params" value="[language-str-specific-params]"/>
 		
 		<antcall target = "spx.default">
 		  <param name = "package.name"  value = "${package.name}"/>
@@ -93,17 +93,21 @@
 		 	<param name = "package.main.sdf.module" value = "${package.main.sdf.module}"/>
 			<param name = "package.main.str.module" value = "${package.main.str.module}"/>
 		 	<param name = "package.main.esv.module" value = "${package.main.esv.module}"/>
-			<param name = "metasdfmodule" value = "${metasdfmodule}"/>
+			<param name = "metasdfmodule" value = "${metasdfmodule}"/>
+			<param name="lang.sdf.specific.params" value="${lang.sdf.specific.params}"/>
+			<param name="lang.str.specific.params" value="${lang.str.specific.params}"/>
 		</antcall>
 	</target>	
 	]
 	where 
-		 relative-autogen-path      := <qname-to-path>package-untyped-qname
-		;package-directory		      := $[[<Autogenerated-Artifacts-Dir>]/[relative-autogen-path]]
- 		;language-name							:= <get-language-name>p
- 		;language-id-directory			:= <get-language-id; language-id-to-file-path>p
- 		;package-target-name				:= <get-package-target-name>package-untyped-qname  
- 		;package-qname-string				:=  <convert-qname(|".");string-replace(|"-", ".")>package-untyped-qname
+		relative-autogen-path        := <qname-to-path>package-untyped-qname
+		;package-directory		        := $[[<Autogenerated-Artifacts-Dir>]/[relative-autogen-path]]
+ 		;language-name						 	  := <get-language-name>p
+ 		;language-id-directory			  := <get-language-id; language-id-to-file-path>p
+ 		;package-target-name				  := <get-package-target-name>package-untyped-qname  
+ 		;package-qname-string				  :=  <convert-qname(|".");string-replace(|"-", ".")>package-untyped-qname
+ 		;language-sdf-specific-params := <get-idef-args>p 
+ 		;language-str-specific-params := ""	 
 
 rules
 	
@@ -122,7 +126,8 @@
 			string-tokenize(|<explode-string>".");
 			separate-by(|"/");
 			concat-strings
-			
+	
+	get-idef-args = get-all-imported-defs ; map(\s -> $[ -Idef &quot;${basedir}/[s].def&quot; ]\) 		
 		
 rules
 			
@@ -258,7 +263,8 @@
             <arg value="-I"/>
             <arg value="${lib}"/>
             <arg line="${utils-include}"/>
-            <arg line="${build.sdf.imports}"/>
+            <arg line="${build.sdf.imports}"/>
+            <arg line="${language-sdf-specific-params}"/>
         </java>
     </target>
 	
@@ -537,7 +543,8 @@
       <arg line="${build.stratego.extraargs}"/>
       <arg line="${externaljarflags}"/>
       <arg line="${externaldefimport}"/>
-      <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+      <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+      <arg line="${language-str-specific-params}"/>
   </java>
   <delete file="${include}/${package.name}.rtree" failonerror="false"/>
   <mkdir dir="${build}/trans"/>
@@ -567,7 +574,7 @@
 			<arg value="-i"/>
       <arg value="${packages.root}/${package.main.esv.module}.packed.esv"/>
       <arg value="-p"/>
-      <arg value="${include}/${package.name}.tbl"/>
+      <arg value="${include}/${package.name}.tbl"/>
     </java>
   </target>
 </project>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Fri May 27 12:59:14 2011	(r22951)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Sat May 28 15:43:04 2011	(r22952)
@@ -55,20 +55,20 @@
 			;<debug>$[-------------------Getting list of errors-------------------]
 			;<get-all-analyzed-problems>() => problems  
 			;if <fail-if-has-errors>problems then
-			 	 <debug>$[-------------------Generating artifacts-------------------]
-			 	;init-code-generation  
-				;<list-loop(generate-spx-package)>list-of-package-qname*
-				;<debug>$[-------------------------Generating Build Scipt---------------------]
-				;<emit-build-script> <filter(has-language-name-configured)>list-of-package-qname*
-				;<debug>$[-------------------------Code Generation is done-------------------------] 		
+			 	{| ImportedDef : 
+			 	 			<debug>$[-------------------Generating artifacts-------------------]
+			 				;init-code-generation  
+							;<list-loop(generate-spx-package)>list-of-package-qname*
+							;<debug>$[-------------------------Generating Build Scipt---------------------]
+							;<emit-build-script> <filter(has-language-name-configured)>list-of-package-qname*
+							;<debug>$[-------------------------Code Generation is done-------------------------]
+				|} 		
 			else
 				<debug>$[Please fix the errors before building the artifacts:  [<pp-aterm-forced>problems]]
 			end		 
 		)
 		;disable-compiler-debugging
 		;!current-term //restoring current term to avoid side effects  
-	
-	has-language-name-configured = ?Package(QName(_)) ; where(get-language-name)
 		
 rules
 
@@ -144,7 +144,6 @@
 	
 		
 rules
-	
 	to-generated-artifact-block(adapter, post-coversion-adapter) : list-stmt* -> resultant-block* 
 	with contracts( 
 		contract-requires(is-list |list-stmt*)
@@ -153,11 +152,6 @@
 		<adapter>list-stmt*  => adapted-result*; // results are  adapted using the specified adapter
 		<post-coversion-adapter>adapted-result*  => resultant-block*
 
-
-	// Verifies wheter a particular list is empty or not.
-	ensure-list-is-not-empty =  contracts(contract-requires (is-list| <id>)); is-not-empty-list
-	
-	
 rules
 	// generates the import declaration for the artifacts .  
 	// s is a artifact specific adapted strategy applied to all the import declaration 
@@ -165,8 +159,6 @@
 	to-generated-artifacts-import-declarations(s) =
 		?imports*;	map(to-import-declaration(s)); flatten-list;	make-set; 	where(<debug-compiler>$[Codegen | Imports | Resultant imports :  [<pp-aterm>]]) 
 		
-	
-		
 	to-import-declaration(s): 
 		i at ImportPackage(package-qname at QName(_)) -> results
 		where 
@@ -230,6 +222,16 @@
 	
 	save-artifact( | package-untyped-qname, root-directory,output-path) : 
 		content -> <save-artifact( save-to-file | package-untyped-qname, root-directory,output-path)>content 
+
+
+rules
+	
+	// Verifies wheter a particular list is empty or not.
+	ensure-list-is-not-empty =  contracts(contract-requires (is-list| <id>)); is-not-empty-list
+		
+	has-language-name-configured = ?Package(QName(_)) ; where(get-language-name)
+	
+	get-all-imported-defs = bagof-ImportedDef
 		
 		
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Fri May 27 12:59:14 2011	(r22951)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Sat May 28 15:43:04 2011	(r22952)
@@ -101,22 +101,40 @@
 			sdf-import-block := []
 		end		
  
- 	
+ 	// Resolved Imports are alraedy filtered out in the previous step.
+ 	// Hence, native spx imports are added without any further 
+ 	// verifications. 
  	sdf-import-adapter : name  -> 	'module(unparameterized(name))
  	where 
  		<is-string>name
- 	
- 	sdf-import-adapter : legacy-artifact at Name(name)  -> 	result
+	
+	// Additional verification is done during importing legacy artifacts.
+	// Here, both Unresolved libraries and Stratego Libs are Ignored.
+	// Basically anything Unresolved is not added as a import statment in 
+	// generated SDF definition. 
+	sdf-import-adapter : legacy-artifact at Name(name)  -> 	result
  	where debug
  	where 
  		if <has-extension(|"sdf")+has-extension(|"def")><UsedLegacyArtifacts>(<GetEnclosingPackageName> , name)then  
 				// Importing Legacy artifact only if it is a SDF or DEF file
 				// Assumption : unresolved imports refers to stratego lib and declared in global scope. 
-				result :=  'module(unparameterized(name))
+				result :=  'module(unparameterized(name)) ;
+				<record-def-import-reference>name			
 		else
 				result :=  [] 	
 		end 
-			
+	
+	// Recoding references of def file so that we can specify -Idef arguments in pack-sdf 
+	// It would have been much cleaner if Pack-SDF by defult supports it without specifying this extra arguments.  	
+	record-def-import-reference =
+		where( 
+			?def-import-path;	
+			// Verifying whether it is indeed a def file. 
+			if (<has-extension(|"def")><UsedLegacyArtifacts;debug(!"resolved path : ")>(<GetEnclosingPackageName> , def-import-path)) then
+				package-typed-qname := <GetEnclosingPackageName> ; 
+				rules(ImportedDef :+ package-typed-qname  ->  def-import-path)	
+			end		
+		)
 
 rules
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/sourcedir.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/sourcedir.str	Fri May 27 12:59:14 2011	(r22951)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/sourcedir.str	Sat May 28 15:43:04 2011	(r22952)
@@ -3,7 +3,7 @@
 imports
   lib/editor-common.generated
   libstrc
-	spoofaxlang
+	common
 rules
   
   get-source-base-dir: mod at Module(x, _) -> mod

From n.bruning at student.tudelft.nl  Sat May 28 19:39:16 2011
From: n.bruning at student.tudelft.nl (Nathan Bruning)
Date: Sat, 28 May 2011 17:39:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22953 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans
Message-ID: <20110528173916.D3010108C011@mx3.tudelft.nl>

Author: NathanBruning
Date: Sat May 28 17:39:15 2011
New Revision: 22953
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22953&sc=1

Log:
Fix Spoofax/#117: checking higher-order strategy arguments

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	Sat May 28 15:43:04 2011	(r22952)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	Sat May 28 17:39:15 2011	(r22953)
@@ -496,8 +496,15 @@
     where
       x' := x{<declare-cookie-of>}
     <+
-      fail // TODO: special exception for higher-order args
-
+      // HACK: a higher-order strategy can be passed as an argument, 
+      // as in s1(s2), where s2 has arguments. We can only check if there
+      // is a strategy called s2, independent of the number of
+      // (strategy/term) arguments to s2.
+      signature-of => sig;
+      all-keys-DeclareCookie;
+      fetch-elem(\key@(x, s*, t*) -> <?sig; !key; DeclareCookie> (x, 0, 0)\);
+      x' := x{<id>}
+  
   declare-bodies:
     Op(x, t*) -> Op(x', t'*)
     where

From M.A.Akhter at student.tudelft.nl  Sun May 29 03:25:44 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sun, 29 May 2011 01:25:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22954 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	analyze analyze/str codegen codegen/sdf codegen/str context
Message-ID: <20110529012544.6A3D27F8090@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Sun May 29 01:25:37 2011
New Revision: 22954
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22954&sc=1

Log:
* error checking of SPX Imports
	* error checking SPX packages 
	* error checking SPX modules
	* error checking Legacy Artifacts
	* error checking Global Artifacts

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-import.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/str/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/signatures.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-import.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-import.str	Sun May 29 01:25:37 2011	(r22954)
@@ -0,0 +1,71 @@
+module analyze/check-import
+
+imports
+	context/-
+	
+imports 
+	include/SpoofaxLang
+	utils/debug
+	utils/path
+	common
+	
+rules
+	analyze-section: 
+		Imports(ast) -> (errors, [], [])
+		where
+  		<debug-analysis>$[ErrorChecking | Imports Section : [<pp-aterm>]]
+		with 
+			errors   := <collect-om(imports-constraint-error)> ast
+rules
+	imports-constraint-error:
+		 ImportLegacyArtifact(Name(m at modulename)) -> ( m, $[Failed to import '[m]'. Module is not found. Please verify it exist at [directory-path] directory.])
+		 where
+		 	!modulename;
+		 	not-declared-legacy-artifact 
+		 where
+		 	directory-path := <concat-strings;dirname> [<get-project-path>, "/", m]
+	
+	imports-constraint-error: 
+		ImportPackage(package-qname at QName(_)) -> (package-qname , $[Failed to resolve '[package-qname-string]'. Please check spx.config for configured SPX sources. ])
+		where
+			!package-qname;
+			require(is-declared-package)
+		where
+			package-qname-string := <convert-qname(|".")>package-qname
+	
+	imports-constraint-error:
+		ImportPackage(Name(package-name)) -> (package-name, $[Failed to resolve '[package-name]'.])
+		where
+			require(
+				<is-declared-package>QName([package-name])
+			+		
+				<is-declared-legacy-artifact<+is-declared-global-artifact>package-name
+			) 	
+	
+	imports-constraint-error:
+		ImportSpxModule(Name(package-name), SPXModuleName(modname)) -><imports-constraint-error>ImportSpxModule(QName([package-name]), SPXModuleName(modname))
+		
+	imports-constraint-error:	
+		q at ImportSpxModule(qname at QName(package-qname-parts), SPXModuleName(modname)) -> (q , $[Failed to resolve SPX module : '[module-qname-string]'. Please check spx.config for configured SPX sources. ])
+		where
+			module-qname 			 := <get-module-untyped-qname> (package-qname-parts , modname);
+			require(
+				is-declared-module
+			)	
+		where
+			module-qname-string :=  <convert-qname(|".")>module-qname
+
+rules
+	 not-declared-legacy-artifact = is-not-declared-global-artifact; is-not-declared-legacy-artifact 
+	 
+	 is-declared-package = where(DeclaredPackage)
+    
+   is-declared-module = where(DeclaredModule)
+    
+   is-not-declared-legacy-artifact = where(not(is-declared-legacy-artifact))
+    
+   is-declared-legacy-artifact = ?name; where(<UsedLegacyArtifacts>(<GetEnclosingPackageName> , name))
+    
+   is-declared-global-artifact = ?name ;  where(<UsedLegacyArtifacts>(Globals(), name)  => Resolved())
+   
+   is-not-declared-global-artifact = where(not(is-declared-global-artifact)) 		
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str	Sat May 28 17:39:15 2011	(r22953)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/check-module.str	Sun May 29 01:25:37 2011	(r22954)
@@ -45,12 +45,12 @@
 		
 rules
 	
-	analyze: 
+	analyze-module-definition: 
 		m at Module(attrb* , modname , section*) -> m
 		with
-				 package-typed-qname := <GetEnclosingPackageName> 
+				package-typed-qname := <GetEnclosingPackageName> 
 				;module-typed-qname  := <GetEnclosingModuleName>
-				<+ 
+			<+ 
 				 debug(!"ErrorChecking | Failed to create current scope.")
 				;fail
 		with
@@ -70,7 +70,7 @@
 rules 
 			 
 	analyze-section = 
-		where(not(?SDFSection(_) + ?ESVSection(_) + ?STRSection(_) + ?SDFSectionEH(_, _)))
+		where(not(?Imports(_)+?SDFSection(_) + ?ESVSection(_) + ?STRSection(_) + ?SDFSectionEH(_, _)))
 		;<debug-analysis>$[ErrorChecking | Ignoring Section: [<pp-aterm>]] 
 		;!([], [], [])		
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str	Sat May 28 17:39:15 2011	(r22953)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str	Sun May 29 01:25:37 2011	(r22954)
@@ -81,24 +81,24 @@
 			<debug-analysis> $[Analyze|  analyze-spx-module> Planning to analyze module for semantic problems: [<pp-aterm>]] 
 		where 
 			if not(<AnalyzedModule>module-typed-qname) then
-				<debug-analysis> $[Analyze| analyze-spx-module> Currently Analyzing : [<pp-aterm>]]; 
-				module-decl* := <get-module-declarations>module-typed-qname;
-				{|GetEnclosingModuleName:
-						rules( GetEnclosingModuleName := module-typed-qname);
-						<list-loop(
-								analyze
-						 )>module-decl*
-				|};
-				module-abs-path := <DeclaredModule>untyped-qname;
-				where(
-					rules(
-						AnalyzedModule:     module-typed-qname -> module-typed-qname 
-						AnalyzedModulesDeclaredIn:+ module-abs-path -> module-typed-qname
+					<debug-analysis> $[Analyze| analyze-spx-module> Currently Analyzing : [<pp-aterm>]]; 
+					module-decl* := <get-module-declarations>module-typed-qname;
+					{|GetEnclosingModuleName:
+							rules( GetEnclosingModuleName := module-typed-qname);
+							<list-loop(
+									analyze-module-definition
+							 )>module-decl* 
+					|};
+					module-abs-path := <DeclaredModule>untyped-qname;
+					where(
+						rules(
+							AnalyzedModule:     module-typed-qname -> module-typed-qname 
+							AnalyzedModulesDeclaredIn:+ module-abs-path -> module-typed-qname
+						)
 					)
-				)
-				<+
-				<debug-analysis> $[Analyze| analyze-spx-module| [<pp-aterm>module-typed-qname] Failed. ]
-				;fail
+				<+ 
+					<debug-analysis> $[Analyze| analyze-spx-module| [<pp-aterm>module-typed-qname] Failed. ]
+					;fail
 			else
 				<debug-analysis> $[Analyze| analyze-spx-module| Ignored as already in the queue :[<pp-aterm>]] //this package is not compiled before
 			end		
@@ -171,9 +171,9 @@
 	unzip-semantic-issuses:
 		list-of-semantic-issues -> unziped-list
 		where
-			<unzip-semantic-issuse(|[] , [], [])>list-of-semantic-issues => unziped-list
+				<unzip-semantic-issuse(|[] , [], [])>list-of-semantic-issues => unziped-list
 			<+
-			debug(!"unzip semantic issues failed : ");fail
+				debug(!"unzip semantic issues failed : ");fail
 	
 	//unziping list of semantic issues
 	unzip-semantic-issuse(|errors, warnings, infos) =

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/str/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/str/check.str	Sat May 28 17:39:15 2011	(r22953)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/str/check.str	Sun May 29 01:25:37 2011	(r22954)
@@ -20,8 +20,8 @@
 		where
   		<debug-analysis>$[ErrorChecking | STR Section : [<pp-aterm>]]
 		with
-    	errors   := <collect-all(global-constraint-error + constraint-error, conc)> ast;
-      warnings := <collect-all(constraint-warning, conc)> ast
+    	errors   := <collect-all(stratego-global-constraint-error + stratego-constraint-error, conc)> ast;
+      warnings := <collect-all(stratego-constraint-warning, conc)> ast
       
 rules 
 	//TODO : Use new Is-declared in other cases where needed. 		
@@ -39,47 +39,50 @@
 	
 	assert-eq-opname-arity(|actual-opname , actual-no-of-arguments)= 
 			?[hd|tl]
-			;(	(expected-op-name , expected-no-of-arguments) := hd 
-					;	actual-opname := expected-op-name 
-					; actual-no-of-arguments := expected-no-of-arguments
-			  <+
-					<assert-eq-opname-arity(|actual-opname , actual-no-of-arguments)>tl
+			;((expected-op-name , expected-no-of-arguments) := hd 
+				;	actual-opname := expected-op-name 
+				; actual-no-of-arguments := expected-no-of-arguments
+			  <+ <assert-eq-opname-arity(|actual-opname , actual-no-of-arguments)>tl
 				)	  
        
 rules // Constraints
 
-  global-constraint-error:
+  stratego-global-constraint-error:
     CallT(SVar(x), s*, t*) -> (x, $[Strategy or rule '[x]' not defined])
     where
       //require(is-declared)
-			require(is-declared <+ is-declared(|<length> t*))
+			require(
+				 is-declared 
+			<+ is-declared(|<length> t*))
 			
-  global-constraint-error:
+  stratego-global-constraint-error:
     Op(x, t*) -> (x, $[Constructor [x]/[<length> t*] not declared])
     where
-    	require(is-declared <+ is-declared(|<length> t*))
+    	require(
+    		 is-declared 
+    	<+ is-declared(|<length> t*))
 
   constraint-error:
     Var(x) -> (x, $[Variable '[x]' is not declared])
     where
       require(is-declared)
       
-  global-constraint-error:
+  stratego-global-constraint-error:
     Import(x) -> (x, $[Unable to import '[x]'])
     where
       require(not(<IsImportedFailed> x))
 
-  global-constraint-error:
+  stratego-global-constraint-error:
     DynRuleScopeId(x) -> (x, $[Dynamic rule '[x]' not defined])
     where
       require(is-declared)
 
-  global-constraint-error:
+  stratego-global-constraint-error:
     LabeledDynRuleId(x, _) -> (x, $[Dynamic rule '[x]' not defined])
     where
       require(is-declared)
 
-  constraint-error:
+  stratego-constraint-error:
     AnnoDef(a*, sdef @ SDefT(x, _, _, _)) -> (a*, $[No external strategy or rule '[x]'])
     with
       if not(!a* => []) then
@@ -93,50 +96,49 @@
       + <declaration-of> sdef => ExtSDef(_, _, _)
       )
 
-  global-constraint-error:
+  stratego-global-constraint-error:
     SDefT(x{cookie}, s*, t*, s) -> (x, $[Conflicts with external definition of '[x]'])
     where
       require(
-        <getStrDeclaration> cookie => SDefT(_, _, _, _)
-      <+
-        IsNoConflict
+         <getStrDeclaration> cookie => SDefT(_, _, _, _)
+      <+ IsNoConflict
       )
 
   // FIXME: name sdefs after constructors to fix constructor conflict errors 
-  constraint-error:
+  stratego-constraint-error:
     OpDecl(x{cookie}, s*) -> [(x, $[Conflicts with strategy '[y_name]']),
                               (y, $[Conflicts with constructor [x]/[<length> s*]])]
     where
       require(not(<getStrDeclaration> cookie => y @ SDefT(y_name, _, _, _)))
 
-  constraint-error:
-    Build(t) -> <constraint-error-bad-build> t
+  stratego-constraint-error:
+    Build(t) -> <stratego-constraint-error-bad-build> t
 
-  constraint-error:
-    Assign(_, t) -> <constraint-error-bad-build> t
+  stratego-constraint-error:
+    Assign(_, t) -> <stratego-constraint-error-bad-build> t
 
-  constraint-error:
-    Rule(_, t, _) -> <constraint-error-bad-build> t
+  stratego-constraint-error:
+    Rule(_, t, _) -> <stratego-constraint-error-bad-build> t
   
-  constraint-error:
-    BA(_, t) -> <constraint-error-bad-build> t
+  stratego-constraint-error:
+    BA(_, t) -> <stratego-constraint-error-bad-build> t
   
-  constraint-error:
-    App(_, t) -> <constraint-error-bad-build> t
+  stratego-constraint-error:
+    App(_, t) -> <stratego-constraint-error-bad-build> t
 
-  constraint-error:
-    Match(t) -> <constraint-error-bad-match> t
+  stratego-constraint-error:
+    Match(t) -> <stratego-constraint-error-bad-match> t
 
-  constraint-error:
-    Assign(t, _) -> <constraint-error-bad-match> t
+  stratego-constraint-error:
+    Assign(t, _) -> <stratego-constraint-error-bad-match> t
 
-  constraint-error:
-    AM(_, t) -> <constraint-error-bad-match> t
+  stratego-constraint-error:
+    AM(_, t) -> <stratego-constraint-error-bad-match> t
 
-  constraint-error:
-    Rule(t, _, _) -> <constraint-error-bad-match> t
+  stratego-constraint-error:
+    Rule(t, _, _) -> <stratego-constraint-error-bad-match> t
 
-  constraint-error-bad-build:
+  stratego-constraint-error-bad-build:
     t -> matches
     where
       collect(?RootApp(_) + ?App(_, _) + Wld + ?As(_, _) + ?BuildDefault(_) + ?BuildDefaultPT(_));
@@ -144,7 +146,7 @@
       map(!(<id>, "Match symbol in build pattern")) => matches;
       require([])
 
-  constraint-error-bad-match:
+  stratego-constraint-error-bad-match:
     t -> builds
     where
       collect(?StringQuotation1(_, _) + ?StringQuotation2(_, _) + ?StringQuotation3(_, _) + ?StringQuotation4(_, _) + ?BuildDefault(_) + ?BuildDefaultPT(_));
@@ -153,27 +155,27 @@
       require([])
   
   //TODO FIX : origin tracking is not working 
-  constraint-warning:
+  stratego-constraint-warning:
     Assign(v @ Var(x), _) -> (x, $[Variable '[x]' may be bound already])
     where
       Var(x') := <declaration-of> v;
       require(<origin-equal(|x)> x')
 
-  constraint-warning:
+  stratego-constraint-warning:
     Var(x) -> (x, $[Unparenthesized constructor: use '[x]()' instead])
     where
       require(not(is-constructor))
 
-  constraint-warning:
+  stratego-constraint-warning:
     CallT(SVar(<"debug" + "say">), [t], []) -> (s, $[Should be '![s]'])
     where
       !t => StrCong(s) + !t => IntCong(s)
 
-  constraint-warning:
+  stratego-constraint-warning:
     Import("Java-15") -> (<id>, "Use 'import libjava-front' instead")
 
   /*
-  constraint-warning:
+  stratego-constraint-warning:
     Module(x, _) -> (x, $[Module name should be qualified with a path relative to the import path])
     where
       not(NoAnalysis);
@@ -184,12 +186,12 @@
       |}
   */
 
-  constraint-warning:
+  stratego-constraint-warning:
     Module(x, _) -> (x, $[Module name does not correspond to file name])
     where
       require(<eq> (<base-filename> x, <remove-extension> <base-filename> <CurrentFileFullPath>))
 
-  constraint-warning:
+  stratego-constraint-warning:
     Import(f) -> (f, $[Relative path in import])
     where
       <string-starts-with(|"../")> f

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Sat May 28 17:39:15 2011	(r22953)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Sun May 29 01:25:37 2011	(r22954)
@@ -277,7 +277,7 @@
 			|}
 			
 	compile-legacy-artifact: 
-		legacy-artifact-details@(namespace, Module(Name(modulename)) , resolving-path) -> legacy-artifact-details
+		legacy-artifact-details@(namespace, m at Module(Name(modulename)) , resolving-path) -> legacy-artifact-details
 		where
 			<debug-compiler>$[compile-main | compile-legacy-artifact | planning to compile following legacy artifact: [<pp-aterm>]] 
 		where
@@ -285,10 +285,12 @@
 				if (!resolving-path => Unresolved()) then 
 					  // we are only supporting legacy STR lib at this moment which are not located in the file system . 
 					  // Hence, it is unresolved , we are giving it a try to resolve it as a lib
-	  				<get-cached-lib-ast(read-stratego-signatures);declare-stratego-globals-top>modulename
-					<+
-						<read-stratego-signatures;declare-stratego-globals-top> modulename	
-					<+ 
+						( <get-cached-lib-ast(read-stratego-signatures);declare-stratego-globals-top>modulename 
+						 <+ 
+						  <read-stratego-signatures;declare-stratego-globals-top> modulename
+						);
+						<record-legeacy-global-import-is-resolved>(namespace , modulename) 
+				  <+			
 						<debug-compiler>$[compile-main | compile-legacy-artifact | Error :  failed to resolve]
 				else
 					// Verify that the resource has a known extension.

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Sat May 28 17:39:15 2011	(r22953)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Sun May 29 01:25:37 2011	(r22954)
@@ -117,7 +117,7 @@
  	where 
  		if <has-extension(|"sdf")+has-extension(|"def")><UsedLegacyArtifacts>(<GetEnclosingPackageName> , name)then  
 				// Importing Legacy artifact only if it is a SDF or DEF file
-				// Assumption : unresolved imports refers to stratego lib and declared in global scope. 
+				// Assumption : resolved global imports refers to stratego lib and declared in global scope. 
 				result :=  'module(unparameterized(name)) ;
 				<record-def-import-reference>name			
 		else
@@ -130,7 +130,7 @@
 		where( 
 			?def-import-path;	
 			// Verifying whether it is indeed a def file. 
-			if (<has-extension(|"def")><UsedLegacyArtifacts;debug(!"resolved path : ")>(<GetEnclosingPackageName> , def-import-path)) then
+			if (<has-extension(|"def")><UsedLegacyArtifacts>(<GetEnclosingPackageName> , def-import-path)) then
 				package-typed-qname := <GetEnclosingPackageName> ; 
 				rules(ImportedDef :+ package-typed-qname  ->  def-import-path)	
 			end		

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Sat May 28 17:39:15 2011	(r22953)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Sun May 29 01:25:37 2011	(r22954)
@@ -149,9 +149,11 @@
 	to-str-import: 
 		legacy-artifact at Name(name)  -> 	result 
  		where
-			if(<UsedLegacyArtifacts>(Globals() , name) => Unresolved()) 
-						<+ 
-					<has-extension(|"str")+has-extension(|"str")><UsedLegacyArtifacts>(<GetEnclosingPackageName> , name)
+			if(
+				<UsedLegacyArtifacts>(Globals() , name) => Resolved() 
+			<+ 
+				<has-extension(|"str")+	has-extension(|"rtree")><UsedLegacyArtifacts>(<GetEnclosingPackageName> , name)
+			)
 			then
 				// Importing legacy artifact. Please note that , for legacy artifact, signatrue is not included
 				// as it is taken care of during signature generation of _Internal module for every package. 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/signatures.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/signatures.str	Sat May 28 17:39:15 2011	(r22953)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/signatures.str	Sun May 29 01:25:37 2011	(r22954)
@@ -24,8 +24,9 @@
 	STRSection								: Symbol
 	ESVSection								: Symbol
 	SDFSection								: Symbol
-	Unresolved								: Symbol
 	
+	Unresolved								: Symbol
+	Resolved									: Symbol
 	
 	ModuleType								: Type
 	PackageType								: Type

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str	Sat May 28 17:39:15 2011	(r22953)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str	Sun May 29 01:25:37 2011	(r22954)
@@ -143,4 +143,13 @@
 			)
 		where
 			<debug-symboltable>$[ImportReferenceResolver| storing enclosing imports reference| <Using>: ([<pp-aterm>importedby-package] , [<pp-aterm>module-untyped-qname])-> [<pp-aterm>imported]]
-				
\ No newline at end of file
+		
+rules 
+	record-legeacy-global-import-is-resolved =
+		?(ns,  modulename);
+		if  <UsedLegacyArtifacts>(ns,  modulename) => Unresolved() then
+			with(
+				rules( UsedLegacyArtifacts:(ns, modulename) -> Resolved())
+			)				
+		end
+	
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Sun May 29 03:28:25 2011
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Sun, 29 May 2011 01:28:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22955 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize
Message-ID: <20110529012825.470A37F809C@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Sun May 29 01:28:23 2011
New Revision: 22955
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22955&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str	Sun May 29 01:25:37 2011	(r22954)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str	Sun May 29 01:28:23 2011	(r22955)
@@ -20,8 +20,10 @@
 	
 //TODO FIX : 
 // Design issues : 
-//		Package Common Imports are only for the current spx file at this moment
-//		It could be kept as it is or make it common in the whole package. 
+//	1. Package Common Imports are only for the current spx file at this moment
+//		 It could be kept as it is or make it common in the whole package. 
+//	2. When done with fixing origin tracking , normalize Import Statements
+	
 strategies		
 	nomalize-all = desugar-compilationa-unit
 

From seba at informatik.uni-marburg.de  Mon May 30 15:28:40 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Mon, 30 May 2011 13:28:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22956 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20110530132840.D4EA2CC043@mx4.tudelft.nl>

Author: SebastianErdweg
Date: Mon May 30 13:28:36 2011
New Revision: 22956
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22956&sc=1

Log:
consider completion prefixes as a name only if it contains characters, i.e. a description

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/Completion.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/Completion.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/Completion.java	Sun May 29 01:28:23 2011	(r22955)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/Completion.java	Mon May 30 13:28:36 2011	(r22956)
@@ -85,7 +85,7 @@
 		this.newText = buildNewText();
 		this.flags = flags;
 		this.description = description;
-		this.name = prefix != null ? prefix : buildName();
+		this.name = prefix != null && prefix.matches(".*[a-zA-Z].*") ? prefix : buildName();
 		this.color = color;
 	}
 

From seba at informatik.uni-marburg.de  Tue May 31 10:51:11 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Tue, 31 May 2011 08:51:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22957 - in
	sugarj/trunk: case-studies/check case-studies/util
	stdlib/org/sugarj/languages
Message-ID: <20110531085111.67B4B2B800A@mx2.tudelft.nl>

Author: SebastianErdweg
Date: Tue May 31 08:51:10 2011
New Revision: 22957
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22957&sc=1

Log:
old stuff

Added:
   sugarj/trunk/case-studies/check/
   sugarj/trunk/case-studies/check/Naming.sugj
   sugarj/trunk/case-studies/check/test.sugj
   sugarj/trunk/case-studies/util/
   sugarj/trunk/case-studies/util/Strategies.sugj
Modified:
   sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.def

Added: sugarj/trunk/case-studies/check/Naming.sugj
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/trunk/case-studies/check/Naming.sugj	Tue May 31 08:51:10 2011	(r22957)
@@ -0,0 +1,12 @@
+package check;
+
+import org.sugarj.languages.Java;
+import util.Strategies;
+
+public editor services Naming {
+  checking
+    warnings:
+      ClassDecHead(mods, Id(name), params, super, interfaces) =
+      [(name, "class name should start with upper-case character")]
+      where <first-char; not(is-upper)> name
+}
\ No newline at end of file

Added: sugarj/trunk/case-studies/check/test.sugj
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/trunk/case-studies/check/test.sugj	Tue May 31 08:51:10 2011	(r22957)
@@ -0,0 +1,9 @@
+package check;
+
+import check.Naming;
+
+
+
+public class test {
+  
+}
\ No newline at end of file

Added: sugarj/trunk/case-studies/util/Strategies.sugj
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/trunk/case-studies/util/Strategies.sugj	Tue May 31 08:51:10 2011	(r22957)
@@ -0,0 +1,34 @@
+package util;
+
+public sugar Strategies {
+  rules 
+    head : [x|_] -> x
+    tail : [_|y] -> y
+
+    butlast = split-init-last; ?(<id>,_)
+    
+    first-char = explode-string; head
+    last-char  = explode-string; last
+  
+  rules
+    intersperse(|s) : [] -> []
+    intersperse(|s) : [x] -> [x]
+    intersperse(|s) : [x|y] -> [x,s| <intersperse(|s)> y]
+  
+  rules 
+    mapconcat-strings(s) = map(s); concat-strings
+  
+  rules
+    at-position(s|position):
+      c#(t*) -> t'
+      where
+        !position => [i | position']
+      where
+        t' := c#(<at-index(at-position(s|position'))> (i, t*))
+
+    at-position(s|position):
+      t -> t'
+      where
+        !position => [];
+        t' := <s> t
+}
\ No newline at end of file

Modified: sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.def
==============================================================================
--- sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.def	Mon May 30 13:28:36 2011	(r22956)
+++ sugarj/trunk/stdlib/org/sugarj/languages/SugarJ.def	Tue May 31 08:51:10 2011	(r22957)
@@ -160,6 +160,7 @@
 
   context-free syntax
     ChecksDecHead ChecksBody   -> ToplevelDeclaration              {cons("ChecksDec")}
+    AnnoOrSugarMod* "analysis" JavaId -> ChecksDecHead {cons("ChecksDecHead")}
     AnnoOrSugarMod* "checks" JavaId -> ChecksDecHead {cons("ChecksDecHead")}
     "{" CheckingRule* "}"              -> ChecksBody    {cons("ChecksBody")}
 

From seba at informatik.uni-marburg.de  Tue May 31 10:51:54 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Tue, 31 May 2011 08:51:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22958 - in
	sugarj/trunk: compiler/META-INF compiler/org/sugarj/driver
	editor/editor/java/org/sugarj/editor
Message-ID: <20110531085154.6C8FFCC141@mx4.tudelft.nl>

Author: SebastianErdweg
Date: Tue May 31 08:51:53 2011
New Revision: 22958
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22958&sc=1

Log:
* SugarJ console within the target platform
 * project-specific caching

Added:
   sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJConsole.java
Deleted:
   sugarj/trunk/compiler/org/sugarj/driver/ResourceList.java
   sugarj/trunk/compiler/org/sugarj/driver/StrategyInvoker.java
Modified:
   sugarj/trunk/compiler/META-INF/MANIFEST.MF
   sugarj/trunk/compiler/org/sugarj/driver/Driver.java
   sugarj/trunk/compiler/org/sugarj/driver/JavaCommands.java
   sugarj/trunk/compiler/org/sugarj/driver/Log.java
   sugarj/trunk/compiler/org/sugarj/driver/SDFCommands.java
   sugarj/trunk/compiler/org/sugarj/driver/STRCommands.java
   sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParser.java

Modified: sugarj/trunk/compiler/META-INF/MANIFEST.MF
==============================================================================
--- sugarj/trunk/compiler/META-INF/MANIFEST.MF	Tue May 31 08:51:10 2011	(r22957)
+++ sugarj/trunk/compiler/META-INF/MANIFEST.MF	Tue May 31 08:51:53 2011	(r22958)
@@ -11,8 +11,8 @@
  org.spoofax.terms,
  org.eclipse.jdt.core,
  org.strategoxt.strj,
- org.strategoxt.imp.runtime,
- org.strategoxt.imp.nativebundle
+ org.strategoxt.imp.nativebundle,
+ org.strategoxt.imp.runtime
 Bundle-ActivationPolicy: lazy
 Bundle-RequiredExecutionEnvironment: JavaSE-1.6
 Export-Package: org.sugarj, 

Modified: sugarj/trunk/compiler/org/sugarj/driver/Driver.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/Driver.java	Tue May 31 08:51:10 2011	(r22957)
+++ sugarj/trunk/compiler/org/sugarj/driver/Driver.java	Tue May 31 08:51:53 2011	(r22958)
@@ -59,7 +59,7 @@
  */
 public class Driver{
   
-  public final static String CACHE_VERSION = "editor-base-0.10";
+  public final static String CACHE_VERSION = "editor-base-0.11";
   
   private static class Key {
     private String source;
@@ -198,7 +198,7 @@
 
   private static synchronized void putResult(String source, String moduleName, Result result) {
     resultCache.put(new Key(source, moduleName), result);
-    System.out.println(resultCache.size());
+    Log.log.log(resultCache.size());
   }
   
   public static Result compile(URI sourceFile) throws IOException, TokenExpectedException, BadTokenException, ParseException, InvalidParseTableException, SGLRException, InterruptedException {
@@ -776,7 +776,7 @@
           if (res != null && res.getSourceFile() != null)
             sourceUri = new File(res.getSourceFile()).toURI();
         }
-
+        
         if (sourceUri == null)
           sourceUri = ModuleSystemCommands.locateSourceFile(modulePath);
 
@@ -1167,8 +1167,8 @@
     } catch (Exception e) {
       e.printStackTrace();
     } catch (CLIError e) {
-      System.out.println(e.getMessage());
-      System.out.println();
+      Log.log.log(e.getMessage());
+      Log.log.log("");
       e.showUsage();
     }
 

Modified: sugarj/trunk/compiler/org/sugarj/driver/JavaCommands.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/JavaCommands.java	Tue May 31 08:51:10 2011	(r22957)
+++ sugarj/trunk/compiler/org/sugarj/driver/JavaCommands.java	Tue May 31 08:51:53 2011	(r22958)
@@ -46,8 +46,8 @@
     // this is ECJ
     return BatchCompiler.compile(
         cmd,
-        new PrintWriter(System.out),
-        new PrintWriter(System.err),
+        new PrintWriter(Log.out),
+        new PrintWriter(Log.err),
         null);
   }
 

Modified: sugarj/trunk/compiler/org/sugarj/driver/Log.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/Log.java	Tue May 31 08:51:10 2011	(r22957)
+++ sugarj/trunk/compiler/org/sugarj/driver/Log.java	Tue May 31 08:51:53 2011	(r22958)
@@ -1,5 +1,6 @@
 package org.sugarj.driver;
 
+import java.io.PrintStream;
 import java.util.Stack;
 
 public class Log {
@@ -18,6 +19,9 @@
   private Stack<Boolean> lightweight = new Stack<Boolean>();
   private int silent = -1;
   
+  public static PrintStream out = System.out;
+  public static PrintStream err = System.err;
+  
   public synchronized void beginTask(String shortText, String longText, boolean inline) {
     if (silent >= 0)
       return;
@@ -25,8 +29,9 @@
     noLongerLeaf();
 
     indent();
-    System.out.print(longText);
-    if (!inline) System.out.println();
+    out.print(longText);
+    if (!inline) 
+      out.println();
 
     tasks.push(shortText);
     lightweight.push(inline);
@@ -55,7 +60,7 @@
     long duration = endTime - startTime;
     
     if (lightweight.pop()) {
-      System.out.println(" ... " + error + " - " + duration + "ms");
+      out.println(" ... " + error + " - " + duration + "ms");
     } else if (doneMessage) {
       log.log(shortText + " " + error + " - " + duration + "ms");
     }
@@ -92,7 +97,7 @@
     
     noLongerLeaf();
     indent();
-    System.out.println(text);
+    out.println(text);
   }
   
   public synchronized void logErr(String text) {
@@ -101,14 +106,14 @@
     
     noLongerLeaf();
     indent();
-    System.err.println(text);
+    err.println(text);
   }
   
   private void noLongerLeaf() {
     if (!lightweight.empty() && lightweight.peek()) {
       lightweight.pop();
       lightweight.push(false);
-      System.out.println();
+      out.println();
     }
   }
 
@@ -167,9 +172,9 @@
   }
 
   private void indent() {
-    // System.out.print("$$$");
+    // out.print("$$$");
     for (int i = tasks.size(); i > 0; i--)
-      System.out.print("  ");
+      out.print("  ");
   }
 
   public void endExecution(int exitValue) {

Modified: sugarj/trunk/compiler/org/sugarj/driver/SDFCommands.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/SDFCommands.java	Tue May 31 08:51:10 2011	(r22957)
+++ sugarj/trunk/compiler/org/sugarj/driver/SDFCommands.java	Tue May 31 08:51:53 2011	(r22958)
@@ -54,7 +54,7 @@
   /*
    * timeout for parsing files (in milliseconds)
    */
-  private static long PARSE_TIMEOUT = 60000;
+  private static long PARSE_TIMEOUT = 30000;
   
   static {
     try {
@@ -171,13 +171,18 @@
   }
   
   
-  private static void cacheParseTable(ModuleKey key, String tbl) {
-    if (sdfCache == null)
+  private static void cacheParseTable(ModuleKey key, String tbl) throws IOException {
+    if (sdfCache == null || Environment.cacheDir == null)
       return;
     
     log.beginTask("Caching", "Cache parse table");
     try {
-      sdfCache.put(key, tbl);
+      String cacheTbl = Environment.cacheDir + Environment.sep + new File(tbl).getName();
+      FileCommands.copyFile(tbl, cacheTbl);
+      sdfCache.put(key, cacheTbl);
+
+      if (CommandExecution.CACHE_INFO)
+        log.log("Cache Location: " + cacheTbl);
     } finally {
       log.endTask();
     }

Modified: sugarj/trunk/compiler/org/sugarj/driver/STRCommands.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/STRCommands.java	Tue May 31 08:51:10 2011	(r22957)
+++ sugarj/trunk/compiler/org/sugarj/driver/STRCommands.java	Tue May 31 08:51:53 2011	(r22958)
@@ -1,6 +1,5 @@
 package org.sugarj.driver;
 import static org.sugarj.driver.Environment.sep;
-import static org.sugarj.driver.FileCommands.toCygwinPath;
 import static org.sugarj.driver.FileCommands.toWindowsPath;
 import static org.sugarj.driver.Log.log;
 
@@ -128,16 +127,19 @@
     }
   }
     
-  private static void cacheAssimilator(ModuleKey key, String prog) {
-    if (strCache == null)
+  private static void cacheAssimilator(ModuleKey key, String prog) throws IOException {
+    if (strCache == null || Environment.cacheDir == null)
       return;
     
+
     log.beginTask("Caching", "Cache assimilator");
     try {
-      strCache.put(key, prog);
+      String cacheProg = Environment.cacheDir + Environment.sep + new File(prog).getName();
+      FileCommands.copyFile(prog, cacheProg);
+      strCache.put(key, cacheProg);
 
       if (CommandExecution.CACHE_INFO)
-        log.log("Cache Location: " + prog);
+        log.log("Cache Location: " + cacheProg);
     } finally {
       log.endTask();
     }

Added: sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJConsole.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJConsole.java	Tue May 31 08:51:53 2011	(r22958)
@@ -0,0 +1,190 @@
+package org.sugarj.editor;
+
+import java.io.IOException;
+import java.io.OutputStream;
+import java.io.OutputStreamWriter;
+import java.io.PrintStream;
+import java.io.Writer;
+
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.core.runtime.jobs.Job;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.widgets.Display;
+import org.eclipse.ui.IWorkbenchPage;
+import org.eclipse.ui.IWorkbenchWindow;
+import org.eclipse.ui.PartInitException;
+import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.console.ConsolePlugin;
+import org.eclipse.ui.console.IConsole;
+import org.eclipse.ui.console.IConsoleConstants;
+import org.eclipse.ui.console.IConsoleManager;
+import org.eclipse.ui.console.IConsoleView;
+import org.eclipse.ui.console.IOConsoleOutputStream;
+import org.eclipse.ui.console.MessageConsole;
+import org.eclipse.ui.progress.UIJob;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+
+/**
+ * The SugarJ console.
+ * 
+ * @author Lennart Kats <lennart add lclnet.nl>
+ * @author Sebastian Erdweg <seba at informatik uni-marburg de>
+ */
+public class SugarJConsole {
+
+  private static final String CONSOLE_NAME = "SugarJ console";
+
+  private static MessageConsole lastConsole;
+
+  private static AutoFlushOutputStreamWriter lastConsoleOutputWriter;
+
+  private static AutoFlushOutputStreamWriter lastConsoleErrorWriter;
+
+  public static Writer getErrorWriter() {
+    MessageConsole console = getConsole();
+    if (console == lastConsole && lastConsoleErrorWriter != null) {
+      return lastConsoleErrorWriter;
+    } else {
+      IOConsoleOutputStream stream = console.newOutputStream();
+      stream.setColor(new Color(Display.getCurrent(), 255, 0, 0));
+      lastConsoleErrorWriter = new AutoFlushOutputStreamWriter(stream);
+      lastConsole = console;
+      return lastConsoleErrorWriter;
+    }
+  }
+
+  public static Writer getOutputWriter() {
+    MessageConsole console = getConsole();
+    if (console == lastConsole && lastConsoleOutputWriter != null) {
+      return lastConsoleOutputWriter;
+    } else {
+      lastConsoleOutputWriter = new AutoFlushOutputStreamWriter(
+          console.newOutputStream());
+      lastConsole = console;
+      return lastConsoleOutputWriter;
+    }
+  }
+
+  public static OutputStream getErrorStream() {
+    return ((AutoFlushOutputStreamWriter) getErrorWriter()).stream;
+  }
+
+  public static OutputStream getOutputStream() {
+    return ((AutoFlushOutputStreamWriter) getOutputWriter()).stream;
+  }
+  
+  public static PrintStream getErrorPrintStream() {
+    return new PrintStream(getErrorStream());
+  }
+  
+  public static PrintStream getOutputPrintStream() {
+    return new PrintStream(getOutputStream());
+  }
+  
+  
+
+  /**
+   * Gets or opens the Eclipse console for this plugin.
+   */
+  private synchronized static MessageConsole getConsole() {
+    IConsoleManager consoles = ConsolePlugin.getDefault().getConsoleManager();
+    for (IConsole console : consoles.getConsoles()) {
+      if (SugarJConsole.CONSOLE_NAME.equals(console.getName()))
+        return (MessageConsole) console;
+    }
+    // No console found, so create a new one
+    MessageConsole result = new MessageConsole(SugarJConsole.CONSOLE_NAME, null);
+    consoles.addConsoles(new IConsole[] { result });
+    return result;
+  }
+
+  /**
+   * Activates the console for this plugin.
+   * 
+   * Swallows and logs any PartInitException.
+   * 
+   * @see Descriptor#isDynamicallyLoaded() Should typically be checked before
+   *      opening a console.
+   */
+  public static void activateConsole() {
+    activateConsole(false);
+  }
+
+  /**
+   * Activates the console for this plugin.
+   * 
+   * Swallows and logs any PartInitException.
+   * 
+   * @param consoleViewOnly
+   *          Only open the console within the console view; don't activate the
+   *          console view itself.
+   * 
+   * @see Descriptor#isDynamicallyLoaded() Should typically be checked before
+   *      opening a console.
+   */
+  public static void activateConsole(final boolean consoleViewOnly) {
+    Job job = new UIJob("Open console") {
+      @Override
+      public IStatus runInUIThread(IProgressMonitor monitor) {
+        final String ID = IConsoleConstants.ID_CONSOLE_VIEW;
+        MessageConsole console = SugarJConsole.getConsole();
+        if (consoleViewOnly) {
+          console.activate();
+          return Status.OK_STATUS;
+        }
+        IWorkbenchWindow window = PlatformUI.getWorkbench()
+            .getActiveWorkbenchWindow();
+        if (window == null)
+          return Status.OK_STATUS; // Eclipse exiting
+        IWorkbenchPage page = window.getActivePage();
+        try {
+          IConsoleView view = (IConsoleView) page.showView(ID, null,
+              IWorkbenchPage.VIEW_VISIBLE);
+          view.display(console);
+        } catch (PartInitException e) {
+          Environment.logException("Could not activate the console", e);
+        }
+        return Status.OK_STATUS;
+      }
+    };
+    job.setSystem(true);
+    job.schedule();
+  }
+
+  /**
+   * An OutputStreamWriter that automatically flushes its buffer.
+   * 
+   * @author Lennart Kats <lennart add lclnet.nl>
+   */
+  private static class AutoFlushOutputStreamWriter extends OutputStreamWriter {
+
+    final OutputStream stream;
+
+    public AutoFlushOutputStreamWriter(OutputStream stream) {
+      super(stream);
+      this.stream = stream;
+    }
+
+    @Override
+    public void write(String str, int off, int len) throws IOException {
+      super.write(str, off, len);
+      super.flush();
+    }
+
+    @Override
+    public void write(char[] cbuf, int off, int len) throws IOException {
+      super.write(cbuf, off, len);
+      super.flush();
+    }
+
+    @Override
+    public void write(int c) throws IOException {
+      super.write(c);
+      super.flush();
+    }
+
+  }
+}

Modified: sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParser.java
==============================================================================
--- sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParser.java	Tue May 31 08:51:10 2011	(r22957)
+++ sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParser.java	Tue May 31 08:51:53 2011	(r22958)
@@ -16,6 +16,7 @@
 import org.sugarj.driver.Driver;
 import org.sugarj.driver.Environment;
 import org.sugarj.driver.FileCommands;
+import org.sugarj.driver.Log;
 import org.sugarj.driver.Result;
 
 /**
@@ -28,6 +29,8 @@
   private Result result;
   private List<String> includePath;
 
+  
+  
   public SugarJParser(JSGLRI parser) {
     super(parser.getParseTable(), parser.getStartSymbol(), parser.getController());
   }
@@ -38,9 +41,7 @@
       throws TokenExpectedException, BadTokenException, SGLRException, IOException {
     
     Environment.wocache = false;
-    if (Environment.cacheDir == null)
-      Environment.cacheDir = System.getProperty("user.home") + "/.sugarj/cache";
-    
+
     Environment.includePath.addAll(includePath);
     Environment.includePath.add(new StrategoJarAntPropertyProvider().getAntPropertyValue(""));
     
@@ -48,6 +49,8 @@
     Environment.src = projectPath;
     Environment.bin = outputPath != null ? outputPath : projectPath;
 
+    if (Environment.cacheDir == null)
+      Environment.cacheDir = projectPath + "/.sugarjcache";
     
     Environment.atomicImportParsing = true;
     Environment.generateJavaFile = true;
@@ -61,6 +64,9 @@
     CommandExecution.SUB_SILENT_EXECUTION = false;
     CommandExecution.FULL_COMMAND_LINE = true;
     
+    Log.out = SugarJConsole.getOutputPrintStream();
+    Log.err = SugarJConsole.getErrorPrintStream();
+    
     try {
       result = Driver.compile(input, FileCommands.fileName(filename), filename);
     } catch (Throwable e) {

From R.B.Vermaas at tudelft.nl  Tue May 31 13:46:47 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 31 May 2011 11:46:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22959 - hydra/jobs
Message-ID: <20110531114647.C5AC2108C01D@mx3.tudelft.nl>

Author: rob
Date: Tue May 31 11:46:46 2011
New Revision: 22959
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22959&sc=1

Log:
use externaljarx to pass classpath from tycho

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Tue May 31 08:51:53 2011	(r22958)
+++ hydra/jobs/spoofax-imp.nix	Tue May 31 11:46:46 2011	(r22959)
@@ -221,7 +221,7 @@
                <configuration>
                   <tasks>
                           <echo>Running ant script</echo>
-                          <property name="external_classpath" refid="maven.compile.classpath"/>
+                          <property name="externaljarx" refid="maven.compile.classpath"/>
                           <property name="java.class.path" value="utils/aster.jar:utils/strategoxt.jar:utils/sdf2imp.jar:utils/make_permissive.jar"/>
                           <property name="eclipse.spoofaximp.jars" value="utils/"/>
                           <property name="eclipse.spoofaximp.strategojar" value="utils/strategoxt.jar"/>

From R.B.Vermaas at tudelft.nl  Tue May 31 14:04:07 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 31 May 2011 12:04:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22960 -
	spoofax-imp/trunk/org.strategoxt.imp.testing
Message-ID: <20110531120407.56A7D2B8042@mx2.tudelft.nl>

Author: rob
Date: Tue May 31 12:04:06 2011
New Revision: 22960
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22960&sc=1

Log:
manual change of build.generated.xml until spoofax fixes check

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.testing/build.generated.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/build.generated.xml	Tue May 31 11:46:46 2011	(r22959)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/build.generated.xml	Tue May 31 12:04:06 2011	(r22960)
@@ -7,7 +7,7 @@
         <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
     
         <!-- Initialization -->
-        <available file="${build}/org/strategoxt/imp/testing/strategies/Main.class" property="java.jar.enabled"/>
+        <available file="${src-gen}/org/strategoxt/imp/testing/strategies/Main.java" property="java.jar.enabled"/>
         <condition property="java.jar.import" value="-la org.strategoxt.imp.testing.strategies" else="">
             <isset property="java.jar.enabled"/>
         </condition>
@@ -597,4 +597,4 @@
             <delete file="${include}/${sdfmodule}.def"/>
             <delete dir="${src-gen}/trans"/>
         </target>
-    </project>
\ No newline at end of file
+    </project>

From L.C.L.Kats at tudelft.nl  Tue May 31 14:09:15 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 31 May 2011 12:09:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22961 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
Message-ID: <20110531120915.48332108C01D@mx3.tudelft.nl>

Author: LennartKats
Date: Tue May 31 12:09:14 2011
New Revision: 22961
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22961&sc=1

Log:
build file change suggested by rob

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	Tue May 31 12:04:06 2011	(r22960)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	Tue May 31 12:09:14 2011	(r22961)
@@ -80,7 +80,7 @@
         <target name="spoofaximp.default.jar"   depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
     
         <!-- Initialization -->
-        <available file="${build}/<%= pkgdir %>/strategies/Main.class" property="java.jar.enabled"/>
+        <available file="${src-gen}/<%= pkgdir %>/strategies/Main.java" property="java.jar.enabled"/>
         <condition property="java.jar.import" value="-la <%= pkgname %>.strategies" else="">
             <isset property="java.jar.enabled"/>
         </condition>

From L.C.L.Kats at tudelft.nl  Tue May 31 14:09:32 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 31 May 2011 12:09:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22962 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
Message-ID: <20110531120932.4A874108C097@mx3.tudelft.nl>

Author: LennartKats
Date: Tue May 31 12:09:31 2011
New Revision: 22962
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22962&sc=1

Log:
spt test file in new project wizard

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-file.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-file.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-file.str	Tue May 31 12:09:14 2011	(r22961)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-file.str	Tue May 31 12:09:31 2011	(r22962)
@@ -14,13 +14,11 @@
       extension  := <string-tokenize(|[',']); Hd> extensions
     );
     
-    // (the XML pretty printer has problems with this file, so it's printed as text instead)
     <output-text-file(|["test"], <add-extension> ("example", extension))>
-    <conc-strings>
-(
-"module example
-
-// Example \"", name, "\" program (see syntax/", name, ".sdf for the grammar)
+$[/**
+ * Example [name] program.
+ */  
+module example
 
 entity User {
   name     : String
@@ -35,5 +33,30 @@
 
 entity URL {
   location : String
-}"
-)
\ No newline at end of file
+}
+];
+    
+    <output-text-file(|["test"], <add-extension> ("test-example", "spt"))>
+$</**
+ * Unit tests for the <name> language.
+ */
+module test-example
+
+language <name>
+
+setup Common [[
+  module example
+]]
+
+test Simple entity [[
+  entity User {
+    name : String
+  }
+]] 0 errors
+
+test Entity with reference to non-existing entity [[
+  entity User {
+    name : Strin
+  }
+]] 1 error
+>
\ No newline at end of file

From R.B.Vermaas at tudelft.nl  Tue May 31 14:48:18 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 31 May 2011 12:48:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22963 - hydra/jobs
Message-ID: <20110531124818.D08D52B8015@mx2.tudelft.nl>

Author: rob
Date: Tue May 31 12:48:17 2011
New Revision: 22963
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22963&sc=1

Log:
turn on debugging

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Tue May 31 12:09:31 2011	(r22962)
+++ hydra/jobs/spoofax-imp.nix	Tue May 31 12:48:17 2011	(r22963)
@@ -245,7 +245,10 @@
           cp -v org.strategoxt.strj/java/strategoxt.jar `dirname $e`/utils/
         done
 
-        mvn package ${mvnFlags} -e
+        mvn -X package ${mvnFlags} -e
+        echo "============================================"
+        find . 
+        echo "============================================"
       '';
           
       installPhase = ''

From R.B.Vermaas at tudelft.nl  Tue May 31 15:01:35 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 31 May 2011 13:01:35 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22964 - hydra/jobs
Message-ID: <20110531130135.BFE5B108C0A8@mx3.tudelft.nl>

Author: rob
Date: Tue May 31 13:01:34 2011
New Revision: 22964
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22964&sc=1

Log:


Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Tue May 31 12:48:17 2011	(r22963)
+++ hydra/jobs/spoofax-imp.nix	Tue May 31 13:01:34 2011	(r22964)
@@ -227,6 +227,7 @@
                           <property name="eclipse.spoofaximp.strategojar" value="utils/strategoxt.jar"/>
                           <property name="eclipse.home" value="${eclipse}/eclipse"/>
                           <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
+                          <property name="build" value="target/classes"/>
                           <ant antfile="build.main.xml" inheritRefs="true">
                           </ant>
                   </tasks>
@@ -245,10 +246,7 @@
           cp -v org.strategoxt.strj/java/strategoxt.jar `dirname $e`/utils/
         done
 
-        mvn -X package ${mvnFlags} -e
-        echo "============================================"
-        find . 
-        echo "============================================"
+        mvn package ${mvnFlags} -e
       '';
           
       installPhase = ''

From R.B.Vermaas at tudelft.nl  Tue May 31 15:34:09 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 31 May 2011 13:34:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22965 - hydra/jobs
Message-ID: <20110531133409.C26A17F80A3@mx1.tudelft.nl>

Author: rob
Date: Tue May 31 13:34:08 2011
New Revision: 22965
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22965&sc=1

Log:
run ant script after compile

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Tue May 31 13:01:34 2011	(r22964)
+++ hydra/jobs/spoofax-imp.nix	Tue May 31 13:34:08 2011	(r22965)
@@ -216,8 +216,8 @@
     </dependencies>
     <executions>
        <execution>
-               <id>generate-sources</id>
-               <phase>generate-sources</phase>
+               <id>process-classes</id>
+               <phase>process-classes</phase>
                <configuration>
                   <tasks>
                           <echo>Running ant script</echo>
@@ -227,7 +227,6 @@
                           <property name="eclipse.spoofaximp.strategojar" value="utils/strategoxt.jar"/>
                           <property name="eclipse.home" value="${eclipse}/eclipse"/>
                           <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
-                          <property name="build" value="target/classes"/>
                           <ant antfile="build.main.xml" inheritRefs="true">
                           </ant>
                   </tasks>

From seba at informatik.uni-marburg.de  Tue May 31 15:37:45 2011
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Tue, 31 May 2011 13:37:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22966 - in
	sugarj/trunk: compiler compiler/META-INF
	compiler/org/sugarj/driver compiler/org/sugarj/driver/caching
	editor editor/.settings editor/META-INF editor/editor/jav...
Message-ID: <20110531133745.605672B8035@mx2.tudelft.nl>

Author: SebastianErdweg
Date: Tue May 31 13:37:44 2011
New Revision: 22966
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22966&sc=1

Log:
make it all right

Added:
   sugarj/trunk/compiler/COPYING
   sugarj/trunk/editor/COPYING
   sugarj/trunk/stdlib/COPYING
   sugarj/trunk/stdlib/COPYING.LESSER
Modified:
   sugarj/trunk/compiler/.classpath
   sugarj/trunk/compiler/META-INF/MANIFEST.MF
   sugarj/trunk/compiler/org/sugarj/driver/FileCommands.java
   sugarj/trunk/compiler/org/sugarj/driver/SDFCommands.java
   sugarj/trunk/compiler/org/sugarj/driver/STRCommands.java
   sugarj/trunk/compiler/org/sugarj/driver/caching/ModuleKeyCache.java
   sugarj/trunk/editor/.settings/org.eclipse.jdt.core.prefs
   sugarj/trunk/editor/META-INF/MANIFEST.MF
   sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJConsole.java
   sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParser.java
   sugarj/trunk/feature/feature.xml
   sugarj/trunk/stdlib/build.properties
   sugarj/trunk/update-site/site.xml

Modified: sugarj/trunk/compiler/.classpath
==============================================================================
--- sugarj/trunk/compiler/.classpath	Tue May 31 13:34:08 2011	(r22965)
+++ sugarj/trunk/compiler/.classpath	Tue May 31 13:37:44 2011	(r22966)
@@ -6,5 +6,6 @@
 	<classpathentry exported="true" kind="lib" path="make_permissive.jar"/>
 	<classpathentry exported="true" kind="lib" path="commons-cli-1.2.jar"/>
 	<classpathentry kind="lib" path="commons-collections-3.2.1.jar"/>
+	<classpathentry kind="lib" path="/Users/seba/svn-strategoxt/spoofax-imp/trunk/org.strategoxt.imp.nativebundle/bin"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>

Added: sugarj/trunk/compiler/COPYING
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/trunk/compiler/COPYING	Tue May 31 13:37:44 2011	(r22966)
@@ -0,0 +1,674 @@
+                    GNU GENERAL PUBLIC LICENSE
+                       Version 3, 29 June 2007
+
+ Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+                            Preamble
+
+  The GNU General Public License is a free, copyleft license for
+software and other kinds of works.
+
+  The licenses for most software and other practical works are designed
+to take away your freedom to share and change the works.  By contrast,
+the GNU General Public License is intended to guarantee your freedom to
+share and change all versions of a program--to make sure it remains free
+software for all its users.  We, the Free Software Foundation, use the
+GNU General Public License for most of our software; it applies also to
+any other work released this way by its authors.  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+them if you wish), that you receive source code or can get it if you
+want it, that you can change the software or use pieces of it in new
+free programs, and that you know you can do these things.
+
+  To protect your rights, we need to prevent others from denying you
+these rights or asking you to surrender the rights.  Therefore, you have
+certain responsibilities if you distribute copies of the software, or if
+you modify it: responsibilities to respect the freedom of others.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must pass on to the recipients the same
+freedoms that you received.  You must make sure that they, too, receive
+or can get the source code.  And you must show them these terms so they
+know their rights.
+
+  Developers that use the GNU GPL protect your rights with two steps:
+(1) assert copyright on the software, and (2) offer you this License
+giving you legal permission to copy, distribute and/or modify it.
+
+  For the developers' and authors' protection, the GPL clearly explains
+that there is no warranty for this free software.  For both users' and
+authors' sake, the GPL requires that modified versions be marked as
+changed, so that their problems will not be attributed erroneously to
+authors of previous versions.
+
+  Some devices are designed to deny users access to install or run
+modified versions of the software inside them, although the manufacturer
+can do so.  This is fundamentally incompatible with the aim of
+protecting users' freedom to change the software.  The systematic
+pattern of such abuse occurs in the area of products for individuals to
+use, which is precisely where it is most unacceptable.  Therefore, we
+have designed this version of the GPL to prohibit the practice for those
+products.  If such problems arise substantially in other domains, we
+stand ready to extend this provision to those domains in future versions
+of the GPL, as needed to protect the freedom of users.
+
+  Finally, every program is threatened constantly by software patents.
+States should not allow patents to restrict development and use of
+software on general-purpose computers, but in those that do, we wish to
+avoid the special danger that patents applied to a free program could
+make it effectively proprietary.  To prevent this, the GPL assures that
+patents cannot be used to render the program non-free.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+                       TERMS AND CONDITIONS
+
+  0. Definitions.
+
+  "This License" refers to version 3 of the GNU General Public License.
+
+  "Copyright" also means copyright-like laws that apply to other kinds of
+works, such as semiconductor masks.
+
+  "The Program" refers to any copyrightable work licensed under this
+License.  Each licensee is addressed as "you".  "Licensees" and
+"recipients" may be individuals or organizations.
+
+  To "modify" a work means to copy from or adapt all or part of the work
+in a fashion requiring copyright permission, other than the making of an
+exact copy.  The resulting work is called a "modified version" of the
+earlier work or a work "based on" the earlier work.
+
+  A "covered work" means either the unmodified Program or a work based
+on the Program.
+
+  To "propagate" a work means to do anything with it that, without
+permission, would make you directly or secondarily liable for
+infringement under applicable copyright law, except executing it on a
+computer or modifying a private copy.  Propagation includes copying,
+distribution (with or without modification), making available to the
+public, and in some countries other activities as well.
+
+  To "convey" a work means any kind of propagation that enables other
+parties to make or receive copies.  Mere interaction with a user through
+a computer network, with no transfer of a copy, is not conveying.
+
+  An interactive user interface displays "Appropriate Legal Notices"
+to the extent that it includes a convenient and prominently visible
+feature that (1) displays an appropriate copyright notice, and (2)
+tells the user that there is no warranty for the work (except to the
+extent that warranties are provided), that licensees may convey the
+work under this License, and how to view a copy of this License.  If
+the interface presents a list of user commands or options, such as a
+menu, a prominent item in the list meets this criterion.
+
+  1. Source Code.
+
+  The "source code" for a work means the preferred form of the work
+for making modifications to it.  "Object code" means any non-source
+form of a work.
+
+  A "Standard Interface" means an interface that either is an official
+standard defined by a recognized standards body, or, in the case of
+interfaces specified for a particular programming language, one that
+is widely used among developers working in that language.
+
+  The "System Libraries" of an executable work include anything, other
+than the work as a whole, that (a) is included in the normal form of
+packaging a Major Component, but which is not part of that Major
+Component, and (b) serves only to enable use of the work with that
+Major Component, or to implement a Standard Interface for which an
+implementation is available to the public in source code form.  A
+"Major Component", in this context, means a major essential component
+(kernel, window system, and so on) of the specific operating system
+(if any) on which the executable work runs, or a compiler used to
+produce the work, or an object code interpreter used to run it.
+
+  The "Corresponding Source" for a work in object code form means all
+the source code needed to generate, install, and (for an executable
+work) run the object code and to modify the work, including scripts to
+control those activities.  However, it does not include the work's
+System Libraries, or general-purpose tools or generally available free
+programs which are used unmodified in performing those activities but
+which are not part of the work.  For example, Corresponding Source
+includes interface definition files associated with source files for
+the work, and the source code for shared libraries and dynamically
+linked subprograms that the work is specifically designed to require,
+such as by intimate data communication or control flow between those
+subprograms and other parts of the work.
+
+  The Corresponding Source need not include anything that users
+can regenerate automatically from other parts of the Corresponding
+Source.
+
+  The Corresponding Source for a work in source code form is that
+same work.
+
+  2. Basic Permissions.
+
+  All rights granted under this License are granted for the term of
+copyright on the Program, and are irrevocable provided the stated
+conditions are met.  This License explicitly affirms your unlimited
+permission to run the unmodified Program.  The output from running a
+covered work is covered by this License only if the output, given its
+content, constitutes a covered work.  This License acknowledges your
+rights of fair use or other equivalent, as provided by copyright law.
+
+  You may make, run and propagate covered works that you do not
+convey, without conditions so long as your license otherwise remains
+in force.  You may convey covered works to others for the sole purpose
+of having them make modifications exclusively for you, or provide you
+with facilities for running those works, provided that you comply with
+the terms of this License in conveying all material for which you do
+not control copyright.  Those thus making or running the covered works
+for you must do so exclusively on your behalf, under your direction
+and control, on terms that prohibit them from making any copies of
+your copyrighted material outside their relationship with you.
+
+  Conveying under any other circumstances is permitted solely under
+the conditions stated below.  Sublicensing is not allowed; section 10
+makes it unnecessary.
+
+  3. Protecting Users' Legal Rights From Anti-Circumvention Law.
+
+  No covered work shall be deemed part of an effective technological
+measure under any applicable law fulfilling obligations under article
+11 of the WIPO copyright treaty adopted on 20 December 1996, or
+similar laws prohibiting or restricting circumvention of such
+measures.
+
+  When you convey a covered work, you waive any legal power to forbid
+circumvention of technological measures to the extent such circumvention
+is effected by exercising rights under this License with respect to
+the covered work, and you disclaim any intention to limit operation or
+modification of the work as a means of enforcing, against the work's
+users, your or third parties' legal rights to forbid circumvention of
+technological measures.
+
+  4. Conveying Verbatim Copies.
+
+  You may convey verbatim copies of the Program's source code as you
+receive it, in any medium, provided that you conspicuously and
+appropriately publish on each copy an appropriate copyright notice;
+keep intact all notices stating that this License and any
+non-permissive terms added in accord with section 7 apply to the code;
+keep intact all notices of the absence of any warranty; and give all
+recipients a copy of this License along with the Program.
+
+  You may charge any price or no price for each copy that you convey,
+and you may offer support or warranty protection for a fee.
+
+  5. Conveying Modified Source Versions.
+
+  You may convey a work based on the Program, or the modifications to
+produce it from the Program, in the form of source code under the
+terms of section 4, provided that you also meet all of these conditions:
+
+    a) The work must carry prominent notices stating that you modified
+    it, and giving a relevant date.
+
+    b) The work must carry prominent notices stating that it is
+    released under this License and any conditions added under section
+    7.  This requirement modifies the requirement in section 4 to
+    "keep intact all notices".
+
+    c) You must license the entire work, as a whole, under this
+    License to anyone who comes into possession of a copy.  This
+    License will therefore apply, along with any applicable section 7
+    additional terms, to the whole of the work, and all its parts,
+    regardless of how they are packaged.  This License gives no
+    permission to license the work in any other way, but it does not
+    invalidate such permission if you have separately received it.
+
+    d) If the work has interactive user interfaces, each must display
+    Appropriate Legal Notices; however, if the Program has interactive
+    interfaces that do not display Appropriate Legal Notices, your
+    work need not make them do so.
+
+  A compilation of a covered work with other separate and independent
+works, which are not by their nature extensions of the covered work,
+and which are not combined with it such as to form a larger program,
+in or on a volume of a storage or distribution medium, is called an
+"aggregate" if the compilation and its resulting copyright are not
+used to limit the access or legal rights of the compilation's users
+beyond what the individual works permit.  Inclusion of a covered work
+in an aggregate does not cause this License to apply to the other
+parts of the aggregate.
+
+  6. Conveying Non-Source Forms.
+
+  You may convey a covered work in object code form under the terms
+of sections 4 and 5, provided that you also convey the
+machine-readable Corresponding Source under the terms of this License,
+in one of these ways:
+
+    a) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by the
+    Corresponding Source fixed on a durable physical medium
+    customarily used for software interchange.
+
+    b) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by a
+    written offer, valid for at least three years and valid for as
+    long as you offer spare parts or customer support for that product
+    model, to give anyone who possesses the object code either (1) a
+    copy of the Corresponding Source for all the software in the
+    product that is covered by this License, on a durable physical
+    medium customarily used for software interchange, for a price no
+    more than your reasonable cost of physically performing this
+    conveying of source, or (2) access to copy the
+    Corresponding Source from a network server at no charge.
+
+    c) Convey individual copies of the object code with a copy of the
+    written offer to provide the Corresponding Source.  This
+    alternative is allowed only occasionally and noncommercially, and
+    only if you received the object code with such an offer, in accord
+    with subsection 6b.
+
+    d) Convey the object code by offering access from a designated
+    place (gratis or for a charge), and offer equivalent access to the
+    Corresponding Source in the same way through the same place at no
+    further charge.  You need not require recipients to copy the
+    Corresponding Source along with the object code.  If the place to
+    copy the object code is a network server, the Corresponding Source
+    may be on a different server (operated by you or a third party)
+    that supports equivalent copying facilities, provided you maintain
+    clear directions next to the object code saying where to find the
+    Corresponding Source.  Regardless of what server hosts the
+    Corresponding Source, you remain obligated to ensure that it is
+    available for as long as needed to satisfy these requirements.
+
+    e) Convey the object code using peer-to-peer transmission, provided
+    you inform other peers where the object code and Corresponding
+    Source of the work are being offered to the general public at no
+    charge under subsection 6d.
+
+  A separable portion of the object code, whose source code is excluded
+from the Corresponding Source as a System Library, need not be
+included in conveying the object code work.
+
+  A "User Product" is either (1) a "consumer product", which means any
+tangible personal property which is normally used for personal, family,
+or household purposes, or (2) anything designed or sold for incorporation
+into a dwelling.  In determining whether a product is a consumer product,
+doubtful cases shall be resolved in favor of coverage.  For a particular
+product received by a particular user, "normally used" refers to a
+typical or common use of that class of product, regardless of the status
+of the particular user or of the way in which the particular user
+actually uses, or expects or is expected to use, the product.  A product
+is a consumer product regardless of whether the product has substantial
+commercial, industrial or non-consumer uses, unless such uses represent
+the only significant mode of use of the product.
+
+  "Installation Information" for a User Product means any methods,
+procedures, authorization keys, or other information required to install
+and execute modified versions of a covered work in that User Product from
+a modified version of its Corresponding Source.  The information must
+suffice to ensure that the continued functioning of the modified object
+code is in no case prevented or interfered with solely because
+modification has been made.
+
+  If you convey an object code work under this section in, or with, or
+specifically for use in, a User Product, and the conveying occurs as
+part of a transaction in which the right of possession and use of the
+User Product is transferred to the recipient in perpetuity or for a
+fixed term (regardless of how the transaction is characterized), the
+Corresponding Source conveyed under this section must be accompanied
+by the Installation Information.  But this requirement does not apply
+if neither you nor any third party retains the ability to install
+modified object code on the User Product (for example, the work has
+been installed in ROM).
+
+  The requirement to provide Installation Information does not include a
+requirement to continue to provide support service, warranty, or updates
+for a work that has been modified or installed by the recipient, or for
+the User Product in which it has been modified or installed.  Access to a
+network may be denied when the modification itself materially and
+adversely affects the operation of the network or violates the rules and
+protocols for communication across the network.
+
+  Corresponding Source conveyed, and Installation Information provided,
+in accord with this section must be in a format that is publicly
+documented (and with an implementation available to the public in
+source code form), and must require no special password or key for
+unpacking, reading or copying.
+
+  7. Additional Terms.
+
+  "Additional permissions" are terms that supplement the terms of this
+License by making exceptions from one or more of its conditions.
+Additional permissions that are applicable to the entire Program shall
+be treated as though they were included in this License, to the extent
+that they are valid under applicable law.  If additional permissions
+apply only to part of the Program, that part may be used separately
+under those permissions, but the entire Program remains governed by
+this License without regard to the additional permissions.
+
+  When you convey a copy of a covered work, you may at your option
+remove any additional permissions from that copy, or from any part of
+it.  (Additional permissions may be written to require their own
+removal in certain cases when you modify the work.)  You may place
+additional permissions on material, added by you to a covered work,
+for which you have or can give appropriate copyright permission.
+
+  Notwithstanding any other provision of this License, for material you
+add to a covered work, you may (if authorized by the copyright holders of
+that material) supplement the terms of this License with terms:
+
+    a) Disclaiming warranty or limiting liability differently from the
+    terms of sections 15 and 16 of this License; or
+
+    b) Requiring preservation of specified reasonable legal notices or
+    author attributions in that material or in the Appropriate Legal
+    Notices displayed by works containing it; or
+
+    c) Prohibiting misrepresentation of the origin of that material, or
+    requiring that modified versions of such material be marked in
+    reasonable ways as different from the original version; or
+
+    d) Limiting the use for publicity purposes of names of licensors or
+    authors of the material; or
+
+    e) Declining to grant rights under trademark law for use of some
+    trade names, trademarks, or service marks; or
+
+    f) Requiring indemnification of licensors and authors of that
+    material by anyone who conveys the material (or modified versions of
+    it) with contractual assumptions of liability to the recipient, for
+    any liability that these contractual assumptions directly impose on
+    those licensors and authors.
+
+  All other non-permissive additional terms are considered "further
+restrictions" within the meaning of section 10.  If the Program as you
+received it, or any part of it, contains a notice stating that it is
+governed by this License along with a term that is a further
+restriction, you may remove that term.  If a license document contains
+a further restriction but permits relicensing or conveying under this
+License, you may add to a covered work material governed by the terms
+of that license document, provided that the further restriction does
+not survive such relicensing or conveying.
+
+  If you add terms to a covered work in accord with this section, you
+must place, in the relevant source files, a statement of the
+additional terms that apply to those files, or a notice indicating
+where to find the applicable terms.
+
+  Additional terms, permissive or non-permissive, may be stated in the
+form of a separately written license, or stated as exceptions;
+the above requirements apply either way.
+
+  8. Termination.
+
+  You may not propagate or modify a covered work except as expressly
+provided under this License.  Any attempt otherwise to propagate or
+modify it is void, and will automatically terminate your rights under
+this License (including any patent licenses granted under the third
+paragraph of section 11).
+
+  However, if you cease all violation of this License, then your
+license from a particular copyright holder is reinstated (a)
+provisionally, unless and until the copyright holder explicitly and
+finally terminates your license, and (b) permanently, if the copyright
+holder fails to notify you of the violation by some reasonable means
+prior to 60 days after the cessation.
+
+  Moreover, your license from a particular copyright holder is
+reinstated permanently if the copyright holder notifies you of the
+violation by some reasonable means, this is the first time you have
+received notice of violation of this License (for any work) from that
+copyright holder, and you cure the violation prior to 30 days after
+your receipt of the notice.
+
+  Termination of your rights under this section does not terminate the
+licenses of parties who have received copies or rights from you under
+this License.  If your rights have been terminated and not permanently
+reinstated, you do not qualify to receive new licenses for the same
+material under section 10.
+
+  9. Acceptance Not Required for Having Copies.
+
+  You are not required to accept this License in order to receive or
+run a copy of the Program.  Ancillary propagation of a covered work
+occurring solely as a consequence of using peer-to-peer transmission
+to receive a copy likewise does not require acceptance.  However,
+nothing other than this License grants you permission to propagate or
+modify any covered work.  These actions infringe copyright if you do
+not accept this License.  Therefore, by modifying or propagating a
+covered work, you indicate your acceptance of this License to do so.
+
+  10. Automatic Licensing of Downstream Recipients.
+
+  Each time you convey a covered work, the recipient automatically
+receives a license from the original licensors, to run, modify and
+propagate that work, subject to this License.  You are not responsible
+for enforcing compliance by third parties with this License.
+
+  An "entity transaction" is a transaction transferring control of an
+organization, or substantially all assets of one, or subdividing an
+organization, or merging organizations.  If propagation of a covered
+work results from an entity transaction, each party to that
+transaction who receives a copy of the work also receives whatever
+licenses to the work the party's predecessor in interest had or could
+give under the previous paragraph, plus a right to possession of the
+Corresponding Source of the work from the predecessor in interest, if
+the predecessor has it or can get it with reasonable efforts.
+
+  You may not impose any further restrictions on the exercise of the
+rights granted or affirmed under this License.  For example, you may
+not impose a license fee, royalty, or other charge for exercise of
+rights granted under this License, and you may not initiate litigation
+(including a cross-claim or counterclaim in a lawsuit) alleging that
+any patent claim is infringed by making, using, selling, offering for
+sale, or importing the Program or any portion of it.
+
+  11. Patents.
+
+  A "contributor" is a copyright holder who authorizes use under this
+License of the Program or a work on which the Program is based.  The
+work thus licensed is called the contributor's "contributor version".
+
+  A contributor's "essential patent claims" are all patent claims
+owned or controlled by the contributor, whether already acquired or
+hereafter acquired, that would be infringed by some manner, permitted
+by this License, of making, using, or selling its contributor version,
+but do not include claims that would be infringed only as a
+consequence of further modification of the contributor version.  For
+purposes of this definition, "control" includes the right to grant
+patent sublicenses in a manner consistent with the requirements of
+this License.
+
+  Each contributor grants you a non-exclusive, worldwide, royalty-free
+patent license under the contributor's essential patent claims, to
+make, use, sell, offer for sale, import and otherwise run, modify and
+propagate the contents of its contributor version.
+
+  In the following three paragraphs, a "patent license" is any express
+agreement or commitment, however denominated, not to enforce a patent
+(such as an express permission to practice a patent or covenant not to
+sue for patent infringement).  To "grant" such a patent license to a
+party means to make such an agreement or commitment not to enforce a
+patent against the party.
+
+  If you convey a covered work, knowingly relying on a patent license,
+and the Corresponding Source of the work is not available for anyone
+to copy, free of charge and under the terms of this License, through a
+publicly available network server or other readily accessible means,
+then you must either (1) cause the Corresponding Source to be so
+available, or (2) arrange to deprive yourself of the benefit of the
+patent license for this particular work, or (3) arrange, in a manner
+consistent with the requirements of this License, to extend the patent
+license to downstream recipients.  "Knowingly relying" means you have
+actual knowledge that, but for the patent license, your conveying the
+covered work in a country, or your recipient's use of the covered work
+in a country, would infringe one or more identifiable patents in that
+country that you have reason to believe are valid.
+
+  If, pursuant to or in connection with a single transaction or
+arrangement, you convey, or propagate by procuring conveyance of, a
+covered work, and grant a patent license to some of the parties
+receiving the covered work authorizing them to use, propagate, modify
+or convey a specific copy of the covered work, then the patent license
+you grant is automatically extended to all recipients of the covered
+work and works based on it.
+
+  A patent license is "discriminatory" if it does not include within
+the scope of its coverage, prohibits the exercise of, or is
+conditioned on the non-exercise of one or more of the rights that are
+specifically granted under this License.  You may not convey a covered
+work if you are a party to an arrangement with a third party that is
+in the business of distributing software, under which you make payment
+to the third party based on the extent of your activity of conveying
+the work, and under which the third party grants, to any of the
+parties who would receive the covered work from you, a discriminatory
+patent license (a) in connection with copies of the covered work
+conveyed by you (or copies made from those copies), or (b) primarily
+for and in connection with specific products or compilations that
+contain the covered work, unless you entered into that arrangement,
+or that patent license was granted, prior to 28 March 2007.
+
+  Nothing in this License shall be construed as excluding or limiting
+any implied license or other defenses to infringement that may
+otherwise be available to you under applicable patent law.
+
+  12. No Surrender of Others' Freedom.
+
+  If conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot convey a
+covered work so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you may
+not convey it at all.  For example, if you agree to terms that obligate you
+to collect a royalty for further conveying from those to whom you convey
+the Program, the only way you could satisfy both those terms and this
+License would be to refrain entirely from conveying the Program.
+
+  13. Use with the GNU Affero General Public License.
+
+  Notwithstanding any other provision of this License, you have
+permission to link or combine any covered work with a work licensed
+under version 3 of the GNU Affero General Public License into a single
+combined work, and to convey the resulting work.  The terms of this
+License will continue to apply to the part which is the covered work,
+but the special requirements of the GNU Affero General Public License,
+section 13, concerning interaction through a network will apply to the
+combination as such.
+
+  14. Revised Versions of this License.
+
+  The Free Software Foundation may publish revised and/or new versions of
+the GNU General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+  Each version is given a distinguishing version number.  If the
+Program specifies that a certain numbered version of the GNU General
+Public License "or any later version" applies to it, you have the
+option of following the terms and conditions either of that numbered
+version or of any later version published by the Free Software
+Foundation.  If the Program does not specify a version number of the
+GNU General Public License, you may choose any version ever published
+by the Free Software Foundation.
+
+  If the Program specifies that a proxy can decide which future
+versions of the GNU General Public License can be used, that proxy's
+public statement of acceptance of a version permanently authorizes you
+to choose that version for the Program.
+
+  Later license versions may give you additional or different
+permissions.  However, no additional obligations are imposed on any
+author or copyright holder as a result of your choosing to follow a
+later version.
+
+  15. Disclaimer of Warranty.
+
+  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
+APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
+HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
+OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
+IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
+ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+  16. Limitation of Liability.
+
+  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
+THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
+GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
+USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
+DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
+PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
+EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
+SUCH DAMAGES.
+
+  17. Interpretation of Sections 15 and 16.
+
+  If the disclaimer of warranty and limitation of liability provided
+above cannot be given local legal effect according to their terms,
+reviewing courts shall apply local law that most closely approximates
+an absolute waiver of all civil liability in connection with the
+Program, unless a warranty or assumption of liability accompanies a
+copy of the Program in return for a fee.
+
+                     END OF TERMS AND CONDITIONS
+
+            How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+state the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+Also add information on how to contact you by electronic and paper mail.
+
+  If the program does terminal interaction, make it output a short
+notice like this when it starts in an interactive mode:
+
+    <program>  Copyright (C) <year>  <name of author>
+    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, your program's commands
+might be different; for a GUI interface, you would use an "about box".
+
+  You should also get your employer (if you work as a programmer) or school,
+if any, to sign a "copyright disclaimer" for the program, if necessary.
+For more information on this, and how to apply and follow the GNU GPL, see
+<http://www.gnu.org/licenses/>.
+
+  The GNU General Public License does not permit incorporating your program
+into proprietary programs.  If your program is a subroutine library, you
+may consider it more useful to permit linking proprietary applications with
+the library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.  But first, please read
+<http://www.gnu.org/philosophy/why-not-lgpl.html>.

Modified: sugarj/trunk/compiler/META-INF/MANIFEST.MF
==============================================================================
--- sugarj/trunk/compiler/META-INF/MANIFEST.MF	Tue May 31 13:34:08 2011	(r22965)
+++ sugarj/trunk/compiler/META-INF/MANIFEST.MF	Tue May 31 13:37:44 2011	(r22966)
@@ -11,8 +11,8 @@
  org.spoofax.terms,
  org.eclipse.jdt.core,
  org.strategoxt.strj,
- org.strategoxt.imp.nativebundle,
- org.strategoxt.imp.runtime
+ org.strategoxt.imp.runtime,
+ org.strategoxt.imp.nativebundle
 Bundle-ActivationPolicy: lazy
 Bundle-RequiredExecutionEnvironment: JavaSE-1.6
 Export-Package: org.sugarj, 

Modified: sugarj/trunk/compiler/org/sugarj/driver/FileCommands.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/FileCommands.java	Tue May 31 13:34:08 2011	(r22965)
+++ sugarj/trunk/compiler/org/sugarj/driver/FileCommands.java	Tue May 31 13:37:44 2011	(r22966)
@@ -36,7 +36,8 @@
   }
 
   public static void delete(String file) throws IOException {
-    new File(file).delete();
+    if (file != null)
+      new File(file).delete();
   }
 
   public static void copyFile(String from, String to) throws IOException {

Modified: sugarj/trunk/compiler/org/sugarj/driver/SDFCommands.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/SDFCommands.java	Tue May 31 13:34:08 2011	(r22965)
+++ sugarj/trunk/compiler/org/sugarj/driver/SDFCommands.java	Tue May 31 13:37:44 2011	(r22966)
@@ -179,7 +179,8 @@
     try {
       String cacheTbl = Environment.cacheDir + Environment.sep + new File(tbl).getName();
       FileCommands.copyFile(tbl, cacheTbl);
-      sdfCache.put(key, cacheTbl);
+      String oldTbl = sdfCache.putGet(key, cacheTbl);
+      FileCommands.delete(oldTbl);
 
       if (CommandExecution.CACHE_INFO)
         log.log("Cache Location: " + cacheTbl);

Modified: sugarj/trunk/compiler/org/sugarj/driver/STRCommands.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/STRCommands.java	Tue May 31 13:34:08 2011	(r22965)
+++ sugarj/trunk/compiler/org/sugarj/driver/STRCommands.java	Tue May 31 13:37:44 2011	(r22966)
@@ -136,7 +136,8 @@
     try {
       String cacheProg = Environment.cacheDir + Environment.sep + new File(prog).getName();
       FileCommands.copyFile(prog, cacheProg);
-      strCache.put(key, cacheProg);
+      String oldProg = strCache.putGet(key, cacheProg);
+      FileCommands.delete(oldProg);
 
       if (CommandExecution.CACHE_INFO)
         log.log("Cache Location: " + cacheProg);

Modified: sugarj/trunk/compiler/org/sugarj/driver/caching/ModuleKeyCache.java
==============================================================================
--- sugarj/trunk/compiler/org/sugarj/driver/caching/ModuleKeyCache.java	Tue May 31 13:34:08 2011	(r22965)
+++ sugarj/trunk/compiler/org/sugarj/driver/caching/ModuleKeyCache.java	Tue May 31 13:37:44 2011	(r22966)
@@ -15,6 +15,14 @@
     super.put(k, v);
   }
 
+  public V putGet(ModuleKey k, V v) {
+    k.doPut();
+    V old = super.get(k);
+    super.remove(k);
+    super.put(k, v);
+    return old;
+  }
+
   public V get(ModuleKey k) {
     k.doGet();
     

Modified: sugarj/trunk/editor/.settings/org.eclipse.jdt.core.prefs
==============================================================================
--- sugarj/trunk/editor/.settings/org.eclipse.jdt.core.prefs	Tue May 31 13:34:08 2011	(r22965)
+++ sugarj/trunk/editor/.settings/org.eclipse.jdt.core.prefs	Tue May 31 13:37:44 2011	(r22966)
@@ -1,4 +1,4 @@
-#Tue Apr 05 16:27:44 CEST 2011
+#Tue May 31 15:06:27 CEST 2011
 eclipse.preferences.version=1
 org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
 org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
@@ -6,3 +6,271 @@
 org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
 org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
 org.eclipse.jdt.core.compiler.source=1.6
+org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_assignment=0
+org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
+org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
+org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
+org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
+org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
+org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
+org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_after_package=1
+org.eclipse.jdt.core.formatter.blank_lines_before_field=0
+org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
+org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
+org.eclipse.jdt.core.formatter.blank_lines_before_method=1
+org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
+org.eclipse.jdt.core.formatter.blank_lines_before_package=0
+org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
+org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
+org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
+org.eclipse.jdt.core.formatter.comment.format_block_comments=true
+org.eclipse.jdt.core.formatter.comment.format_header=false
+org.eclipse.jdt.core.formatter.comment.format_html=true
+org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
+org.eclipse.jdt.core.formatter.comment.format_line_comments=true
+org.eclipse.jdt.core.formatter.comment.format_source_code=true
+org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
+org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
+org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
+org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert
+org.eclipse.jdt.core.formatter.comment.line_length=80
+org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
+org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
+org.eclipse.jdt.core.formatter.compact_else_if=true
+org.eclipse.jdt.core.formatter.continuation_indentation=2
+org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
+org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
+org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
+org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
+org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
+org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_empty_lines=false
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
+org.eclipse.jdt.core.formatter.indentation.size=2
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_member=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
+org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.join_lines_in_comments=true
+org.eclipse.jdt.core.formatter.join_wrapped_lines=true
+org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.lineSplit=80
+org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
+org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
+org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
+org.eclipse.jdt.core.formatter.tabulation.char=space
+org.eclipse.jdt.core.formatter.tabulation.size=2
+org.eclipse.jdt.core.formatter.use_on_off_tags=false
+org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
+org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
+org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true

Added: sugarj/trunk/editor/COPYING
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/trunk/editor/COPYING	Tue May 31 13:37:44 2011	(r22966)
@@ -0,0 +1,674 @@
+                    GNU GENERAL PUBLIC LICENSE
+                       Version 3, 29 June 2007
+
+ Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+                            Preamble
+
+  The GNU General Public License is a free, copyleft license for
+software and other kinds of works.
+
+  The licenses for most software and other practical works are designed
+to take away your freedom to share and change the works.  By contrast,
+the GNU General Public License is intended to guarantee your freedom to
+share and change all versions of a program--to make sure it remains free
+software for all its users.  We, the Free Software Foundation, use the
+GNU General Public License for most of our software; it applies also to
+any other work released this way by its authors.  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+them if you wish), that you receive source code or can get it if you
+want it, that you can change the software or use pieces of it in new
+free programs, and that you know you can do these things.
+
+  To protect your rights, we need to prevent others from denying you
+these rights or asking you to surrender the rights.  Therefore, you have
+certain responsibilities if you distribute copies of the software, or if
+you modify it: responsibilities to respect the freedom of others.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must pass on to the recipients the same
+freedoms that you received.  You must make sure that they, too, receive
+or can get the source code.  And you must show them these terms so they
+know their rights.
+
+  Developers that use the GNU GPL protect your rights with two steps:
+(1) assert copyright on the software, and (2) offer you this License
+giving you legal permission to copy, distribute and/or modify it.
+
+  For the developers' and authors' protection, the GPL clearly explains
+that there is no warranty for this free software.  For both users' and
+authors' sake, the GPL requires that modified versions be marked as
+changed, so that their problems will not be attributed erroneously to
+authors of previous versions.
+
+  Some devices are designed to deny users access to install or run
+modified versions of the software inside them, although the manufacturer
+can do so.  This is fundamentally incompatible with the aim of
+protecting users' freedom to change the software.  The systematic
+pattern of such abuse occurs in the area of products for individuals to
+use, which is precisely where it is most unacceptable.  Therefore, we
+have designed this version of the GPL to prohibit the practice for those
+products.  If such problems arise substantially in other domains, we
+stand ready to extend this provision to those domains in future versions
+of the GPL, as needed to protect the freedom of users.
+
+  Finally, every program is threatened constantly by software patents.
+States should not allow patents to restrict development and use of
+software on general-purpose computers, but in those that do, we wish to
+avoid the special danger that patents applied to a free program could
+make it effectively proprietary.  To prevent this, the GPL assures that
+patents cannot be used to render the program non-free.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+                       TERMS AND CONDITIONS
+
+  0. Definitions.
+
+  "This License" refers to version 3 of the GNU General Public License.
+
+  "Copyright" also means copyright-like laws that apply to other kinds of
+works, such as semiconductor masks.
+
+  "The Program" refers to any copyrightable work licensed under this
+License.  Each licensee is addressed as "you".  "Licensees" and
+"recipients" may be individuals or organizations.
+
+  To "modify" a work means to copy from or adapt all or part of the work
+in a fashion requiring copyright permission, other than the making of an
+exact copy.  The resulting work is called a "modified version" of the
+earlier work or a work "based on" the earlier work.
+
+  A "covered work" means either the unmodified Program or a work based
+on the Program.
+
+  To "propagate" a work means to do anything with it that, without
+permission, would make you directly or secondarily liable for
+infringement under applicable copyright law, except executing it on a
+computer or modifying a private copy.  Propagation includes copying,
+distribution (with or without modification), making available to the
+public, and in some countries other activities as well.
+
+  To "convey" a work means any kind of propagation that enables other
+parties to make or receive copies.  Mere interaction with a user through
+a computer network, with no transfer of a copy, is not conveying.
+
+  An interactive user interface displays "Appropriate Legal Notices"
+to the extent that it includes a convenient and prominently visible
+feature that (1) displays an appropriate copyright notice, and (2)
+tells the user that there is no warranty for the work (except to the
+extent that warranties are provided), that licensees may convey the
+work under this License, and how to view a copy of this License.  If
+the interface presents a list of user commands or options, such as a
+menu, a prominent item in the list meets this criterion.
+
+  1. Source Code.
+
+  The "source code" for a work means the preferred form of the work
+for making modifications to it.  "Object code" means any non-source
+form of a work.
+
+  A "Standard Interface" means an interface that either is an official
+standard defined by a recognized standards body, or, in the case of
+interfaces specified for a particular programming language, one that
+is widely used among developers working in that language.
+
+  The "System Libraries" of an executable work include anything, other
+than the work as a whole, that (a) is included in the normal form of
+packaging a Major Component, but which is not part of that Major
+Component, and (b) serves only to enable use of the work with that
+Major Component, or to implement a Standard Interface for which an
+implementation is available to the public in source code form.  A
+"Major Component", in this context, means a major essential component
+(kernel, window system, and so on) of the specific operating system
+(if any) on which the executable work runs, or a compiler used to
+produce the work, or an object code interpreter used to run it.
+
+  The "Corresponding Source" for a work in object code form means all
+the source code needed to generate, install, and (for an executable
+work) run the object code and to modify the work, including scripts to
+control those activities.  However, it does not include the work's
+System Libraries, or general-purpose tools or generally available free
+programs which are used unmodified in performing those activities but
+which are not part of the work.  For example, Corresponding Source
+includes interface definition files associated with source files for
+the work, and the source code for shared libraries and dynamically
+linked subprograms that the work is specifically designed to require,
+such as by intimate data communication or control flow between those
+subprograms and other parts of the work.
+
+  The Corresponding Source need not include anything that users
+can regenerate automatically from other parts of the Corresponding
+Source.
+
+  The Corresponding Source for a work in source code form is that
+same work.
+
+  2. Basic Permissions.
+
+  All rights granted under this License are granted for the term of
+copyright on the Program, and are irrevocable provided the stated
+conditions are met.  This License explicitly affirms your unlimited
+permission to run the unmodified Program.  The output from running a
+covered work is covered by this License only if the output, given its
+content, constitutes a covered work.  This License acknowledges your
+rights of fair use or other equivalent, as provided by copyright law.
+
+  You may make, run and propagate covered works that you do not
+convey, without conditions so long as your license otherwise remains
+in force.  You may convey covered works to others for the sole purpose
+of having them make modifications exclusively for you, or provide you
+with facilities for running those works, provided that you comply with
+the terms of this License in conveying all material for which you do
+not control copyright.  Those thus making or running the covered works
+for you must do so exclusively on your behalf, under your direction
+and control, on terms that prohibit them from making any copies of
+your copyrighted material outside their relationship with you.
+
+  Conveying under any other circumstances is permitted solely under
+the conditions stated below.  Sublicensing is not allowed; section 10
+makes it unnecessary.
+
+  3. Protecting Users' Legal Rights From Anti-Circumvention Law.
+
+  No covered work shall be deemed part of an effective technological
+measure under any applicable law fulfilling obligations under article
+11 of the WIPO copyright treaty adopted on 20 December 1996, or
+similar laws prohibiting or restricting circumvention of such
+measures.
+
+  When you convey a covered work, you waive any legal power to forbid
+circumvention of technological measures to the extent such circumvention
+is effected by exercising rights under this License with respect to
+the covered work, and you disclaim any intention to limit operation or
+modification of the work as a means of enforcing, against the work's
+users, your or third parties' legal rights to forbid circumvention of
+technological measures.
+
+  4. Conveying Verbatim Copies.
+
+  You may convey verbatim copies of the Program's source code as you
+receive it, in any medium, provided that you conspicuously and
+appropriately publish on each copy an appropriate copyright notice;
+keep intact all notices stating that this License and any
+non-permissive terms added in accord with section 7 apply to the code;
+keep intact all notices of the absence of any warranty; and give all
+recipients a copy of this License along with the Program.
+
+  You may charge any price or no price for each copy that you convey,
+and you may offer support or warranty protection for a fee.
+
+  5. Conveying Modified Source Versions.
+
+  You may convey a work based on the Program, or the modifications to
+produce it from the Program, in the form of source code under the
+terms of section 4, provided that you also meet all of these conditions:
+
+    a) The work must carry prominent notices stating that you modified
+    it, and giving a relevant date.
+
+    b) The work must carry prominent notices stating that it is
+    released under this License and any conditions added under section
+    7.  This requirement modifies the requirement in section 4 to
+    "keep intact all notices".
+
+    c) You must license the entire work, as a whole, under this
+    License to anyone who comes into possession of a copy.  This
+    License will therefore apply, along with any applicable section 7
+    additional terms, to the whole of the work, and all its parts,
+    regardless of how they are packaged.  This License gives no
+    permission to license the work in any other way, but it does not
+    invalidate such permission if you have separately received it.
+
+    d) If the work has interactive user interfaces, each must display
+    Appropriate Legal Notices; however, if the Program has interactive
+    interfaces that do not display Appropriate Legal Notices, your
+    work need not make them do so.
+
+  A compilation of a covered work with other separate and independent
+works, which are not by their nature extensions of the covered work,
+and which are not combined with it such as to form a larger program,
+in or on a volume of a storage or distribution medium, is called an
+"aggregate" if the compilation and its resulting copyright are not
+used to limit the access or legal rights of the compilation's users
+beyond what the individual works permit.  Inclusion of a covered work
+in an aggregate does not cause this License to apply to the other
+parts of the aggregate.
+
+  6. Conveying Non-Source Forms.
+
+  You may convey a covered work in object code form under the terms
+of sections 4 and 5, provided that you also convey the
+machine-readable Corresponding Source under the terms of this License,
+in one of these ways:
+
+    a) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by the
+    Corresponding Source fixed on a durable physical medium
+    customarily used for software interchange.
+
+    b) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by a
+    written offer, valid for at least three years and valid for as
+    long as you offer spare parts or customer support for that product
+    model, to give anyone who possesses the object code either (1) a
+    copy of the Corresponding Source for all the software in the
+    product that is covered by this License, on a durable physical
+    medium customarily used for software interchange, for a price no
+    more than your reasonable cost of physically performing this
+    conveying of source, or (2) access to copy the
+    Corresponding Source from a network server at no charge.
+
+    c) Convey individual copies of the object code with a copy of the
+    written offer to provide the Corresponding Source.  This
+    alternative is allowed only occasionally and noncommercially, and
+    only if you received the object code with such an offer, in accord
+    with subsection 6b.
+
+    d) Convey the object code by offering access from a designated
+    place (gratis or for a charge), and offer equivalent access to the
+    Corresponding Source in the same way through the same place at no
+    further charge.  You need not require recipients to copy the
+    Corresponding Source along with the object code.  If the place to
+    copy the object code is a network server, the Corresponding Source
+    may be on a different server (operated by you or a third party)
+    that supports equivalent copying facilities, provided you maintain
+    clear directions next to the object code saying where to find the
+    Corresponding Source.  Regardless of what server hosts the
+    Corresponding Source, you remain obligated to ensure that it is
+    available for as long as needed to satisfy these requirements.
+
+    e) Convey the object code using peer-to-peer transmission, provided
+    you inform other peers where the object code and Corresponding
+    Source of the work are being offered to the general public at no
+    charge under subsection 6d.
+
+  A separable portion of the object code, whose source code is excluded
+from the Corresponding Source as a System Library, need not be
+included in conveying the object code work.
+
+  A "User Product" is either (1) a "consumer product", which means any
+tangible personal property which is normally used for personal, family,
+or household purposes, or (2) anything designed or sold for incorporation
+into a dwelling.  In determining whether a product is a consumer product,
+doubtful cases shall be resolved in favor of coverage.  For a particular
+product received by a particular user, "normally used" refers to a
+typical or common use of that class of product, regardless of the status
+of the particular user or of the way in which the particular user
+actually uses, or expects or is expected to use, the product.  A product
+is a consumer product regardless of whether the product has substantial
+commercial, industrial or non-consumer uses, unless such uses represent
+the only significant mode of use of the product.
+
+  "Installation Information" for a User Product means any methods,
+procedures, authorization keys, or other information required to install
+and execute modified versions of a covered work in that User Product from
+a modified version of its Corresponding Source.  The information must
+suffice to ensure that the continued functioning of the modified object
+code is in no case prevented or interfered with solely because
+modification has been made.
+
+  If you convey an object code work under this section in, or with, or
+specifically for use in, a User Product, and the conveying occurs as
+part of a transaction in which the right of possession and use of the
+User Product is transferred to the recipient in perpetuity or for a
+fixed term (regardless of how the transaction is characterized), the
+Corresponding Source conveyed under this section must be accompanied
+by the Installation Information.  But this requirement does not apply
+if neither you nor any third party retains the ability to install
+modified object code on the User Product (for example, the work has
+been installed in ROM).
+
+  The requirement to provide Installation Information does not include a
+requirement to continue to provide support service, warranty, or updates
+for a work that has been modified or installed by the recipient, or for
+the User Product in which it has been modified or installed.  Access to a
+network may be denied when the modification itself materially and
+adversely affects the operation of the network or violates the rules and
+protocols for communication across the network.
+
+  Corresponding Source conveyed, and Installation Information provided,
+in accord with this section must be in a format that is publicly
+documented (and with an implementation available to the public in
+source code form), and must require no special password or key for
+unpacking, reading or copying.
+
+  7. Additional Terms.
+
+  "Additional permissions" are terms that supplement the terms of this
+License by making exceptions from one or more of its conditions.
+Additional permissions that are applicable to the entire Program shall
+be treated as though they were included in this License, to the extent
+that they are valid under applicable law.  If additional permissions
+apply only to part of the Program, that part may be used separately
+under those permissions, but the entire Program remains governed by
+this License without regard to the additional permissions.
+
+  When you convey a copy of a covered work, you may at your option
+remove any additional permissions from that copy, or from any part of
+it.  (Additional permissions may be written to require their own
+removal in certain cases when you modify the work.)  You may place
+additional permissions on material, added by you to a covered work,
+for which you have or can give appropriate copyright permission.
+
+  Notwithstanding any other provision of this License, for material you
+add to a covered work, you may (if authorized by the copyright holders of
+that material) supplement the terms of this License with terms:
+
+    a) Disclaiming warranty or limiting liability differently from the
+    terms of sections 15 and 16 of this License; or
+
+    b) Requiring preservation of specified reasonable legal notices or
+    author attributions in that material or in the Appropriate Legal
+    Notices displayed by works containing it; or
+
+    c) Prohibiting misrepresentation of the origin of that material, or
+    requiring that modified versions of such material be marked in
+    reasonable ways as different from the original version; or
+
+    d) Limiting the use for publicity purposes of names of licensors or
+    authors of the material; or
+
+    e) Declining to grant rights under trademark law for use of some
+    trade names, trademarks, or service marks; or
+
+    f) Requiring indemnification of licensors and authors of that
+    material by anyone who conveys the material (or modified versions of
+    it) with contractual assumptions of liability to the recipient, for
+    any liability that these contractual assumptions directly impose on
+    those licensors and authors.
+
+  All other non-permissive additional terms are considered "further
+restrictions" within the meaning of section 10.  If the Program as you
+received it, or any part of it, contains a notice stating that it is
+governed by this License along with a term that is a further
+restriction, you may remove that term.  If a license document contains
+a further restriction but permits relicensing or conveying under this
+License, you may add to a covered work material governed by the terms
+of that license document, provided that the further restriction does
+not survive such relicensing or conveying.
+
+  If you add terms to a covered work in accord with this section, you
+must place, in the relevant source files, a statement of the
+additional terms that apply to those files, or a notice indicating
+where to find the applicable terms.
+
+  Additional terms, permissive or non-permissive, may be stated in the
+form of a separately written license, or stated as exceptions;
+the above requirements apply either way.
+
+  8. Termination.
+
+  You may not propagate or modify a covered work except as expressly
+provided under this License.  Any attempt otherwise to propagate or
+modify it is void, and will automatically terminate your rights under
+this License (including any patent licenses granted under the third
+paragraph of section 11).
+
+  However, if you cease all violation of this License, then your
+license from a particular copyright holder is reinstated (a)
+provisionally, unless and until the copyright holder explicitly and
+finally terminates your license, and (b) permanently, if the copyright
+holder fails to notify you of the violation by some reasonable means
+prior to 60 days after the cessation.
+
+  Moreover, your license from a particular copyright holder is
+reinstated permanently if the copyright holder notifies you of the
+violation by some reasonable means, this is the first time you have
+received notice of violation of this License (for any work) from that
+copyright holder, and you cure the violation prior to 30 days after
+your receipt of the notice.
+
+  Termination of your rights under this section does not terminate the
+licenses of parties who have received copies or rights from you under
+this License.  If your rights have been terminated and not permanently
+reinstated, you do not qualify to receive new licenses for the same
+material under section 10.
+
+  9. Acceptance Not Required for Having Copies.
+
+  You are not required to accept this License in order to receive or
+run a copy of the Program.  Ancillary propagation of a covered work
+occurring solely as a consequence of using peer-to-peer transmission
+to receive a copy likewise does not require acceptance.  However,
+nothing other than this License grants you permission to propagate or
+modify any covered work.  These actions infringe copyright if you do
+not accept this License.  Therefore, by modifying or propagating a
+covered work, you indicate your acceptance of this License to do so.
+
+  10. Automatic Licensing of Downstream Recipients.
+
+  Each time you convey a covered work, the recipient automatically
+receives a license from the original licensors, to run, modify and
+propagate that work, subject to this License.  You are not responsible
+for enforcing compliance by third parties with this License.
+
+  An "entity transaction" is a transaction transferring control of an
+organization, or substantially all assets of one, or subdividing an
+organization, or merging organizations.  If propagation of a covered
+work results from an entity transaction, each party to that
+transaction who receives a copy of the work also receives whatever
+licenses to the work the party's predecessor in interest had or could
+give under the previous paragraph, plus a right to possession of the
+Corresponding Source of the work from the predecessor in interest, if
+the predecessor has it or can get it with reasonable efforts.
+
+  You may not impose any further restrictions on the exercise of the
+rights granted or affirmed under this License.  For example, you may
+not impose a license fee, royalty, or other charge for exercise of
+rights granted under this License, and you may not initiate litigation
+(including a cross-claim or counterclaim in a lawsuit) alleging that
+any patent claim is infringed by making, using, selling, offering for
+sale, or importing the Program or any portion of it.
+
+  11. Patents.
+
+  A "contributor" is a copyright holder who authorizes use under this
+License of the Program or a work on which the Program is based.  The
+work thus licensed is called the contributor's "contributor version".
+
+  A contributor's "essential patent claims" are all patent claims
+owned or controlled by the contributor, whether already acquired or
+hereafter acquired, that would be infringed by some manner, permitted
+by this License, of making, using, or selling its contributor version,
+but do not include claims that would be infringed only as a
+consequence of further modification of the contributor version.  For
+purposes of this definition, "control" includes the right to grant
+patent sublicenses in a manner consistent with the requirements of
+this License.
+
+  Each contributor grants you a non-exclusive, worldwide, royalty-free
+patent license under the contributor's essential patent claims, to
+make, use, sell, offer for sale, import and otherwise run, modify and
+propagate the contents of its contributor version.
+
+  In the following three paragraphs, a "patent license" is any express
+agreement or commitment, however denominated, not to enforce a patent
+(such as an express permission to practice a patent or covenant not to
+sue for patent infringement).  To "grant" such a patent license to a
+party means to make such an agreement or commitment not to enforce a
+patent against the party.
+
+  If you convey a covered work, knowingly relying on a patent license,
+and the Corresponding Source of the work is not available for anyone
+to copy, free of charge and under the terms of this License, through a
+publicly available network server or other readily accessible means,
+then you must either (1) cause the Corresponding Source to be so
+available, or (2) arrange to deprive yourself of the benefit of the
+patent license for this particular work, or (3) arrange, in a manner
+consistent with the requirements of this License, to extend the patent
+license to downstream recipients.  "Knowingly relying" means you have
+actual knowledge that, but for the patent license, your conveying the
+covered work in a country, or your recipient's use of the covered work
+in a country, would infringe one or more identifiable patents in that
+country that you have reason to believe are valid.
+
+  If, pursuant to or in connection with a single transaction or
+arrangement, you convey, or propagate by procuring conveyance of, a
+covered work, and grant a patent license to some of the parties
+receiving the covered work authorizing them to use, propagate, modify
+or convey a specific copy of the covered work, then the patent license
+you grant is automatically extended to all recipients of the covered
+work and works based on it.
+
+  A patent license is "discriminatory" if it does not include within
+the scope of its coverage, prohibits the exercise of, or is
+conditioned on the non-exercise of one or more of the rights that are
+specifically granted under this License.  You may not convey a covered
+work if you are a party to an arrangement with a third party that is
+in the business of distributing software, under which you make payment
+to the third party based on the extent of your activity of conveying
+the work, and under which the third party grants, to any of the
+parties who would receive the covered work from you, a discriminatory
+patent license (a) in connection with copies of the covered work
+conveyed by you (or copies made from those copies), or (b) primarily
+for and in connection with specific products or compilations that
+contain the covered work, unless you entered into that arrangement,
+or that patent license was granted, prior to 28 March 2007.
+
+  Nothing in this License shall be construed as excluding or limiting
+any implied license or other defenses to infringement that may
+otherwise be available to you under applicable patent law.
+
+  12. No Surrender of Others' Freedom.
+
+  If conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot convey a
+covered work so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you may
+not convey it at all.  For example, if you agree to terms that obligate you
+to collect a royalty for further conveying from those to whom you convey
+the Program, the only way you could satisfy both those terms and this
+License would be to refrain entirely from conveying the Program.
+
+  13. Use with the GNU Affero General Public License.
+
+  Notwithstanding any other provision of this License, you have
+permission to link or combine any covered work with a work licensed
+under version 3 of the GNU Affero General Public License into a single
+combined work, and to convey the resulting work.  The terms of this
+License will continue to apply to the part which is the covered work,
+but the special requirements of the GNU Affero General Public License,
+section 13, concerning interaction through a network will apply to the
+combination as such.
+
+  14. Revised Versions of this License.
+
+  The Free Software Foundation may publish revised and/or new versions of
+the GNU General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+  Each version is given a distinguishing version number.  If the
+Program specifies that a certain numbered version of the GNU General
+Public License "or any later version" applies to it, you have the
+option of following the terms and conditions either of that numbered
+version or of any later version published by the Free Software
+Foundation.  If the Program does not specify a version number of the
+GNU General Public License, you may choose any version ever published
+by the Free Software Foundation.
+
+  If the Program specifies that a proxy can decide which future
+versions of the GNU General Public License can be used, that proxy's
+public statement of acceptance of a version permanently authorizes you
+to choose that version for the Program.
+
+  Later license versions may give you additional or different
+permissions.  However, no additional obligations are imposed on any
+author or copyright holder as a result of your choosing to follow a
+later version.
+
+  15. Disclaimer of Warranty.
+
+  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
+APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
+HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
+OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
+IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
+ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+  16. Limitation of Liability.
+
+  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
+THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
+GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
+USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
+DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
+PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
+EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
+SUCH DAMAGES.
+
+  17. Interpretation of Sections 15 and 16.
+
+  If the disclaimer of warranty and limitation of liability provided
+above cannot be given local legal effect according to their terms,
+reviewing courts shall apply local law that most closely approximates
+an absolute waiver of all civil liability in connection with the
+Program, unless a warranty or assumption of liability accompanies a
+copy of the Program in return for a fee.
+
+                     END OF TERMS AND CONDITIONS
+
+            How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+state the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+Also add information on how to contact you by electronic and paper mail.
+
+  If the program does terminal interaction, make it output a short
+notice like this when it starts in an interactive mode:
+
+    <program>  Copyright (C) <year>  <name of author>
+    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, your program's commands
+might be different; for a GUI interface, you would use an "about box".
+
+  You should also get your employer (if you work as a programmer) or school,
+if any, to sign a "copyright disclaimer" for the program, if necessary.
+For more information on this, and how to apply and follow the GNU GPL, see
+<http://www.gnu.org/licenses/>.
+
+  The GNU General Public License does not permit incorporating your program
+into proprietary programs.  If your program is a subroutine library, you
+may consider it more useful to permit linking proprietary applications with
+the library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.  But first, please read
+<http://www.gnu.org/philosophy/why-not-lgpl.html>.

Modified: sugarj/trunk/editor/META-INF/MANIFEST.MF
==============================================================================
--- sugarj/trunk/editor/META-INF/MANIFEST.MF	Tue May 31 13:34:08 2011	(r22965)
+++ sugarj/trunk/editor/META-INF/MANIFEST.MF	Tue May 31 13:37:44 2011	(r22966)
@@ -28,7 +28,7 @@
  org.sugarj.compiler,
  org.sugarj.stdlib,
  org.eclipse.ant.core,
- org.eclipse.jdt.core
+ org.eclipse.jdt.core,
+ org.eclipse.ui.console
 Bundle-RequiredExecutionEnvironment: JavaSE-1.6
-Import-Package: org.osgi.framework;version="1.3.0"
 Bundle-ActivationPolicy: lazy

Modified: sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJConsole.java
==============================================================================
--- sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJConsole.java	Tue May 31 13:34:08 2011	(r22965)
+++ sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJConsole.java	Tue May 31 13:37:44 2011	(r22966)
@@ -42,6 +42,8 @@
   private static AutoFlushOutputStreamWriter lastConsoleOutputWriter;
 
   private static AutoFlushOutputStreamWriter lastConsoleErrorWriter;
+  
+  private static boolean consoleActivatedOnce = false;
 
   public static Writer getErrorWriter() {
     MessageConsole console = getConsole();
@@ -75,16 +77,14 @@
   public static OutputStream getOutputStream() {
     return ((AutoFlushOutputStreamWriter) getOutputWriter()).stream;
   }
-  
+
   public static PrintStream getErrorPrintStream() {
     return new PrintStream(getErrorStream());
   }
-  
+
   public static PrintStream getOutputPrintStream() {
     return new PrintStream(getOutputStream());
   }
-  
-  
 
   /**
    * Gets or opens the Eclipse console for this plugin.
@@ -113,6 +113,13 @@
     activateConsole(false);
   }
 
+  public static void activateConsoleOnce() {
+  	  if (!consoleActivatedOnce) {
+  	    activateConsole(false);
+  	    consoleActivatedOnce = true;
+  	  }
+	  }
+
   /**
    * Activates the console for this plugin.
    * 

Modified: sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParser.java
==============================================================================
--- sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParser.java	Tue May 31 13:34:08 2011	(r22965)
+++ sugarj/trunk/editor/editor/java/org/sugarj/editor/SugarJParser.java	Tue May 31 13:37:44 2011	(r22966)
@@ -66,6 +66,7 @@
     
     Log.out = SugarJConsole.getOutputPrintStream();
     Log.err = SugarJConsole.getErrorPrintStream();
+    SugarJConsole.activateConsoleOnce();
     
     try {
       result = Driver.compile(input, FileCommands.fileName(filename), filename);

Modified: sugarj/trunk/feature/feature.xml
==============================================================================
--- sugarj/trunk/feature/feature.xml	Tue May 31 13:34:08 2011	(r22965)
+++ sugarj/trunk/feature/feature.xml	Tue May 31 13:37:44 2011	(r22966)
@@ -2,21 +2,30 @@
 <feature
       id="org.sugarj.editor"
       label="SugarJ"
-      version="1.0.9.qualifier"
+      version="1.1.1.qualifier"
       provider-name="sugarj.org">
 
-   <description url="http://www.sugarj.org/update">
-      SugarJ
+   <description url="http://sugarj.org">
+      SugarJ and Sugarclipse
    </description>
 
-   <copyright url="http://www.example.com/copyright">
-      SugarJ
+   <copyright>
+      Copyrights of SugarJ and Sugarclipse belong to its authors.
    </copyright>
 
+   <license>
+      The SugarJ compiler and editor are released under the GNU GENERAL PUBLIC LICENSE, Version 3, 29 June 2007
+The SugarJ standard library is released under the GNU GENERAL PUBLIC LICENSE, Version 3, 29 June 2007 and  GNU LESSER GENERAL PUBLIC LICENSE, Version 3, 29 June 2007
+   </license>
+
    <url>
       <update label="SugarJ" url="http://sugarj.org/update"/>
    </url>
 
+   <includes
+         id="org.strategoxt.imp"
+         version="0.0.0"/>
+
    <requires>
       <import plugin="org.eclipse.core.runtime"/>
       <import plugin="org.eclipse.core.resources"/>
@@ -57,239 +66,6 @@
    </requires>
 
    <plugin
-         id="org.strategoxt.imp.metatooling"
-         download-size="52"
-         install-size="94"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.spoofax.aterm"
-         download-size="153"
-         install-size="238"
-         version="0.0.0"/>
-
-   <plugin
-         id="org.spoofax.compiler"
-         download-size="8"
-         install-size="12"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.spoofax.interpreter.core"
-         download-size="241"
-         install-size="486"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.spoofax.interpreter.library.jsglr"
-         download-size="13"
-         install-size="21"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.eclipse.imp.lpg"
-         download-size="2"
-         install-size="2"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.eclipse.imp.runtime"
-         download-size="687"
-         install-size="1435"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="lpg.runtime"
-         download-size="89"
-         install-size="94"
-         version="0.0.0"/>
-
-   <plugin
-         id="org.eclipse.imp.smapi"
-         download-size="8"
-         install-size="13"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.eclipse.imp.smapifier"
-         download-size="11"
-         install-size="19"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.strategoxt.imp.editors.editorservice"
-         download-size="801"
-         install-size="1353"
-         version="0.0.0"/>
-
-   <plugin
-         id="com.ibm.wala.shrike"
-         download-size="283"
-         install-size="537"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.eclipse.imp.metatooling"
-         download-size="591"
-         install-size="1017"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.eclipse.imp.preferences"
-         download-size="19"
-         install-size="35"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.eclipse.imp.prefspecs"
-         download-size="450"
-         install-size="950"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.eclipse.imp.presentation"
-         download-size="319"
-         install-size="597"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.strategoxt.strj"
-         download-size="11053"
-         install-size="13138"
-         version="0.0.0"/>
-
-   <plugin
-         id="org.strategoxt.imp.generator"
-         download-size="7781"
-         install-size="8723"
-         version="0.0.0"/>
-
-   <plugin
-         id="org.strategoxt.imp.editors.sdf"
-         download-size="841"
-         install-size="1376"
-         version="0.0.0"/>
-
-   <plugin
-         id="org.strategoxt.imp.editors.stratego"
-         download-size="1728"
-         install-size="2825"
-         version="0.0.0"/>
-
-   <plugin
-         id="org.strategoxt.imp.editors.aterm"
-         download-size="23"
-         install-size="35"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.strategoxt.imp.nativebundle"
-         download-size="4976"
-         install-size="18388"
-         version="0.0.0"/>
-
-   <plugin
-         id="org.eclipse.imp.java.hosted"
-         download-size="48"
-         install-size="95"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.eclipse.imp.lpg.ide"
-         download-size="1231"
-         install-size="3031"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.eclipse.imp.xform"
-         download-size="187"
-         install-size="371"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.strategoxt.imp.editors.aster"
-         download-size="2239"
-         install-size="2777"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.strategoxt.imp.editors.pp"
-         download-size="68"
-         install-size="214"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.strategoxt.imp.editors.rtg"
-         download-size="55"
-         install-size="190"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.strategoxt.imp.testing"
-         download-size="72"
-         install-size="142"
-         version="0.0.0"/>
-
-   <plugin
-         id="org.spoofax.terms"
-         download-size="100"
-         install-size="205"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.strategoxt.imp.debug.core"
-         download-size="48"
-         install-size="100"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.strategoxt.imp.debug.stratego.core"
-         download-size="99"
-         install-size="198"
-         version="0.0.0"/>
-
-   <plugin
-         id="org.strategoxt.imp.debug.ui"
-         download-size="22"
-         install-size="37"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.strategoxt.imp.debug.stratego.runtime"
-         download-size="83"
-         install-size="143"
-         version="0.0.0"/>
-
-   <plugin
-         id="org.strategoxt.imp.debug.stratego.transformer"
-         download-size="1880"
-         install-size="3605"
-         version="0.0.0"/>
-
-   <plugin
          id="org.sugarj.compiler"
          download-size="0"
          install-size="0"
@@ -308,18 +84,4 @@
          install-size="0"
          version="0.0.0"/>
 
-   <plugin
-         id="org.strategoxt.imp.runtime"
-         download-size="0"
-         install-size="0"
-         version="0.0.0"
-         unpack="false"/>
-
-   <plugin
-         id="org.spoofax.jsglr"
-         download-size="0"
-         install-size="0"
-         version="0.0.0"
-         unpack="false"/>
-
 </feature>

Added: sugarj/trunk/stdlib/COPYING
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/trunk/stdlib/COPYING	Tue May 31 13:37:44 2011	(r22966)
@@ -0,0 +1,674 @@
+                    GNU GENERAL PUBLIC LICENSE
+                       Version 3, 29 June 2007
+
+ Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+                            Preamble
+
+  The GNU General Public License is a free, copyleft license for
+software and other kinds of works.
+
+  The licenses for most software and other practical works are designed
+to take away your freedom to share and change the works.  By contrast,
+the GNU General Public License is intended to guarantee your freedom to
+share and change all versions of a program--to make sure it remains free
+software for all its users.  We, the Free Software Foundation, use the
+GNU General Public License for most of our software; it applies also to
+any other work released this way by its authors.  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+them if you wish), that you receive source code or can get it if you
+want it, that you can change the software or use pieces of it in new
+free programs, and that you know you can do these things.
+
+  To protect your rights, we need to prevent others from denying you
+these rights or asking you to surrender the rights.  Therefore, you have
+certain responsibilities if you distribute copies of the software, or if
+you modify it: responsibilities to respect the freedom of others.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must pass on to the recipients the same
+freedoms that you received.  You must make sure that they, too, receive
+or can get the source code.  And you must show them these terms so they
+know their rights.
+
+  Developers that use the GNU GPL protect your rights with two steps:
+(1) assert copyright on the software, and (2) offer you this License
+giving you legal permission to copy, distribute and/or modify it.
+
+  For the developers' and authors' protection, the GPL clearly explains
+that there is no warranty for this free software.  For both users' and
+authors' sake, the GPL requires that modified versions be marked as
+changed, so that their problems will not be attributed erroneously to
+authors of previous versions.
+
+  Some devices are designed to deny users access to install or run
+modified versions of the software inside them, although the manufacturer
+can do so.  This is fundamentally incompatible with the aim of
+protecting users' freedom to change the software.  The systematic
+pattern of such abuse occurs in the area of products for individuals to
+use, which is precisely where it is most unacceptable.  Therefore, we
+have designed this version of the GPL to prohibit the practice for those
+products.  If such problems arise substantially in other domains, we
+stand ready to extend this provision to those domains in future versions
+of the GPL, as needed to protect the freedom of users.
+
+  Finally, every program is threatened constantly by software patents.
+States should not allow patents to restrict development and use of
+software on general-purpose computers, but in those that do, we wish to
+avoid the special danger that patents applied to a free program could
+make it effectively proprietary.  To prevent this, the GPL assures that
+patents cannot be used to render the program non-free.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+                       TERMS AND CONDITIONS
+
+  0. Definitions.
+
+  "This License" refers to version 3 of the GNU General Public License.
+
+  "Copyright" also means copyright-like laws that apply to other kinds of
+works, such as semiconductor masks.
+
+  "The Program" refers to any copyrightable work licensed under this
+License.  Each licensee is addressed as "you".  "Licensees" and
+"recipients" may be individuals or organizations.
+
+  To "modify" a work means to copy from or adapt all or part of the work
+in a fashion requiring copyright permission, other than the making of an
+exact copy.  The resulting work is called a "modified version" of the
+earlier work or a work "based on" the earlier work.
+
+  A "covered work" means either the unmodified Program or a work based
+on the Program.
+
+  To "propagate" a work means to do anything with it that, without
+permission, would make you directly or secondarily liable for
+infringement under applicable copyright law, except executing it on a
+computer or modifying a private copy.  Propagation includes copying,
+distribution (with or without modification), making available to the
+public, and in some countries other activities as well.
+
+  To "convey" a work means any kind of propagation that enables other
+parties to make or receive copies.  Mere interaction with a user through
+a computer network, with no transfer of a copy, is not conveying.
+
+  An interactive user interface displays "Appropriate Legal Notices"
+to the extent that it includes a convenient and prominently visible
+feature that (1) displays an appropriate copyright notice, and (2)
+tells the user that there is no warranty for the work (except to the
+extent that warranties are provided), that licensees may convey the
+work under this License, and how to view a copy of this License.  If
+the interface presents a list of user commands or options, such as a
+menu, a prominent item in the list meets this criterion.
+
+  1. Source Code.
+
+  The "source code" for a work means the preferred form of the work
+for making modifications to it.  "Object code" means any non-source
+form of a work.
+
+  A "Standard Interface" means an interface that either is an official
+standard defined by a recognized standards body, or, in the case of
+interfaces specified for a particular programming language, one that
+is widely used among developers working in that language.
+
+  The "System Libraries" of an executable work include anything, other
+than the work as a whole, that (a) is included in the normal form of
+packaging a Major Component, but which is not part of that Major
+Component, and (b) serves only to enable use of the work with that
+Major Component, or to implement a Standard Interface for which an
+implementation is available to the public in source code form.  A
+"Major Component", in this context, means a major essential component
+(kernel, window system, and so on) of the specific operating system
+(if any) on which the executable work runs, or a compiler used to
+produce the work, or an object code interpreter used to run it.
+
+  The "Corresponding Source" for a work in object code form means all
+the source code needed to generate, install, and (for an executable
+work) run the object code and to modify the work, including scripts to
+control those activities.  However, it does not include the work's
+System Libraries, or general-purpose tools or generally available free
+programs which are used unmodified in performing those activities but
+which are not part of the work.  For example, Corresponding Source
+includes interface definition files associated with source files for
+the work, and the source code for shared libraries and dynamically
+linked subprograms that the work is specifically designed to require,
+such as by intimate data communication or control flow between those
+subprograms and other parts of the work.
+
+  The Corresponding Source need not include anything that users
+can regenerate automatically from other parts of the Corresponding
+Source.
+
+  The Corresponding Source for a work in source code form is that
+same work.
+
+  2. Basic Permissions.
+
+  All rights granted under this License are granted for the term of
+copyright on the Program, and are irrevocable provided the stated
+conditions are met.  This License explicitly affirms your unlimited
+permission to run the unmodified Program.  The output from running a
+covered work is covered by this License only if the output, given its
+content, constitutes a covered work.  This License acknowledges your
+rights of fair use or other equivalent, as provided by copyright law.
+
+  You may make, run and propagate covered works that you do not
+convey, without conditions so long as your license otherwise remains
+in force.  You may convey covered works to others for the sole purpose
+of having them make modifications exclusively for you, or provide you
+with facilities for running those works, provided that you comply with
+the terms of this License in conveying all material for which you do
+not control copyright.  Those thus making or running the covered works
+for you must do so exclusively on your behalf, under your direction
+and control, on terms that prohibit them from making any copies of
+your copyrighted material outside their relationship with you.
+
+  Conveying under any other circumstances is permitted solely under
+the conditions stated below.  Sublicensing is not allowed; section 10
+makes it unnecessary.
+
+  3. Protecting Users' Legal Rights From Anti-Circumvention Law.
+
+  No covered work shall be deemed part of an effective technological
+measure under any applicable law fulfilling obligations under article
+11 of the WIPO copyright treaty adopted on 20 December 1996, or
+similar laws prohibiting or restricting circumvention of such
+measures.
+
+  When you convey a covered work, you waive any legal power to forbid
+circumvention of technological measures to the extent such circumvention
+is effected by exercising rights under this License with respect to
+the covered work, and you disclaim any intention to limit operation or
+modification of the work as a means of enforcing, against the work's
+users, your or third parties' legal rights to forbid circumvention of
+technological measures.
+
+  4. Conveying Verbatim Copies.
+
+  You may convey verbatim copies of the Program's source code as you
+receive it, in any medium, provided that you conspicuously and
+appropriately publish on each copy an appropriate copyright notice;
+keep intact all notices stating that this License and any
+non-permissive terms added in accord with section 7 apply to the code;
+keep intact all notices of the absence of any warranty; and give all
+recipients a copy of this License along with the Program.
+
+  You may charge any price or no price for each copy that you convey,
+and you may offer support or warranty protection for a fee.
+
+  5. Conveying Modified Source Versions.
+
+  You may convey a work based on the Program, or the modifications to
+produce it from the Program, in the form of source code under the
+terms of section 4, provided that you also meet all of these conditions:
+
+    a) The work must carry prominent notices stating that you modified
+    it, and giving a relevant date.
+
+    b) The work must carry prominent notices stating that it is
+    released under this License and any conditions added under section
+    7.  This requirement modifies the requirement in section 4 to
+    "keep intact all notices".
+
+    c) You must license the entire work, as a whole, under this
+    License to anyone who comes into possession of a copy.  This
+    License will therefore apply, along with any applicable section 7
+    additional terms, to the whole of the work, and all its parts,
+    regardless of how they are packaged.  This License gives no
+    permission to license the work in any other way, but it does not
+    invalidate such permission if you have separately received it.
+
+    d) If the work has interactive user interfaces, each must display
+    Appropriate Legal Notices; however, if the Program has interactive
+    interfaces that do not display Appropriate Legal Notices, your
+    work need not make them do so.
+
+  A compilation of a covered work with other separate and independent
+works, which are not by their nature extensions of the covered work,
+and which are not combined with it such as to form a larger program,
+in or on a volume of a storage or distribution medium, is called an
+"aggregate" if the compilation and its resulting copyright are not
+used to limit the access or legal rights of the compilation's users
+beyond what the individual works permit.  Inclusion of a covered work
+in an aggregate does not cause this License to apply to the other
+parts of the aggregate.
+
+  6. Conveying Non-Source Forms.
+
+  You may convey a covered work in object code form under the terms
+of sections 4 and 5, provided that you also convey the
+machine-readable Corresponding Source under the terms of this License,
+in one of these ways:
+
+    a) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by the
+    Corresponding Source fixed on a durable physical medium
+    customarily used for software interchange.
+
+    b) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by a
+    written offer, valid for at least three years and valid for as
+    long as you offer spare parts or customer support for that product
+    model, to give anyone who possesses the object code either (1) a
+    copy of the Corresponding Source for all the software in the
+    product that is covered by this License, on a durable physical
+    medium customarily used for software interchange, for a price no
+    more than your reasonable cost of physically performing this
+    conveying of source, or (2) access to copy the
+    Corresponding Source from a network server at no charge.
+
+    c) Convey individual copies of the object code with a copy of the
+    written offer to provide the Corresponding Source.  This
+    alternative is allowed only occasionally and noncommercially, and
+    only if you received the object code with such an offer, in accord
+    with subsection 6b.
+
+    d) Convey the object code by offering access from a designated
+    place (gratis or for a charge), and offer equivalent access to the
+    Corresponding Source in the same way through the same place at no
+    further charge.  You need not require recipients to copy the
+    Corresponding Source along with the object code.  If the place to
+    copy the object code is a network server, the Corresponding Source
+    may be on a different server (operated by you or a third party)
+    that supports equivalent copying facilities, provided you maintain
+    clear directions next to the object code saying where to find the
+    Corresponding Source.  Regardless of what server hosts the
+    Corresponding Source, you remain obligated to ensure that it is
+    available for as long as needed to satisfy these requirements.
+
+    e) Convey the object code using peer-to-peer transmission, provided
+    you inform other peers where the object code and Corresponding
+    Source of the work are being offered to the general public at no
+    charge under subsection 6d.
+
+  A separable portion of the object code, whose source code is excluded
+from the Corresponding Source as a System Library, need not be
+included in conveying the object code work.
+
+  A "User Product" is either (1) a "consumer product", which means any
+tangible personal property which is normally used for personal, family,
+or household purposes, or (2) anything designed or sold for incorporation
+into a dwelling.  In determining whether a product is a consumer product,
+doubtful cases shall be resolved in favor of coverage.  For a particular
+product received by a particular user, "normally used" refers to a
+typical or common use of that class of product, regardless of the status
+of the particular user or of the way in which the particular user
+actually uses, or expects or is expected to use, the product.  A product
+is a consumer product regardless of whether the product has substantial
+commercial, industrial or non-consumer uses, unless such uses represent
+the only significant mode of use of the product.
+
+  "Installation Information" for a User Product means any methods,
+procedures, authorization keys, or other information required to install
+and execute modified versions of a covered work in that User Product from
+a modified version of its Corresponding Source.  The information must
+suffice to ensure that the continued functioning of the modified object
+code is in no case prevented or interfered with solely because
+modification has been made.
+
+  If you convey an object code work under this section in, or with, or
+specifically for use in, a User Product, and the conveying occurs as
+part of a transaction in which the right of possession and use of the
+User Product is transferred to the recipient in perpetuity or for a
+fixed term (regardless of how the transaction is characterized), the
+Corresponding Source conveyed under this section must be accompanied
+by the Installation Information.  But this requirement does not apply
+if neither you nor any third party retains the ability to install
+modified object code on the User Product (for example, the work has
+been installed in ROM).
+
+  The requirement to provide Installation Information does not include a
+requirement to continue to provide support service, warranty, or updates
+for a work that has been modified or installed by the recipient, or for
+the User Product in which it has been modified or installed.  Access to a
+network may be denied when the modification itself materially and
+adversely affects the operation of the network or violates the rules and
+protocols for communication across the network.
+
+  Corresponding Source conveyed, and Installation Information provided,
+in accord with this section must be in a format that is publicly
+documented (and with an implementation available to the public in
+source code form), and must require no special password or key for
+unpacking, reading or copying.
+
+  7. Additional Terms.
+
+  "Additional permissions" are terms that supplement the terms of this
+License by making exceptions from one or more of its conditions.
+Additional permissions that are applicable to the entire Program shall
+be treated as though they were included in this License, to the extent
+that they are valid under applicable law.  If additional permissions
+apply only to part of the Program, that part may be used separately
+under those permissions, but the entire Program remains governed by
+this License without regard to the additional permissions.
+
+  When you convey a copy of a covered work, you may at your option
+remove any additional permissions from that copy, or from any part of
+it.  (Additional permissions may be written to require their own
+removal in certain cases when you modify the work.)  You may place
+additional permissions on material, added by you to a covered work,
+for which you have or can give appropriate copyright permission.
+
+  Notwithstanding any other provision of this License, for material you
+add to a covered work, you may (if authorized by the copyright holders of
+that material) supplement the terms of this License with terms:
+
+    a) Disclaiming warranty or limiting liability differently from the
+    terms of sections 15 and 16 of this License; or
+
+    b) Requiring preservation of specified reasonable legal notices or
+    author attributions in that material or in the Appropriate Legal
+    Notices displayed by works containing it; or
+
+    c) Prohibiting misrepresentation of the origin of that material, or
+    requiring that modified versions of such material be marked in
+    reasonable ways as different from the original version; or
+
+    d) Limiting the use for publicity purposes of names of licensors or
+    authors of the material; or
+
+    e) Declining to grant rights under trademark law for use of some
+    trade names, trademarks, or service marks; or
+
+    f) Requiring indemnification of licensors and authors of that
+    material by anyone who conveys the material (or modified versions of
+    it) with contractual assumptions of liability to the recipient, for
+    any liability that these contractual assumptions directly impose on
+    those licensors and authors.
+
+  All other non-permissive additional terms are considered "further
+restrictions" within the meaning of section 10.  If the Program as you
+received it, or any part of it, contains a notice stating that it is
+governed by this License along with a term that is a further
+restriction, you may remove that term.  If a license document contains
+a further restriction but permits relicensing or conveying under this
+License, you may add to a covered work material governed by the terms
+of that license document, provided that the further restriction does
+not survive such relicensing or conveying.
+
+  If you add terms to a covered work in accord with this section, you
+must place, in the relevant source files, a statement of the
+additional terms that apply to those files, or a notice indicating
+where to find the applicable terms.
+
+  Additional terms, permissive or non-permissive, may be stated in the
+form of a separately written license, or stated as exceptions;
+the above requirements apply either way.
+
+  8. Termination.
+
+  You may not propagate or modify a covered work except as expressly
+provided under this License.  Any attempt otherwise to propagate or
+modify it is void, and will automatically terminate your rights under
+this License (including any patent licenses granted under the third
+paragraph of section 11).
+
+  However, if you cease all violation of this License, then your
+license from a particular copyright holder is reinstated (a)
+provisionally, unless and until the copyright holder explicitly and
+finally terminates your license, and (b) permanently, if the copyright
+holder fails to notify you of the violation by some reasonable means
+prior to 60 days after the cessation.
+
+  Moreover, your license from a particular copyright holder is
+reinstated permanently if the copyright holder notifies you of the
+violation by some reasonable means, this is the first time you have
+received notice of violation of this License (for any work) from that
+copyright holder, and you cure the violation prior to 30 days after
+your receipt of the notice.
+
+  Termination of your rights under this section does not terminate the
+licenses of parties who have received copies or rights from you under
+this License.  If your rights have been terminated and not permanently
+reinstated, you do not qualify to receive new licenses for the same
+material under section 10.
+
+  9. Acceptance Not Required for Having Copies.
+
+  You are not required to accept this License in order to receive or
+run a copy of the Program.  Ancillary propagation of a covered work
+occurring solely as a consequence of using peer-to-peer transmission
+to receive a copy likewise does not require acceptance.  However,
+nothing other than this License grants you permission to propagate or
+modify any covered work.  These actions infringe copyright if you do
+not accept this License.  Therefore, by modifying or propagating a
+covered work, you indicate your acceptance of this License to do so.
+
+  10. Automatic Licensing of Downstream Recipients.
+
+  Each time you convey a covered work, the recipient automatically
+receives a license from the original licensors, to run, modify and
+propagate that work, subject to this License.  You are not responsible
+for enforcing compliance by third parties with this License.
+
+  An "entity transaction" is a transaction transferring control of an
+organization, or substantially all assets of one, or subdividing an
+organization, or merging organizations.  If propagation of a covered
+work results from an entity transaction, each party to that
+transaction who receives a copy of the work also receives whatever
+licenses to the work the party's predecessor in interest had or could
+give under the previous paragraph, plus a right to possession of the
+Corresponding Source of the work from the predecessor in interest, if
+the predecessor has it or can get it with reasonable efforts.
+
+  You may not impose any further restrictions on the exercise of the
+rights granted or affirmed under this License.  For example, you may
+not impose a license fee, royalty, or other charge for exercise of
+rights granted under this License, and you may not initiate litigation
+(including a cross-claim or counterclaim in a lawsuit) alleging that
+any patent claim is infringed by making, using, selling, offering for
+sale, or importing the Program or any portion of it.
+
+  11. Patents.
+
+  A "contributor" is a copyright holder who authorizes use under this
+License of the Program or a work on which the Program is based.  The
+work thus licensed is called the contributor's "contributor version".
+
+  A contributor's "essential patent claims" are all patent claims
+owned or controlled by the contributor, whether already acquired or
+hereafter acquired, that would be infringed by some manner, permitted
+by this License, of making, using, or selling its contributor version,
+but do not include claims that would be infringed only as a
+consequence of further modification of the contributor version.  For
+purposes of this definition, "control" includes the right to grant
+patent sublicenses in a manner consistent with the requirements of
+this License.
+
+  Each contributor grants you a non-exclusive, worldwide, royalty-free
+patent license under the contributor's essential patent claims, to
+make, use, sell, offer for sale, import and otherwise run, modify and
+propagate the contents of its contributor version.
+
+  In the following three paragraphs, a "patent license" is any express
+agreement or commitment, however denominated, not to enforce a patent
+(such as an express permission to practice a patent or covenant not to
+sue for patent infringement).  To "grant" such a patent license to a
+party means to make such an agreement or commitment not to enforce a
+patent against the party.
+
+  If you convey a covered work, knowingly relying on a patent license,
+and the Corresponding Source of the work is not available for anyone
+to copy, free of charge and under the terms of this License, through a
+publicly available network server or other readily accessible means,
+then you must either (1) cause the Corresponding Source to be so
+available, or (2) arrange to deprive yourself of the benefit of the
+patent license for this particular work, or (3) arrange, in a manner
+consistent with the requirements of this License, to extend the patent
+license to downstream recipients.  "Knowingly relying" means you have
+actual knowledge that, but for the patent license, your conveying the
+covered work in a country, or your recipient's use of the covered work
+in a country, would infringe one or more identifiable patents in that
+country that you have reason to believe are valid.
+
+  If, pursuant to or in connection with a single transaction or
+arrangement, you convey, or propagate by procuring conveyance of, a
+covered work, and grant a patent license to some of the parties
+receiving the covered work authorizing them to use, propagate, modify
+or convey a specific copy of the covered work, then the patent license
+you grant is automatically extended to all recipients of the covered
+work and works based on it.
+
+  A patent license is "discriminatory" if it does not include within
+the scope of its coverage, prohibits the exercise of, or is
+conditioned on the non-exercise of one or more of the rights that are
+specifically granted under this License.  You may not convey a covered
+work if you are a party to an arrangement with a third party that is
+in the business of distributing software, under which you make payment
+to the third party based on the extent of your activity of conveying
+the work, and under which the third party grants, to any of the
+parties who would receive the covered work from you, a discriminatory
+patent license (a) in connection with copies of the covered work
+conveyed by you (or copies made from those copies), or (b) primarily
+for and in connection with specific products or compilations that
+contain the covered work, unless you entered into that arrangement,
+or that patent license was granted, prior to 28 March 2007.
+
+  Nothing in this License shall be construed as excluding or limiting
+any implied license or other defenses to infringement that may
+otherwise be available to you under applicable patent law.
+
+  12. No Surrender of Others' Freedom.
+
+  If conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot convey a
+covered work so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you may
+not convey it at all.  For example, if you agree to terms that obligate you
+to collect a royalty for further conveying from those to whom you convey
+the Program, the only way you could satisfy both those terms and this
+License would be to refrain entirely from conveying the Program.
+
+  13. Use with the GNU Affero General Public License.
+
+  Notwithstanding any other provision of this License, you have
+permission to link or combine any covered work with a work licensed
+under version 3 of the GNU Affero General Public License into a single
+combined work, and to convey the resulting work.  The terms of this
+License will continue to apply to the part which is the covered work,
+but the special requirements of the GNU Affero General Public License,
+section 13, concerning interaction through a network will apply to the
+combination as such.
+
+  14. Revised Versions of this License.
+
+  The Free Software Foundation may publish revised and/or new versions of
+the GNU General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+  Each version is given a distinguishing version number.  If the
+Program specifies that a certain numbered version of the GNU General
+Public License "or any later version" applies to it, you have the
+option of following the terms and conditions either of that numbered
+version or of any later version published by the Free Software
+Foundation.  If the Program does not specify a version number of the
+GNU General Public License, you may choose any version ever published
+by the Free Software Foundation.
+
+  If the Program specifies that a proxy can decide which future
+versions of the GNU General Public License can be used, that proxy's
+public statement of acceptance of a version permanently authorizes you
+to choose that version for the Program.
+
+  Later license versions may give you additional or different
+permissions.  However, no additional obligations are imposed on any
+author or copyright holder as a result of your choosing to follow a
+later version.
+
+  15. Disclaimer of Warranty.
+
+  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
+APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
+HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
+OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
+IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
+ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+  16. Limitation of Liability.
+
+  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
+THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
+GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
+USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
+DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
+PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
+EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
+SUCH DAMAGES.
+
+  17. Interpretation of Sections 15 and 16.
+
+  If the disclaimer of warranty and limitation of liability provided
+above cannot be given local legal effect according to their terms,
+reviewing courts shall apply local law that most closely approximates
+an absolute waiver of all civil liability in connection with the
+Program, unless a warranty or assumption of liability accompanies a
+copy of the Program in return for a fee.
+
+                     END OF TERMS AND CONDITIONS
+
+            How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+state the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+Also add information on how to contact you by electronic and paper mail.
+
+  If the program does terminal interaction, make it output a short
+notice like this when it starts in an interactive mode:
+
+    <program>  Copyright (C) <year>  <name of author>
+    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, your program's commands
+might be different; for a GUI interface, you would use an "about box".
+
+  You should also get your employer (if you work as a programmer) or school,
+if any, to sign a "copyright disclaimer" for the program, if necessary.
+For more information on this, and how to apply and follow the GNU GPL, see
+<http://www.gnu.org/licenses/>.
+
+  The GNU General Public License does not permit incorporating your program
+into proprietary programs.  If your program is a subroutine library, you
+may consider it more useful to permit linking proprietary applications with
+the library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.  But first, please read
+<http://www.gnu.org/philosophy/why-not-lgpl.html>.

Added: sugarj/trunk/stdlib/COPYING.LESSER
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/trunk/stdlib/COPYING.LESSER	Tue May 31 13:37:44 2011	(r22966)
@@ -0,0 +1,165 @@
+                   GNU LESSER GENERAL PUBLIC LICENSE
+                       Version 3, 29 June 2007
+
+ Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+
+  This version of the GNU Lesser General Public License incorporates
+the terms and conditions of version 3 of the GNU General Public
+License, supplemented by the additional permissions listed below.
+
+  0. Additional Definitions.
+
+  As used herein, "this License" refers to version 3 of the GNU Lesser
+General Public License, and the "GNU GPL" refers to version 3 of the GNU
+General Public License.
+
+  "The Library" refers to a covered work governed by this License,
+other than an Application or a Combined Work as defined below.
+
+  An "Application" is any work that makes use of an interface provided
+by the Library, but which is not otherwise based on the Library.
+Defining a subclass of a class defined by the Library is deemed a mode
+of using an interface provided by the Library.
+
+  A "Combined Work" is a work produced by combining or linking an
+Application with the Library.  The particular version of the Library
+with which the Combined Work was made is also called the "Linked
+Version".
+
+  The "Minimal Corresponding Source" for a Combined Work means the
+Corresponding Source for the Combined Work, excluding any source code
+for portions of the Combined Work that, considered in isolation, are
+based on the Application, and not on the Linked Version.
+
+  The "Corresponding Application Code" for a Combined Work means the
+object code and/or source code for the Application, including any data
+and utility programs needed for reproducing the Combined Work from the
+Application, but excluding the System Libraries of the Combined Work.
+
+  1. Exception to Section 3 of the GNU GPL.
+
+  You may convey a covered work under sections 3 and 4 of this License
+without being bound by section 3 of the GNU GPL.
+
+  2. Conveying Modified Versions.
+
+  If you modify a copy of the Library, and, in your modifications, a
+facility refers to a function or data to be supplied by an Application
+that uses the facility (other than as an argument passed when the
+facility is invoked), then you may convey a copy of the modified
+version:
+
+   a) under this License, provided that you make a good faith effort to
+   ensure that, in the event an Application does not supply the
+   function or data, the facility still operates, and performs
+   whatever part of its purpose remains meaningful, or
+
+   b) under the GNU GPL, with none of the additional permissions of
+   this License applicable to that copy.
+
+  3. Object Code Incorporating Material from Library Header Files.
+
+  The object code form of an Application may incorporate material from
+a header file that is part of the Library.  You may convey such object
+code under terms of your choice, provided that, if the incorporated
+material is not limited to numerical parameters, data structure
+layouts and accessors, or small macros, inline functions and templates
+(ten or fewer lines in length), you do both of the following:
+
+   a) Give prominent notice with each copy of the object code that the
+   Library is used in it and that the Library and its use are
+   covered by this License.
+
+   b) Accompany the object code with a copy of the GNU GPL and this license
+   document.
+
+  4. Combined Works.
+
+  You may convey a Combined Work under terms of your choice that,
+taken together, effectively do not restrict modification of the
+portions of the Library contained in the Combined Work and reverse
+engineering for debugging such modifications, if you also do each of
+the following:
+
+   a) Give prominent notice with each copy of the Combined Work that
+   the Library is used in it and that the Library and its use are
+   covered by this License.
+
+   b) Accompany the Combined Work with a copy of the GNU GPL and this license
+   document.
+
+   c) For a Combined Work that displays copyright notices during
+   execution, include the copyright notice for the Library among
+   these notices, as well as a reference directing the user to the
+   copies of the GNU GPL and this license document.
+
+   d) Do one of the following:
+
+       0) Convey the Minimal Corresponding Source under the terms of this
+       License, and the Corresponding Application Code in a form
+       suitable for, and under terms that permit, the user to
+       recombine or relink the Application with a modified version of
+       the Linked Version to produce a modified Combined Work, in the
+       manner specified by section 6 of the GNU GPL for conveying
+       Corresponding Source.
+
+       1) Use a suitable shared library mechanism for linking with the
+       Library.  A suitable mechanism is one that (a) uses at run time
+       a copy of the Library already present on the user's computer
+       system, and (b) will operate properly with a modified version
+       of the Library that is interface-compatible with the Linked
+       Version.
+
+   e) Provide Installation Information, but only if you would otherwise
+   be required to provide such information under section 6 of the
+   GNU GPL, and only to the extent that such information is
+   necessary to install and execute a modified version of the
+   Combined Work produced by recombining or relinking the
+   Application with a modified version of the Linked Version. (If
+   you use option 4d0, the Installation Information must accompany
+   the Minimal Corresponding Source and Corresponding Application
+   Code. If you use option 4d1, you must provide the Installation
+   Information in the manner specified by section 6 of the GNU GPL
+   for conveying Corresponding Source.)
+
+  5. Combined Libraries.
+
+  You may place library facilities that are a work based on the
+Library side by side in a single library together with other library
+facilities that are not Applications and are not covered by this
+License, and convey such a combined library under terms of your
+choice, if you do both of the following:
+
+   a) Accompany the combined library with a copy of the same work based
+   on the Library, uncombined with any other library facilities,
+   conveyed under the terms of this License.
+
+   b) Give prominent notice with the combined library that part of it
+   is a work based on the Library, and explaining where to find the
+   accompanying uncombined form of the same work.
+
+  6. Revised Versions of the GNU Lesser General Public License.
+
+  The Free Software Foundation may publish revised and/or new versions
+of the GNU Lesser General Public License from time to time. Such new
+versions will be similar in spirit to the present version, but may
+differ in detail to address new problems or concerns.
+
+  Each version is given a distinguishing version number. If the
+Library as you received it specifies that a certain numbered version
+of the GNU Lesser General Public License "or any later version"
+applies to it, you have the option of following the terms and
+conditions either of that published version or of any later version
+published by the Free Software Foundation. If the Library as you
+received it does not specify a version number of the GNU Lesser
+General Public License, you may choose any version of the GNU Lesser
+General Public License ever published by the Free Software Foundation.
+
+  If the Library as you received it specifies that a proxy can decide
+whether future versions of the GNU Lesser General Public License shall
+apply, that proxy's public statement of acceptance of any version is
+permanent authorization for you to choose that version for the
+Library.

Modified: sugarj/trunk/stdlib/build.properties
==============================================================================
--- sugarj/trunk/stdlib/build.properties	Tue May 31 13:34:08 2011	(r22965)
+++ sugarj/trunk/stdlib/build.properties	Tue May 31 13:37:44 2011	(r22966)
@@ -1,5 +1,4 @@
 source.. = .
-output.. = bin/
+output.. = .
 bin.includes = META-INF/,\
-               .
-               
\ No newline at end of file
+               .
\ No newline at end of file

Modified: sugarj/trunk/update-site/site.xml
==============================================================================
--- sugarj/trunk/update-site/site.xml	Tue May 31 13:34:08 2011	(r22965)
+++ sugarj/trunk/update-site/site.xml	Tue May 31 13:37:44 2011	(r22966)
@@ -3,7 +3,7 @@
    <description name="SugarJ" url="sugarj.org/update">
       SugarJ
    </description>
-   <feature url="features/org.sugarj.editor_1.0.9.201105181653.jar" id="org.sugarj.editor" version="1.0.9.201105181653">
+   <feature url="features/org.sugarj.editor_1.1.1.201105311536.jar" id="org.sugarj.editor" version="1.1.1.201105311536">
       <category name="SugarJ"/>
    </feature>
    <category-def name="SugarJ" label="SugarJ">

From R.B.Vermaas at tudelft.nl  Tue May 31 15:42:20 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 31 May 2011 13:42:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22967 - hydra/jobs
Message-ID: <20110531134220.6918A7F80AA@mx1.tudelft.nl>

Author: rob
Date: Tue May 31 13:42:19 2011
New Revision: 22967
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22967&sc=1

Log:


Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Tue May 31 13:37:44 2011	(r22966)
+++ hydra/jobs/spoofax-imp.nix	Tue May 31 13:42:19 2011	(r22967)
@@ -216,13 +216,12 @@
     </dependencies>
     <executions>
        <execution>
-               <id>process-classes</id>
-               <phase>process-classes</phase>
+               <id>generate-sources</id>
+               <phase>generate-sources</phase>
                <configuration>
                   <tasks>
                           <echo>Running ant script</echo>
                           <property name="externaljarx" refid="maven.compile.classpath"/>
-                          <property name="java.class.path" value="utils/aster.jar:utils/strategoxt.jar:utils/sdf2imp.jar:utils/make_permissive.jar"/>
                           <property name="eclipse.spoofaximp.jars" value="utils/"/>
                           <property name="eclipse.spoofaximp.strategojar" value="utils/strategoxt.jar"/>
                           <property name="eclipse.home" value="${eclipse}/eclipse"/>
@@ -231,6 +230,21 @@
                           </ant>
                   </tasks>
                </configuration>
+               <goals>
+                  <goal>run</goal>
+               </goals>
+       </execution>
+       <execution>
+               <id>process-classes</id>
+               <phase>process-classes</phase>
+               <configuration>
+                  <tasks>
+                          <echo>Running ant script</echo>
+                          <ant antfile="build.main.xml" inheritRefs="true">
+                            <target name="java.jar"/> 
+                          </ant>
+                  </tasks>
+               </configuration>
                <goals>
                   <goal>run</goal>
                </goals>

From R.B.Vermaas at tudelft.nl  Tue May 31 15:50:48 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 31 May 2011 13:50:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22968 - hydra/jobs
Message-ID: <20110531135048.B0C46CC186@mx4.tudelft.nl>

Author: rob
Date: Tue May 31 13:50:47 2011
New Revision: 22968
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22968&sc=1

Log:


Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Tue May 31 13:42:19 2011	(r22967)
+++ hydra/jobs/spoofax-imp.nix	Tue May 31 13:50:47 2011	(r22968)
@@ -240,6 +240,10 @@
                <configuration>
                   <tasks>
                           <echo>Running ant script</echo>
+                          <property name="eclipse.spoofaximp.jars" value="utils/"/>
+                          <property name="eclipse.spoofaximp.strategojar" value="utils/strategoxt.jar"/>
+                          <property name="eclipse.home" value="${eclipse}/eclipse"/>
+                          <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
                           <ant antfile="build.main.xml" inheritRefs="true">
                             <target name="java.jar"/> 
                           </ant>

From R.B.Vermaas at tudelft.nl  Tue May 31 15:59:03 2011
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 31 May 2011 13:59:03 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22969 - hydra/jobs
Message-ID: <20110531135903.226D97F80A1@mx1.tudelft.nl>

Author: rob
Date: Tue May 31 13:59:02 2011
New Revision: 22969
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22969&sc=1

Log:


Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Tue May 31 13:50:47 2011	(r22968)
+++ hydra/jobs/spoofax-imp.nix	Tue May 31 13:59:02 2011	(r22969)
@@ -159,7 +159,7 @@
         make -C org.strategoxt.imp.generator all
         stopNest
 
-        for e in */build.main.xml
+        for e in */build.generated.xml
         do
           POM=`dirname $e`/pom.xml
           if [[ -f $POM ]] ; then

From L.C.L.Kats at tudelft.nl  Tue May 31 16:51:25 2011
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 31 May 2011 14:51:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r22970 -
	sugarj/trunk/compiler
Message-ID: <20110531145125.8AFB62B80A8@mx2.tudelft.nl>

Author: LennartKats
Date: Tue May 31 14:51:24 2011
New Revision: 22970
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=22970&sc=1

Log:
removed bad nativebundle classpath entry

Modified:
   sugarj/trunk/compiler/.classpath

Modified: sugarj/trunk/compiler/.classpath
==============================================================================
--- sugarj/trunk/compiler/.classpath	Tue May 31 13:59:02 2011	(r22969)
+++ sugarj/trunk/compiler/.classpath	Tue May 31 14:51:24 2011	(r22970)
@@ -6,6 +6,5 @@
 	<classpathentry exported="true" kind="lib" path="make_permissive.jar"/>
 	<classpathentry exported="true" kind="lib" path="commons-cli-1.2.jar"/>
 	<classpathentry kind="lib" path="commons-collections-3.2.1.jar"/>
-	<classpathentry kind="lib" path="/Users/seba/svn-strategoxt/spoofax-imp/trunk/org.strategoxt.imp.nativebundle/bin"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>

