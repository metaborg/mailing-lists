From seba at informatik.uni-marburg.de  Sun Jul  1 17:29:53 2012
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Sun, 01 Jul 2012 15:29:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25114 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20120701152953.F07BA7F8008@mx1.tudelft.nl>

Author: SebastianErdweg
Date: Sun Jul  1 15:29:51 2012
New Revision: 25114
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25114&sc=1

Log:
avoid NullPointerException for uninitialized lastEditor

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java	Fri Jun 29 14:36:24 2012	(r25113)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java	Sun Jul  1 15:29:51 2012	(r25114)
@@ -469,7 +469,13 @@
 	}
 	
 	private static boolean useSpacesInsteadOfTabs() {
-		IPreferenceStore preferences = lastEditor.getThePreferenceStore();
+		IPreferenceStore preferences;
+		if(lastEditor!=null){
+			preferences = lastEditor.getThePreferenceStore();
+		}
+		else{
+			preferences = EditorState.getActiveEditor().getEditor().getThePreferenceStore();
+		}
 		return preferences != null && 
 			preferences.getBoolean(EDITOR_SPACES_FOR_TABS);
 	}

From oskarvanrest at gmail.com  Mon Jul  2 04:14:12 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 02 Jul 2012 02:14:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25115 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model
Message-ID: <20120702021412.9454A2B8029@mx2.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul  2 02:14:10 2012
New Revision: 25115
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25115&sc=1

Log:
EmptyNode figure

Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfmap
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.trace

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen	Sun Jul  1 15:29:51 2012	(r25114)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen	Mon Jul  2 02:14:10 2012	(r25115)
@@ -172,8 +172,14 @@
           xsi:type="gmfgen:MetamodelType"
           editHelperClassName="EmptyNodeEditHelper"/>
       <viewmap
-          xsi:type="gmfgen:FigureViewmap"
-          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure">
+          xsi:type="gmfgen:InnerClassViewmap"
+          className="EmptyNodeFigure"
+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EmptyNodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeLabelLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeOperatorLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EmptyNodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(fals
 e);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.lightGreen);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw2d.RectangleFigure();&#xA;left0.setOutline(false);&#xA;left0.setLineWidth(0);&#xA;left0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(54)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeft0 = new org.eclipse.draw2d.GridData();&#xA;constraintLeft0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalIndent = 0;&#xA;constraint
 Left0.horizontalSpan = 1;&#xA;constraintLeft0.verticalSpan = 1;&#xA;c int = 60;&#xA;this.add(line0, constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLineWidth(0);&#xA;right0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(125)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRight0 = new org.eclipse.draw2d.GridData();&#xA;constraintRight0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalIndent = 0;&#xA;constraintRight0.horizontalSpan = 1;&#xA;constraintRight0.verticalSpan = 1;&#xA;constraintRight0.grabExcessHorizontalSpace = true;&#xA;constraintRight0.grabExcessVerticalSpace = true;&#xA;this.add(right0, constraintRight0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutR
 ight0.numColumns = 2;&#xA;&#x9;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight sVerticalSpace = true;&#xA;right0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraintRightRight1.verticalSpan = 1;&#xA;constraintRightRight1.grabExcessHorizontalSpace = true;&#xA;constraintRightRight1.grabExcessVerticalSpace 
 = true;&#xA;right0.add(rightRight1, constraintRightRight1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutRightRight1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;rightRight1.setLayoutManager(lay A;&#x9;operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureEmptyNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEmptyNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeOperatorLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&#xA;operatorRectangl
 e2.add(fFigureEmptyNodeOperatorLabelFigure, constraintFFigureEmptyNodeOperatorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure labelRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;labelRectangle2.setFill(false);&#xA;labelRectangle2.setOutline ures.WrappingLabel();&#xA;fFigureEmptyNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureEmptyNodeLabelLabelFigure, constraintFFigureEmptyNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private 
 org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.Wra+        <attributes
+            xsi:type="gmfgen:StyleAttributes"
+            fixedFont="true"
+            fixedForeground="true"
+            fixedBackground="true"/>
         <attributes
             xsi:type="gmfgen:ResizeConstraints"/>
       </viewmap>
@@ -185,6 +191,40 @@
         <childMetaFeature
             href="ComBE.genmodel#//ComBE/BehaviorTree/nodes"/>
       </modelFacet>
+      <labels
+          visualID="5021"
+          editPartClassName="EmptyNodeLabel2EditPart"
+          itemSemanticEditPolicyClassName="EmptyNodeLabel2ItemSemanticEditPolicy">
+        <diagramRunTimeClass
+            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
+        <viewmap
+            xsi:type="gmfgen:ParentAssignedViewmap"
+            getterName="getFigureEmptyNodeLabelLabelFigure"
+            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
+        <modelFacet
+            xsi:type="gmfgen:FeatureLabelModelFacet"
+            parser="//@labelParsers/@implementations.3">
+          <metaFeatures
+              href="ComBE.genmodel#//ComBE/Node/label"/>
+        </modelFacet>
+      </labels>
+      <labels
+          visualID="5022"
+          editPartClassName="EmptyNodeOperator2EditPart"
+          itemSemanticEditPolicyClassName="EmptyNodeOperator2ItemSemanticEditPolicy">
+        <diagramRunTimeClass
+            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
+        <viewmap
+            xsi:type="gmfgen:ParentAssignedViewmap"
+            getterName="getFigureEmptyNodeOperatorLabelFigure"
+            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
+        <modelFacet
+            xsi:type="gmfgen:FeatureLabelModelFacet"
+            parser="//@labelParsers/@implementations.3">
+          <metaFeatures
+              href="ComBE.genmodel#//ComBE/Node/operator"/>
+        </modelFacet>
+      </labels>
     </childNodes>
     <childNodes
         visualID="3003"
@@ -338,8 +378,14 @@
           xsi:type="gmfgen:SpecializationType"
           metamodelType="//@diagram/@childNodes.1/@elementType"/>
       <viewmap
-          xsi:type="gmfgen:FigureViewmap"
-          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure">
+          xsi:type="gmfgen:InnerClassViewmap"
+          className="EmptyNodeFigure"
+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EmptyNodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeLabelLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeOperatorLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EmptyNodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(fals
 e);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.lightGreen);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw2d.RectangleFigure();&#xA;left0.setOutline(false);&#xA;left0.setLineWidth(0);&#xA;left0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(54)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeft0 = new org.eclipse.draw2d.GridData();&#xA;constraintLeft0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalIndent = 0;&#xA;constraint
 Left0.horizontalSpan = 1;&#xA;constraintLeft0.verticalSpan = 1;&#xA;c int = 60;&#xA;this.add(line0, constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLineWidth(0);&#xA;right0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(125)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRight0 = new org.eclipse.draw2d.GridData();&#xA;constraintRight0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalIndent = 0;&#xA;constraintRight0.horizontalSpan = 1;&#xA;constraintRight0.verticalSpan = 1;&#xA;constraintRight0.grabExcessHorizontalSpace = true;&#xA;constraintRight0.grabExcessVerticalSpace = true;&#xA;this.add(right0, constraintRight0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutR
 ight0.numColumns = 2;&#xA;&#x9;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight sVerticalSpace = true;&#xA;right0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraintRightRight1.verticalSpan = 1;&#xA;constraintRightRight1.grabExcessHorizontalSpace = true;&#xA;constraintRightRight1.grabExcessVerticalSpace 
 = true;&#xA;right0.add(rightRight1, constraintRightRight1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutRightRight1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;rightRight1.setLayoutManager(lay A;&#x9;operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureEmptyNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEmptyNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeOperatorLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&#xA;operatorRectangl
 e2.add(fFigureEmptyNodeOperatorLabelFigure, constraintFFigureEmptyNodeOperatorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure labelRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;labelRectangle2.setFill(false);&#xA;labelRectangle2.setOutline ures.WrappingLabel();&#xA;fFigureEmptyNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureEmptyNodeLabelLabelFigure, constraintFFigureEmptyNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private 
 org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.Wra+        <attributes
+            xsi:type="gmfgen:StyleAttributes"
+            fixedFont="true"
+            fixedForeground="true"
+            fixedBackground="true"/>
         <attributes
             xsi:type="gmfgen:ResizeConstraints"/>
       </viewmap>
@@ -351,6 +397,40 @@
         <childMetaFeature
             href="ComBE.genmodel#//ComBE/BehaviorTree/nodes"/>
       </modelFacet>
+      <labels
+          visualID="5023"
+          editPartClassName="EmptyNodeLabel3EditPart"
+          itemSemanticEditPolicyClassName="EmptyNodeLabel3ItemSemanticEditPolicy">
+        <diagramRunTimeClass
+            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
+        <viewmap
+            xsi:type="gmfgen:ParentAssignedViewmap"
+            getterName="getFigureEmptyNodeLabelLabelFigure"
+            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
+        <modelFacet
+            xsi:type="gmfgen:FeatureLabelModelFacet"
+            parser="//@labelParsers/@implementations.3">
+          <metaFeatures
+              href="ComBE.genmodel#//ComBE/Node/label"/>
+        </modelFacet>
+      </labels>
+      <labels
+          visualID="5024"
+          editPartClassName="EmptyNodeOperator3EditPart"
+          itemSemanticEditPolicyClassName="EmptyNodeOperator3ItemSemanticEditPolicy">
+        <diagramRunTimeClass
+            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
+        <viewmap
+            xsi:type="gmfgen:ParentAssignedViewmap"
+            getterName="getFigureEmptyNodeOperatorLabelFigure"
+            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
+        <modelFacet
+            xsi:type="gmfgen:FeatureLabelModelFacet"
+            parser="//@labelParsers/@implementations.3">
+          <metaFeatures
+              href="ComBE.genmodel#//ComBE/Node/operator"/>
+        </modelFacet>
+      </labels>
     </childNodes>
     <childNodes
         visualID="3005"
@@ -504,8 +584,14 @@
           xsi:type="gmfgen:SpecializationType"
           metamodelType="//@diagram/@childNodes.1/@elementType"/>
       <viewmap
-          xsi:type="gmfgen:FigureViewmap"
-          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure">
+          xsi:type="gmfgen:InnerClassViewmap"
+          className="EmptyNodeFigure"
+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EmptyNodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeLabelLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeOperatorLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EmptyNodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(fals
 e);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.lightGreen);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw2d.RectangleFigure();&#xA;left0.setOutline(false);&#xA;left0.setLineWidth(0);&#xA;left0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(54)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeft0 = new org.eclipse.draw2d.GridData();&#xA;constraintLeft0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalIndent = 0;&#xA;constraint
 Left0.horizontalSpan = 1;&#xA;constraintLeft0.verticalSpan = 1;&#xA;c int = 60;&#xA;this.add(line0, constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLineWidth(0);&#xA;right0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(125)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRight0 = new org.eclipse.draw2d.GridData();&#xA;constraintRight0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalIndent = 0;&#xA;constraintRight0.horizontalSpan = 1;&#xA;constraintRight0.verticalSpan = 1;&#xA;constraintRight0.grabExcessHorizontalSpace = true;&#xA;constraintRight0.grabExcessVerticalSpace = true;&#xA;this.add(right0, constraintRight0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutR
 ight0.numColumns = 2;&#xA;&#x9;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight sVerticalSpace = true;&#xA;right0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraintRightRight1.verticalSpan = 1;&#xA;constraintRightRight1.grabExcessHorizontalSpace = true;&#xA;constraintRightRight1.grabExcessVerticalSpace 
 = true;&#xA;right0.add(rightRight1, constraintRightRight1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutRightRight1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;rightRight1.setLayoutManager(lay A;&#x9;operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureEmptyNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEmptyNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeOperatorLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&#xA;operatorRectangl
 e2.add(fFigureEmptyNodeOperatorLabelFigure, constraintFFigureEmptyNodeOperatorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure labelRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;labelRectangle2.setFill(false);&#xA;labelRectangle2.setOutline ures.WrappingLabel();&#xA;fFigureEmptyNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureEmptyNodeLabelLabelFigure, constraintFFigureEmptyNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private 
 org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.Wra+        <attributes
+            xsi:type="gmfgen:StyleAttributes"
+            fixedFont="true"
+            fixedForeground="true"
+            fixedBackground="true"/>
         <attributes
             xsi:type="gmfgen:ResizeConstraints"/>
       </viewmap>
@@ -517,6 +603,42 @@
         <childMetaFeature
             href="ComBE.genmodel#//ComBE/BehaviorTree/nodes"/>
       </modelFacet>
+      <labels
+          visualID="5019"
+          editPartClassName="EmptyNodeLabelEditPart"
+          itemSemanticEditPolicyClassName="EmptyNodeLabelItemSemanticEditPolicy"
+          notationViewFactoryClassName="EmptyNodeLabelViewFactory">
+        <diagramRunTimeClass
+            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
+        <viewmap
+            xsi:type="gmfgen:ParentAssignedViewmap"
+            getterName="getFigureEmptyNodeLabelLabelFigure"
+            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
+        <modelFacet
+            xsi:type="gmfgen:FeatureLabelModelFacet"
+            parser="//@labelParsers/@implementations.3">
+          <metaFeatures
+              href="ComBE.genmodel#//ComBE/Node/label"/>
+        </modelFacet>
+      </labels>
+      <labels
+          visualID="5020"
+          editPartClassName="EmptyNodeOperatorEditPart"
+          itemSemanticEditPolicyClassName="EmptyNodeOperatorItemSemanticEditPolicy"
+          notationViewFactoryClassName="EmptyNodeOperatorViewFactory">
+        <diagramRunTimeClass
+            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
+        <viewmap
+            xsi:type="gmfgen:ParentAssignedViewmap"
+            getterName="getFigureEmptyNodeOperatorLabelFigure"
+            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
+        <modelFacet
+            xsi:type="gmfgen:FeatureLabelModelFacet"
+            parser="//@labelParsers/@implementations.3">
+          <metaFeatures
+              href="ComBE.genmodel#//ComBE/Node/operator"/>
+        </modelFacet>
+      </labels>
     </childNodes>
     <topLevelNodes
         visualID="2001"
@@ -1057,7 +1179,7 @@
     </implementations>
     <implementations
         xsi:type="gmfgen:PredefinedParser"
-        uses="//@diagram/@childNodes.0/@labels.3/@modelFacet //@diagram/@childNodes.0/@labels.4/@modelFacet //@diagram/@childNodes.0/@labels.5/@modelFacet //@diagram/@childNodes.2/@labels.3/@modelFacet //@diagram/@childNodes.2/@labels.4/@modelFacet //@diagram/@childNodes.2/@labels.5/@modelFacet //@diagram/@childNodes.4/@labels.3/@modelFacet //@diagram/@childNodes.4/@labels.4/@modelFacet //@diagram/@childNodes.4/@labels.5/@modelFacet"/>
+        uses="//@diagram/@childNodes.0/@labels.3/@modelFacet //@diagram/@childNodes.0/@labels.4/@modelFacet //@diagram/@childNodes.0/@labels.5/@modelFacet //@diagram/@childNodes.1/@labels.0/@modelFacet //@diagram/@childNodes.1/@labels.1/@modelFacet //@diagram/@childNodes.2/@labels.3/@modelFacet //@diagram/@childNodes.2/@labels.4/@modelFacet //@diagram/@childNodes.2/@labels.5/@modelFacet //@diagram/@childNodes.3/@labels.0/@modelFacet //@diagram/@childNodes.3/@labels.1/@modelFacet //@diagram/@childNodes.4/@labels.3/@modelFacet //@diagram/@childNodes.4/@labels.4/@modelFacet //@diagram/@childNodes.4/@labels.5/@modelFacet //@diagram/@childNodes.5/@labels.0/@modelFacet //@diagram/@childNodes.5/@labels.1/@modelFacet"/>
     <implementations
         xsi:type="gmfgen:ExpressionLabelParser"
         uses="//@diagram/@childNodes.2/@labels.0/@modelFacet"

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph	Sun Jul  1 15:29:51 2012	(r25114)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph	Mon Jul  2 02:14:10 2012	(r25115)
@@ -409,7 +409,160 @@
         name="EmptyNodeFigure">
       <actualFigure
           xsi:type="gmfgraph:Rectangle"
-          name="EmptyNodeFigure"/>
+          name="EmptyNodeFigure"
+          outline="false"
+          lineWidth="0">
+        <layout
+            xsi:type="gmfgraph:GridLayout"
+            numColumns="3"
+            equalWidth="false">
+          <margins/>
+          <spacing/>
+        </layout>
+        <foregroundColor
+            xsi:type="gmfgraph:ConstantColor"
+            value="black"/>
+        <backgroundColor
+            xsi:type="gmfgraph:ConstantColor"
+            value="lightGreen"/>
+        <font
+            xsi:type="gmfgraph:BasicFont"
+            faceName="ComBEFont"
+            height="6"
+            style="BOLD"/>
+        <border
+            xsi:type="gmfgraph:CustomBorder"
+            qualifiedClassName="ComBE.diagram.customCode.CustomLineBorder"/>
+        <children
+            xsi:type="gmfgraph:Rectangle"
+            name="Left"
+            outline="false"
+            lineWidth="0">
+          <layoutData
+              xsi:type="gmfgraph:GridLayoutData"
+              grabExcessHorizontalSpace="true"
+              grabExcessVerticalSpace="true"/>
+          <preferredSize
+              dx="54"
+              dy="60"/>
+        </children>
+        <children
+            xsi:type="gmfgraph:Rectangle"
+            name="Line"
+            outline="false"
+            lineWidth="0">
+          <layoutData
+              xsi:type="gmfgraph:GridLayoutData">
+            <sizeHint
+                dx="1"
+                dy="60"/>
+          </layoutData>
+          <backgroundColor
+              xsi:type="gmfgraph:ConstantColor"
+              value="black"/>
+        </children>
+        <children
+            xsi:type="gmfgraph:Rectangle"
+            name="Right"
+            outline="false"
+            lineWidth="0">
+          <layoutData
+              xsi:type="gmfgraph:GridLayoutData"
+              grabExcessHorizontalSpace="true"
+              grabExcessVerticalSpace="true"/>
+          <layout
+              xsi:type="gmfgraph:GridLayout"
+              numColumns="2"
+              equalWidth="false">
+            <margins/>
+            <spacing/>
+          </layout>
+          <preferredSize
+              dx="125"
+              dy="60"/>
+          <children
+              xsi:type="gmfgraph:Rectangle"
+              name="RightLeft"
+              outline="false"
+              fill="false"
+              lineWidth="0">
+            <layoutData
+                xsi:type="gmfgraph:GridLayoutData"
+                grabExcessHorizontalSpace="true"
+                grabExcessVerticalSpace="true"/>
+          </children>
+          <children
+              xsi:type="gmfgraph:Rectangle"
+              name="RightRight"
+              outline="false"
+              fill="false"
+              lineWidth="0">
+            <layoutData
+                xsi:type="gmfgraph:GridLayoutData"
+                grabExcessHorizontalSpace="true"
+                grabExcessVerticalSpace="true"/>
+            <layout
+                xsi:type="gmfgraph:BorderLayout"/>
+            <insets
+                top="1"
+                bottom="20"/>
+            <children
+                xsi:type="gmfgraph:Rectangle"
+                name="OperatorRectangle"
+                outline="false"
+                fill="false"
+                lineWidth="0">
+              <layoutData
+                  xsi:type="gmfgraph:BorderLayoutData"
+                  alignment="BEGINNING"
+                  vertical="true"/>
+              <layout
+                  xsi:type="gmfgraph:GridLayout">
+                <margins/>
+                <spacing/>
+              </layout>
+              <children
+                  xsi:type="gmfgraph:Label"
+                  name="EmptyNodeOperatorLabelFigure"
+                  text=" ">
+                <layoutData
+                    xsi:type="gmfgraph:GridLayoutData"
+                    grabExcessHorizontalSpace="true"
+                    grabExcessVerticalSpace="true"/>
+              </children>
+            </children>
+            <children
+                xsi:type="gmfgraph:Rectangle"
+                name="LabelRectangle"
+                outline="false"
+                fill="false"
+                lineWidth="0">
+              <layoutData
+                  xsi:type="gmfgraph:BorderLayoutData"
+                  alignment="END"
+                  vertical="true"/>
+              <layout
+                  xsi:type="gmfgraph:GridLayout">
+                <margins/>
+                <spacing/>
+              </layout>
+              <children
+                  xsi:type="gmfgraph:Label"
+                  name="EmptyNodeLabelLabelFigure"
+                  text=" ">
+                <layoutData
+                    xsi:type="gmfgraph:GridLayoutData"
+                    grabExcessHorizontalSpace="true"
+                    grabExcessVerticalSpace="true"/>
+              </children>
+            </children>
+          </children>
+        </children>
+      </actualFigure>
+      <accessors
+          figure="//@figures.0/@descriptors.5/@actualFigure/@children.2/@children.1/@children.1/@children.0"/>
+      <accessors
+          figure="//@figures.0/@descriptors.5/@actualFigure/@children.2/@children.1/@children.0/@children.0"/>
     </descriptors>
   </figures>
   <nodes
@@ -477,4 +630,14 @@
       figure="NodeFigure"
       elementIcon="false"
       accessor="//@figures.0/@descriptors.3/@accessors.5"/>
+  <labels
+      name="EmptyNodeOperatorFigure"
+      figure="EmptyNodeFigure"
+      elementIcon="false"
+      accessor="//@figures.0/@descriptors.5/@accessors.1"/>
+  <labels
+      name="EmptyNodeLabelFigure"
+      figure="EmptyNodeFigure"
+      elementIcon="false"
+      accessor="//@figures.0/@descriptors.5/@accessors.0"/>
 </gmfgraph:Canvas>

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfmap
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfmap	Sun Jul  1 15:29:51 2012	(r25114)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfmap	Mon Jul  2 02:14:10 2012	(r25115)
@@ -80,6 +80,20 @@
         <ownedChild>
           <domainMetaElement
               href="ComBE.ecore#//EmptyNode"/>
+          <labelMappings
+              xsi:type="gmfmap:FeatureLabelMapping">
+            <diagramLabel
+                href="ComBE.gmfgraph#EmptyNodeLabelFigure"/>
+            <features
+                href="ComBE.ecore#//Node/label"/>
+          </labelMappings>
+          <labelMappings
+              xsi:type="gmfmap:FeatureLabelMapping">
+            <diagramLabel
+                href="ComBE.gmfgraph#EmptyNodeOperatorFigure"/>
+            <features
+                href="ComBE.ecore#//Node/operator"/>
+          </labelMappings>
           <tool
               xsi:type="gmftool:CreationTool"
               href="ComBE.gmftool#//@palette/@tools.0/@tools.3"/>
@@ -169,6 +183,20 @@
         <ownedChild>
           <domainMetaElement
               href="ComBE.ecore#//EmptyNode"/>
+          <labelMappings
+              xsi:type="gmfmap:FeatureLabelMapping">
+            <diagramLabel
+                href="ComBE.gmfgraph#EmptyNodeLabelFigure"/>
+            <features
+                href="ComBE.ecore#//Node/label"/>
+          </labelMappings>
+          <labelMappings
+              xsi:type="gmfmap:FeatureLabelMapping">
+            <diagramLabel
+                href="ComBE.gmfgraph#EmptyNodeOperatorFigure"/>
+            <features
+                href="ComBE.ecore#//Node/operator"/>
+          </labelMappings>
           <tool
               xsi:type="gmftool:CreationTool"
               href="ComBE.gmftool#//@palette/@tools.0/@tools.3"/>
@@ -258,6 +286,20 @@
         <ownedChild>
           <domainMetaElement
               href="ComBE.ecore#//EmptyNode"/>
+          <labelMappings
+              xsi:type="gmfmap:FeatureLabelMapping">
+            <diagramLabel
+                href="ComBE.gmfgraph#EmptyNodeLabelFigure"/>
+            <features
+                href="ComBE.ecore#//Node/label"/>
+          </labelMappings>
+          <labelMappings
+              xsi:type="gmfmap:FeatureLabelMapping">
+            <diagramLabel
+                href="ComBE.gmfgraph#EmptyNodeOperatorFigure"/>
+            <features
+                href="ComBE.ecore#//Node/operator"/>
+          </labelMappings>
           <tool
               xsi:type="gmftool:CreationTool"
               href="ComBE.gmftool#//@palette/@tools.0/@tools.3"/>

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.trace
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.trace	Sun Jul  1 15:29:51 2012	(r25114)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.trace	Mon Jul  2 02:14:10 2012	(r25115)
@@ -47,7 +47,14 @@
   </childNodeTraces>
   <childNodeTraces
       visualID="3002"
-      queryText="(let _eClass_:ecore::EClass = modelFacet.metaClass.ecoreClass in _eClass_.ePackage.nsURI = 'ComBE' and _eClass_.name = 'EmptyNode') and (let _containmentMF_:ecore::EStructuralFeature = modelFacet.containmentMetaFeature.ecoreFeature in (let _eClass_:ecore::EClass = _containmentMF_.eContainingClass in _eClass_.ePackage.nsURI = 'ComBE' and _eClass_.name = 'BehaviorTree') and _containmentMF_.name = 'nodes')"/>
+      queryText="(let _eClass_:ecore::EClass = modelFacet.metaClass.ecoreClass in _eClass_.ePackage.nsURI = 'ComBE' and _eClass_.name = 'EmptyNode') and (let _containmentMF_:ecore::EStructuralFeature = modelFacet.containmentMetaFeature.ecoreFeature in (let _eClass_:ecore::EClass = _containmentMF_.eContainingClass in _eClass_.ePackage.nsURI = 'ComBE' and _eClass_.name = 'BehaviorTree') and _containmentMF_.name = 'nodes')">
+    <nodeLabelTraces
+        visualID="5021"
+        queryText="true"/>
+    <nodeLabelTraces
+        visualID="5022"
+        queryText="true"/>
+  </childNodeTraces>
   <childNodeTraces
       visualID="3003"
       queryText="(let _eClass_:ecore::EClass = modelFacet.metaClass.ecoreClass in _eClass_.ePackage.nsURI = 'ComBE' and _eClass_.name = 'StandardNode') and (let _containmentMF_:ecore::EStructuralFeature = modelFacet.containmentMetaFeature.ecoreFeature in (let _eClass_:ecore::EClass = _containmentMF_.eContainingClass in _eClass_.ePackage.nsURI = 'ComBE' and _eClass_.name = 'BehaviorTree') and _containmentMF_.name = 'nodes')">
@@ -72,7 +79,14 @@
   </childNodeTraces>
   <childNodeTraces
       visualID="3004"
-      queryText="(let _eClass_:ecore::EClass = modelFacet.metaClass.ecoreClass in _eClass_.ePackage.nsURI = 'ComBE' and _eClass_.name = 'EmptyNode') and (let _containmentMF_:ecore::EStructuralFeature = modelFacet.containmentMetaFeature.ecoreFeature in (let _eClass_:ecore::EClass = _containmentMF_.eContainingClass in _eClass_.ePackage.nsURI = 'ComBE' and _eClass_.name = 'BehaviorTree') and _containmentMF_.name = 'nodes')"/>
+      queryText="(let _eClass_:ecore::EClass = modelFacet.metaClass.ecoreClass in _eClass_.ePackage.nsURI = 'ComBE' and _eClass_.name = 'EmptyNode') and (let _containmentMF_:ecore::EStructuralFeature = modelFacet.containmentMetaFeature.ecoreFeature in (let _eClass_:ecore::EClass = _containmentMF_.eContainingClass in _eClass_.ePackage.nsURI = 'ComBE' and _eClass_.name = 'BehaviorTree') and _containmentMF_.name = 'nodes')">
+    <nodeLabelTraces
+        visualID="5023"
+        queryText="true"/>
+    <nodeLabelTraces
+        visualID="5024"
+        queryText="true"/>
+  </childNodeTraces>
   <childNodeTraces
       visualID="3005"
       queryText="(let _eClass_:ecore::EClass = modelFacet.metaClass.ecoreClass in _eClass_.ePackage.nsURI = 'ComBE' and _eClass_.name = 'StandardNode') and (let _containmentMF_:ecore::EStructuralFeature = modelFacet.containmentMetaFeature.ecoreFeature in (let _eClass_:ecore::EClass = _containmentMF_.eContainingClass in _eClass_.ePackage.nsURI = 'ComBE' and _eClass_.name = 'BehaviorTree') and _containmentMF_.name = 'nodes')">
@@ -97,7 +111,14 @@
   </childNodeTraces>
   <childNodeTraces
       visualID="3006"
-      queryText="(let _eClass_:ecore::EClass = modelFacet.metaClass.ecoreClass in _eClass_.ePackage.nsURI = 'ComBE' and _eClass_.name = 'EmptyNode') and (let _containmentMF_:ecore::EStructuralFeature = modelFacet.containmentMetaFeature.ecoreFeature in (let _eClass_:ecore::EClass = _containmentMF_.eContainingClass in _eClass_.ePackage.nsURI = 'ComBE' and _eClass_.name = 'BehaviorTree') and _containmentMF_.name = 'nodes')"/>
+      queryText="(let _eClass_:ecore::EClass = modelFacet.metaClass.ecoreClass in _eClass_.ePackage.nsURI = 'ComBE' and _eClass_.name = 'EmptyNode') and (let _containmentMF_:ecore::EStructuralFeature = modelFacet.containmentMetaFeature.ecoreFeature in (let _eClass_:ecore::EClass = _containmentMF_.eContainingClass in _eClass_.ePackage.nsURI = 'ComBE' and _eClass_.name = 'BehaviorTree') and _containmentMF_.name = 'nodes')">
+    <nodeLabelTraces
+        visualID="5019"
+        queryText="true"/>
+    <nodeLabelTraces
+        visualID="5020"
+        queryText="true"/>
+  </childNodeTraces>
   <linkTraces
       visualID="4001"
       queryText="modelFacet.oclIsKindOf(gmfgen::FeatureLinkModelFacet) and (let _feature_:ecore::EStructuralFeature = modelFacet.oclAsType(gmfgen::FeatureLinkModelFacet).metaFeature.ecoreFeature in (let _eClass_:ecore::EClass = _feature_.eContainingClass in _eClass_.ePackage.nsURI = 'ComBE' and _eClass_.name = 'AlternativeBranch') and _feature_.name = 'children')"/>

From oskarvanrest at gmail.com  Mon Jul  2 05:24:30 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 02 Jul 2012 03:24:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25116 -
	experimental/graphical-editor/EntityLang/EntityLang/syntax
Message-ID: <20120702032430.70777108C00C@mx3.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul  2 03:24:30 2012
New Revision: 25116
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25116&sc=1

Log:
Ecore with StrategoTerm.index annotations

Modified:
   experimental/graphical-editor/EntityLang/EntityLang/syntax/EntityLang.ecore

Modified: experimental/graphical-editor/EntityLang/EntityLang/syntax/EntityLang.ecore
==============================================================================
--- experimental/graphical-editor/EntityLang/EntityLang/syntax/EntityLang.ecore	Mon Jul  2 02:14:10 2012	(r25115)
+++ experimental/graphical-editor/EntityLang/EntityLang/syntax/EntityLang.ecore	Mon Jul  2 03:24:30 2012	(r25116)
@@ -4,34 +4,47 @@
     xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="EntityLang"
     nsURI="EntityLang" nsPrefix="EntityLang">
   <eClassifiers xsi:type="ecore:EClass" name="Module">
+    <eAnnotations source="StrategoTerm.index">
+      <details key="0" value="id"/>
+      <details key="1" value="types"/>
+    </eAnnotations>
     <eAnnotations source="gmf.diagram"/>
     <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
         iD="true"/>
     <eStructuralFeatures xsi:type="ecore:EReference" name="types" upperBound="-1"
         eType="#//Type" containment="true"/>
   </eClassifiers>
-  <eClassifiers xsi:type="ecore:EClass" name="Entity" eSuperTypes="#//Type">
-    <eAnnotations source="gmf.node">
+  <eClassifiers xsi:type="ecore:EClass" name="Property">
+    <eAnnotations source="StrategoTerm.index">
+      <details key="0" value="id"/>
+      <details key="1" value="type"/>
+    </eAnnotations>
+    <eAnnotations source="gmf.link">
       <details key="label" value="id"/>
+      <details key="target" value="type"/>
     </eAnnotations>
     <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
         iD="true"/>
-    <eStructuralFeatures xsi:type="ecore:EReference" name="properties" upperBound="-1"
-        eType="#//Property" containment="true">
-      <eAnnotations source="gmf.compartment"/>
-    </eStructuralFeatures>
+    <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" eType="#//Type"/>
   </eClassifiers>
-  <eClassifiers xsi:type="ecore:EClass" name="Primitive" eSuperTypes="#//Type">
+  <eClassifiers xsi:type="ecore:EClass" name="Type" abstract="true">
     <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
         iD="true"/>
   </eClassifiers>
-  <eClassifiers xsi:type="ecore:EClass" name="Property">
+  <eClassifiers xsi:type="ecore:EClass" name="Entity" eSuperTypes="#//Type">
+    <eAnnotations source="StrategoTerm.index">
+      <details key="0" value="id"/>
+      <details key="1" value="properties"/>
+    </eAnnotations>
     <eAnnotations source="gmf.node">
       <details key="label" value="id"/>
     </eAnnotations>
-    <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
-        iD="true"/>
-    <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" eType="#//Type"/>
+    <eStructuralFeatures xsi:type="ecore:EReference" name="properties" upperBound="-1"
+        eType="#//Property" containment="true"/>
+  </eClassifiers>
+  <eClassifiers xsi:type="ecore:EClass" name="Primitive" eSuperTypes="#//Type">
+    <eAnnotations source="StrategoTerm.index">
+      <details key="0" value="id"/>
+    </eAnnotations>
   </eClassifiers>
-  <eClassifiers xsi:type="ecore:EClass" name="Type"/>
 </ecore:EPackage>

From oskarvanrest at gmail.com  Mon Jul  2 07:34:32 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 02 Jul 2012 05:34:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25117 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit
Message-ID: <20120702053432.BE160CC02B@mx4.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul  2 05:34:32 2012
New Revision: 25117
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25117&sc=1

Log:
Initial import.

Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/

From oskarvanrest at gmail.com  Mon Jul  2 07:43:26 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 02 Jul 2012 05:43:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25118 - in
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src:
	. ComBE ComBE/provider
Message-ID: <20120702054326.91A7F7F801B@mx1.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul  2 05:43:26 2012
New Revision: 25118
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25118&sc=1

Log:
filter the set of Behavior a user can select in the properties view of a StandardNode. Only Behavior that is contained within the node's current Component will show up.

Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/StandardNodeItemProvider.java

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/StandardNodeItemProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/StandardNodeItemProvider.java	Mon Jul  2 05:43:26 2012	(r25118)
@@ -0,0 +1,55 @@
+package ComBE.provider;
+
+import java.util.Collection;
+import java.util.Collections;
+
+import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.common.util.BasicEList;
+import org.eclipse.emf.common.util.EList;
+import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
+import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
+import org.eclipse.emf.edit.provider.IItemLabelProvider;
+import org.eclipse.emf.edit.provider.IItemPropertySource;
+import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
+import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
+import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
+
+import ComBE.Behavior;
+import ComBE.BehaviorSeq;
+import ComBE.ComBEPackage;
+import ComBE.StandardNode;
+
+/**
+ * This is the item provider adapter for a {@link ComBE.StandardNode} object.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class StandardNodeItemProvider extends NodeItemProvider implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {
+
+	/**
+	 * @generated NOT: filter the set of Behavior a user can select in the properties view of a StandardNode. Only Behavior that is contained within the node's current Component will show up.
+	 */
+	protected void addBehaviorPropertyDescriptor(Object object) {
+		itemPropertyDescriptors.add(new ItemPropertyDescriptor(((ComposeableAdapterFactory) adapterFactory).getRootAdapterFactory(), getResourceLocator(), getString("_UI_StandardNode_behavior_feature"), getString("_UI_PropertyDescriptor_description", "_UI_StandardNode_behavior_feature", "_UI_StandardNode_type"), ComBEPackage.Literals.STANDARD_NODE__BEHAVIOR, true, false, true, null, null, null) {
+			@Override
+			public Collection<?> getChoiceOfValues(Object object) {
+				StandardNode node = (StandardNode) object;
+				
+				if (node.getComponent() == null) {
+					return Collections.emptyList();
+				}
+				else {
+					EList<BehaviorSeq> behaviorSeqs = node.getComponent().getBehaviorseqs();
+					EList<Behavior> result = new BasicEList<Behavior>();
+					
+					for (BehaviorSeq behaviorSeq : behaviorSeqs) {
+						result.addAll(behaviorSeq.getBehavior());
+					}
+					
+					return result;
+				}
+			}
+		});
+	}
+}

From oskarvanrest at gmail.com  Mon Jul  2 08:08:16 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 02 Jul 2012 06:08:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25119 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/customCode
Message-ID: <20120702060816.EF651CC048@mx4.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul  2 06:08:16 2012
New Revision: 25119
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25119&sc=1

Log:
Set the right colors and Behavior symbols (according to TextBE).

Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/customCode/CustomPainting.java

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/customCode/CustomPainting.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/customCode/CustomPainting.java	Mon Jul  2 05:43:26 2012	(r25118)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/customCode/CustomPainting.java	Mon Jul  2 06:08:16 2012	(r25119)
@@ -1,6 +1,5 @@
 package ComBE.diagram.customCode;
 
-import org.eclipse.draw2d.ColorConstants;
 import org.eclipse.draw2d.Figure;
 import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
 import org.eclipse.swt.graphics.Color;
@@ -31,47 +30,47 @@
 		
 		switch (behaviorSeq.getBehaviortype().getValue()) {
 		case BehaviorType.ASSERTION_VALUE:
-			prefix = "-";
-			suffix = "-";
+			prefix = "!";
+			suffix = "!";
 			break;
 		case BehaviorType.EI_EVENT_VALUE:
-			prefix = "--";
-			suffix = "--";
+			prefix = ">>";
+			suffix = "<<";
 			break;
 		case BehaviorType.EO_EVENT_VALUE:
-			prefix = "+";
-			suffix = "+";
+			prefix = "<<";
+			suffix = ">>";
 			break;
 		case BehaviorType.EVENT_VALUE:
-			prefix = "++";
-			suffix = "++";
+			prefix = "??";
+			suffix = "??";
 			break;
 		case BehaviorType.GUARD_VALUE:
-			prefix = "<";
-			suffix = ">";
+			prefix = "???";
+			suffix = "???";
 			break;
 		case BehaviorType.II_EVENT_VALUE:
-			prefix = "<<";
-			suffix = ">>";
-			break;
-		case BehaviorType.IO_EVENT_VALUE:
 			prefix = ">";
 			suffix = "<";
 			break;
+		case BehaviorType.IO_EVENT_VALUE:
+			prefix = "<";
+			suffix = ">";
+			break;
 		case BehaviorType.SELECTION_VALUE:
-			prefix = ">>";
-			suffix = "<<";
+			prefix = "?";
+			suffix = "?";
 			break;
 		case BehaviorType.STATE_REALISATION_VALUE:
-			prefix = "^";
-			suffix = "^";
+			prefix = "[";
+			suffix = "]";
 			break;
 		default:
 			break;
 		}
 		
 		if (! (label.getText().startsWith(prefix) && label.getText().endsWith(suffix))) {
-			label.setText(prefix + " " + label.getText() + " " + suffix);
+			label.setText(prefix + "  " + label.getText() + "  " + suffix);
 		}
 	}
 		
@@ -85,22 +84,22 @@
 		
 		switch (node.getTracibilitystatus().getValue()) {
 		case TracibilityStatus.DELETED_VALUE:
-			color = ColorConstants.blue;
+			color = new Color(null, 221, 221, 221);
 			break;
 		case TracibilityStatus.IMPLIED_VALUE:
-			color = ColorConstants.yellow;
+			color = new Color(null, 251, 245, 173);
 			break;
 		case TracibilityStatus.MISSING_VALUE:
-			color = ColorConstants.red;
+			color = new Color(null, 247, 168, 170);
 			break;
 		case TracibilityStatus.REFINEMENT_VALUE:
-			color = ColorConstants.orange;
+			color = new Color(null, 255, 255, 255);
 			break;
 		case TracibilityStatus.UPDATED_VALUE:
-			color = ColorConstants.cyan;
+			color = new Color(null, 69, 179, 211);
 			break;
 		default:
-			color = ColorConstants.green;
+			color = new Color(null, 179, 211, 69);
 			break;
 		}
 		

From oskarvanrest at gmail.com  Mon Jul  2 08:34:18 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 02 Jul 2012 06:34:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25120 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model
Message-ID: <20120702063418.676B82B8010@mx2.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul  2 06:34:17 2012
New Revision: 25120
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25120&sc=1

Log:
Fixed EmptyNode color + font size

Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen	Mon Jul  2 06:08:16 2012	(r25119)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen	Mon Jul  2 06:34:17 2012	(r25120)
@@ -37,7 +37,7 @@
       <viewmap
           xsi:type="gmfgen:InnerClassViewmap"
           className="NodeFigure"
-          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeRequirementLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeTracibilityStatusLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeComponentLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeBehaviorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeOperatorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;priv
 ate org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeLabelLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(false);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.lightGreen);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private v
 oid createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigur rder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeftLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintLeftLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalIndent = 0;&#xA;constraintLeftLeft1.horizontalSpan = 1;&#xA;constraintLeftLeft1.verticalSpan = 1;&#xA;constraintLeftLeft1.grabExcessHorizontalSpace = true;&#xA;constraintLeftLeft1.grabExcessVerticalSpace = true;&#xA;left0.add(leftLeft1, constraintLeftLeft1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutLeftLeft1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;leftLeft1.setLayoutManager(layoutLeftLeft1);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure requirementRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;requirementRectangle2.setF
 ill(false);&#xA;requirementRectangle2.setOutline(false);&#xA;requirementRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(requirementRectan GridData.CENTER;&#xA;constraintFFigureNodeRequirementLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeRequirementLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessVerticalSpace = true;&#xA;requirementRectangle2.add(fFigureNodeRequirementLabelFigure, constraintFFigureNodeRequirementLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure tracibilityStatusRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;tracibilityStatusRectangle2.setFill(false);&#xA;tracibilityStatusRectangle2.setOutline(false);&#xA;tracibilityStatusRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(tracibilityStatusRectangle2, org.eclipse.draw2d.BorderLayout.BOTTOM);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTracibilityStatusRectangle2 = new org.eclipse.draw2d.GridLayout();&#
 xA;&#x9;layoutTracibilityStatusRectangle2.numColumns = 1;&#xA;&#x9;layoutTracibilityStatusRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;tracibilityStatusRectangle2.setLayoutManager(layoutTracibilityStatusRec A;constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessVerticalSpace = true;&#xA;tracibilityStatusRectangle2.add(fFigureNodeTracibilityStatusLabelFigure, constraintFFigureNodeTracibilityStatusLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure line0 = new org.eclipse.draw2d.RectangleFigure();&#xA;line0.setOutline(false);&#xA;line0.setLineWidth(0);&#xA;&#x9;line0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLine0 = new org.eclipse.draw2d.GridData();&#xA;constraintLine0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalIndent = 0;&#xA;constraintLine0.horizontalSpan = 1;&#xA;constraintLine0.verticalSpan = 1;&#xA;constraintLine0.grabExcessHorizontalSpace = false;&#xA;cons
 traintLine0.grabExcessVerticalSpace = false;&#xA;constraintLine0.widthHint = 1;&#xA;constraintLine0.heightHint = 60;&#xA;this.add(line0, constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOut &#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x9;layoutRight0.marginWidth = 0;&#xA;&#x9;layoutRight0.marginHeight = 0;&#xA;&#x9;right0.setLayoutManager(layoutRight0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightLeft1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightLeft1.setFill(false);&#xA;rightLeft1.setOutline(false);&#xA;rightLeft1.setLineWidth(0);&#xA;&#xA;rightLeft1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightL
 eft1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalIndent = 0;&#xA;constraintRightLeft1.horizontalSpan = 1;&#xA;constraintRightLeft1.verticalSpan = 1;&#xA;constraintRightLeft1.grabExcessHorizontalSpace = true;&#xA;constraintRightLeft1.grabExcessVerticalSpace = true;&#xA;right0.add(rightLeft1, constraintRi ectangle2.numColumns = 1;&#xA;&#x9;layoutComponentRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;componentRectangle2.setLayoutManager(layoutComponentRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeComponentLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeComponentLabelFigure.setText(&quot;&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeComponentLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeComponentLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeComponentLabelFigur
 e.grabExcessVerticalSpace = true;&#xA;componentRectangle2.add(fFigureNodeComponentLabelFigure, constraintFFigureNodeComponentLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure behaviorRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;behaviorRectangle2.setFill(false);&#xA;behaviorRectangle2.setOutline(false);&#xA;behaviorRectangle2.setLineWidth(0);&#xA;&#xA;rightLeft1.add(behaviorRecta intFFigureNodeBehaviorLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessVerticalSpace = true;&#xA;behaviorRectangle2.add(fFigureNodeBehaviorLabelFigure, constraintFFigureNodeBehaviorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new o
 rg.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.hori 2d.RectangleFigure();&#xA;operatorRectangle2.setFill(false);&#xA;operatorRectangle2.setOutline(false);&#xA;operatorRectangle2.setLineWidth(0);&#xA;&#xA;rightRight1.add(operatorRectangle2, org.eclipse.draw2d.BorderLayout.TOP);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutOperatorRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutOperatorRectangle2.numColumns = 1;&#xA;&#x9;layoutOperatorRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutOperatorRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.marginWidth = 0;&#xA;&#x9;layoutOperatorRectangle2.marginHeight = 0;&#xA;&#x9;operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeOperatorLabelFigu
 re = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeOperatorLabelFigure.gra raw2d.BorderLayout.BOTTOM);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutLabelRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutLabelRectangle2.numColumns = 1;&#xA;&#x9;layoutLabelRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutLabelRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.marginWidth = 0;&#xA;&#x9;layoutLabelRectangle2.marginHeight = 0;&#xA;&#x9;labelRectangle2.setLayoutManager(layoutLabelRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeLabelLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENT
 ER;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureNodeLabelLabelFigure, constraintFFigureNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLin mentLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeTracibilityStatusLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeTracibilityStatusLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeComponentLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeComponentLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeBehaviorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeBehaviorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeOperatorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeOperatorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;
 &#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeLabelLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeLabelLabelFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 6, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeRequirementLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeTracibilityStatusLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeComponentLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeBehaviorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeOperatorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;priv
 ate org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeLabelLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(false);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA
 ;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw A;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeftLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintLeftLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalIndent = 0;&#xA;constraintLeftLeft1.horizontalSpan = 1;&#xA;constraintLeftLeft1.verticalSpan = 1;&#xA;constraintLeftLeft1.grabExcessHorizontalSpace = true;&#xA;constraintLeftLeft1.grabExcessVerticalSpace = true;&#xA;left0.add(leftLeft1, constraintLeftLeft1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutLeftLeft1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;leftLeft1.setLayoutManager(layoutLeftLeft1);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure requirementRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;requirementRectangle2.setFill(false);&#xA;requirementRec
 tangle2.setOutline(false);&#xA;requirementRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(requirementRectangle2, org.eclipse.draw2d.Borde tFFigureNodeRequirementLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeRequirementLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessVerticalSpace = true;&#xA;requirementRectangle2.add(fFigureNodeRequirementLabelFigure, constraintFFigureNodeRequirementLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure tracibilityStatusRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;tracibilityStatusRectangle2.setFill(false);&#xA;tracibilityStatusRectangle2.setOutline(false);&#xA;tracibilityStatusRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(tracibilityStatusRectangle2, org.eclipse.draw2d.BorderLayout.BOTTOM);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTracibilityStatusRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutTracibilityStatu
 sRectangle2.numColumns = 1;&#xA;&#x9;layoutTracibilityStatusRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;tracibilityStatusRectangle2.setLayoutManager(layoutTracibilityStatusRectangle2);&#xA;&#xA;&#xA;&#xA;f lityStatusLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessVerticalSpace = true;&#xA;tracibilityStatusRectangle2.add(fFigureNodeTracibilityStatusLabelFigure, constraintFFigureNodeTracibilityStatusLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure line0 = new org.eclipse.draw2d.RectangleFigure();&#xA;line0.setOutline(false);&#xA;line0.setLineWidth(0);&#xA;&#x9;line0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLine0 = new org.eclipse.draw2d.GridData();&#xA;constraintLine0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalIndent = 0;&#xA;constraintLine0.horizontalSpan = 1;&#xA;constraintLine0.verticalSpan = 1;&#xA;constraintLine0.grabExcessHorizontalSpace = false;&#xA;constraintLine0.grabExcessVertical
 Space = false;&#xA;constraintLine0.widthHint = 1;&#xA;constraintLine0.heightHint = 60;&#xA;this.add(line0, constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLin ridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x9;layoutRight0.marginWidth = 0;&#xA;&#x9;layoutRight0.marginHeight = 0;&#xA;&#x9;right0.setLayoutManager(layoutRight0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightLeft1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightLeft1.setFill(false);&#xA;rightLeft1.setOutline(false);&#xA;rightLeft1.setLineWidth(0);&#xA;&#xA;rightLeft1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalAlignment = org
 .eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalIndent = 0;&#xA;constraintRightLeft1.horizontalSpan = 1;&#xA;constraintRightLeft1.verticalSpan = 1;&#xA;constraintRightLeft1.grabExcessHorizontalSpace = true;&#xA;constraintRightLeft1.grabExcessVerticalSpace = true;&#xA;right0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#x9; &#x9;layoutComponentRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;componentRectangle2.setLayoutManager(layoutComponentRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeComponentLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeComponentLabelFigure.setText(&quot;&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeComponentLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeComponentLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessVerticalSpace = tr
 ue;&#xA;componentRectangle2.add(fFigureNodeComponentLabelFigure, constraintFFigureNodeComponentLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure behaviorRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;behaviorRectangle2.setFill(false);&#xA;behaviorRectangle2.setOutline(false);&#xA;behaviorRectangle2.setLineWidth(0);&#xA;&#xA;rightLeft1.add(behaviorRectangle2, org.eclipse.draw2d.Bord ure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessVerticalSpace = true;&#xA;behaviorRectangle2.add(fFigureNodeBehaviorLabelFigure, constraintFFigureNodeBehaviorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder
 (getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraint atorRectangle2.setFill(false);&#xA;operatorRectangle2.setOutline(false);&#xA;operatorRectangle2.setLineWidth(0);&#xA;&#xA;rightRight1.add(operatorRectangle2, org.eclipse.draw2d.BorderLayout.TOP);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutOperatorRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutOperatorRectangle2.numColumns = 1;&#xA;&#x9;layoutOperatorRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutOperatorRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.marginWidth = 0;&#xA;&#x9;layoutOperatorRectangle2.marginHeight = 0;&#xA;&#x9;operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeOperatorLabelFigure = new org.eclipse.draw2d.Gr
 idData();&#xA;constraintFFigureNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&# A;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutLabelRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutLabelRectangle2.numColumns = 1;&#xA;&#x9;layoutLabelRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutLabelRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.marginWidth = 0;&#xA;&#x9;layoutLabelRectangle2.marginHeight = 0;&#xA;&#x9;labelRectangle2.setLayoutManager(layoutLabelRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeLabelLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeL
 abelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureNodeLabelLabelFigure, constraintFFigureNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.dia A;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeTracibilityStatusLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeTracibilityStatusLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeComponentLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeComponentLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeBehaviorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeBehaviorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeOperatorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeOperatorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.ru
 ntime.draw2d.ui.figures.WrappingLabel getFigureNodeLabelLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeLabelLabelFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 179, 211, 69);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 7, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
         <attributes
             xsi:type="gmfgen:StyleAttributes"
             fixedFont="true"
@@ -174,7 +174,7 @@
       <viewmap
           xsi:type="gmfgen:InnerClassViewmap"
           className="EmptyNodeFigure"
-          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EmptyNodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeLabelLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeOperatorLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EmptyNodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(fals
 e);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.lightGreen);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw2d.RectangleFigure();&#xA;left0.setOutline(false);&#xA;left0.setLineWidth(0);&#xA;left0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(54)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeft0 = new org.eclipse.draw2d.GridData();&#xA;constraintLeft0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalIndent = 0;&#xA;constraint
 Left0.horizontalSpan = 1;&#xA;constraintLeft0.verticalSpan = 1;&#xA;c int = 60;&#xA;this.add(line0, constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLineWidth(0);&#xA;right0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(125)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRight0 = new org.eclipse.draw2d.GridData();&#xA;constraintRight0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalIndent = 0;&#xA;constraintRight0.horizontalSpan = 1;&#xA;constraintRight0.verticalSpan = 1;&#xA;constraintRight0.grabExcessHorizontalSpace = true;&#xA;constraintRight0.grabExcessVerticalSpace = true;&#xA;this.add(right0, constraintRight0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutR
 ight0.numColumns = 2;&#xA;&#x9;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight sVerticalSpace = true;&#xA;right0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraintRightRight1.verticalSpan = 1;&#xA;constraintRightRight1.grabExcessHorizontalSpace = true;&#xA;constraintRightRight1.grabExcessVerticalSpace 
 = true;&#xA;right0.add(rightRight1, constraintRightRight1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutRightRight1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;rightRight1.setLayoutManager(lay A;&#x9;operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureEmptyNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEmptyNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeOperatorLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&#xA;operatorRectangl
 e2.add(fFigureEmptyNodeOperatorLabelFigure, constraintFFigureEmptyNodeOperatorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure labelRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;labelRectangle2.setFill(false);&#xA;labelRectangle2.setOutline ures.WrappingLabel();&#xA;fFigureEmptyNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureEmptyNodeLabelLabelFigure, constraintFFigureEmptyNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private 
 org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.Wra+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EmptyNodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeLabelLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeOperatorLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EmptyNodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(fals
 e);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw2d.RectangleFigure();&#xA;left0.setOutline(false);&#xA;left0.setLineWidth(0);&#xA;left0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(54)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeft0 = new org.eclipse.draw2d.GridData();&#xA;constraintLeft0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalIndent = 0;&#xA;constraintLeft0.horizontalSpan = 1;&#xA;
 constraintLeft0.verticalSpan = 1;&#xA;constraintLeft0.grabExcessHoriz constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLineWidth(0);&#xA;right0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(125)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRight0 = new org.eclipse.draw2d.GridData();&#xA;constraintRight0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalIndent = 0;&#xA;constraintRight0.horizontalSpan = 1;&#xA;constraintRight0.verticalSpan = 1;&#xA;constraintRight0.grabExcessHorizontalSpace = true;&#xA;constraintRight0.grabExcessVerticalSpace = true;&#xA;this.add(right0, constraintRight0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9
 ;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x ht0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraintRightRight1.verticalSpan = 1;&#xA;constraintRightRight1.grabExcessHorizontalSpace = true;&#xA;constraintRightRight1.grabExcessVerticalSpace = true;&#xA;right0.add(rightRi
 ght1, constraintRightRight1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutRightRight1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;rightRight1.setLayoutManager(layoutRightRight1);&#xA;&#xA;&#xA ayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureEmptyNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEmptyNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeOperatorLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&#xA;operatorRectangle2.add(fFigureEmptyNodeOperato
 rLabelFigure, constraintFFigureEmptyNodeOperatorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure labelRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;labelRectangle2.setFill(false);&#xA;labelRectangle2.setOutline(false);&#xA;labelRectangle2.s ureEmptyNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureEmptyNodeLabelLabelFigure, constraintFFigureEmptyNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border crea
 teBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEmptyNodeL t.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 7, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
         <attributes
             xsi:type="gmfgen:StyleAttributes"
             fixedFont="true"
@@ -194,7 +194,8 @@
       <labels
           visualID="5021"
           editPartClassName="EmptyNodeLabel2EditPart"
-          itemSemanticEditPolicyClassName="EmptyNodeLabel2ItemSemanticEditPolicy">
+          itemSemanticEditPolicyClassName="EmptyNodeLabel2ItemSemanticEditPolicy"
+          notationViewFactoryClassName="EmptyNodeLabelViewFactory">
         <diagramRunTimeClass
             href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
         <viewmap
@@ -211,7 +212,8 @@
       <labels
           visualID="5022"
           editPartClassName="EmptyNodeOperator2EditPart"
-          itemSemanticEditPolicyClassName="EmptyNodeOperator2ItemSemanticEditPolicy">
+          itemSemanticEditPolicyClassName="EmptyNodeOperator2ItemSemanticEditPolicy"
+          notationViewFactoryClassName="EmptyNodeOperatorViewFactory">
         <diagramRunTimeClass
             href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
         <viewmap
@@ -243,7 +245,7 @@
       <viewmap
           xsi:type="gmfgen:InnerClassViewmap"
           className="NodeFigure"
-          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeRequirementLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeTracibilityStatusLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeComponentLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeBehaviorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeOperatorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;priv
 ate org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeLabelLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(false);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.lightGreen);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private v
 oid createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigur rder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeftLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintLeftLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalIndent = 0;&#xA;constraintLeftLeft1.horizontalSpan = 1;&#xA;constraintLeftLeft1.verticalSpan = 1;&#xA;constraintLeftLeft1.grabExcessHorizontalSpace = true;&#xA;constraintLeftLeft1.grabExcessVerticalSpace = true;&#xA;left0.add(leftLeft1, constraintLeftLeft1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutLeftLeft1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;leftLeft1.setLayoutManager(layoutLeftLeft1);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure requirementRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;requirementRectangle2.setF
 ill(false);&#xA;requirementRectangle2.setOutline(false);&#xA;requirementRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(requirementRectan GridData.CENTER;&#xA;constraintFFigureNodeRequirementLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeRequirementLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessVerticalSpace = true;&#xA;requirementRectangle2.add(fFigureNodeRequirementLabelFigure, constraintFFigureNodeRequirementLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure tracibilityStatusRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;tracibilityStatusRectangle2.setFill(false);&#xA;tracibilityStatusRectangle2.setOutline(false);&#xA;tracibilityStatusRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(tracibilityStatusRectangle2, org.eclipse.draw2d.BorderLayout.BOTTOM);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTracibilityStatusRectangle2 = new org.eclipse.draw2d.GridLayout();&#
 xA;&#x9;layoutTracibilityStatusRectangle2.numColumns = 1;&#xA;&#x9;layoutTracibilityStatusRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;tracibilityStatusRectangle2.setLayoutManager(layoutTracibilityStatusRec A;constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessVerticalSpace = true;&#xA;tracibilityStatusRectangle2.add(fFigureNodeTracibilityStatusLabelFigure, constraintFFigureNodeTracibilityStatusLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure line0 = new org.eclipse.draw2d.RectangleFigure();&#xA;line0.setOutline(false);&#xA;line0.setLineWidth(0);&#xA;&#x9;line0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLine0 = new org.eclipse.draw2d.GridData();&#xA;constraintLine0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalIndent = 0;&#xA;constraintLine0.horizontalSpan = 1;&#xA;constraintLine0.verticalSpan = 1;&#xA;constraintLine0.grabExcessHorizontalSpace = false;&#xA;cons
 traintLine0.grabExcessVerticalSpace = false;&#xA;constraintLine0.widthHint = 1;&#xA;constraintLine0.heightHint = 60;&#xA;this.add(line0, constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOut &#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x9;layoutRight0.marginWidth = 0;&#xA;&#x9;layoutRight0.marginHeight = 0;&#xA;&#x9;right0.setLayoutManager(layoutRight0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightLeft1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightLeft1.setFill(false);&#xA;rightLeft1.setOutline(false);&#xA;rightLeft1.setLineWidth(0);&#xA;&#xA;rightLeft1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightL
 eft1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalIndent = 0;&#xA;constraintRightLeft1.horizontalSpan = 1;&#xA;constraintRightLeft1.verticalSpan = 1;&#xA;constraintRightLeft1.grabExcessHorizontalSpace = true;&#xA;constraintRightLeft1.grabExcessVerticalSpace = true;&#xA;right0.add(rightLeft1, constraintRi ectangle2.numColumns = 1;&#xA;&#x9;layoutComponentRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;componentRectangle2.setLayoutManager(layoutComponentRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeComponentLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeComponentLabelFigure.setText(&quot;&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeComponentLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeComponentLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeComponentLabelFigur
 e.grabExcessVerticalSpace = true;&#xA;componentRectangle2.add(fFigureNodeComponentLabelFigure, constraintFFigureNodeComponentLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure behaviorRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;behaviorRectangle2.setFill(false);&#xA;behaviorRectangle2.setOutline(false);&#xA;behaviorRectangle2.setLineWidth(0);&#xA;&#xA;rightLeft1.add(behaviorRecta intFFigureNodeBehaviorLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessVerticalSpace = true;&#xA;behaviorRectangle2.add(fFigureNodeBehaviorLabelFigure, constraintFFigureNodeBehaviorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new o
 rg.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.hori 2d.RectangleFigure();&#xA;operatorRectangle2.setFill(false);&#xA;operatorRectangle2.setOutline(false);&#xA;operatorRectangle2.setLineWidth(0);&#xA;&#xA;rightRight1.add(operatorRectangle2, org.eclipse.draw2d.BorderLayout.TOP);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutOperatorRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutOperatorRectangle2.numColumns = 1;&#xA;&#x9;layoutOperatorRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutOperatorRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.marginWidth = 0;&#xA;&#x9;layoutOperatorRectangle2.marginHeight = 0;&#xA;&#x9;operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeOperatorLabelFigu
 re = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeOperatorLabelFigure.gra raw2d.BorderLayout.BOTTOM);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutLabelRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutLabelRectangle2.numColumns = 1;&#xA;&#x9;layoutLabelRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutLabelRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.marginWidth = 0;&#xA;&#x9;layoutLabelRectangle2.marginHeight = 0;&#xA;&#x9;labelRectangle2.setLayoutManager(layoutLabelRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeLabelLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENT
 ER;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureNodeLabelLabelFigure, constraintFFigureNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLin mentLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeTracibilityStatusLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeTracibilityStatusLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeComponentLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeComponentLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeBehaviorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeBehaviorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeOperatorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeOperatorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;
 &#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeLabelLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeLabelLabelFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 6, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeRequirementLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeTracibilityStatusLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeComponentLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeBehaviorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeOperatorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;priv
 ate org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeLabelLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(false);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA
 ;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw A;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeftLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintLeftLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalIndent = 0;&#xA;constraintLeftLeft1.horizontalSpan = 1;&#xA;constraintLeftLeft1.verticalSpan = 1;&#xA;constraintLeftLeft1.grabExcessHorizontalSpace = true;&#xA;constraintLeftLeft1.grabExcessVerticalSpace = true;&#xA;left0.add(leftLeft1, constraintLeftLeft1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutLeftLeft1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;leftLeft1.setLayoutManager(layoutLeftLeft1);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure requirementRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;requirementRectangle2.setFill(false);&#xA;requirementRec
 tangle2.setOutline(false);&#xA;requirementRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(requirementRectangle2, org.eclipse.draw2d.Borde tFFigureNodeRequirementLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeRequirementLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessVerticalSpace = true;&#xA;requirementRectangle2.add(fFigureNodeRequirementLabelFigure, constraintFFigureNodeRequirementLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure tracibilityStatusRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;tracibilityStatusRectangle2.setFill(false);&#xA;tracibilityStatusRectangle2.setOutline(false);&#xA;tracibilityStatusRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(tracibilityStatusRectangle2, org.eclipse.draw2d.BorderLayout.BOTTOM);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTracibilityStatusRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutTracibilityStatu
 sRectangle2.numColumns = 1;&#xA;&#x9;layoutTracibilityStatusRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;tracibilityStatusRectangle2.setLayoutManager(layoutTracibilityStatusRectangle2);&#xA;&#xA;&#xA;&#xA;f lityStatusLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessVerticalSpace = true;&#xA;tracibilityStatusRectangle2.add(fFigureNodeTracibilityStatusLabelFigure, constraintFFigureNodeTracibilityStatusLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure line0 = new org.eclipse.draw2d.RectangleFigure();&#xA;line0.setOutline(false);&#xA;line0.setLineWidth(0);&#xA;&#x9;line0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLine0 = new org.eclipse.draw2d.GridData();&#xA;constraintLine0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalIndent = 0;&#xA;constraintLine0.horizontalSpan = 1;&#xA;constraintLine0.verticalSpan = 1;&#xA;constraintLine0.grabExcessHorizontalSpace = false;&#xA;constraintLine0.grabExcessVertical
 Space = false;&#xA;constraintLine0.widthHint = 1;&#xA;constraintLine0.heightHint = 60;&#xA;this.add(line0, constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLin ridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x9;layoutRight0.marginWidth = 0;&#xA;&#x9;layoutRight0.marginHeight = 0;&#xA;&#x9;right0.setLayoutManager(layoutRight0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightLeft1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightLeft1.setFill(false);&#xA;rightLeft1.setOutline(false);&#xA;rightLeft1.setLineWidth(0);&#xA;&#xA;rightLeft1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalAlignment = org
 .eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalIndent = 0;&#xA;constraintRightLeft1.horizontalSpan = 1;&#xA;constraintRightLeft1.verticalSpan = 1;&#xA;constraintRightLeft1.grabExcessHorizontalSpace = true;&#xA;constraintRightLeft1.grabExcessVerticalSpace = true;&#xA;right0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#x9; &#x9;layoutComponentRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;componentRectangle2.setLayoutManager(layoutComponentRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeComponentLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeComponentLabelFigure.setText(&quot;&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeComponentLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeComponentLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessVerticalSpace = tr
 ue;&#xA;componentRectangle2.add(fFigureNodeComponentLabelFigure, constraintFFigureNodeComponentLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure behaviorRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;behaviorRectangle2.setFill(false);&#xA;behaviorRectangle2.setOutline(false);&#xA;behaviorRectangle2.setLineWidth(0);&#xA;&#xA;rightLeft1.add(behaviorRectangle2, org.eclipse.draw2d.Bord ure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessVerticalSpace = true;&#xA;behaviorRectangle2.add(fFigureNodeBehaviorLabelFigure, constraintFFigureNodeBehaviorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder
 (getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraint atorRectangle2.setFill(false);&#xA;operatorRectangle2.setOutline(false);&#xA;operatorRectangle2.setLineWidth(0);&#xA;&#xA;rightRight1.add(operatorRectangle2, org.eclipse.draw2d.BorderLayout.TOP);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutOperatorRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutOperatorRectangle2.numColumns = 1;&#xA;&#x9;layoutOperatorRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutOperatorRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.marginWidth = 0;&#xA;&#x9;layoutOperatorRectangle2.marginHeight = 0;&#xA;&#x9;operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeOperatorLabelFigure = new org.eclipse.draw2d.Gr
 idData();&#xA;constraintFFigureNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&# A;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutLabelRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutLabelRectangle2.numColumns = 1;&#xA;&#x9;layoutLabelRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutLabelRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.marginWidth = 0;&#xA;&#x9;layoutLabelRectangle2.marginHeight = 0;&#xA;&#x9;labelRectangle2.setLayoutManager(layoutLabelRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeLabelLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeL
 abelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureNodeLabelLabelFigure, constraintFFigureNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.dia A;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeTracibilityStatusLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeTracibilityStatusLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeComponentLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeComponentLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeBehaviorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeBehaviorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeOperatorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeOperatorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.ru
 ntime.draw2d.ui.figures.WrappingLabel getFigureNodeLabelLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeLabelLabelFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 179, 211, 69);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 7, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
         <attributes
             xsi:type="gmfgen:StyleAttributes"
             fixedFont="true"
@@ -380,7 +382,7 @@
       <viewmap
           xsi:type="gmfgen:InnerClassViewmap"
           className="EmptyNodeFigure"
-          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EmptyNodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeLabelLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeOperatorLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EmptyNodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(fals
 e);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.lightGreen);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw2d.RectangleFigure();&#xA;left0.setOutline(false);&#xA;left0.setLineWidth(0);&#xA;left0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(54)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeft0 = new org.eclipse.draw2d.GridData();&#xA;constraintLeft0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalIndent = 0;&#xA;constraint
 Left0.horizontalSpan = 1;&#xA;constraintLeft0.verticalSpan = 1;&#xA;c int = 60;&#xA;this.add(line0, constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLineWidth(0);&#xA;right0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(125)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRight0 = new org.eclipse.draw2d.GridData();&#xA;constraintRight0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalIndent = 0;&#xA;constraintRight0.horizontalSpan = 1;&#xA;constraintRight0.verticalSpan = 1;&#xA;constraintRight0.grabExcessHorizontalSpace = true;&#xA;constraintRight0.grabExcessVerticalSpace = true;&#xA;this.add(right0, constraintRight0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutR
 ight0.numColumns = 2;&#xA;&#x9;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight sVerticalSpace = true;&#xA;right0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraintRightRight1.verticalSpan = 1;&#xA;constraintRightRight1.grabExcessHorizontalSpace = true;&#xA;constraintRightRight1.grabExcessVerticalSpace 
 = true;&#xA;right0.add(rightRight1, constraintRightRight1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutRightRight1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;rightRight1.setLayoutManager(lay A;&#x9;operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureEmptyNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEmptyNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeOperatorLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&#xA;operatorRectangl
 e2.add(fFigureEmptyNodeOperatorLabelFigure, constraintFFigureEmptyNodeOperatorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure labelRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;labelRectangle2.setFill(false);&#xA;labelRectangle2.setOutline ures.WrappingLabel();&#xA;fFigureEmptyNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureEmptyNodeLabelLabelFigure, constraintFFigureEmptyNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private 
 org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.Wra+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EmptyNodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeLabelLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeOperatorLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EmptyNodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(fals
 e);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw2d.RectangleFigure();&#xA;left0.setOutline(false);&#xA;left0.setLineWidth(0);&#xA;left0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(54)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeft0 = new org.eclipse.draw2d.GridData();&#xA;constraintLeft0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalIndent = 0;&#xA;constraintLeft0.horizontalSpan = 1;&#xA;
 constraintLeft0.verticalSpan = 1;&#xA;constraintLeft0.grabExcessHoriz constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLineWidth(0);&#xA;right0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(125)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRight0 = new org.eclipse.draw2d.GridData();&#xA;constraintRight0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalIndent = 0;&#xA;constraintRight0.horizontalSpan = 1;&#xA;constraintRight0.verticalSpan = 1;&#xA;constraintRight0.grabExcessHorizontalSpace = true;&#xA;constraintRight0.grabExcessVerticalSpace = true;&#xA;this.add(right0, constraintRight0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9
 ;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x ht0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraintRightRight1.verticalSpan = 1;&#xA;constraintRightRight1.grabExcessHorizontalSpace = true;&#xA;constraintRightRight1.grabExcessVerticalSpace = true;&#xA;right0.add(rightRi
 ght1, constraintRightRight1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutRightRight1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;rightRight1.setLayoutManager(layoutRightRight1);&#xA;&#xA;&#xA ayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureEmptyNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEmptyNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeOperatorLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&#xA;operatorRectangle2.add(fFigureEmptyNodeOperato
 rLabelFigure, constraintFFigureEmptyNodeOperatorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure labelRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;labelRectangle2.setFill(false);&#xA;labelRectangle2.setOutline(false);&#xA;labelRectangle2.s ureEmptyNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureEmptyNodeLabelLabelFigure, constraintFFigureEmptyNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border crea
 teBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEmptyNodeL t.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 7, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
         <attributes
             xsi:type="gmfgen:StyleAttributes"
             fixedFont="true"
@@ -400,7 +402,8 @@
       <labels
           visualID="5023"
           editPartClassName="EmptyNodeLabel3EditPart"
-          itemSemanticEditPolicyClassName="EmptyNodeLabel3ItemSemanticEditPolicy">
+          itemSemanticEditPolicyClassName="EmptyNodeLabel3ItemSemanticEditPolicy"
+          notationViewFactoryClassName="EmptyNodeLabelViewFactory">
         <diagramRunTimeClass
             href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
         <viewmap
@@ -417,7 +420,8 @@
       <labels
           visualID="5024"
           editPartClassName="EmptyNodeOperator3EditPart"
-          itemSemanticEditPolicyClassName="EmptyNodeOperator3ItemSemanticEditPolicy">
+          itemSemanticEditPolicyClassName="EmptyNodeOperator3ItemSemanticEditPolicy"
+          notationViewFactoryClassName="EmptyNodeOperatorViewFactory">
         <diagramRunTimeClass
             href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
         <viewmap
@@ -449,7 +453,7 @@
       <viewmap
           xsi:type="gmfgen:InnerClassViewmap"
           className="NodeFigure"
-          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeRequirementLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeTracibilityStatusLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeComponentLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeBehaviorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeOperatorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;priv
 ate org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeLabelLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(false);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.lightGreen);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private v
 oid createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigur rder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeftLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintLeftLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalIndent = 0;&#xA;constraintLeftLeft1.horizontalSpan = 1;&#xA;constraintLeftLeft1.verticalSpan = 1;&#xA;constraintLeftLeft1.grabExcessHorizontalSpace = true;&#xA;constraintLeftLeft1.grabExcessVerticalSpace = true;&#xA;left0.add(leftLeft1, constraintLeftLeft1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutLeftLeft1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;leftLeft1.setLayoutManager(layoutLeftLeft1);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure requirementRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;requirementRectangle2.setF
 ill(false);&#xA;requirementRectangle2.setOutline(false);&#xA;requirementRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(requirementRectan GridData.CENTER;&#xA;constraintFFigureNodeRequirementLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeRequirementLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessVerticalSpace = true;&#xA;requirementRectangle2.add(fFigureNodeRequirementLabelFigure, constraintFFigureNodeRequirementLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure tracibilityStatusRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;tracibilityStatusRectangle2.setFill(false);&#xA;tracibilityStatusRectangle2.setOutline(false);&#xA;tracibilityStatusRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(tracibilityStatusRectangle2, org.eclipse.draw2d.BorderLayout.BOTTOM);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTracibilityStatusRectangle2 = new org.eclipse.draw2d.GridLayout();&#
 xA;&#x9;layoutTracibilityStatusRectangle2.numColumns = 1;&#xA;&#x9;layoutTracibilityStatusRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;tracibilityStatusRectangle2.setLayoutManager(layoutTracibilityStatusRec A;constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessVerticalSpace = true;&#xA;tracibilityStatusRectangle2.add(fFigureNodeTracibilityStatusLabelFigure, constraintFFigureNodeTracibilityStatusLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure line0 = new org.eclipse.draw2d.RectangleFigure();&#xA;line0.setOutline(false);&#xA;line0.setLineWidth(0);&#xA;&#x9;line0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLine0 = new org.eclipse.draw2d.GridData();&#xA;constraintLine0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalIndent = 0;&#xA;constraintLine0.horizontalSpan = 1;&#xA;constraintLine0.verticalSpan = 1;&#xA;constraintLine0.grabExcessHorizontalSpace = false;&#xA;cons
 traintLine0.grabExcessVerticalSpace = false;&#xA;constraintLine0.widthHint = 1;&#xA;constraintLine0.heightHint = 60;&#xA;this.add(line0, constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOut &#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x9;layoutRight0.marginWidth = 0;&#xA;&#x9;layoutRight0.marginHeight = 0;&#xA;&#x9;right0.setLayoutManager(layoutRight0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightLeft1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightLeft1.setFill(false);&#xA;rightLeft1.setOutline(false);&#xA;rightLeft1.setLineWidth(0);&#xA;&#xA;rightLeft1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightL
 eft1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalIndent = 0;&#xA;constraintRightLeft1.horizontalSpan = 1;&#xA;constraintRightLeft1.verticalSpan = 1;&#xA;constraintRightLeft1.grabExcessHorizontalSpace = true;&#xA;constraintRightLeft1.grabExcessVerticalSpace = true;&#xA;right0.add(rightLeft1, constraintRi ectangle2.numColumns = 1;&#xA;&#x9;layoutComponentRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;componentRectangle2.setLayoutManager(layoutComponentRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeComponentLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeComponentLabelFigure.setText(&quot;&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeComponentLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeComponentLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeComponentLabelFigur
 e.grabExcessVerticalSpace = true;&#xA;componentRectangle2.add(fFigureNodeComponentLabelFigure, constraintFFigureNodeComponentLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure behaviorRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;behaviorRectangle2.setFill(false);&#xA;behaviorRectangle2.setOutline(false);&#xA;behaviorRectangle2.setLineWidth(0);&#xA;&#xA;rightLeft1.add(behaviorRecta intFFigureNodeBehaviorLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessVerticalSpace = true;&#xA;behaviorRectangle2.add(fFigureNodeBehaviorLabelFigure, constraintFFigureNodeBehaviorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new o
 rg.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.hori 2d.RectangleFigure();&#xA;operatorRectangle2.setFill(false);&#xA;operatorRectangle2.setOutline(false);&#xA;operatorRectangle2.setLineWidth(0);&#xA;&#xA;rightRight1.add(operatorRectangle2, org.eclipse.draw2d.BorderLayout.TOP);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutOperatorRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutOperatorRectangle2.numColumns = 1;&#xA;&#x9;layoutOperatorRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutOperatorRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.marginWidth = 0;&#xA;&#x9;layoutOperatorRectangle2.marginHeight = 0;&#xA;&#x9;operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeOperatorLabelFigu
 re = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeOperatorLabelFigure.gra raw2d.BorderLayout.BOTTOM);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutLabelRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutLabelRectangle2.numColumns = 1;&#xA;&#x9;layoutLabelRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutLabelRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.marginWidth = 0;&#xA;&#x9;layoutLabelRectangle2.marginHeight = 0;&#xA;&#x9;labelRectangle2.setLayoutManager(layoutLabelRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeLabelLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENT
 ER;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureNodeLabelLabelFigure, constraintFFigureNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLin mentLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeTracibilityStatusLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeTracibilityStatusLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeComponentLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeComponentLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeBehaviorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeBehaviorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeOperatorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeOperatorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;
 &#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeLabelLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeLabelLabelFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 6, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeRequirementLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeTracibilityStatusLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeComponentLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeBehaviorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeOperatorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;priv
 ate org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeLabelLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(false);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA
 ;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw A;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeftLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintLeftLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalIndent = 0;&#xA;constraintLeftLeft1.horizontalSpan = 1;&#xA;constraintLeftLeft1.verticalSpan = 1;&#xA;constraintLeftLeft1.grabExcessHorizontalSpace = true;&#xA;constraintLeftLeft1.grabExcessVerticalSpace = true;&#xA;left0.add(leftLeft1, constraintLeftLeft1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutLeftLeft1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;leftLeft1.setLayoutManager(layoutLeftLeft1);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure requirementRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;requirementRectangle2.setFill(false);&#xA;requirementRec
 tangle2.setOutline(false);&#xA;requirementRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(requirementRectangle2, org.eclipse.draw2d.Borde tFFigureNodeRequirementLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeRequirementLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessVerticalSpace = true;&#xA;requirementRectangle2.add(fFigureNodeRequirementLabelFigure, constraintFFigureNodeRequirementLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure tracibilityStatusRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;tracibilityStatusRectangle2.setFill(false);&#xA;tracibilityStatusRectangle2.setOutline(false);&#xA;tracibilityStatusRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(tracibilityStatusRectangle2, org.eclipse.draw2d.BorderLayout.BOTTOM);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTracibilityStatusRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutTracibilityStatu
 sRectangle2.numColumns = 1;&#xA;&#x9;layoutTracibilityStatusRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;tracibilityStatusRectangle2.setLayoutManager(layoutTracibilityStatusRectangle2);&#xA;&#xA;&#xA;&#xA;f lityStatusLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessVerticalSpace = true;&#xA;tracibilityStatusRectangle2.add(fFigureNodeTracibilityStatusLabelFigure, constraintFFigureNodeTracibilityStatusLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure line0 = new org.eclipse.draw2d.RectangleFigure();&#xA;line0.setOutline(false);&#xA;line0.setLineWidth(0);&#xA;&#x9;line0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLine0 = new org.eclipse.draw2d.GridData();&#xA;constraintLine0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalIndent = 0;&#xA;constraintLine0.horizontalSpan = 1;&#xA;constraintLine0.verticalSpan = 1;&#xA;constraintLine0.grabExcessHorizontalSpace = false;&#xA;constraintLine0.grabExcessVertical
 Space = false;&#xA;constraintLine0.widthHint = 1;&#xA;constraintLine0.heightHint = 60;&#xA;this.add(line0, constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLin ridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x9;layoutRight0.marginWidth = 0;&#xA;&#x9;layoutRight0.marginHeight = 0;&#xA;&#x9;right0.setLayoutManager(layoutRight0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightLeft1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightLeft1.setFill(false);&#xA;rightLeft1.setOutline(false);&#xA;rightLeft1.setLineWidth(0);&#xA;&#xA;rightLeft1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalAlignment = org
 .eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalIndent = 0;&#xA;constraintRightLeft1.horizontalSpan = 1;&#xA;constraintRightLeft1.verticalSpan = 1;&#xA;constraintRightLeft1.grabExcessHorizontalSpace = true;&#xA;constraintRightLeft1.grabExcessVerticalSpace = true;&#xA;right0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#x9; &#x9;layoutComponentRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;componentRectangle2.setLayoutManager(layoutComponentRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeComponentLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeComponentLabelFigure.setText(&quot;&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeComponentLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeComponentLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessVerticalSpace = tr
 ue;&#xA;componentRectangle2.add(fFigureNodeComponentLabelFigure, constraintFFigureNodeComponentLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure behaviorRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;behaviorRectangle2.setFill(false);&#xA;behaviorRectangle2.setOutline(false);&#xA;behaviorRectangle2.setLineWidth(0);&#xA;&#xA;rightLeft1.add(behaviorRectangle2, org.eclipse.draw2d.Bord ure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessVerticalSpace = true;&#xA;behaviorRectangle2.add(fFigureNodeBehaviorLabelFigure, constraintFFigureNodeBehaviorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder
 (getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraint atorRectangle2.setFill(false);&#xA;operatorRectangle2.setOutline(false);&#xA;operatorRectangle2.setLineWidth(0);&#xA;&#xA;rightRight1.add(operatorRectangle2, org.eclipse.draw2d.BorderLayout.TOP);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutOperatorRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutOperatorRectangle2.numColumns = 1;&#xA;&#x9;layoutOperatorRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutOperatorRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.marginWidth = 0;&#xA;&#x9;layoutOperatorRectangle2.marginHeight = 0;&#xA;&#x9;operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeOperatorLabelFigure = new org.eclipse.draw2d.Gr
 idData();&#xA;constraintFFigureNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&# A;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutLabelRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutLabelRectangle2.numColumns = 1;&#xA;&#x9;layoutLabelRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutLabelRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.marginWidth = 0;&#xA;&#x9;layoutLabelRectangle2.marginHeight = 0;&#xA;&#x9;labelRectangle2.setLayoutManager(layoutLabelRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeLabelLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeL
 abelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureNodeLabelLabelFigure, constraintFFigureNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.dia A;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeTracibilityStatusLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeTracibilityStatusLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeComponentLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeComponentLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeBehaviorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeBehaviorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeOperatorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeOperatorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.ru
 ntime.draw2d.ui.figures.WrappingLabel getFigureNodeLabelLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeLabelLabelFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 179, 211, 69);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 7, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
         <attributes
             xsi:type="gmfgen:StyleAttributes"
             fixedFont="true"
@@ -586,7 +590,7 @@
       <viewmap
           xsi:type="gmfgen:InnerClassViewmap"
           className="EmptyNodeFigure"
-          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EmptyNodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeLabelLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeOperatorLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EmptyNodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(fals
 e);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.lightGreen);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw2d.RectangleFigure();&#xA;left0.setOutline(false);&#xA;left0.setLineWidth(0);&#xA;left0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(54)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeft0 = new org.eclipse.draw2d.GridData();&#xA;constraintLeft0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalIndent = 0;&#xA;constraint
 Left0.horizontalSpan = 1;&#xA;constraintLeft0.verticalSpan = 1;&#xA;c int = 60;&#xA;this.add(line0, constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLineWidth(0);&#xA;right0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(125)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRight0 = new org.eclipse.draw2d.GridData();&#xA;constraintRight0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalIndent = 0;&#xA;constraintRight0.horizontalSpan = 1;&#xA;constraintRight0.verticalSpan = 1;&#xA;constraintRight0.grabExcessHorizontalSpace = true;&#xA;constraintRight0.grabExcessVerticalSpace = true;&#xA;this.add(right0, constraintRight0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutR
 ight0.numColumns = 2;&#xA;&#x9;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight sVerticalSpace = true;&#xA;right0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraintRightRight1.verticalSpan = 1;&#xA;constraintRightRight1.grabExcessHorizontalSpace = true;&#xA;constraintRightRight1.grabExcessVerticalSpace 
 = true;&#xA;right0.add(rightRight1, constraintRightRight1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutRightRight1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;rightRight1.setLayoutManager(lay A;&#x9;operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureEmptyNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEmptyNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeOperatorLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&#xA;operatorRectangl
 e2.add(fFigureEmptyNodeOperatorLabelFigure, constraintFFigureEmptyNodeOperatorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure labelRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;labelRectangle2.setFill(false);&#xA;labelRectangle2.setOutline ures.WrappingLabel();&#xA;fFigureEmptyNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureEmptyNodeLabelLabelFigure, constraintFFigureEmptyNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private 
 org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.Wra+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EmptyNodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeLabelLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeOperatorLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EmptyNodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(fals
 e);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw2d.RectangleFigure();&#xA;left0.setOutline(false);&#xA;left0.setLineWidth(0);&#xA;left0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(54)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeft0 = new org.eclipse.draw2d.GridData();&#xA;constraintLeft0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalIndent = 0;&#xA;constraintLeft0.horizontalSpan = 1;&#xA;
 constraintLeft0.verticalSpan = 1;&#xA;constraintLeft0.grabExcessHoriz constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLineWidth(0);&#xA;right0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(125)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRight0 = new org.eclipse.draw2d.GridData();&#xA;constraintRight0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalIndent = 0;&#xA;constraintRight0.horizontalSpan = 1;&#xA;constraintRight0.verticalSpan = 1;&#xA;constraintRight0.grabExcessHorizontalSpace = true;&#xA;constraintRight0.grabExcessVerticalSpace = true;&#xA;this.add(right0, constraintRight0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9
 ;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x ht0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraintRightRight1.verticalSpan = 1;&#xA;constraintRightRight1.grabExcessHorizontalSpace = true;&#xA;constraintRightRight1.grabExcessVerticalSpace = true;&#xA;right0.add(rightRi
 ght1, constraintRightRight1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutRightRight1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;rightRight1.setLayoutManager(layoutRightRight1);&#xA;&#xA;&#xA ayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureEmptyNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEmptyNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeOperatorLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&#xA;operatorRectangle2.add(fFigureEmptyNodeOperato
 rLabelFigure, constraintFFigureEmptyNodeOperatorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure labelRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;labelRectangle2.setFill(false);&#xA;labelRectangle2.setOutline(false);&#xA;labelRectangle2.s ureEmptyNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureEmptyNodeLabelLabelFigure, constraintFFigureEmptyNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border crea
 teBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEmptyNodeL t.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 7, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
         <attributes
             xsi:type="gmfgen:StyleAttributes"
             fixedFont="true"

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph	Mon Jul  2 06:08:16 2012	(r25119)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph	Mon Jul  2 06:34:17 2012	(r25120)
@@ -135,12 +135,14 @@
             xsi:type="gmfgraph:ConstantColor"
             value="black"/>
         <backgroundColor
-            xsi:type="gmfgraph:ConstantColor"
-            value="lightGreen"/>
+            xsi:type="gmfgraph:RGBColor"
+            red="179"
+            green="211"
+            blue="69"/>
         <font
             xsi:type="gmfgraph:BasicFont"
             faceName="ComBEFont"
-            height="6"
+            height="7"
             style="BOLD"/>
         <border
             xsi:type="gmfgraph:CustomBorder"
@@ -423,12 +425,14 @@
             xsi:type="gmfgraph:ConstantColor"
             value="black"/>
         <backgroundColor
-            xsi:type="gmfgraph:ConstantColor"
-            value="lightGreen"/>
+            xsi:type="gmfgraph:RGBColor"
+            red="179"
+            green="211"
+            blue="69"/>
         <font
             xsi:type="gmfgraph:BasicFont"
             faceName="ComBEFont"
-            height="6"
+            height="7"
             style="BOLD"/>
         <border
             xsi:type="gmfgraph:CustomBorder"


From andre.s.d.vieira at gmail.com  Mon Jul  2 12:55:52 2012
From: andre.s.d.vieira at gmail.com (Andre Vieira)
Date: Mon, 02 Jul 2012 10:55:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25121 - in
	spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2:
	k_1724crashed y_1759crashed
Message-ID: <20120702105552.39CE47F8035@mx1.tudelft.nl>

Author: AndreVieira
Date: Mon Jul  2 10:55:51 2012
New Revision: 25121
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25121&sc=1

Log:


Added:
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/k_1724crashed/
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/k_1724crashed/AST.aterm
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/k_1724crashed/program.app
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/k_1724crashed/strategyResult.txt
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/y_1759crashed/
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/y_1759crashed/AST.aterm
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/y_1759crashed/program.app
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/y_1759crashed/strategyResult.txt

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/k_1724crashed/AST.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/k_1724crashed/AST.aterm	Mon Jul  2 10:55:51 2012	(r25121)
@@ -0,0 +1,161 @@
+ApplicationDefs(
+  Qualified("Hy0v8_8L__S", "xKL__6V2oT5")
+, [ Action(
+      [ActionModifierIgnoreValidation(), ActionModifierIgnoreValidation(), ActionModifierIgnoreValidation(), ActionModifierIgnoreValidation(), ActionModifierIgnoreValidation(), ActionModifierIgnoreValidation(), ActionModifierIgnoreValidation()]
+    , "Hy0v8_8L__S"
+    , [ Arg("Hy0v8_8L__S", FunctionSort([], SimpleSort("Void")))
+      , Arg("w7yJ8", FunctionSort([], SimpleSort("H_7")))
+      , Arg("KO__mB_p3_m", GenericSort("G5__", [SimpleSort("G5__")]))
+      , Arg("NUr", SimpleSort("H_7"))
+      , Arg("l7C1q8R_b6", SimpleSort("i047"))
+      , Arg("n", RefSort(SimpleSort("l7C1q8R_b6")))
+      , Arg("H_7", SimpleSort("i047"))
+      , Arg("T_F13nOxQ92", RefSort(GenericSort("a7I8", [SimpleSort("I_1t_7")])))
+      , Arg("NUr", FunctionSort([], SimpleSort("Void")))
+      , Arg("G5__", GenericSort("a7I8", [SimpleSort("G5__")]))
+      ]
+    , Block(
+        [ NamedValidateStatement("a7I8", Long("-608531L"), False())
+        , ForStmt(
+            "H_7"
+          , GenericSort("Hy0v8_8L__S", [SimpleSort("o")])
+          , ObjectCreation(FunctionSort([], SimpleSort("Void")), [])
+          , Filter(
+              SmallerThanOrEqual(
+                Call(
+                  OrForExp(
+                    ForExp(
+                      SearchResultsSize(GlobalVar("Hy0v8_8L__S"))
+                    , "G5__"
+                    , RefSort(GenericSort("X2_4_", [SimpleSort("T_F13nOxQ92")]))
+                    , LargerThan(
+                        Eq(
+                          Var("Hy0v8_8L__S")
+                        , FunctionRefCallPartial(FunctionRef("i047", [], SimpleSort("H_7")), [])
+                        )
+                      , CollectionIndex(RenderTemplateFunctionCall(TemplateCallBody("c1g", TemplateWith([]))), SetCreation([]))
+                      )
+                    , FilterNoWhereNoLimit(
+                        OrderDescending(
+                          AndForExp(
+                            ForExpNoFilter(
+                              SetCreation([])
+                            , "J_r_57c0___"
+                            , GenericSort("xKL__6V2oT5", [SimpleSort("i047")])
+                            , GlobalVar("G5__")
+                            )
+                          )
+                        )
+                      )
+                    )
+                  )
+                , "y__I"
+                , []
+                )
+              , ThisCall("a7I8", [])
+              )
+            , OrderDescending(
+                CollectionIndex(
+                  RenderEmailFunctionCall(EmailCall("Hy0v8_8L__S", []))
+                , RenderEmailFunctionCall(EmailCall("T_F13nOxQ92", []))
+                )
+              )
+            , LimitNoLimit(
+                AndForExp(
+                  ForExpNoFilter(
+                    Cast(ValidateTemplateFunctionCall(TemplateCallPropsNoBody("IYG5X1_", [], [])), SimpleSort("w7yJ8"))
+                  , "X2_4_"
+                  , FunctionSort([], SimpleSort("I_1t_7"))
+                  , Suggest(
+                      "rT1SPE_RN45"
+                    , AutoComplete()
+                    , [SuggestTerm(FieldsConstraint(["CXV"]), Var("G5__"))]
+                    )
+                  )
+                )
+              )
+            )
+          , Block([])
+          )
+        , ThrowStatement(
+            [ Not(FunctionRefCall(FunctionRef("o", [], SimpleSort("Void")), []))
+            , EmailFunctionCall(EmailCall("a7I8", []))
+            , TypedListCreation(GenericSort("n", [SimpleSort("y__I")]), [])
+            , LargerThan(
+                ForExp(
+                  ListCreation([])
+                , "y__I"
+                , RefSort(RefSort(RefSort(SimpleSort("Hy0v8_8L__S"))))
+                , LargerThanOrEqual(True(), Var("i047"))
+                , FilterNoWhereNoLimit(
+                    OrderDescending(FunctionRefCallPartial(FunctionRef("P1K", [], SimpleSort("Void")), []))
+                  )
+                )
+              , SetCreation([])
+              )
+            , OrForExp(
+                ForExpNoFilter(
+                  Cast(
+                    TypedSetCreation(RefSort(GenericSort("I_1t_7", [SimpleSort("P1K")])), [])
+                  , FunctionSort([], SimpleSort("KO__mB_p3_m"))
+                  )
+                , "m_H6_d____O"
+                , RefSort(FunctionSort([], SimpleSort("X2_4_")))
+                , Int("-8")
+                )
+              )
+            , RenderTemplateFunctionCall(ValidationErrors("i047"))
+            , Or(
+                ForExpNoFilter(
+                  And(Var("Y5d"), TypedListCreation(SimpleSort("J_r_57c0___"), []))
+                , "Y5d"
+                , FunctionSort([], SimpleSort("i047"))
+                , Call(TypedListCreation(SimpleSort("m_H6_d____O"), []), "Y5d", [])
+                )
+              , ForExp(
+                  Add(GlobalVar("w7yJ8"), ListCreation([]))
+                , "y__I"
+                , FunctionSort([], SimpleSort("T_F13nOxQ92"))
+                , ListCreation([])
+                , FilterNoWhere(
+                    OrderAscending(
+                      SmallerThanOrEqual(
+                        IsA(
+                          RenderEmailFunctionCall(EmailCall("X2_4_", []))
+                        , FunctionSort([], SimpleSort("Void"))
+                        )
+                      , SendEmailFunctionCall(EmailCall("l7C1q8R_b6", []))
+                      )
+                    )
+                  , LimitNoOffset(
+                      Or(
+                        Or(ThisCall("H_7", []), SearcherInit("t1i4G6_", []))
+                      , Div(ObjectCreation(FunctionSort([], SimpleSort("T_F13nOxQ92")), []), False())
+                      )
+                    )
+                  )
+                )
+              )
+            ]
+          )
+        , HqlStatement(
+            DeleteStatement(
+              FromClause(
+                [FromRangeJoin(InCollection(Path(["i_1"]), Alias("P___K22")), [])]
+              )
+            , Some(WhereClause(Sum(HQLFunMonth(Elements(Path(["SO"]))))))
+            )
+          )
+        , ForAllStmt(
+            "o"
+          , GenericSort("o", [SimpleSort("H_7")])
+          , FilterNoWhereNoLimit(OrderAscending(GlobalVar("o")))
+          , Block([])
+          )
+        , Return(ListCreation([]))
+        ]
+      )
+    )
+  ]
+, []
+)
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/k_1724crashed/program.app
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/k_1724crashed/program.app	Mon Jul  2 10:55:51 2012	(r25121)
@@ -0,0 +1,75 @@
+application Hy0v8_8L__S.xKL__6V2oT5
+
+action ignore-validation ignore-validation ignore-validation ignore-validation ignore-validation ignore-validation ignore-validation Hy0v8_8L__S ( Hy0v8_8L__S : function ( ) : Void, w7yJ8 : function ( ) : H_7, KO__mB_p3_m : G5__<G5__>, NUr : H_7, l7C1q8R_b6 : i047, n : Ref<l7C1q8R_b6>, H_7 : i047, T_F13nOxQ92 : Ref<a7I8<I_1t_7>>, NUr : function ( ) : Void, G5__ : a7I8<G5__> )
+{
+  a7I8
+  :
+  validate
+  (
+  -608531L
+  ,
+  false
+  )
+  ;
+  for ( H_7 : Hy0v8_8L__S<o> in function():Void{} where Or[ count from global.Hy0v8_8L__S | G5__ : Ref<X2_4_<T_F13nOxQ92>> in Hy0v8_8L__S == function.i047():H_7(*,) > rendertemplate ( c1g
+                                                                                                                                                                                          with
+                                                                                                                                                                                          {
+                                                                                                                                                                                          } ) [ {} ] order by And [ {} | J_r_57c0___ : xKL__6V2oT5<i047> in global.G5__ ] desc ].y__I() <= a7I8() order by renderemail ( Hy0v8_8L__S ( ) ) [ renderemail ( T_F13nOxQ92 ( ) ) ] desc offset And [ validatetemplate ( IYG5X1_()[] ) as w7yJ8 | X2_4_ : function ( ) : I_1t_7 in rT1SPE_RN45 completions matching CXV : G5__ ] )
+  {
+  }
+  throw
+  !
+  function.o():Void()
+  ,
+  email
+  (
+  a7I8
+  (
+  )
+  )
+  ,
+  List<n<y__I>>()
+  ,
+  [ [] | y__I : Ref<Ref<Ref<Hy0v8_8L__S>>> in true >= i047 order by function.P1K():Void(*,) desc ]
+  >
+  {}
+  ,
+  Or
+  [ Set<Ref<I_1t_7<P1K>>>() as function ( ) : KO__mB_p3_m | m_H6_d____O : Ref<function():X2_4_> in -8 ]
+  ,
+  rendertemplate
+  (
+  validationErrors
+  (
+  i047
+  )
+  )
+  ,
+  [ Y5d && List<J_r_57c0___>() | Y5d : function ( ) : i047 in List<m_H6_d____O>().Y5d() ]
+  ||
+  [ global.w7yJ8 + [] | y__I : function ( ) : T_F13nOxQ92 in [] order by renderemail ( X2_4_ ( ) ) is a function ( ) : Void <= sendemail ( l7C1q8R_b6 ( ) ) asc limit H_7() || search t1i4G6_ || function():T_F13nOxQ92{} / false ]
+  ;
+  delete
+  from
+  in
+  (
+  i_1
+  )
+  P___K22
+  where
+  sum
+  (
+  month
+  (
+  elements
+  (
+  SO
+  )
+  )
+  )
+  ;
+  for ( o : o<H_7> order by global.o asc )
+  {
+  }
+  return [];
+}
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/k_1724crashed/strategyResult.txt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/k_1724crashed/strategyResult.txt	Mon Jul  2 10:55:51 2012	(r25121)
@@ -0,0 +1,160 @@
+
+Analyzing: TestFolder/program.app
+rename: 0.010 s
+
+* : error: Type not defined: H_7
+H_7
+* : error: Type not defined: G5__
+G5__
+* : error: Generic type not defined: G5__<G5__>
+G5__<G5__>
+* : error: Type not defined: H_7
+H_7
+* : error: Type not defined: i047
+i047
+* : error: Type not defined: l7C1q8R_b6
+l7C1q8R_b6
+* : error: Reference argument 'Ref<l7C1q8R_b6>' only allowed in formal parameters of pages, templates, or ajax templates
+n : Ref<l7C1q8R_b6>
+* : error: Type not defined: i047
+i047
+* : error: Type not defined: I_1t_7
+I_1t_7
+* : error: Generic type not defined: a7I8<I_1t_7>
+a7I8<I_1t_7>
+* : error: Reference argument 'Ref<a7I8<I_1t_7>>' only allowed in formal parameters of pages, templates, or ajax templates
+T_F13nOxQ92 : Ref<a7I8<I_1t_7>>
+* : error: Type not defined: G5__
+G5__
+* : error: Generic type not defined: a7I8<G5__>
+a7I8<G5__>
+* : error: Type not defined: o
+o
+* : error: Generic type not defined: Hy0v8_8L__S<o>
+Hy0v8_8L__S<o>
+* : error: Generic type not defined: EntityTypeNamed<T_F13nOxQ92>
+EntityTypeNamed<T_F13nOxQ92>
+* : error: Generic type not defined: X2_4_<EntityTypeNamed<T_F13nOxQ92>>
+X2_4_<EntityTypeNamed<T_F13nOxQ92>>
+* : error: Generic type not defined: EntityTypeNamed<H_7>
+EntityTypeNamed<H_7>
+WebDSL: rewriting failed, trace:
+	editor_analyze1_0_0
+	editor_analyze1_0_0
+	editor_analyze_0_0
+	editor_analyze_work_0_0
+	in_typechecking_phase_1_0
+	dr_scope_1_1
+	editor_check_0_1
+	dr_scope_1_1
+	dr_scope_1_1
+	dbg_time_1_1
+	catch_errors_editor_1_0
+	dr_scope_1_1
+	dr_scope_1_1
+	constraint_error_all_0_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	try_1_0
+	constraint_error_0_0
+	constraint_error_action_0_0
+	pp_type_0_0
+	pp_type_aux_0_0
+	pp_type_0_0
+	pp_type_aux_0_0
+	pp_type_0_0
+	pp_type_aux_0_0
+[ WebDSL | critical ] Internal error: with clause failed unexpectedly in rule 'pp-type'
+           "H_7"{"topdef162_H_71"}Analyzing: TestFolder/program.app
+rename: 0.010 s
+
+* : error: Type not defined: H_7
+H_7
+* : error: Type not defined: G5__
+G5__
+* : error: Generic type not defined: G5__<G5__>
+G5__<G5__>
+* : error: Type not defined: H_7
+H_7
+* : error: Type not defined: i047
+i047
+* : error: Type not defined: l7C1q8R_b6
+l7C1q8R_b6
+* : error: Reference argument 'Ref<l7C1q8R_b6>' only allowed in formal parameters of pages, templates, or ajax templates
+n : Ref<l7C1q8R_b6>
+* : error: Type not defined: i047
+i047
+* : error: Type not defined: I_1t_7
+I_1t_7
+* : error: Generic type not defined: a7I8<I_1t_7>
+a7I8<I_1t_7>
+* : error: Reference argument 'Ref<a7I8<I_1t_7>>' only allowed in formal parameters of pages, templates, or ajax templates
+T_F13nOxQ92 : Ref<a7I8<I_1t_7>>
+* : error: Type not defined: G5__
+G5__
+* : error: Generic type not defined: a7I8<G5__>
+a7I8<G5__>
+* : error: Type not defined: o
+o
+* : error: Generic type not defined: Hy0v8_8L__S<o>
+Hy0v8_8L__S<o>
+* : error: Generic type not defined: EntityTypeNamed<T_F13nOxQ92>
+EntityTypeNamed<T_F13nOxQ92>
+* : error: Generic type not defined: X2_4_<EntityTypeNamed<T_F13nOxQ92>>
+X2_4_<EntityTypeNamed<T_F13nOxQ92>>
+* : error: Generic type not defined: EntityTypeNamed<H_7>
+EntityTypeNamed<H_7>
+WebDSL: rewriting failed, trace:
+	editor_analyze1_0_0
+	editor_analyze1_0_0
+	editor_analyze_0_0
+	editor_analyze_work_0_0
+	in_typechecking_phase_1_0
+	dr_scope_1_1
+	editor_check_0_1
+	dr_scope_1_1
+	dr_scope_1_1
+	dbg_time_1_1
+	catch_errors_editor_1_0
+	dr_scope_1_1
+	dr_scope_1_1
+	constraint_error_all_0_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	try_1_0
+	constraint_error_0_0
+	constraint_error_action_0_0
+	pp_type_0_0
+	pp_type_aux_0_0
+	pp_type_0_0
+	pp_type_aux_0_0
+	pp_type_0_0
+	pp_type_aux_0_0
+[ WebDSL | critical ] Internal error: with clause failed unexpectedly in rule 'pp-type'
+           "H_7"{"topdef162_H_71"}
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/y_1759crashed/AST.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/y_1759crashed/AST.aterm	Mon Jul  2 10:55:51 2012	(r25121)
@@ -0,0 +1,265 @@
+ApplicationDefs(
+  "C_"
+, [ AutoProcedure(
+      "LJ___8"
+    , Arg("LJ___8", SimpleSort("HP_"))
+    , [ ProcedureDisabled(Block([Block([])]))
+      , ProcedureEnabled(Block([Block([])]))
+      , ProcedureProcess(ProcCall("nT_r_VDvdI", GlobalVar("A6f__HQ_5__")))
+      , ProcedureView([])
+      , ProcedureWhen(
+          And(
+            SmallerThan(
+              SendEmailFunctionCall(EmailCall("W479", []))
+            , SmallerThan(
+                FunctionRefCallPartial(FunctionRef("VS87_B", [], SimpleSort("Void")), [])
+              , EmailFunctionCall(EmailCall("VU8T", []))
+              )
+            )
+          , GlobalVar("At2OBq")
+          )
+        )
+      , ProcedureProcess(
+          ProcCall(
+            "o7Jx40b4RHz"
+          , Mod(
+              ListCreation([])
+            , CollectionIndex(
+                Null()
+              , AndForExp(
+                  ForExp(
+                    EmailFunctionCall(EmailCall("y7", []))
+                  , "LF5"
+                  , GenericSort("gi_2", [SimpleSort("W479")])
+                  , IsA(
+                      ValidateTemplateFunctionCall(ThrowTemplate([ListCreation([])]))
+                    , RefSort(SimpleSort("LF5"))
+                    )
+                  , FilterNoWhereNoOrderBy(
+                      LimitNoLimit(
+                        IfExp(
+                          FunctionRefCall(FunctionRef("DU1_", [], SimpleSort("y14")), [])
+                        , ValidateTemplateFunctionCall(TemplateCallNoAssigns("t57X1", [], TemplateWith([])))
+                        , Suggest("O", AutoComplete(), [Similarity(GlobalVar("Rl58_ZR77jq"))])
+                        )
+                      )
+                    )
+                  )
+                )
+              )
+            )
+          )
+        )
+      , ProcedureDo(Block([Block([])]))
+      ]
+    )
+  , ExtendSessionEntity(
+      "S8"
+    , [ Function(
+          "f_TLX_7n"
+        , [ Arg("w3H_", SimpleSort("n5LZ78t_kMF"))
+          , Arg("X_28", FunctionSort([], SimpleSort("dl4RO_5")))
+          , Arg("f2", RefSort(SimpleSort("nT_r_VDvdI")))
+          , Arg("OQVG91_", GenericSort("a2__", [SimpleSort("JsACGVz")]))
+          ]
+        , SimpleSort("qV")
+        , Block([])
+        )
+      , StaticEntityFunction("X503__m8_m6", [], ReturnType(SimpleSort("Void")), Block([]))
+      , SearchMappingEmbedded(
+          [ [ SearchFieldMapping(
+                None()
+              , "U_"
+              , [ Boost("-.4F")
+                , FieldName("U_")
+                , AnalyzerName("x__XC_bY1uW")
+                , EmbeddedDepth("-847")
+                , AnalyzerName("h_")
+                ]
+              )
+            ]
+          , SearchFieldMapping(None(), "S8", [])
+          ]
+        )
+      ]
+    )
+  , FullTextAnalyzer(
+      Some("default_builtin_analyzer")
+    , "F__TCH7"
+    , DualFullTextAnalyzerBodyDef(
+        "index"
+      , FullTextAnalyzerBodyDef([], TokenizerNoArgs("VT0YOlN"), [])
+      , "index"
+      , FullTextAnalyzerBodyDef([], TokenizerNoArgs("Nx5a4_Z8_p3"), [])
+      )
+    )
+  ]
+, [ AccessControlDefinition(
+      None()
+    , [ Predicate("LJ___8", [], Not(SetCreation([])))
+      , AccessControlRule(
+          "M"
+        , "P_*"
+        , MatchArgs([], Some("*"))
+        , AndForExp(
+            ForExpNoFilter(
+              Sub(
+                TypedListCreation(SimpleSort("Sb5_4__993"), [])
+              , ForExp(
+                  Call(
+                    ObjectCreation(FunctionSort([], SimpleSort("Void")), [])
+                  , "f_TLX_7n"
+                  , []
+                  )
+                , "W8__0q"
+                , GenericSort("IPB_R__B_2_", [SimpleSort("H__3L2YRX")])
+                , Eq(
+                    Add(ListCreation([]), ListCreation([]))
+                  , HighlightTags(
+                      Null()
+                    , ThisCall("M_", [])
+                    , "rBBT.ek9__I_3Ykh.A"
+                    , ListCreation([])
+                    , Var("d_3__5_8_")
+                    )
+                  )
+                , FilterNoOrderBy(
+                    Call(
+                      RegexPattern(SingleBranch(Pieces([SingleAtom(AtomLiteral(","))])))
+                    , "QE"
+                    , []
+                    )
+                  , Limit(
+                      InColl(
+                        TypedListCreation(GenericSort("M_db", [SimpleSort("f8c_j7_K2_")]), [])
+                      , AllFacetResults("bIY__", GlobalVar("o7_4Z__85_Y"))
+                      )
+                    , Mul(
+                        Cast(ThisCall("Sb5_4__993", []), RefSort(SimpleSort("w3H_")))
+                      , ObjectCreation(FunctionSort([], SimpleSort("Void")), [])
+                      )
+                    )
+                  )
+                )
+              )
+            , "s4DbYFl24__"
+            , GenericSort("eWtTKJI4T_5", [SimpleSort("sQD__84S7")])
+            , TypedSetCreation(FunctionSort([], SimpleSort("Void")), [])
+            )
+          )
+        , []
+        )
+      , AccessControlPointcut("d_3__5_8_", [], [])
+      , Predicate(
+          "OQVG91_"
+        , []
+        , Call(
+            RegexPattern(
+              TupleBranch(
+                SingleBranch(
+                  Pieces(
+                    [QuantifiedAtom(CharacterClass(BracketList([BracketLiteral("/")])), PossessiveExactBound("6"))]
+                  )
+                )
+              , TupleBranch(
+                  SingleBranch(
+                    Pieces([QuantifiedAtom(QuotedAtom("Y*"), PossessiveLowerUpperBound("2", "6"))])
+                  )
+                , TupleBranch(
+                    SingleBranch(Pieces([SingleAtom(LineEnd())]))
+                  , SingleBranch(Pieces([SingleAtom(QuotedAtom("""))]))
+                  )
+                )
+              )
+            )
+          , "m1___"
+          , []
+          )
+        )
+      , AccessControlPointcut("e2_5w", [], [])
+      , Predicate(
+          "g"
+        , []
+        , AndForExp(
+            ForExpNoFilter(
+              ObjectCreation(FunctionSort([], SimpleSort("Void")), [])
+            , "I3Ge"
+            , GenericSort("U_", [SimpleSort("pqK3N1Yo_v_")])
+            , Null()
+            )
+          )
+        )
+      ]
+    )
+  , ACPolicy(Name("Sb5_4__993"))
+  , AccessControlDefinition(Some("j3w__"), [])
+  , ACPolicy(Name("K_52___6"))
+  , AccessControlDefinition(
+      Some("o7_4Z__85_Y")
+    , [ AccessControlPrincipal(
+          "vP8_b"
+        , ["O5AK63E_8__", "x__XC_bY1uW", "I3Ge", "d_3__5_8_", "FK4_", "f__", "S8", "y14"]
+        )
+      , AccessControlPointcut("C_", [], [])
+      , Predicate(
+          "S8"
+        , []
+        , FunctionRefCallPartial(FunctionRef("B_5__6287__", [], SimpleSort("Void")), [])
+        )
+      , AccessControlPrincipal("g", ["VU8T"])
+      , SpecialAccessControlRule("G3Zl0F_V_8G", SendEmailFunctionCall(EmailCall("g9_9", [])))
+      , Predicate(
+          "y14"
+        , []
+        , AndForExp(
+            ForExpNoFilter(
+              Mod(
+                OrForExp(
+                  ForExpNoFilter(
+                    FunctionRef("qo5HF_D_n37", [], SimpleSort("Qb_J8j_8N82"))
+                  , "a2__"
+                  , SimpleSort("H__3L2YRX")
+                  , EmailFunctionCall(EmailCall("f_TLX_7n", []))
+                  )
+                )
+              , AndForExp(
+                  ForExpNoFilter(
+                    EmailFunctionCall(EmailCall("a_29_QL", []))
+                  , "U_"
+                  , GenericSort("B_5__6287__", [SimpleSort("f8c_j7_K2_")])
+                  , CollectionIndex(
+                      Null()
+                    , FunctionRefCallPartial(FunctionRef("w3H_", [], SimpleSort("H__3L2YRX")), [])
+                    )
+                  )
+                )
+              )
+            , "H8KU___3"
+            , GenericSort("SN8_I1LS", [SimpleSort("X503__m8_m6")])
+            , Call(
+                RegexPattern(SingleBranch(Pieces([SingleAtom(QuotedAtom("""))])))
+              , "f8c_j7_K2_"
+              , []
+              )
+            )
+          )
+        )
+      , SpecialAccessControlRule(
+          "LDn6_"
+        , ObjectCreation(GenericSort("O5AK63E_8__", [SimpleSort("FK4_")]), [])
+        )
+      ]
+    )
+  , ACPolicy(Name("o"))
+  , AccessControlDefinition(
+      None()
+    , [ AccessControlPointcut("z__46C", [], [])
+      , Predicate("x__", [], EmailFunctionCall(EmailCall("m1___", [])))
+      , AccessControlPrincipal("B_5__6287__", ["W479"])
+      , AccessControlPrincipal("HD_p", ["X_28"])
+      , AccessControlPrincipal("eWtTKJI4T_5", ["qo5HF_D_n37"])
+      ]
+    )
+  , ACPolicy(Name("HP_"))
+  ]
+)
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/y_1759crashed/program.app
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/y_1759crashed/program.app	Mon Jul  2 10:55:51 2012	(r25121)
@@ -0,0 +1,254 @@
+application C_
+
+auto procedure LJ___8 ( LJ___8 : HP_ ) {
+  disabled {
+    {
+      {
+      }
+    }
+  }
+  enabled {
+    {
+      {
+      }
+    }
+  }
+  process { nT_r_VDvdI ( global.A6f__HQ_5__ )
+  }
+  view {
+  }
+  when {
+    sendemail
+    (
+    W479
+    (
+    )
+    )
+    <
+    function.VS87_B():Void(*,)
+    <
+    email
+    (
+    VU8T
+    (
+    )
+    )
+    &&
+    global.At2OBq
+  }
+  process { o7Jx40b4RHz ( [] % null [ And [ email ( y7 ( ) ) | LF5 : gi_2<W479> in validatetemplate ( throw
+                                                                                                      [] ) is a Ref<LF5> offset if ( function.DU1_():y14() )
+                                                                                                                                  validatetemplate
+                                                                                                                                  (
+                                                                                                                                  t57X1()with { }
+                                                                                                                                  ) else
+                                                                                                                                O completions similarity global.Rl58_ZR77jq ] ] )
+  }
+  do {
+    {
+      {
+      }
+    }
+  }
+}
+
+extend
+
+session
+
+S8
+
+{
+
+function f_TLX_7n ( w3H_ : n5LZ78t_kMF , X_28 : function ( ) : dl4RO_5 , f2 : Ref<nT_r_VDvdI> , OQVG91_ : a2__<JsACGVz> ) : qV
+{
+}
+
+static function X503__m8_m6 ( ) : Void
+{
+}
+
+search mapping {
+  U_ ^ -.4F as U_ using x__XC_bY1uW with depth -847 using h_
+  S8
+}
+
+}
+
+default_builtin_analyzer analyzer F__TCH7 {
+  index {
+  tokenizer = VT0YOlN
+  }
+  index {
+  tokenizer = Nx5a4_Z8_p3
+  }
+}
+
+access control rules
+  predicate
+  LJ___8
+  (
+  )
+  {
+  !
+  {}
+  }
+  rule M P_* ( * ) {
+    And [ List<Sb5_4__993>() - [ function():Void{}.f_TLX_7n() | W8__0q : IPB_R__B_2_<H__3L2YRX> in [] + [] == highlight null for M_() on rBBT.ek9__I_3Ykh.A surround with ( [] , d_3__5_8_ ) where  /  ,  / .QE() limit List<M_db<f8c_j7_K2_>>() in all bIY__ facets from global.o7_4Z__85_Y offset Sb5_4__993() as Ref<w3H_> * function():Void{} ] | s4DbYFl24__ : eWtTKJI4T_5<sQD__84S7> in Set<function ( ) : Void>() ]
+  }
+  pointcut
+  d_3__5_8_
+  (
+  )
+  {
+  }
+  predicate
+  OQVG91_
+  (
+  )
+  {
+   /  [/]{6}+|\QY*\E{2,6}+|$|\Q"\E  / .m1___()
+  }
+  pointcut
+  e2_5w
+  (
+  )
+  {
+  }
+  predicate
+  g
+  (
+  )
+  {
+  And
+  [ function():Void{} | I3Ge : U_<pqK3N1Yo_v_> in null ]
+  }
+
+access
+
+control
+
+policy
+
+Sb5_4__993
+
+access control rules
+  j3w__
+
+access
+
+control
+
+policy
+
+K_52___6
+
+access control rules
+  o7_4Z__85_Y
+  principal
+  is
+  vP8_b
+  with
+  credentials
+  O5AK63E_8__
+  ,
+  x__XC_bY1uW
+  ,
+  I3Ge
+  ,
+  d_3__5_8_
+  ,
+  FK4_
+  ,
+  f__
+  ,
+  S8
+  ,
+  y14
+  pointcut
+  C_
+  (
+  )
+  {
+  }
+  predicate
+  S8
+  (
+  )
+  {
+  function.B_5__6287__():Void(*,)
+  }
+  principal
+  is
+  g
+  with
+  credentials
+  VU8T
+  rule G3Zl0F_V_8G {
+    sendemail ( g9_9 ( ) )
+  }
+  predicate
+  y14
+  (
+  )
+  {
+  And
+  [ Or [ function. qo5HF_D_n37 ( ) : Qb_J8j_8N82 | a2__ : H__3L2YRX in email ( f_TLX_7n ( ) ) ] % And [ email ( a_29_QL ( ) ) | U_ : B_5__6287__<f8c_j7_K2_> in null [ function.w3H_():H__3L2YRX(*,) ] ] | H8KU___3 : SN8_I1LS<X503__m8_m6> in  /  \Q"\E  / .f8c_j7_K2_() ]
+  }
+  rule LDn6_ {
+    O5AK63E_8__<FK4_>{}
+  }
+
+access
+
+control
+
+policy
+
+o
+
+access control rules
+  pointcut
+  z__46C
+  (
+  )
+  {
+  }
+  predicate
+  x__
+  (
+  )
+  {
+  email
+  (
+  m1___
+  (
+  )
+  )
+  }
+  principal
+  is
+  B_5__6287__
+  with
+  credentials
+  W479
+  principal
+  is
+  HD_p
+  with
+  credentials
+  X_28
+  principal
+  is
+  eWtTKJI4T_5
+  with
+  credentials
+  qo5HF_D_n37
+
+access
+
+control
+
+policy
+
+HP_
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/y_1759crashed/strategyResult.txt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/y_1759crashed/strategyResult.txt	Mon Jul  2 10:55:51 2012	(r25121)
@@ -0,0 +1,48 @@
+
+Analyzing: TestFolder/program.app
+WebDSL: rewriting failed, trace:
+	editor_analyze1_0_0
+	editor_analyze1_0_0
+	editor_analyze_0_0
+	editor_analyze_work_0_0
+	in_typechecking_phase_1_0
+	dr_scope_1_1
+	dr_scope_1_1
+	declare_globals_0_0
+	typecheck_declare_0_0
+	log_time_1_1
+	declare_all_0_0
+	dr_scope_1_1
+	alltd_1_0
+	declare_0_0
+	declare_extend_entity_0_0
+	declare_extend_entity_0_0
+	declare_entity_body_0_1
+	map_1_0
+	map_1_0
+	declare_search_mapping_0_1
+[ WebDSL | critical ] Internal error: with clause failed unexpectedly in rule 'declare-entity-body'
+           [Function("f_TLX_7n",[Arg("w3H_",SimpleSort("n5LZ78t_kMF")),Arg("X_28",FunctionSort([],SimpleSort("dl4RO_5"))),Arg("f2",RefSort(SimpleSort("nT_r_VDvdI"))),Arg("OQVG91_",GenericSort("a2__",[SimpleSort("JsACGVz")]))],SimpleSort("qV"),Block([])),StaticEntityFunction("X503__m8_m6",[],ReturnType(SimpleSort("Void")),Block([])),SearchMappingEmbedded([[SearchFieldMapping(None,"U_",[Boost("-.4F"),FieldName("U_"),AnalyzerName("x__XC_bY1uW"),EmbeddedDepth("-847"),AnalyzerName("h_")])],SearchFieldMapping(None,"S8",[])])]Analyzing: TestFolder/program.app
+WebDSL: rewriting failed, trace:
+	editor_analyze1_0_0
+	editor_analyze1_0_0
+	editor_analyze_0_0
+	editor_analyze_work_0_0
+	in_typechecking_phase_1_0
+	dr_scope_1_1
+	dr_scope_1_1
+	declare_globals_0_0
+	typecheck_declare_0_0
+	log_time_1_1
+	declare_all_0_0
+	dr_scope_1_1
+	alltd_1_0
+	declare_0_0
+	declare_extend_entity_0_0
+	declare_extend_entity_0_0
+	declare_entity_body_0_1
+	map_1_0
+	map_1_0
+	declare_search_mapping_0_1
+[ WebDSL | critical ] Internal error: with clause failed unexpectedly in rule 'declare-entity-body'
+           [Function("f_TLX_7n",[Arg("w3H_",SimpleSort("n5LZ78t_kMF")),Arg("X_28",FunctionSort([],SimpleSort("dl4RO_5"))),Arg("f2",RefSort(SimpleSort("nT_r_VDvdI"))),Arg("OQVG91_",GenericSort("a2__",[SimpleSort("JsACGVz")]))],SimpleSort("qV"),Block([])),StaticEntityFunction("X503__m8_m6",[],ReturnType(SimpleSort("Void")),Block([])),SearchMappingEmbedded([[SearchFieldMapping(None,"U_",[Boost("-.4F"),FieldName("U_"),AnalyzerName("x__XC_bY1uW"),EmbeddedDepth("-847"),AnalyzerName("h_")])],SearchFieldMapping(None,"S8",[])])]
\ No newline at end of file

From andre.s.d.vieira at gmail.com  Mon Jul  2 13:04:39 2012
From: andre.s.d.vieira at gmail.com (Andre Vieira)
Date: Mon, 02 Jul 2012 11:04:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25122 -
	spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/z_1759crashed
Message-ID: <20120702110439.1418C108C02B@mx3.tudelft.nl>

Author: AndreVieira
Date: Mon Jul  2 11:04:37 2012
New Revision: 25122
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25122&sc=1

Log:


Added:
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/z_1759crashed/
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/z_1759crashed/AST.aterm
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/z_1759crashed/program.app
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/z_1759crashed/strategyResult.txt

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/z_1759crashed/AST.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/z_1759crashed/AST.aterm	Mon Jul  2 11:04:37 2012	(r25122)
@@ -0,0 +1,167 @@
+Application(
+  "d8T_F"
+, [ AccessControlDefinition(None(), [AccessControlPointcut("HP_", [], [])])
+  , AccessControlDefinition(
+      Some("F__TCH7")
+    , [ Predicate("VU8T", [], ListCreation([]))
+      , Predicate(
+          "XG"
+        , []
+        , Suggest(
+            "Mm"
+          , SpellCheck()
+          , [SuggestTerm(FieldsConstraint(["b_Lvm25CD.eT30S_K"]), ThisCall("O5AK63E_8__", []))]
+          )
+        )
+      , Predicate("pDHT___ZG_6", [], String(""uots;gsz 3""))
+      , AccessControlPointcut("g9_9", [], [])
+      , Predicate("M_", [], Add(Long("-84L"), GlobalVar("XG")))
+      , AccessControlRule(
+          "b_1_835l_Y1"
+        , "*"
+        , MatchArgs([], None())
+        , ListCreation([])
+        , []
+        )
+      , Predicate("w3H_", [], FunctionRef("F", [], SimpleSort("Void")))
+      , AccessControlRule(
+          "e91_e1F7_Bs"
+        , "E8zN"
+        , MatchArgs([], None())
+        , OrForExp(
+            ForExp(
+              FieldAccess(GlobalVar("b_1_835l_Y1"), "Q8_eK5B___B")
+            , "f_TLX_7n"
+            , SimpleSort("HD_p")
+            , NotEq(
+                SmallerThan(
+                  SearcherRefMod(
+                    InColl(
+                      SearcherInit("WFQ3", [])
+                    , IsA(Var("a_29_QL"), SimpleSort("Y1jG4f_A_"))
+                    )
+                  , [SearchAttributes([])]
+                  )
+                , FunctionRefCallPartial(FunctionRef("VS87_B", [], SimpleSort("f2")), [])
+                )
+              , IsA(
+                  Call(RenderTemplateFunctionCall(ValidationErrors("WU_U_2_jNL")), "o7_4Z__85_Y", [])
+                , FunctionSort([], SimpleSort("Void"))
+                )
+              )
+            , FilterNoWhereNoOrderBy(
+                LimitNoOffset(
+                  Call(
+                    RegexPattern(SingleBranch(Pieces([SingleAtom(QuotedAtom("!),'$,#s"))])))
+                  , "WU_U_2_jNL"
+                  , []
+                  )
+                )
+              )
+            )
+          )
+        , []
+        )
+      , AccessControlPointcut("A6f__HQ_5__", [], [])
+      , AccessControlPrincipal("A6f__HQ_5__", ["x__"])
+      ]
+    )
+  , AccessControlDefinition(
+      None()
+    , [ AccessControlPointcut("f", [], [])
+      , AccessControlPointcut("S879_o9e_5_", [], [])
+      , AccessControlPointcut("W8__0q", [], [])
+      , Predicate(
+          "wNJU_dF2T84"
+        , []
+        , Suggest("yU_09_Xb_L_", SpellCheck(), [Similarity(False())])
+        )
+      , AccessControlPrincipal("z__46C", ["Rl58_ZR77jq"])
+      , AccessControlPrincipal("j3w__", ["m_"])
+      , AccessControlPointcut("gi_2", [], [])
+      , AccessControlRule(
+          "H__3L2YRX"
+        , "cB_aw_0JK"
+        , MatchArgs([], Some("*"))
+        , Int("-3")
+        , []
+        )
+      ]
+    )
+  , AccessControlDefinition(
+      None()
+    , [ AccessControlPrincipal(
+          "d8T_F"
+        , [ "d8T_F"
+          , "VS87_B"
+          , "z__46C"
+          , "b545J3"
+          , "LJ___8"
+          , "b9_uK_L"
+          , "qo5HF_D_n37"
+          , "C_"
+          , "nT_r_VDvdI"
+          , "LF5"
+          ]
+        )
+      , AccessControlPrincipal("u9lO_7__4_8", ["b___686_OOU"])
+      , Predicate("QE", [], Int("-9"))
+      , SpecialAccessControlRule("b9_uK_L", ThisCall("s4DbYFl24__", []))
+      , AccessControlPrincipal("K_52___6", ["m_"])
+      , AccessControlPointcut("pqK3N1Yo_v_", [], [])
+      , AccessControlPointcut("o", [], [])
+      ]
+    )
+  , AccessControlDefinition(
+      None()
+    , [ AccessControlPointcut("V_Y", [], [])
+      , AccessControlPointcut("WC0", [], [])
+      , AccessControlRule(
+          "f__"
+        , "Y__385l__3"
+        , MatchArgs([], None())
+        , RenderEmailFunctionCall(EmailCall("z__46C", []))
+        , []
+        )
+      , AccessControlPointcut("a2__", [], [])
+      ]
+    )
+  , AccessControlDefinition(Some("JO9__6T9V8_"), [])
+  , ACPolicy(
+      PolicyOr(
+        PolicyOr(
+          PolicyAnd(PolicyAnd(Name("y_68G3_OH_L"), Name("s6t_8G___2K")), Name("M_39n"))
+        , PolicyAnd(
+            PolicyAnd(PolicyAnd(Name("H__3L2YRX"), Name("eWtTKJI4T_5")), Name("E_"))
+          , Name("y3_G31")
+          )
+        )
+      , Name("A1Tp")
+      )
+    )
+  , AccessControlDefinition(
+      Some("qo5HF_D_n37")
+    , [ SpecialAccessControlRule("E_", ObjectCreation(FunctionSort([], SimpleSort("O5AK63E_8__")), []))
+      , Predicate("t", [], ThisCall("WU_U_2_jNL", []))
+      , AccessControlRule(
+          "B_5__6287__"
+        , "S_3_*"
+        , MatchArgs([], None())
+        , FunctionRef("AWP__3dH_c_", [], SimpleSort("Void"))
+        , []
+        )
+      , Predicate(
+          "W479"
+        , []
+        , SearcherRefMod(
+            Suggest("NOR", SpellCheck(), [Similarity(SetCreation([]))])
+          , [QueryDef([])]
+          )
+        )
+      , AccessControlPrincipal("U_", ["f2"])
+      , Predicate("Q", [], ListCreation([]))
+      , AccessControlPointcut("d8T_F", [], [])
+      ]
+    )
+  ]
+)
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/z_1759crashed/program.app
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/z_1759crashed/program.app	Mon Jul  2 11:04:37 2012	(r25122)
@@ -0,0 +1,290 @@
+application d8T_F
+
+access control rules
+  pointcut
+  HP_
+  (
+  )
+  {
+  }
+
+access control rules
+  F__TCH7
+  predicate
+  VU8T
+  (
+  )
+  {
+  []
+  }
+  predicate
+  XG
+  (
+  )
+  {
+  Mm corrections matching b_Lvm25CD.eT30S_K : O5AK63E_8__()
+  }
+  predicate
+  pDHT___ZG_6
+  (
+  )
+  {
+  "uots;gsz 3"
+  }
+  pointcut
+  g9_9
+  (
+  )
+  {
+  }
+  predicate
+  M_
+  (
+  )
+  {
+  -84L
+  +
+  global.XG
+  }
+  rule b_1_835l_Y1 * (  ) {
+    []
+  }
+  predicate
+  w3H_
+  (
+  )
+  {
+  function.
+  F
+  (
+  )
+  :
+  Void
+  }
+  rule e91_e1F7_Bs E8zN (  ) {
+    Or [ global.b_1_835l_Y1.Q8_eK5B___B | f_TLX_7n : HD_p in ~ search WFQ3 in a_29_QL is a Y1jG4f_A_ [ ] < function.VS87_B():f2(*,) != rendertemplate(validationErrors(WU_U_2_jNL)).o7_4Z__85_Y() is a function ( ) : Void limit  /  \Q!),'$,#s\E  / .WU_U_2_jNL() ]
+  }
+  pointcut
+  A6f__HQ_5__
+  (
+  )
+  {
+  }
+  principal
+  is
+  A6f__HQ_5__
+  with
+  credentials
+  x__
+
+access control rules
+  pointcut
+  f
+  (
+  )
+  {
+  }
+  pointcut
+  S879_o9e_5_
+  (
+  )
+  {
+  }
+  pointcut
+  W8__0q
+  (
+  )
+  {
+  }
+  predicate
+  wNJU_dF2T84
+  (
+  )
+  {
+  yU_09_Xb_L_ corrections similarity false
+  }
+  principal
+  is
+  z__46C
+  with
+  credentials
+  Rl58_ZR77jq
+  principal
+  is
+  j3w__
+  with
+  credentials
+  m_
+  pointcut
+  gi_2
+  (
+  )
+  {
+  }
+  rule H__3L2YRX cB_aw_0JK ( * ) {
+    -3
+  }
+
+access control rules
+  principal
+  is
+  d8T_F
+  with
+  credentials
+  d8T_F
+  ,
+  VS87_B
+  ,
+  z__46C
+  ,
+  b545J3
+  ,
+  LJ___8
+  ,
+  b9_uK_L
+  ,
+  qo5HF_D_n37
+  ,
+  C_
+  ,
+  nT_r_VDvdI
+  ,
+  LF5
+  principal
+  is
+  u9lO_7__4_8
+  with
+  credentials
+  b___686_OOU
+  predicate
+  QE
+  (
+  )
+  {
+  -9
+  }
+  rule b9_uK_L {
+    s4DbYFl24__()
+  }
+  principal
+  is
+  K_52___6
+  with
+  credentials
+  m_
+  pointcut
+  pqK3N1Yo_v_
+  (
+  )
+  {
+  }
+  pointcut
+  o
+  (
+  )
+  {
+  }
+
+access control rules
+  pointcut
+  V_Y
+  (
+  )
+  {
+  }
+  pointcut
+  WC0
+  (
+  )
+  {
+  }
+  rule f__ Y__385l__3 (  ) {
+    renderemail ( z__46C ( ) )
+  }
+  pointcut
+  a2__
+  (
+  )
+  {
+  }
+
+access control rules
+  JO9__6T9V8_
+
+access
+
+control
+
+policy
+
+y_68G3_OH_L
+
+AND
+
+s6t_8G___2K
+
+AND
+
+M_39n
+
+OR
+
+H__3L2YRX
+
+AND
+
+eWtTKJI4T_5
+
+AND
+
+E_
+
+AND
+
+y3_G31
+
+OR
+
+A1Tp
+
+access control rules
+  qo5HF_D_n37
+  rule E_ {
+    function():O5AK63E_8__{}
+  }
+  predicate
+  t
+  (
+  )
+  {
+  WU_U_2_jNL()
+  }
+  rule B_5__6287__ S_3_* (  ) {
+    function. AWP__3dH_c_ ( ) : Void
+  }
+  predicate
+  W479
+  (
+  )
+  {
+  ~ NOR corrections similarity {} matching
+  }
+  principal
+  is
+  U_
+  with
+  credentials
+  f2
+  predicate
+  Q
+  (
+  )
+  {
+  []
+  }
+  pointcut
+  d8T_F
+  (
+  )
+  {
+  }
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/z_1759crashed/strategyResult.txt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/z_1759crashed/strategyResult.txt	Mon Jul  2 11:04:37 2012	(r25122)
@@ -0,0 +1,122 @@
+
+Analyzing: TestFolder/program.app
+rename: 0.000 s
+
+* : error: Type cannot be determined for empty untyped list creation.
+[]
+* : error: No function 'O5AK63E_8__' with signature O5AK63E_8__(). Available global functions with that name: 
+O5AK63E_8__()
+* : error: predicate should contain a Bool expression: predicate XG ( ) { Mm corrections matching b_Lvm25CD.eT30S_K : O5AK63E_8__() }
+predicate XG ( ) { Mm corrections matching b_Lvm25CD.eT30S_K : O5AK63E_8__() }
+* : error: predicate should contain a Bool expression: predicate pDHT___ZG_6 ( ) { "uots;gsz 3" }
+predicate pDHT___ZG_6 ( ) { "uots;gsz 3" }
+* : error: Type cannot be determined for empty untyped list creation.
+[]
+* : error: rule type unknown: rule b_1_835l_Y1 * (  ) {
+  []
+}
+rule b_1_835l_Y1 * (  ) {
+  []
+}
+* : error: predicate should contain a Bool expression: predicate w3H_ ( ) { function. F ( ) : Void }
+predicate w3H_ ( ) { function. F ( ) : Void }
+* : error: Type not defined: HD_p
+HD_p
+* : error: Entity : WFQ3 is not searchable
+search WFQ3
+* : error: Variable 'a_29_QL' not defined
+a_29_QL
+* : error: Type not defined: Y1jG4f_A_
+Y1jG4f_A_
+WebDSL: rewriting failed, trace:
+	editor_analyze1_0_0
+	editor_analyze1_0_0
+	editor_analyze_0_0
+	editor_analyze_work_0_0
+	in_typechecking_phase_1_0
+	dr_scope_1_1
+	editor_check_0_1
+	dr_scope_1_1
+	dr_scope_1_1
+	dbg_time_1_1
+	catch_errors_editor_1_0
+	dr_scope_1_1
+	dr_scope_1_1
+	constraint_error_all_0_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	try_1_0
+	constraint_error_0_0
+	constraint_error_search_0_0
+	eq_type_of_0_0
+	type_of_query_0_0
+[ WebDSL | critical ] Internal error: with clause failed unexpectedly in rule 'constraint-error-search'
+           SearcherRefMod(InColl(SearcherInit("WFQ3",[]),IsA(Var("a_29_QL"),SimpleSort("Y1jG4f_A_"))),[SearchAttributes([])])Analyzing: TestFolder/program.app
+rename: 0.000 s
+
+* : error: Type cannot be determined for empty untyped list creation.
+[]
+* : error: No function 'O5AK63E_8__' with signature O5AK63E_8__(). Available global functions with that name: 
+O5AK63E_8__()
+* : error: predicate should contain a Bool expression: predicate XG ( ) { Mm corrections matching b_Lvm25CD.eT30S_K : O5AK63E_8__() }
+predicate XG ( ) { Mm corrections matching b_Lvm25CD.eT30S_K : O5AK63E_8__() }
+* : error: predicate should contain a Bool expression: predicate pDHT___ZG_6 ( ) { "uots;gsz 3" }
+predicate pDHT___ZG_6 ( ) { "uots;gsz 3" }
+* : error: Type cannot be determined for empty untyped list creation.
+[]
+* : error: rule type unknown: rule b_1_835l_Y1 * (  ) {
+  []
+}
+rule b_1_835l_Y1 * (  ) {
+  []
+}
+* : error: predicate should contain a Bool expression: predicate w3H_ ( ) { function. F ( ) : Void }
+predicate w3H_ ( ) { function. F ( ) : Void }
+* : error: Type not defined: HD_p
+HD_p
+* : error: Entity : WFQ3 is not searchable
+search WFQ3
+* : error: Variable 'a_29_QL' not defined
+a_29_QL
+* : error: Type not defined: Y1jG4f_A_
+Y1jG4f_A_
+WebDSL: rewriting failed, trace:
+	editor_analyze1_0_0
+	editor_analyze1_0_0
+	editor_analyze_0_0
+	editor_analyze_work_0_0
+	in_typechecking_phase_1_0
+	dr_scope_1_1
+	editor_check_0_1
+	dr_scope_1_1
+	dr_scope_1_1
+	dbg_time_1_1
+	catch_errors_editor_1_0
+	dr_scope_1_1
+	dr_scope_1_1
+	constraint_error_all_0_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	try_1_0
+	constraint_error_0_0
+	constraint_error_search_0_0
+	eq_type_of_0_0
+	type_of_query_0_0
+[ WebDSL | critical ] Internal error: with clause failed unexpectedly in rule 'constraint-error-search'
+           SearcherRefMod(InColl(SearcherInit("WFQ3",[]),IsA(Var("a_29_QL"),SimpleSort("Y1jG4f_A_"))),[SearchAttributes([])])
\ No newline at end of file

From andre.s.d.vieira at gmail.com  Mon Jul  2 13:52:01 2012
From: andre.s.d.vieira at gmail.com (Andre Vieira)
Date: Mon, 02 Jul 2012 11:52:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25123 - in
	spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2:
	j_28374 j_28374crashed
Message-ID: <20120702115201.AB5FE108C02D@mx3.tudelft.nl>

Author: AndreVieira
Date: Mon Jul  2 11:52:01 2012
New Revision: 25123
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25123&sc=1

Log:


Added:
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/j_28374/
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/j_28374/amb16.app
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/j_28374/amb16.aterm
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/j_28374crashed/
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/j_28374crashed/AST.aterm
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/j_28374crashed/program.app
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/j_28374crashed/strategyResult.txt

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/j_28374/amb16.app
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/j_28374/amb16.app	Mon Jul  2 11:52:01 2012	(r25123)
@@ -0,0 +1 @@
+[ ! e_22Oc____f completions matching X.SmEE_F.BDJ : true <  /  ^??  / .VLP___I() | K4Xdv_N_47U : Ref<function():Void> in [].gR_ order by  /  (?<!(?<!\Q/\E|empty{8,23}+){8,}|G){72}|(?<=^{23}+|\B++|^|.|\Q/\E{4,}+)*  / .hPKn7i() desc limit {} offset email ( p5cI8 ( ) ) <= global.VLP___I != global.N__Q463TU2_ ]
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/j_28374/amb16.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/j_28374/amb16.aterm	Mon Jul  2 11:52:01 2012	(r25123)
@@ -0,0 +1,201 @@
+amb(
+  [ ForExp(
+      SmallerThan(
+        Not(
+          Suggest(
+            "e_22Oc____f"
+          , AutoComplete()
+          , [SuggestTerm(FieldsConstraint(["X.SmEE_F.BDJ"]), True())]
+          )
+        )
+      , Call(
+          RegexPattern(SingleBranch(Pieces([QuantifiedAtom(LineStart(), ReluctantOnceOrNot())])))
+        , "VLP___I"
+        , []
+        )
+      )
+    , "K4Xdv_N_47U"
+    , RefSort(FunctionSort([], SimpleSort("Void")))
+    , FieldAccess(ListCreation([]), "gR_")
+    , FilterNoWhere(
+        OrderDescending(
+          Call(
+            RegexPattern(
+              TupleBranch(
+                SingleBranch(
+                  Pieces(
+                    [ QuantifiedAtom(
+                        NegativeLookbehind(
+                          TupleBranch(
+                            SingleBranch(
+                              Pieces(
+                                [ QuantifiedAtom(
+                                    NegativeLookbehind(
+                                      TupleBranch(
+                                        SingleBranch(Pieces([SingleAtom(QuotedAtom("/"))]))
+                                      , SingleBranch(
+                                          Pieces(
+                                            [ SingleAtom(AtomLiteral("e"))
+                                            , SingleAtom(AtomLiteral("m"))
+                                            , SingleAtom(AtomLiteral("p"))
+                                            , SingleAtom(AtomLiteral("t"))
+                                            , QuantifiedAtom(AtomLiteral("y"), PossessiveLowerUpperBound("8", "23"))
+                                            ]
+                                          )
+                                        )
+                                      )
+                                    )
+                                  , GreedyLowerBound("8")
+                                  )
+                                ]
+                              )
+                            )
+                          , SingleBranch(Pieces([SingleAtom(AtomLiteral("G"))]))
+                          )
+                        )
+                      , GreedyExactBound("72")
+                      )
+                    ]
+                  )
+                )
+              , SingleBranch(
+                  Pieces(
+                    [ QuantifiedAtom(
+                        PositiveLookbehind(
+                          TupleBranch(
+                            SingleBranch(Pieces([QuantifiedAtom(LineStart(), PossessiveExactBound("23"))]))
+                          , TupleBranch(
+                              SingleBranch(Pieces([QuantifiedAtom(AtomCharacter(NonWordBoundry()), PossessiveOneOrMore())]))
+                            , TupleBranch(
+                                SingleBranch(Pieces([SingleAtom(LineStart())]))
+                              , TupleBranch(
+                                  SingleBranch(Pieces([SingleAtom(SingleCharacter())]))
+                                , SingleBranch(Pieces([QuantifiedAtom(QuotedAtom("/"), PossessiveLowerBound("4"))]))
+                                )
+                              )
+                            )
+                          )
+                        )
+                      , GreedyZeroOrMore()
+                      )
+                    ]
+                  )
+                )
+              )
+            )
+          , "hPKn7i"
+          , []
+          )
+        )
+      , Limit(
+          SetCreation([])
+        , NotEq(
+            SmallerThanOrEqual(EmailFunctionCall(EmailCall("p5cI8", [])), GlobalVar("VLP___I"))
+          , GlobalVar("N__Q463TU2_")
+          )
+        )
+      )
+    )
+  , ForExp(
+      Not(
+        Suggest(
+          "e_22Oc____f"
+        , AutoComplete()
+        , [ SuggestTerm(
+              FieldsConstraint(["X.SmEE_F.BDJ"])
+            , SmallerThan(
+                True()
+              , Call(
+                  RegexPattern(SingleBranch(Pieces([QuantifiedAtom(LineStart(), ReluctantOnceOrNot())])))
+                , "VLP___I"
+                , []
+                )
+              )
+            )
+          ]
+        )
+      )
+    , "K4Xdv_N_47U"
+    , RefSort(FunctionSort([], SimpleSort("Void")))
+    , FieldAccess(ListCreation([]), "gR_")
+    , FilterNoWhere(
+        OrderDescending(
+          Call(
+            RegexPattern(
+              TupleBranch(
+                SingleBranch(
+                  Pieces(
+                    [ QuantifiedAtom(
+                        NegativeLookbehind(
+                          TupleBranch(
+                            SingleBranch(
+                              Pieces(
+                                [ QuantifiedAtom(
+                                    NegativeLookbehind(
+                                      TupleBranch(
+                                        SingleBranch(Pieces([SingleAtom(QuotedAtom("/"))]))
+                                      , SingleBranch(
+                                          Pieces(
+                                            [ SingleAtom(AtomLiteral("e"))
+                                            , SingleAtom(AtomLiteral("m"))
+                                            , SingleAtom(AtomLiteral("p"))
+                                            , SingleAtom(AtomLiteral("t"))
+                                            , QuantifiedAtom(AtomLiteral("y"), PossessiveLowerUpperBound("8", "23"))
+                                            ]
+                                          )
+                                        )
+                                      )
+                                    )
+                                  , GreedyLowerBound("8")
+                                  )
+                                ]
+                              )
+                            )
+                          , SingleBranch(Pieces([SingleAtom(AtomLiteral("G"))]))
+                          )
+                        )
+                      , GreedyExactBound("72")
+                      )
+                    ]
+                  )
+                )
+              , SingleBranch(
+                  Pieces(
+                    [ QuantifiedAtom(
+                        PositiveLookbehind(
+                          TupleBranch(
+                            SingleBranch(Pieces([QuantifiedAtom(LineStart(), PossessiveExactBound("23"))]))
+                          , TupleBranch(
+                              SingleBranch(Pieces([QuantifiedAtom(AtomCharacter(NonWordBoundry()), PossessiveOneOrMore())]))
+                            , TupleBranch(
+                                SingleBranch(Pieces([SingleAtom(LineStart())]))
+                              , TupleBranch(
+                                  SingleBranch(Pieces([SingleAtom(SingleCharacter())]))
+                                , SingleBranch(Pieces([QuantifiedAtom(QuotedAtom("/"), PossessiveLowerBound("4"))]))
+                                )
+                              )
+                            )
+                          )
+                        )
+                      , GreedyZeroOrMore()
+                      )
+                    ]
+                  )
+                )
+              )
+            )
+          , "hPKn7i"
+          , []
+          )
+        )
+      , Limit(
+          SetCreation([])
+        , NotEq(
+            SmallerThanOrEqual(EmailFunctionCall(EmailCall("p5cI8", [])), GlobalVar("VLP___I"))
+          , GlobalVar("N__Q463TU2_")
+          )
+        )
+      )
+    )
+  ]
+)
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/j_28374crashed/AST.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/j_28374crashed/AST.aterm	Mon Jul  2 11:52:01 2012	(r25123)
@@ -0,0 +1,369 @@
+ModuleDefs(
+  "._/_91k-DI_K."
+, [ Test(
+      ""
+    , Block(
+        [ GoTo(PageCall("lqOE", []))
+        , If(SetCreation([]), Block([]), Block([]))
+        , ValidateStatement(ListCreation([]), RenderEmailFunctionCall(EmailCall("hPKn7i", [])))
+        , Schedule(SetCreation([]), Not(RenderTemplateFunctionCall(TemplateCallProps("L_WypGe__kG", []))))
+        , VarDeclInit(
+            "hPKn7i"
+          , FunctionSort([], SimpleSort("Void"))
+          , FieldAccess(True(), "O")
+          )
+        , ForStmtNoFilter(
+            "Cx1UwiX___6"
+          , GenericSort("eRrc_iI4fL6", [SimpleSort("O")])
+          , Call(
+              RegexPattern(SingleBranch(Pieces([QuantifiedAtom(LineStart(), ReluctantExactBound("1"))])))
+            , "gR_"
+            , []
+            )
+          , Block([])
+          )
+        , TryStatement(
+            Block([])
+          , [Catch("N__Q463TU2_", RefSort(SimpleSort("e_116")), Block([]))]
+          )
+        , Case(
+            Mul(
+              CollectionIndex(
+                RenderTemplateFunctionCall(TemplateCallNoArgs("eqGMis"))
+              , Suggest(
+                  "XM_1_3_"
+                , AutoComplete()
+                , [ SuggestTerm(
+                      FieldsConstraint(["X.SmEE_F.BDJ"])
+                    , FunctionRefCallPartial(FunctionRef("e_116", [], SimpleSort("Void")), [])
+                    )
+                  ]
+                )
+              )
+            , Call(EmailFunctionCall(EmailCall("v3c3qUE", [])), "O_2H3Q", [])
+            )
+          , []
+          )
+        , VarDeclInitInferred("N__Q463TU2_", SetCreation([]))
+        , Stat(
+            FieldAccess(ObjectCreation(FunctionSort([], SimpleSort("Cx1UwiX___6")), []), "p5cI8")
+          )
+        ]
+      )
+    )
+  , Imports("zq/__Co7i_47/2_F")
+  , Predicate(
+      "YJ"
+    , [Arg("e_116", RefSort(FunctionSort([], SimpleSort("Void"))))]
+    , OrForExp(
+        ForExpNoFilter(
+          False()
+        , "p5cI8"
+        , SimpleSort("et_P_d45UW_")
+        , FunctionRefCall(FunctionRef("cC1", [], SimpleSort("Void")), [])
+        )
+      )
+    )
+  , AutoProcedure(
+      "O_2H3Q"
+    , Arg(
+        "qS43375"
+      , GenericSort("t_85___6Vo_", [GenericSort("YJ", [SimpleSort("K4Xdv_N_47U")])])
+      )
+    , [ ProcedureView([])
+      , ProcedureDisabled(Block([Block([])]))
+      , ProcedureWho(
+          IfExp(
+            FunctionRefCallPartial(FunctionRef("hPKn7i", [], SimpleSort("e_116")), [])
+          , Add(
+              Cast(Int("5214"), GenericSort("VLP___I", [SimpleSort("O_2H3Q")]))
+            , SendEmailFunctionCall(EmailCall("VLP___I", []))
+            )
+          , FieldAccess(TypedListCreation(SimpleSort("N__Q463TU2_"), []), "eRrc_iI4fL6")
+          )
+        )
+      , ProcedureDisabled(Block([Block([])]))
+      ]
+    )
+  , ExtendProcedure(
+      "l23__"
+    , Arg("O", FunctionSort([], RefSort(SimpleSort("cC1"))))
+    , [ ProcedureDisabled(Block([Block([])]))
+      , ProcedureWho(
+          ForExpNoFilter(
+            Call(
+              ObjectCreation(FunctionSort([], SimpleSort("O_2H3Q")), [])
+            , "K4Xdv_N_47U"
+            , []
+            )
+          , "K4Xdv_N_47U"
+          , SimpleSort("hPKn7i")
+          , ObjectCreation(GenericSort("et_P_d45UW_", [SimpleSort("YJ")]), [])
+          )
+        )
+      , ProcedureProcessed(Block([]))
+      , ProcedureProcessed(Block([]))
+      , ProcedureProcessed(Block([]))
+      , ProcedureWho(EmailFunctionCall(EmailCall("YJ", [])))
+      , ProcedureProcessed(Block([]))
+      , ProcedureView([])
+      , ProcedureDisabled(Block([Block([])]))
+      , ProcedureWhen(ThisCall("VLP___I", []))
+      ]
+    )
+  , Test(
+      "p5cI8"
+    , Block(
+        [ Stat(
+            Mul(
+              Cast(
+                FunctionRefCallPartial(FunctionRef("et_P_d45UW_", [], SimpleSort("t_85___6Vo_")), [])
+              , RefSort(GenericSort("t_85___6Vo_", [SimpleSort("VLP___I")]))
+              )
+            , FunctionRefCallPartial(FunctionRef("YJ", [], SimpleSort("j9J5_V___1")), [])
+            )
+          )
+        , If(ListCreation([]), Block([]), Block([]))
+        , Stat(
+            NotEq(
+              RenderTemplateFunctionCall(TemplateCallPropsNoBody("VZB4_4O48V4", [], []))
+            , FunctionRefCall(FunctionRef("l23__", [], SimpleSort("VLP___I")), [])
+            )
+          )
+        , ForAllStmtNoFilter(
+            "p5cI8"
+          , GenericSort("VLP___I", [SimpleSort("l23__")])
+          , Block([])
+          )
+        , If(
+            CollectionIndex(
+              ForExp(
+                SmallerThan(
+                  Not(
+                    Suggest(
+                      "e_22Oc____f"
+                    , AutoComplete()
+                    , [SuggestTerm(FieldsConstraint(["X.SmEE_F.BDJ"]), True())]
+                    )
+                  )
+                , Call(
+                    RegexPattern(SingleBranch(Pieces([QuantifiedAtom(LineStart(), ReluctantOnceOrNot())])))
+                  , "VLP___I"
+                  , []
+                  )
+                )
+              , "K4Xdv_N_47U"
+              , RefSort(FunctionSort([], SimpleSort("Void")))
+              , FieldAccess(ListCreation([]), "gR_")
+              , FilterNoWhere(
+                  OrderDescending(
+                    Call(
+                      RegexPattern(
+                        TupleBranch(
+                          SingleBranch(
+                            Pieces(
+                              [ QuantifiedAtom(
+                                  NegativeLookbehind(
+                                    TupleBranch(
+                                      SingleBranch(
+                                        Pieces(
+                                          [ QuantifiedAtom(
+                                              NegativeLookbehind(
+                                                TupleBranch(
+                                                  SingleBranch(Pieces([SingleAtom(QuotedAtom("/"))]))
+                                                , SingleBranch(
+                                                    Pieces(
+                                                      [ SingleAtom(AtomLiteral("e"))
+                                                      , SingleAtom(AtomLiteral("m"))
+                                                      , SingleAtom(AtomLiteral("p"))
+                                                      , SingleAtom(AtomLiteral("t"))
+                                                      , QuantifiedAtom(AtomLiteral("y"), PossessiveLowerUpperBound("8", "23"))
+                                                      ]
+                                                    )
+                                                  )
+                                                )
+                                              )
+                                            , GreedyLowerBound("8")
+                                            )
+                                          ]
+                                        )
+                                      )
+                                    , SingleBranch(Pieces([SingleAtom(AtomLiteral("G"))]))
+                                    )
+                                  )
+                                , GreedyExactBound("72")
+                                )
+                              ]
+                            )
+                          )
+                        , SingleBranch(
+                            Pieces(
+                              [ QuantifiedAtom(
+                                  PositiveLookbehind(
+                                    TupleBranch(
+                                      SingleBranch(Pieces([QuantifiedAtom(LineStart(), PossessiveExactBound("23"))]))
+                                    , TupleBranch(
+                                        SingleBranch(Pieces([QuantifiedAtom(AtomCharacter(NonWordBoundry()), PossessiveOneOrMore())]))
+                                      , TupleBranch(
+                                          SingleBranch(Pieces([SingleAtom(LineStart())]))
+                                        , TupleBranch(
+                                            SingleBranch(Pieces([SingleAtom(SingleCharacter())]))
+                                          , SingleBranch(Pieces([QuantifiedAtom(QuotedAtom("/"), PossessiveLowerBound("4"))]))
+                                          )
+                                        )
+                                      )
+                                    )
+                                  )
+                                , GreedyZeroOrMore()
+                                )
+                              ]
+                            )
+                          )
+                        )
+                      )
+                    , "hPKn7i"
+                    , []
+                    )
+                  )
+                , Limit(
+                    SetCreation([])
+                  , NotEq(
+                      SmallerThanOrEqual(EmailFunctionCall(EmailCall("p5cI8", [])), GlobalVar("VLP___I"))
+                    , GlobalVar("N__Q463TU2_")
+                    )
+                  )
+                )
+              )
+            , AndForExp(
+                ForExp(
+                  LargerThanOrEqual(
+                    ObjectCreation(FunctionSort([], SimpleSort("Void")), [])
+                  , Var("gR_")
+                  )
+                , "Cx1UwiX___6"
+                , GenericSort("et_P_d45UW_", [SimpleSort("eRrc_iI4fL6")])
+                , Sub(
+                    Div(
+                      AndForExp(
+                        ForExp(
+                          True()
+                        , "e_116"
+                        , RefSort(SimpleSort("N__Q463TU2_"))
+                        , ThisCall("VLP___I", [])
+                        , FilterNoOrderBy(Null(), LimitNoOffset(False()))
+                        )
+                      )
+                    , ObjectCreation(FunctionSort([], SimpleSort("cC1")), [])
+                    )
+                  , SendEmailFunctionCall(EmailCall("t_85___6Vo_", []))
+                  )
+                , FilterNoOrderByNoLimit(ThisCall("N__Q463TU2_", []))
+                )
+              )
+            )
+          , Block([])
+          , Block([])
+          )
+        , Case(
+            InColl(
+              Mul(
+                TypedListCreation(GenericSort("O", [SimpleSort("j9J5_V___1")]), [])
+              , ObjectCreation(FunctionSort([], SimpleSort("eRrc_iI4fL6")), [])
+              )
+            , Int("-3")
+            )
+          , []
+          )
+        ]
+      )
+    )
+  ]
+, [ ACPolicy(Name("v3c3qUE"))
+  , AccessControlDefinition(
+      Some("v3c3qUE")
+    , [ Predicate(
+          "K4Xdv_N_47U"
+        , [ Arg("O", FunctionSort([], SimpleSort("O")))
+          , Arg("l23__", RefSort(SimpleSort("qS43375")))
+          , Arg("K4Xdv_N_47U", FunctionSort([], SimpleSort("l23__")))
+          , Arg("j9J5_V___1", RefSort(GenericSort("O", [SimpleSort("O")])))
+          , Arg("p5cI8", SimpleSort("e_116"))
+          , Arg("e_116", FunctionSort([], SimpleSort("Void")))
+          , Arg("Cx1UwiX___6", RefSort(FunctionSort([], SimpleSort("Void"))))
+          ]
+        , SendEmailFunctionCall(EmailCall("j9J5_V___1", []))
+        )
+      , AccessControlRule(
+          "qS43375"
+        , "f*"
+        , MatchArgs([], None())
+        , Int("1")
+        , []
+        )
+      , Predicate(
+          "e_116"
+        , []
+        , FunctionRefCall(FunctionRef("YJ", [], SimpleSort("Void")), [])
+        )
+      , AccessControlPrincipal("O_2H3Q", ["lqOE"])
+      , SpecialAccessControlRule("YJ", ListCreation([]))
+      , AccessControlPrincipal("qS43375", ["p5cI8"])
+      , Predicate(
+          "O_2H3Q"
+        , [Arg("qS43375", FunctionSort([], SimpleSort("K4Xdv_N_47U")))]
+        , OrForExp(
+            ForExp(
+              ThisCall("qS43375", [])
+            , "N__Q463TU2_"
+            , SimpleSort("eRrc_iI4fL6")
+            , And(
+                IsA(FieldAccess(ListCreation([]), "O_2H3Q"), SimpleSort("j9J5_V___1"))
+              , Add(
+                  Cast(True(), FunctionSort([], SimpleSort("K4Xdv_N_47U")))
+                , ListCreation([])
+                )
+              )
+            , FilterNoOrderByNoLimit(False())
+            )
+          )
+        )
+      , Predicate(
+          "O_2H3Q"
+        , [ Arg("l23__", SimpleSort("YJ"))
+          , Arg("eRrc_iI4fL6", RefSort(GenericSort("t_85___6Vo_", [SimpleSort("VLP___I")])))
+          , Arg("eRrc_iI4fL6", SimpleSort("O_2H3Q"))
+          , Arg("e_116", RefSort(FunctionSort([], SimpleSort("Void"))))
+          , Arg("gR_", RefSort(SimpleSort("p5cI8")))
+          , Arg("hPKn7i", FunctionSort([], SimpleSort("Void")))
+          , Arg("j9J5_V___1", GenericSort("cC1", [SimpleSort("et_P_d45UW_")]))
+          , Arg("VLP___I", FunctionSort([], SimpleSort("Void")))
+          , Arg("cC1", SimpleSort("p5cI8"))
+          , Arg("VLP___I", SimpleSort("hPKn7i"))
+          ]
+        , EmailFunctionCall(EmailCall("l23__", []))
+        )
+      ]
+    )
+  , ACPolicy(
+      PolicyOr(
+        PolicyOr(
+          PolicyOr(
+            PolicyAnd(PolicyAnd(Name("t_85___6Vo_"), Name("j9J5_V___1")), Name("hPKn7i"))
+          , PolicyAnd(Name("O"), Name("gR_"))
+          )
+        , PolicyAnd(Name("t_85___6Vo_"), Name("N__Q463TU2_"))
+        )
+      , PolicyAnd(
+          PolicyAnd(
+            PolicyAnd(
+              PolicyAnd(PolicyAnd(Name("j9J5_V___1"), Name("l23__")), Name("cC1"))
+            , Name("cC1")
+            )
+          , Name("v3c3qUE")
+          )
+        , Name("gR_")
+        )
+      )
+    )
+  ]
+)
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/j_28374crashed/program.app
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/j_28374crashed/program.app	Mon Jul  2 11:52:01 2012	(r25123)
@@ -0,0 +1,279 @@
+module ._/_91k-DI_K.
+test
+
+{
+  goto lqOE();
+  if ( {} )
+  {
+  }
+  else
+  {
+  }
+  validate
+  (
+  []
+  ,
+  renderemail
+  (
+  hPKn7i
+  (
+  )
+  )
+  )
+  ;
+  schedule
+  {}
+  for
+  !
+  rendertemplate
+  (
+  L_WypGe__kG[]
+  )
+  ;
+  var hPKn7i : function ( ) : Void := true.O
+  for ( Cx1UwiX___6 : eRrc_iI4fL6<O> in  /  ^{1}?  / .gR_() )
+  {
+  }
+  try
+  {
+  }
+  catch
+  (
+  N__Q463TU2_
+  :
+  Ref<e_116>
+  )
+  {
+  }
+  case ( rendertemplate ( eqGMis ) [ XM_1_3_ completions matching X.SmEE_F.BDJ : function.e_116():Void(*,) ] * email(v3c3qUE()).O_2H3Q() ) {
+  }
+  var N__Q463TU2_ := {}
+  function():Cx1UwiX___6{}.p5cI8;
+}
+imports zq/__Co7i_47/2_F
+predicate
+YJ
+(
+e_116 : Ref<function():Void>
+)
+{
+Or
+[ false | p5cI8 : et_P_d45UW_ in function.cC1():Void() ]
+}
+auto procedure O_2H3Q ( qS43375 : t_85___6Vo_<YJ<K4Xdv_N_47U>> ) {
+  view {
+  }
+  disabled {
+    {
+      {
+      }
+    }
+  }
+  who {
+    if ( function.hPKn7i():e_116(*,) )
+      5214 as VLP___I<O_2H3Q>
+      +
+      sendemail
+      (
+      VLP___I
+      (
+      )
+      ) else
+    List<N__Q463TU2_>().eRrc_iI4fL6
+  }
+  disabled {
+    {
+      {
+      }
+    }
+  }
+}
+extend procedure l23__ ( O : function ( ) : Ref<cC1> ) {
+  disabled {
+    {
+      {
+      }
+    }
+  }
+  who {
+    [ function():O_2H3Q{}.K4Xdv_N_47U() | K4Xdv_N_47U : hPKn7i in et_P_d45UW_<YJ>{} ]
+  }
+  processed
+  {
+  }
+  processed
+  {
+  }
+  processed
+  {
+  }
+  who {
+    email
+    (
+    YJ
+    (
+    )
+    )
+  }
+  processed
+  {
+  }
+  view {
+  }
+  disabled {
+    {
+      {
+      }
+    }
+  }
+  when {
+    VLP___I()
+  }
+}
+test
+p5cI8
+{
+  function.et_P_d45UW_():t_85___6Vo_(*,) as Ref<t_85___6Vo_<VLP___I>> * function.YJ():j9J5_V___1(*,);
+  if ( [] )
+  {
+  }
+  else
+  {
+  }
+  rendertemplate ( VZB4_4O48V4()[] ) != function.l23__():VLP___I();
+  for ( p5cI8 : VLP___I<l23__> )
+  {
+  }
+  if ( [ ! e_22Oc____f completions matching X.SmEE_F.BDJ : true <  /  ^??  / .VLP___I() | K4Xdv_N_47U : Ref<function():Void> in [].gR_ order by  /  (?<!(?<!\Q/\E|empty{8,23}+){8,}|G){72}|(?<=^{23}+|\B++|^|.|\Q/\E{4,}+)*  / .hPKn7i() desc limit {} offset email ( p5cI8 ( ) ) <= global.VLP___I != global.N__Q463TU2_ ] [ And [ function():Void{} >= gR_ | Cx1UwiX___6 : et_P_d45UW_<eRrc_iI4fL6> in And [ true | e_116 : Ref<N__Q463TU2_> in VLP___I() where null limit false ] / function():cC1{} - sendemail ( t_85___6Vo_ ( ) ) where N__Q463TU2_() ] ] )
+  {
+  }
+  else
+  {
+  }
+  case ( List<O<j9J5_V___1>>() * function():eRrc_iI4fL6{} in -3 ) {
+  }
+}
+access
+control
+policy
+v3c3qUE
+access control rules
+  v3c3qUE
+  predicate
+  K4Xdv_N_47U
+  (
+  O : function ( ) : O
+  ,
+  l23__ : Ref<qS43375>
+  ,
+  K4Xdv_N_47U : function ( ) : l23__
+  ,
+  j9J5_V___1 : Ref<O<O>>
+  ,
+  p5cI8 : e_116
+  ,
+  e_116 : function ( ) : Void
+  ,
+  Cx1UwiX___6 : Ref<function():Void>
+  )
+  {
+  sendemail
+  (
+  j9J5_V___1
+  (
+  )
+  )
+  }
+  rule qS43375 f* (  ) {
+    1
+  }
+  predicate
+  e_116
+  (
+  )
+  {
+  function.YJ():Void()
+  }
+  principal
+  is
+  O_2H3Q
+  with
+  credentials
+  lqOE
+  rule YJ {
+    []
+  }
+  principal
+  is
+  qS43375
+  with
+  credentials
+  p5cI8
+  predicate
+  O_2H3Q
+  (
+  qS43375 : function ( ) : K4Xdv_N_47U
+  )
+  {
+  Or
+  [ qS43375() | N__Q463TU2_ : eRrc_iI4fL6 in [].O_2H3Q is a j9J5_V___1 && true as function ( ) : K4Xdv_N_47U + [] where false ]
+  }
+  predicate
+  O_2H3Q
+  (
+  l23__ : YJ
+  ,
+  eRrc_iI4fL6 : Ref<t_85___6Vo_<VLP___I>>
+  ,
+  eRrc_iI4fL6 : O_2H3Q
+  ,
+  e_116 : Ref<function():Void>
+  ,
+  gR_ : Ref<p5cI8>
+  ,
+  hPKn7i : function ( ) : Void
+  ,
+  j9J5_V___1 : cC1<et_P_d45UW_>
+  ,
+  VLP___I : function ( ) : Void
+  ,
+  cC1 : p5cI8
+  ,
+  VLP___I : hPKn7i
+  )
+  {
+  email
+  (
+  l23__
+  (
+  )
+  )
+  }
+access
+control
+policy
+t_85___6Vo_
+AND
+j9J5_V___1
+AND
+hPKn7i
+OR
+O
+AND
+gR_
+OR
+t_85___6Vo_
+AND
+N__Q463TU2_
+OR
+j9J5_V___1
+AND
+l23__
+AND
+cC1
+AND
+cC1
+AND
+v3c3qUE
+AND
+gR_
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/j_28374crashed/strategyResult.txt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/j_28374crashed/strategyResult.txt	Mon Jul  2 11:52:01 2012	(r25123)
@@ -0,0 +1,40 @@
+
+Analyzing: TestFolder/program.app
+Explicitly importing main file: program  
+WebDSL: rewriting failed, trace:
+	editor_analyze1_0_0
+	editor_analyze1_0_0
+	editor_analyze_0_0
+	editor_analyze_work_0_0
+	in_typechecking_phase_1_0
+	dr_scope_1_1
+	dr_scope_1_1
+	declare_globals_0_0
+	typecheck_declare_0_0
+	log_time_1_1
+	declare_all_0_0
+	dr_scope_1_1
+	alltd_1_0
+	declare_0_0
+	declare_procedure_0_0
+[ WebDSL | critical ] Internal error: with clause failed unexpectedly in strategy 'declare-procedure'
+           AutoProcedure("O_2H3Q",Arg("qS43375",GenericSort("t_85___6Vo_",[GenericSort("YJ",[SimpleSort("K4Xdv_N_47U")])])),[ProcedureView([]),ProcedureDisabled(Block([Block([])])),ProcedureWho(IfExp(FunctionRefCallPartial(FunctionRef("hPKn7i",[],SimpleSort("e_116")),[]),Add(Cast(Int("5214"),GenericSort("VLP___I",[SimpleSort("O_2H3Q")])),SendEmailFunctionCall(EmailCall("VLP___I",[]))),FieldAccess(TypedListCreation(SimpleSort("N__Q463TU2_"),[]),"eRrc_iI4fL6"))),ProcedureDisabled(Block([Block([])]))])Analyzing: TestFolder/program.app
+Explicitly importing main file: program  
+WebDSL: rewriting failed, trace:
+	editor_analyze1_0_0
+	editor_analyze1_0_0
+	editor_analyze_0_0
+	editor_analyze_work_0_0
+	in_typechecking_phase_1_0
+	dr_scope_1_1
+	dr_scope_1_1
+	declare_globals_0_0
+	typecheck_declare_0_0
+	log_time_1_1
+	declare_all_0_0
+	dr_scope_1_1
+	alltd_1_0
+	declare_0_0
+	declare_procedure_0_0
+[ WebDSL | critical ] Internal error: with clause failed unexpectedly in strategy 'declare-procedure'
+           AutoProcedure("O_2H3Q",Arg("qS43375",GenericSort("t_85___6Vo_",[GenericSort("YJ",[SimpleSort("K4Xdv_N_47U")])])),[ProcedureView([]),ProcedureDisabled(Block([Block([])])),ProcedureWho(IfExp(FunctionRefCallPartial(FunctionRef("hPKn7i",[],SimpleSort("e_116")),[]),Add(Cast(Int("5214"),GenericSort("VLP___I",[SimpleSort("O_2H3Q")])),SendEmailFunctionCall(EmailCall("VLP___I",[]))),FieldAccess(TypedListCreation(SimpleSort("N__Q463TU2_"),[]),"eRrc_iI4fL6"))),ProcedureDisabled(Block([Block([])]))])
\ No newline at end of file

From oskarvanrest at gmail.com  Mon Jul  2 14:18:02 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 02 Jul 2012 12:18:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25124 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/customCode
Message-ID: <20120702121802.EAE6FCC146@mx4.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul  2 12:18:01 2012
New Revision: 25124
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25124&sc=1

Log:


Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/customCode/CustomCreateNodePlate.java

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/customCode/CustomCreateNodePlate.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/customCode/CustomCreateNodePlate.java	Mon Jul  2 11:52:01 2012	(r25123)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/customCode/CustomCreateNodePlate.java	Mon Jul  2 12:18:01 2012	(r25124)
@@ -18,7 +18,7 @@
 			public PointList getPolygonPoints() {
 				PointList points = new PointList(6);
 				Rectangle anchRect = getHandleBounds();
-				final int space = 10;
+				final int space = 9;
 				Point topLeft = new Point(anchRect.x + space, anchRect.y + space); // top-left
 				points.addPoint(topLeft);
 				points.addPoint(anchRect.x + anchRect.width - space, anchRect.y + space); // top-right

From oskarvanrest at gmail.com  Mon Jul  2 14:18:20 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 02 Jul 2012 12:18:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25125 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model
Message-ID: <20120702121820.7070A108C037@mx3.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul  2 12:18:20 2012
New Revision: 25125
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25125&sc=1

Log:
AlternativeBranch figure

Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen	Mon Jul  2 12:18:01 2012	(r25124)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen	Mon Jul  2 12:18:20 2012	(r25125)
@@ -661,7 +661,7 @@
       <viewmap
           xsi:type="gmfgen:InnerClassViewmap"
           className="AlternativeBranchFigure"
-          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class AlternativeBranchFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fAlternativeBranchNodesCompartmentFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public AlternativeBranchFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 8;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setLineWidth(0);&#xA;this.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(202)&#xA;, getMap
 Mode().DPtoLP(82)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fAlternativeBranchNodesCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();&#xA;&#x9;fAlternativeBranchNodesCompartmentFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;fAlternativeBranchNodesCompartmentFigure.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFAlternativeBranchNodesCompartmentFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFAlternativeBranchNodesCompartmentFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFAlternativeBranchNodesCompartmentFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFAlternativeBranchNodesCompartmentFigure.horizontalIndent = 0;&#xA;constraintFAlternativeBranchNodesCompartmentFigure.horizontalSpan = 1;&#xA;
 constraintFAlternativeBranchNodesCompartmentFigure.verticalSpan = 1;&+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class AlternativeBranchFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fAlternativeBranchNodesCompartmentFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public AlternativeBranchFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 8;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setLineWidth(0);&#xA;this.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(202)&#xA;, getMap
 Mode().DPtoLP(82)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fAlternativeBranchNodesCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();&#xA;&#x9;fAlternativeBranchNodesCompartmentFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;fAlternativeBranchNodesCompartmentFigure.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFAlternativeBranchNodesCompartmentFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFAlternativeBranchNodesCompartmentFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFAlternativeBranchNodesCompartmentFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFAlternativeBranchNodesCompartmentFigure.horizontalIndent = 0;&#xA;constraintFAlternativeBranchNodesCompartmentFigure.horizontalSpan = 1;&#xA;
 constraintFAlternativeBranchNodesCompartmentFigure.verticalSpan = 1;& tangle0.setBorder(createBorder0());&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintAlternativeNodeBottomRectangle0 = new org.eclipse.draw2d.GridData();&#xA;constraintAlternativeNodeBottomRectangle0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintAlternativeNodeBottomRectangle0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintAlternativeNodeBottomRectangle0.horizontalIndent = 0;&#xA;constraintAlternativeNodeBottomRectangle0.horizontalSpan = 1;&#xA;constraintAlternativeNodeBottomRectangle0.verticalSpan = 1;&#xA;constraintAlternativeNodeBottomRectangle0.grabExcessHorizontalSpace = true;&#xA;constraintAlternativeNodeBottomRectangle0.grabExcessVerticalSpace = true;&#xA;this.add(alternativeNodeBottomRectangle0, constraintAlternativeNodeBottomRectangle0);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.
 CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&         <attributes
             xsi:type="gmfgen:ResizeConstraints"/>
       </viewmap>
@@ -736,7 +736,11 @@
       <viewmap
           xsi:type="gmfgen:InnerClassViewmap"
           className="ComBEConnectionFigure"
-          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ComBEConnectionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ComBEConnectionFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ComBEConnectionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ComBEConnectionFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
+        <attributes
+            xsi:type="gmfgen:StyleAttributes"
+            fixedForeground="true"/>
+      </viewmap>
       <modelFacet
           xsi:type="gmfgen:FeatureLinkModelFacet">
         <metaFeature
@@ -757,7 +761,11 @@
       <viewmap
           xsi:type="gmfgen:InnerClassViewmap"
           className="ComBEConnectionFigure"
-          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ComBEConnectionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ComBEConnectionFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ComBEConnectionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ComBEConnectionFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
+        <attributes
+            xsi:type="gmfgen:StyleAttributes"
+            fixedForeground="true"/>
+      </viewmap>
       <modelFacet
           xsi:type="gmfgen:FeatureLinkModelFacet">
         <metaFeature
@@ -778,7 +786,11 @@
       <viewmap
           xsi:type="gmfgen:InnerClassViewmap"
           className="ComBEConnectionFigure"
-          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ComBEConnectionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ComBEConnectionFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ComBEConnectionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ComBEConnectionFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
+        <attributes
+            xsi:type="gmfgen:StyleAttributes"
+            fixedForeground="true"/>
+      </viewmap>
       <modelFacet
           xsi:type="gmfgen:FeatureLinkModelFacet">
         <metaFeature

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph	Mon Jul  2 12:18:01 2012	(r25124)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph	Mon Jul  2 12:18:20 2012	(r25125)
@@ -76,6 +76,30 @@
               xsi:type="gmfgraph:ConstantColor"
               value="black"/>
         </children>
+        <children
+            xsi:type="gmfgraph:Rectangle"
+            name="AlternativeNodeBottomRectangle"
+            outline="false"
+            lineWidth="0">
+          <layoutData
+              xsi:type="gmfgraph:GridLayoutData"
+              grabExcessHorizontalSpace="true"
+              grabExcessVerticalSpace="true"/>
+          <foregroundColor
+              xsi:type="gmfgraph:ConstantColor"
+              value="black"/>
+          <backgroundColor
+              xsi:type="gmfgraph:RGBColor"
+              red="179"
+              green="211"
+              blue="69"/>
+          <preferredSize
+              dx="182"
+              dy="27"/>
+          <border
+              xsi:type="gmfgraph:CustomBorder"
+              qualifiedClassName="ComBE.diagram.customCode.CustomLineBorder"/>
+        </children>
       </actualFigure>
       <accessors
           accessor="getAlternativeBranchNodesCompartmentFigure"
@@ -405,7 +429,11 @@
       <actualFigure
           xsi:type="gmfgraph:PolylineConnection"
           name="ComBEConnectionFigure"
-          targetDecoration="//@figures.0/@figures.0"/>
+          targetDecoration="//@figures.0/@figures.0">
+        <foregroundColor
+            xsi:type="gmfgraph:ConstantColor"
+            value="black"/>
+      </actualFigure>
     </descriptors>
     <descriptors
         name="EmptyNodeFigure">

From oskarvanrest at gmail.com  Mon Jul  2 14:36:23 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 02 Jul 2012 12:36:23 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25126 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model
Message-ID: <20120702123623.7EA8B2B8016@mx2.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul  2 12:36:23 2012
New Revision: 25126
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25126&sc=1

Log:
AlternativeBranch [ ]

Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen	Mon Jul  2 12:18:20 2012	(r25125)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen	Mon Jul  2 12:36:23 2012	(r25126)
@@ -661,7 +661,7 @@
       <viewmap
           xsi:type="gmfgen:InnerClassViewmap"
           className="AlternativeBranchFigure"
-          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class AlternativeBranchFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fAlternativeBranchNodesCompartmentFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public AlternativeBranchFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 8;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setLineWidth(0);&#xA;this.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(202)&#xA;, getMap
 Mode().DPtoLP(82)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fAlternativeBranchNodesCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();&#xA;&#x9;fAlternativeBranchNodesCompartmentFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;fAlternativeBranchNodesCompartmentFigure.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFAlternativeBranchNodesCompartmentFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFAlternativeBranchNodesCompartmentFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFAlternativeBranchNodesCompartmentFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFAlternativeBranchNodesCompartmentFigure.horizontalIndent = 0;&#xA;constraintFAlternativeBranchNodesCompartmentFigure.horizontalSpan = 1;&#xA;
 constraintFAlternativeBranchNodesCompartmentFigure.verticalSpan = 1;& tangle0.setBorder(createBorder0());&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintAlternativeNodeBottomRectangle0 = new org.eclipse.draw2d.GridData();&#xA;constraintAlternativeNodeBottomRectangle0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintAlternativeNodeBottomRectangle0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintAlternativeNodeBottomRectangle0.horizontalIndent = 0;&#xA;constraintAlternativeNodeBottomRectangle0.horizontalSpan = 1;&#xA;constraintAlternativeNodeBottomRectangle0.verticalSpan = 1;&#xA;constraintAlternativeNodeBottomRectangle0.grabExcessHorizontalSpace = true;&#xA;constraintAlternativeNodeBottomRectangle0.grabExcessVerticalSpace = true;&#xA;this.add(alternativeNodeBottomRectangle0, constraintAlternativeNodeBottomRectangle0);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.
 CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class AlternativeBranchFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fAlternativeBranchNodesCompartmentFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public AlternativeBranchFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 8;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setLineWidth(0);&#xA;this.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(202)&#xA;, getMap
 Mode().DPtoLP(82)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fAlternativeBranchNodesCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();&#xA;&#x9;fAlternativeBranchNodesCompartmentFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;fAlternativeBranchNodesCompartmentFigure.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFAlternativeBranchNodesCompartmentFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFAlternativeBranchNodesCompartmentFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFAlternativeBranchNodesCompartmentFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFAlternativeBranchNodesCompartmentFigure.horizontalIndent = 0;&#xA;constraintFAlternativeBranchNodesCompartmentFigure.horizontalSpan = 1;&#xA;
 constraintFAlternativeBranchNodesCompartmentFigure.verticalSpan = 1;& raw2d.geometry.Dimension(getMapMode().DPtoLP(182)&#xA;, getMapMode().DPtoLP(27)&#xA;));&#xA;alternativeBranchBottomRectangle0.setBorder(createBorder0());&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintAlternativeBranchBottomRectangle0 = new org.eclipse.draw2d.GridData();&#xA;constraintAlternativeBranchBottomRectangle0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintAlternativeBranchBottomRectangle0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintAlternativeBranchBottomRectangle0.horizontalIndent = 0;&#xA;constraintAlternativeBranchBottomRectangle0.horizontalSpan = 1;&#xA;constraintAlternativeBranchBottomRectangle0.verticalSpan = 1;&#xA;constraintAlternativeBranchBottomRectangle0.grabExcessHorizontalSpace = true;&#xA;constraintAlternativeBranchBottomRectangle0.grabExcessVerticalSpace = true;&#xA;this.add(alternativeBranchBottomRectangle0, constraintAlternativeBranchBottomRectangle0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.Grid
 Layout layoutAlternativeBranchBottomRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutAlternativeBranchBottomRectangle0.numCo bel1.horizontalSpan = 1;&#xA;constraintAlternativeBranchBottomLabel1.verticalSpan = 1;&#xA;constraintAlternativeBranchBottomLabel1.grabExcessHorizontalSpace = true;&#xA;constraintAlternativeBranchBottomLabel1.grabExcessVerticalSpace = true;&#xA;alternativeBranchBottomRectangle0.add(alternativeBranchBottomLabel1, constraintAlternativeBranchBottomLabel1);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getAlternativeBranchNodesCompartmentFigure() {&#xA;&#x9;&#x9;return fAlternativeBranchNodesCompartmentFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static f
 inal org.eclipse.swt.graphics.Color ALTERNATIVEBRANCHBOTTOMRECTANGLE0_BACK = new org.eclipse.swt.graphics.Color(null, 179, 211, 69);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphi         <attributes
             xsi:type="gmfgen:ResizeConstraints"/>
       </viewmap>

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph	Mon Jul  2 12:18:20 2012	(r25125)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph	Mon Jul  2 12:36:23 2012	(r25126)
@@ -78,13 +78,15 @@
         </children>
         <children
             xsi:type="gmfgraph:Rectangle"
-            name="AlternativeNodeBottomRectangle"
+            name="AlternativeBranchBottomRectangle"
             outline="false"
             lineWidth="0">
           <layoutData
               xsi:type="gmfgraph:GridLayoutData"
               grabExcessHorizontalSpace="true"
               grabExcessVerticalSpace="true"/>
+          <layout
+              xsi:type="gmfgraph:GridLayout"/>
           <foregroundColor
               xsi:type="gmfgraph:ConstantColor"
               value="black"/>
@@ -96,9 +98,23 @@
           <preferredSize
               dx="182"
               dy="27"/>
+          <font
+              xsi:type="gmfgraph:BasicFont"
+              faceName="ComBEFont"
+              height="7"
+              style="BOLD"/>
           <border
               xsi:type="gmfgraph:CustomBorder"
               qualifiedClassName="ComBE.diagram.customCode.CustomLineBorder"/>
+          <children
+              xsi:type="gmfgraph:Label"
+              name="AlternativeBranchBottomLabel"
+              text="[ ]">
+            <layoutData
+                xsi:type="gmfgraph:GridLayoutData"
+                grabExcessHorizontalSpace="true"
+                grabExcessVerticalSpace="true"/>
+          </children>
         </children>
       </actualFigure>
       <accessors

From andre.s.d.vieira at gmail.com  Mon Jul  2 15:55:57 2012
From: andre.s.d.vieira at gmail.com (Andre Vieira)
Date: Mon, 02 Jul 2012 13:55:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25127 - in
	spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2:
	r_1320 r_1320crashed
Message-ID: <20120702135557.E07BB2B8016@mx2.tudelft.nl>

Author: AndreVieira
Date: Mon Jul  2 13:55:57 2012
New Revision: 25127
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25127&sc=1

Log:


Added:
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/amb0.app
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/amb0.aterm
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/amb1.app
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/amb1.aterm
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/amb2.app
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/amb2.aterm
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320crashed/
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320crashed/AST.aterm
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320crashed/program.app
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320crashed/strategyResult.txt

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/amb0.app
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/amb0.app	Mon Jul  2 13:55:57 2012	(r25127)
@@ -0,0 +1,8 @@
+if ( e___() )
+  WFn_Q_b_hlD{} as n2<p4> else
+function.
+nM_QE5__5_C
+(
+)
+:
+Void := ycKDl__1 < OO1fJay6gc_ > {} is a WFn_Q_b_hlD
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/amb0.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/amb0.aterm	Mon Jul  2 13:55:57 2012	(r25127)
@@ -0,0 +1,31 @@
+amb(
+  [ Assignment(
+      IfExp(
+        ThisCall("e___", [])
+      , Cast(
+          ObjectCreation(SimpleSort("WFn_Q_b_hlD"), [])
+        , GenericSort("n2", [SimpleSort("p4")])
+        )
+      , FunctionRef("nM_QE5__5_C", [], SimpleSort("Void"))
+      )
+    , IsA(
+        ObjectCreation(GenericSort("ycKDl__1", [SimpleSort("OO1fJay6gc_")]), [])
+      , SimpleSort("WFn_Q_b_hlD")
+      )
+    )
+  , Assignment(
+      IfExp(
+        ThisCall("e___", [])
+      , Cast(
+          ObjectCreation(SimpleSort("WFn_Q_b_hlD"), [])
+        , GenericSort("n2", [SimpleSort("p4")])
+        )
+      , FunctionRef("nM_QE5__5_C", [], SimpleSort("Void"))
+      )
+    , LargerThan(
+        SmallerThan(Var("ycKDl__1"), Var("OO1fJay6gc_"))
+      , IsA(SetCreation([]), SimpleSort("WFn_Q_b_hlD"))
+      )
+    )
+  ]
+)
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/amb1.app
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/amb1.app	Mon Jul  2 13:55:57 2012	(r25127)
@@ -0,0 +1 @@
+function. nM_QE5__5_C ( ) : Void := ycKDl__1<OO1fJay6gc_>{} is a WFn_Q_b_hlD
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/amb1.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/amb1.aterm	Mon Jul  2 13:55:57 2012	(r25127)
@@ -0,0 +1,17 @@
+amb(
+  [ Assignment(
+      FunctionRef("nM_QE5__5_C", [], SimpleSort("Void"))
+    , IsA(
+        ObjectCreation(GenericSort("ycKDl__1", [SimpleSort("OO1fJay6gc_")]), [])
+      , SimpleSort("WFn_Q_b_hlD")
+      )
+    )
+  , Assignment(
+      FunctionRef("nM_QE5__5_C", [], SimpleSort("Void"))
+    , LargerThan(
+        SmallerThan(Var("ycKDl__1"), Var("OO1fJay6gc_"))
+      , IsA(SetCreation([]), SimpleSort("WFn_Q_b_hlD"))
+      )
+    )
+  ]
+)
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/amb2.app
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/amb2.app	Mon Jul  2 13:55:57 2012	(r25127)
@@ -0,0 +1,8 @@
+if ( e___() )
+  WFn_Q_b_hlD{} as n2<p4> else
+function.
+nM_QE5__5_C
+(
+)
+:
+Void := ycKDl__1 < OO1fJay6gc_ > {} is a WFn_Q_b_hlD
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/amb2.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320/amb2.aterm	Mon Jul  2 13:55:57 2012	(r25127)
@@ -0,0 +1,31 @@
+amb(
+  [ Assignment(
+      IfExp(
+        ThisCall("e___", [])
+      , Cast(
+          ObjectCreation(SimpleSort("WFn_Q_b_hlD"), [])
+        , GenericSort("n2", [SimpleSort("p4")])
+        )
+      , FunctionRef("nM_QE5__5_C", [], SimpleSort("Void"))
+      )
+    , LargerThan(
+        SmallerThan(Var("ycKDl__1"), Var("OO1fJay6gc_"))
+      , IsA(SetCreation([]), SimpleSort("WFn_Q_b_hlD"))
+      )
+    )
+  , IfExp(
+      ThisCall("e___", [])
+    , Cast(
+        ObjectCreation(SimpleSort("WFn_Q_b_hlD"), [])
+      , GenericSort("n2", [SimpleSort("p4")])
+      )
+    , Assignment(
+        FunctionRef("nM_QE5__5_C", [], SimpleSort("Void"))
+      , IsA(
+          ObjectCreation(GenericSort("ycKDl__1", [SimpleSort("OO1fJay6gc_")]), [])
+        , SimpleSort("WFn_Q_b_hlD")
+        )
+      )
+    )
+  ]
+)
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320crashed/AST.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320crashed/AST.aterm	Mon Jul  2 13:55:57 2012	(r25127)
@@ -0,0 +1,169 @@
+Application(
+  Qualified(Qualified(Qualified("CM", "h33p_u3_n_"), "x569_"), "CM")
+, [ ACPolicy(
+      PolicyOr(
+        PolicyOr(PolicyOr(Name("OO1fJay6gc_"), Name("OO1fJay6gc_")), Name("S"))
+      , PolicyAnd(Name("e___"), Name("p4"))
+      )
+    )
+  , AccessControlDefinition(
+      None()
+    , [ AccessControlRule(
+          "n2"
+        , "*"
+        , MatchArgs(
+            [ Add(FieldAccess(ValidateTemplateFunctionCall(TemplateCallProps("t_R_d1Lc_", [])), "Q_7"), False())
+            , ObjectCreation(FunctionSort([], SimpleSort("J")), [])
+            , ListCreation([])
+            , ThisCall("rendertemplate", [ObjectCreation(SimpleSort("validationContext"), [])])
+            , RenderTemplateFunctionCall(TemplateCallProps("cH12D", []))
+            , Sub(
+                Call(TypedListCreation(SimpleSort("WFn_Q_b_hlD"), []), "S", [])
+              , String(""&I"")
+              )
+            ]
+          , Some("*")
+          )
+        , Not(
+            Not(
+              AndForExp(
+                ForExp(
+                  Not(
+                    Suggest(
+                      "H26V_z__7rJ"
+                    , AutoComplete()
+                    , [SuggestTerm(FieldsConstraint(["Bu3.Du.F__3___L_.Y66_nuCV"]), ListCreation([]))]
+                    )
+                  )
+                , "CM"
+                , RefSort(SimpleSort("OO1fJay6gc_"))
+                , FunctionRefCallPartial(FunctionRef("x569_", [], SimpleSort("J")), [])
+                , FilterNoWhereNoLimit(
+                    OrderDescending(Suggest("J_V", SpellCheck(), [Similarity(SetCreation([]))]))
+                  )
+                )
+              )
+            )
+          )
+        , []
+        )
+      , AccessControlPrincipal(
+          "ycKDl__1"
+        , ["WFn_Q_b_hlD", "S", "Q_7", "J", "v", "r"]
+        )
+      , AccessControlRule(
+          "nM_QE5__5_C"
+        , "MJoE491"
+        , MatchArgs([], None())
+        , FunctionRef("A", [], SimpleSort("nM_QE5__5_C"))
+        , []
+        )
+      , AccessControlPointcut(
+          "Q_7"
+        , [ Arg("p4", GenericSort("h33p_u3_n_", [SimpleSort("ycKDl__1")]))
+          , Arg("h33p_u3_n_", SimpleSort("WFn_Q_b_hlD"))
+          , Arg("x569_", FunctionSort([], SimpleSort("i64J_3")))
+          , Arg("c_tT_", FunctionSort([], SimpleSort("OO1fJay6gc_")))
+          , Arg("S", RefSort(GenericSort("i64J_3", [SimpleSort("i64J_3")])))
+          , Arg("WFn_Q_b_hlD", SimpleSort("c_tT_"))
+          , Arg("OO1fJay6gc_", SimpleSort("n2"))
+          ]
+        , [ AccessControlPointcutElement("ycKDl__1", "*", [], Some("*"))
+          , AccessControlPointcutElement("WFn_Q_b_hlD", "hK_*", ["i64J_3"], Some("*"))
+          ]
+        )
+      , Predicate(
+          "p4"
+        , [ Arg("h33p_u3_n_", GenericSort("i64J_3", [SimpleSort("c_tT_")]))
+          , Arg("WFn_Q_b_hlD", RefSort(SimpleSort("nM_QE5__5_C")))
+          , Arg("p4", SimpleSort("r"))
+          ]
+        , EmailFunctionCall(EmailCall("Q_7", []))
+        )
+      ]
+    )
+  , AccessControlDefinition(
+      None()
+    , [ Predicate(
+          "ycKDl__1"
+        , [ Arg("S", FunctionSort([], SimpleSort("Void")))
+          , Arg("c_tT_", FunctionSort([], SimpleSort("r")))
+          , Arg("A", RefSort(FunctionSort([], SimpleSort("Void"))))
+          , Arg("L", GenericSort("OO1fJay6gc_", [SimpleSort("ycKDl__1")]))
+          , Arg("v", RefSort(FunctionSort([], SimpleSort("e___"))))
+          , Arg("S", SimpleSort("i64J_3"))
+          , Arg("v", SimpleSort("ycKDl__1"))
+          ]
+        , GlobalVar("nM_QE5__5_C")
+        )
+      , AccessControlPointcut("p4", [], [])
+      , Predicate(
+          "L"
+        , []
+        , Assignment(
+            IfExp(
+              ThisCall("e___", [])
+            , Cast(
+                ObjectCreation(SimpleSort("WFn_Q_b_hlD"), [])
+              , GenericSort("n2", [SimpleSort("p4")])
+              )
+            , FunctionRef("nM_QE5__5_C", [], SimpleSort("Void"))
+            )
+          , LargerThan(
+              SmallerThan(Var("ycKDl__1"), Var("OO1fJay6gc_"))
+            , IsA(SetCreation([]), SimpleSort("WFn_Q_b_hlD"))
+            )
+          )
+        )
+      , AccessControlPointcut("Q_7", [], [])
+      , Predicate(
+          "CM"
+        , []
+        , HighlightTags(
+            TypedListCreation(GenericSort("CM", [SimpleSort("CM")]), [])
+          , Not(Suggest("I1355rJ_LU5", AutoComplete(), [Similarity(ListCreation([]))]))
+          , "Z5R_Em4_83g.FPJj_.J_u_"
+          , LargerThanOrEqual(
+              TypedListCreation(
+                RefSort(RefSort(GenericSort("J", [SimpleSort("v")])))
+              , []
+              )
+            , InColl(
+                FunctionRefCall(FunctionRef("h33p_u3_n_", [], SimpleSort("Void")), [])
+              , Var("e___")
+              )
+            )
+          , EmailFunctionCall(EmailCall("r", []))
+          )
+        )
+      , AccessControlRule(
+          "A"
+        , "*"
+        , MatchArgs([], Some("*"))
+        , SearcherRefMod(
+            Suggest(
+              "R49A7Tw_QT"
+            , SpellCheck()
+            , [SuggestTerm(FieldsConstraint(["G__M_W_nGG_"]), ListCreation([]))]
+            )
+          , [SearchAttributes([])]
+          )
+        , []
+        )
+      , AccessControlRule(
+          "r_n_j_13848"
+        , "*"
+        , MatchArgs([], None())
+        , Mul(
+            Mod(EmailFunctionCall(EmailCall("L", [])), RenderTemplateFunctionCall(TemplateCallNoArgs("t")))
+          , Int("5")
+          )
+        , []
+        )
+      , AccessControlPrincipal("WFn_Q_b_hlD", ["i64J_3"])
+      , AccessControlPrincipal("ycKDl__1", ["p4"])
+      ]
+    )
+  , ACPolicy(Name("i64J_3"))
+  ]
+)
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320crashed/program.app
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320crashed/program.app	Mon Jul  2 13:55:57 2012	(r25127)
@@ -0,0 +1,180 @@
+application CM.h33p_u3_n_.x569_.CM
+
+access
+
+control
+
+policy
+
+OO1fJay6gc_
+
+OR
+
+OO1fJay6gc_
+
+OR
+
+S
+
+OR
+
+e___
+
+AND
+
+p4
+
+access control rules
+  rule n2 * ( validatetemplate(t_R_d1Lc_[]).Q_7 + false , function ( ) : J {
+                                                                           } , [] , rendertemplate ( validationContext { } ) , rendertemplate ( cH12D[] ) , List<WFn_Q_b_hlD>().S() - "&I" * ) {
+    ! ! And [ ! H26V_z__7rJ completions matching Bu3.Du.F__3___L_.Y66_nuCV : [
+                                                                             ] | CM : Ref<OO1fJay6gc_> in function.x569_():J(*,) order by J_V corrections similarity {} desc ]
+  }
+  principal
+  is
+  ycKDl__1
+  with
+  credentials
+  WFn_Q_b_hlD
+  ,
+  S
+  ,
+  Q_7
+  ,
+  J
+  ,
+  v
+  ,
+  r
+  rule nM_QE5__5_C MJoE491 (  ) {
+    function. A ( ) : nM_QE5__5_C
+  }
+  pointcut
+  Q_7
+  (
+  p4 : h33p_u3_n_<ycKDl__1>
+  ,
+  h33p_u3_n_ : WFn_Q_b_hlD
+  ,
+  x569_ : function ( ) : i64J_3
+  ,
+  c_tT_ : function ( ) : OO1fJay6gc_
+  ,
+  S : Ref<i64J_3<i64J_3>>
+  ,
+  WFn_Q_b_hlD : c_tT_
+  ,
+  OO1fJay6gc_ : n2
+  )
+  {
+  ycKDl__1
+  *
+  (
+  *
+  )
+  ,
+  WFn_Q_b_hlD
+  hK_*
+  (
+  i64J_3
+  *
+  )
+  }
+  predicate
+  p4
+  (
+  h33p_u3_n_ : i64J_3<c_tT_>
+  ,
+  WFn_Q_b_hlD : Ref<nM_QE5__5_C>
+  ,
+  p4 : r
+  )
+  {
+  email
+  (
+  Q_7
+  (
+  )
+  )
+  }
+
+access control rules
+  predicate
+  ycKDl__1
+  (
+  S : function ( ) : Void
+  ,
+  c_tT_ : function ( ) : r
+  ,
+  A : Ref<function():Void>
+  ,
+  L : OO1fJay6gc_<ycKDl__1>
+  ,
+  v : Ref<function():e___>
+  ,
+  S : i64J_3
+  ,
+  v : ycKDl__1
+  )
+  {
+  global.nM_QE5__5_C
+  }
+  pointcut
+  p4
+  (
+  )
+  {
+  }
+  predicate
+  L
+  (
+  )
+  {
+  if ( e___() )
+    WFn_Q_b_hlD{} as n2<p4> else
+  function.
+  nM_QE5__5_C
+  (
+  )
+  :
+  Void := ycKDl__1<OO1fJay6gc_>{} is a WFn_Q_b_hlD
+  }
+  pointcut
+  Q_7
+  (
+  )
+  {
+  }
+  predicate
+  CM
+  (
+  )
+  {
+  highlight List<CM<CM>>() for ! I1355rJ_LU5 completions similarity [] on Z5R_Em4_83g.FPJj_.J_u_ surround with ( List<Ref<Ref<J<v>>>>() >= function.h33p_u3_n_():Void() in e___ , email ( r ( ) ) )
+  }
+  rule A * ( * ) {
+    ~ R49A7Tw_QT corrections matching G__M_W_nGG_ : [] [ ]
+  }
+  rule r_n_j_13848 * (  ) {
+    email ( L ( ) ) % rendertemplate ( t ) * 5
+  }
+  principal
+  is
+  WFn_Q_b_hlD
+  with
+  credentials
+  i64J_3
+  principal
+  is
+  ycKDl__1
+  with
+  credentials
+  p4
+
+access
+
+control
+
+policy
+
+i64J_3
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320crashed/strategyResult.txt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/r_1320crashed/strategyResult.txt	Mon Jul  2 13:55:57 2012	(r25127)
@@ -0,0 +1,434 @@
+
+Analyzing: TestFolder/program.app
+rename: 0.240 s
+
+* : error: Template with signature t_R_d1Lc_() not defined 
+t_R_d1Lc_[]
+* : error: No property Q_7 defined for String
+validatetemplate(t_R_d1Lc_[]).Q_7
+* : error: Type not defined: J
+J
+* : error: Type cannot be determined for empty untyped list creation.
+[]
+* : error: Type not defined: validationContext
+validationContext
+* : error: No function 'rendertemplate' with signature rendertemplate(validationContext). Available global functions with that name: 
+rendertemplate(validationContext{})
+* : error: Template with signature cH12D() not defined 
+cH12D[]
+* : error: Type not defined: WFn_Q_b_hlD
+WFn_Q_b_hlD
+* : error: No function 'S' for 'List<WFn_Q_b_hlD>()' with signature S()
+List<WFn_Q_b_hlD>().S()
+* : error: Type cannot be determined for empty untyped list creation.
+[]
+* : error: H26V_z__7rJ completions matching Bu3.Du.F__3___L_.Y66_nuCV : [] is not of type Bool
+! H26V_z__7rJ completions matching Bu3.Du.F__3___L_.Y66_nuCV : []
+* : error: Type not defined: OO1fJay6gc_
+OO1fJay6gc_
+* : error: Type not defined: J
+J
+* : error: Type cannot be determined for empty untyped set creation.
+{}
+* : error: collection in for-expression does not contain declared type Ref<OO1fJay6gc_>
+
+[ ! H26V_z__7rJ completions matching Bu3.Du.F__3___L_.Y66_nuCV : [] | CM : Ref<OO1fJay6gc_> in function.x569_():J(*,) order by J_V corrections similarity {} desc ]
+* : error: And-for-expression should contain a collection of Bool type
+And
+[ ! H26V_z__7rJ completions matching Bu3.Du.F__3___L_.Y66_nuCV : [] | CM : Ref<OO1fJay6gc_> in function.x569_():J(*,) order by J_V corrections similarity {} desc ]
+* : error: rule type unknown: rule n2 * ( validatetemplate(t_R_d1Lc_[]).Q_7 + false , function():J{} , [] , rendertemplate(validationContext{}) , rendertemplate ( cH12D[] ) , List<WFn_Q_b_hlD>().S() - "&I" * ) {
+  ! ! And [ ! H26V_z__7rJ completions matching Bu3.Du.F__3___L_.Y66_nuCV : [] | CM : Ref<OO1fJay6gc_> in function.x569_():J(*,) order by J_V corrections similarity {} desc ]
+}
+rule n2 * ( validatetemplate(t_R_d1Lc_[]).Q_7 + false , function():J{} , [] , rendertemplate(validationContext{}) , rendertemplate ( cH12D[] ) , List<WFn_Q_b_hlD>().S() - "&I" * ) {
+  ! ! And [ ! H26V_z__7rJ completions matching Bu3.Du.F__3___L_.Y66_nuCV : [] | CM : Ref<OO1fJay6gc_> in function.x569_():J(*,) order by J_V corrections similarity {} desc ]
+}
+* : error: Entity 'ycKDl__1' does not exist, and cannot be used as principal for access control.
+principal is ycKDl__1 with credentials WFn_Q_b_hlD , S , Q_7 , J , v , r
+* : error: Principal credential 'WFn_Q_b_hlD' is not a property of entity 'ycKDl__1'.
+WFn_Q_b_hlD
+* : error: Principal credential 'WFn_Q_b_hlD' is not compatible with String type.
+WFn_Q_b_hlD
+* : error: Principal credential 'S' is not a property of entity 'ycKDl__1'.
+S
+* : error: Principal credential 'S' is not compatible with String type.
+S
+* : error: Principal credential 'Q_7' is not a property of entity 'ycKDl__1'.
+Q_7
+* : error: Principal credential 'Q_7' is not compatible with String type.
+Q_7
+* : error: Principal credential 'J' is not a property of entity 'ycKDl__1'.
+J
+* : error: Principal credential 'J' is not compatible with String type.
+J
+* : error: Principal credential 'v' is not a property of entity 'ycKDl__1'.
+v
+* : error: Principal credential 'v' is not compatible with String type.
+v
+* : error: Principal credential 'r' is not a property of entity 'ycKDl__1'.
+r
+* : error: Principal credential 'r' is not compatible with String type.
+r
+* : error: Only one access control principal can be defined.
+principal is ycKDl__1 with credentials WFn_Q_b_hlD , S , Q_7 , J , v , r
+* : error: Type not defined: nM_QE5__5_C
+nM_QE5__5_C
+* : error: rule should contain a Bool expression: rule nM_QE5__5_C MJoE491 (  ) {
+  function. A ( ) : nM_QE5__5_C
+}
+rule nM_QE5__5_C MJoE491 (  ) {
+  function. A ( ) : nM_QE5__5_C
+}
+* : error: rule type unknown: rule nM_QE5__5_C MJoE491 (  ) {
+  function. A ( ) : nM_QE5__5_C
+}
+rule nM_QE5__5_C MJoE491 (  ) {
+  function. A ( ) : nM_QE5__5_C
+}
+* : error: Type not defined: ycKDl__1
+ycKDl__1
+* : error: Generic type not defined: h33p_u3_n_<ycKDl__1>
+h33p_u3_n_<ycKDl__1>
+* : error: Type not defined: WFn_Q_b_hlD
+WFn_Q_b_hlD
+* : error: Type not defined: i64J_3
+i64J_3
+* : error: Type not defined: OO1fJay6gc_
+OO1fJay6gc_
+* : error: Type not defined: i64J_3
+i64J_3
+* : error: Generic type not defined: i64J_3<i64J_3>
+i64J_3<i64J_3>
+* : error: Reference argument 'Ref<i64J_3<i64J_3>>' only allowed in formal parameters of pages, templates, or ajax templates
+S : Ref<i64J_3<i64J_3>>
+* : error: Generic type not defined: EntityTypeNamed<c_tT_>
+EntityTypeNamed<c_tT_>
+* : error: Type not defined: n2
+n2
+* : error: pointcut element uses unknown identifier: i64J_3
+WFn_Q_b_hlD hK_* ( i64J_3 * )
+* : error: pointcut element must use pointcut argument: p4
+ycKDl__1 * ( * )
+* : error: pointcut element must use pointcut argument: h33p_u3_n_
+ycKDl__1 * ( * )
+* : error: pointcut element must use pointcut argument: x569_
+ycKDl__1 * ( * )
+* : error: pointcut element must use pointcut argument: c_tT_
+ycKDl__1 * ( * )
+* : error: pointcut element must use pointcut argument: S
+ycKDl__1 * ( * )
+* : error: pointcut element must use pointcut argument: WFn_Q_b_hlD
+ycKDl__1 * ( * )
+* : error: pointcut element must use pointcut argument: OO1fJay6gc_
+ycKDl__1 * ( * )
+* : error: pointcut element must use pointcut argument: p4
+WFn_Q_b_hlD hK_* ( i64J_3 * )
+* : error: pointcut element must use pointcut argument: h33p_u3_n_
+WFn_Q_b_hlD hK_* ( i64J_3 * )
+* : error: pointcut element must use pointcut argument: x569_
+WFn_Q_b_hlD hK_* ( i64J_3 * )
+* : error: pointcut element must use pointcut argument: c_tT_
+WFn_Q_b_hlD hK_* ( i64J_3 * )
+* : error: pointcut element must use pointcut argument: S
+WFn_Q_b_hlD hK_* ( i64J_3 * )
+* : error: pointcut element must use pointcut argument: WFn_Q_b_hlD
+WFn_Q_b_hlD hK_* ( i64J_3 * )
+* : error: pointcut element must use pointcut argument: OO1fJay6gc_
+WFn_Q_b_hlD hK_* ( i64J_3 * )
+* : error: Type not defined: c_tT_
+c_tT_
+* : error: Generic type not defined: i64J_3<c_tT_>
+i64J_3<c_tT_>
+* : error: Type not defined: nM_QE5__5_C
+nM_QE5__5_C
+* : error: Reference argument 'Ref<nM_QE5__5_C>' only allowed in formal parameters of pages, templates, or ajax templates
+WFn_Q_b_hlD : Ref<nM_QE5__5_C>
+* : error: Type not defined: r
+r
+* : error: No email definition for Q_7 ( ).
+Q_7 ( )
+* : error: predicate should contain a Bool expression: predicate p4 ( h33p_u3_n_ : i64J_3<c_tT_> , WFn_Q_b_hlD : Ref<nM_QE5__5_C> ,
+p4 : r ) { email ( Q_7 ( ) ) }
+predicate p4 ( h33p_u3_n_ : i64J_3<c_tT_> , WFn_Q_b_hlD : Ref<nM_QE5__5_C> ,
+p4 : r ) { email ( Q_7 ( ) ) }
+* : error: Type not defined: r
+r
+* : error: Reference argument 'Ref<function():>' only allowed in formal parameters of pages, templates, or ajax templates
+A : Ref<function():Void>
+* : error: Type not defined: ycKDl__1
+ycKDl__1
+* : error: Generic type not defined: OO1fJay6gc_<ycKDl__1>
+OO1fJay6gc_<ycKDl__1>
+* : error: Type not defined: e___
+e___
+* : error: Reference argument 'Ref<function():e___>' only allowed in formal parameters of pages, templates, or ajax templates
+v : Ref<function():e___>
+* : error: Type not defined: i64J_3
+i64J_3
+* : error: Type not defined: ycKDl__1
+ycKDl__1
+* : error: Duplicate name 'S' in argument list.
+S : function ( ) : Void
+* : error: Duplicate name 'v' in argument list.
+v : Ref<function():e___>
+* : error: Duplicate name 'S' in argument list.
+S : i64J_3
+* : error: Duplicate name 'v' in argument list.
+v : ycKDl__1
+* : error: No function 'e___' with signature e___(). Available global functions with that name: 
+e___()
+* : error: Type not defined: WFn_Q_b_hlD
+WFn_Q_b_hlD
+* : error: Generic type not defined: EntityTypeNamed<p4>
+EntityTypeNamed<p4>
+* : error: Generic type not defined: n2<EntityTypeNamed<p4>>
+n2<EntityTypeNamed<p4>>
+WebDSL: rewriting failed, trace:
+	editor_analyze1_0_0
+	editor_analyze1_0_0
+	editor_analyze_0_0
+	editor_analyze_work_0_0
+	in_typechecking_phase_1_0
+	dr_scope_1_1
+	editor_check_0_1
+	dr_scope_1_1
+	dr_scope_1_1
+	dbg_time_1_1
+	catch_errors_editor_1_0
+	dr_scope_1_1
+	dr_scope_1_1
+	constraint_error_all_0_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	try_1_0
+	constraint_error_0_0
+	constraint_error_action_0_0
+	pp_type_0_0
+	pp_type_aux_0_0
+	pp_type_0_0
+	pp_type_aux_0_0
+	pp_type_0_0
+	pp_type_aux_0_0
+[ WebDSL | critical ] Internal error: with clause failed unexpectedly in rule 'pp-type'
+           "p4"{"p4_p40"}Analyzing: TestFolder/program.app
+rename: 0.240 s
+
+* : error: Template with signature t_R_d1Lc_() not defined 
+t_R_d1Lc_[]
+* : error: No property Q_7 defined for String
+validatetemplate(t_R_d1Lc_[]).Q_7
+* : error: Type not defined: J
+J
+* : error: Type cannot be determined for empty untyped list creation.
+[]
+* : error: Type not defined: validationContext
+validationContext
+* : error: No function 'rendertemplate' with signature rendertemplate(validationContext). Available global functions with that name: 
+rendertemplate(validationContext{})
+* : error: Template with signature cH12D() not defined 
+cH12D[]
+* : error: Type not defined: WFn_Q_b_hlD
+WFn_Q_b_hlD
+* : error: No function 'S' for 'List<WFn_Q_b_hlD>()' with signature S()
+List<WFn_Q_b_hlD>().S()
+* : error: Type cannot be determined for empty untyped list creation.
+[]
+* : error: H26V_z__7rJ completions matching Bu3.Du.F__3___L_.Y66_nuCV : [] is not of type Bool
+! H26V_z__7rJ completions matching Bu3.Du.F__3___L_.Y66_nuCV : []
+* : error: Type not defined: OO1fJay6gc_
+OO1fJay6gc_
+* : error: Type not defined: J
+J
+* : error: Type cannot be determined for empty untyped set creation.
+{}
+* : error: collection in for-expression does not contain declared type Ref<OO1fJay6gc_>
+
+[ ! H26V_z__7rJ completions matching Bu3.Du.F__3___L_.Y66_nuCV : [] | CM : Ref<OO1fJay6gc_> in function.x569_():J(*,) order by J_V corrections similarity {} desc ]
+* : error: And-for-expression should contain a collection of Bool type
+And
+[ ! H26V_z__7rJ completions matching Bu3.Du.F__3___L_.Y66_nuCV : [] | CM : Ref<OO1fJay6gc_> in function.x569_():J(*,) order by J_V corrections similarity {} desc ]
+* : error: rule type unknown: rule n2 * ( validatetemplate(t_R_d1Lc_[]).Q_7 + false , function():J{} , [] , rendertemplate(validationContext{}) , rendertemplate ( cH12D[] ) , List<WFn_Q_b_hlD>().S() - "&I" * ) {
+  ! ! And [ ! H26V_z__7rJ completions matching Bu3.Du.F__3___L_.Y66_nuCV : [] | CM : Ref<OO1fJay6gc_> in function.x569_():J(*,) order by J_V corrections similarity {} desc ]
+}
+rule n2 * ( validatetemplate(t_R_d1Lc_[]).Q_7 + false , function():J{} , [] , rendertemplate(validationContext{}) , rendertemplate ( cH12D[] ) , List<WFn_Q_b_hlD>().S() - "&I" * ) {
+  ! ! And [ ! H26V_z__7rJ completions matching Bu3.Du.F__3___L_.Y66_nuCV : [] | CM : Ref<OO1fJay6gc_> in function.x569_():J(*,) order by J_V corrections similarity {} desc ]
+}
+* : error: Entity 'ycKDl__1' does not exist, and cannot be used as principal for access control.
+principal is ycKDl__1 with credentials WFn_Q_b_hlD , S , Q_7 , J , v , r
+* : error: Principal credential 'WFn_Q_b_hlD' is not a property of entity 'ycKDl__1'.
+WFn_Q_b_hlD
+* : error: Principal credential 'WFn_Q_b_hlD' is not compatible with String type.
+WFn_Q_b_hlD
+* : error: Principal credential 'S' is not a property of entity 'ycKDl__1'.
+S
+* : error: Principal credential 'S' is not compatible with String type.
+S
+* : error: Principal credential 'Q_7' is not a property of entity 'ycKDl__1'.
+Q_7
+* : error: Principal credential 'Q_7' is not compatible with String type.
+Q_7
+* : error: Principal credential 'J' is not a property of entity 'ycKDl__1'.
+J
+* : error: Principal credential 'J' is not compatible with String type.
+J
+* : error: Principal credential 'v' is not a property of entity 'ycKDl__1'.
+v
+* : error: Principal credential 'v' is not compatible with String type.
+v
+* : error: Principal credential 'r' is not a property of entity 'ycKDl__1'.
+r
+* : error: Principal credential 'r' is not compatible with String type.
+r
+* : error: Only one access control principal can be defined.
+principal is ycKDl__1 with credentials WFn_Q_b_hlD , S , Q_7 , J , v , r
+* : error: Type not defined: nM_QE5__5_C
+nM_QE5__5_C
+* : error: rule should contain a Bool expression: rule nM_QE5__5_C MJoE491 (  ) {
+  function. A ( ) : nM_QE5__5_C
+}
+rule nM_QE5__5_C MJoE491 (  ) {
+  function. A ( ) : nM_QE5__5_C
+}
+* : error: rule type unknown: rule nM_QE5__5_C MJoE491 (  ) {
+  function. A ( ) : nM_QE5__5_C
+}
+rule nM_QE5__5_C MJoE491 (  ) {
+  function. A ( ) : nM_QE5__5_C
+}
+* : error: Type not defined: ycKDl__1
+ycKDl__1
+* : error: Generic type not defined: h33p_u3_n_<ycKDl__1>
+h33p_u3_n_<ycKDl__1>
+* : error: Type not defined: WFn_Q_b_hlD
+WFn_Q_b_hlD
+* : error: Type not defined: i64J_3
+i64J_3
+* : error: Type not defined: OO1fJay6gc_
+OO1fJay6gc_
+* : error: Type not defined: i64J_3
+i64J_3
+* : error: Generic type not defined: i64J_3<i64J_3>
+i64J_3<i64J_3>
+* : error: Reference argument 'Ref<i64J_3<i64J_3>>' only allowed in formal parameters of pages, templates, or ajax templates
+S : Ref<i64J_3<i64J_3>>
+* : error: Generic type not defined: EntityTypeNamed<c_tT_>
+EntityTypeNamed<c_tT_>
+* : error: Type not defined: n2
+n2
+* : error: pointcut element uses unknown identifier: i64J_3
+WFn_Q_b_hlD hK_* ( i64J_3 * )
+* : error: pointcut element must use pointcut argument: p4
+ycKDl__1 * ( * )
+* : error: pointcut element must use pointcut argument: h33p_u3_n_
+ycKDl__1 * ( * )
+* : error: pointcut element must use pointcut argument: x569_
+ycKDl__1 * ( * )
+* : error: pointcut element must use pointcut argument: c_tT_
+ycKDl__1 * ( * )
+* : error: pointcut element must use pointcut argument: S
+ycKDl__1 * ( * )
+* : error: pointcut element must use pointcut argument: WFn_Q_b_hlD
+ycKDl__1 * ( * )
+* : error: pointcut element must use pointcut argument: OO1fJay6gc_
+ycKDl__1 * ( * )
+* : error: pointcut element must use pointcut argument: p4
+WFn_Q_b_hlD hK_* ( i64J_3 * )
+* : error: pointcut element must use pointcut argument: h33p_u3_n_
+WFn_Q_b_hlD hK_* ( i64J_3 * )
+* : error: pointcut element must use pointcut argument: x569_
+WFn_Q_b_hlD hK_* ( i64J_3 * )
+* : error: pointcut element must use pointcut argument: c_tT_
+WFn_Q_b_hlD hK_* ( i64J_3 * )
+* : error: pointcut element must use pointcut argument: S
+WFn_Q_b_hlD hK_* ( i64J_3 * )
+* : error: pointcut element must use pointcut argument: WFn_Q_b_hlD
+WFn_Q_b_hlD hK_* ( i64J_3 * )
+* : error: pointcut element must use pointcut argument: OO1fJay6gc_
+WFn_Q_b_hlD hK_* ( i64J_3 * )
+* : error: Type not defined: c_tT_
+c_tT_
+* : error: Generic type not defined: i64J_3<c_tT_>
+i64J_3<c_tT_>
+* : error: Type not defined: nM_QE5__5_C
+nM_QE5__5_C
+* : error: Reference argument 'Ref<nM_QE5__5_C>' only allowed in formal parameters of pages, templates, or ajax templates
+WFn_Q_b_hlD : Ref<nM_QE5__5_C>
+* : error: Type not defined: r
+r
+* : error: No email definition for Q_7 ( ).
+Q_7 ( )
+* : error: predicate should contain a Bool expression: predicate p4 ( h33p_u3_n_ : i64J_3<c_tT_> , WFn_Q_b_hlD : Ref<nM_QE5__5_C> ,
+p4 : r ) { email ( Q_7 ( ) ) }
+predicate p4 ( h33p_u3_n_ : i64J_3<c_tT_> , WFn_Q_b_hlD : Ref<nM_QE5__5_C> ,
+p4 : r ) { email ( Q_7 ( ) ) }
+* : error: Type not defined: r
+r
+* : error: Reference argument 'Ref<function():>' only allowed in formal parameters of pages, templates, or ajax templates
+A : Ref<function():Void>
+* : error: Type not defined: ycKDl__1
+ycKDl__1
+* : error: Generic type not defined: OO1fJay6gc_<ycKDl__1>
+OO1fJay6gc_<ycKDl__1>
+* : error: Type not defined: e___
+e___
+* : error: Reference argument 'Ref<function():e___>' only allowed in formal parameters of pages, templates, or ajax templates
+v : Ref<function():e___>
+* : error: Type not defined: i64J_3
+i64J_3
+* : error: Type not defined: ycKDl__1
+ycKDl__1
+* : error: Duplicate name 'S' in argument list.
+S : function ( ) : Void
+* : error: Duplicate name 'v' in argument list.
+v : Ref<function():e___>
+* : error: Duplicate name 'S' in argument list.
+S : i64J_3
+* : error: Duplicate name 'v' in argument list.
+v : ycKDl__1
+* : error: No function 'e___' with signature e___(). Available global functions with that name: 
+e___()
+* : error: Type not defined: WFn_Q_b_hlD
+WFn_Q_b_hlD
+* : error: Generic type not defined: EntityTypeNamed<p4>
+EntityTypeNamed<p4>
+* : error: Generic type not defined: n2<EntityTypeNamed<p4>>
+n2<EntityTypeNamed<p4>>
+WebDSL: rewriting failed, trace:
+	editor_analyze1_0_0
+	editor_analyze1_0_0
+	editor_analyze_0_0
+	editor_analyze_work_0_0
+	in_typechecking_phase_1_0
+	dr_scope_1_1
+	editor_check_0_1
+	dr_scope_1_1
+	dr_scope_1_1
+	dbg_time_1_1
+	catch_errors_editor_1_0
+	dr_scope_1_1
+	dr_scope_1_1
+	constraint_error_all_0_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	try_1_0
+	constraint_error_0_0
+	constraint_error_action_0_0
+	pp_type_0_0
+	pp_type_aux_0_0
+	pp_type_0_0
+	pp_type_aux_0_0
+	pp_type_0_0
+	pp_type_aux_0_0
+[ WebDSL | critical ] Internal error: with clause failed unexpectedly in rule 'pp-type'
+           "p4"{"p4_p40"}
\ No newline at end of file

From seba at informatik.uni-marburg.de  Mon Jul  2 16:00:20 2012
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Mon, 02 Jul 2012 14:00:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25128 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
Message-ID: <20120702140020.A19192B8005@mx2.tudelft.nl>

Author: SebastianErdweg
Date: Mon Jul  2 14:00:20 2012
New Revision: 25128
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25128&sc=1

Log:
avoid another NullPointerException

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java	Mon Jul  2 13:55:57 2012	(r25127)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java	Mon Jul  2 14:00:20 2012	(r25128)
@@ -112,6 +112,8 @@
 		IStrategoTerm result = doParse(input, filename);
 		if (new NullProgressMonitor().isCanceled())
 			throw new OperationCanceledException();
+		if (result == null)
+			return null;
 		SGLRParseController controller = getController() == null ? null : getController();
 		IResource resource = controller == null ? null : controller.getResource();
 		if(resource==null && filename !=null) {

From oskarvanrest at gmail.com  Tue Jul  3 04:03:28 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Tue, 03 Jul 2012 02:03:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25129 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans
Message-ID: <20120703020328.591F1108C004@mx3.tudelft.nl>

Author: OskarVanRest
Date: Tue Jul  3 02:03:28 2012
New Revision: 25129
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25129&sc=1

Log:
Error-checking: duplicate definition

Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/check.str

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/check.str
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/check.str	Mon Jul  2 14:00:20 2012	(r25128)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/check.str	Tue Jul  3 02:03:28 2012	(r25129)
@@ -10,6 +10,19 @@
 
 rules // Resolving
   
-  constraint-error:
-    x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
+	constraint-error:
+		x{[Unresolved(t) | _]} -> (x, $[Unable to resolve])
 
+	is-unique-namespace = ?Requirement()
+	is-unique-namespace = ?Component()
+	is-unique-namespace = ?Behavior()
+      
+	constraint-error:
+		definition -> (definition, $[Duplicate definition])
+		where
+			key{[ns|_]} := <nam-get-definition-key> definition;
+			<is-unique-namespace> ns;
+			definitions := <index-lookup-all> key;
+			<gt> (<length> definitions, 1)
+			
+			
\ No newline at end of file

From oskarvanrest at gmail.com  Tue Jul  3 05:10:13 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Tue, 03 Jul 2012 03:10:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25130 - in
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual:
	editor syntax
Message-ID: <20120703031013.BAFC42B802D@mx2.tudelft.nl>

Author: OskarVanRest
Date: Tue Jul  3 03:10:13 2012
New Revision: 25130
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25130&sc=1

Log:
Code coloring + lexical syntax for labels

Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/ComBE-Colorer.esv
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/syntax/ComBE.sdf
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/syntax/Common.sdf

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/ComBE-Colorer.esv
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/ComBE-Colorer.esv	Tue Jul  3 02:03:28 2012	(r25129)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/ComBE-Colorer.esv	Tue Jul  3 03:10:13 2012	(r25130)
@@ -6,4 +6,8 @@
                                                                       
   // This file can be used for custom colorer rules.                  
   //                                                                  
-  // See the imported file for a brief introduction and examples.     
\ No newline at end of file
+  // See the imported file for a brief introduction and examples.     
+  BehaviorType	: 127 0 85 bold
+  Label			: darkgreen
+  identifier	: black
+  number		: black
\ No newline at end of file

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/syntax/ComBE.sdf
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/syntax/ComBE.sdf	Tue Jul  3 02:03:28 2012	(r25129)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/syntax/ComBE.sdf	Tue Jul  3 03:10:13 2012	(r25130)
@@ -13,15 +13,15 @@
  
     "#RT" Requirement* Component* ("#T" Root)?				-> Start {"Specification", scope(Requirement, Component)}
     
-    Requirement@=ID label:ID								-> Requirement {"Requirement"}
+    Requirement@=ID Label									-> Requirement {"Requirement"}
     
     %% TODO: make enum?
-	"#C" Component@=ID label:ID BehaviorSeq*				-> Component {"StandardComponent", scope(Behavior)}
-	"#SC" Component@=ID label:ID BehaviorSeq*				-> Component {"SystemComponent", scope(Behavior)}
+	"#C" Component@=ID Label BehaviorSeq*					-> Component {"StandardComponent", scope(Behavior)}
+	"#SC" Component@=ID Label BehaviorSeq*					-> Component {"SystemComponent", scope(Behavior)}
 	
 	BehaviorType behavior:Behavior*							-> BehaviorSeq {"BehaviorSeq"}
 	
-	Behavior@=INT label:ID									-> Behavior {"Behavior"}
+	Behavior@=INT Label										-> Behavior {"Behavior"}
 	
 	BehaviorTree											-> Root {"Root"} %% workaround for GMF phantom node bug
 	
@@ -29,8 +29,8 @@
 	{nodes:Node ";;"}+ "#N" "{" children:BehaviorTree* "}" 	-> BehaviorTree {"AlternativeBranch"}
 	{nodes:Node ";;"}+ "#P" "{" children:BehaviorTree* "}" 	-> BehaviorTree {"ParallelBranch"}
 
-	Requirement at ID TracibilityStatus Component at ID Behavior at INT label:ID? Operator		-> Node {"StandardNode"}
-	"_" label:ID? Operator																-> Node {"EmptyNode"}
+	Requirement at ID TracibilityStatus Component at ID Behavior at INT Label? Operator		-> Node {"StandardNode"}
+	"_" Label? Operator																-> Node {"EmptyNode"}
 	
   lexical syntax
   	

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/syntax/Common.sdf
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/syntax/Common.sdf	Tue Jul  3 02:03:28 2012	(r25129)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/syntax/Common.sdf	Tue Jul  3 03:10:13 2012	(r25130)
@@ -5,6 +5,7 @@
   lexical syntax
   
     [a-zA-Z][a-zA-Z0-9]* -> ID
+    ~[\n\r\ ]+			 -> Label
     "-"? [0-9]+          -> INT
     
     "\"" StringChar* "\"" -> STRING
@@ -28,6 +29,7 @@
     CommentChar   -/- [\/]
     INT           -/- [0-9]
     ID            -/- [a-zA-Z0-9\_]
+    Label         -/- ~[\n\r\ ]
     
     %% EOF may not be followed by any char
     

From m.dejonge at tudelft.nl  Tue Jul  3 09:55:35 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 03 Jul 2012 07:55:35 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25131 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff
Message-ID: <20120703075535.E5335108C019@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue Jul  3 07:55:34 2012
New Revision: 25131
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25131&sc=1

Log:


Added:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/EditScriptCreator.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCSOriginTermsCommand.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/OriginHeuristicTreeMatcher.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/OriginTreeMatcher.java   (contents, props changed)
Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTreeMatcher.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HelperFunctions.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCS.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCSCommand.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCSEqualTermsCommand.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/TermMatchAttachment.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTreeMatcher.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTreeMatcher.java	Tue Jul  3 03:10:13 2012	(r25130)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTreeMatcher.java	Tue Jul  3 07:55:34 2012	(r25131)
@@ -12,30 +12,24 @@
 public abstract class AbstractTreeMatcher {
 	
 	private LCS<IStrategoTerm> lcs;
+	private boolean tryMatchingMovedTerms;
 	
-	/**
-	 * Constructs a (symmetric) matching relation between terms in AST1 and AST2.
-	 * The matching is stored as attachments to matched terms.
-	 */
-	public AbstractTreeMatcher(){
-		LCSCommand<IStrategoTerm> lcsCommand = new LCSEqualTermsCommand<IStrategoTerm>(); 
-		lcs = new LCS<IStrategoTerm>(lcsCommand); //IDEA: createTreeMatcher For Origin ...
+	public AbstractTreeMatcher(LCSCommand<IStrategoTerm> lcsCommand, boolean tryMatchingMovedTerms) {
+		lcs = new LCS<IStrategoTerm>(lcsCommand);
+		this.tryMatchingMovedTerms = tryMatchingMovedTerms;
 	}
-
+	
 	/**
-	 * Constructs a symmetric matching between terms in term1 with terms in trm2
+	 * Constructs a symmetric (partial) matching between terms in term1 with terms in trm2
 	 * @param trm1 AST1
 	 * @param trm2 AST2
-	 * @param tryMatchingMovedTerms Set this argument to true if the construction of AST2 from AST1
-	 * may involved moving code constructs to another location
-	 * @param requireSameSignature Set this to true if terms are only matched if they have the same signature
-	 * @param requireSameValue Set this to true if String/Int/Real terms are only matched if they have the same value
+	 * @param tryMatchingMovedTerms Set this argument to true if the diff between AST1 and AST2
+	 * may contain code fragments that are moved to another location
 	 */
-	public void constructMatching(IStrategoTerm root1, IStrategoTerm root2, 
-			boolean tryMatchingMovedTerms, boolean requireSameSignature, boolean requireSameValue) {
+	public void constructMatching(IStrategoTerm root1, IStrategoTerm root2) {
 		HelperFunctions.setParentAttachments(root1);
 		HelperFunctions.setParentAttachments(root2);
-		matchLeafnodesUsingLCS(root1, root2, tryMatchingMovedTerms);
+		matchLeafnodesUsingLCS(root1, root2);
 		matchTerminalsBottomUp(root1, root2);
 		matchTermsTopdown(root1, root2);
 	}
@@ -47,7 +41,7 @@
 	 * @param trm2
 	 * @param tryMatchingMovedTerms True means that a new LCS procedure tries to match unmatched terms
 	 */
-	private void matchLeafnodesUsingLCS(IStrategoTerm trm1, IStrategoTerm trm2, boolean tryMatchingMovedTerms) {
+	private void matchLeafnodesUsingLCS(IStrategoTerm trm1, IStrategoTerm trm2) {
 		ArrayList<IStrategoTerm> leafNodes1 = HelperFunctions.collectLeafnodes(trm1);
 		ArrayList<IStrategoTerm> leafNodes2 = HelperFunctions.collectLeafnodes(trm2);
 		lcs.createLCSResultsOptimized(leafNodes1, leafNodes2);
@@ -181,8 +175,14 @@
 				IStrategoTerm trm2Child = trm2.getSubterm(i);
 				IStrategoTerm trm1Child = trm1.getSubterm(i);
 				IStrategoTerm trm2ChildPartner = TermMatchAttachment.getMatchedTerm(trm2Child);
-				if(trm1Child != trm2ChildPartner && !isBetterCandidate(trm1Child, trm2ChildPartner, trm2Child)){ 
-					//trm1child is the preferred candidate, unless trm2ChildPartner is better
+				if(
+					trm1Child != trm2ChildPartner && 
+					!isBetterCandidate(trm1Child, trm2ChildPartner, trm2Child) &&
+					matchingScore(trm1Child, trm2Child) > 0
+				){
+					//trm1Child has the same child index as trm2Child, and matched parents M(trm1,trm2)
+					//Therefore, trm1child is the preferred candidate for trm2Child, 
+					//unless trm2ChildPartner is better
 					matchTerminalNode(root1, trm1Child, trm2Child);
 				}
 			}

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/EditScriptCreator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/EditScriptCreator.java	Tue Jul  3 07:55:34 2012	(r25131)
@@ -0,0 +1,292 @@
+package org.spoofax.interpreter.library.jsglr.treediff;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+import org.spoofax.interpreter.core.Tools;
+import org.spoofax.interpreter.terms.IStrategoAppl;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.jsglr.client.imploder.ImploderAttachment;
+import org.spoofax.jsglr.client.imploder.TermTreeFactory;
+import org.spoofax.terms.StrategoInt;
+import org.spoofax.terms.StrategoReal;
+import org.spoofax.terms.StrategoString;
+import org.spoofax.terms.TermFactory;
+import org.spoofax.terms.attachments.ParentAttachment;
+import org.spoofax.terms.attachments.ParentTermFactory;
+
+/**
+ * Creates a (minimal) edit script that changes AST1 into AST2
+ * The supported edit operations are:
+ * - UpdateValue: updates the value of a primitive leaf node
+ * - UpdateLabel: updates the constructor name (for example: Lt => Gt)
+ * - Insert: Inserts a Node of a certain signature (without any subterms)
+ * - Move: Moves a node from one position in the tree to another position
+ * - Delete: Deletes a node
+ * The implementation is based on, 
+ * title: "Change Detection in Hierarchically Structured Information"
+ * authors: Sudarshan S. Chawathe, Anand Rajaraman, Hector Garcia-Molina, and Jennifer Widom
+ * @author maartje
+ *
+ */
+public class EditScriptCreator {
+	private static TermTreeFactory parentFactory = new TermTreeFactory(new ParentTermFactory(new TermFactory()));
+	
+	public static void generateEditScript(IStrategoTerm root1, IStrategoTerm root2, AbstractTreeMatcher treeMatcher) {
+		treeMatcher.constructMatching(root1, root2);
+		ensureMatchingRootTerms(root1, root2);
+		updateLeafnodeValues(root2);
+		updateLabels(root2);
+		topdownAlignSubterms(root2);
+		IStrategoTerm dummyRoot2 = ParentAttachment.getParent(root2);
+		if (dummyRoot2 != null) 
+			insertTerms(dummyRoot2);
+		else 
+			insertTerms(root2); 			
+		moveTerms(root2);
+		deleteTerms(root1);
+		//assert root1.equals(root2): "root1 should be isomorphic to root2 after the edit script is applied";
+	}
+
+	/**
+	 * Relabels all nodes in root1 that are matched with a node in root2 that has a different label.
+	 * example: Gt(a,b) in root1 and Lt'(a',b') in root2, relabel Gt => Lt.
+	 * @param root2
+	 */
+	private static  void updateLabels(IStrategoTerm trm2) {
+		IStrategoTerm trm1 = TermMatchAttachment.getMatchedTerm(trm2);
+		if(trm1 != null){
+			if(
+				Tools.isTermAppl(trm2) && 
+				!(Tools.isTermAppl(trm1) && HelperFunctions.haveSameConstructorName(trm1, trm2)))
+			{
+				System.out.println("RELABELED: (" + trm1 +", " + ((IStrategoAppl)trm2).getName() + ")");
+				IStrategoTerm newTrm1 = parentFactory.recreateNode(trm2, null, null, Arrays.asList(trm1.getAllSubterms()));	
+				TermMatchAttachment.forceMatchTerms(newTrm1, trm2);
+				//TODO: change tree? if not then deletion phase gives problems
+			}
+			if(Tools.isTermList(trm2) && !(Tools.isTermList(trm1))){
+				//TODO
+				System.out.println("RELABELED: (" + trm1 +", " + trm2 + ")");								
+			}
+			if(Tools.isTermTuple(trm2) && !(Tools.isTermTuple(trm1))){
+				//TODO
+				System.out.println("RELABELED: (" + trm1 +", " + trm2 + ")");								
+			}
+		}
+		for (int i = 0; i < trm2.getSubtermCount(); i++) {
+			updateLabels(trm2.getSubterm(i));
+		}
+	}
+
+	/**
+	 * Deletes all unmatched nodes bottom-up, e.g. only nodes without child nodes can be deleted
+	 * 
+	 * @param root1
+	 */
+	private static void deleteTerms(IStrategoTerm root1) {
+		// TODO Auto-generated method stub
+		
+	}
+
+	/**
+	 * Moves terms in t1 to their right parent.
+	 * Let t2 a term in root2 that is matched with t1 in root1, e.g. M(t1,t2).
+	 * Let p2 the parent of t2 that is matched with p1 a term in root1, e.g. M(p1,p2).
+	 * Suppose that p1 is NOT the parent of t1.
+	 * Then, (in T1) we move t1 to p1 and add the edit item Move( ...)    
+	 * @param root2
+	 */
+	private static void moveTerms(IStrategoTerm root2) {
+		//assert: all terms are matched
+		//TODO
+		//assert
+	}
+
+	/**
+	 * When root1 and root2 are not matched, artificial root nodes are inserted that are matched.
+	 * Thus, r1 => (r1) and r2 => (r2) whereby the single tuple terms are matched.
+	 * @param root1
+	 * @param root2
+	 */
+	private static void ensureMatchingRootTerms(IStrategoTerm root1, IStrategoTerm root2) {
+		if(TermMatchAttachment.getMatchedTerm(root1) != root2){
+			//inserts artificial dummy roots that are matched.
+			IStrategoTerm dummyRoot1 = addDummyRoot(root1);
+			IStrategoTerm dummyRoot2 = addDummyRoot(root2);
+			TermMatchAttachment.forceMatchTerms(dummyRoot1, dummyRoot2);
+		}
+	}
+
+	/**
+	 * Inserts nodes in root1 that form pairs with unmatched nodes in root2.
+	 * At the end, all terms in root2 have a partner in root1.
+	 * Thus: Let t2 a term in root2 that is not matched, and let p2 its parent matched with p1 (in root1).
+	 * Then, we insert a new node with the label of t2 as the ...th child of p1. 
+	 * @param parent2
+	 */
+	private static void insertTerms(IStrategoTerm parent2) {
+		assert TermMatchAttachment.hasMatchedTerm(parent2); 
+		IStrategoTerm parent1 = TermMatchAttachment.getMatchedTerm(parent2);
+		//System.out.println("parent2: " + parent2);
+		//System.out.println("parent1: " + parent1);
+		int matchChildIndex = 0;
+		for (int i = 0; i < parent2.getSubtermCount(); i++) {
+			IStrategoTerm child2_i = parent2.getSubterm(i);
+			IStrategoTerm child1_i = TermMatchAttachment.getMatchedTerm(child2_i);
+			if(child1_i != null){
+				if(ParentAttachment.getParent(child1_i) == parent1){
+					matchChildIndex +=1;
+				}
+			}
+			else{
+				//TODO: Insert and EditScript! 
+				IStrategoTerm insertedChild1_i = parentFactory.recreateNode(child2_i, null, null, new ArrayList<IStrategoTerm>());	
+				TermMatchAttachment.forceMatchTerms(insertedChild1_i, child2_i);
+				System.out.println("INSERTED: (" + insertedChild1_i +", " + parent1 + ", " + matchChildIndex + ")");
+			}
+			insertTerms(child2_i);
+		}
+		//assert: all terms in root2 are matched
+	}
+
+	private static IStrategoTerm addDummyRoot(IStrategoTerm root) {
+		ArrayList<IStrategoTerm> rootAsList = new ArrayList<IStrategoTerm>();
+		rootAsList.add(root);
+		IStrategoTerm dummyRoot = parentFactory.createTuple(
+			null, ImploderAttachment.getLeftToken(root), ImploderAttachment.getRightToken(root), rootAsList
+		);
+		ParentAttachment.putParent(root, dummyRoot, null);
+		return dummyRoot;
+	}
+
+	/**
+	 * Aligns subterms of terms in root1 one by one, until they correspond with the order of their matches.
+	 * Thus, Let p1 a node in root1 that matches with a node p2 in root2,
+	 * and let (a,b,c,d,e) (c',a', d',x,b') their subterms. 
+	 * Then this function aligns the subterms of p1 to (c, a, d, b)
+	 * and adds the edit items Move(c, c, treepos-old(c), treepos-new(c)) and Move(d, d, treepos-old(d), treepos-new(d))
+	 * @param root1
+	 */
+	private static void topdownAlignSubterms(IStrategoTerm term2) {
+		alignSubterms(term2);
+		for (int i = 0; i < term2.getSubtermCount(); i++) {
+			topdownAlignSubterms(term2.getSubterm(i));
+		}
+	}
+
+	private static void alignSubterms(IStrategoTerm term2) {
+		IStrategoTerm term1 = TermMatchAttachment.getMatchedTerm(term2);
+		if(term1 != null){
+			LCS<IStrategoTerm> lcs = new LCS<IStrategoTerm>(new LCSCommand<IStrategoTerm>() {
+				public boolean isMatch(IStrategoTerm t1, IStrategoTerm t2) {
+					return TermMatchAttachment.getMatchedTerm(t2) == t1;
+				}
+			});
+			List<IStrategoTerm> subterms1 = Arrays.asList(term1.getAllSubterms());
+			List<IStrategoTerm> subterms2 = Arrays.asList(term2.getAllSubterms());
+			lcs.createLCSResults(subterms1, subterms2);
+			for (int i = 0; i < subterms2.size(); i++) {
+				//alignement for subterms2.get(i) by relocating its partner in subterms1
+				alignSingleSubterm(lcs, subterms1, subterms2, subterms2.get(i)); 
+			}
+			assertFullAlignment(lcs, subterms1, subterms2);
+		}
+	}
+
+	private static void alignSingleSubterm(LCS<IStrategoTerm> lcs,List<IStrategoTerm> elems1, List<IStrategoTerm> elems2, IStrategoTerm el2) {
+		IStrategoTerm child_i_1 = TermMatchAttachment.getMatchedTerm(el2);
+		if(lcs.getResultUnmatched1().contains(child_i_1)){ //child_i_1 and child_i_1 can be matched by aligning them. 
+			assert lcs.getResultUnmatched2().contains(el2): "M(el1,el2), then both elements are in LCS or neither."; 
+			int indexFrom = elems1.indexOf(child_i_1);
+			//alignement of child_i_1 so that M(child_i_1, child_i_2) in LCS.
+			IStrategoTerm preceedingLCS2Elem = getPreceedingLCSElem(el2, elems2, lcs.getResultLCS2());
+			IStrategoTerm preceedingLCS1Elem = null;
+			int indexTo = 0;
+			if(preceedingLCS2Elem != null){
+				preceedingLCS1Elem = TermMatchAttachment.getMatchedTerm(preceedingLCS2Elem);
+				indexTo = elems1.indexOf(preceedingLCS1Elem) + 1;
+				assert(preceedingLCS1Elem != null);
+				assert(indexTo >= 0);
+			}
+			assert indexFrom != indexTo: "Terms are already aligned, so they should be in LCS.";
+			if(indexFrom > indexTo){
+				elems1.remove(indexFrom);
+				elems1.add(indexTo, child_i_1);
+			}
+			else{
+				elems1.add(indexTo, child_i_1);						
+				elems1.remove(indexFrom);
+			}
+			System.out.println("Align: " + child_i_1 + ", "+ indexFrom + " => " + indexTo);
+		}
+	}
+
+	private static void assertFullAlignment(LCS<IStrategoTerm> lcs,
+			List<IStrategoTerm> subterms1, List<IStrategoTerm> subterms2) {
+		lcs.createLCSResults(subterms1, subterms2);
+		for (IStrategoTerm noLCSElem2 : lcs.getResultUnmatched2()) {
+			IStrategoTerm noLCSElem1 = TermMatchAttachment.getMatchedTerm(noLCSElem2);
+			assert !lcs.getResultUnmatched1().contains(noLCSElem1):
+				"LCS could be improved by aligning M(noLCSElem1, noLCSElem2)";
+		}
+	}
+
+	private static IStrategoTerm getPreceedingLCSElem(IStrategoTerm el, List<IStrategoTerm> elems, List<IStrategoTerm> lcsElems) {
+		int elIndex = elems.indexOf(el);
+		for (int j = elIndex - 1; j >= 0; j--) {
+			if(lcsElems.contains(elems.get(j))){
+				return elems.get(j);
+			}
+		}
+		return null;
+	}
+	
+
+	/**
+	 * Updates StringTerms and IntTerms that are matched but do not have the same value.
+	 * Thus: Let s1 a String leafnode in root1, and let s2 a String leafnode in root2 so that
+	 * s1 and s2 are matched and s1 and s2 have different values.
+	 * Then, this function updates the value of s1 to the value of s2.
+	 * In addition, an edit item UpdateValue("value1", "value2", treeposition1, treeposition1) is added. 
+	 * @param root1
+	 */
+	private static void updateLeafnodeValues(IStrategoTerm root2) {
+		ArrayList<IStrategoTerm> leafnodes2 = HelperFunctions.collectLeafnodes(root2);
+		for (int i = 0; i < leafnodes2.size(); i++) {
+			IStrategoTerm ln2 = leafnodes2.get(i); 
+			updateSingleLeafnodeValue(ln2);
+		}
+		assertSameValueForMatchedPrimitives(root2);
+	}
+
+	private static void assertSameValueForMatchedPrimitives(IStrategoTerm root2) {
+		ArrayList<IStrategoTerm> leafnodes2 = HelperFunctions.collectLeafnodes(root2);
+		for (int i = 0; i < HelperFunctions.collectLeafnodes(root2).size(); i++) {
+			IStrategoTerm ln2 = leafnodes2.get(i); 
+			IStrategoTerm ln1 = TermMatchAttachment.getMatchedTerm(ln2);
+			assert ln1 == null || !HelperFunctions.isPrimitiveType(ln1) || ln1.equals(ln2) : 
+				"values should be equal for matched primitve nodes";
+		}
+	}
+
+	private static void updateSingleLeafnodeValue(IStrategoTerm ln2) {
+		IStrategoTerm ln1 = TermMatchAttachment.getMatchedTerm(ln2);
+		if(ln1 != null && !ln2.equals(ln1)){
+			IStrategoTerm p = ParentAttachment.getParent(ln1);
+			if(Tools.isTermInt(ln1) && Tools.isTermInt(ln2)){
+				System.out.println("Update Int Value: " + ln1 + " => " + ln2);
+				ln1 = parentFactory.createIntTerminal(null, ImploderAttachment.getLeftToken(ln1), ((StrategoInt)ln2).intValue());
+			}
+			else if(Tools.isTermString(ln1) && Tools.isTermString(ln2)){
+				System.out.println("Update String Value: " + ln1 + " => " + ln2);
+				ln1 = parentFactory.createStringTerminal(null, ImploderAttachment.getLeftToken(ln1), ImploderAttachment.getRightToken(ln1), ((StrategoString)ln2).stringValue());
+			}
+			else if(Tools.isTermReal(ln1) && Tools.isTermReal(ln2)){
+				System.out.println("Update Real Value: " + ln1 + " => " + ln2);
+				ln1 = parentFactory.createRealTerminal(null, ImploderAttachment.getLeftToken(ln1), ((StrategoReal)ln2).realValue());
+			}
+		} 
+	}
+}

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HelperFunctions.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HelperFunctions.java	Tue Jul  3 03:10:13 2012	(r25130)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HelperFunctions.java	Tue Jul  3 07:55:34 2012	(r25131)
@@ -11,8 +11,18 @@
 import org.spoofax.terms.StrategoTerm;
 import org.spoofax.terms.attachments.ParentAttachment;
 
+/**
+ * Helper functions for tree matching
+ * @author maartje
+ *
+ */
 public class HelperFunctions {
 	
+	/**
+	 * Collects the leaf nodes
+	 * @param trm
+	 * @return
+	 */
 	public static ArrayList<IStrategoTerm> collectLeafnodes(IStrategoTerm trm){
 		ArrayList<IStrategoTerm> leafnodes = new ArrayList<IStrategoTerm>();
 		IStrategoTerm[] subterms = trm.getAllSubterms();
@@ -31,7 +41,7 @@
 	 * Sets the parent attachment for each term in the AST
 	 * @param trm
 	 */
-	static void setParentAttachments(IStrategoTerm trm){
+	public static void setParentAttachments(IStrategoTerm trm){
 		assert trm.getStorageType() == IStrategoTerm.MUTABLE
 	    	: "Parent attachments only work for mutable, non-shared terms; failed for " + trm;
 		IStrategoTerm[] subterms = trm.getAllSubterms();
@@ -41,41 +51,61 @@
 		}
 	}
 	
-	static boolean isPrimitiveType(IStrategoTerm trm) {
+	/**
+	 * Says whether the term is a primitive type, e.g. String, Int, or Real 
+	 * @param trm
+	 * @return
+	 */
+	public static boolean isPrimitiveType(IStrategoTerm trm) {
 		return trm.getTermType() == StrategoTerm.INT ||
 		trm.getTermType() == StrategoTerm.REAL ||
 		trm.getTermType() == StrategoTerm.STRING;
 	}
 
-	static boolean isPrimitiveWithSameValue(IStrategoTerm t1, IStrategoTerm t2) {
+	/**
+	 * True if both terms are Int, Real or String and have the same value  
+	 * @param t1
+	 * @param t2
+	 * @return
+	 */
+	public static boolean isPrimitiveWithSameValue(IStrategoTerm t1, IStrategoTerm t2) {
 		return 
 			isIntWithSameValue(t1, t2) ||
 			isRealWithSameValue(t1, t2) ||
 			isSringWithSameValue(t1, t2);
 	}
 
-	private static boolean isIntWithSameValue(IStrategoTerm t1, IStrategoTerm t2) {
+	public static boolean isIntWithSameValue(IStrategoTerm t1, IStrategoTerm t2) {
 		return 
 			t1.getTermType() == StrategoTerm.INT && 
 			t2.getTermType() == StrategoTerm.INT && 
 			((StrategoInt)t1).intValue() == ((StrategoInt)t2).intValue();
 	}
 
-	private static boolean isSringWithSameValue(IStrategoTerm t1, IStrategoTerm t2) {
+	public static boolean isSringWithSameValue(IStrategoTerm t1, IStrategoTerm t2) {
 		return 
 			t1.getTermType() == StrategoTerm.STRING && 
 			t2.getTermType() == StrategoTerm.STRING && 
 			((StrategoString)t1).stringValue() == ((StrategoString)t2).stringValue();
 	}
 
-	private static boolean isRealWithSameValue(IStrategoTerm t1, IStrategoTerm t2) {
+	public static boolean isRealWithSameValue(IStrategoTerm t1, IStrategoTerm t2) {
 		return 
 			t1.getTermType() == StrategoTerm.REAL && 
 			t2.getTermType() == StrategoTerm.REAL && 
 			((StrategoReal)t1).realValue() == ((StrategoReal)t2).realValue();
 	}
 
-	static boolean haveSameSignature(IStrategoTerm t1, IStrategoTerm t2){
+	/**
+	 * True iff one of these conditions hold:
+	 * 1. both are Appl with same constructor name and same number of subterms
+	 * 2. both are lists
+	 * 3. both are tuples
+	 * @param t1
+	 * @param t2
+	 * @return
+	 */
+	public static boolean haveSameSignature(IStrategoTerm t1, IStrategoTerm t2){
 		if(t1 == null || t2 == null)
 			return false;
 		if(t1.getTermType() == StrategoTerm.APPL && t2.getTermType() == StrategoTerm.APPL){
@@ -90,8 +120,7 @@
 			return false;
 	}
 
-	static boolean haveSameConstructorName(IStrategoTerm t1,
-			IStrategoTerm t2) {
+	static boolean haveSameConstructorName(IStrategoTerm t1, IStrategoTerm t2) {
 		String cons1 = ((IStrategoAppl) t1).getConstructor().getName();
 		String cons2 = ((IStrategoAppl) t2).getConstructor().getName();
 		boolean sameConstructorName = cons1.equals(cons2);

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java	Tue Jul  3 03:10:13 2012	(r25130)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java	Tue Jul  3 07:55:34 2012	(r25131)
@@ -4,16 +4,36 @@
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.terms.attachments.ParentAttachment;
 
+/**
+ * Constructs a (symmetric) matching relation between terms in AST1 and AST2.
+ * The matching is stored as attachments to matched terms.
+ * The matching is constructed in three phases: 
+ * 1. LCS on based on leaf nodes
+ * 2. Bottom-up matching of terms to other terms based on the number of matched subterms
+ * 3. improvement of the matching relation by matching terms that occur
+ * at the same child index of their matched parents (with the same signature)  
+ * @author maartje
+ *
+ */
 public class HeuristicTreeMatcher extends AbstractTreeMatcher {
 	
-	public HeuristicTreeMatcher(boolean requireSameSignature, boolean requireSameValue){
+	private boolean requireSameSignature;
+	private boolean requireSameValue;
+	
+	/**
+	 * Matches terms in AST1 and AST2 by looking at common subterms
+	 * @param requireSameSignature Only allows matching of non-terminals with the same signature
+	 * @param requireSameValue Only allows matching of leaf nodes if they have the same value
+	 */
+	public HeuristicTreeMatcher(boolean requireSameSignature, boolean requireSameValue, boolean tryMatchingMovedTerms){
+		super(new LCSEqualTermsCommand<IStrategoTerm>(), tryMatchingMovedTerms);
 		this.requireSameSignature = requireSameSignature;
 		this.requireSameValue = requireSameValue;
 	}
 	
-	private boolean requireSameSignature;
-	private boolean requireSameValue;
-	
+	/**
+	 * Collects as candidates for matching terms that are the parent of matched subterms
+	 */
 	ArrayList<IStrategoTerm> getCandidateMatchTerms(IStrategoTerm root1, IStrategoTerm t2) {
 		ArrayList<IStrategoTerm> candidateMatches = new ArrayList<IStrategoTerm>();
 		for (int i = 0; i < t2.getSubtermCount(); i++) {
@@ -25,6 +45,12 @@
 		return candidateMatches;
 	}
 	
+	/**
+	 * Calculates a weight matching score based on:
+	 * 1. number of matched subterms
+	 * 2. matching of the parent terms
+	 * 3. same signature and/or equal
+	 */
 	double matchingScore(IStrategoTerm t1, IStrategoTerm t2){
 		if(t1 == null || t2 == null)
 			return -1;

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCS.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCS.java	Tue Jul  3 03:10:13 2012	(r25130)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCS.java	Tue Jul  3 07:55:34 2012	(r25131)
@@ -1,37 +1,78 @@
 package org.spoofax.interpreter.library.jsglr.treediff;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 
+import org.spoofax.interpreter.terms.IStrategoTerm;
+
+/**
+ * Implements a Longest Common Subsequence algorithm
+ * @author maartje
+ *
+ * @param <T>
+ */
 public class LCS<T> {
 	
+	private List<T> elems1;
+	private List<T> elems2;
 	private ArrayList<T> resultLCS1;
 	private ArrayList<T> resultLCS2;
 	private ArrayList<T> resultUnmatched1;
 	private ArrayList<T> resultUnmatched2;
 	private LCSCommand<T> lcsCommand;
 	
+	/**
+	 * LCS result for input 1
+	 * (empty before algorithm is applied)
+	 * @return LCS elements for input 1
+	 */
 	public ArrayList<T> getResultLCS1() {
 		return resultLCS1;
 	}
 
+	/**
+	 * LCS result for input 2
+	 * (empty before algorithm is applied)
+	 * @return LCS elements for input 2
+	 */
 	public ArrayList<T> getResultLCS2() {
 		return resultLCS2;
 	}
 
+	/**
+	 * Elements of input 1 that are not part of the LCS
+	 * (empty before algorithm is applied)
+	 * @return non-LCS elements for input 1
+	 */
 	public ArrayList<T> getResultUnmatched1() {
 		return resultUnmatched1;
 	}
 
+	/**
+	 * Elements of input 2 that are not part of the LCS
+	 * (empty before algorithm is applied)
+	 * @return non-LCS elements for input 2
+	 */
 	public ArrayList<T> getResultUnmatched2() {
 		return resultUnmatched2;
 	}
 
+	/**
+	 * LCS command implements the function that says wether or not two elements can be matched
+	 * @param lcsCommand Implements the matching criterion
+	 */
 	public void setLcsCommand(LCSCommand<T> lcsCommand) {
 		this.lcsCommand = lcsCommand;
 	}
 
+	/**
+	 * Finds the Longest Common Subsequence of two lists with elements
+	 * @param lcsCommand Implements the matching criterion
+	 */
 	public LCS(LCSCommand<T> lcsCommand){
+		elems1 = new ArrayList<T>();
+		elems2 = new ArrayList<T>();
 		resultLCS1 = new ArrayList<T>();
 		resultLCS2 = new ArrayList<T>();
 		resultUnmatched1 = new ArrayList<T>();
@@ -39,6 +80,10 @@
 		this.lcsCommand = lcsCommand;
 	}
 	
+	/**
+	 * Size of the LCS
+	 * @return Size of the LCS
+	 */
 	public int getLCSSize(){
 		return resultLCS1.size();
 	}
@@ -56,8 +101,10 @@
 	 * @param elems1
 	 * @param elems2
 	 */
-	public void createLCSResultsOptimized(List<T> elems1, List<T> elems2) {
+	public LCS<T> createLCSResultsOptimized(List<T> elems1, List<T> elems2) {
 		clearResults();
+		this.elems1 = elems1;
+		this.elems2 = elems2;
 		int minLength = Math.min(elems1.size(), elems2.size()); 
 		int commonPrefixLength = 0;
 		while (commonPrefixLength < minLength) {
@@ -86,17 +133,21 @@
 			elems2.subList(commonPrefixLength, elems2.size() - commonSuffixLength)
 		);
 		checkAssertions(elems1, elems2);
+		return this;
 	}
 
 	/**
-	 * 
+	 * Fills the LCS results: LCS (longest common subsequence), unmatched elems1, unmatched elems2.
 	 * @param elems1
 	 * @param elems2
 	 */
-	public void createLCSResults(List<T> elems1, List<T> elems2) {
+	public LCS<T> createLCSResults(List<T> elems1, List<T> elems2) {
 		clearResults();
+		this.elems1 = elems1;
+		this.elems2 = elems2;
 		lcs(elems1, elems2);
 		checkAssertions(elems1, elems2);
+		return this;
 	}
 
 	private void lcs(List<T> elems1, List<T> elems2) {
@@ -155,4 +206,5 @@
 		assert resultLCS1.size() + resultUnmatched1.size() == elems1.size();
 		assert resultLCS2.size() + resultUnmatched2.size() == elems2.size();
 	}
+
 }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCSCommand.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCSCommand.java	Tue Jul  3 03:10:13 2012	(r25130)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCSCommand.java	Tue Jul  3 07:55:34 2012	(r25131)
@@ -1,11 +1,17 @@
 package org.spoofax.interpreter.library.jsglr.treediff;
 
+/**
+ * Implements the matching criteron applied by the LCS algorithm
+ * @author maartje
+ *
+ * @param <T>
+ */
 public interface LCSCommand<T> {
 	/**
 	 * Returns true in case t1 and t2 can be matched.
-	 * This function implements the criteria for matching leaf nodes in a Longest Common Subsequence procedure. 
-	 * @param t1 Leaf node in AST_1
-	 * @param t2 Leaf node in AST_2
+	 * This function implements the criteria for matching in a Longest Common Subsequence procedure. 
+	 * @param t1 element in input list 1
+	 * @param t2 element in input list 2
 	 * @return True in case t1 and t2 can be matched
 	 */
 	abstract boolean isMatch(T t1, T t2);

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCSEqualTermsCommand.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCSEqualTermsCommand.java	Tue Jul  3 03:10:13 2012	(r25130)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCSEqualTermsCommand.java	Tue Jul  3 07:55:34 2012	(r25131)
@@ -2,10 +2,19 @@
 
 import org.spoofax.interpreter.terms.IStrategoTerm;
 
+/**
+ * Basic matching criterion: two terms can be matched iff they are equal
+ * @author maartje
+ *
+ * @param <T>
+ */
 public class LCSEqualTermsCommand<T> implements LCSCommand<IStrategoTerm> {
 
+	/**
+	 * True iff t1 and t2 are equal
+	 */
 	public boolean isMatch(IStrategoTerm t1, IStrategoTerm t2) {
-		return t1.equals(t2);
+		return t1 == t2 || t1.equals(t2);
 	}
 
 }

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCSOriginTermsCommand.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCSOriginTermsCommand.java	Tue Jul  3 07:55:34 2012	(r25131)
@@ -0,0 +1,12 @@
+package org.spoofax.interpreter.library.jsglr.treediff;
+
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.terms.attachments.OriginAttachment;
+
+public class LCSOriginTermsCommand<T> implements LCSCommand<IStrategoTerm> {
+
+	public boolean isMatch(IStrategoTerm t1, IStrategoTerm t2) {
+		return OriginAttachment.getOrigin(t2) == t1;
+	}
+
+}

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/OriginHeuristicTreeMatcher.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/OriginHeuristicTreeMatcher.java	Tue Jul  3 07:55:34 2012	(r25131)
@@ -0,0 +1,38 @@
+package org.spoofax.interpreter.library.jsglr.treediff;
+
+import java.util.ArrayList;
+
+import org.spoofax.interpreter.terms.IStrategoTerm;
+
+/** Constructs a symmetic (partial) matching between terms of AST1 and AST2
+ * based on the origin relation and heuristics.
+ * Origin based matches are always prefered over heuristic matches
+ * @author maartje
+ *
+ */
+public class OriginHeuristicTreeMatcher extends AbstractTreeMatcher {
+		
+	private OriginTreeMatcher originTreeMatcher;
+	private HeuristicTreeMatcher heuristicMatcher;
+	
+	public OriginHeuristicTreeMatcher(boolean useDesugaredOrigins, boolean requireSameSignature, boolean requireSameValue){
+		//super(new LCSOriginTermsCommand(), true);
+		super(new LCSEqualTermsCommand<IStrategoTerm>(), true);
+		originTreeMatcher = new OriginTreeMatcher(useDesugaredOrigins, requireSameSignature, requireSameValue);
+		heuristicMatcher = new HeuristicTreeMatcher(requireSameSignature, requireSameValue, false);
+	}
+
+	@Override
+	ArrayList<IStrategoTerm> getCandidateMatchTerms(IStrategoTerm root1, IStrategoTerm t2) {
+		ArrayList<IStrategoTerm> originCandidates = originTreeMatcher.getCandidateMatchTerms(root1, t2);
+		if(originCandidates.size()>0)
+			return originCandidates;
+		return heuristicMatcher.getCandidateMatchTerms(root1, t2);
+	}
+
+	@Override
+	double matchingScore(IStrategoTerm t1, IStrategoTerm t2) {
+		//origin-based matches are prefered over heuristic matches
+		return (3*originTreeMatcher.matchingScore(t1, t2) + heuristicMatcher.matchingScore(t1, t2))/4.0;
+	}
+}

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/OriginTreeMatcher.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/OriginTreeMatcher.java	Tue Jul  3 07:55:34 2012	(r25131)
@@ -0,0 +1,67 @@
+package org.spoofax.interpreter.library.jsglr.treediff;
+
+import java.util.ArrayList;
+
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.terms.attachments.DesugaredOriginAttachment;
+import org.spoofax.terms.attachments.OriginAttachment;
+
+/** Constructs a symmetic (partial) matching between terms of AST1 and AST2
+ * based on the origin relation, e.g., M(trm1,trm2) iff trm1 is the origin of trm2 
+ * @author maartje
+ *
+ */
+public class OriginTreeMatcher extends AbstractTreeMatcher {
+	
+	private boolean useDesugaredOrigins;
+	private boolean requireSameSignature;
+	private boolean requireSameValue;
+	
+	public OriginTreeMatcher(boolean useDesugaredOrigins, boolean requireSameSignature, boolean requireSameValue){
+		super(new LCSOriginTermsCommand(), true);
+		this.useDesugaredOrigins = useDesugaredOrigins;
+	}
+
+	@Override
+	ArrayList<IStrategoTerm> getCandidateMatchTerms(IStrategoTerm root1, IStrategoTerm t2) {
+		ArrayList<IStrategoTerm> candidates = new ArrayList<IStrategoTerm>();
+		if(useDesugaredOrigins){
+			IStrategoTerm desugaredOrigin = DesugaredOriginAttachment.getDesugaredOrigin(t2);
+			if(desugaredOrigin != null)
+				candidates.add(desugaredOrigin);			
+		}
+		IStrategoTerm origin = OriginAttachment.getOrigin(t2);
+		if(origin != null)
+			candidates.add(origin);
+		return candidates;
+	}
+
+	@Override
+	double matchingScore(IStrategoTerm t1, IStrategoTerm t2) {
+		//same signature?
+		//desugared, normal origin?
+		if(t1 == null || t2 == null)
+			return -1;
+		if(requireSameSignature && !HelperFunctions.haveSameSignature(t1, t2)){
+			return -1;
+		}
+		if(requireSameValue && HelperFunctions.isPrimitiveType(t1) && !HelperFunctions.isPrimitiveWithSameValue(t1, t2)){
+			return -1;
+		}
+		if(OriginAttachment.getOrigin(t2) != t1 && DesugaredOriginAttachment.getDesugaredOrigin(t2) != t1){
+			return -1; //no origin relation
+		}
+		double value = 0.0;
+		double maxValue = 2.0 + 2.0 + 1.0;
+		if(HelperFunctions.haveSameSignature(t1, t2) || HelperFunctions.isPrimitiveWithSameValue(t1, t2)){
+			value += 2; //+2 for equal signatures
+			if(t1.equals(t2)){
+				value +=2; //+2 for equal terms
+			}
+		}
+		if(DesugaredOriginAttachment.getDesugaredOrigin(t2)==t1)
+			value +=1; //prefer desugared origin
+		return 1.0 * value/maxValue;
+	}
+
+}

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/TermMatchAttachment.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/TermMatchAttachment.java	Tue Jul  3 03:10:13 2012	(r25130)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/TermMatchAttachment.java	Tue Jul  3 07:55:34 2012	(r25131)
@@ -7,7 +7,8 @@
 import org.spoofax.terms.attachments.VolatileTermAttachmentType;
 
 /**
- * A term match attachment that stores the matching of the attached term in AST1 with a term in AST2. 
+ * A term match attachment that stores the matching of the attached term in AST1 
+ * with a term in a different tree (AST2).
  * Matching is a symmetric 1-1 relation between terms in one AST with the terms in another AST.
  * @author maartje
  *
@@ -65,7 +66,8 @@
 	}
 
 	/**
-	 * Breaks the original matchings of term1 and term2, and matches them.
+	 * Accomplishes a match between term1 in AST1 and term2 in AST2. 
+	 * Breaks the original matchings of term1 and term2.
 	 * @param term1 Term in AST1
 	 * @param term2 Term in AST2
 	 */

From oskarvanrest at gmail.com  Wed Jul  4 04:30:24 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Wed, 04 Jul 2012 02:30:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25132 - in
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual:
	test trans
Message-ID: <20120704023024.B502ACC0C4@mx4.tudelft.nl>

Author: OskarVanRest
Date: Wed Jul  4 02:30:22 2012
New Revision: 25132
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25132&sc=1

Log:
check.str

Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/test/microwave_oven.bt
Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/check.str

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/test/microwave_oven.bt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/test/microwave_oven.bt	Wed Jul  4 02:30:22 2012	(r25132)
@@ -0,0 +1,16 @@
+#RT R5 R5
+
+#C C1 OVEN
+ #S 1 Cooking
+    2 Cooking[Stopped]
+
+#C C2 USER
+ #E 1 OpensDoor
+ 
+#C C3 DOOR
+ #S 1 Open
+ 
+#C C4 POWER-TUBE
+ #S 1 Off
+ 
+#T R5 + C1 1; R5 + C2 1; R5 C3 1; R5 + C4 1; R5 + C1 2
\ No newline at end of file

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/check.str
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/check.str	Tue Jul  3 07:55:34 2012	(r25131)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/check.str	Wed Jul  4 02:30:22 2012	(r25132)
@@ -10,19 +10,20 @@
 
 rules // Resolving
   
-	constraint-error:
-		x{[Unresolved(t) | _]} -> (x, $[Unable to resolve])
+	constraint-error: 	x{[Unresolved(Requirement()) | _]} -> (x, $[Unable to resolve [x] to a requirement])
+	constraint-error: 	x{[Unresolved(Component()) | _]} -> (x, $[Unable to resolve [x] to a component])
+	constraint-error: 	x{[Unresolved(Behavior()) | _]} -> (x, $[Unable to resolve [x] to behavior])
 
-	is-unique-namespace = ?Requirement()
-	is-unique-namespace = ?Component()
-	is-unique-namespace = ?Behavior()
+	ns2string: Requirement() -> "requirement"
+	ns2string: Component() -> "component"
+	ns2string: Behavior() -> "behavior"
       
 	constraint-error:
-		definition -> (definition, $[Duplicate definition])
+		definition -> (definition, $[Duplicate [namespace] [key]])
 		where
 			key{[ns|_]} := <nam-get-definition-key> definition;
-			<is-unique-namespace> ns;
 			definitions := <index-lookup-all> key;
-			<gt> (<length> definitions, 1)
+			<gt> (<length> definitions, 1);
+			namespace := <ns2string> ns
 			
 			
\ No newline at end of file

From oskarvanrest at gmail.com  Wed Jul  4 08:00:36 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Wed, 04 Jul 2012 06:00:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25133 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/test
Message-ID: <20120704060036.CFACD7F800E@mx1.tudelft.nl>

Author: OskarVanRest
Date: Wed Jul  4 06:00:35 2012
New Revision: 25133
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25133&sc=1

Log:
Gate example

Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/test/gate.bt

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/test/gate.bt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/test/gate.bt	Wed Jul  4 06:00:35 2012	(r25133)
@@ -0,0 +1,22 @@
+#RT R1 R1
+
+#C C1 CAR
+ #S 1 Arrives
+	2 Proceeds
+ 
+#C C2 GATE
+ #L 1 Open
+	2 Closed
+ #S 3 Open
+
+ 
+#C C3 Driver
+ #E 1 Presses-Button
+
+#C C4 Button
+ #S 1 Pressed
+
+#T R1 C1 1 #N {
+	R1 + C2 1; R1 C1 2
+	R1 + C2 2; R1 - C3 1; R1 C4 1; R1 C2 3; R1 C1 2
+}
\ No newline at end of file

From oskarvanrest at gmail.com  Wed Jul  4 08:06:18 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Wed, 04 Jul 2012 06:06:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25134 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor
Message-ID: <20120704060618.4752B7F800E@mx1.tudelft.nl>

Author: OskarVanRest
Date: Wed Jul  4 06:06:18 2012
New Revision: 25134
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25134&sc=1

Log:
Code folding

Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/ComBE-Folding.esv

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/ComBE-Folding.esv
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/ComBE-Folding.esv	Wed Jul  4 06:00:35 2012	(r25133)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/ComBE-Folding.esv	Wed Jul  4 06:06:18 2012	(r25134)
@@ -1,9 +1,10 @@
 module ComBE-Folding
 
-imports ComBE-Folding.generated
 
 folding
   
   // This file can be used for custom folding rules.
   //
-  // See the imported file for a brief introduction and examples.
\ No newline at end of file
+  // See the imported file for a brief introduction and examples.
+  Component.StandardComponent
+  Component.SystemComponent
\ No newline at end of file

From oskarvanrest at gmail.com  Wed Jul  4 08:49:13 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Wed, 04 Jul 2012 06:49:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25135 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/syntax
Message-ID: <20120704064913.6D0A2CC058@mx4.tudelft.nl>

Author: OskarVanRest
Date: Wed Jul  4 06:49:11 2012
New Revision: 25135
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25135&sc=1

Log:
Label-operator disambiguation

Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/syntax/Common.sdf

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/syntax/Common.sdf
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/syntax/Common.sdf	Wed Jul  4 06:06:18 2012	(r25134)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/syntax/Common.sdf	Wed Jul  4 06:49:11 2012	(r25135)
@@ -5,7 +5,7 @@
   lexical syntax
   
     [a-zA-Z][a-zA-Z0-9]* -> ID
-    ~[\n\r\ ]+			 -> Label
+    ~[\n\r\ \;]+			 -> Label
     "-"? [0-9]+          -> INT
     
     "\"" StringChar* "\"" -> STRING
@@ -29,7 +29,7 @@
     CommentChar   -/- [\/]
     INT           -/- [0-9]
     ID            -/- [a-zA-Z0-9\_]
-    Label         -/- ~[\n\r\ ]
+    Label         -/- ~[\n\r\ \;]
     
     %% EOF may not be followed by any char
     
@@ -46,3 +46,15 @@
     LAYOUT? -/- [\ \t\n\r]
     LAYOUT? -/- [\/].[\/]
     LAYOUT? -/- [\/].[\*]
+
+  lexical syntax
+	"--"	-> Label {reject}
+	"&"		-> Label {reject}
+	"|"		-> Label {reject}
+	"%"		-> Label {reject}
+	"=>"	-> Label {reject}
+	"^"		-> Label {reject}
+	"^^"	-> Label {reject}
+	"="		-> Label {reject}
+	"XOR"	-> Label {reject}
+	
\ No newline at end of file

From m.dejonge at tudelft.nl  Wed Jul  4 12:18:04 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Wed, 04 Jul 2012 10:18:04 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25136 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff
Message-ID: <20120704101804.21DBCCC0F5@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Wed Jul  4 10:18:01 2012
New Revision: 25136
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25136&sc=1

Log:


Added:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LeafnodeTreeMatcher.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/TreeEditDistance.java   (contents, props changed)
Replaced:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/EditScriptCreator.java   (contents, props changed)
Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTreeMatcher.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HelperFunctions.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTreeMatcher.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTreeMatcher.java	Wed Jul  4 06:49:11 2012	(r25135)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTreeMatcher.java	Wed Jul  4 10:18:01 2012	(r25136)
@@ -130,6 +130,7 @@
 	 */
 	private IStrategoTerm findBestMatch(IStrategoTerm root1, IStrategoTerm t2) {
 		ArrayList<IStrategoTerm> candidates = getCandidateMatchTerms(root1, t2);
+		candidates = removeDuplicates(candidates);
 		IStrategoTerm t1 = null;
 		for (int i = 0; i < candidates.size(); i++) {
 			IStrategoTerm t1_candidate = candidates.get(i);
@@ -140,6 +141,24 @@
 		return t1;
 	}
 	
+	private ArrayList<IStrategoTerm> removeDuplicates(ArrayList<IStrategoTerm> candidates) {
+		ArrayList<IStrategoTerm> candidateSet = new ArrayList<IStrategoTerm>();
+		for (IStrategoTerm c : candidates) {
+			if(!contains(candidateSet, c)){
+				candidateSet.add(c); 
+			}
+		}
+		return candidateSet;
+	}
+
+	boolean contains(ArrayList<IStrategoTerm> terms, IStrategoTerm t) {
+		for (IStrategoTerm trm : terms) {
+			if(t==trm)
+				return true;
+		}
+		return false;
+	}
+
 	/**
 	 * Returns true if c1 is a better candidate than prevc1, 
 	 * taking into account the matching relations that are possible broken by rematching

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/EditScriptCreator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/EditScriptCreator.java	Wed Jul  4 10:18:01 2012	(r25136)
@@ -0,0 +1,5 @@
+package org.spoofax.interpreter.library.jsglr.treediff;
+
+public class EditScriptCreator {
+
+}

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HelperFunctions.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HelperFunctions.java	Wed Jul  4 06:49:11 2012	(r25135)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HelperFunctions.java	Wed Jul  4 10:18:01 2012	(r25136)
@@ -126,4 +126,19 @@
 		boolean sameConstructorName = cons1.equals(cons2);
 		return sameConstructorName;
 	}
+
+	static boolean isPrimitiveWithDifferentValues(IStrategoTerm ln,
+			IStrategoTerm lnPartner) {
+		return isPrimitiveType(ln) && isPrimitiveType(lnPartner) && isPrimitiveWithSameValue(ln, lnPartner);
+	}
+
+	public static boolean isSameTermType(IStrategoTerm t1, IStrategoTerm t2) {
+		return
+			(Tools.isTermAppl(t1) && Tools.isTermAppl(t2)) 
+		||  (Tools.isTermInt(t1) && Tools.isTermInt(t2))
+		||  (Tools.isTermList(t1) && Tools.isTermList(t2))
+		||  (Tools.isTermReal(t1) && Tools.isTermReal(t2))
+		||  (Tools.isTermString(t1) && Tools.isTermString(t2))
+		||  (Tools.isTermTuple(t1) && Tools.isTermTuple(t2));
+	}
 }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java	Wed Jul  4 06:49:11 2012	(r25135)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java	Wed Jul  4 10:18:01 2012	(r25136)
@@ -9,7 +9,7 @@
  * The matching is stored as attachments to matched terms.
  * The matching is constructed in three phases: 
  * 1. LCS on based on leaf nodes
- * 2. Bottom-up matching of terms to other terms based on the number of matched subterms
+ * 2. Bottom-up matching of terms to other terms based on the number of matched leaf nodes and structural similarity
  * 3. improvement of the matching relation by matching terms that occur
  * at the same child index of their matched parents (with the same signature)  
  * @author maartje
@@ -21,9 +21,10 @@
 	private boolean requireSameValue;
 	
 	/**
-	 * Matches terms in AST1 and AST2 by looking at common subterms
+	 * Matches terms in AST1 and AST2 by looking at the text fragment that they interpret.
 	 * @param requireSameSignature Only allows matching of non-terminals with the same signature
 	 * @param requireSameValue Only allows matching of leaf nodes if they have the same value
+	 * @param says whether LCS must be repeated to match the leafnodes that are not matched in the first LCS matching round.
 	 */
 	public HeuristicTreeMatcher(boolean requireSameSignature, boolean requireSameValue, boolean tryMatchingMovedTerms){
 		super(new LCSEqualTermsCommand<IStrategoTerm>(), tryMatchingMovedTerms);
@@ -32,55 +33,113 @@
 	}
 	
 	/**
-	 * Collects as candidates for matching terms that are the parent of matched subterms
+	 * Collects as candidates for matching terms that are the parent of matched subterms,
+	 * plus the common ancestors of the candidates (until the smallest common ancestor is found).
 	 */
 	ArrayList<IStrategoTerm> getCandidateMatchTerms(IStrategoTerm root1, IStrategoTerm t2) {
 		ArrayList<IStrategoTerm> candidateMatches = new ArrayList<IStrategoTerm>();
 		for (int i = 0; i < t2.getSubtermCount(); i++) {
 			IStrategoTerm subTermMatch1 = TermMatchAttachment.getMatchedTerm(t2.getSubterm(i));
 			if(subTermMatch1 != null){
-				candidateMatches.add(ParentAttachment.getParent(subTermMatch1));
+				IStrategoTerm parent1 = ParentAttachment.getParent(subTermMatch1);
+				if(parent1 != null && !contains(candidateMatches, parent1))
+					candidateMatches.add(parent1);
+			}
+		}
+		if(candidateMatches.size() > 1){
+			IStrategoTerm commonAncestor = commonAncestor(candidateMatches);
+			candidateMatches.add(commonAncestor);
+			for (int i = 0; i < candidateMatches.size(); i++) {
+				IStrategoTerm ancestorCandidate = ParentAttachment.getParent(candidateMatches.get(i));
+				while(ancestorCandidate != commonAncestor){
+					candidateMatches.add(ancestorCandidate);
+					ancestorCandidate = ParentAttachment.getParent(ancestorCandidate);
+				}
 			}
 		}
 		return candidateMatches;
 	}
+
+	private IStrategoTerm commonAncestor(ArrayList<IStrategoTerm> terms) {
+		ArrayList<IStrategoTerm> ancestors = new ArrayList<IStrategoTerm>();
+		IStrategoTerm anc = terms.get(0);
+		while(anc != null){
+			ancestors.add(anc);
+			anc = ParentAttachment.getParent(anc);
+		}
+		int index_common_ancestor = -1;
+		for (int i = 0; i < terms.size(); i++) {
+			IStrategoTerm c = terms.get(i);
+			while(c != null && !ancestors.contains(c)){
+				c = ParentAttachment.getParent(c);					
+			}
+			assert c != null: "at least the root node is a common ancestor";
+			index_common_ancestor = Math.max(index_common_ancestor, ancestors.indexOf(c));
+		}
+		IStrategoTerm commonAncestor = ancestors.get(index_common_ancestor);
+		return commonAncestor;
+	}
 	
 	/**
 	 * Calculates a weight matching score based on:
-	 * 1. number of matched subterms
+	 * 1. number of matched leafnodes
 	 * 2. matching of the parent terms
 	 * 3. same signature and/or equal
 	 */
 	double matchingScore(IStrategoTerm t1, IStrategoTerm t2){
-		if(t1 == null || t2 == null)
-			return -1;
-		if(requireSameSignature && !HelperFunctions.haveSameSignature(t1, t2)){
-			return -1;
-		}
-		if(requireSameValue && HelperFunctions.isPrimitiveType(t1) && !HelperFunctions.isPrimitiveWithSameValue(t1, t2)){
+		if(!meetsMatchingCriteria(t1, t2))
 			return -1;
-		}		
+		ArrayList<IStrategoTerm> leafnodes1 = HelperFunctions.collectLeafnodes(t1);
+		ArrayList<IStrategoTerm> leafnodes2 = HelperFunctions.collectLeafnodes(t2);
+		double maxValue = 
+			2.0 /*equal signatures*/ 
+		  + 2.0 /*equal terms*/ 
+		  + 2.0 /*matched parents*/ 
+		  + leafnodes1.size() + leafnodes2.size();		
 		double value = 0.0;
-		double maxValue = 2.0 + 2.0 + 2.0 + t1.getSubtermCount() + t2.getSubtermCount();
+		
+		//structure similarity
 		if(HelperFunctions.haveSameSignature(t1, t2) || HelperFunctions.isPrimitiveWithSameValue(t1, t2)){
-			value += 2; //+2 for equal signatures
+			value += 2.0; //+2 for equal signatures or equal values
 			if(t1.equals(t2)){
-				value +=2; //+2 for equal terms
+				value +=2.0; //+2 for equal terms
 			}
 		}
+		
+		//number of matched leafnodes, e.g., do both terms interpret the same text fragment
+		for (IStrategoTerm ln2 : leafnodes2) {
+			IStrategoTerm ln2Partner = TermMatchAttachment.getMatchedTerm(ln2);
+			if(leafnodes1.contains(ln2Partner)){
+				value += 2.0; //+2 for matched leafnodes
+			}
+		}
+		
+		//whether or not the parent nodes are matched
 		IStrategoTerm parent1 = ParentAttachment.getParent(t1);
 		IStrategoTerm parent2 = ParentAttachment.getParent(t2);
-		if(TermMatchAttachment.getMatchedTerm(parent2) == parent1){
-			value +=2; //+2 for matched parent terms (no penalty for unknown parents)
-			if(parent1 != null)
-				value +=1; //+1 bonus for matched parent terms 
-		}
-		for (int i = 0; i < t2.getSubtermCount(); i++) {
-			IStrategoTerm subtermMatch = TermMatchAttachment.getMatchedTerm(t2.getSubterm(i));
-			if(subtermMatch != null && ParentAttachment.getParent(subtermMatch) == t1){
-				value += 2.0; //+2 for matched subterms
-			}
+		IStrategoTerm partnerParent1 = TermMatchAttachment.getMatchedTerm(parent1);
+		IStrategoTerm partnerParent2 = TermMatchAttachment.getMatchedTerm(parent2);
+		if(partnerParent1 == null && partnerParent2 == null)
+			value += 1.0; //+1 for no violation in parent matches
+		else if (partnerParent2 == parent1){
+			value += 2.0; //+2 for matched parents
 		}
+		
 		return 1.0 * value/maxValue;
 	}
+
+	private boolean meetsMatchingCriteria(IStrategoTerm t1, IStrategoTerm t2) {
+		if(t1 == null || t2 == null)
+			return false;
+		if(!HelperFunctions.isSameTermType(t1, t2)){
+			return false;
+		}
+		if(requireSameSignature && !HelperFunctions.haveSameSignature(t1, t2)){
+			return false;
+		}
+		if(requireSameValue && !HelperFunctions.isPrimitiveWithSameValue(t1, t2)){
+			return false;
+		}
+		return true;
+	}
 }

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LeafnodeTreeMatcher.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LeafnodeTreeMatcher.java	Wed Jul  4 10:18:01 2012	(r25136)
@@ -0,0 +1,26 @@
+package org.spoofax.interpreter.library.jsglr.treediff;
+
+import java.util.ArrayList;
+
+import org.spoofax.interpreter.terms.IStrategoTerm;
+
+public class LeafnodeTreeMatcher extends AbstractTreeMatcher {
+
+	public LeafnodeTreeMatcher(LCSCommand<IStrategoTerm> lcsCommand, boolean tryMatchingMovedTerms) {
+		super(lcsCommand, tryMatchingMovedTerms);
+		// TODO Auto-generated constructor stub
+	}
+
+	@Override
+	ArrayList<IStrategoTerm> getCandidateMatchTerms(IStrategoTerm root1, IStrategoTerm t2) {
+		// TODO Auto-generated method stub
+		return null;
+	}
+
+	@Override
+	double matchingScore(IStrategoTerm t1, IStrategoTerm t2) {
+		// TODO Auto-generated method stub
+		return 0;
+	}
+
+}

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/TreeEditDistance.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/TreeEditDistance.java	Wed Jul  4 10:18:01 2012	(r25136)
@@ -0,0 +1,80 @@
+package org.spoofax.interpreter.library.jsglr.treediff;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+import org.spoofax.interpreter.core.Tools;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+
+
+public class TreeEditDistance {
+	
+	public static int calculateTreeEditDistance(IStrategoTerm root1, IStrategoTerm root2, AbstractTreeMatcher treeMatcher) {
+		treeMatcher.constructMatching(root1, root2);
+		int deletionCount = numberOfUnmatchedTerms(root1);
+		int insertionCount = numberOfUnmatchedTerms(root2);
+		int relabeledCount = numberOfRelabeledTerms(root2);
+		int valueChangeCount = numberOfValueChangedTerms(root2);
+		int movedCount = numberOfMovedTerms(root2);
+		return deletionCount + insertionCount + relabeledCount + valueChangeCount + movedCount;
+	}
+
+	private static int numberOfMovedTerms(IStrategoTerm trm) {
+		int nrOfMoved = 0;
+		IStrategoTerm partnerOfTrm = TermMatchAttachment.getMatchedTerm(trm);
+		List<IStrategoTerm> subterms = Arrays.asList(trm.getAllSubterms());
+		List<IStrategoTerm> subtermsOfPartner = Arrays.asList(partnerOfTrm.getAllSubterms());
+		LCS<IStrategoTerm> lcs = new LCS<IStrategoTerm>(new LCSCommand<IStrategoTerm>() {
+			public boolean isMatch(IStrategoTerm t1, IStrategoTerm t2) {
+				return TermMatchAttachment.getMatchedTerm(t2) == t1;
+			}
+		});
+		lcs.createLCSResults(subterms, subtermsOfPartner);
+		ArrayList<IStrategoTerm> unmatched1 = lcs.getResultUnmatched2();
+		for (IStrategoTerm u1 : unmatched1) {
+			if(TermMatchAttachment.getMatchedTerm(u1) != null){
+				nrOfMoved += 1;
+			}
+		}
+		for (int i = 0; i < trm.getSubtermCount(); i++) {
+			nrOfMoved += numberOfMovedTerms(trm.getSubterm(i));
+		}
+		return nrOfMoved;
+	}
+
+	private static int numberOfValueChangedTerms(IStrategoTerm trm) {
+		ArrayList<IStrategoTerm> leafnodes = HelperFunctions.collectLeafnodes(trm);
+		int valueChanges = 0;
+		for (IStrategoTerm ln : leafnodes) {
+			IStrategoTerm lnPartner = TermMatchAttachment.getMatchedTerm(ln);
+			if(HelperFunctions.isPrimitiveWithDifferentValues(ln, lnPartner)){
+				valueChanges += 1;
+			}
+		}
+		return valueChanges;
+	}
+
+	private static int numberOfRelabeledTerms(IStrategoTerm trm) {
+		int nrOfRelabeled = 0;
+		if(Tools.isTermAppl(trm) || Tools.isTermList(trm) || Tools.isTermTuple(trm)){
+			IStrategoTerm partnerOfTrm = TermMatchAttachment.getMatchedTerm(trm);
+			if(partnerOfTrm != null && !HelperFunctions.haveSameSignature(trm, partnerOfTrm))
+				nrOfRelabeled +=1;
+		}
+		for (int i = 0; i < trm.getSubtermCount(); i++) {
+			nrOfRelabeled += numberOfRelabeledTerms(trm.getSubterm(i));
+		}
+		return nrOfRelabeled;
+	}
+
+	private static int numberOfUnmatchedTerms(IStrategoTerm trm) {
+		int nrOfUnmatched = 0;
+		if(TermMatchAttachment.getMatchedTerm(trm) == null){
+			nrOfUnmatched +=1;
+		}
+		for (int i = 0; i < trm.getSubtermCount(); i++) {
+			nrOfUnmatched += numberOfUnmatchedTerms(trm.getSubterm(i));
+		}
+		return nrOfUnmatched;
+	}
+}

From gabrielkonat at gmail.com  Wed Jul  4 14:10:55 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Wed, 04 Jul 2012 12:10:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25137 - hydra/jobs
	spoofax-imp/trunk/org.strategoxt.imp.feature
Message-ID: <20120704121055.BF8E8108C006@mx3.tudelft.nl>

Author: gkonat
Date: Wed Jul  4 12:10:54 2012
New Revision: 25137
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25137&sc=1

Log:
Added NBL project to build

Modified:
   hydra/jobs/spoofax-imp.nix
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Wed Jul  4 10:18:01 2012	(r25136)
+++ hydra/jobs/spoofax-imp.nix	Wed Jul  4 12:10:54 2012	(r25137)
@@ -104,6 +104,7 @@
                  ${spoofaxImp}/org.strategoxt.imp.editors.spoofax \
                  ${spoofaxImp}/org.strategoxt.imp.editors.stratego \
                  ${spoofaxImp}/org.strategoxt.imp.editors.spoofax.configuration \
+                 ${spoofaxImp}/org.strategoxt.imp.names \
                  ${spoofaxImp}/org.strategoxt.imp.testing \
                  ${spoofaxImp}/org.strategoxt.imp.testing.ui \
                  ${spoofaxImp}/org.strategoxt.imp.feature \

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Wed Jul  4 10:18:01 2012	(r25136)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Wed Jul  4 12:10:54 2012	(r25137)
@@ -403,6 +403,13 @@
          download-size="0"
          install-size="0"
          version="0.1.0.qualifier"/>
+         
+   <plugin
+         id="org.strategoxt.imp.names"
+         download-size="0"
+         install-size="0"
+         version="0.1.0.qualifier"
+         unpack="false"/>
 
    <plugin
          id="org.spoofax.interpreter.library.interpreter"

From m.dejonge at tudelft.nl  Wed Jul  4 14:16:15 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Wed, 04 Jul 2012 12:16:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25138 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff
Message-ID: <20120704121615.AAEBA108C016@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Wed Jul  4 12:16:15 2012
New Revision: 25138
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25138&sc=1

Log:


Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCS.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java	Wed Jul  4 12:10:54 2012	(r25137)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java	Wed Jul  4 12:16:15 2012	(r25138)
@@ -42,17 +42,18 @@
 			IStrategoTerm subTermMatch1 = TermMatchAttachment.getMatchedTerm(t2.getSubterm(i));
 			if(subTermMatch1 != null){
 				IStrategoTerm parent1 = ParentAttachment.getParent(subTermMatch1);
-				if(parent1 != null && !contains(candidateMatches, parent1))
-					candidateMatches.add(parent1);
+				if(parent1 != null)
+					addCandidate(candidateMatches, parent1);
 			}
 		}
 		if(candidateMatches.size() > 1){
 			IStrategoTerm commonAncestor = commonAncestor(candidateMatches);
-			candidateMatches.add(commonAncestor);
+			addCandidate(candidateMatches, commonAncestor);
 			for (int i = 0; i < candidateMatches.size(); i++) {
-				IStrategoTerm ancestorCandidate = ParentAttachment.getParent(candidateMatches.get(i));
+				IStrategoTerm ancestorCandidate = candidateMatches.get(i);
 				while(ancestorCandidate != commonAncestor){
-					candidateMatches.add(ancestorCandidate);
+					assert ancestorCandidate != null;
+					addCandidate(candidateMatches, ancestorCandidate);
 					ancestorCandidate = ParentAttachment.getParent(ancestorCandidate);
 				}
 			}
@@ -60,6 +61,11 @@
 		return candidateMatches;
 	}
 
+	private void addCandidate(ArrayList<IStrategoTerm> candidateMatches, IStrategoTerm candidate) {
+		if(!contains(candidateMatches, candidate)) 
+			candidateMatches.add(candidate);
+	}
+
 	private IStrategoTerm commonAncestor(ArrayList<IStrategoTerm> terms) {
 		ArrayList<IStrategoTerm> ancestors = new ArrayList<IStrategoTerm>();
 		IStrategoTerm anc = terms.get(0);

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCS.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCS.java	Wed Jul  4 12:10:54 2012	(r25137)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCS.java	Wed Jul  4 12:16:15 2012	(r25138)
@@ -28,7 +28,7 @@
 	 * @return LCS elements for input 1
 	 */
 	public ArrayList<T> getResultLCS1() {
-		return resultLCS1;
+		return new ArrayList<T>(resultLCS1);
 	}
 
 	/**
@@ -37,7 +37,7 @@
 	 * @return LCS elements for input 2
 	 */
 	public ArrayList<T> getResultLCS2() {
-		return resultLCS2;
+		return new ArrayList<T>(resultLCS2);
 	}
 
 	/**
@@ -46,7 +46,7 @@
 	 * @return non-LCS elements for input 1
 	 */
 	public ArrayList<T> getResultUnmatched1() {
-		return resultUnmatched1;
+		return new ArrayList<T>(resultUnmatched1);
 	}
 
 	/**
@@ -55,7 +55,7 @@
 	 * @return non-LCS elements for input 2
 	 */
 	public ArrayList<T> getResultUnmatched2() {
-		return resultUnmatched2;
+		return new ArrayList<T>(resultUnmatched2);
 	}
 
 	/**

From gabrielkonat at gmail.com  Wed Jul  4 14:27:05 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Wed, 04 Jul 2012 12:27:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25139 -
	spoofax-imp/branches/nbl-dev/META-INF
Message-ID: <20120704122705.3EEDF7F800F@mx1.tudelft.nl>

Author: gkonat
Date: Wed Jul  4 12:27:04 2012
New Revision: 25139
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25139&sc=1

Log:
Fix version number

Modified:
   spoofax-imp/branches/nbl-dev/META-INF/MANIFEST.MF

Modified: spoofax-imp/branches/nbl-dev/META-INF/MANIFEST.MF
==============================================================================
--- spoofax-imp/branches/nbl-dev/META-INF/MANIFEST.MF	Wed Jul  4 12:16:15 2012	(r25138)
+++ spoofax-imp/branches/nbl-dev/META-INF/MANIFEST.MF	Wed Jul  4 12:27:04 2012	(r25139)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: NameDefinitionLanguage Plug-in
 Bundle-SymbolicName: org.strategoxt.imp.names; singleton:=true
-Bundle-Version: 1.0.0
+Bundle-Version: 0.1.0.qualifier
 Bundle-Activator: org.strategoxt.imp.names.Activator
 Import-Package: org.osgi.framework;version="1.3.0"
 Require-Bundle: org.eclipse.core.runtime,

From gabrielkonat at gmail.com  Wed Jul  4 14:43:42 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Wed, 04 Jul 2012 12:43:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25140 -
	spoofax-imp/branches/nbl-dev/META-INF
Message-ID: <20120704124342.D67A42B8016@mx2.tudelft.nl>

Author: gkonat
Date: Wed Jul  4 12:43:42 2012
New Revision: 25140
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25140&sc=1

Log:
Really fix version number

Modified:
   spoofax-imp/branches/nbl-dev/META-INF/MANIFEST.MF

Modified: spoofax-imp/branches/nbl-dev/META-INF/MANIFEST.MF
==============================================================================
--- spoofax-imp/branches/nbl-dev/META-INF/MANIFEST.MF	Wed Jul  4 12:27:04 2012	(r25139)
+++ spoofax-imp/branches/nbl-dev/META-INF/MANIFEST.MF	Wed Jul  4 12:43:42 2012	(r25140)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: NameDefinitionLanguage Plug-in
 Bundle-SymbolicName: org.strategoxt.imp.names; singleton:=true
-Bundle-Version: 0.1.0.qualifier
+Bundle-Version: 0.1.0.qualifier 
 Bundle-Activator: org.strategoxt.imp.names.Activator
 Import-Package: org.osgi.framework;version="1.3.0"
 Require-Bundle: org.eclipse.core.runtime,

From gabrielkonat at gmail.com  Wed Jul  4 14:47:39 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Wed, 04 Jul 2012 12:47:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25141 -
	spoofax-imp/trunk/org.strategoxt.imp.names/META-INF
Message-ID: <20120704124739.396202B803A@mx2.tudelft.nl>

Author: gkonat
Date: Wed Jul  4 12:47:38 2012
New Revision: 25141
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25141&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.names/META-INF/MANIFEST.MF

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/META-INF/MANIFEST.MF
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/META-INF/MANIFEST.MF	Wed Jul  4 12:43:42 2012	(r25140)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/META-INF/MANIFEST.MF	Wed Jul  4 12:47:38 2012	(r25141)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: NameDefinitionLanguage Plug-in
 Bundle-SymbolicName: org.strategoxt.imp.names; singleton:=true
-Bundle-Version: 1.0.0
+Bundle-Version: 0.1.0.qualifier
 Bundle-Activator: org.strategoxt.imp.names.Activator
 Import-Package: org.osgi.framework;version="1.3.0"
 Require-Bundle: org.eclipse.core.runtime,

From gabrielkonat at gmail.com  Wed Jul  4 15:31:31 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Wed, 04 Jul 2012 13:31:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25142 - in
	spoofax-imp/trunk/org.strategoxt.imp.names: test trans
Message-ID: <20120704133131.C2F4BCC0BA@mx4.tudelft.nl>

Author: gkonat
Date: Wed Jul  4 13:31:30 2012
New Revision: 25142
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25142&sc=1

Log:
Automatic compilation for NBL

Added:
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/splitter.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.names/test/example.nd
   spoofax-imp/trunk/org.strategoxt.imp.names/test/example.str
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/namedefinitionlanguage.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/test/example.nd
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/test/example.nd	Wed Jul  4 12:47:38 2012	(r25141)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/test/example.nd	Wed Jul  4 13:31:30 2012	(r25142)
@@ -37,7 +37,7 @@
 	VarDecl(x, e) :
 		defines variable x of type t 
 		where e has type t
-
+		
 	Var(x) :
 		refers to variable x of type t
 		has type t

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/test/example.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/test/example.str	Wed Jul  4 12:47:38 2012	(r25141)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/test/example.str	Wed Jul  4 13:31:30 2012	(r25142)
@@ -12,8 +12,10 @@
 
 signature
   constructors
-    Type   : DefDataKind
-    Import : DefDataKind
+    Type        : DefDataKind
+    Import      : DefDataKind
+    Transitive  : ImportAnno
+    CurrentFile : ImportAnno
 
   constructors
     entity   : Namespace
@@ -33,11 +35,15 @@
   nam-get-definitions :
     Entity(name, _) -> [(entity(), [name])]
 
-  nam-annotate-names(|path__):
+  nam-annotate-names(|paths__, path__):
     Entity(name, _) -> <Entity(nam-annotate-def(|path__), id)>
 
   adjust-index-def-data(store__|namespace__, path__):
-    Entity(name, _) -> <store__> DefData(path__, Type(), name)
+    Entity(name, _) -> <store__> DefData(
+                                   [namespace__|path__]
+                                 , Type()
+                                 , name
+                                 )
 
   type-of :
     Entity(name, _) -> name
@@ -63,15 +69,19 @@
   nam-get-uses :
     Entity(name, super, _) -> [(entity(), [super])]
 
-  nam-annotate-names(|path__):
+  nam-annotate-names(|paths__, path__):
     Entity(name, super, _) -> <Entity(
                                  nam-annotate-def(|path__)
-                               , nam-annotate-use(|entity())
+                               , nam-annotate-use(|paths__, entity())
                                , id
                                )>
 
   adjust-index-def-data(store__|namespace__, path__):
-    Entity(name, super, _) -> <store__> DefData(path__, Type(), name)
+    Entity(name, super, _) -> <store__> DefData(
+                                          [namespace__|path__]
+                                        , Type()
+                                        , name
+                                        )
 
   type-of :
     Entity(name, super, _) -> name
@@ -81,16 +91,16 @@
 
   adjust-index-def-data(store__|namespace__, path__):
     Entity(name, super, _) -> <store__> DefData(
-                                          path__
+                                          [property()|path__]
                                         , Import()
-                                        , (property(), super)
+                                        , (super, [])
                                         )
 
   adjust-index-def-data(store__|namespace__, path__):
     Entity(name, super, _) -> <store__> DefData(
-                                          path__
+                                          [method()|path__]
                                         , Import()
-                                        , (method(), super)
+                                        , (super, [])
                                         )
 
 
@@ -102,11 +112,15 @@
   nam-get-definitions :
     Property(x, t) -> [(property(), [x])]
 
-  nam-annotate-names(|path__):
+  nam-annotate-names(|paths__, path__):
     Property(x, t) -> <Property(nam-annotate-def(|path__), id)>
 
   adjust-index-def-data(store__|namespace__, path__):
-    Property(x, t) -> <store__> DefData(path__, Type(), t)
+    Property(x, t) -> <store__> DefData(
+                                  [namespace__|path__]
+                                , Type()
+                                , t
+                                )
 
   type-of :
     Property(x, t) -> t
@@ -127,11 +141,12 @@
     where [t] := <index-lookup ; index-get-data-all(|Type())> f
     where e := <type-of> exp
 
-  nam-annotate-names(|path__):
-    PropertyAccess(exp, f) -> <PropertyAccess(
-                                 id
-                               , nam-annotate-use(|property(), entity(), e)
-                               )>
+  nam-annotate-names(|paths__, path__):
+    PropertyAccess(exp, f) -> <PropertyAccess(id, nam-annotate-use(|paths__, property()))>
+
+  adjust-index-lookup(target__|namespace__, path__, prefix__):
+    PropertyAccess(exp, f) -> <index-lookup-children(|property(), prefix__)> e
+    where <target__> f
     where [t] := <index-lookup ; index-get-data-all(|Type())> f
     where e := <type-of> exp
 
@@ -155,11 +170,15 @@
   nam-annotate-scopes(|path__):
     For(x, t, e, f, elem*) -> <For(id, id, id, id, nam-annotate-scope(|path__))>
 
-  nam-annotate-names(|path__):
+  nam-annotate-names(|paths__, path__):
     For(x, t, e, f, elem*) -> <For(nam-annotate-def(|path__), id, id, id, id)>
 
   adjust-index-def-data(store__|namespace__, path__):
-    For(x, t, e, f, elem*) -> <store__> DefData(path__, Type(), t)
+    For(x, t, e, f, elem*) -> <store__> DefData(
+                                          [namespace__|path__]
+                                        , Type()
+                                        , t
+                                        )
 
   type-of :
     For(x, t, e, f, elem*) -> t
@@ -176,11 +195,15 @@
   nam-get-definitions :
     VarDecl(x, t, e) -> [(variable(), [x])]
 
-  nam-annotate-names(|path__):
+  nam-annotate-names(|paths__, path__):
     VarDecl(x, t, e) -> <VarDecl(nam-annotate-def(|path__), id, id)>
 
   adjust-index-def-data(store__|namespace__, path__):
-    VarDecl(x, t, e) -> <store__> DefData(path__, Type(), t)
+    VarDecl(x, t, e) -> <store__> DefData(
+                                    [namespace__|path__]
+                                  , Type()
+                                  , t
+                                  )
 
   type-of :
     VarDecl(x, t, e) -> t
@@ -199,12 +222,15 @@
     VarDecl(x, e) -> [(variable(), [x])]
     where t := <type-of> e
 
-  nam-annotate-names(|path__):
+  nam-annotate-names(|paths__, path__):
     VarDecl(x, e) -> <VarDecl(nam-annotate-def(|path__), id)>
-    where t := <type-of> e
 
   adjust-index-def-data(store__|namespace__, path__):
-    VarDecl(x, e) -> <store__> DefData(path__, Type(), t)
+    VarDecl(x, e) -> <store__> DefData(
+                                 [namespace__|path__]
+                               , Type()
+                               , t
+                               )
     where t := <type-of> e
 
   type-of :
@@ -226,9 +252,8 @@
     Var(x) -> [(variable(), [x])]
     where [t] := <index-lookup ; index-get-data-all(|Type())> x
 
-  nam-annotate-names(|path__):
-    Var(x) -> <Var(nam-annotate-use(|variable()))>
-    where [t] := <index-lookup ; index-get-data-all(|Type())> x
+  nam-annotate-names(|paths__, path__):
+    Var(x) -> <Var(nam-annotate-use(|paths__, variable()))>
 
   type-of :
     Var(x) -> t
@@ -255,13 +280,12 @@
     Method(f, param*, t, _) -> [(method(), [f])]
     where t* := <type-of> param*
 
-  nam-annotate-names(|path__):
+  nam-annotate-names(|paths__, path__):
     Method(f, param*, t, _) -> <Method(nam-annotate-def(|path__), id, id, id)>
-    where t* := <type-of> param*
 
   adjust-index-def-data(store__|namespace__, path__):
     Method(f, param*, t, _) -> <store__> DefData(
-                                           path__
+                                           [namespace__|path__]
                                          , Type()
                                          , MT(t*, t)
                                          )
@@ -284,11 +308,15 @@
   nam-get-definitions :
     Param(x, t) -> [(variable(), [x])]
 
-  nam-annotate-names(|path__):
+  nam-annotate-names(|paths__, path__):
     Param(x, t) -> <Param(nam-annotate-def(|path__), id)>
 
   adjust-index-def-data(store__|namespace__, path__):
-    Param(x, t) -> <store__> DefData(path__, Type(), t)
+    Param(x, t) -> <store__> DefData(
+                               [namespace__|path__]
+                             , Type()
+                             , t
+                             )
 
   type-of :
     Param(x, t) -> t
@@ -311,12 +339,16 @@
     where e := <type-of> exp
     where t* := <type-of> e*
 
-  nam-annotate-names(|path__):
+  nam-annotate-names(|paths__, path__):
     MethodCall(exp, f, e*) -> <MethodCall(
                                  id
-                               , nam-annotate-use(|method(), entity(), e)
+                               , nam-annotate-use(|paths__, method())
                                , id
                                )>
+
+  adjust-index-lookup(target__|namespace__, path__, prefix__):
+    MethodCall(exp, f, e*) -> <index-lookup-children(|method(), prefix__)> e
+    where <target__> f
     where [MT(t*, t)] := <index-lookup ; index-get-data-all(|Type())> f
     where e := <type-of> exp
     where t* := <type-of> e*
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str	Wed Jul  4 12:47:38 2012	(r25141)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str	Wed Jul  4 13:31:30 2012	(r25142)
@@ -8,12 +8,27 @@
   include/NameDefinitionLanguage
   lib/editor-common.generated
 
+rules // Incremental code generation of project
+	
+  index-compile-ast(|file, subfile):
+    ast at Naming(name, _, _, _) -> None()
+    with
+    	str       := <generate-name-analysis-stratego> ast ;
+      full-path := <dirname> file ;
+      filename  := <guarantee-extension(|"str")> name ;
+      <fclose> <fputs> (str, <fopen> ($[[full-path]/[filename]], "w"))
+
 rules
       
 	generate-name-analysis:
-		(selected, position, ast at Naming(name, _, _, _), path, project-path) -> (filename, result)
+		(_, _, ast at Naming(name, _, _, _), path, project-path) -> (filename, result)
+		with
+			filename := <guarantee-extension(|"str")> path ;
+			result   := <generate-name-analysis-stratego> ast
+			
+	generate-name-analysis-stratego:
+		ast -> result
 		with
-			filename   := <guarantee-extension(|"str")> path ;
 			str-module := <to-analysis ; alltd(\ListVar(x) -> x\)> ast ;
 			// use next line to debug which AST node cannot be handled by the pretty-printer
 			<bottomup(try(not(is-string) ; not(is-list) ; not(pp-stratego-string) ; debug(!"cannot pp ")))> str-module ;

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/trans/namedefinitionlanguage.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/trans/namedefinitionlanguage.str	Wed Jul  4 12:47:38 2012	(r25141)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/trans/namedefinitionlanguage.str	Wed Jul  4 13:31:30 2012	(r25142)
@@ -14,6 +14,7 @@
   analysis-manual
   check
   generate
+  splitter
 
 rules // Analysis
   
@@ -45,14 +46,21 @@
     where
       not(is-tuple)
     with
+      index-setup(|<language>, [<project-path>], ".");
+      disable-commit-and-compile // Disable compilation during analysis.
+    with
       editor-queue-analysis
-      
+    with
+      // Enable and trigger compilation after all files have been analysed.
+      <enable-commit-and-compile> <language>;
+      <trigger-commit-and-compile> <language>
+ 
   // Called when current file is saved.
   editor-save:
-    (ast, _, _, path, project-path) -> None()
+    (ast, _, _, _, _) -> None()
     with
-      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
-      index-commit
+      index-setup(|<language>, [<project-path>], ".");
+      <trigger-commit-and-compile> <language>
 
 rules // Editor services
   

Added: spoofax-imp/trunk/org.strategoxt.imp.names/trans/splitter.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/trans/splitter.str	Wed Jul  4 13:31:30 2012	(r25142)
@@ -0,0 +1,11 @@
+module splitter
+ 
+imports
+ 
+  include/NameDefinitionLanguage
+  
+ 
+rules // Splitter configuration
+ 
+  // Enable AST splitting by analyze-top for compilation of top level units.
+  index-split = id
\ No newline at end of file

From m.dejonge at tudelft.nl  Wed Jul  4 15:51:56 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Wed, 04 Jul 2012 13:51:56 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25143 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff
Message-ID: <20120704135156.5C09F108C00D@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Wed Jul  4 13:51:55 2012
New Revision: 25143
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25143&sc=1

Log:


Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTreeMatcher.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTreeMatcher.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTreeMatcher.java	Wed Jul  4 13:31:30 2012	(r25142)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTreeMatcher.java	Wed Jul  4 13:51:55 2012	(r25143)
@@ -1,6 +1,8 @@
 package org.spoofax.interpreter.library.jsglr.treediff;
 
 import java.util.ArrayList;
+
+import org.spoofax.interpreter.core.Tools;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 
 /**
@@ -194,15 +196,13 @@
 				IStrategoTerm trm2Child = trm2.getSubterm(i);
 				IStrategoTerm trm1Child = trm1.getSubterm(i);
 				IStrategoTerm trm2ChildPartner = TermMatchAttachment.getMatchedTerm(trm2Child);
-				if(
-					trm1Child != trm2ChildPartner && 
-					!isBetterCandidate(trm1Child, trm2ChildPartner, trm2Child) &&
-					matchingScore(trm1Child, trm2Child) > 0
-				){
-					//trm1Child has the same child index as trm2Child, and matched parents M(trm1,trm2)
-					//Therefore, trm1child is the preferred candidate for trm2Child, 
-					//unless trm2ChildPartner is better
-					matchTerminalNode(root1, trm1Child, trm2Child);
+				if(trm1Child != trm2ChildPartner){ 
+					if(hasBetterOrEqualMatchingScore(trm2ChildPartner, trm1Child, trm2Child) || haveTupleOrListType(trm1Child, trm2Child)){
+						//trm1Child has the same child index as trm2Child, and matched parents M(trm1,trm2)
+						//Therefore, trm1child is the preferred candidate for trm2Child, 
+						//unless trm2ChildPartner is better
+						matchTerminalNode(root1, trm1Child, trm2Child);
+					}
 				}
 			}
 		}
@@ -211,4 +211,13 @@
 		}
 	}
 
+	private boolean haveTupleOrListType(IStrategoTerm trm1, IStrategoTerm trm2) {
+		return (Tools.isTermList(trm1) && Tools.isTermList(trm2)) || (Tools.isTermTuple(trm1) && Tools.isTermTuple(trm2));
+	}
+
+	private boolean hasBetterOrEqualMatchingScore(IStrategoTerm oldCandidate,
+			IStrategoTerm newCandidate, IStrategoTerm trm) {
+		return !isBetterCandidate(newCandidate, oldCandidate, trm) && matchingScore(newCandidate, trm) > 0;
+	}
+
 }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java	Wed Jul  4 13:31:30 2012	(r25142)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java	Wed Jul  4 13:51:55 2012	(r25143)
@@ -1,6 +1,9 @@
 package org.spoofax.interpreter.library.jsglr.treediff;
 
 import java.util.ArrayList;
+import java.util.Arrays;
+
+import org.spoofax.interpreter.core.Tools;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.terms.attachments.ParentAttachment;
 
@@ -101,6 +104,7 @@
 			2.0 /*equal signatures*/ 
 		  + 2.0 /*equal terms*/ 
 		  + 2.0 /*matched parents*/ 
+		  + 2.0 /*matched child index*/ 
 		  + leafnodes1.size() + leafnodes2.size();		
 		double value = 0.0;
 		
@@ -129,11 +133,23 @@
 			value += 1.0; //+1 for no violation in parent matches
 		else if (partnerParent2 == parent1){
 			value += 2.0; //+2 for matched parents
+			int childIndex1 = getChildIndex(parent1, t1);
+			int childIndex2 = getChildIndex(parent2, t2);
+			assert childIndex1 != -1 && childIndex2 != -1;
+			if(Tools.isTermAppl(parent1) && HelperFunctions.haveSameSignature(parent1, parent2)){
+				if(childIndex1 == childIndex2){
+					value +=2.0; //+2 for matched child index
+				}
+			}
 		}
 		
 		return 1.0 * value/maxValue;
 	}
 
+	private int getChildIndex(IStrategoTerm parent, IStrategoTerm trm) {
+		return Arrays.asList(parent.getAllSubterms()).indexOf(trm);
+	}
+
 	private boolean meetsMatchingCriteria(IStrategoTerm t1, IStrategoTerm t2) {
 		if(t1 == null || t2 == null)
 			return false;

From gabrielkonat at gmail.com  Wed Jul  4 16:08:53 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Wed, 04 Jul 2012 14:08:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25144 -
	spoofax-imp/trunk/org.strategoxt.imp.names/META-INF
Message-ID: <20120704140853.67EDC7F800F@mx1.tudelft.nl>

Author: gkonat
Date: Wed Jul  4 14:08:51 2012
New Revision: 25144
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25144&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.names/META-INF/MANIFEST.MF

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/META-INF/MANIFEST.MF
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/META-INF/MANIFEST.MF	Wed Jul  4 13:51:55 2012	(r25143)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/META-INF/MANIFEST.MF	Wed Jul  4 14:08:51 2012	(r25144)
@@ -1,6 +1,6 @@
 Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
-Bundle-Name: NameDefinitionLanguage Plug-in
+Bundle-Name: NBL Plug-in
 Bundle-SymbolicName: org.strategoxt.imp.names; singleton:=true
 Bundle-Version: 0.1.0.qualifier
 Bundle-Activator: org.strategoxt.imp.names.Activator
@@ -17,5 +17,5 @@
   org.spoofax.jsglr,
   org.strategoxt.strj
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
-Bundle-ActivationPolicy: lazy
 Export-Package: org.strategoxt.imp.names
+Bundle-Vendor: Spoofax.org

From gabrielkonat at gmail.com  Wed Jul  4 16:33:21 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Wed, 04 Jul 2012 14:33:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25145 -
	spoofax-imp/trunk/org.strategoxt.imp.feature
Message-ID: <20120704143321.41779108C025@mx3.tudelft.nl>

Author: gkonat
Date: Wed Jul  4 14:33:20 2012
New Revision: 25145
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25145&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Wed Jul  4 14:08:51 2012	(r25144)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Wed Jul  4 14:33:20 2012	(r25145)
@@ -123,8 +123,7 @@
          id="org.spoofax.interpreter.library.jline"
          download-size="0"
          install-size="0"
-         version="0.1.1.qualifier"
-         unpack="true"/>
+         version="0.1.1.qualifier"/>
 
    <plugin
          id="org.spoofax.interpreter.library.eclipse"
@@ -403,13 +402,12 @@
          download-size="0"
          install-size="0"
          version="0.1.0.qualifier"/>
-         
+
    <plugin
          id="org.strategoxt.imp.names"
          download-size="0"
          install-size="0"
-         version="0.1.0.qualifier"
-         unpack="false"/>
+         version="0.1.0.qualifier"/>
 
    <plugin
          id="org.spoofax.interpreter.library.interpreter"

From lennart at lclnet.nl  Wed Jul  4 16:38:18 2012
From: lennart at lclnet.nl (Lennart Kats)
Date: Wed, 04 Jul 2012 14:38:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25146 -
	spoofax-imp/trunk/org.strategoxt.imp.feature
Message-ID: <20120704143818.6A7882B801E@mx2.tudelft.nl>

Author: LennartKats
Date: Wed Jul  4 14:38:18 2012
New Revision: 25146
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25146&sc=1

Log:
Restore removed unpack attribute

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Wed Jul  4 14:33:20 2012	(r25145)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Wed Jul  4 14:38:18 2012	(r25146)
@@ -245,6 +245,7 @@
          id="org.strategoxt.imp.generator"
          download-size="0"
          install-size="0"
+         unpack="true"
          version="0.1.2.qualifier"/>
 
    <plugin

From v.vergu at gmail.com  Thu Jul  5 08:40:38 2012
From: v.vergu at gmail.com (Vlag Vergu)
Date: Thu, 05 Jul 2012 06:40:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25147 - in
	spoofax-imp/trunk: org.strategoxt.imp.runtime.sidebyside.latest
	org.strategoxt.imp.runtime.sidebyside.legacy
	org.strategoxt.imp.runtime.sidebyside.main
Message-ID: <20120705064038.1DBC6108C00E@mx3.tudelft.nl>

Author: VladVergu
Date: Thu Jul  5 06:40:36 2012
New Revision: 25147
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25147&sc=1

Log:
Share project "org.strategoxt.imp.runtime.sidebyside.main" into "https://svn.strategoxt.org/repos/StrategoXT"
Share project "org.strategoxt.imp.runtime.sidebyside.legacy" into "https://svn.strategoxt.org/repos/StrategoXT"
Share project "org.strategoxt.imp.runtime.sidebyside.latest" into "https://svn.strategoxt.org/repos/StrategoXT"

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/

From v.vergu at gmail.com  Thu Jul  5 08:41:47 2012
From: v.vergu at gmail.com (Vlag Vergu)
Date: Thu, 05 Jul 2012 06:41:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25148 - in
	spoofax-imp/trunk: org.strategoxt.imp.runtime.sidebyside.latest
	org.strategoxt.imp.runtime.sidebyside.latest/.settings
	org.strategoxt.imp.runtime.sidebyside.lat...
Message-ID: <20120705064147.CC120CC0F7@mx4.tudelft.nl>

Author: VladVergu
Date: Thu Jul  5 06:41:47 2012
New Revision: 25148
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25148&sc=1

Log:
Soft dependencies for editor side-by-side placement that should falling back to dummy functionality for Eclipse Juno

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/.classpath   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/.project   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/.settings/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/.settings/org.eclipse.jdt.core.prefs   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/META-INF/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/META-INF/MANIFEST.MF   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/bin/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/bin/org/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/bin/org/stratego/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/bin/org/stratego/imp/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/bin/org/stratego/imp/runtime/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/bin/org/stratego/imp/runtime/services/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/bin/org/stratego/imp/runtime/services/sidebyside/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/bin/org/stratego/imp/runtime/services/sidebyside/latest/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/bin/org/stratego/imp/runtime/services/sidebyside/latest/LatestSidePaneEditorHelper.class   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/build.properties   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/src/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/src/org/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/src/org/stratego/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/src/org/stratego/imp/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/src/org/stratego/imp/runtime/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/src/org/stratego/imp/runtime/services/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/src/org/stratego/imp/runtime/services/sidebyside/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/src/org/stratego/imp/runtime/services/sidebyside/latest/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/src/org/stratego/imp/runtime/services/sidebyside/latest/LatestSidePaneEditorHelper.java   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/.classpath   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/.project   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/.settings/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/.settings/org.eclipse.jdt.core.prefs   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/META-INF/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/META-INF/MANIFEST.MF   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/bin/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/bin/org/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/bin/org/stratego/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/bin/org/stratego/imp/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/bin/org/stratego/imp/runtime/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/bin/org/stratego/imp/runtime/services/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/bin/org/stratego/imp/runtime/services/sidebyside/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/bin/org/stratego/imp/runtime/services/sidebyside/legacy/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/bin/org/stratego/imp/runtime/services/sidebyside/legacy/LegacySidePaneEditorHelper.class   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/build.properties   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/src/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/src/org/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/src/org/stratego/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/src/org/stratego/imp/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/src/org/stratego/imp/runtime/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/src/org/stratego/imp/runtime/services/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/src/org/stratego/imp/runtime/services/sidebyside/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/src/org/stratego/imp/runtime/services/sidebyside/legacy/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/src/org/stratego/imp/runtime/services/sidebyside/legacy/LegacySidePaneEditorHelper.java   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/.classpath   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/.project   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/.settings/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/.settings/org.eclipse.jdt.core.prefs   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/META-INF/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/META-INF/MANIFEST.MF   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/bin/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/bin/org/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/bin/org/stratego/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/bin/org/stratego/imp/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/bin/org/stratego/imp/runtime/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/bin/org/stratego/imp/runtime/services/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/bin/org/stratego/imp/runtime/services/sidebyside/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/bin/org/stratego/imp/runtime/services/sidebyside/main/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/bin/org/stratego/imp/runtime/services/sidebyside/main/SidePaneEditorHelper.class   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/build.properties   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/src/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/src/org/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/src/org/stratego/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/src/org/stratego/imp/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/src/org/stratego/imp/runtime/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/src/org/stratego/imp/runtime/services/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/src/org/stratego/imp/runtime/services/sidebyside/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/src/org/stratego/imp/runtime/services/sidebyside/main/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/src/org/stratego/imp/runtime/services/sidebyside/main/SidePaneEditorHelper.java   (contents, props changed)

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/.classpath
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/.classpath	Thu Jul  5 06:41:47 2012	(r25148)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/.project
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/.project	Thu Jul  5 06:41:47 2012	(r25148)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>org.strategoxt.imp.runtime.sidebyside.latest</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/.settings/org.eclipse.jdt.core.prefs
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/.settings/org.eclipse.jdt.core.prefs	Thu Jul  5 06:41:47 2012	(r25148)
@@ -0,0 +1,7 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
+org.eclipse.jdt.core.compiler.compliance=1.6
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.6

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/META-INF/MANIFEST.MF
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/META-INF/MANIFEST.MF	Thu Jul  5 06:41:47 2012	(r25148)
@@ -0,0 +1,11 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Spoofax/IMP Side-by-Side Latest
+Bundle-SymbolicName: org.strategoxt.imp.runtime.sidebyside.latest
+Bundle-Version: 0.0.1.qualifier
+Bundle-RequiredExecutionEnvironment: JavaSE-1.6
+Bundle-Vendor: Spoofax.org
+Bundle-ActivationPolicy: lazy
+Export-Package: org.stratego.imp.runtime.services.sidebyside.latest
+Require-Bundle: org.eclipse.ui,
+ org.strategoxt.imp.runtime.sidebyside.main;bundle-version="0.0.1"

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/bin/org/stratego/imp/runtime/services/sidebyside/latest/LatestSidePaneEditorHelper.class
==============================================================================
Binary file. No diff available.

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/build.properties	Thu Jul  5 06:41:47 2012	(r25148)
@@ -0,0 +1,4 @@
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/src/org/stratego/imp/runtime/services/sidebyside/latest/LatestSidePaneEditorHelper.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/src/org/stratego/imp/runtime/services/sidebyside/latest/LatestSidePaneEditorHelper.java	Thu Jul  5 06:41:47 2012	(r25148)
@@ -0,0 +1,30 @@
+package org.stratego.imp.runtime.services.sidebyside.latest;
+
+import org.eclipse.ui.IEditorPart;
+import org.stratego.imp.runtime.services.sidebyside.main.SidePaneEditorHelper;
+
+/**
+ * TODO: no modern implementation for Side by Side editors is available.
+ * This class is just a dummy
+ * 
+ * @author vladvergu
+ */
+public class LatestSidePaneEditorHelper extends SidePaneEditorHelper {
+
+	@Override
+	public void internalOpenSidePane() throws Throwable {
+	}
+
+	@Override
+	public void restoreFocus() {
+	}
+
+	@Override
+	public void setOpenedEditor(IEditorPart editor) {
+	}
+
+	@Override
+	public void undoOpenSidePane() {
+	}
+
+}

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/.classpath
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/.classpath	Thu Jul  5 06:41:47 2012	(r25148)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/.project
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/.project	Thu Jul  5 06:41:47 2012	(r25148)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>org.strategoxt.imp.runtime.sidebyside.legacy</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/.settings/org.eclipse.jdt.core.prefs
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/.settings/org.eclipse.jdt.core.prefs	Thu Jul  5 06:41:47 2012	(r25148)
@@ -0,0 +1,7 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
+org.eclipse.jdt.core.compiler.compliance=1.6
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.6

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/META-INF/MANIFEST.MF
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/META-INF/MANIFEST.MF	Thu Jul  5 06:41:47 2012	(r25148)
@@ -0,0 +1,14 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Spoofax/IMP Side-by-Side Legacy
+Bundle-SymbolicName: org.strategoxt.imp.runtime.sidebyside.legacy
+Bundle-Version: 0.0.1.qualifier
+Bundle-Vendor: Spoofax.org
+Bundle-RequiredExecutionEnvironment: JavaSE-1.6
+Bundle-ActivationPolicy: lazy
+Export-Package: org.stratego.imp.runtime.services.sidebyside.legacy
+Require-Bundle: org.eclipse.ui,
+ org.eclipse.ui.editors,
+ org.eclipse.ui.workbench.texteditor,
+ org.eclipse.core.runtime,
+ org.strategoxt.imp.runtime.sidebyside.main;bundle-version="0.0.1"

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/bin/org/stratego/imp/runtime/services/sidebyside/legacy/LegacySidePaneEditorHelper.class
==============================================================================
Binary file. No diff available.

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/build.properties	Thu Jul  5 06:41:47 2012	(r25148)
@@ -0,0 +1,4 @@
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/src/org/stratego/imp/runtime/services/sidebyside/legacy/LegacySidePaneEditorHelper.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/src/org/stratego/imp/runtime/services/sidebyside/legacy/LegacySidePaneEditorHelper.java	Thu Jul  5 06:41:47 2012	(r25148)
@@ -0,0 +1,114 @@
+package org.stratego.imp.runtime.services.sidebyside.legacy;
+
+import java.lang.ref.WeakReference;
+
+import org.eclipse.ui.IEditorPart;
+import org.eclipse.ui.IEditorReference;
+import org.eclipse.ui.IWorkbenchPage;
+import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.internal.EditorAreaHelper;
+import org.eclipse.ui.internal.EditorPane;
+import org.eclipse.ui.internal.EditorSashContainer;
+import org.eclipse.ui.internal.EditorStack;
+import org.eclipse.ui.internal.WorkbenchPage;
+import org.stratego.imp.runtime.services.sidebyside.main.SidePaneEditorHelper;
+
+/**
+ * A helper class for opening editors side-by-side.
+ * 
+ * Uses the org.eclipse.ui.internal.* API, so the class should be used defensively.
+ * 
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+ at SuppressWarnings("restriction")
+public class LegacySidePaneEditorHelper extends SidePaneEditorHelper {
+
+	private EditorStack previousNewStack;
+
+	private WeakReference<IEditorPart> previousNewEditorRef;
+
+	private EditorStack oldStack;
+
+	private EditorStack newStack;
+
+	private EditorSashContainer layoutPart;
+
+	private boolean isEmptyPane;
+
+	public void internalOpenSidePane() throws Throwable {
+		// if (!EditorState.isUIThread())
+		// throw new IllegalStateException("Must be called from the UI thread");
+
+		IWorkbenchPage page = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage();
+
+		EditorAreaHelper editorArea = ((WorkbenchPage) page).getEditorPresentation();
+
+		// Find an existing stack next to the active editor
+		oldStack = editorArea.getActiveWorkbook();
+		newStack = findReusableStack(editorArea);
+
+		if (newStack == null) {
+			// Create a new stack
+			layoutPart = (EditorSashContainer) editorArea.getLayoutPart();
+			newStack = EditorStack.newEditorWorkbook(layoutPart, (WorkbenchPage) page);
+			oldStack.copyAppearanceProperties(newStack);
+			layoutPart.add(newStack);
+			isEmptyPane = true;
+		} else {
+			isEmptyPane = false;
+		}
+
+		newStack.setFocus();
+		previousNewEditorRef = null;
+	}
+
+	private EditorStack findReusableStack(EditorAreaHelper editorArea) {
+		EditorStack result = null;
+		boolean foundGoodMatch = false;
+		IEditorPart previousNewEditor = previousNewEditorRef == null ? null : previousNewEditorRef.get();
+
+		for (Object stackObject : editorArea.getWorkbooks()) {
+			if (!(stackObject instanceof EditorStack))
+				continue;
+			EditorStack stack = (EditorStack) stackObject;
+			if (stack != oldStack) { // good, other stack
+				if (previousNewEditor != null && contains(stack.getEditors(), previousNewEditor)) {
+					return stack;
+				} else if (stack == previousNewStack) {
+					result = stack;
+					foundGoodMatch = true;
+				} else if (!foundGoodMatch && stack.getParent() == oldStack.getParent()) {
+					result = stack;
+					foundGoodMatch = true;
+				} else if (!foundGoodMatch) {
+					result = stack;
+				}
+			}
+		}
+
+		return result;
+	}
+
+	private static boolean contains(EditorPane[] array, IEditorPart member) {
+		for (int i = 0; i < array.length; i++) {
+			IEditorReference ref = array[i].getEditorReference();
+			if (ref.getEditor(false) == member)
+				return true;
+		}
+		return false;
+	}
+
+	public void restoreFocus() throws Throwable {
+		previousNewStack = newStack;
+		oldStack.setFocus();
+	}
+
+	public void setOpenedEditor(IEditorPart editor) {
+		previousNewEditorRef = editor == null ? null : new WeakReference<IEditorPart>(editor);
+	}
+
+	public void undoOpenSidePane() throws Throwable {
+		if (isEmptyPane)
+			layoutPart.remove(newStack);
+	}
+}

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/.classpath
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/.classpath	Thu Jul  5 06:41:47 2012	(r25148)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/.project
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/.project	Thu Jul  5 06:41:47 2012	(r25148)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>org.strategoxt.imp.runtime.sidebyside.main</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/.settings/org.eclipse.jdt.core.prefs
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/.settings/org.eclipse.jdt.core.prefs	Thu Jul  5 06:41:47 2012	(r25148)
@@ -0,0 +1,7 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
+org.eclipse.jdt.core.compiler.compliance=1.6
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.6

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/META-INF/MANIFEST.MF
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/META-INF/MANIFEST.MF	Thu Jul  5 06:41:47 2012	(r25148)
@@ -0,0 +1,9 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Spoofax/IMP Side-by-Side Core
+Bundle-SymbolicName: org.strategoxt.imp.runtime.sidebyside.main
+Bundle-Version: 0.0.1.qualifier
+Bundle-RequiredExecutionEnvironment: JavaSE-1.6
+Bundle-Vendor: Spoofax.org
+Export-Package: org.stratego.imp.runtime.services.sidebyside.main
+Require-Bundle: org.eclipse.ui;bundle-version="3.6.2"

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/bin/org/stratego/imp/runtime/services/sidebyside/main/SidePaneEditorHelper.class
==============================================================================
Binary file. No diff available.

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/build.properties	Thu Jul  5 06:41:47 2012	(r25148)
@@ -0,0 +1,4 @@
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/src/org/stratego/imp/runtime/services/sidebyside/main/SidePaneEditorHelper.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/src/org/stratego/imp/runtime/services/sidebyside/main/SidePaneEditorHelper.java	Thu Jul  5 06:41:47 2012	(r25148)
@@ -0,0 +1,19 @@
+package org.stratego.imp.runtime.services.sidebyside.main;
+
+import org.eclipse.ui.IEditorPart;
+
+/**
+ * 
+ * @author vladvergu
+ */
+public abstract class SidePaneEditorHelper {
+	
+	abstract public void internalOpenSidePane() throws Throwable;
+	
+	abstract public void restoreFocus() throws Throwable;
+	
+	abstract public void setOpenedEditor(IEditorPart editor);
+	
+	abstract public void undoOpenSidePane() throws Throwable;
+	
+}

From v.vergu at gmail.com  Thu Jul  5 08:56:47 2012
From: v.vergu at gmail.com (Vlag Vergu)
Date: Thu, 05 Jul 2012 06:56:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25149 - hydra/jobs
	spoofax-imp/trunk/org.strategoxt.imp.feature
	spoofax-imp/trunk/org.strategoxt.imp.runtime
	spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF spoofax-...
Message-ID: <20120705065647.9006E2B8021@mx2.tudelft.nl>

Author: VladVergu
Date: Thu Jul  5 06:56:45 2012
New Revision: 25149
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25149&sc=1

Log:
Include Side-by-Side stuff in build

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/SideBySideService.java   (contents, props changed)
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/SidePaneEditorHelper.java
Modified:
   hydra/jobs/spoofax-imp.nix
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Thu Jul  5 06:41:47 2012	(r25148)
+++ hydra/jobs/spoofax-imp.nix	Thu Jul  5 06:56:45 2012	(r25149)
@@ -113,6 +113,9 @@
                  ${spoofaxImp}/org.strategoxt.imp.metatooling \
                  ${spoofaxImp}/org.strategoxt.imp.nativebundle \
                  ${spoofaxImp}/org.strategoxt.imp.runtime \
+                 ${spoofaxImp}/org.strategoxt.imp.runtime.sidebyside.main \
+                 ${spoofaxImp}/org.strategoxt.imp.runtime.sidebyside.legacy \
+                 ${spoofaxImp}/org.strategoxt.imp.runtime.sidebyside.latest \
                  ${spoofaxImp}/org.strategoxt.imp.updatesite \
                  ${spoofaxImp}/org.strategoxt.imp.debug.core \
                  ${spoofaxImp}/org.strategoxt.imp.debug.stratego.core \

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Thu Jul  5 06:41:47 2012	(r25148)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Thu Jul  5 06:56:45 2012	(r25149)
@@ -245,7 +245,6 @@
          id="org.strategoxt.imp.generator"
          download-size="0"
          install-size="0"
-         unpack="true"
          version="0.1.2.qualifier"/>
 
    <plugin
@@ -417,4 +416,25 @@
          version="0.1.0.qualifier"
          unpack="false"/>
 
+   <plugin
+         id="org.strategoxt.imp.runtime.sidebyside.latest"
+         download-size="0"
+         install-size="0"
+         version="0.0.1.qualifier"
+         unpack="false"/>
+
+   <plugin
+         id="org.strategoxt.imp.runtime.sidebyside.legacy"
+         download-size="0"
+         install-size="0"
+         version="0.0.1.qualifier"
+         unpack="false"/>
+
+   <plugin
+         id="org.strategoxt.imp.runtime.sidebyside.main"
+         download-size="0"
+         install-size="0"
+         version="0.0.1.qualifier"
+         unpack="false"/>
+
 </feature>

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF	Thu Jul  5 06:41:47 2012	(r25148)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF	Thu Jul  5 06:56:45 2012	(r25149)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: Spoofax/IMP Runtime
 Bundle-SymbolicName: org.strategoxt.imp.runtime;singleton:=true
-Bundle-Version: 0.1.1.qualifier
+Bundle-Version: 0.1.2.qualifier
 Require-Bundle: org.eclipse.imp.runtime,
  org.spoofax.jsglr;bundle-version="0.3.0",
  org.spoofax.interpreter.core,
@@ -27,7 +27,10 @@
  org.strategoxt.strj,
  org.strategoxt.imp.debug.core,
  org.eclipse.core.expressions,
- org.spoofax.interpreter.library.language;bundle-version="1.0.0"
+ org.spoofax.interpreter.library.language;bundle-version="1.0.0",
+ org.strategoxt.imp.runtime.sidebyside.main;bundle-version="0.0.1",
+ org.strategoxt.imp.runtime.sidebyside.legacy;bundle-version="0.0.1";resolution:=optional,
+ org.strategoxt.imp.runtime.sidebyside.latest;bundle-version="0.0.1"
 Export-Package: org.strategoxt.imp.runtime,
  org.strategoxt.imp.runtime.dynamicloading,
  org.strategoxt.imp.runtime.parser,

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch	Thu Jul  5 06:41:47 2012	(r25148)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch	Thu Jul  5 06:56:45 2012	(r25149)
@@ -10,7 +10,8 @@
 <booleanAttribute key="clearws" value="false"/>
 <booleanAttribute key="clearwslog" value="false"/>
 <stringAttribute key="configLocation" value="${workspace_loc}/.metadata/.plugins/org.eclipse.pde.core/Spoofax-IMP (with assertions)"/>
-<booleanAttribute key="default" value="true"/>
+<booleanAttribute key="default" value="false"/>
+<stringAttribute key="deselected_workspace_plugins" value="org.strategoxt.imp.runtime.sidebyside.legacy,tester"/>
 <booleanAttribute key="includeOptional" value="true"/>
 <stringAttribute key="location" value="${workspace_loc}/../runtime-spoofax-imp"/>
 <stringAttribute key="org.eclipse.debug.core.source_locator_id" value="org.eclipse.pde.ui.launcher.PDESourceLookupDirector"/>
@@ -26,6 +27,8 @@
 <stringAttribute key="pde.version" value="3.3"/>
 <stringAttribute key="product" value="org.eclipse.sdk.ide"/>
 <booleanAttribute key="restart" value="false"/>
+<stringAttribute key="selected_target_plugins" value="com.ibm.icu at default:default,com.ibm.wala.shrike at default:default,com.jcraft.jsch at default:default,com.sun.el at default:default,javax.annotation at default:default,javax.el at default:default,javax.inject at default:default,javax.servlet.jsp at default:default,javax.servlet at default:default,javax.xml at default:default,lpg.runtime at default:default,org.apache.ant at default:default,org.apache.batik.css at default:default,org.apache.batik.util.gui at default:default,org.apache.batik.util at default:default,org.apache.commons.codec at default:default,org.apache.commons.httpclient at default:default,org.apache.commons.logging at default:default,org.apache.felix.gogo.command at default:default,org.apache.felix.gogo.runtime at default:default,org.apache.felix.gogo.shell at default:default,org.apache.jasper.glassfish at default:default,org.apache.lucene.analysis at default:default,org.apache.lucene.core at default:default,org.apache.lucene at default:default,org.eclipse.ant.core at default:defa
 ult,org.eclipse.ant.launching at default:default,org.eclipse.ant.ui at default:default,org.eclipse.compare.core at default:default,org.eclipse.compare at default:default,org.eclipse.core.commands at default:default,org.eclipse.core.contenttype at default:default,org.eclipse.core.databinding.beans at default:default,org.eclipse.core.databinding.observable at default:default,org.eclipse.core.databinding.property at default:default,org.eclipse.core.databinding at default:default,org.eclipse.core.expressions at default:default,org.eclipse.core.externaltools at default:default,org.eclipse.core.filebuffers at default:default,org.eclipse.core.filesystem.macosx at default:false,org.eclipse.core.filesystem at default:default,org.eclipse.core.jobs at default:default,org.eclipse.core.net at default:default,org.eclipse.core.resources at default:default,org.eclipse.core.runtime.compatibility.registry at default:false,org.eclipse.core.runtime.compatibility at default:default,org.eclipse.core.runtime at default:true,org.eclipse.core.variables at default:
 default,org.eclipse.cvs at default:default,org.eclipse.debug.core at defaul ult:default,org.eclipse.ecf.filetransfer at default:default,org.eclipse.ecf.identity at default:default,org.eclipse.ecf.provider.filetransfer.httpclient.ssl at default:false,org.eclipse.ecf.provider.filetransfer.httpclient at default:default,org.eclipse.ecf.provider.filetransfer.ssl at default:false,org.eclipse.ecf.provider.filetransfer at default:default,org.eclipse.ecf.ssl at default:false,org.eclipse.ecf at default:default,org.eclipse.emf.common at default:default,org.eclipse.emf.ecore.change at default:default,org.eclipse.emf.ecore.xmi at default:default,org.eclipse.emf.ecore at default:default,org.eclipse.equinox.app at default:default,org.eclipse.equinox.bidi at default:default,org.eclipse.equinox.common at 2:true,org.eclipse.equinox.concurrent at default:default,org.eclipse.equinox.console at default:default,org.eclipse.equinox.ds at 1:true,org.eclipse.equinox.event at default:default,org.eclipse.equinox.frameworkadmin.equinox at default:default,org.eclipse.equinox.frameworkadmin at default:default,org.eclipse.equinox.http.jetty@
 default:default,org.eclipse.equinox.http.registry at default:default,org.eclipse.equinox.http.servlet at default:default,org.eclipse.equinox.jsp.j ult:default,org.eclipse.equinox.p2.publisher.eclipse at default:default,org.eclipse.equinox.p2.publisher at default:default,org.eclipse.equinox.p2.ql at default:default,org.eclipse.equinox.p2.reconciler.dropins at default:default,org.eclipse.equinox.p2.repository.tools at default:default,org.eclipse.equinox.p2.repository at default:default,org.eclipse.equinox.p2.touchpoint.eclipse at default:default,org.eclipse.equinox.p2.touchpoint.natives at default:default,org.eclipse.equinox.p2.transport.ecf at default:default,org.eclipse.equinox.p2.ui.importexport at default:default,org.eclipse.equinox.p2.ui.sdk.scheduler at default:default,org.eclipse.equinox.p2.ui.sdk at default:default,org.eclipse.equinox.p2.ui at default:default,org.eclipse.equinox.p2.updatechecker at default:default,org.eclipse.equinox.p2.updatesite at default:default,org.eclipse.equinox.preferences at default:default,org.eclipse.equinox.registry at default:default,org.eclipse.equinox.security.macosx at default:false,org.eclipse.equinox.security.ui at default:default,org
 .eclipse.equinox.security at default:default,org.eclipse.equinox.simpleconfigurator.manipulator at default:default,org.eclipse.equinox.simpleconfigurator at 1:true,org.eclipse.equinox.util at default:default,org.eclipse.hel mpiler.apt at default:false,org.eclipse.jdt.compiler.tool at default:false,org.eclipse.jdt.core.manipulation at default:default,org.eclipse.jdt.core at default:default,org.eclipse.jdt.debug.ui at default:default,org.eclipse.jdt.debug at default:default,org.eclipse.jdt.doc.isv at default:default,org.eclipse.jdt.doc.user at default:default,org.eclipse.jdt.junit.core at default:default,org.eclipse.jdt.junit.runtime at default:default,org.eclipse.jdt.junit4.runtime at default:default,org.eclipse.jdt.junit at default:default,org.eclipse.jdt.launching.macosx at default:default,org.eclipse.jdt.launching.ui.macosx at default:default,org.eclipse.jdt.launching at default:default,org.eclipse.jdt.ui at default:default,org.eclipse.jdt at default:default,org.eclipse.jetty.continuation at default:default,org.eclipse.jetty.http at default:default,org.eclipse.jetty.io at default:default,org.eclipse.jetty.security at default:default,org.eclipse.jetty.server at default:default,org.eclipse.jetty.servlet at default:default,org.eclipse.jetty.util at default:default,o
 rg.eclipse.jface.databinding at default:default,org.eclipse.jface.text at default:default,org.eclipse.jface at default:default,org.eclipse.jsch.core at default:default,org.eclipse.jsch.ui at default:default,org.eclipse.ltk.core.refactoring at default:default,org.eclipse.ltk.ui.refactoring at default:de ult,org.eclipse.platform.doc.isv at default:default,org.eclipse.platform.doc.user at default:default,org.eclipse.platform at default:default,org.eclipse.rcp at default:default,org.eclipse.sdk at default:default,org.eclipse.search at default:default,org.eclipse.swt.cocoa.macosx.x86_64 at default:false,org.eclipse.swt at default:default,org.eclipse.team.core at default:default,org.eclipse.team.cvs.core at default:default,org.eclipse.team.cvs.ssh2 at default:default,org.eclipse.team.cvs.ui at default:default,org.eclipse.team.svn.core at default:default,org.eclipse.team.svn.help at default:default,org.eclipse.team.svn.ui at default:default,org.eclipse.team.svn at default:default,org.eclipse.team.ui at default:default,org.eclipse.text at default:default,org.eclipse.ui.browser at default:default,org.eclipse.ui.cheatsheets at default:default,org.eclipse.ui.console at default:default,org.eclipse.ui.editors at default:default,org.eclipse.ui.externaltools at default:default,org.eclipse.ui.forms at default:default,org.eclipse.ui.ide.application at default:def
 ault,org.eclipse.ui.ide at default:default,org.eclipse.ui.intro.universal at default:default,org.eclipse.ui.intro at default:default,org.eclipse.ui.navigator.resources at default:default,org.eclipse.ui.navigator at default:default,org.eclipse.ui.net at default:default,org.eclipse.ui.trace at default:default,org.eclipse.ui.views.log at default:default,org.eclipse.ui.views.pro default:default,org.spoofax.compiler at default:default,org.spoofax.interpreter.adapter.ecj at default:default,org.spoofax.interpreter.core at default:default,org.spoofax.interpreter.library.eclipse at default:default,org.spoofax.interpreter.library.interpreter at default:default,org.spoofax.interpreter.library.java at default:default,org.spoofax.interpreter.library.jline at default:default,org.spoofax.interpreter.library.jsglr at default:default,org.spoofax.interpreter.library.language at default:default,org.spoofax.interpreter.library.xml at default:default,org.spoofax.interpreter.ui at default:default,org.spoofax.interpreter at default:default,org.spoofax.jsglr at default:default,org.spoofax.terms at default:default,org.strategoxt.imp.debug.core at default:default,org.strategoxt.imp.debug.stratego.core at default:default,org.strategoxt.imp.debug.stratego.runtime at default:default,org.strategoxt.imp.debug.stratego.transformer at default:default,org.strategoxt.imp.debug.ui at default:default,org.strategoxt.imp.editors.aster at defa
 ult:default,org.strategoxt.imp.editors.aterm at default:default,org.strategoxt.imp.editors.editorservice at default:default,org.strategoxt.imp.editors.pp at default:default,org.strategoxt.imp.editors.rtg at default:default,org.strategoxt.imp.editors.sdf at default:default,org.strategoxt.imp.editors.spoofax.configuration at default:default,org.strategoxt.imp.editors.spoofax at default:default,org.strategoxt.imp.editors.stratego at default:defaul+<stringAttribute key="selected_workspace_plugins" value="org.strategoxt.imp.runtime.sidebyside.latest at default:default,org.strategoxt.imp.runtime.sidebyside.main at default:default,org.strategoxt.imp.runtime at default:default"/>
 <booleanAttribute key="show_selected_only" value="false"/>
 <stringAttribute key="templateConfig" value="${target_home}/configuration/config.ini"/>
 <booleanAttribute key="tracing" value="false"/>

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/SideBySideService.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/SideBySideService.java	Thu Jul  5 06:56:45 2012	(r25149)
@@ -0,0 +1,25 @@
+package org.strategoxt.imp.runtime.services;
+
+import org.stratego.imp.runtime.services.sidebyside.latest.LatestSidePaneEditorHelper;
+import org.stratego.imp.runtime.services.sidebyside.legacy.LegacySidePaneEditorHelper;
+import org.stratego.imp.runtime.services.sidebyside.main.SidePaneEditorHelper;
+import org.strategoxt.imp.runtime.Environment;
+
+
+public class SideBySideService {
+	
+	private static SidePaneEditorHelper helper;
+	
+	public static SidePaneEditorHelper helperInstance() {
+		if(helper == null){
+			try{
+				helper = new LegacySidePaneEditorHelper();
+			} catch(Throwable t) {
+				Environment.logWarning("Legacy side-by-side not supported. Loading dummy.");
+				helper = new LatestSidePaneEditorHelper();
+			}
+		}
+		return helper;
+	}
+	
+}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	Thu Jul  5 06:41:47 2012	(r25148)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	Thu Jul  5 06:56:45 2012	(r25149)
@@ -41,6 +41,7 @@
 import org.spoofax.interpreter.library.IOAgent;
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.stratego.imp.runtime.services.sidebyside.main.SidePaneEditorHelper;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.MonitorStateWatchDog;
@@ -58,39 +59,42 @@
  * @author Lennart Kats <lennart add lclnet.nl>
  */
 public class StrategoBuilder implements IBuilder {
-	
+
 	private final StrategoObserver observer;
 
 	private final String caption;
-	
+
 	private String builderRule;
-	
+
 	private final boolean realTime;
-	
+
 	private final boolean openEditor;
-	
+
 	private final boolean cursor;
-	
+
 	private final boolean source;
-	
+
 	@SuppressWarnings("unused")
 	private final boolean persistent;
-	
+
 	private final EditorState derivedFromEditor;
-	
-	// Since StrategoBuilders are not persistent (per constructor of BuilderFactory)
+
+	// Since StrategoBuilders are not persistent (per constructor of
+	// BuilderFactory)
 	// we maintain a map with running jobs in a static field
 	private static Map<String, Job> activeJobs = new WeakHashMap<String, Job>();
-	
+
 	/**
 	 * Creates a new Stratego builder.
 	 * 
-	 * @param derivedFromEditor  The editor the present editor is derived from, if the present editor is an IStrategoTerm editor.
+	 * @param derivedFromEditor
+	 *            The editor the present editor is derived from, if the present
+	 *            editor is an IStrategoTerm editor.
 	 */
 	public StrategoBuilder(StrategoObserver observer, String caption, String builderRule,
-			boolean openEditor, boolean realTime, boolean cursor, boolean source, boolean persistent,
-			EditorState derivedFromEditor) {
-		
+			boolean openEditor, boolean realTime, boolean cursor, boolean source,
+			boolean persistent, EditorState derivedFromEditor) {
+
 		this.observer = observer;
 		this.caption = caption;
 		this.builderRule = builderRule;
@@ -101,57 +105,57 @@
 		this.persistent = persistent;
 		this.derivedFromEditor = derivedFromEditor;
 	}
-	
+
 	public String getCaption() {
 		return caption;
 	}
-	
+
 	public Object getData() {
 		// Data not used for normal builders
 		return null;
 	}
-	
+
 	public void setData(Object data) {
 		// Data not used for normal builders
 	}
-	
+
 	public String getBuilderRule() {
 		return builderRule;
 	}
-	
+
 	protected StrategoObserver getObserver() {
 		return observer;
 	}
-	
+
 	protected EditorState getDerivedFromEditor() {
 		return derivedFromEditor;
 	}
-	
+
 	protected void setBuilderRule(String builderRule) {
 		this.builderRule = builderRule;
 	}
-	
+
 	public Job scheduleExecute(final EditorState editor, IStrategoTerm node,
 			final IFile errorReportFile, final boolean isRebuild) {
 
-		String displayCaption = caption.endsWith("...")
-			? caption.substring(caption.length() - 3)
-			: caption;
-		
+		String displayCaption = caption.endsWith("...") ? caption.substring(caption.length() - 3)
+				: caption;
+
 		Job lastJob = activeJobs.get(caption);
 		if (lastJob != null && lastJob.getState() != Job.NONE) {
 			if (!isRebuild)
 				openError(editor, "Already running: " + displayCaption);
 			return null;
 		}
-		
+
 		if (node == null) {
 			node = editor.getSelectionAst(!cursor);
-			if (node == null) node = editor.getParseController().getCurrentAst();
+			if (node == null)
+				node = editor.getParseController().getCurrentAst();
 		}
-		
+
 		final IStrategoTerm node2 = node;
-			
+
 		Job job = new Job("Executing " + displayCaption) {
 			@Override
 			protected IStatus run(IProgressMonitor monitor) {
@@ -169,14 +173,15 @@
 		activeJobs.put(caption, job);
 		return job;
 	}
-	
-	private void execute(EditorState editor, IStrategoTerm node, IFile errorReportFile, boolean isRebuild) {
+
+	private void execute(EditorState editor, IStrategoTerm node, IFile errorReportFile,
+			boolean isRebuild) {
 		// TODO: refactor
 		assert derivedFromEditor == null || editor.getDescriptor().isATermEditor();
 		IFile file = null;
 		String result = null;
 		String errorReport = null;
-		
+
 		observer.getLock().lock();
 		try {
 			try {
@@ -184,7 +189,7 @@
 					openError(editor, "Editor is still parsing or analyzing");
 					return;
 				}
-				
+
 				IStrategoTerm resultTerm = invokeObserver(node);
 				if (resultTerm == null) {
 					observer.reportRewritingFailed();
@@ -194,18 +199,21 @@
 					openError(editor, "Builder failed (see error log)");
 					return;
 				}
-		
+
 				if (isTermAppl(resultTerm) && "None".equals(TermReader.cons(resultTerm))) {
 					return;
 				} else if (!isTermTuple(resultTerm) || !isTermString(termAt(resultTerm, 0))) {
-					Environment.logException("Illegal builder result (must be a filename/string tuple or None())");
-					openError(editor, "Illegal builder result (must be a filename/string tuple or None()): " + resultTerm);
+					Environment
+							.logException("Illegal builder result (must be a filename/string tuple or None())");
+					openError(editor,
+							"Illegal builder result (must be a filename/string tuple or None()): "
+									+ resultTerm);
 					return;
 				}
-	
+
 				file = getFile(resultTerm);
 				result = getResultString(resultTerm);
-				
+
 			} catch (InterpreterErrorExit e) {
 				errorReport = reportErrorExit(e, editor, errorReportFile);
 			} catch (UndefinedStrategyException e) {
@@ -231,26 +239,30 @@
 			if (errorReport != null) {
 				setFileContents(editor, errorReportFile, errorReport);
 			}
-		
+
 			if (result != null) {
 				setFileContents(editor, file, result);
-				// TODO: if not persistent, create IEditorInput from result String
+				// TODO: if not persistent, create IEditorInput from result
+				// String
 				if (openEditor && !isRebuild) {
 					scheduleOpenEditorAndListener(editor, node, file);
 				}
 			}
 		} catch (IOException e) {
 			Environment.logException("Builder failed", e);
-			openError(editor, "Builder failed (" + e.getClass().getName() + "; see error log): " + e.getMessage());
+			openError(editor, "Builder failed (" + e.getClass().getName() + "; see error log): "
+					+ e.getMessage());
 		} catch (CoreException e) {
 			Environment.logException("Builder failed", e);
-			openError(editor, "Builder failed (" + e.getClass().getName() + "; see error log): " + e.getMessage());
+			openError(editor, "Builder failed (" + e.getClass().getName() + "; see error log): "
+					+ e.getMessage());
 		}
 	}
 
 	private String reportErrorExit(InterpreterErrorExit e, EditorState editor, IFile errorReportFile) {
 		Environment.logException("Builder failed:\n" + observer.getLog(), e);
-		if (editor.getDescriptor().isDynamicallyLoaded()) StrategoConsole.activateConsole();
+		if (editor.getDescriptor().isDynamicallyLoaded())
+			StrategoConsole.activateConsole();
 		if (errorReportFile == null || !openEditor) {
 			openError(editor, e.getMessage());
 			return null;
@@ -261,38 +273,42 @@
 
 	private IFile getFile(IStrategoTerm resultTerm) throws FileNotFoundException {
 		String filename = asJavaString(termAt(resultTerm, 0));
-		IFile result = EditorIOAgent.getFile(
-				observer.getRuntime().getContext(), filename);
+		IFile result = EditorIOAgent.getFile(observer.getRuntime().getContext(), filename);
 		return result;
 	}
 
 	private String getResultString(IStrategoTerm resultTerm) {
 		resultTerm = termAt(resultTerm, 1);
-		
-		return isTermString(resultTerm) ? asJavaString(resultTerm) : ppATerm(resultTerm).stringValue();
+
+		return isTermString(resultTerm) ? asJavaString(resultTerm) : ppATerm(resultTerm)
+				.stringValue();
 	}
 
-	private void scheduleOpenEditorAndListener(final EditorState editor, final IStrategoTerm node, final IFile file)
-			throws PartInitException {
-		
+	private void scheduleOpenEditorAndListener(final EditorState editor, final IStrategoTerm node,
+			final IFile file) throws PartInitException {
+
 		Job job = new UIJob("Opening editor") {
 			@Override
 			public IStatus runInUIThread(IProgressMonitor monitor) {
 				try {
 					IEditorPart target = openEditor(file, realTime);
-				
-					// UNDONE: don't delete non-persistent files for now since it causes problem with workspace auto-refresh
-					// if (!persistent) new File(file.getLocationURI()).delete();
+
+					// UNDONE: don't delete non-persistent files for now since
+					// it causes problem with workspace auto-refresh
+					// if (!persistent) new
+					// File(file.getLocationURI()).delete();
 					// Create a listener *and* editor-derived editor relation
-					StrategoBuilderListener listener = 
-						StrategoBuilderListener.addListener(editor.getEditor(), target, file, StrategoBuilder.this, node);
+					StrategoBuilderListener listener = StrategoBuilderListener.addListener(
+							editor.getEditor(), target, file, StrategoBuilder.this, node);
 					if (!realTime || editor == target || derivedFromEditor != null)
 						listener.setEnabled(false);
-					if (derivedFromEditor != null) // ensure we get builders from the source
+					if (derivedFromEditor != null) // ensure we get builders
+													// from the source
 						listener.setSourceEditor(derivedFromEditor.getEditor());
 				} catch (PartInitException e) {
 					Environment.logException("Builder failed", e);
-					openError(editor, "Builder failed (" + e.getClass().getName() + "; see error log): " + e.getMessage());
+					openError(editor, "Builder failed (" + e.getClass().getName()
+							+ "; see error log): " + e.getMessage());
 				}
 				return Status.OK_STATUS;
 			}
@@ -303,12 +319,13 @@
 
 	protected IStrategoTerm invokeObserver(IStrategoTerm node) throws UndefinedStrategyException,
 			InterpreterErrorExit, InterpreterExit, InterpreterException {
-		
+
 		node = InputTermBuilder.getMatchingAncestor(node, false);
-		IStrategoTerm inputTerm = derivedFromEditor != null
-				? observer.getInputBuilder().makeATermInputTerm(node, true, derivedFromEditor.getResource()) 
-				: observer.getInputBuilder().makeInputTerm(node, true, source);
-		IStrategoTerm result = observer.invoke(builderRule, inputTerm, SourceAttachment.getFile(node));
+		IStrategoTerm inputTerm = derivedFromEditor != null ? observer.getInputBuilder()
+				.makeATermInputTerm(node, true, derivedFromEditor.getResource()) : observer
+				.getInputBuilder().makeInputTerm(node, true, source);
+		IStrategoTerm result = observer.invoke(builderRule, inputTerm,
+				SourceAttachment.getFile(node));
 		return result;
 	}
 
@@ -316,13 +333,15 @@
 		Context context = observer.getRuntime().getCompiledContext();
 		term = aterm_escape_strings_0_0.instance.invoke(context, term);
 		term = pp_aterm_box_0_0.instance.invoke(context, term);
-		term = box2text_string_0_1.instance.invoke(context, term, Environment.getTermFactory().makeInt(80));
+		term = box2text_string_0_1.instance.invoke(context, term, Environment.getTermFactory()
+				.makeInt(80));
 		return (IStrategoString) term;
 	}
 
 	private void reportGenericException(EditorState editor, Throwable e) {
 		boolean isDynamic = editor.getDescriptor().isDynamicallyLoaded();
-		Environment.logException("Builder failed for " + (isDynamic ? "" : "non-") + "dynamically loaded editor", e);
+		Environment.logException("Builder failed for " + (isDynamic ? "" : "non-")
+				+ "dynamically loaded editor", e);
 		if (isDynamic) {
 			Writer writer = observer.getRuntime().getIOAgent().getWriter(IOAgent.CONST_STDERR);
 			PrintWriter printWriter = new PrintWriter(writer);
@@ -330,22 +349,24 @@
 			printWriter.flush();
 			StrategoConsole.activateConsole();
 		}
-		
+
 		if (EditorState.isUIThread()) {
-			// Only show if builder runs interactively (and not from the StrategoBuilderListener background builder)
-			String message = e.getLocalizedMessage() == null ? e.getMessage() : e.getLocalizedMessage();
+			// Only show if builder runs interactively (and not from the
+			// StrategoBuilderListener background builder)
+			String message = e.getLocalizedMessage() == null ? e.getMessage() : e
+					.getLocalizedMessage();
 			Status status = new Status(IStatus.ERROR, RuntimeActivator.PLUGIN_ID, message, e);
 			ErrorDialog.openError(editor.getEditor().getSite().getShell(), caption, null, status);
 		}
 	}
-	
+
 	private void openError(final EditorState editor, final String message) {
 		Job job = new UIJob("Reporting error") {
 			@Override
 			public IStatus runInUIThread(IProgressMonitor monitor) {
 				Status status = new Status(IStatus.ERROR, RuntimeActivator.PLUGIN_ID, message);
-				ErrorDialog.openError(editor.getEditor().getSite().getShell(),
-						caption, null, status);
+				ErrorDialog.openError(editor.getEditor().getSite().getShell(), caption, null,
+						status);
 				return Status.OK_STATUS;
 			}
 		};
@@ -353,35 +374,26 @@
 		job.schedule();
 	}
 
-	private void setFileContents(final EditorState editor, IFile file, final String contents) throws CoreException, IOException {
-		/* TODO: update editor contents instead of file?
-		if (file.exists()):
-		if (editor.getEditor().getTitleImage().isDisposed()) {
-			InputStream resultStream = new ByteArrayInputStream(contents.getBytes());
-			file.setContents(resultStream, true, true, null);
-			...save...
-		} else {
-			Job job = new UIJob("Update derived editor") {
-				@Override
-				public IStatus runInUIThread(IProgressMonitor monitor) {
-					try {
-						editor.getDocument().set(contents);
-						...save...
-		                ...ensure listener knows updated time stamp...
-					} catch (RuntimeException e) {
-						Environment.logException("Could not update derived editor", e);
-					}
-					return Status.OK_STATUS;
-				}
-			};
-			job.setSystem(true);
-			job.schedule();
-		}
-		*/
+	private void setFileContents(final EditorState editor, IFile file, final String contents)
+			throws CoreException, IOException {
+		/*
+		 * TODO: update editor contents instead of file? if (file.exists()): if
+		 * (editor.getEditor().getTitleImage().isDisposed()) { InputStream
+		 * resultStream = new ByteArrayInputStream(contents.getBytes());
+		 * file.setContents(resultStream, true, true, null); ...save... } else {
+		 * Job job = new UIJob("Update derived editor") {
+		 * 
+		 * @Override public IStatus runInUIThread(IProgressMonitor monitor) {
+		 * try { editor.getDocument().set(contents); ...save... ...ensure
+		 * listener knows updated time stamp... } catch (RuntimeException e) {
+		 * Environment.logException("Could not update derived editor", e); }
+		 * return Status.OK_STATUS; } }; job.setSystem(true); job.schedule(); }
+		 */
 		setFileContentsDirect(file, contents);
 	}
 
-	public static void setFileContentsDirect(IFile file, final String contents) throws CoreException, IOException {
+	public static void setFileContentsDirect(IFile file, final String contents)
+			throws CoreException, IOException {
 		if (!Environment.getStrategoLock().isHeldByCurrentThread()) {
 			// Use proper Eclipse API when safe
 			setResourceContents(file, contents);
@@ -397,8 +409,7 @@
 	}
 
 	private static void setResourceContents(IFile file, final String contents) throws CoreException {
-		assert !Environment.getStrategoLock().isHeldByCurrentThread()
-			: "Acquiring a resource lock can cause a deadlock";
+		assert !Environment.getStrategoLock().isHeldByCurrentThread() : "Acquiring a resource lock can cause a deadlock";
 		InputStream resultStream;
 		try {
 			resultStream = new ByteArrayInputStream(contents.getBytes("UTF-8"));
@@ -406,15 +417,17 @@
 			throw new RuntimeException(e);
 		}
 		if (file.exists()) {
-			// UNDONE: file.setCharset("UTF-8", null); // not allowed for existing file?
+			// UNDONE: file.setCharset("UTF-8", null); // not allowed for
+			// existing file?
 			file.setContents(resultStream, true, true, null);
 		} else {
 			createDirs(file.getParent());
 			file.create(resultStream, true, null);
-			// UNDONE: file.setDerived(!persistent); // marks it as "derived" for life, even after editing...
+			// UNDONE: file.setDerived(!persistent); // marks it as "derived"
+			// for life, even after editing...
 		}
 	}
-	
+
 	private static void createDirs(IContainer dir) throws CoreException {
 		assert !Environment.getStrategoLock().isHeldByCurrentThread();
 		if (dir == null) {
@@ -430,43 +443,53 @@
 	}
 
 	/**
-	 * Opens or activates an editor.
-	 * (Asynchronous) exceptions are swallowed and logged.
+	 * Opens or activates an editor. (Asynchronous) exceptions are swallowed and
+	 * logged.
 	 */
 	private IEditorPart openEditor(IFile file, boolean realTime) throws PartInitException {
-		assert !observer.getLock().isHeldByCurrentThread() || Environment.getStrategoLock().isHeldByCurrentThread()
-			: "Opening a new editor and acquiring a resource lock can cause a deadlock";
-		
-		// TODO: non-persistent editor: WorkBenchPage.openEditor with a custom IEditorInput?
-		IWorkbenchPage page =
-			PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage();
-		
-		SidePaneEditorHelper sidePane = null;
-		
+		assert !observer.getLock().isHeldByCurrentThread()
+				|| Environment.getStrategoLock().isHeldByCurrentThread() : "Opening a new editor and acquiring a resource lock can cause a deadlock";
+
+		// TODO: non-persistent editor: WorkBenchPage.openEditor with a custom
+		// IEditorInput?
+		IWorkbenchPage page = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage();
+
+		SidePaneEditorHelper sidePane = SideBySideService.helperInstance();
+
 		if (realTime) {
 			try {
-				sidePane = SidePaneEditorHelper.openSidePane();
+				sidePane.internalOpenSidePane();
 			} catch (Throwable t) {
 				// org.eclipse.ui.internal API might have changed
 				Environment.logException("Unable to open side pane", t);
 			}
 		}
-		
+
 		IEditorPart result = null;
 		try {
 			result = IDE.openEditor(page, file, !realTime);
-			if (sidePane != null) sidePane.setOpenedEditor(result);
+			sidePane.setOpenedEditor(result);
 		} finally {
-			if (result == null && sidePane != null) sidePane.undoOpenSidePane();
+			if (result == null) {
+				try {
+					sidePane.undoOpenSidePane();
+				} catch (Throwable t) {
+					Environment.logException("Could not close side pane", t);
+				}
+			}
+		}
+
+		try {
+			sidePane.restoreFocus();
+		} catch (Throwable t) {
+			Environment.logException("Could not restore focus from side pane", t);
 		}
-		
-		if (sidePane != null) sidePane.restoreFocus();
-		
+
 		return result;
 	}
-	
+
 	@Override
 	public String toString() {
-		return "Builder: " + builderRule + " - " + caption; 
+		return "Builder: " + builderRule + " - " + caption;
 	}
 }


From v.vergu at gmail.com  Thu Jul  5 09:15:50 2012
From: v.vergu at gmail.com (Vlag Vergu)
Date: Thu, 05 Jul 2012 07:15:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25150 -
	spoofax-imp/trunk/org.strategoxt.imp.feature
Message-ID: <20120705071551.02E95CC10B@mx4.tudelft.nl>

Author: VladVergu
Date: Thu Jul  5 07:15:49 2012
New Revision: 25150
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25150&sc=1

Log:
Aargh.. versions....

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Thu Jul  5 06:56:45 2012	(r25149)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Thu Jul  5 07:15:49 2012	(r25150)
@@ -82,7 +82,7 @@
          id="org.strategoxt.imp.runtime"
          download-size="0"
          install-size="0"
-         version="0.1.1.qualifier"
+         version="0.1.2.qualifier"
          unpack="false"/>
 
    <plugin

From v.vergu at gmail.com  Thu Jul  5 09:33:44 2012
From: v.vergu at gmail.com (Vlag Vergu)
Date: Thu, 05 Jul 2012 07:33:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25151 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/META-INF
Message-ID: <20120705073344.94721108C006@mx3.tudelft.nl>

Author: VladVergu
Date: Thu Jul  5 07:33:44 2012
New Revision: 25151
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25151&sc=1

Log:
Fix (not so) bad dependency version

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/META-INF/MANIFEST.MF

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/META-INF/MANIFEST.MF
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/META-INF/MANIFEST.MF	Thu Jul  5 07:15:49 2012	(r25150)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/META-INF/MANIFEST.MF	Thu Jul  5 07:33:44 2012	(r25151)
@@ -6,4 +6,4 @@
 Bundle-RequiredExecutionEnvironment: JavaSE-1.6
 Bundle-Vendor: Spoofax.org
 Export-Package: org.stratego.imp.runtime.services.sidebyside.main
-Require-Bundle: org.eclipse.ui;bundle-version="3.6.2"
+Require-Bundle: org.eclipse.ui

From v.vergu at gmail.com  Thu Jul  5 10:26:13 2012
From: v.vergu at gmail.com (Vlag Vergu)
Date: Thu, 05 Jul 2012 08:26:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25152 -
	spoofax-imp/trunk/org.strategoxt.imp.names
Message-ID: <20120705082613.A3889108C008@mx3.tudelft.nl>

Author: VladVergu
Date: Thu Jul  5 08:26:11 2012
New Revision: 25152
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25152&sc=1

Log:
corrected extension

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.names/plugin.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/plugin.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/plugin.xml	Thu Jul  5 07:33:44 2012	(r25151)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/plugin.xml	Thu Jul  5 08:26:11 2012	(r25152)
@@ -3,10 +3,10 @@
 
 <plugin>
        <extension point="org.eclipse.imp.runtime.languageDescription">
-          <language extensions="names" description="NameDefinitionLanguage" language="NameDefinitionLanguage" derivedFrom="DynamicRoot" validator="org.strategoxt.imp.names.NameDefinitionLanguageValidator" validatorClass="org.strategoxt.imp.names.NameDefinitionLanguageValidator"></language>
+          <language extensions="nd" description="NameDefinitionLanguage" language="NameDefinitionLanguage" derivedFrom="DynamicRoot" validator="org.strategoxt.imp.names.NameDefinitionLanguageValidator" validatorClass="org.strategoxt.imp.names.NameDefinitionLanguageValidator"></language>
        </extension>
        <extension id="org.strategoxt.imp.names.parser" name="NameDefinitionLanguage Parser" point="org.eclipse.imp.runtime.parser">
           <parser class="org.strategoxt.imp.names.NameDefinitionLanguageParseController" language="NameDefinitionLanguage">
           </parser>
        </extension>    
-    </plugin>
\ No newline at end of file
+    </plugin>

From v.vergu at gmail.com  Thu Jul  5 10:47:29 2012
From: v.vergu at gmail.com (Vlag Vergu)
Date: Thu, 05 Jul 2012 08:47:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25153 - hydra/jobs
Message-ID: <20120705084729.77A32CC07C@mx4.tudelft.nl>

Author: VladVergu
Date: Thu Jul  5 08:47:29 2012
New Revision: 25153
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25153&sc=1

Log:
give me email when i break it.

Modified:
   hydra/jobs/spoofax-imp-release.nix
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp-release.nix
==============================================================================
--- hydra/jobs/spoofax-imp-release.nix	Thu Jul  5 08:26:11 2012	(r25152)
+++ hydra/jobs/spoofax-imp-release.nix	Thu Jul  5 08:47:29 2012	(r25153)
@@ -92,7 +92,7 @@
                  ${spoofaxImp}/org.strategoxt.imp.editors.stratego \
                  ${spoofaxImp}/org.strategoxt.imp.editors.spoofax.configuration \
                  ${spoofaxImp}/org.strategoxt.imp.testing \
-		 ${spoofaxImp}/org.strategoxt.imp.testing.ui \
+                 ${spoofaxImp}/org.strategoxt.imp.testing.ui \
                  ${spoofaxImp}/org.strategoxt.imp.feature \
                  ${spoofaxImp}/org.strategoxt.imp.generator \
                  ${spoofaxImp}/org.strategoxt.imp.spoofax.generator \
@@ -279,7 +279,7 @@
       '';
 
        __noChroot = true;
-       meta.maintainers = ["lclkats at gmail.com" "m.dejonge at tudelft.nl" "rob.vermaas at gmail.com" "g.h.wachsmuth at tudelft.nl" "gabrielkonat at gmail.com"];
+       meta.maintainers = ["lclkats at gmail.com" "m.dejonge at tudelft.nl" "rob.vermaas at gmail.com" "g.h.wachsmuth at tudelft.nl" "gabrielkonat at gmail.com" "v.vergu at gmail.com"];
      } ;     
   } ;
 

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Thu Jul  5 08:26:11 2012	(r25152)
+++ hydra/jobs/spoofax-imp.nix	Thu Jul  5 08:47:29 2012	(r25153)
@@ -339,7 +339,7 @@
       '';
 
        __noChroot = true;
-       meta.maintainers = ["lclkats at gmail.com" "m.dejonge at tudelft.nl" "rob.vermaas at gmail.com" "karltk at strategoxt.org" "g.h.wachsmuth at tudelft.nl" "gabrielkonat at gmail.com"];
+       meta.maintainers = ["lclkats at gmail.com" "m.dejonge at tudelft.nl" "rob.vermaas at gmail.com" "karltk at strategoxt.org" "g.h.wachsmuth at tudelft.nl" "gabrielkonat at gmail.com" "v.vergu at gmail.com"];
      } ;     
   } ;
 

From v.vergu at gmail.com  Thu Jul  5 10:59:24 2012
From: v.vergu at gmail.com (Vlag Vergu)
Date: Thu, 05 Jul 2012 08:59:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25154 - in
	spoofax-imp/trunk: org.strategoxt.imp.runtime.sidebyside.latest
	org.strategoxt.imp.runtime.sidebyside.latest/bin/org/stratego/imp/runtime/services/sidebyside/la...
Message-ID: <20120705085924.14D34CC07F@mx4.tudelft.nl>

Author: VladVergu
Date: Thu Jul  5 08:59:22 2012
New Revision: 25154
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25154&sc=1

Log:
Keep thy binaries out of the mischievous versioning dictator

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/.gitignore
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/.gitignore
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/.gitignore
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/bin/org/stratego/imp/runtime/services/sidebyside/latest/LatestSidePaneEditorHelper.class
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/bin/org/stratego/imp/runtime/services/sidebyside/legacy/LegacySidePaneEditorHelper.class
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/bin/org/stratego/imp/runtime/services/sidebyside/main/SidePaneEditorHelper.class

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/.gitignore
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/.gitignore	Thu Jul  5 08:59:22 2012	(r25154)
@@ -0,0 +1 @@
+bin

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/.gitignore
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/.gitignore	Thu Jul  5 08:59:22 2012	(r25154)
@@ -0,0 +1 @@
+bin

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/.gitignore
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/.gitignore	Thu Jul  5 08:59:22 2012	(r25154)
@@ -0,0 +1 @@
+bin

From gabrielkonat at gmail.com  Thu Jul  5 14:02:20 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Thu, 05 Jul 2012 12:02:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25155 -
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster
Message-ID: <20120705120220.CBDA77F800D@mx1.tudelft.nl>

Author: gkonat
Date: Thu Jul  5 12:02:19 2012
New Revision: 25155
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25155&sc=1

Log:
Add simple example for poster.

Added:
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.csh
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.nd

Added: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.csh
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.csh	Thu Jul  5 12:02:19 2012	(r25155)
@@ -0,0 +1,29 @@
+namespace Poster {
+	partial class URL {
+		string location;
+	}
+	
+	partial class URL {
+	  string GetLocation() {
+	    return location; 
+	  } 
+	}
+	
+	class User { 
+		string name; 
+		URL homepage;
+	}
+	
+	class BlogPosting {
+		User poster;
+		string body; 
+		
+		URL Homepage() {
+		  return poster.homepage;
+		}
+		
+		string HomepageString() {
+			return Homepage().GetLocation();
+		}
+	}
+}
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.nd
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.nd	Thu Jul  5 12:02:19 2012	(r25155)
@@ -0,0 +1,44 @@
+module names
+
+namespaces Class Function Field Variable
+  
+rules // Classes
+
+  Class(x, _) : 
+  	defines unique Class x of type Type(x)
+    scopes Field, Function
+    
+  PartialClass(x, _) :
+    defines non-unique Class x of type Type(x)
+    scopes Field, Function
+
+  Type(c):
+  	refers to Class c
+  	
+rules // Fields
+
+  FieldDef(t, x) :
+    defines Field x of type t 
+    
+  FieldAccess(exp, f) :
+    refers to Field f in Class e
+    where exp has type Type(e)
+    
+rules // Functions
+
+  FunDef(t, x, _, _) :
+    defines Function x of type t 
+    scopes Variable
+    
+  FunCall(exp, f, _) :
+    refers to Function f in Class e
+    where exp has type Type(e)
+    
+  FunCall(x, _) : 
+    refers to Function x
+    
+rules // Variables 
+
+  VarRef(x) :
+    refers to Variable x
+    refers to Field x
\ No newline at end of file

From gabrielkonat at gmail.com  Thu Jul  5 14:23:34 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Thu, 05 Jul 2012 12:23:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25156 -
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster
Message-ID: <20120705122334.5E22D108C027@mx3.tudelft.nl>

Author: gkonat
Date: Thu Jul  5 12:23:33 2012
New Revision: 25156
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25156&sc=1

Log:


Modified:
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/   (props changed)
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.csh
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.nd

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.csh
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.csh	Thu Jul  5 12:02:19 2012	(r25155)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.csh	Thu Jul  5 12:23:33 2012	(r25156)
@@ -1,29 +1,17 @@
 namespace Poster {
-	partial class URL {
-		string location;
-	}
-	
-	partial class URL {
-	  string GetLocation() {
-	    return location; 
-	  } 
-	}
-	
-	class User { 
-		string name; 
-		URL homepage;
-	}
-	
-	class BlogPosting {
-		User poster;
-		string body; 
-		
-		URL Homepage() {
-		  return poster.homepage;
-		}
-		
-		string HomepageString() {
-			return Homepage().GetLocation();
-		}
-	}
+ class URL {
+  string location;
+ }
+ class User { 
+  string name; 
+  URL homepage;
+ }
+ class BlogPosting {
+  User poster;
+  string body; 
+  URL Homepage() {
+   URL homepage = poster.homepage;
+   return homepage;
+  }
+ }
 }
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.nd
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.nd	Thu Jul  5 12:02:19 2012	(r25155)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.nd	Thu Jul  5 12:23:33 2012	(r25156)
@@ -1,44 +1,34 @@
-module names
-
+module poster
 namespaces Class Function Field Variable
-  
 rules // Classes
+ Class(x, _) :
+  defines unique Class x of type Type(x)
+  scopes Field, Function
 
-  Class(x, _) : 
-  	defines unique Class x of type Type(x)
-    scopes Field, Function
-    
-  PartialClass(x, _) :
-    defines non-unique Class x of type Type(x)
-    scopes Field, Function
-
-  Type(c):
-  	refers to Class c
+ Type(c):
+  refers to Class c
   	
 rules // Fields
-
-  FieldDef(t, x) :
-    defines Field x of type t 
+ FieldDef(t, x) :
+  defines Field x of type t 
     
-  FieldAccess(exp, f) :
-    refers to Field f in Class e
-    where exp has type Type(e)
+ FieldAccess(exp, f) :
+  refers to Field f in Class e
+  where exp has type Type(e)
     
 rules // Functions
-
-  FunDef(t, x, _, _) :
-    defines Function x of type t 
-    scopes Variable
-    
-  FunCall(exp, f, _) :
-    refers to Function f in Class e
-    where exp has type Type(e)
-    
-  FunCall(x, _) : 
-    refers to Function x
-    
-rules // Variables 
-
-  VarRef(x) :
-    refers to Variable x
-    refers to Field x
\ No newline at end of file
+ FunDef(t, x, _, _) :
+  defines Function x of type t 
+  scopes Variable
+    
+ FunCall(exp, f, _) :
+  refers to Function f in Class e
+  where exp has type Type(e)
+    
+rules // Variables
+ VarDef(t, x, _) :
+  defines Variable x of type t in subsequent scope
+    
+ VarRef(x) :
+  refers to Variable x
+  refers to Field x
\ No newline at end of file

From gabrielkonat at gmail.com  Thu Jul  5 15:57:05 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Thu, 05 Jul 2012 13:57:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25157 - in
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses:
	syntax test test/poster trans
Message-ID: <20120705135705.51CA8CC06C@mx4.tudelft.nl>

Author: gkonat
Date: Thu Jul  5 13:57:03 2012
New Revision: 25157
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25157&sc=1

Log:
Added interface.
Better example.

Modified:
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.sdf
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/inheritence.csh
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.csh
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.nd
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.nd
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.str

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.sdf
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.sdf	Thu Jul  5 12:23:33 2012	(r25156)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.sdf	Thu Jul  5 13:57:03 2012	(r25157)
@@ -16,7 +16,9 @@
     "partial" "class" ID "{" ClassBodyDecl* "}"         -> Definition {"PartialClass"}
     "partial" "class" ID ":" ID  "{" ClassBodyDecl* "}" -> Definition {"PartialClass"}
     "class" ID "{" ClassBodyDecl* "}"                   -> Definition {"Class"}
-    "class" ID ":" ID "{" ClassBodyDecl* "}"            -> Definition {"Class"}
+    "class" ID ":" ID "{" ClassBodyDecl* "}"            -> Definition {"Class"}
+    "interface" ID "{" InterfaceBodyDecl* "}"           -> Definition {"Interface"}
+    "interface" ID ":" ID "{" InterfaceBodyDecl* "}"    -> Definition {"Interface"}
     
     "using" UsingPart ";" -> Using {"Using"}
     ID                    -> UsingPart {"UsingPart"}
@@ -25,6 +27,8 @@
     %% Class members
     Type ID ";"                                           -> ClassBodyDecl {"FieldDef"}
     MethodReturnType ID "(" {Param ","}* ")" "{" Stm* "}" -> ClassBodyDecl {"FunDef"}
+    
+    MethodReturnType ID "(" {Param ","}* ")" ";"					-> InterfaceBodyDecl {"FunDef"}
     
     %% Types
     ID           -> Type {"Type"}
@@ -61,15 +65,15 @@
     FunCall     -> Exp
     FieldAccess -> Exp
     
-    Exp "+" Exp  -> Exp {"Add"}
-    Exp "-" Exp  -> Exp {"Sub"}
-    Exp "*" Exp  -> Exp {"Mul"}
-    Exp "/" Exp  -> Exp {"Div"}
-    Exp "==" Exp -> Exp {"Eq"}
-    Exp "<" Exp  -> Exp {"Lt"}
-    Exp "<=" Exp -> Exp {"Lte"}
-    Exp ">" Exp  -> Exp {"Gt"}
-    Exp ">=" Exp -> Exp {"Gte"}
+    Exp "+" Exp  -> Exp {"Add", prefer}
+    Exp "-" Exp  -> Exp {"Sub", prefer}
+    Exp "*" Exp  -> Exp {"Mul", prefer}
+    Exp "/" Exp  -> Exp {"Div", prefer}
+    Exp "==" Exp -> Exp {"Eq", prefer}
+    Exp "<" Exp  -> Exp {"Lt", prefer}
+    Exp "<=" Exp -> Exp {"Lte", prefer}
+    Exp ">" Exp  -> Exp {"Gt", prefer}
+    Exp ">=" Exp -> Exp {"Gte", prefer}
     
     %% Other
     "{" Stm* "}" -> Block {"Block"}

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/inheritence.csh
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/inheritence.csh	Thu Jul  5 12:23:33 2012	(r25156)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/inheritence.csh	Thu Jul  5 13:57:03 2012	(r25157)
@@ -1,17 +1,17 @@
 namespace Inheritance {
-	partial class C  {
+	class C  {
 	  int inherited() {
 	    return 2;
 	  }  
 	} 
 	
-	partial class B : C {
+	class B : C {
 	  int inherited() {
 	    return 1;
 	  }
 	}
 	
-	partial class A : B {
+	class A : B {
 	  int test() {
 	    return inherited();
 	  }

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.csh
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.csh	Thu Jul  5 12:23:33 2012	(r25156)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.csh	Thu Jul  5 13:57:03 2012	(r25157)
@@ -1,17 +1,37 @@
-namespace Poster {
- class URL {
-  string location;
- }
- class User { 
-  string name; 
-  URL homepage;
- }
- class BlogPosting {
-  User poster;
-  string body; 
-  URL Homepage() {
-   URL homepage = poster.homepage;
-   return homepage;
+namespace Expressions {
+ interface Env {
+  Env add(string name, int val);
+ }
+ 
+ interface Expr {
+  int eval(Env env);
+ }
+ 
+ class BinOp : Expr {
+  Expr l;
+  Expr r;
+ }
+ 
+ class Plus : BinOp {
+  int eval(Env env) {
+   return l.eval(env) + r.eval(env);
+  }
+ }
+ 
+ class Sub : BinOp {
+  int eval(Env env) {
+   return l.eval(env) - r.eval(env);
+  }
+ }
+ 
+ class Let : Expr {
+  string name;
+  Expr t;
+  Expr body;
+  
+  int eval(Env env) {
+   Env newEnv = env.add(name, t.eval(env));
+   return body.eval(newEnv);
   }
  }
 }
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.nd
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.nd	Thu Jul  5 12:23:33 2012	(r25156)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/poster.nd	Thu Jul  5 13:57:03 2012	(r25157)
@@ -1,14 +1,29 @@
 module poster
+
 namespaces Class Function Field Variable
+
 rules // Classes
+
  Class(x, _) :
   defines unique Class x of type Type(x)
   scopes Field, Function
 
+ Class(x, y, _) :
+  defines unique Class x of type Type(x)
+  refers to Class y
+  scopes Field, Function
+  imports Field from Class y {transitive}
+  imports Function from Class y {transitive}
+  
+ Interface(x, _) :
+  defines unique Class x of type Type(x)
+  scopes Function
+
  Type(c):
   refers to Class c
   	
 rules // Fields
+
  FieldDef(t, x) :
   defines Field x of type t 
     
@@ -17,6 +32,10 @@
   where exp has type Type(e)
     
 rules // Functions
+
+ FunDef(t, x, _) :
+ 	defines Function x of type t
+    
  FunDef(t, x, _, _) :
   defines Function x of type t 
   scopes Variable
@@ -25,10 +44,15 @@
   refers to Function f in Class e
   where exp has type Type(e)
     
+ Param(t, x) :
+  defines Variable x of type t 
+    
 rules // Variables
+
  VarDef(t, x, _) :
   defines Variable x of type t in subsequent scope
     
  VarRef(x) :
   refers to Variable x
-  refers to Field x
\ No newline at end of file
+  refers to Field x
+  
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.nd
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.nd	Thu Jul  5 12:23:33 2012	(r25156)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.nd	Thu Jul  5 13:57:03 2012	(r25157)
@@ -45,6 +45,16 @@
     imports Field from Class y {transitive}
     imports Function from Class y {transitive}
     
+  Interface(x, _) :
+    defines unique Class x of type Type(x)
+    scopes Function
+    
+  Interface(x, y, _) :
+    defines unique Class x of type Type(x)
+    refers to Class y
+    scopes Function
+    imports Function from Class y {transitive}
+    
   PartialClass(x, _) :
     defines non-unique Class x of type Type(x)
     scopes Field, Function
@@ -70,6 +80,9 @@
     
 rules // Functions
 
+  FunDef(t, x, _) :
+    defines Function x of type t
+
   FunDef(t, x, _, _) :
     defines Function x of type t 
     scopes Variable, Field

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.str	Thu Jul  5 12:23:33 2012	(r25156)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.str	Thu Jul  5 13:57:03 2012	(r25157)
@@ -169,6 +169,79 @@
 rules
 
   nam-get-scope-types :
+    Interface(x, _) -> [Function()]
+
+  nam-get-definition-keys :
+    Interface(x, _) -> [x]
+
+  nam-get-definitions :
+    Interface(x, _) -> [(Class(), [x])]
+
+  nam-annotate-names(|paths__, path__):
+    Interface(x, _) -> <Interface(nam-annotate-def(|path__), id)>
+
+  adjust-index-def-data(store__|namespace__, path__):
+    Interface(x, _) -> <store__> DefData(
+                                   [namespace__|path__]
+                                 , Type()
+                                 , Type(x)
+                                 )
+
+  type-of :
+    Interface(x, _) -> Type(x)
+
+  nam-unique :
+    Interface(x, _) -> <id>
+
+
+rules
+
+  nam-get-scope-types :
+    Interface(x, y, _) -> [Function()]
+
+  nam-get-definition-keys :
+    Interface(x, y, _) -> [x]
+
+  nam-get-definitions :
+    Interface(x, y, _) -> [(Class(), [x])]
+
+  nam-get-uses-keys :
+    Interface(x, y, _) -> [y]
+
+  nam-get-uses :
+    Interface(x, y, _) -> [(Class(), [y])]
+
+  nam-annotate-names(|paths__, path__):
+    Interface(x, y, _) -> <Interface(
+                             nam-annotate-def(|path__)
+                           , nam-annotate-use(|paths__, Class())
+                           , id
+                           )>
+
+  adjust-index-def-data(store__|namespace__, path__):
+    Interface(x, y, _) -> <store__> DefData(
+                                      [namespace__|path__]
+                                    , Type()
+                                    , Type(x)
+                                    )
+
+  type-of :
+    Interface(x, y, _) -> Type(x)
+
+  nam-unique :
+    Interface(x, y, _) -> <id>
+
+  adjust-index-def-data(store__|namespace__, path__):
+    Interface(x, y, _) -> <store__> DefData(
+                                      [Function()|path__]
+                                    , Import()
+                                    , (y, [Transitive()])
+                                    )
+
+
+rules
+
+  nam-get-scope-types :
     PartialClass(x, _) -> [Field(), Function()]
 
   nam-get-definition-keys :
@@ -297,6 +370,31 @@
 
 
 rules
+
+  nam-get-definition-keys :
+    FunDef(t, x, _) -> [x]
+
+  nam-get-definitions :
+    FunDef(t, x, _) -> [(Function(), [x])]
+
+  nam-annotate-names(|paths__, path__):
+    FunDef(t, x, _) -> <FunDef(id, nam-annotate-def(|path__), id)>
+
+  adjust-index-def-data(store__|namespace__, path__):
+    FunDef(t, x, _) -> <store__> DefData(
+                                   [namespace__|path__]
+                                 , Type()
+                                 , t
+                                 )
+
+  type-of :
+    FunDef(t, x, _) -> t
+
+  nam-unique :
+    FunDef(t, x, _) -> <id>
+
+
+rules
 
   nam-get-scope-types :
     FunDef(t, x, _, _) -> [Variable(), Field()]

From m.dejonge at tudelft.nl  Thu Jul  5 17:50:44 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 05 Jul 2012 15:50:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25158 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff
Message-ID: <20120705155044.5F757CC0D3@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu Jul  5 15:50:42 2012
New Revision: 25158
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25158&sc=1

Log:


Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HelperFunctions.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/TreeEditDistance.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HelperFunctions.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HelperFunctions.java	Thu Jul  5 13:57:03 2012	(r25157)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HelperFunctions.java	Thu Jul  5 15:50:42 2012	(r25158)
@@ -57,6 +57,8 @@
 	 * @return
 	 */
 	public static boolean isPrimitiveType(IStrategoTerm trm) {
+		if(trm == null)
+			return false;
 		return trm.getTermType() == StrategoTerm.INT ||
 		trm.getTermType() == StrategoTerm.REAL ||
 		trm.getTermType() == StrategoTerm.STRING;
@@ -86,7 +88,7 @@
 		return 
 			t1.getTermType() == StrategoTerm.STRING && 
 			t2.getTermType() == StrategoTerm.STRING && 
-			((StrategoString)t1).stringValue() == ((StrategoString)t2).stringValue();
+			((StrategoString)t1).stringValue().equals(((StrategoString)t2).stringValue());
 	}
 
 	public static boolean isRealWithSameValue(IStrategoTerm t1, IStrategoTerm t2) {
@@ -127,9 +129,8 @@
 		return sameConstructorName;
 	}
 
-	static boolean isPrimitiveWithDifferentValues(IStrategoTerm ln,
-			IStrategoTerm lnPartner) {
-		return isPrimitiveType(ln) && isPrimitiveType(lnPartner) && isPrimitiveWithSameValue(ln, lnPartner);
+	static boolean isPrimitiveWithDifferentValues(IStrategoTerm ln, IStrategoTerm lnPartner) {
+		return lnPartner != null && ln != null && isPrimitiveType(ln) && isPrimitiveType(lnPartner) && !isPrimitiveWithSameValue(ln, lnPartner);
 	}
 
 	public static boolean isSameTermType(IStrategoTerm t1, IStrategoTerm t2) {

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java	Thu Jul  5 13:57:03 2012	(r25157)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java	Thu Jul  5 15:50:42 2012	(r25158)
@@ -125,27 +125,31 @@
 		}
 		
 		//whether or not the parent nodes are matched
-		IStrategoTerm parent1 = ParentAttachment.getParent(t1);
-		IStrategoTerm parent2 = ParentAttachment.getParent(t2);
-		IStrategoTerm partnerParent1 = TermMatchAttachment.getMatchedTerm(parent1);
-		IStrategoTerm partnerParent2 = TermMatchAttachment.getMatchedTerm(parent2);
-		if(partnerParent1 == null && partnerParent2 == null)
-			value += 1.0; //+1 for no violation in parent matches
-		else if (partnerParent2 == parent1){
+		if (hasMatchedParents(t1, t2)){
 			value += 2.0; //+2 for matched parents
-			int childIndex1 = getChildIndex(parent1, t1);
-			int childIndex2 = getChildIndex(parent2, t2);
-			assert childIndex1 != -1 && childIndex2 != -1;
-			if(Tools.isTermAppl(parent1) && HelperFunctions.haveSameSignature(parent1, parent2)){
-				if(childIndex1 == childIndex2){
-					value +=2.0; //+2 for matched child index
-				}
+			boolean hasMatchingChildIndex = hasMatchingChildIndex(t1, t2);
+			if(hasMatchingChildIndex){
+				value +=2.0; //+2 for matched child index
 			}
 		}
 		
 		return 1.0 * value/maxValue;
 	}
 
+	private boolean hasMatchingChildIndex(IStrategoTerm t1, IStrategoTerm t2) {
+		if(!hasMatchedParents(t1, t2))
+			return false;
+		IStrategoTerm parent1 = ParentAttachment.getParent(t1);
+		IStrategoTerm parent2 = ParentAttachment.getParent(t2);
+		int childIndex1 = getChildIndex(parent1, t1);
+		int childIndex2 = getChildIndex(parent2, t2);
+		assert childIndex1 != -1 && childIndex2 != -1;
+		return 
+			Tools.isTermAppl(parent1) && 
+			HelperFunctions.haveSameSignature(parent1, parent2) && 
+			childIndex1 == childIndex2;
+	}
+
 	private int getChildIndex(IStrategoTerm parent, IStrategoTerm trm) {
 		return Arrays.asList(parent.getAllSubterms()).indexOf(trm);
 	}
@@ -156,12 +160,21 @@
 		if(!HelperFunctions.isSameTermType(t1, t2)){
 			return false;
 		}
-		if(requireSameSignature && !HelperFunctions.haveSameSignature(t1, t2)){
-			return false;
+		if(!HelperFunctions.haveSameSignature(t1, t2) && Tools.isTermAppl(t1)){
+			assert Tools.isTermAppl(t2): "Same term type required";
+			return !requireSameSignature && hasMatchedParents(t1, t2); //only match terms with the same signature in case they are not moved 
 		}
-		if(requireSameValue && !HelperFunctions.isPrimitiveWithSameValue(t1, t2)){
-			return false;
+		if(HelperFunctions.isPrimitiveWithDifferentValues(t1, t2)){
+			return !requireSameValue;
 		}
 		return true;
 	}
+
+	private boolean hasMatchedParents(IStrategoTerm t1, IStrategoTerm t2) {
+		IStrategoTerm parent1 = ParentAttachment.getParent(t1);
+		IStrategoTerm parent2 = ParentAttachment.getParent(t2);
+		IStrategoTerm partnerParent1 = TermMatchAttachment.getMatchedTerm(parent1);
+		boolean hasMatchingParents = (partnerParent1 == parent2 && partnerParent1 != null);
+		return hasMatchingParents;
+	}
 }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/TreeEditDistance.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/TreeEditDistance.java	Thu Jul  5 13:57:03 2012	(r25157)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/TreeEditDistance.java	Thu Jul  5 15:50:42 2012	(r25158)
@@ -1,80 +1,221 @@
 package org.spoofax.interpreter.library.jsglr.treediff;
 
+import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getLeftToken;
+import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getRightToken;
+import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getTokenizer;
+
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
 import org.spoofax.interpreter.core.Tools;
 import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.jsglr.client.imploder.TermTreeFactory;
+import org.spoofax.terms.StrategoAppl;
+import org.spoofax.terms.TermFactory;
+import org.spoofax.terms.attachments.ParentAttachment;
+import org.spoofax.terms.attachments.ParentTermFactory;
+
+/**
+ * Simple AST comparison module that counts the number of primitive edit operations
+ * required to transform AST1 into AST2.
+ * @author maartje
+ *
+ */
+public class TreeEditDistance {
 
+	private TermTreeFactory termFactory = new TermTreeFactory(new TermFactory());
+	
+	private ArrayList<IStrategoTerm> deletions;
+	private ArrayList<IStrategoTerm> insertions;
+	private ArrayList<IStrategoTerm> labelChanges;
+	private ArrayList<IStrategoTerm> valueChanges;
+	private ArrayList<IStrategoTerm> movings;
+	
+	public int getDeletionCount() {
+		return deletions.size();
+	}
+
+	public int getInsertionCount() {
+		return insertions.size();
+	}
+
+	public int getRelabeledCount() {
+		return labelChanges.size();
+	}
+
+	public int getValueChangeCount() {
+		return valueChanges.size();
+	}
+
+	public int getMovedCount() {
+		return movings.size();
+	}
 
-public class TreeEditDistance {
 	
-	public static int calculateTreeEditDistance(IStrategoTerm root1, IStrategoTerm root2, AbstractTreeMatcher treeMatcher) {
+	public TreeEditDistance(){
+		deletions = new ArrayList<IStrategoTerm>();
+		insertions = new ArrayList<IStrategoTerm>();
+		labelChanges = new ArrayList<IStrategoTerm>();
+		valueChanges = new ArrayList<IStrategoTerm>();
+		movings = new ArrayList<IStrategoTerm>();
+	}
+	
+	private void clear(){
+		deletions.clear();
+		insertions.clear();
+		labelChanges.clear();
+		valueChanges.clear();
+		movings.clear();
+	}
+
+	public void detectTreeEditActions(IStrategoTerm root1, IStrategoTerm root2, AbstractTreeMatcher treeMatcher) {
+		clear();
 		treeMatcher.constructMatching(root1, root2);
-		int deletionCount = numberOfUnmatchedTerms(root1);
-		int insertionCount = numberOfUnmatchedTerms(root2);
-		int relabeledCount = numberOfRelabeledTerms(root2);
-		int valueChangeCount = numberOfValueChangedTerms(root2);
-		int movedCount = numberOfMovedTerms(root2);
-		return deletionCount + insertionCount + relabeledCount + valueChangeCount + movedCount;
+		insertions = collectUnmatchedTerms(root2);
+		deletions = collectUnmatchedTerms(root1);
+		labelChanges = collectRelabeledTerms(root1);
+		valueChanges = collectValueChanges(root1);
+		movings = collectMovedTerms(root1);
+		
+		printResult(insertions, "insertions");
+		printResult(deletions, "deletions");
+		printResult(labelChanges, "labelChanges");
+		printResult(valueChanges, "valueChanges");
+		printResult(movings, "movings");
+		
+		System.out.println("--------------------------------");
+		
+		assert labelChanges.size() == collectRelabeledTerms(root1).size();
+		assert valueChanges.size() == collectValueChanges(root2).size();
+		assert movings.size() == collectMovedTerms(root2).size(): movings.size() + " moved terms in root1 NOT EQUAL TO " + collectMovedTerms(root2).size() + " in root2";
+		for (IStrategoTerm trm : insertions) {
+			assert ParentAttachment.getRoot(trm).equals(root2);
+		}
+		for (IStrategoTerm trm : deletions) {
+			assert ParentAttachment.getRoot(trm) == root1;
+		}
+		for (IStrategoTerm trm : labelChanges) {
+			assert ParentAttachment.getRoot(trm) == root1;
+		}
+		for (IStrategoTerm trm : valueChanges) {
+			assert ParentAttachment.getRoot(trm) == root1;
+		}
+		for (IStrategoTerm trm : movings) {
+			assert ParentAttachment.getRoot(trm) == root1;
+		}
+
+
+
+	}
+
+	private void printResult(ArrayList<IStrategoTerm> editActions, String actionString) {
+		for (int i = 0; i < editActions.size(); i++) {
+			IStrategoTerm m = editActions.get(i);
+			assert m != null: actionString;
+			String txt = getTokenizer(m).toString(getLeftToken(m), getRightToken(m));		
+			System.out.println(actionString + ": " + txt + " => " + m);
+		}
 	}
 
-	private static int numberOfMovedTerms(IStrategoTerm trm) {
-		int nrOfMoved = 0;
+	private ArrayList<IStrategoTerm> collectMovedTerms(IStrategoTerm trm) {
+		//System.out.println("M: ");
+		//System.out.println("  - " + trm );
+		//System.out.println("  - " + TermMatchAttachment.getMatchedTerm(trm));
+		ArrayList<IStrategoTerm> movedTerms = new ArrayList<IStrategoTerm>();
 		IStrategoTerm partnerOfTrm = TermMatchAttachment.getMatchedTerm(trm);
+		if(partnerOfTrm != null){
+			movedTerms.addAll(movedSubterms(trm, partnerOfTrm));
+		}
+		else {
+			for (int i = 0; i < trm.getSubtermCount(); i++) {
+				if(TermMatchAttachment.hasMatchedTerm(trm.getSubterm(i)))
+					movedTerms.add(trm.getSubterm(i));			
+			}
+		}
+		for (int i = 0; i < trm.getSubtermCount(); i++) {
+			movedTerms.addAll(collectMovedTerms(trm.getSubterm(i)));
+		}
+		return movedTerms;
+	}
+
+	private ArrayList<IStrategoTerm> movedSubterms(IStrategoTerm trm, IStrategoTerm partnerOfTrm) {
 		List<IStrategoTerm> subterms = Arrays.asList(trm.getAllSubterms());
 		List<IStrategoTerm> subtermsOfPartner = Arrays.asList(partnerOfTrm.getAllSubterms());
+		if(Tools.isTermAppl(trm) && Tools.isTermAppl(partnerOfTrm) && HelperFunctions.haveSameSignature(trm, partnerOfTrm))
+			return movedApplElements(subterms, subtermsOfPartner);
+		else 
+			return movedListElements(subterms, subtermsOfPartner);
+	}
+
+	private ArrayList<IStrategoTerm> movedApplElements(List<IStrategoTerm> subterms, List<IStrategoTerm> subtermsOfPartner) {
+		assert subterms.size() == subtermsOfPartner.size();
+		ArrayList<IStrategoTerm> moved = new ArrayList<IStrategoTerm>();
+		for (int i = 0; i < subterms.size(); i++) {
+			IStrategoTerm partner_i = TermMatchAttachment.getMatchedTerm(subterms.get(i));
+			if(partner_i != null && partner_i != subtermsOfPartner.get(i))
+				moved.add(subterms.get(i));
+		}
+		return moved;
+	}
+
+	private ArrayList<IStrategoTerm> movedListElements(List<IStrategoTerm> subterms, List<IStrategoTerm> subtermsOfPartner) {
+		ArrayList<IStrategoTerm> moved = new ArrayList<IStrategoTerm>();
 		LCS<IStrategoTerm> lcs = new LCS<IStrategoTerm>(new LCSCommand<IStrategoTerm>() {
 			public boolean isMatch(IStrategoTerm t1, IStrategoTerm t2) {
 				return TermMatchAttachment.getMatchedTerm(t2) == t1;
 			}
 		});
 		lcs.createLCSResults(subterms, subtermsOfPartner);
-		ArrayList<IStrategoTerm> unmatched1 = lcs.getResultUnmatched2();
+		ArrayList<IStrategoTerm> unmatched1 = lcs.getResultUnmatched1();
 		for (IStrategoTerm u1 : unmatched1) {
-			if(TermMatchAttachment.getMatchedTerm(u1) != null){
-				nrOfMoved += 1;
+			if(TermMatchAttachment.hasMatchedTerm(u1)){
+				moved.add(u1);
 			}
 		}
-		for (int i = 0; i < trm.getSubtermCount(); i++) {
-			nrOfMoved += numberOfMovedTerms(trm.getSubterm(i));
-		}
-		return nrOfMoved;
+		return moved;
 	}
 
-	private static int numberOfValueChangedTerms(IStrategoTerm trm) {
+	private ArrayList<IStrategoTerm> collectValueChanges(IStrategoTerm trm) {
 		ArrayList<IStrategoTerm> leafnodes = HelperFunctions.collectLeafnodes(trm);
-		int valueChanges = 0;
+		ArrayList<IStrategoTerm> valueChanges = new ArrayList<IStrategoTerm>();
 		for (IStrategoTerm ln : leafnodes) {
 			IStrategoTerm lnPartner = TermMatchAttachment.getMatchedTerm(ln);
 			if(HelperFunctions.isPrimitiveWithDifferentValues(ln, lnPartner)){
-				valueChanges += 1;
+				valueChanges.add(ln);
 			}
 		}
 		return valueChanges;
 	}
 
-	private static int numberOfRelabeledTerms(IStrategoTerm trm) {
-		int nrOfRelabeled = 0;
+	private ArrayList<IStrategoTerm> collectRelabeledTerms(IStrategoTerm trm) {
+		ArrayList<IStrategoTerm> relabeledTerms = new ArrayList<IStrategoTerm>(); 
 		if(Tools.isTermAppl(trm) || Tools.isTermList(trm) || Tools.isTermTuple(trm)){
 			IStrategoTerm partnerOfTrm = TermMatchAttachment.getMatchedTerm(trm);
-			if(partnerOfTrm != null && !HelperFunctions.haveSameSignature(trm, partnerOfTrm))
-				nrOfRelabeled +=1;
+			if(partnerOfTrm != null && !HelperFunctions.haveSameSignature(trm, partnerOfTrm) && Tools.isTermAppl(trm) && Tools.isTermAppl(partnerOfTrm)){
+				List<IStrategoTerm> tupleElems = new ArrayList<IStrategoTerm>();
+				tupleElems.add(trm);
+				tupleElems.add(((StrategoAppl)partnerOfTrm).getConstructor());
+				IStrategoTerm relabeling = termFactory.createTuple(null, null, null, tupleElems);
+				//relabeledTerms.add(relabeling);
+				relabeledTerms.add(trm);
+				System.err.println(trm);
+				System.err.println(partnerOfTrm);
+			}
 		}
 		for (int i = 0; i < trm.getSubtermCount(); i++) {
-			nrOfRelabeled += numberOfRelabeledTerms(trm.getSubterm(i));
+			relabeledTerms.addAll(collectRelabeledTerms(trm.getSubterm(i)));
 		}
-		return nrOfRelabeled;
+		return relabeledTerms;
 	}
 
-	private static int numberOfUnmatchedTerms(IStrategoTerm trm) {
-		int nrOfUnmatched = 0;
+	private ArrayList<IStrategoTerm> collectUnmatchedTerms(IStrategoTerm trm) {
+		ArrayList<IStrategoTerm> unmatchedTerms = new ArrayList<IStrategoTerm>(); 
 		if(TermMatchAttachment.getMatchedTerm(trm) == null){
-			nrOfUnmatched +=1;
+			unmatchedTerms.add(trm);
 		}
 		for (int i = 0; i < trm.getSubtermCount(); i++) {
-			nrOfUnmatched += numberOfUnmatchedTerms(trm.getSubterm(i));
+			unmatchedTerms.addAll(collectUnmatchedTerms(trm.getSubterm(i)));
 		}
-		return nrOfUnmatched;
+		return unmatchedTerms;
 	}
 }

From oskarvanrest at gmail.com  Fri Jul  6 09:15:03 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Fri, 06 Jul 2012 07:15:03 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25159 -
	experimental/graphical-editor/combe/trunk
Message-ID: <20120706071503.5130D7F800A@mx1.tudelft.nl>

Author: OskarVanRest
Date: Fri Jul  6 07:15:01 2012
New Revision: 25159
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25159&sc=1

Log:
Repository

Added:
   experimental/graphical-editor/combe/trunk/.project
   experimental/graphical-editor/combe/trunk/category.xml
   experimental/graphical-editor/combe/trunk/pom.xml

Added: experimental/graphical-editor/combe/trunk/.project
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/.project	Fri Jul  6 07:15:01 2012	(r25159)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>org.behaviorengineering.combe.repository</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+	</buildSpec>
+	<natures>
+	</natures>
+</projectDescription>

Added: experimental/graphical-editor/combe/trunk/category.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/category.xml	Fri Jul  6 07:15:01 2012	(r25159)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<site>
+   <feature url="features/org.behaviorengineering.combe.feature_1.0.0.qualifier.jar" id="org.behaviorengineering.combe.feature" version="1.0.0.qualifier"/>
+   <category-def name="ComBe" label="ComBE">
+      <description>
+         ComBe
+      </description>
+   </category-def>
+</site>

Added: experimental/graphical-editor/combe/trunk/pom.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/pom.xml	Fri Jul  6 07:15:01 2012	(r25159)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
+	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+	<modelVersion>4.0.0</modelVersion>
+	<parent>
+		<artifactId>org.behaviorengineering.combe.parent</artifactId>
+		<groupId>org.be.textbe</groupId>
+		<version>1.0.0-SNAPSHOT</version>
+		<relativePath>../org.behaviorengineering.combe.parent</relativePath>
+	</parent>
+	<artifactId>org.behaviorengineering.combe.repository</artifactId>
+	<packaging>eclipse-repository</packaging>
+</project>
\ No newline at end of file

From oskarvanrest at gmail.com  Fri Jul  6 09:17:42 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Fri, 06 Jul 2012 07:17:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25160 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.parent
Message-ID: <20120706071742.D286DCC062@mx4.tudelft.nl>

Author: OskarVanRest
Date: Fri Jul  6 07:17:42 2012
New Revision: 25160
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25160&sc=1

Log:
Initial import.

Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.parent/

From oskarvanrest at gmail.com  Fri Jul  6 09:19:48 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Fri, 06 Jul 2012 07:19:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25161 -
	experimental/graphical-editor/combe/trunk
Message-ID: <20120706071948.8CFC82B800F@mx2.tudelft.nl>

Author: OskarVanRest
Date: Fri Jul  6 07:19:48 2012
New Revision: 25161
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25161&sc=1

Log:


Deleted:
   experimental/graphical-editor/combe/trunk/.project
   experimental/graphical-editor/combe/trunk/category.xml
   experimental/graphical-editor/combe/trunk/pom.xml

From oskarvanrest at gmail.com  Fri Jul  6 09:20:34 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Fri, 06 Jul 2012 07:20:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25162 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.repository
Message-ID: <20120706072034.9FE17CC102@mx4.tudelft.nl>

Author: OskarVanRest
Date: Fri Jul  6 07:20:34 2012
New Revision: 25162
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25162&sc=1

Log:
Initial import.

Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.repository/

From oskarvanrest at gmail.com  Fri Jul  6 09:21:29 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Fri, 06 Jul 2012 07:21:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25163 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.parent
Message-ID: <20120706072129.D4E652B8031@mx2.tudelft.nl>

Author: OskarVanRest
Date: Fri Jul  6 07:21:29 2012
New Revision: 25163
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25163&sc=1

Log:


Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.parent/pom.xml

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.parent/pom.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.parent/pom.xml	Fri Jul  6 07:21:29 2012	(r25163)
@@ -0,0 +1,129 @@
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+	<modelVersion>4.0.0</modelVersion>
+	<groupId>org.be.textbe</groupId>
+	<artifactId>org.behaviorengineering.combe.parent</artifactId>
+	<version>1.0.0-SNAPSHOT</version>
+	<packaging>pom</packaging>
+
+	<properties>
+		<tycho-version>0.15.0</tycho-version>
+		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+	</properties>
+	<repositories>
+		<repository>
+			<id>indigo</id>
+			<layout>p2</layout>
+			<url>http://download.eclipse.org/releases/indigo</url>
+		</repository>
+		<repository>
+			<id>Spoofax</id>
+			<layout>p2</layout>
+			<url>http://www.lclnet.nl/update/nightly</url>
+		</repository>
+
+
+	</repositories>
+
+
+
+
+	<build>
+		<plugins>
+			<plugin>
+				<groupId>org.eclipse.tycho</groupId>
+				<artifactId>tycho-maven-plugin</artifactId>
+				<version>${tycho-version}</version>
+				<extensions>true</extensions>
+			</plugin>
+
+			<plugin>
+				<groupId>org.eclipse.tycho</groupId>
+				<artifactId>tycho-source-plugin</artifactId>
+				<version>${tycho-version}</version>
+				<executions>
+					<execution>
+						<id>plugin-source</id>
+						<goals>
+							<goal>plugin-source</goal>
+						</goals>
+					</execution>
+				</executions>
+			</plugin>
+
+			<plugin>
+				<groupId>org.eclipse.tycho</groupId>
+				<artifactId>target-platform-configuration</artifactId>
+				<version>${tycho-version}</version>
+				<configuration>
+					<dependency-resolution>
+						<optionalDependencies>ignore</optionalDependencies>
+					</dependency-resolution>
+					<environments>
+						<environment>
+							<os>linux</os>
+							<ws>gtk</ws>
+							<arch>x86</arch>
+						</environment>
+						<environment>
+							<os>linux</os>
+							<ws>gtk</ws>
+							<arch>x86_64</arch>
+						</environment>
+						<environment>
+							<os>win32</os>
+							<ws>win32</ws>
+							<arch>x86</arch>
+						</environment>
+						<environment>
+							<os>win32</os>
+							<ws>win32</ws>
+							<arch>x86_64</arch>
+						</environment>
+						<environment>
+							<os>macosx</os>
+							<ws>cocoa</ws>
+							<arch>x86_64</arch>
+						</environment>
+					</environments>
+				</configuration>
+			</plugin>
+		</plugins>
+	</build>
+	<modules>
+
+		<module>../org.behaviorengineering.combe.graphical</module>
+		<module>../org.behaviorengineering.combe.graphical.diagram</module>
+		<module>../org.behaviorengineering.combe.graphical.edit</module>
+		<module>../org.behaviorengineering.combe.graphical.editor</module>
+		<module>../org.behaviorengineering.combe.graphical.tests</module>
+		<module>../org.behaviorengineering.combe.textual</module>
+		<module>../org.spoofax.graphical</module>
+		<module>../org.behaviorengineering.combe.feature</module>
+		<module>../org.behaviorengineering.combe.repository</module>
+	</modules>
+	<url>http://code.google.com/p/textbe</url>
+	<description>Behavior Engineering (BE) is an integrated discipline that supports the systems and software engineering of large-scale, dependable software-intensive systems. Behavior Engineering employs a graphical Behavior Modeling Language (BML) that is used to construct complete behavioral, compositional and structural integrated views from natural language descriptions of a large set of requirements for a proposed system.
+
+TextBE provides a textual editor for defining BE models using textual representations of the three integrated views (Behavior Trees (BT), Composition Trees (CT), Structure Trees (ST)) of the Behavior Modeling Language. TextBE converts the textual representation into a graphical visualisation for use whilst editing that can also be saved into various file formats for use outside of TextBE.</description>
+	<name>Textual Editor for Behavior Engineering</name>
+	<inceptionYear>2006</inceptionYear>
+	<organization>
+		<name>Behavior Engineering</name>
+		<url>http://www.behaviorengineering.org</url>
+	</organization>
+	<scm>
+		<developerConnection>scm:svn:https://textbe.googlecode.com/svn</developerConnection>
+		<connection>scm:svn:https://textbe.googlecode.com/svn</connection>
+		<url>http://code.google.com/p/textbe/source/browse/</url>
+		<tag>HEAD</tag>
+	</scm>
+	<issueManagement>
+		<url>http://code.google.com/p/textbe/issues/list</url>
+		<system>Issue Tracker</system>
+	</issueManagement>
+	<ciManagement>
+		<url>http://emory.eait.uq.edu.au:8080/</url>
+		<system>University of Queensland ITEE Jenkins Server</system>
+	</ciManagement>
+</project>
\ No newline at end of file

From oskarvanrest at gmail.com  Fri Jul  6 09:22:29 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Fri, 06 Jul 2012 07:22:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25164 - in
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual:
	. META-INF
Message-ID: <20120706072229.29161108C034@mx3.tudelft.nl>

Author: OskarVanRest
Date: Fri Jul  6 07:22:28 2012
New Revision: 25164
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25164&sc=1

Log:


Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/pom.xml
Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/META-INF/MANIFEST.MF

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/META-INF/MANIFEST.MF
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/META-INF/MANIFEST.MF	Fri Jul  6 07:21:29 2012	(r25163)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/META-INF/MANIFEST.MF	Fri Jul  6 07:22:28 2012	(r25164)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: ComBE Plug-in
 Bundle-SymbolicName: org.behaviorengineering.combe.textual; singleton:=true
-Bundle-Version: 1.0.0
+Bundle-Version: 1.0.0.qualifier
 Bundle-Activator: org.behaviorengineering.combe.textual.Activator
 Import-Package: org.osgi.framework;version="1.3.0"
 Require-Bundle: org.eclipse.core.runtime,
@@ -16,7 +16,7 @@
  org.strategoxt.imp.runtime,
  org.spoofax.jsglr,
  org.strategoxt.strj,
- org.spoofax.graphical;bundle-version="1.0.0",
+ org.spoofax.graphical,
  org.eclipse.emf.ecore;bundle-version="2.7.0"
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
 Bundle-ActivationPolicy: lazy

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/pom.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/pom.xml	Fri Jul  6 07:22:28 2012	(r25164)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
+	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+	<modelVersion>4.0.0</modelVersion>
+	<parent>
+		<artifactId>org.behaviorengineering.combe.parent</artifactId>
+		<groupId>org.be.textbe</groupId>
+		<version>1.0.0-SNAPSHOT</version>
+		<relativePath>../org.behaviorengineering.combe.parent</relativePath>
+	</parent>
+	<artifactId>org.behaviorengineering.combe.textual</artifactId>
+	<packaging>eclipse-plugin</packaging>
+</project>
\ No newline at end of file

From oskarvanrest at gmail.com  Fri Jul  6 09:24:31 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Fri, 06 Jul 2012 07:24:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25165 -
	experimental/graphical-editor/org.spoofax.graphical
Message-ID: <20120706072431.7ACA8108C034@mx3.tudelft.nl>

Author: OskarVanRest
Date: Fri Jul  6 07:24:31 2012
New Revision: 25165
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25165&sc=1

Log:


Added:
   experimental/graphical-editor/org.spoofax.graphical/pom.xml

Added: experimental/graphical-editor/org.spoofax.graphical/pom.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/org.spoofax.graphical/pom.xml	Fri Jul  6 07:24:31 2012	(r25165)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
+	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+	<modelVersion>4.0.0</modelVersion>
+	<parent>
+		<artifactId>org.behaviorengineering.combe.parent</artifactId>
+		<groupId>org.be.textbe</groupId>
+		<version>1.0.0-SNAPSHOT</version>
+		<relativePath>../org.behaviorengineering.combe.parent</relativePath>
+	</parent>
+	<artifactId>org.spoofax.graphical</artifactId>
+	<packaging>eclipse-plugin</packaging>
+</project>
\ No newline at end of file

From oskarvanrest at gmail.com  Fri Jul  6 09:25:32 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Fri, 06 Jul 2012 07:25:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25166 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.repository
Message-ID: <20120706072532.9366F2B8057@mx2.tudelft.nl>

Author: OskarVanRest
Date: Fri Jul  6 07:25:32 2012
New Revision: 25166
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25166&sc=1

Log:


Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.repository/category.xml
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.repository/pom.xml

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.repository/category.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.repository/category.xml	Fri Jul  6 07:25:32 2012	(r25166)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<site>
+   <feature url="features/org.behaviorengineering.combe.feature_1.0.0.qualifier.jar" id="org.behaviorengineering.combe.feature" version="1.0.0.qualifier"/>
+   <category-def name="ComBe" label="ComBE">
+      <description>
+         ComBe
+      </description>
+   </category-def>
+</site>

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.repository/pom.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.repository/pom.xml	Fri Jul  6 07:25:32 2012	(r25166)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
+	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+	<modelVersion>4.0.0</modelVersion>
+	<parent>
+		<artifactId>org.behaviorengineering.combe.parent</artifactId>
+		<groupId>org.be.textbe</groupId>
+		<version>1.0.0-SNAPSHOT</version>
+		<relativePath>../org.behaviorengineering.combe.parent</relativePath>
+	</parent>
+	<artifactId>org.behaviorengineering.combe.repository</artifactId>
+	<packaging>eclipse-repository</packaging>
+</project>
\ No newline at end of file

From oskarvanrest at gmail.com  Fri Jul  6 09:29:58 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Fri, 06 Jul 2012 07:29:58 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25167 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature
Message-ID: <20120706072958.5C18D2B8007@mx2.tudelft.nl>

Author: OskarVanRest
Date: Fri Jul  6 07:29:58 2012
New Revision: 25167
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25167&sc=1

Log:
Initial import.

Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/

From oskarvanrest at gmail.com  Fri Jul  6 09:30:22 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Fri, 06 Jul 2012 07:30:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25168 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature
Message-ID: <20120706073022.930F27F8068@mx1.tudelft.nl>

Author: OskarVanRest
Date: Fri Jul  6 07:30:22 2012
New Revision: 25168
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25168&sc=1

Log:


Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/build.properties
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/feature.xml
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/pom.xml

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/build.properties	Fri Jul  6 07:30:22 2012	(r25168)
@@ -0,0 +1 @@
+bin.includes = feature.xml

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/feature.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/feature.xml	Fri Jul  6 07:30:22 2012	(r25168)
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<feature
+      id="org.behaviorengineering.combe.feature"
+      label="Feature"
+      version="1.0.0.qualifier">
+
+   <description url="http://www.example.com/description">
+      [Enter Feature Description here.]
+   </description>
+
+   <copyright url="http://www.example.com/copyright">
+      [Enter Copyright Description here.]
+   </copyright>
+
+   <license url="http://www.example.com/license">
+      [Enter License Description here.]
+   </license>
+
+   <includes
+         id="org.strategoxt.imp"
+         version="0.0.0"
+         optional="true"
+         search-location="both"/>
+
+   <plugin
+         id="org.behaviorengineering.combe.graphical"
+         download-size="0"
+         install-size="0"
+         version="0.0.0"
+         unpack="false"/>
+
+   <plugin
+         id="org.behaviorengineering.combe.textual"
+         download-size="0"
+         install-size="0"
+         version="0.0.0"/>
+
+   <plugin
+         id="org.behaviorengineering.combe.graphical.diagram"
+         download-size="0"
+         install-size="0"
+         version="0.0.0"
+         unpack="false"/>
+
+   <plugin
+         id="org.behaviorengineering.combe.graphical.edit"
+         download-size="0"
+         install-size="0"
+         version="0.0.0"
+         unpack="false"/>
+
+   <plugin
+         id="org.behaviorengineering.combe.graphical.editor"
+         download-size="0"
+         install-size="0"
+         version="0.0.0"
+         unpack="false"/>
+
+   <plugin
+         id="org.behaviorengineering.combe.graphical.tests"
+         download-size="0"
+         install-size="0"
+         version="0.0.0"
+         unpack="false"/>
+
+</feature>

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/pom.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/pom.xml	Fri Jul  6 07:30:22 2012	(r25168)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
+	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+	<modelVersion>4.0.0</modelVersion>
+	<parent>
+		<artifactId>org.behaviorengineering.combe.parent</artifactId>
+		<groupId>org.be.textbe</groupId>
+		<version>1.0.0-SNAPSHOT</version>
+		<relativePath>../org.behaviorengineering.combe.parent</relativePath>
+	</parent>
+	<artifactId>org.behaviorengineering.combe.feature</artifactId>
+	<packaging>eclipse-feature</packaging>
+</project>
\ No newline at end of file

From oskarvanrest at gmail.com  Fri Jul  6 10:38:26 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Fri, 06 Jul 2012 08:38:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25169 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model
Message-ID: <20120706083826.6B3B7108C02C@mx3.tudelft.nl>

Author: OskarVanRest
Date: Fri Jul  6 08:38:25 2012
New Revision: 25169
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25169&sc=1

Log:
Smaller font

Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen	Fri Jul  6 07:30:22 2012	(r25168)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen	Fri Jul  6 08:38:25 2012	(r25169)
@@ -37,7 +37,7 @@
       <viewmap
           xsi:type="gmfgen:InnerClassViewmap"
           className="NodeFigure"
-          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeRequirementLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeTracibilityStatusLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeComponentLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeBehaviorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeOperatorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;priv
 ate org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeLabelLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(false);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA
 ;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw A;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeftLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintLeftLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalIndent = 0;&#xA;constraintLeftLeft1.horizontalSpan = 1;&#xA;constraintLeftLeft1.verticalSpan = 1;&#xA;constraintLeftLeft1.grabExcessHorizontalSpace = true;&#xA;constraintLeftLeft1.grabExcessVerticalSpace = true;&#xA;left0.add(leftLeft1, constraintLeftLeft1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutLeftLeft1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;leftLeft1.setLayoutManager(layoutLeftLeft1);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure requirementRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;requirementRectangle2.setFill(false);&#xA;requirementRec
 tangle2.setOutline(false);&#xA;requirementRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(requirementRectangle2, org.eclipse.draw2d.Borde tFFigureNodeRequirementLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeRequirementLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessVerticalSpace = true;&#xA;requirementRectangle2.add(fFigureNodeRequirementLabelFigure, constraintFFigureNodeRequirementLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure tracibilityStatusRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;tracibilityStatusRectangle2.setFill(false);&#xA;tracibilityStatusRectangle2.setOutline(false);&#xA;tracibilityStatusRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(tracibilityStatusRectangle2, org.eclipse.draw2d.BorderLayout.BOTTOM);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTracibilityStatusRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutTracibilityStatu
 sRectangle2.numColumns = 1;&#xA;&#x9;layoutTracibilityStatusRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;tracibilityStatusRectangle2.setLayoutManager(layoutTracibilityStatusRectangle2);&#xA;&#xA;&#xA;&#xA;f lityStatusLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessVerticalSpace = true;&#xA;tracibilityStatusRectangle2.add(fFigureNodeTracibilityStatusLabelFigure, constraintFFigureNodeTracibilityStatusLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure line0 = new org.eclipse.draw2d.RectangleFigure();&#xA;line0.setOutline(false);&#xA;line0.setLineWidth(0);&#xA;&#x9;line0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLine0 = new org.eclipse.draw2d.GridData();&#xA;constraintLine0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalIndent = 0;&#xA;constraintLine0.horizontalSpan = 1;&#xA;constraintLine0.verticalSpan = 1;&#xA;constraintLine0.grabExcessHorizontalSpace = false;&#xA;constraintLine0.grabExcessVertical
 Space = false;&#xA;constraintLine0.widthHint = 1;&#xA;constraintLine0.heightHint = 60;&#xA;this.add(line0, constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLin ridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x9;layoutRight0.marginWidth = 0;&#xA;&#x9;layoutRight0.marginHeight = 0;&#xA;&#x9;right0.setLayoutManager(layoutRight0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightLeft1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightLeft1.setFill(false);&#xA;rightLeft1.setOutline(false);&#xA;rightLeft1.setLineWidth(0);&#xA;&#xA;rightLeft1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalAlignment = org
 .eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalIndent = 0;&#xA;constraintRightLeft1.horizontalSpan = 1;&#xA;constraintRightLeft1.verticalSpan = 1;&#xA;constraintRightLeft1.grabExcessHorizontalSpace = true;&#xA;constraintRightLeft1.grabExcessVerticalSpace = true;&#xA;right0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#x9; &#x9;layoutComponentRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;componentRectangle2.setLayoutManager(layoutComponentRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeComponentLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeComponentLabelFigure.setText(&quot;&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeComponentLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeComponentLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessVerticalSpace = tr
 ue;&#xA;componentRectangle2.add(fFigureNodeComponentLabelFigure, constraintFFigureNodeComponentLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure behaviorRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;behaviorRectangle2.setFill(false);&#xA;behaviorRectangle2.setOutline(false);&#xA;behaviorRectangle2.setLineWidth(0);&#xA;&#xA;rightLeft1.add(behaviorRectangle2, org.eclipse.draw2d.Bord ure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessVerticalSpace = true;&#xA;behaviorRectangle2.add(fFigureNodeBehaviorLabelFigure, constraintFFigureNodeBehaviorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder
 (getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraint atorRectangle2.setFill(false);&#xA;operatorRectangle2.setOutline(false);&#xA;operatorRectangle2.setLineWidth(0);&#xA;&#xA;rightRight1.add(operatorRectangle2, org.eclipse.draw2d.BorderLayout.TOP);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutOperatorRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutOperatorRectangle2.numColumns = 1;&#xA;&#x9;layoutOperatorRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutOperatorRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.marginWidth = 0;&#xA;&#x9;layoutOperatorRectangle2.marginHeight = 0;&#xA;&#x9;operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeOperatorLabelFigure = new org.eclipse.draw2d.Gr
 idData();&#xA;constraintFFigureNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&# A;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutLabelRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutLabelRectangle2.numColumns = 1;&#xA;&#x9;layoutLabelRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutLabelRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.marginWidth = 0;&#xA;&#x9;layoutLabelRectangle2.marginHeight = 0;&#xA;&#x9;labelRectangle2.setLayoutManager(layoutLabelRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeLabelLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeL
 abelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureNodeLabelLabelFigure, constraintFFigureNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.dia A;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeTracibilityStatusLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeTracibilityStatusLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeComponentLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeComponentLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeBehaviorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeBehaviorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeOperatorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeOperatorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.ru
 ntime.draw2d.ui.figures.WrappingLabel getFigureNodeLabelLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeLabelLabelFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 179, 211, 69);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 7, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeRequirementLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeTracibilityStatusLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeComponentLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeBehaviorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeOperatorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;priv
 ate org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeLabelLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(false);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA
 ;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw A;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeftLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintLeftLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalIndent = 0;&#xA;constraintLeftLeft1.horizontalSpan = 1;&#xA;constraintLeftLeft1.verticalSpan = 1;&#xA;constraintLeftLeft1.grabExcessHorizontalSpace = true;&#xA;constraintLeftLeft1.grabExcessVerticalSpace = true;&#xA;left0.add(leftLeft1, constraintLeftLeft1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutLeftLeft1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;leftLeft1.setLayoutManager(layoutLeftLeft1);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure requirementRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;requirementRectangle2.setFill(false);&#xA;requirementRec
 tangle2.setOutline(false);&#xA;requirementRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(requirementRectangle2, org.eclipse.draw2d.Borde tFFigureNodeRequirementLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeRequirementLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessVerticalSpace = true;&#xA;requirementRectangle2.add(fFigureNodeRequirementLabelFigure, constraintFFigureNodeRequirementLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure tracibilityStatusRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;tracibilityStatusRectangle2.setFill(false);&#xA;tracibilityStatusRectangle2.setOutline(false);&#xA;tracibilityStatusRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(tracibilityStatusRectangle2, org.eclipse.draw2d.BorderLayout.BOTTOM);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTracibilityStatusRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutTracibilityStatu
 sRectangle2.numColumns = 1;&#xA;&#x9;layoutTracibilityStatusRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;tracibilityStatusRectangle2.setLayoutManager(layoutTracibilityStatusRectangle2);&#xA;&#xA;&#xA;&#xA;f lityStatusLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessVerticalSpace = true;&#xA;tracibilityStatusRectangle2.add(fFigureNodeTracibilityStatusLabelFigure, constraintFFigureNodeTracibilityStatusLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure line0 = new org.eclipse.draw2d.RectangleFigure();&#xA;line0.setOutline(false);&#xA;line0.setLineWidth(0);&#xA;&#x9;line0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLine0 = new org.eclipse.draw2d.GridData();&#xA;constraintLine0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalIndent = 0;&#xA;constraintLine0.horizontalSpan = 1;&#xA;constraintLine0.verticalSpan = 1;&#xA;constraintLine0.grabExcessHorizontalSpace = false;&#xA;constraintLine0.grabExcessVertical
 Space = false;&#xA;constraintLine0.widthHint = 1;&#xA;constraintLine0.heightHint = 60;&#xA;this.add(line0, constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLin ridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x9;layoutRight0.marginWidth = 0;&#xA;&#x9;layoutRight0.marginHeight = 0;&#xA;&#x9;right0.setLayoutManager(layoutRight0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightLeft1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightLeft1.setFill(false);&#xA;rightLeft1.setOutline(false);&#xA;rightLeft1.setLineWidth(0);&#xA;&#xA;rightLeft1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalAlignment = org
 .eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalIndent = 0;&#xA;constraintRightLeft1.horizontalSpan = 1;&#xA;constraintRightLeft1.verticalSpan = 1;&#xA;constraintRightLeft1.grabExcessHorizontalSpace = true;&#xA;constraintRightLeft1.grabExcessVerticalSpace = true;&#xA;right0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#x9; &#x9;layoutComponentRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;componentRectangle2.setLayoutManager(layoutComponentRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeComponentLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeComponentLabelFigure.setText(&quot;&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeComponentLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeComponentLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessVerticalSpace = tr
 ue;&#xA;componentRectangle2.add(fFigureNodeComponentLabelFigure, constraintFFigureNodeComponentLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure behaviorRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;behaviorRectangle2.setFill(false);&#xA;behaviorRectangle2.setOutline(false);&#xA;behaviorRectangle2.setLineWidth(0);&#xA;&#xA;rightLeft1.add(behaviorRectangle2, org.eclipse.draw2d.Bord ure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessVerticalSpace = true;&#xA;behaviorRectangle2.add(fFigureNodeBehaviorLabelFigure, constraintFFigureNodeBehaviorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder
 (getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraint atorRectangle2.setFill(false);&#xA;operatorRectangle2.setOutline(false);&#xA;operatorRectangle2.setLineWidth(0);&#xA;&#xA;rightRight1.add(operatorRectangle2, org.eclipse.draw2d.BorderLayout.TOP);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutOperatorRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutOperatorRectangle2.numColumns = 1;&#xA;&#x9;layoutOperatorRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutOperatorRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.marginWidth = 0;&#xA;&#x9;layoutOperatorRectangle2.marginHeight = 0;&#xA;&#x9;operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeOperatorLabelFigure = new org.eclipse.draw2d.Gr
 idData();&#xA;constraintFFigureNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&# A;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutLabelRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutLabelRectangle2.numColumns = 1;&#xA;&#x9;layoutLabelRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutLabelRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.marginWidth = 0;&#xA;&#x9;layoutLabelRectangle2.marginHeight = 0;&#xA;&#x9;labelRectangle2.setLayoutManager(layoutLabelRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeLabelLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeL
 abelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureNodeLabelLabelFigure, constraintFFigureNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.dia A;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeTracibilityStatusLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeTracibilityStatusLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeComponentLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeComponentLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeBehaviorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeBehaviorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeOperatorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeOperatorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.ru
 ntime.draw2d.ui.figures.WrappingLabel getFigureNodeLabelLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeLabelLabelFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 179, 211, 69);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 6, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
         <attributes
             xsi:type="gmfgen:StyleAttributes"
             fixedFont="true"
@@ -174,7 +174,7 @@
       <viewmap
           xsi:type="gmfgen:InnerClassViewmap"
           className="EmptyNodeFigure"
-          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EmptyNodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeLabelLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeOperatorLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EmptyNodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(fals
 e);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw2d.RectangleFigure();&#xA;left0.setOutline(false);&#xA;left0.setLineWidth(0);&#xA;left0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(54)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeft0 = new org.eclipse.draw2d.GridData();&#xA;constraintLeft0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalIndent = 0;&#xA;constraintLeft0.horizontalSpan = 1;&#xA;
 constraintLeft0.verticalSpan = 1;&#xA;constraintLeft0.grabExcessHoriz constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLineWidth(0);&#xA;right0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(125)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRight0 = new org.eclipse.draw2d.GridData();&#xA;constraintRight0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalIndent = 0;&#xA;constraintRight0.horizontalSpan = 1;&#xA;constraintRight0.verticalSpan = 1;&#xA;constraintRight0.grabExcessHorizontalSpace = true;&#xA;constraintRight0.grabExcessVerticalSpace = true;&#xA;this.add(right0, constraintRight0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9
 ;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x ht0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraintRightRight1.verticalSpan = 1;&#xA;constraintRightRight1.grabExcessHorizontalSpace = true;&#xA;constraintRightRight1.grabExcessVerticalSpace = true;&#xA;right0.add(rightRi
 ght1, constraintRightRight1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutRightRight1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;rightRight1.setLayoutManager(layoutRightRight1);&#xA;&#xA;&#xA ayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureEmptyNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEmptyNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeOperatorLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&#xA;operatorRectangle2.add(fFigureEmptyNodeOperato
 rLabelFigure, constraintFFigureEmptyNodeOperatorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure labelRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;labelRectangle2.setFill(false);&#xA;labelRectangle2.setOutline(false);&#xA;labelRectangle2.s ureEmptyNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureEmptyNodeLabelLabelFigure, constraintFFigureEmptyNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border crea
 teBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEmptyNodeL t.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 7, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EmptyNodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeLabelLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeOperatorLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EmptyNodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(fals
 e);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw2d.RectangleFigure();&#xA;left0.setOutline(false);&#xA;left0.setLineWidth(0);&#xA;left0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(54)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeft0 = new org.eclipse.draw2d.GridData();&#xA;constraintLeft0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalIndent = 0;&#xA;constraintLeft0.horizontalSpan = 1;&#xA;
 constraintLeft0.verticalSpan = 1;&#xA;constraintLeft0.grabExcessHoriz constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLineWidth(0);&#xA;right0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(125)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRight0 = new org.eclipse.draw2d.GridData();&#xA;constraintRight0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalIndent = 0;&#xA;constraintRight0.horizontalSpan = 1;&#xA;constraintRight0.verticalSpan = 1;&#xA;constraintRight0.grabExcessHorizontalSpace = true;&#xA;constraintRight0.grabExcessVerticalSpace = true;&#xA;this.add(right0, constraintRight0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9
 ;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x ht0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraintRightRight1.verticalSpan = 1;&#xA;constraintRightRight1.grabExcessHorizontalSpace = true;&#xA;constraintRightRight1.grabExcessVerticalSpace = true;&#xA;right0.add(rightRi
 ght1, constraintRightRight1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutRightRight1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;rightRight1.setLayoutManager(layoutRightRight1);&#xA;&#xA;&#xA ayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureEmptyNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEmptyNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeOperatorLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&#xA;operatorRectangle2.add(fFigureEmptyNodeOperato
 rLabelFigure, constraintFFigureEmptyNodeOperatorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure labelRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;labelRectangle2.setFill(false);&#xA;labelRectangle2.setOutline(false);&#xA;labelRectangle2.s ureEmptyNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureEmptyNodeLabelLabelFigure, constraintFFigureEmptyNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border crea
 teBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEmptyNodeL t.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 6, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
         <attributes
             xsi:type="gmfgen:StyleAttributes"
             fixedFont="true"
@@ -245,7 +245,7 @@
       <viewmap
           xsi:type="gmfgen:InnerClassViewmap"
           className="NodeFigure"
-          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeRequirementLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeTracibilityStatusLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeComponentLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeBehaviorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeOperatorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;priv
 ate org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeLabelLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(false);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA
 ;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw A;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeftLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintLeftLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalIndent = 0;&#xA;constraintLeftLeft1.horizontalSpan = 1;&#xA;constraintLeftLeft1.verticalSpan = 1;&#xA;constraintLeftLeft1.grabExcessHorizontalSpace = true;&#xA;constraintLeftLeft1.grabExcessVerticalSpace = true;&#xA;left0.add(leftLeft1, constraintLeftLeft1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutLeftLeft1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;leftLeft1.setLayoutManager(layoutLeftLeft1);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure requirementRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;requirementRectangle2.setFill(false);&#xA;requirementRec
 tangle2.setOutline(false);&#xA;requirementRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(requirementRectangle2, org.eclipse.draw2d.Borde tFFigureNodeRequirementLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeRequirementLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessVerticalSpace = true;&#xA;requirementRectangle2.add(fFigureNodeRequirementLabelFigure, constraintFFigureNodeRequirementLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure tracibilityStatusRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;tracibilityStatusRectangle2.setFill(false);&#xA;tracibilityStatusRectangle2.setOutline(false);&#xA;tracibilityStatusRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(tracibilityStatusRectangle2, org.eclipse.draw2d.BorderLayout.BOTTOM);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTracibilityStatusRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutTracibilityStatu
 sRectangle2.numColumns = 1;&#xA;&#x9;layoutTracibilityStatusRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;tracibilityStatusRectangle2.setLayoutManager(layoutTracibilityStatusRectangle2);&#xA;&#xA;&#xA;&#xA;f lityStatusLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessVerticalSpace = true;&#xA;tracibilityStatusRectangle2.add(fFigureNodeTracibilityStatusLabelFigure, constraintFFigureNodeTracibilityStatusLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure line0 = new org.eclipse.draw2d.RectangleFigure();&#xA;line0.setOutline(false);&#xA;line0.setLineWidth(0);&#xA;&#x9;line0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLine0 = new org.eclipse.draw2d.GridData();&#xA;constraintLine0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalIndent = 0;&#xA;constraintLine0.horizontalSpan = 1;&#xA;constraintLine0.verticalSpan = 1;&#xA;constraintLine0.grabExcessHorizontalSpace = false;&#xA;constraintLine0.grabExcessVertical
 Space = false;&#xA;constraintLine0.widthHint = 1;&#xA;constraintLine0.heightHint = 60;&#xA;this.add(line0, constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLin ridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x9;layoutRight0.marginWidth = 0;&#xA;&#x9;layoutRight0.marginHeight = 0;&#xA;&#x9;right0.setLayoutManager(layoutRight0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightLeft1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightLeft1.setFill(false);&#xA;rightLeft1.setOutline(false);&#xA;rightLeft1.setLineWidth(0);&#xA;&#xA;rightLeft1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalAlignment = org
 .eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalIndent = 0;&#xA;constraintRightLeft1.horizontalSpan = 1;&#xA;constraintRightLeft1.verticalSpan = 1;&#xA;constraintRightLeft1.grabExcessHorizontalSpace = true;&#xA;constraintRightLeft1.grabExcessVerticalSpace = true;&#xA;right0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#x9; &#x9;layoutComponentRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;componentRectangle2.setLayoutManager(layoutComponentRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeComponentLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeComponentLabelFigure.setText(&quot;&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeComponentLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeComponentLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessVerticalSpace = tr
 ue;&#xA;componentRectangle2.add(fFigureNodeComponentLabelFigure, constraintFFigureNodeComponentLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure behaviorRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;behaviorRectangle2.setFill(false);&#xA;behaviorRectangle2.setOutline(false);&#xA;behaviorRectangle2.setLineWidth(0);&#xA;&#xA;rightLeft1.add(behaviorRectangle2, org.eclipse.draw2d.Bord ure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessVerticalSpace = true;&#xA;behaviorRectangle2.add(fFigureNodeBehaviorLabelFigure, constraintFFigureNodeBehaviorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder
 (getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraint atorRectangle2.setFill(false);&#xA;operatorRectangle2.setOutline(false);&#xA;operatorRectangle2.setLineWidth(0);&#xA;&#xA;rightRight1.add(operatorRectangle2, org.eclipse.draw2d.BorderLayout.TOP);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutOperatorRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutOperatorRectangle2.numColumns = 1;&#xA;&#x9;layoutOperatorRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutOperatorRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.marginWidth = 0;&#xA;&#x9;layoutOperatorRectangle2.marginHeight = 0;&#xA;&#x9;operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeOperatorLabelFigure = new org.eclipse.draw2d.Gr
 idData();&#xA;constraintFFigureNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&# A;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutLabelRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutLabelRectangle2.numColumns = 1;&#xA;&#x9;layoutLabelRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutLabelRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.marginWidth = 0;&#xA;&#x9;layoutLabelRectangle2.marginHeight = 0;&#xA;&#x9;labelRectangle2.setLayoutManager(layoutLabelRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeLabelLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeL
 abelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureNodeLabelLabelFigure, constraintFFigureNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.dia A;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeTracibilityStatusLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeTracibilityStatusLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeComponentLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeComponentLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeBehaviorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeBehaviorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeOperatorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeOperatorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.ru
 ntime.draw2d.ui.figures.WrappingLabel getFigureNodeLabelLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeLabelLabelFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 179, 211, 69);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 7, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeRequirementLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeTracibilityStatusLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeComponentLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeBehaviorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeOperatorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;priv
 ate org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeLabelLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(false);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA
 ;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw A;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeftLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintLeftLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalIndent = 0;&#xA;constraintLeftLeft1.horizontalSpan = 1;&#xA;constraintLeftLeft1.verticalSpan = 1;&#xA;constraintLeftLeft1.grabExcessHorizontalSpace = true;&#xA;constraintLeftLeft1.grabExcessVerticalSpace = true;&#xA;left0.add(leftLeft1, constraintLeftLeft1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutLeftLeft1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;leftLeft1.setLayoutManager(layoutLeftLeft1);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure requirementRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;requirementRectangle2.setFill(false);&#xA;requirementRec
 tangle2.setOutline(false);&#xA;requirementRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(requirementRectangle2, org.eclipse.draw2d.Borde tFFigureNodeRequirementLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeRequirementLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessVerticalSpace = true;&#xA;requirementRectangle2.add(fFigureNodeRequirementLabelFigure, constraintFFigureNodeRequirementLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure tracibilityStatusRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;tracibilityStatusRectangle2.setFill(false);&#xA;tracibilityStatusRectangle2.setOutline(false);&#xA;tracibilityStatusRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(tracibilityStatusRectangle2, org.eclipse.draw2d.BorderLayout.BOTTOM);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTracibilityStatusRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutTracibilityStatu
 sRectangle2.numColumns = 1;&#xA;&#x9;layoutTracibilityStatusRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;tracibilityStatusRectangle2.setLayoutManager(layoutTracibilityStatusRectangle2);&#xA;&#xA;&#xA;&#xA;f lityStatusLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessVerticalSpace = true;&#xA;tracibilityStatusRectangle2.add(fFigureNodeTracibilityStatusLabelFigure, constraintFFigureNodeTracibilityStatusLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure line0 = new org.eclipse.draw2d.RectangleFigure();&#xA;line0.setOutline(false);&#xA;line0.setLineWidth(0);&#xA;&#x9;line0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLine0 = new org.eclipse.draw2d.GridData();&#xA;constraintLine0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalIndent = 0;&#xA;constraintLine0.horizontalSpan = 1;&#xA;constraintLine0.verticalSpan = 1;&#xA;constraintLine0.grabExcessHorizontalSpace = false;&#xA;constraintLine0.grabExcessVertical
 Space = false;&#xA;constraintLine0.widthHint = 1;&#xA;constraintLine0.heightHint = 60;&#xA;this.add(line0, constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLin ridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x9;layoutRight0.marginWidth = 0;&#xA;&#x9;layoutRight0.marginHeight = 0;&#xA;&#x9;right0.setLayoutManager(layoutRight0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightLeft1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightLeft1.setFill(false);&#xA;rightLeft1.setOutline(false);&#xA;rightLeft1.setLineWidth(0);&#xA;&#xA;rightLeft1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalAlignment = org
 .eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalIndent = 0;&#xA;constraintRightLeft1.horizontalSpan = 1;&#xA;constraintRightLeft1.verticalSpan = 1;&#xA;constraintRightLeft1.grabExcessHorizontalSpace = true;&#xA;constraintRightLeft1.grabExcessVerticalSpace = true;&#xA;right0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#x9; &#x9;layoutComponentRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;componentRectangle2.setLayoutManager(layoutComponentRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeComponentLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeComponentLabelFigure.setText(&quot;&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeComponentLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeComponentLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessVerticalSpace = tr
 ue;&#xA;componentRectangle2.add(fFigureNodeComponentLabelFigure, constraintFFigureNodeComponentLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure behaviorRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;behaviorRectangle2.setFill(false);&#xA;behaviorRectangle2.setOutline(false);&#xA;behaviorRectangle2.setLineWidth(0);&#xA;&#xA;rightLeft1.add(behaviorRectangle2, org.eclipse.draw2d.Bord ure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessVerticalSpace = true;&#xA;behaviorRectangle2.add(fFigureNodeBehaviorLabelFigure, constraintFFigureNodeBehaviorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder
 (getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraint atorRectangle2.setFill(false);&#xA;operatorRectangle2.setOutline(false);&#xA;operatorRectangle2.setLineWidth(0);&#xA;&#xA;rightRight1.add(operatorRectangle2, org.eclipse.draw2d.BorderLayout.TOP);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutOperatorRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutOperatorRectangle2.numColumns = 1;&#xA;&#x9;layoutOperatorRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutOperatorRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.marginWidth = 0;&#xA;&#x9;layoutOperatorRectangle2.marginHeight = 0;&#xA;&#x9;operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeOperatorLabelFigure = new org.eclipse.draw2d.Gr
 idData();&#xA;constraintFFigureNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&# A;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutLabelRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutLabelRectangle2.numColumns = 1;&#xA;&#x9;layoutLabelRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutLabelRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.marginWidth = 0;&#xA;&#x9;layoutLabelRectangle2.marginHeight = 0;&#xA;&#x9;labelRectangle2.setLayoutManager(layoutLabelRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeLabelLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeL
 abelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureNodeLabelLabelFigure, constraintFFigureNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.dia A;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeTracibilityStatusLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeTracibilityStatusLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeComponentLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeComponentLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeBehaviorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeBehaviorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeOperatorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeOperatorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.ru
 ntime.draw2d.ui.figures.WrappingLabel getFigureNodeLabelLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeLabelLabelFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 179, 211, 69);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 6, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
         <attributes
             xsi:type="gmfgen:StyleAttributes"
             fixedFont="true"
@@ -382,7 +382,7 @@
       <viewmap
           xsi:type="gmfgen:InnerClassViewmap"
           className="EmptyNodeFigure"
-          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EmptyNodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeLabelLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeOperatorLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EmptyNodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(fals
 e);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw2d.RectangleFigure();&#xA;left0.setOutline(false);&#xA;left0.setLineWidth(0);&#xA;left0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(54)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeft0 = new org.eclipse.draw2d.GridData();&#xA;constraintLeft0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalIndent = 0;&#xA;constraintLeft0.horizontalSpan = 1;&#xA;
 constraintLeft0.verticalSpan = 1;&#xA;constraintLeft0.grabExcessHoriz constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLineWidth(0);&#xA;right0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(125)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRight0 = new org.eclipse.draw2d.GridData();&#xA;constraintRight0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalIndent = 0;&#xA;constraintRight0.horizontalSpan = 1;&#xA;constraintRight0.verticalSpan = 1;&#xA;constraintRight0.grabExcessHorizontalSpace = true;&#xA;constraintRight0.grabExcessVerticalSpace = true;&#xA;this.add(right0, constraintRight0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9
 ;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x ht0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraintRightRight1.verticalSpan = 1;&#xA;constraintRightRight1.grabExcessHorizontalSpace = true;&#xA;constraintRightRight1.grabExcessVerticalSpace = true;&#xA;right0.add(rightRi
 ght1, constraintRightRight1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutRightRight1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;rightRight1.setLayoutManager(layoutRightRight1);&#xA;&#xA;&#xA ayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureEmptyNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEmptyNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeOperatorLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&#xA;operatorRectangle2.add(fFigureEmptyNodeOperato
 rLabelFigure, constraintFFigureEmptyNodeOperatorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure labelRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;labelRectangle2.setFill(false);&#xA;labelRectangle2.setOutline(false);&#xA;labelRectangle2.s ureEmptyNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureEmptyNodeLabelLabelFigure, constraintFFigureEmptyNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border crea
 teBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEmptyNodeL t.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 7, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EmptyNodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeLabelLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeOperatorLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EmptyNodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(fals
 e);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw2d.RectangleFigure();&#xA;left0.setOutline(false);&#xA;left0.setLineWidth(0);&#xA;left0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(54)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeft0 = new org.eclipse.draw2d.GridData();&#xA;constraintLeft0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalIndent = 0;&#xA;constraintLeft0.horizontalSpan = 1;&#xA;
 constraintLeft0.verticalSpan = 1;&#xA;constraintLeft0.grabExcessHoriz constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLineWidth(0);&#xA;right0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(125)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRight0 = new org.eclipse.draw2d.GridData();&#xA;constraintRight0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalIndent = 0;&#xA;constraintRight0.horizontalSpan = 1;&#xA;constraintRight0.verticalSpan = 1;&#xA;constraintRight0.grabExcessHorizontalSpace = true;&#xA;constraintRight0.grabExcessVerticalSpace = true;&#xA;this.add(right0, constraintRight0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9
 ;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x ht0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraintRightRight1.verticalSpan = 1;&#xA;constraintRightRight1.grabExcessHorizontalSpace = true;&#xA;constraintRightRight1.grabExcessVerticalSpace = true;&#xA;right0.add(rightRi
 ght1, constraintRightRight1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutRightRight1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;rightRight1.setLayoutManager(layoutRightRight1);&#xA;&#xA;&#xA ayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureEmptyNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEmptyNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeOperatorLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&#xA;operatorRectangle2.add(fFigureEmptyNodeOperato
 rLabelFigure, constraintFFigureEmptyNodeOperatorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure labelRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;labelRectangle2.setFill(false);&#xA;labelRectangle2.setOutline(false);&#xA;labelRectangle2.s ureEmptyNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureEmptyNodeLabelLabelFigure, constraintFFigureEmptyNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border crea
 teBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEmptyNodeL t.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 6, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
         <attributes
             xsi:type="gmfgen:StyleAttributes"
             fixedFont="true"
@@ -453,7 +453,7 @@
       <viewmap
           xsi:type="gmfgen:InnerClassViewmap"
           className="NodeFigure"
-          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeRequirementLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeTracibilityStatusLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeComponentLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeBehaviorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeOperatorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;priv
 ate org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeLabelLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(false);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA
 ;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw A;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeftLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintLeftLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalIndent = 0;&#xA;constraintLeftLeft1.horizontalSpan = 1;&#xA;constraintLeftLeft1.verticalSpan = 1;&#xA;constraintLeftLeft1.grabExcessHorizontalSpace = true;&#xA;constraintLeftLeft1.grabExcessVerticalSpace = true;&#xA;left0.add(leftLeft1, constraintLeftLeft1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutLeftLeft1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;leftLeft1.setLayoutManager(layoutLeftLeft1);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure requirementRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;requirementRectangle2.setFill(false);&#xA;requirementRec
 tangle2.setOutline(false);&#xA;requirementRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(requirementRectangle2, org.eclipse.draw2d.Borde tFFigureNodeRequirementLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeRequirementLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessVerticalSpace = true;&#xA;requirementRectangle2.add(fFigureNodeRequirementLabelFigure, constraintFFigureNodeRequirementLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure tracibilityStatusRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;tracibilityStatusRectangle2.setFill(false);&#xA;tracibilityStatusRectangle2.setOutline(false);&#xA;tracibilityStatusRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(tracibilityStatusRectangle2, org.eclipse.draw2d.BorderLayout.BOTTOM);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTracibilityStatusRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutTracibilityStatu
 sRectangle2.numColumns = 1;&#xA;&#x9;layoutTracibilityStatusRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;tracibilityStatusRectangle2.setLayoutManager(layoutTracibilityStatusRectangle2);&#xA;&#xA;&#xA;&#xA;f lityStatusLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessVerticalSpace = true;&#xA;tracibilityStatusRectangle2.add(fFigureNodeTracibilityStatusLabelFigure, constraintFFigureNodeTracibilityStatusLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure line0 = new org.eclipse.draw2d.RectangleFigure();&#xA;line0.setOutline(false);&#xA;line0.setLineWidth(0);&#xA;&#x9;line0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLine0 = new org.eclipse.draw2d.GridData();&#xA;constraintLine0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalIndent = 0;&#xA;constraintLine0.horizontalSpan = 1;&#xA;constraintLine0.verticalSpan = 1;&#xA;constraintLine0.grabExcessHorizontalSpace = false;&#xA;constraintLine0.grabExcessVertical
 Space = false;&#xA;constraintLine0.widthHint = 1;&#xA;constraintLine0.heightHint = 60;&#xA;this.add(line0, constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLin ridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x9;layoutRight0.marginWidth = 0;&#xA;&#x9;layoutRight0.marginHeight = 0;&#xA;&#x9;right0.setLayoutManager(layoutRight0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightLeft1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightLeft1.setFill(false);&#xA;rightLeft1.setOutline(false);&#xA;rightLeft1.setLineWidth(0);&#xA;&#xA;rightLeft1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalAlignment = org
 .eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalIndent = 0;&#xA;constraintRightLeft1.horizontalSpan = 1;&#xA;constraintRightLeft1.verticalSpan = 1;&#xA;constraintRightLeft1.grabExcessHorizontalSpace = true;&#xA;constraintRightLeft1.grabExcessVerticalSpace = true;&#xA;right0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#x9; &#x9;layoutComponentRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;componentRectangle2.setLayoutManager(layoutComponentRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeComponentLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeComponentLabelFigure.setText(&quot;&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeComponentLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeComponentLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessVerticalSpace = tr
 ue;&#xA;componentRectangle2.add(fFigureNodeComponentLabelFigure, constraintFFigureNodeComponentLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure behaviorRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;behaviorRectangle2.setFill(false);&#xA;behaviorRectangle2.setOutline(false);&#xA;behaviorRectangle2.setLineWidth(0);&#xA;&#xA;rightLeft1.add(behaviorRectangle2, org.eclipse.draw2d.Bord ure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessVerticalSpace = true;&#xA;behaviorRectangle2.add(fFigureNodeBehaviorLabelFigure, constraintFFigureNodeBehaviorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder
 (getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraint atorRectangle2.setFill(false);&#xA;operatorRectangle2.setOutline(false);&#xA;operatorRectangle2.setLineWidth(0);&#xA;&#xA;rightRight1.add(operatorRectangle2, org.eclipse.draw2d.BorderLayout.TOP);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutOperatorRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutOperatorRectangle2.numColumns = 1;&#xA;&#x9;layoutOperatorRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutOperatorRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.marginWidth = 0;&#xA;&#x9;layoutOperatorRectangle2.marginHeight = 0;&#xA;&#x9;operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeOperatorLabelFigure = new org.eclipse.draw2d.Gr
 idData();&#xA;constraintFFigureNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&# A;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutLabelRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutLabelRectangle2.numColumns = 1;&#xA;&#x9;layoutLabelRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutLabelRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.marginWidth = 0;&#xA;&#x9;layoutLabelRectangle2.marginHeight = 0;&#xA;&#x9;labelRectangle2.setLayoutManager(layoutLabelRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeLabelLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeL
 abelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureNodeLabelLabelFigure, constraintFFigureNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.dia A;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeTracibilityStatusLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeTracibilityStatusLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeComponentLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeComponentLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeBehaviorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeBehaviorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeOperatorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeOperatorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.ru
 ntime.draw2d.ui.figures.WrappingLabel getFigureNodeLabelLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeLabelLabelFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 179, 211, 69);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 7, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeRequirementLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeTracibilityStatusLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeComponentLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeBehaviorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeOperatorLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;priv
 ate org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeLabelLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(false);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA
 ;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw A;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeftLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintLeftLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeftLeft1.horizontalIndent = 0;&#xA;constraintLeftLeft1.horizontalSpan = 1;&#xA;constraintLeftLeft1.verticalSpan = 1;&#xA;constraintLeftLeft1.grabExcessHorizontalSpace = true;&#xA;constraintLeftLeft1.grabExcessVerticalSpace = true;&#xA;left0.add(leftLeft1, constraintLeftLeft1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutLeftLeft1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;leftLeft1.setLayoutManager(layoutLeftLeft1);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure requirementRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;requirementRectangle2.setFill(false);&#xA;requirementRec
 tangle2.setOutline(false);&#xA;requirementRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(requirementRectangle2, org.eclipse.draw2d.Borde tFFigureNodeRequirementLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeRequirementLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeRequirementLabelFigure.grabExcessVerticalSpace = true;&#xA;requirementRectangle2.add(fFigureNodeRequirementLabelFigure, constraintFFigureNodeRequirementLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure tracibilityStatusRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;tracibilityStatusRectangle2.setFill(false);&#xA;tracibilityStatusRectangle2.setOutline(false);&#xA;tracibilityStatusRectangle2.setLineWidth(0);&#xA;&#xA;leftLeft1.add(tracibilityStatusRectangle2, org.eclipse.draw2d.BorderLayout.BOTTOM);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTracibilityStatusRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutTracibilityStatu
 sRectangle2.numColumns = 1;&#xA;&#x9;layoutTracibilityStatusRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;tracibilityStatusRectangle2.setLayoutManager(layoutTracibilityStatusRectangle2);&#xA;&#xA;&#xA;&#xA;f lityStatusLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessVerticalSpace = true;&#xA;tracibilityStatusRectangle2.add(fFigureNodeTracibilityStatusLabelFigure, constraintFFigureNodeTracibilityStatusLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure line0 = new org.eclipse.draw2d.RectangleFigure();&#xA;line0.setOutline(false);&#xA;line0.setLineWidth(0);&#xA;&#x9;line0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLine0 = new org.eclipse.draw2d.GridData();&#xA;constraintLine0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLine0.horizontalIndent = 0;&#xA;constraintLine0.horizontalSpan = 1;&#xA;constraintLine0.verticalSpan = 1;&#xA;constraintLine0.grabExcessHorizontalSpace = false;&#xA;constraintLine0.grabExcessVertical
 Space = false;&#xA;constraintLine0.widthHint = 1;&#xA;constraintLine0.heightHint = 60;&#xA;this.add(line0, constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLin ridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x9;layoutRight0.marginWidth = 0;&#xA;&#x9;layoutRight0.marginHeight = 0;&#xA;&#x9;right0.setLayoutManager(layoutRight0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightLeft1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightLeft1.setFill(false);&#xA;rightLeft1.setOutline(false);&#xA;rightLeft1.setLineWidth(0);&#xA;&#xA;rightLeft1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightLeft1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightLeft1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalAlignment = org
 .eclipse.draw2d.GridData.CENTER;&#xA;constraintRightLeft1.horizontalIndent = 0;&#xA;constraintRightLeft1.horizontalSpan = 1;&#xA;constraintRightLeft1.verticalSpan = 1;&#xA;constraintRightLeft1.grabExcessHorizontalSpace = true;&#xA;constraintRightLeft1.grabExcessVerticalSpace = true;&#xA;right0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#x9; &#x9;layoutComponentRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;componentRectangle2.setLayoutManager(layoutComponentRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeComponentLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeComponentLabelFigure.setText(&quot;&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeComponentLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeComponentLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeComponentLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeComponentLabelFigure.grabExcessVerticalSpace = tr
 ue;&#xA;componentRectangle2.add(fFigureNodeComponentLabelFigure, constraintFFigureNodeComponentLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure behaviorRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;behaviorRectangle2.setFill(false);&#xA;behaviorRectangle2.setOutline(false);&#xA;behaviorRectangle2.setLineWidth(0);&#xA;&#xA;rightLeft1.add(behaviorRectangle2, org.eclipse.draw2d.Bord ure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeBehaviorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeBehaviorLabelFigure.grabExcessVerticalSpace = true;&#xA;behaviorRectangle2.add(fFigureNodeBehaviorLabelFigure, constraintFFigureNodeBehaviorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder
 (getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraint atorRectangle2.setFill(false);&#xA;operatorRectangle2.setOutline(false);&#xA;operatorRectangle2.setLineWidth(0);&#xA;&#xA;rightRight1.add(operatorRectangle2, org.eclipse.draw2d.BorderLayout.TOP);&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutOperatorRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutOperatorRectangle2.numColumns = 1;&#xA;&#x9;layoutOperatorRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutOperatorRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutOperatorRectangle2.marginWidth = 0;&#xA;&#x9;layoutOperatorRectangle2.marginHeight = 0;&#xA;&#x9;operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeOperatorLabelFigure = new org.eclipse.draw2d.Gr
 idData();&#xA;constraintFFigureNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&# A;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutLabelRectangle2 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutLabelRectangle2.numColumns = 1;&#xA;&#x9;layoutLabelRectangle2.makeColumnsEqualWidth = true;&#xA;&#x9;layoutLabelRectangle2.horizontalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.verticalSpacing = 0;&#xA;&#x9;layoutLabelRectangle2.marginWidth = 0;&#xA;&#x9;layoutLabelRectangle2.marginHeight = 0;&#xA;&#x9;labelRectangle2.setLayoutManager(layoutLabelRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureNodeLabelLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureNodeL
 abelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureNodeLabelLabelFigure, constraintFFigureNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border createBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.dia A;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeTracibilityStatusLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeTracibilityStatusLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeComponentLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeComponentLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeBehaviorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeBehaviorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeOperatorLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeOperatorLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.ru
 ntime.draw2d.ui.figures.WrappingLabel getFigureNodeLabelLabelFigure() {&#xA;&#x9;&#x9;return fFigureNodeLabelLabelFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 179, 211, 69);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 6, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
         <attributes
             xsi:type="gmfgen:StyleAttributes"
             fixedFont="true"
@@ -590,7 +590,7 @@
       <viewmap
           xsi:type="gmfgen:InnerClassViewmap"
           className="EmptyNodeFigure"
-          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EmptyNodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeLabelLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeOperatorLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EmptyNodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(fals
 e);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw2d.RectangleFigure();&#xA;left0.setOutline(false);&#xA;left0.setLineWidth(0);&#xA;left0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(54)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeft0 = new org.eclipse.draw2d.GridData();&#xA;constraintLeft0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalIndent = 0;&#xA;constraintLeft0.horizontalSpan = 1;&#xA;
 constraintLeft0.verticalSpan = 1;&#xA;constraintLeft0.grabExcessHoriz constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLineWidth(0);&#xA;right0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(125)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRight0 = new org.eclipse.draw2d.GridData();&#xA;constraintRight0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalIndent = 0;&#xA;constraintRight0.horizontalSpan = 1;&#xA;constraintRight0.verticalSpan = 1;&#xA;constraintRight0.grabExcessHorizontalSpace = true;&#xA;constraintRight0.grabExcessVerticalSpace = true;&#xA;this.add(right0, constraintRight0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9
 ;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x ht0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraintRightRight1.verticalSpan = 1;&#xA;constraintRightRight1.grabExcessHorizontalSpace = true;&#xA;constraintRightRight1.grabExcessVerticalSpace = true;&#xA;right0.add(rightRi
 ght1, constraintRightRight1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutRightRight1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;rightRight1.setLayoutManager(layoutRightRight1);&#xA;&#xA;&#xA ayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureEmptyNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEmptyNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeOperatorLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&#xA;operatorRectangle2.add(fFigureEmptyNodeOperato
 rLabelFigure, constraintFFigureEmptyNodeOperatorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure labelRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;labelRectangle2.setFill(false);&#xA;labelRectangle2.setOutline(false);&#xA;labelRectangle2.s ureEmptyNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureEmptyNodeLabelLabelFigure, constraintFFigureEmptyNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border crea
 teBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEmptyNodeL t.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 7, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
+          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EmptyNodeFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeLabelLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEmptyNodeOperatorLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EmptyNodeFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 3;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = false;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setOutline(fals
 e);&#xA;this.setLineWidth(0);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;this.setFont(THIS_FONT);&#xA;&#xA;&#xA;this.setBorder(createBorder0());&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure left0 = new org.eclipse.draw2d.RectangleFigure();&#xA;left0.setOutline(false);&#xA;left0.setLineWidth(0);&#xA;left0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(54)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintLeft0 = new org.eclipse.draw2d.GridData();&#xA;constraintLeft0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintLeft0.horizontalIndent = 0;&#xA;constraintLeft0.horizontalSpan = 1;&#xA;
 constraintLeft0.verticalSpan = 1;&#xA;constraintLeft0.grabExcessHoriz constraintLine0);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure right0 = new org.eclipse.draw2d.RectangleFigure();&#xA;right0.setOutline(false);&#xA;right0.setLineWidth(0);&#xA;right0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(125)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRight0 = new org.eclipse.draw2d.GridData();&#xA;constraintRight0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRight0.horizontalIndent = 0;&#xA;constraintRight0.horizontalSpan = 1;&#xA;constraintRight0.verticalSpan = 1;&#xA;constraintRight0.grabExcessHorizontalSpace = true;&#xA;constraintRight0.grabExcessVerticalSpace = true;&#xA;this.add(right0, constraintRight0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutRight0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutRight0.numColumns = 2;&#xA;&#x9
 ;layoutRight0.makeColumnsEqualWidth = false;&#xA;&#x9;layoutRight0.horizontalSpacing = 0;&#xA;&#x9;layoutRight0.verticalSpacing = 0;&#xA;&#x ht0.add(rightLeft1, constraintRightLeft1);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure rightRight1 = new org.eclipse.draw2d.RectangleFigure();&#xA;rightRight1.setFill(false);&#xA;rightRight1.setOutline(false);&#xA;rightRight1.setLineWidth(0);&#xA;&#xA;rightRight1.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintRightRight1 = new org.eclipse.draw2d.GridData();&#xA;constraintRightRight1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintRightRight1.horizontalIndent = 0;&#xA;constraintRightRight1.horizontalSpan = 1;&#xA;constraintRightRight1.verticalSpan = 1;&#xA;constraintRightRight1.grabExcessHorizontalSpace = true;&#xA;constraintRightRight1.grabExcessVerticalSpace = true;&#xA;right0.add(rightRi
 ght1, constraintRightRight1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutRightRight1 = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;rightRight1.setLayoutManager(layoutRightRight1);&#xA;&#xA;&#xA ayoutManager(layoutOperatorRectangle2);&#xA;&#xA;&#xA;&#xA;fFigureEmptyNodeOperatorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEmptyNodeOperatorLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeOperatorLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessVerticalSpace = true;&#xA;operatorRectangle2.add(fFigureEmptyNodeOperato
 rLabelFigure, constraintFFigureEmptyNodeOperatorLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure labelRectangle2 = new org.eclipse.draw2d.RectangleFigure();&#xA;labelRectangle2.setFill(false);&#xA;labelRectangle2.setOutline(false);&#xA;labelRectangle2.s ureEmptyNodeLabelLabelFigure.setText(&quot; &quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureEmptyNodeLabelLabelFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalIndent = 0;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.horizontalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.verticalSpan = 1;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureEmptyNodeLabelLabelFigure.grabExcessVerticalSpace = true;&#xA;labelRectangle2.add(fFigureEmptyNodeLabelLabelFigure, constraintFFigureEmptyNodeLabelLabelFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Border crea
 teBorder0() {&#xA;&#x9;&#x9;ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();&#xA;&#x9;&#x9;&#xA;&#xA;&#xA;&#x9;&#x9;return result;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEmptyNodeL t.widgets.Display.getCurrent(), &quot;ComBEFont&quot;, 6, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
         <attributes
             xsi:type="gmfgen:StyleAttributes"
             fixedFont="true"

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph	Fri Jul  6 07:30:22 2012	(r25168)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph	Fri Jul  6 08:38:25 2012	(r25169)
@@ -182,7 +182,7 @@
         <font
             xsi:type="gmfgraph:BasicFont"
             faceName="ComBEFont"
-            height="7"
+            height="6"
             style="BOLD"/>
         <border
             xsi:type="gmfgraph:CustomBorder"
@@ -476,7 +476,7 @@
         <font
             xsi:type="gmfgraph:BasicFont"
             faceName="ComBEFont"
-            height="7"
+            height="6"
             style="BOLD"/>
         <border
             xsi:type="gmfgraph:CustomBorder"

From oskarvanrest at gmail.com  Fri Jul  6 10:41:53 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Fri, 06 Jul 2012 08:41:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25170 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical
Message-ID: <20120706084153.E9200CC120@mx4.tudelft.nl>

Author: OskarVanRest
Date: Fri Jul  6 08:41:53 2012
New Revision: 25170
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25170&sc=1

Log:
pom.xml (adding ComBE to TextBe's Maven repository)

Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/build.properties
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/plugin.properties
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/plugin.xml
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/pom.xml

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/build.properties	Fri Jul  6 08:41:53 2012	(r25170)
@@ -0,0 +1,14 @@
+
+# <copyright>
+# </copyright>
+#
+# $Id$
+
+bin.includes = .,\
+               model/,\
+               META-INF/,\
+               plugin.xml,\
+               plugin.properties
+jars.compile.order = .
+source.. = src/
+output.. = bin/

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/plugin.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/plugin.properties	Fri Jul  6 08:41:53 2012	(r25170)
@@ -0,0 +1,8 @@
+
+# <copyright>
+# </copyright>
+#
+# $Id$
+
+pluginName = ComBE Model
+providerName = www.example.org

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/plugin.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/plugin.xml	Fri Jul  6 08:41:53 2012	(r25170)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<?eclipse version="3.0"?>
+
+<!--
+ <copyright>
+ </copyright>
+
+ $Id$
+-->
+
+<plugin>
+
+   <extension point="org.eclipse.emf.ecore.generated_package">
+      <package
+            uri="ComBE"
+            class="ComBE.ComBEPackage"
+            genModel="model/ComBE.genmodel"/>
+   </extension>
+
+</plugin>

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/pom.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/pom.xml	Fri Jul  6 08:41:53 2012	(r25170)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
+	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+	<modelVersion>4.0.0</modelVersion>
+	<parent>
+		<artifactId>org.behaviorengineering.combe.parent</artifactId>
+		<groupId>org.be.textbe</groupId>
+		<version>1.0.0-SNAPSHOT</version>
+		<relativePath>../org.behaviorengineering.combe.parent</relativePath>
+	</parent>
+	<artifactId>org.behaviorengineering.combe.graphical</artifactId>
+	<packaging>eclipse-plugin</packaging>
+</project>
\ No newline at end of file

From oskarvanrest at gmail.com  Fri Jul  6 10:43:28 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Fri, 06 Jul 2012 08:43:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25171 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram
Message-ID: <20120706084328.934342B8007@mx2.tudelft.nl>

Author: OskarVanRest
Date: Fri Jul  6 08:43:28 2012
New Revision: 25171
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25171&sc=1

Log:
pom.xml (adding ComBE to TextBe's Maven repository)

Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/pom.xml

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/pom.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/pom.xml	Fri Jul  6 08:43:28 2012	(r25171)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
+	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+	<modelVersion>4.0.0</modelVersion>
+	<parent>
+		<artifactId>org.behaviorengineering.combe.parent</artifactId>
+		<groupId>org.be.textbe</groupId>
+		<version>1.0.0-SNAPSHOT</version>
+		<relativePath>../org.behaviorengineering.combe.parent</relativePath>
+	</parent>
+	<artifactId>org.behaviorengineering.combe.graphical.diagram</artifactId>
+	<packaging>eclipse-plugin</packaging>
+</project>
\ No newline at end of file

From oskarvanrest at gmail.com  Mon Jul  9 03:28:43 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 09 Jul 2012 01:28:43 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25172 - in
	experimental/graphical-editor/org.spoofax.graphical: META-INF
	src/org/spoofax/graphical
Message-ID: <20120709012843.C620B7F801F@mx1.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul  9 01:28:42 2012
New Revision: 25172
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25172&sc=1

Log:
Selection sharing.

Modified:
   experimental/graphical-editor/org.spoofax.graphical/META-INF/MANIFEST.MF
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFUtil.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java

Modified: experimental/graphical-editor/org.spoofax.graphical/META-INF/MANIFEST.MF
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/META-INF/MANIFEST.MF	Fri Jul  6 08:43:28 2012	(r25171)
+++ experimental/graphical-editor/org.spoofax.graphical/META-INF/MANIFEST.MF	Mon Jul  9 01:28:42 2012	(r25172)
@@ -5,18 +5,20 @@
 Bundle-Version: 1.0.0.qualifier
 Bundle-RequiredExecutionEnvironment: JavaSE-1.6
 Require-Bundle: org.eclipse.core.resources;bundle-version="3.7.101",
- org.eclipse.emf.common;bundle-version="2.7.0",
  org.eclipse.core.runtime;bundle-version="3.7.0",
- org.eclipse.emf.ecore;bundle-version="2.7.0",
- org.eclipse.emf.transaction;bundle-version="1.4.0",
  org.eclipse.ui;bundle-version="3.7.0",
- org.eclipse.gmf.runtime.diagram.ui;bundle-version="1.5.0",
  org.eclipse.ui.ide;bundle-version="3.7.0",
+ org.eclipse.imp.runtime;bundle-version="0.1.1015900",
+ org.eclipse.emf.ecore;bundle-version="2.7.0",
+ org.eclipse.emf.common;bundle-version="2.7.0",
+ org.eclipse.emf.transaction;bundle-version="1.4.0",
+ org.eclipse.emf.compare;bundle-version="1.2.2",
  org.eclipse.emf.compare.diff;bundle-version="1.2.2",
  org.eclipse.emf.compare.match;bundle-version="1.2.2",
+ org.eclipse.gmf.runtime.diagram.ui;bundle-version="1.5.0",
+ org.eclipse.ocl.ecore;bundle-version="3.1.2",
  org.spoofax.terms;bundle-version="1.0.0",
  org.strategoxt.imp.runtime;bundle-version="0.1.1",
- org.eclipse.imp.runtime;bundle-version="0.1.1015900",
- org.eclipse.emf.compare;bundle-version="1.2.2",
- org.eclipse.ocl.ecore;bundle-version="3.1.2"
+ org.strategoxt.strj;bundle-version="0.17.92",
+ org.spoofax.jsglr;bundle-version="0.3.0"
 Export-Package: org.spoofax.graphical

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFUtil.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFUtil.java	Fri Jul  6 08:43:28 2012	(r25171)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFUtil.java	Mon Jul  9 01:28:42 2012	(r25172)
@@ -1,22 +1,45 @@
 package org.spoofax.graphical;
 
+import java.util.Collection;
 import java.util.HashMap;
+import java.util.Iterator;
+import java.util.LinkedList;
 import java.util.List;
+import java.util.ListIterator;
 import java.util.Map;
+import java.util.Map.Entry;
 
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.ResourcesPlugin;
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.core.runtime.Path;
+import org.eclipse.emf.common.util.EList;
+import org.eclipse.emf.common.util.EMap;
+import org.eclipse.emf.common.util.TreeIterator;
 import org.eclipse.emf.compare.diff.metamodel.DiffElement;
+import org.eclipse.emf.ecore.EClass;
 import org.eclipse.emf.ecore.EObject;
 import org.eclipse.emf.ecore.EPackage;
+import org.eclipse.emf.ecore.EStructuralFeature;
+import org.eclipse.emf.ecore.EStructuralFeature.Setting;
 import org.eclipse.emf.ecore.resource.Resource;
 import org.eclipse.emf.ecore.resource.ResourceSet;
+import org.eclipse.emf.ecore.util.EcoreUtil;
+import org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer;
 import org.eclipse.emf.transaction.RecordingCommand;
 import org.eclipse.emf.transaction.TransactionalEditingDomain;
 import org.eclipse.emf.transaction.util.TransactionUtil;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart;
 import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
+import org.eclipse.gmf.runtime.notation.Diagram;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.TextSelection;
+import org.eclipse.jface.viewers.ISelection;
+import org.eclipse.jface.viewers.ISelectionChangedListener;
+import org.eclipse.jface.viewers.ISelectionProvider;
+import org.eclipse.jface.viewers.SelectionChangedEvent;
+import org.eclipse.jface.viewers.StructuredSelection;
 import org.eclipse.swt.widgets.Display;
 import org.eclipse.ui.IEditorInput;
 import org.eclipse.ui.IEditorPart;
@@ -26,14 +49,22 @@
 import org.eclipse.ui.IWorkbenchWindow;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.part.FileEditorInput;
+import org.spoofax.interpreter.terms.IStrategoAppl;
+import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;
+import org.spoofax.jsglr.client.imploder.ImploderAttachment;
+import org.strategoxt.imp.runtime.EditorState;
+import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
+import org.strategoxt.lang.Context;
 
 public class GMFUtil {
 
 	protected static long lastTextUpdate;
 	protected static boolean diagramEdit = false;
+	protected static boolean textSelection = false;
+	protected static boolean diagramSelection = false;
 
 	public static IStrategoTerm updateSemanticModel(ITermFactory factory, IStrategoString diagramFilePath, IStrategoString packName, IStrategoTerm newTerm) {
 		EPackage ePackage = EPackage.Registry.INSTANCE.getEPackage(packName.stringValue());
@@ -57,15 +88,16 @@
 
 		EObject currentModel = getSemanticModel(diagramEditor);
 		TransactionalEditingDomain editingDomain = TransactionUtil.getEditingDomain(currentModel);
-		
-		for (int i=0; i<2; i++) { //TODO: hack/workaround for http://www.eclipse.org/forums/index.php/t/366610/
+
+		for (int i = 0; i < 2; i++) { // TODO: hack/workaround for http://www.eclipse.org/forums/index.php/t/366610/
 			final List<DiffElement> differences = EMFUtil.EMFCompare(newModel, currentModel);
 			editingDomain.getCommandStack().execute(new RecordingCommand(editingDomain) {
 				protected void doExecute() {
 					EMFUtil.EMFMerge(differences);
 				}
 			});
-		};
+		}
+		;
 
 		// Workaround for http://www.eclipse.org/forums/index.php/m/885469/#msg_885469
 		// TODO remove once the people of GMF fixed it
@@ -80,21 +112,25 @@
 
 	private static Map<String, SemanticModelContentAdapter> contentAdapters = new HashMap<String, SemanticModelContentAdapter>();
 
-	public static IStrategoTerm installSemanticModelListener(ITermFactory factory, IStrategoString diagramFilePath, IStrategoString packName, final IStrategoString textFilePath) {
+	public static IStrategoTerm installSemanticModelListener(Context context, IStrategoString diagramFilePath, IStrategoString packName, final IStrategoString textFilePath) {
 		DiagramEditor diagramEditor = findDiagramEditor(diagramFilePath.stringValue(), packName.stringValue());
 		if (diagramEditor == null) {
-			return factory.makeInt(0);
+			return context.getFactory().makeInt(0);
 		}
 
 		EObject semanticModel = getSemanticModel(diagramEditor);
 
 		if (!contentAdapters.containsKey(diagramFilePath.stringValue())) {
-			SemanticModelContentAdapter contentAdapter = new SemanticModelContentAdapter(semanticModel, factory, textFilePath.stringValue());
+			SemanticModelContentAdapter contentAdapter = new SemanticModelContentAdapter(semanticModel, context, textFilePath.stringValue());
 			semanticModel.eAdapters().add(contentAdapter);
 			contentAdapters.put(diagramFilePath.stringValue(), contentAdapter);
+
+			diagramEditor.getEditorSite().getSelectionProvider().addSelectionChangedListener(new GMFSelectionChangedListener(textFilePath.stringValue(), diagramFilePath.stringValue(), context, packName));
+			IEditorPart textEditor = GMFUtil.findTextEditor(textFilePath.stringValue());
+			textEditor.getSite().getSelectionProvider().addSelectionChangedListener(new SpoofaxSelectionChangedListener(textFilePath.stringValue(), diagramFilePath.stringValue(), context, packName));
 		}
 
-		return factory.makeInt(1);
+		return context.getFactory().makeInt(1);
 	}
 
 	public static Resource getSemanticModelResource(DiagramEditor diagramEditor) {
@@ -139,4 +175,299 @@
 
 		return editor;
 	}
+
+}
+
+class SpoofaxSelectionChangedListener implements ISelectionChangedListener {
+
+	private String textFilePath;
+	private Context context;
+	private String diagramFilePath;
+	private IStrategoString packName;
+
+	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getLeftToken;
+	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getRightToken;
+	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getTokenizer;
+
+	public SpoofaxSelectionChangedListener(String textFilePath, String diagramFilePath, Context context, IStrategoString packName) {
+		this.textFilePath = textFilePath;
+		this.diagramFilePath = diagramFilePath;
+		this.context = context;
+		this.packName = packName;
+	}
+
+	@Override
+	public void selectionChanged(SelectionChangedEvent event) {
+		DiagramEditor diagramEditor = GMFUtil.findDiagramEditor(diagramFilePath, packName.stringValue());
+		
+		if (GMFUtil.diagramSelection) {
+			GMFUtil.diagramSelection = false;
+			return;
+		}
+		else {
+			GMFUtil.textSelection = true;
+		}
+
+		IStrategoTerm selection = EditorState.getActiveEditor().getSelectionAst(true);
+		if (selection == null) {
+			diagramEditor.getSite().getSelectionProvider().setSelection(new StructuredSelection());
+			return;
+		}
+
+		List<IStrategoAppl> selectedIStrategoAppls = filterIStrategoAppls(selection);
+		
+		EObject root = GMFUtil.getSemanticModel(GMFUtil.findDiagramEditor(diagramFilePath, packName.stringValue()));
+		List<EObject> eObjectsToSelect = strategoApplToEObject(selectedIStrategoAppls, root);
+		eObjectsToSelect = addAllContents(eObjectsToSelect);
+
+		List<EditPart> editPartsToSelect = eObjectsToEditPart(eObjectsToSelect, diagramEditor.getDiagramEditPart());
+		
+		diagramEditor.getSite().getSelectionProvider().setSelection(new StructuredSelection(editPartsToSelect));
+	}
+
+	private List<EObject> addAllContents(List<EObject> eObjectsToSelect) {
+		List<EObject> result = new LinkedList<EObject>();
+		TreeIterator<Object> it = EcoreUtil.getAllContents(eObjectsToSelect);
+		
+		while (it.hasNext()) {
+			Object object = it.next();
+			if (object instanceof EObject) {
+				result.add((EObject) object);
+			}
+		}
+		
+		return result;
+	}
+
+	private List<EditPart> eObjectsToEditPart(List<EObject> eObjects, DiagramEditPart diagramEditPart) {
+		List<EditPart> result = new LinkedList<EditPart>();
+		
+		for (EObject eObject : eObjects) {
+			EditPart editPart = diagramEditPart.findEditPart(diagramEditPart, eObject);
+			if (editPart != null) {
+				result.add(editPart);
+			}
+		}
+		
+		return result;
+	}
+
+	private List<EObject> strategoApplToEObject(List<IStrategoAppl> appls, EObject root) {
+		List<EObject> result = new LinkedList<EObject>();
+		
+		for (int i=0; i<appls.size(); i++) {
+			List<Integer> path = StrategoTermPath.createPathList(appls.get(i));
+			result.add(strategoTermPathToEObject(path, root));
+		}
+		
+		return result;
+	}
+	
+	private EObject strategoTermPathToEObject(List<Integer> path, EObject root) {
+		EObject current = root;
+		
+		for (int i=0; i<path.size(); i++) {
+			EClass eClass = current.eClass();
+			EMap<String, String> index2name = eClass.getEAnnotation("StrategoTerm.index").getDetails();
+			EStructuralFeature feature = eClass.getEStructuralFeature(index2name.get(path.get(i).toString()));
+			if (feature.getLowerBound() == 0 && feature.getUpperBound() == 1) { // some
+				i++;
+			}
+			if (feature.getUpperBound() == -1) { // list
+				if (i+1 < path.size()) {
+					current = (EObject) ((EList<?>) current.eGet(feature)).get(path.get(i+1));
+					i++;
+				}
+			}
+			else {
+				current = (EObject) current.eGet(feature);
+			}
+		}
+		
+		return current;
+	}
+
+	private List<IStrategoAppl> filterIStrategoAppls(IStrategoTerm selection) {
+		List<IStrategoAppl> result = new LinkedList<IStrategoAppl>();
+
+		switch (selection.getTermType()) {
+		case IStrategoTerm.APPL:
+			IStrategoAppl appl = (IStrategoAppl) selection;
+			if (appl.getConstructor().getName().equals("Some")) {
+				if (appl.getSubterm(0).getTermType() == IStrategoTerm.APPL) {
+					result.add((IStrategoAppl) appl.getSubterm(0));
+				}
+			}
+			else {
+				result.add((IStrategoAppl) selection);
+			}
+			break;
+		case IStrategoTerm.LIST:
+			IStrategoList list = (IStrategoList) selection;
+			for (int i=0; i<((IStrategoList) selection).size(); i++) {
+				if (list.head().getTermType() == IStrategoTerm.APPL) {
+					result.add((IStrategoAppl) list.head());
+				}
+				list = list.tail();
+			}
+			break;
+		default:
+			break;
+		}
+
+		return result;
+	}
+	
+	
+}
+
+class GMFSelectionChangedListener implements ISelectionChangedListener {
+
+	private String textFilePath;
+	private Context context;
+	private String diagramFilePath;
+	private IStrategoString packName;
+
+	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getLeftToken;
+	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getRightToken;
+	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getTokenizer;
+
+	public GMFSelectionChangedListener(String textFilePath, String diagramFilePath, Context context, IStrategoString packName) {
+		this.textFilePath = textFilePath;
+		this.diagramFilePath = diagramFilePath;
+		this.context = context;
+		this.packName = packName;
+	}
+
+	@Override
+	public void selectionChanged(SelectionChangedEvent event) {
+		List<EObject> selectedEObjects = getSelectedEObjects(event.getSelection());
+		// List<EObject> filteredEObjects = filterAncestors(selectedEObjects);
+
+		IEditorPart textEditor = GMFUtil.findTextEditor(textFilePath);
+		EObject root = GMFUtil.getSemanticModel(GMFUtil.findDiagramEditor(diagramFilePath, packName.stringValue()));
+
+		if (textEditor == null) {
+			return;
+		}
+
+		if (GMFUtil.textSelection) {
+			GMFUtil.textSelection = false;
+			return;
+		} else {
+			GMFUtil.diagramSelection = true;
+		}
+
+		// if (selectedEObjects.size()==0) {
+		// return;
+		// }
+
+		IStrategoTerm currentAST = EditorState.getEditorFor(textEditor).getCurrentAst();
+
+		int a = Integer.MAX_VALUE;
+		int b = Integer.MIN_VALUE;
+
+		for (int i = 0; i < selectedEObjects.size(); i++) {
+			if (EcoreUtil.isAncestor(root, selectedEObjects.get(i))) { // if not, then the selected object is a phantom node
+				List<Integer> path = eObjectToStrategoTermPath(selectedEObjects.get(i), new LinkedList<Integer>());
+				IStrategoTerm selectedTerm = StrategoTermPath.getTermAtPath(context, currentAST, StrategoTermPath.toStrategoPath(path));
+
+				if (selectedTerm != null) {
+					int newA = (ImploderAttachment.getLeftToken(selectedTerm).getStartOffset());
+					int newB = (ImploderAttachment.getRightToken(selectedTerm).getStartOffset());
+
+					if (newA < a) {
+						a = newA;
+					}
+					if (newB > b) {
+						b = newB;
+					}
+				}
+			}
+		}
+
+		ISelectionProvider selectionProvider = textEditor.getEditorSite().getSelectionProvider();
+		if (a != Integer.MAX_VALUE && b != Integer.MIN_VALUE) {
+			selectionProvider.setSelection(new TextSelection(a, b - a));
+		} else {
+			selectionProvider.setSelection(new TextSelection(0, 0));
+		}
+	}
+
+	private List<EObject> getSelectedEObjects(ISelection selection) {
+		LinkedList<EObject> result = new LinkedList<EObject>();
+
+		if (!(selection instanceof StructuredSelection)) {
+			return result;
+		}
+
+		List<?> selectedParts = ((StructuredSelection) selection).toList();
+
+		for (Object o : selectedParts) {
+			if (o instanceof EditPart) {
+				EditPart editPart = (EditPart) o;
+				if (editPart.getModel() instanceof View) {
+					View view = (View) editPart.getModel();
+					if (!(view instanceof Diagram) && view.getElement() != null) {
+						result.add(view.getElement());
+					}
+				}
+			}
+		}
+
+		return result;
+	}
+
+	// private List<EObject> filterAncestors(List<EObject> eObjects) {
+	// List<EObject> result = new ArrayList<EObject>();
+	//
+	// for (EObject eObject : eObjects) {
+	// boolean isAncestor = true;
+	// for (EObject eObject2 : eObjects) {
+	// if (eObject != eObject2 && EcoreUtil.isAncestor(eObject2, eObject)) {
+	// isAncestor = false;
+	// }
+	// }
+	// if (isAncestor) {
+	// result.add(eObject);
+	// }
+	// }
+	//
+	// return result;
+	// }
+
+	private List<Integer> eObjectToStrategoTermPath(EObject eObject, List<Integer> result) {
+		if (eObject.eContainer() == null) {
+			return result;
+		} else {
+			EPackage MM = EPackage.Registry.INSTANCE.getEPackage(packName.stringValue()); // TODO: remove
+			EClass c = (EClass) MM.getEClassifier(eObject.eContainer().eClass().getName());
+			EMap<String, String> index2name = c.getEAnnotation("StrategoTerm.index").getDetails();
+
+			int position = Integer.parseInt(getKeyByValue(index2name, eObject.eContainingFeature().getName()));
+
+			if (eObject.eContainingFeature().getLowerBound() == 0 && eObject.eContainingFeature().getUpperBound() == 1) {
+				result.add(0, 0);
+			}
+
+			if (eObject.eContainingFeature().getUpperBound() == -1) {
+				EList<?> list = (EList<?>) eObject.eContainer().eGet(eObject.eContainingFeature());
+				int positionInList = list.indexOf(eObject);
+				result.add(0, positionInList);
+			}
+
+			result.add(0, position);
+
+			return eObjectToStrategoTermPath(eObject.eContainer(), result);
+		}
+	}
+
+	private <T, E> T getKeyByValue(EMap<T, E> map, E value) {
+		for (Entry<T, E> entry : map.entrySet()) {
+			if (value.equals(entry.getValue())) {
+				return entry.getKey();
+			}
+		}
+		return null;
+	}
 }
\ No newline at end of file

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java	Fri Jul  6 08:43:28 2012	(r25171)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java	Mon Jul  9 01:28:42 2012	(r25172)
@@ -9,16 +9,17 @@
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.services.ITextReplacer;
+import org.strategoxt.lang.Context;
 
 public class SemanticModelContentAdapter extends EContentAdapter {
 
 	private EObject semanticModel;
-	private ITermFactory factory;
+	private Context context;
 	private String textFilePath;
 
-	public SemanticModelContentAdapter(EObject semanticModel, ITermFactory factory, String textFilePath) {
+	public SemanticModelContentAdapter(EObject semanticModel, Context context, String textFilePath) {
 		this.semanticModel = semanticModel;
-		this.factory = factory;
+		this.context = context;
 		this.textFilePath = textFilePath;
 	}
 
@@ -34,7 +35,7 @@
 			GMFUtil.diagramEdit = true;
 			
 			IStrategoTerm currentTerm = EditorState.getEditorFor(textEditor).getCurrentAst();
-			IStrategoTerm newTerm = EMFUtil.Model2Term(semanticModel, factory);
+			IStrategoTerm newTerm = EMFUtil.Model2Term(semanticModel, context.getFactory());
 			EditorState editor = EditorState.getEditorFor(textEditor);
 			ITextReplacer textReplacer = null;
 			try {
@@ -43,7 +44,7 @@
 				e.printStackTrace();
 			}
 
-			textReplacer.replaceText(factory.makeList(factory.makeTuple(currentTerm, newTerm)));			
+			textReplacer.replaceText(context.getFactory().makeList(context.getFactory().makeTuple(currentTerm, newTerm)));			
 		}
 	}
 }
\ No newline at end of file

From oskarvanrest at gmail.com  Mon Jul  9 06:16:21 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 09 Jul 2012 04:16:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25173 - in
	experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical:
	. emf
Message-ID: <20120709041621.27B297F8034@mx1.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul  9 04:16:19 2012
New Revision: 25173
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25173&sc=1

Log:
Refactor

Added:
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/Model2Term.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/StrategoTermPathAdapter.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/Term2Model.java
      - copied, changed from r25046, experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/Term2Model.java
Deleted:
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/EuGENiaUtil.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/Term2Model.java
Modified:
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/EMFUtil.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFUtil.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/EMFUtil.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/EMFUtil.java	Mon Jul  9 01:28:42 2012	(r25172)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/EMFUtil.java	Mon Jul  9 04:16:19 2012	(r25173)
@@ -5,93 +5,16 @@
 import java.util.List;
 import java.util.Map;
 
-import org.eclipse.emf.common.util.EList;
-import org.eclipse.emf.common.util.EMap;
 import org.eclipse.emf.compare.diff.merge.service.MergeService;
 import org.eclipse.emf.compare.diff.metamodel.DiffElement;
 import org.eclipse.emf.compare.diff.metamodel.DiffModel;
 import org.eclipse.emf.compare.diff.service.DiffService;
 import org.eclipse.emf.compare.match.MatchOptions;
 import org.eclipse.emf.compare.match.metamodel.MatchModel;
-import org.eclipse.emf.ecore.EAttribute;
-import org.eclipse.emf.ecore.EClass;
 import org.eclipse.emf.ecore.EObject;
-import org.eclipse.emf.ecore.EReference;
-import org.eclipse.emf.ecore.EStructuralFeature;
-import org.eclipse.emf.ecore.util.EcoreUtil;
-import org.spoofax.interpreter.terms.IStrategoConstructor;
-import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.spoofax.interpreter.terms.ITermFactory;
 
 public class EMFUtil {
 
-	public static IStrategoTerm Model2Term(EObject eObject, ITermFactory f) {
-		EClass c = eObject.eClass();
-		EMap<String, String> index2name = c.getEAnnotation("StrategoTerm.index").getDetails();
-
-		IStrategoConstructor constructor = f.makeConstructor(c.getName(), c.getEStructuralFeatures().size());
-		ArrayList<IStrategoTerm> kids = new ArrayList<IStrategoTerm>();
-
-		for (int i=0; i<index2name.size(); i++) {
-			EStructuralFeature eSructuralFeature = c.getEStructuralFeature(index2name.get(Integer.toString(i)));
-			
-			Object value = eObject.eGet(eSructuralFeature);
-			
-			IStrategoTerm result = null;
-
-			if (value != null) {
-				if (eSructuralFeature instanceof EAttribute) {
-					result = f.makeString(value.toString());
-				} else if (eSructuralFeature instanceof EReference) {
-					EReference eReference = (EReference) eSructuralFeature;
-					if (eReference.isContainment()) {
-						if (value instanceof EObject) {
-							result = Model2Term((EObject) value, f);
-						} else if (value instanceof EList) {
-							EList<?> eListElements = (EList<?>) value;
-							ArrayList<IStrategoTerm> results = new ArrayList<IStrategoTerm>();
-							for (Object eListElement : eListElements) {
-								results.add(Model2Term((EObject) eListElement, f));
-							}
-							result = f.makeList(results);
-						}
-					} else {
-						if (value instanceof EObject) {
-							result = f.makeString(EcoreUtil.getID((EObject) value));
-						}
-					}
-				}
-			}
-
-			if (eSructuralFeature.getLowerBound() == 0 && eSructuralFeature.getUpperBound() == 1) {
-				if (result == null) {
-					result = f.makeAppl(f.makeConstructor("None", 0));
-				} else {
-					result = f.makeAppl(f.makeConstructor("Some", 1), result);
-				}
-			}
-
-			if (result == null) {
-				if (eSructuralFeature instanceof EAttribute) {
-					EAttribute eAttribute = (EAttribute) eSructuralFeature;
-					eAttribute.getDefaultValueLiteral();
-					// TODO: check if this works for EEnums
-				} else if (eSructuralFeature instanceof EReference) {
-					EReference eReference = (EReference) eSructuralFeature;
-					Object defaultValue = eReference.getEReferenceType().getEIDAttribute().getEAttributeType().getDefaultValue();
-					if (defaultValue == null) {
-						result = f.makeString("x");
-					} else {
-						result = f.makeString(defaultValue.toString());
-					}
-				}
-			}
-
-			kids.add(result);
-		}
-		return f.makeAppl(constructor, (IStrategoTerm[]) kids.toArray(new IStrategoTerm[kids.size()]), f.makeList());
-	}
-
 	/**
 	 * Compare EObjects a and b and return a list of differences. 
 	 * Merging these differences means that b will change.

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFUtil.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFUtil.java	Mon Jul  9 01:28:42 2012	(r25172)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFUtil.java	Mon Jul  9 04:16:19 2012	(r25173)
@@ -49,6 +49,8 @@
 import org.eclipse.ui.IWorkbenchWindow;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.part.FileEditorInput;
+import org.spoofax.graphical.emf.StrategoTermPathAdapter;
+import org.spoofax.graphical.emf.Term2Model;
 import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoString;
@@ -257,35 +259,13 @@
 		
 		for (int i=0; i<appls.size(); i++) {
 			List<Integer> path = StrategoTermPath.createPathList(appls.get(i));
-			result.add(strategoTermPathToEObject(path, root));
+			result.add(StrategoTermPathAdapter.strategoTermPathToEObject(path, root));
 		}
 		
 		return result;
 	}
 	
-	private EObject strategoTermPathToEObject(List<Integer> path, EObject root) {
-		EObject current = root;
-		
-		for (int i=0; i<path.size(); i++) {
-			EClass eClass = current.eClass();
-			EMap<String, String> index2name = eClass.getEAnnotation("StrategoTerm.index").getDetails();
-			EStructuralFeature feature = eClass.getEStructuralFeature(index2name.get(path.get(i).toString()));
-			if (feature.getLowerBound() == 0 && feature.getUpperBound() == 1) { // some
-				i++;
-			}
-			if (feature.getUpperBound() == -1) { // list
-				if (i+1 < path.size()) {
-					current = (EObject) ((EList<?>) current.eGet(feature)).get(path.get(i+1));
-					i++;
-				}
-			}
-			else {
-				current = (EObject) current.eGet(feature);
-			}
-		}
-		
-		return current;
-	}
+
 
 	private List<IStrategoAppl> filterIStrategoAppls(IStrategoTerm selection) {
 		List<IStrategoAppl> result = new LinkedList<IStrategoAppl>();
@@ -369,7 +349,7 @@
 
 		for (int i = 0; i < selectedEObjects.size(); i++) {
 			if (EcoreUtil.isAncestor(root, selectedEObjects.get(i))) { // if not, then the selected object is a phantom node
-				List<Integer> path = eObjectToStrategoTermPath(selectedEObjects.get(i), new LinkedList<Integer>());
+				List<Integer> path = StrategoTermPathAdapter.eObjectToStrategoTermPath(selectedEObjects.get(i));
 				IStrategoTerm selectedTerm = StrategoTermPath.getTermAtPath(context, currentAST, StrategoTermPath.toStrategoPath(path));
 
 				if (selectedTerm != null) {
@@ -417,57 +397,4 @@
 
 		return result;
 	}
-
-	// private List<EObject> filterAncestors(List<EObject> eObjects) {
-	// List<EObject> result = new ArrayList<EObject>();
-	//
-	// for (EObject eObject : eObjects) {
-	// boolean isAncestor = true;
-	// for (EObject eObject2 : eObjects) {
-	// if (eObject != eObject2 && EcoreUtil.isAncestor(eObject2, eObject)) {
-	// isAncestor = false;
-	// }
-	// }
-	// if (isAncestor) {
-	// result.add(eObject);
-	// }
-	// }
-	//
-	// return result;
-	// }
-
-	private List<Integer> eObjectToStrategoTermPath(EObject eObject, List<Integer> result) {
-		if (eObject.eContainer() == null) {
-			return result;
-		} else {
-			EPackage MM = EPackage.Registry.INSTANCE.getEPackage(packName.stringValue()); // TODO: remove
-			EClass c = (EClass) MM.getEClassifier(eObject.eContainer().eClass().getName());
-			EMap<String, String> index2name = c.getEAnnotation("StrategoTerm.index").getDetails();
-
-			int position = Integer.parseInt(getKeyByValue(index2name, eObject.eContainingFeature().getName()));
-
-			if (eObject.eContainingFeature().getLowerBound() == 0 && eObject.eContainingFeature().getUpperBound() == 1) {
-				result.add(0, 0);
-			}
-
-			if (eObject.eContainingFeature().getUpperBound() == -1) {
-				EList<?> list = (EList<?>) eObject.eContainer().eGet(eObject.eContainingFeature());
-				int positionInList = list.indexOf(eObject);
-				result.add(0, positionInList);
-			}
-
-			result.add(0, position);
-
-			return eObjectToStrategoTermPath(eObject.eContainer(), result);
-		}
-	}
-
-	private <T, E> T getKeyByValue(EMap<T, E> map, E value) {
-		for (Entry<T, E> entry : map.entrySet()) {
-			if (value.equals(entry.getValue())) {
-				return entry.getKey();
-			}
-		}
-		return null;
-	}
 }
\ No newline at end of file

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java	Mon Jul  9 01:28:42 2012	(r25172)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java	Mon Jul  9 04:16:19 2012	(r25173)
@@ -4,6 +4,7 @@
 import org.eclipse.emf.ecore.EObject;
 import org.eclipse.emf.ecore.util.EContentAdapter;
 import org.eclipse.ui.IEditorPart;
+import org.spoofax.graphical.emf.Model2Term;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;
 import org.strategoxt.imp.runtime.EditorState;
@@ -35,7 +36,7 @@
 			GMFUtil.diagramEdit = true;
 			
 			IStrategoTerm currentTerm = EditorState.getEditorFor(textEditor).getCurrentAst();
-			IStrategoTerm newTerm = EMFUtil.Model2Term(semanticModel, context.getFactory());
+			IStrategoTerm newTerm = new Model2Term(context.getFactory()).convert(semanticModel);
 			EditorState editor = EditorState.getEditorFor(textEditor);
 			ITextReplacer textReplacer = null;
 			try {

Added: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/Model2Term.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/Model2Term.java	Mon Jul  9 04:16:19 2012	(r25173)
@@ -0,0 +1,127 @@
+package org.spoofax.graphical.emf;
+
+import java.util.ArrayList;
+
+import org.eclipse.emf.common.util.EList;
+import org.eclipse.emf.common.util.EMap;
+import org.eclipse.emf.ecore.EAttribute;
+import org.eclipse.emf.ecore.EClass;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.EReference;
+import org.eclipse.emf.ecore.EStructuralFeature;
+import org.eclipse.emf.ecore.util.EcoreUtil;
+import org.spoofax.interpreter.terms.IStrategoConstructor;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+
+public class Model2Term {
+
+	private ITermFactory factory;
+
+	public Model2Term(ITermFactory factory) {
+		this.factory = factory;
+	}
+
+	public IStrategoTerm convert(EObject eObject) {
+		EClass c = eObject.eClass();
+		EMap<String, String> index2name = c.getEAnnotation("StrategoTerm.index").getDetails();
+
+		IStrategoConstructor constructor = factory.makeConstructor(c.getName(), c.getEStructuralFeatures().size());
+		ArrayList<IStrategoTerm> kids = new ArrayList<IStrategoTerm>();
+
+		for (int i = 0; i < index2name.size(); i++) {
+			EStructuralFeature eSructuralFeature = c.getEStructuralFeature(index2name.get(Integer.toString(i)));
+			kids.add(eStructuralFeature2Term(eObject, eSructuralFeature));
+		}
+			
+		return factory.makeAppl(constructor, (IStrategoTerm[]) kids.toArray(new IStrategoTerm[kids.size()]), factory.makeList());
+	}
+
+	private IStrategoTerm eStructuralFeature2Term(EObject eObject, EStructuralFeature eStructuralFeature) {
+		IStrategoTerm result = null;
+
+		if (eStructuralFeature instanceof EAttribute) {
+			result = eAttribute2Term(eObject, (EAttribute) eStructuralFeature);
+		} else if (eStructuralFeature instanceof EReference) {
+			result = eReference2Term(eObject, (EReference) eStructuralFeature);
+		}
+
+		if (eStructuralFeature.getLowerBound() == 0 && eStructuralFeature.getUpperBound() == 1) {
+			if (result == null) {
+				result = factory.makeAppl(factory.makeConstructor("None", 0));
+			} else {
+				result = factory.makeAppl(factory.makeConstructor("Some", 1), result);
+			}
+		}
+
+		if (result == null) {
+			return eStructuralFeature2DefaultTerm(eStructuralFeature);
+		}
+		else {
+			return result;
+		}
+	}
+	
+	private IStrategoTerm eAttribute2Term(EObject eObject, EAttribute eAttribute) {
+		Object value = eObject.eGet(eAttribute);
+
+		if (value == null) {
+			return null;
+		} else {
+			return factory.makeString(value.toString());
+		}
+	}
+
+	private IStrategoTerm eReference2Term(EObject eObject, EReference eReference) {
+		Object value = eObject.eGet(eReference);
+
+		if (value == null) {
+			return null;
+		}
+
+		if (eReference.isContainment()) {
+			if (value instanceof EObject) {
+				return convert((EObject) value);
+			} else if (value instanceof EList) {
+				EList<?> eListElements = (EList<?>) value;
+				ArrayList<IStrategoTerm> results = new ArrayList<IStrategoTerm>();
+				for (Object eListElement : eListElements) {
+					results.add(convert((EObject) eListElement));
+				}
+				return factory.makeList(results);
+			}
+		} else {
+			if (value instanceof EObject) {
+				return factory.makeString(EcoreUtil.getID((EObject) value));
+			} else if (value instanceof EList) {
+				// TODO not yet implemented. also not yet supported by Spoofax' namespace analysis (see Spoofax/530)
+			}
+		}
+
+		return null;
+	}
+	
+	private IStrategoTerm eStructuralFeature2DefaultTerm(EStructuralFeature eStructuralFeature) {
+		if (eStructuralFeature instanceof EAttribute) {
+			return eAttribute2DefaultTerm((EAttribute) eStructuralFeature);
+		} else if (eStructuralFeature instanceof EReference) {
+			return eReference2DefaultTerm((EReference) eStructuralFeature);
+		}
+		
+		return null;
+	}
+	
+	// TODO: check if this works for EEnums
+	private IStrategoTerm eAttribute2DefaultTerm(EAttribute eAttribute) {
+		return factory.makeString(eAttribute.getDefaultValueLiteral());
+	}
+
+	private IStrategoTerm eReference2DefaultTerm(EReference eReference) {                                                              
+		Object defaultValue = eReference.getEReferenceType().getEIDAttribute().getEAttributeType().getDefaultValue();
+		if (defaultValue == null) {
+			return factory.makeString("x");
+		} else {
+			return factory.makeString(defaultValue.toString());
+		}
+	}
+}

Added: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/StrategoTermPathAdapter.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/StrategoTermPathAdapter.java	Mon Jul  9 04:16:19 2012	(r25173)
@@ -0,0 +1,75 @@
+package org.spoofax.graphical.emf;
+
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Map.Entry;
+
+import org.eclipse.emf.common.util.EList;
+import org.eclipse.emf.common.util.EMap;
+import org.eclipse.emf.ecore.EClass;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.EStructuralFeature;
+
+public class StrategoTermPathAdapter {
+
+	public static List<Integer> eObjectToStrategoTermPath(EObject eObject) {
+		return eObjectToStrategoTermPath(eObject, new LinkedList<Integer>());
+	}
+
+	private static List<Integer> eObjectToStrategoTermPath(EObject eObject, List<Integer> result) {
+		if (eObject.eContainer() == null) {
+			return result;
+		} else {
+			EMap<String, String> index2name = eObject.eContainer().eClass().getEAnnotation("StrategoTerm.index").getDetails();
+
+			int position = Integer.parseInt(getKeyByValue(index2name, eObject.eContainingFeature().getName()));
+
+			if (eObject.eContainingFeature().getLowerBound() == 0 && eObject.eContainingFeature().getUpperBound() == 1) {
+				result.add(0, 0);
+			}
+
+			if (eObject.eContainingFeature().getUpperBound() == -1) {
+				EList<?> list = (EList<?>) eObject.eContainer().eGet(eObject.eContainingFeature());
+				int positionInList = list.indexOf(eObject);
+				result.add(0, positionInList);
+			}
+
+			result.add(0, position);
+
+			return eObjectToStrategoTermPath(eObject.eContainer(), result);
+		}
+	}
+
+	private static <T, E> T getKeyByValue(EMap<T, E> map, E value) {
+		for (Entry<T, E> entry : map.entrySet()) {
+			if (value.equals(entry.getValue())) {
+				return entry.getKey();
+			}
+		}
+		return null;
+	}
+	
+	public static EObject strategoTermPathToEObject(List<Integer> path, EObject root) {
+		EObject current = root;
+		
+		for (int i=0; i<path.size(); i++) {
+			EClass eClass = current.eClass();
+			EMap<String, String> index2name = eClass.getEAnnotation("StrategoTerm.index").getDetails();
+			EStructuralFeature feature = eClass.getEStructuralFeature(index2name.get(path.get(i).toString()));
+			if (feature.getLowerBound() == 0 && feature.getUpperBound() == 1) { // some
+				i++;
+			}
+			if (feature.getUpperBound() == -1) { // list
+				if (i+1 < path.size()) {
+					current = (EObject) ((EList<?>) current.eGet(feature)).get(path.get(i+1));
+					i++;
+				}
+			}
+			else {
+				current = (EObject) current.eGet(feature);
+			}
+		}
+		
+		return current;
+	}
+}

Copied and modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/Term2Model.java (from r25046, experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/Term2Model.java)
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/Term2Model.java	Mon Jun 25 06:41:16 2012	(r25046, copy source)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/Term2Model.java	Mon Jul  9 04:16:19 2012	(r25173)
@@ -1,4 +1,4 @@
-package org.spoofax.graphical;
+package org.spoofax.graphical.emf;
 
 import java.util.ArrayList;
 import java.util.Iterator;
@@ -6,7 +6,6 @@
 import java.util.List;
 import java.util.ListIterator;
 
-import org.eclipse.emf.common.util.EList;
 import org.eclipse.emf.common.util.EMap;
 import org.eclipse.emf.ecore.EAttribute;
 import org.eclipse.emf.ecore.EClass;
@@ -144,7 +143,7 @@
 	}
 
 	/**
-	 * Returns all EObjects with containment hierachy path 'path' and type 'eType'
+	 * Returns all EObjects with containment hierarchy path 'path' and type 'eType'
 	 */
 	private List<EObject> findDefs(IStrategoList path, EClassifier eType) {
 		List<EObject> defs = new LinkedList<EObject>();

From oskarvanrest at gmail.com  Mon Jul  9 07:29:42 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 09 Jul 2012 05:29:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25174 - in
	experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical:
	. emf/compare selectionsharing
Message-ID: <20120709052942.0A117108C01E@mx3.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul  9 05:29:41 2012
New Revision: 25174
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25174&sc=1

Log:
Refactor

Added:
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/compare/
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/compare/SpoofaxEMFCompare.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/compare/SpoofaxMatchEngine.java
      - copied, changed from r24974, experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SpoofaxMatchEngine.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/GMFSelectionChangedListener.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/SpoofaxSelectionChangedListener.java
Deleted:
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/EMFUtil.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SpoofaxMatchEngine.java
Modified:
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFUtil.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFUtil.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFUtil.java	Mon Jul  9 04:16:19 2012	(r25173)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFUtil.java	Mon Jul  9 05:29:41 2012	(r25174)
@@ -1,45 +1,22 @@
 package org.spoofax.graphical;
 
-import java.util.Collection;
 import java.util.HashMap;
-import java.util.Iterator;
-import java.util.LinkedList;
 import java.util.List;
-import java.util.ListIterator;
 import java.util.Map;
-import java.util.Map.Entry;
 
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.ResourcesPlugin;
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.core.runtime.Path;
-import org.eclipse.emf.common.util.EList;
-import org.eclipse.emf.common.util.EMap;
-import org.eclipse.emf.common.util.TreeIterator;
 import org.eclipse.emf.compare.diff.metamodel.DiffElement;
-import org.eclipse.emf.ecore.EClass;
 import org.eclipse.emf.ecore.EObject;
 import org.eclipse.emf.ecore.EPackage;
-import org.eclipse.emf.ecore.EStructuralFeature;
-import org.eclipse.emf.ecore.EStructuralFeature.Setting;
 import org.eclipse.emf.ecore.resource.Resource;
 import org.eclipse.emf.ecore.resource.ResourceSet;
-import org.eclipse.emf.ecore.util.EcoreUtil;
-import org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer;
 import org.eclipse.emf.transaction.RecordingCommand;
 import org.eclipse.emf.transaction.TransactionalEditingDomain;
 import org.eclipse.emf.transaction.util.TransactionUtil;
-import org.eclipse.gef.EditPart;
-import org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart;
 import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
-import org.eclipse.gmf.runtime.notation.Diagram;
-import org.eclipse.gmf.runtime.notation.View;
-import org.eclipse.jface.text.TextSelection;
-import org.eclipse.jface.viewers.ISelection;
-import org.eclipse.jface.viewers.ISelectionChangedListener;
-import org.eclipse.jface.viewers.ISelectionProvider;
-import org.eclipse.jface.viewers.SelectionChangedEvent;
-import org.eclipse.jface.viewers.StructuredSelection;
 import org.eclipse.swt.widgets.Display;
 import org.eclipse.ui.IEditorInput;
 import org.eclipse.ui.IEditorPart;
@@ -49,24 +26,21 @@
 import org.eclipse.ui.IWorkbenchWindow;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.part.FileEditorInput;
-import org.spoofax.graphical.emf.StrategoTermPathAdapter;
 import org.spoofax.graphical.emf.Term2Model;
-import org.spoofax.interpreter.terms.IStrategoAppl;
-import org.spoofax.interpreter.terms.IStrategoList;
+import org.spoofax.graphical.emf.compare.SpoofaxEMFCompare;
+import org.spoofax.graphical.selectionsharing.GMFSelectionChangedListener;
+import org.spoofax.graphical.selectionsharing.SpoofaxSelectionChangedListener;
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;
-import org.spoofax.jsglr.client.imploder.ImploderAttachment;
-import org.strategoxt.imp.runtime.EditorState;
-import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
 import org.strategoxt.lang.Context;
 
 public class GMFUtil {
 
-	protected static long lastTextUpdate;
-	protected static boolean diagramEdit = false;
-	protected static boolean textSelection = false;
-	protected static boolean diagramSelection = false;
+	public static long lastTextUpdate;
+	public static boolean diagramEdit = false;
+	public static boolean textSelection = false;
+	public static boolean diagramSelection = false;
 
 	public static IStrategoTerm updateSemanticModel(ITermFactory factory, IStrategoString diagramFilePath, IStrategoString packName, IStrategoTerm newTerm) {
 		EPackage ePackage = EPackage.Registry.INSTANCE.getEPackage(packName.stringValue());
@@ -76,10 +50,7 @@
 		}
 
 		EObject newModel = new Term2Model(ePackage).convert(newTerm);
-		return updateSemanticModel(factory, diagramFilePath, packName, newModel);
-	}
 
-	public static IStrategoTerm updateSemanticModel(ITermFactory factory, IStrategoString diagramFilePath, IStrategoString packName, EObject newModel) {
 		lastTextUpdate = System.currentTimeMillis();
 
 		final DiagramEditor diagramEditor = findDiagramEditor(diagramFilePath.stringValue(), packName.stringValue());
@@ -92,10 +63,10 @@
 		TransactionalEditingDomain editingDomain = TransactionUtil.getEditingDomain(currentModel);
 
 		for (int i = 0; i < 2; i++) { // TODO: hack/workaround for http://www.eclipse.org/forums/index.php/t/366610/
-			final List<DiffElement> differences = EMFUtil.EMFCompare(newModel, currentModel);
+			final List<DiffElement> differences = SpoofaxEMFCompare.EMFCompare(newModel, currentModel);
 			editingDomain.getCommandStack().execute(new RecordingCommand(editingDomain) {
 				protected void doExecute() {
-					EMFUtil.EMFMerge(differences);
+					SpoofaxEMFCompare.EMFMerge(differences);
 				}
 			});
 		}
@@ -177,224 +148,4 @@
 
 		return editor;
 	}
-
-}
-
-class SpoofaxSelectionChangedListener implements ISelectionChangedListener {
-
-	private String textFilePath;
-	private Context context;
-	private String diagramFilePath;
-	private IStrategoString packName;
-
-	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getLeftToken;
-	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getRightToken;
-	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getTokenizer;
-
-	public SpoofaxSelectionChangedListener(String textFilePath, String diagramFilePath, Context context, IStrategoString packName) {
-		this.textFilePath = textFilePath;
-		this.diagramFilePath = diagramFilePath;
-		this.context = context;
-		this.packName = packName;
-	}
-
-	@Override
-	public void selectionChanged(SelectionChangedEvent event) {
-		DiagramEditor diagramEditor = GMFUtil.findDiagramEditor(diagramFilePath, packName.stringValue());
-		
-		if (GMFUtil.diagramSelection) {
-			GMFUtil.diagramSelection = false;
-			return;
-		}
-		else {
-			GMFUtil.textSelection = true;
-		}
-
-		IStrategoTerm selection = EditorState.getActiveEditor().getSelectionAst(true);
-		if (selection == null) {
-			diagramEditor.getSite().getSelectionProvider().setSelection(new StructuredSelection());
-			return;
-		}
-
-		List<IStrategoAppl> selectedIStrategoAppls = filterIStrategoAppls(selection);
-		
-		EObject root = GMFUtil.getSemanticModel(GMFUtil.findDiagramEditor(diagramFilePath, packName.stringValue()));
-		List<EObject> eObjectsToSelect = strategoApplToEObject(selectedIStrategoAppls, root);
-		eObjectsToSelect = addAllContents(eObjectsToSelect);
-
-		List<EditPart> editPartsToSelect = eObjectsToEditPart(eObjectsToSelect, diagramEditor.getDiagramEditPart());
-		
-		diagramEditor.getSite().getSelectionProvider().setSelection(new StructuredSelection(editPartsToSelect));
-	}
-
-	private List<EObject> addAllContents(List<EObject> eObjectsToSelect) {
-		List<EObject> result = new LinkedList<EObject>();
-		TreeIterator<Object> it = EcoreUtil.getAllContents(eObjectsToSelect);
-		
-		while (it.hasNext()) {
-			Object object = it.next();
-			if (object instanceof EObject) {
-				result.add((EObject) object);
-			}
-		}
-		
-		return result;
-	}
-
-	private List<EditPart> eObjectsToEditPart(List<EObject> eObjects, DiagramEditPart diagramEditPart) {
-		List<EditPart> result = new LinkedList<EditPart>();
-		
-		for (EObject eObject : eObjects) {
-			EditPart editPart = diagramEditPart.findEditPart(diagramEditPart, eObject);
-			if (editPart != null) {
-				result.add(editPart);
-			}
-		}
-		
-		return result;
-	}
-
-	private List<EObject> strategoApplToEObject(List<IStrategoAppl> appls, EObject root) {
-		List<EObject> result = new LinkedList<EObject>();
-		
-		for (int i=0; i<appls.size(); i++) {
-			List<Integer> path = StrategoTermPath.createPathList(appls.get(i));
-			result.add(StrategoTermPathAdapter.strategoTermPathToEObject(path, root));
-		}
-		
-		return result;
-	}
-	
-
-
-	private List<IStrategoAppl> filterIStrategoAppls(IStrategoTerm selection) {
-		List<IStrategoAppl> result = new LinkedList<IStrategoAppl>();
-
-		switch (selection.getTermType()) {
-		case IStrategoTerm.APPL:
-			IStrategoAppl appl = (IStrategoAppl) selection;
-			if (appl.getConstructor().getName().equals("Some")) {
-				if (appl.getSubterm(0).getTermType() == IStrategoTerm.APPL) {
-					result.add((IStrategoAppl) appl.getSubterm(0));
-				}
-			}
-			else {
-				result.add((IStrategoAppl) selection);
-			}
-			break;
-		case IStrategoTerm.LIST:
-			IStrategoList list = (IStrategoList) selection;
-			for (int i=0; i<((IStrategoList) selection).size(); i++) {
-				if (list.head().getTermType() == IStrategoTerm.APPL) {
-					result.add((IStrategoAppl) list.head());
-				}
-				list = list.tail();
-			}
-			break;
-		default:
-			break;
-		}
-
-		return result;
-	}
-	
-	
-}
-
-class GMFSelectionChangedListener implements ISelectionChangedListener {
-
-	private String textFilePath;
-	private Context context;
-	private String diagramFilePath;
-	private IStrategoString packName;
-
-	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getLeftToken;
-	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getRightToken;
-	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getTokenizer;
-
-	public GMFSelectionChangedListener(String textFilePath, String diagramFilePath, Context context, IStrategoString packName) {
-		this.textFilePath = textFilePath;
-		this.diagramFilePath = diagramFilePath;
-		this.context = context;
-		this.packName = packName;
-	}
-
-	@Override
-	public void selectionChanged(SelectionChangedEvent event) {
-		List<EObject> selectedEObjects = getSelectedEObjects(event.getSelection());
-		// List<EObject> filteredEObjects = filterAncestors(selectedEObjects);
-
-		IEditorPart textEditor = GMFUtil.findTextEditor(textFilePath);
-		EObject root = GMFUtil.getSemanticModel(GMFUtil.findDiagramEditor(diagramFilePath, packName.stringValue()));
-
-		if (textEditor == null) {
-			return;
-		}
-
-		if (GMFUtil.textSelection) {
-			GMFUtil.textSelection = false;
-			return;
-		} else {
-			GMFUtil.diagramSelection = true;
-		}
-
-		// if (selectedEObjects.size()==0) {
-		// return;
-		// }
-
-		IStrategoTerm currentAST = EditorState.getEditorFor(textEditor).getCurrentAst();
-
-		int a = Integer.MAX_VALUE;
-		int b = Integer.MIN_VALUE;
-
-		for (int i = 0; i < selectedEObjects.size(); i++) {
-			if (EcoreUtil.isAncestor(root, selectedEObjects.get(i))) { // if not, then the selected object is a phantom node
-				List<Integer> path = StrategoTermPathAdapter.eObjectToStrategoTermPath(selectedEObjects.get(i));
-				IStrategoTerm selectedTerm = StrategoTermPath.getTermAtPath(context, currentAST, StrategoTermPath.toStrategoPath(path));
-
-				if (selectedTerm != null) {
-					int newA = (ImploderAttachment.getLeftToken(selectedTerm).getStartOffset());
-					int newB = (ImploderAttachment.getRightToken(selectedTerm).getStartOffset());
-
-					if (newA < a) {
-						a = newA;
-					}
-					if (newB > b) {
-						b = newB;
-					}
-				}
-			}
-		}
-
-		ISelectionProvider selectionProvider = textEditor.getEditorSite().getSelectionProvider();
-		if (a != Integer.MAX_VALUE && b != Integer.MIN_VALUE) {
-			selectionProvider.setSelection(new TextSelection(a, b - a));
-		} else {
-			selectionProvider.setSelection(new TextSelection(0, 0));
-		}
-	}
-
-	private List<EObject> getSelectedEObjects(ISelection selection) {
-		LinkedList<EObject> result = new LinkedList<EObject>();
-
-		if (!(selection instanceof StructuredSelection)) {
-			return result;
-		}
-
-		List<?> selectedParts = ((StructuredSelection) selection).toList();
-
-		for (Object o : selectedParts) {
-			if (o instanceof EditPart) {
-				EditPart editPart = (EditPart) o;
-				if (editPart.getModel() instanceof View) {
-					View view = (View) editPart.getModel();
-					if (!(view instanceof Diagram) && view.getElement() != null) {
-						result.add(view.getElement());
-					}
-				}
-			}
-		}
-
-		return result;
-	}
 }
\ No newline at end of file

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java	Mon Jul  9 04:16:19 2012	(r25173)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java	Mon Jul  9 05:29:41 2012	(r25174)
@@ -6,7 +6,6 @@
 import org.eclipse.ui.IEditorPart;
 import org.spoofax.graphical.emf.Model2Term;
 import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.spoofax.interpreter.terms.ITermFactory;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.services.ITextReplacer;

Added: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/compare/SpoofaxEMFCompare.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/compare/SpoofaxEMFCompare.java	Mon Jul  9 05:29:41 2012	(r25174)
@@ -0,0 +1,36 @@
+package org.spoofax.graphical.emf.compare;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import org.eclipse.emf.compare.diff.merge.service.MergeService;
+import org.eclipse.emf.compare.diff.metamodel.DiffElement;
+import org.eclipse.emf.compare.diff.metamodel.DiffModel;
+import org.eclipse.emf.compare.diff.service.DiffService;
+import org.eclipse.emf.compare.match.MatchOptions;
+import org.eclipse.emf.compare.match.metamodel.MatchModel;
+import org.eclipse.emf.ecore.EObject;
+
+public class SpoofaxEMFCompare {
+	
+	/**
+	 * Compare EObjects a and b and return a list of differences. 
+	 * Merging these differences means that b will change.
+	 */
+	public static List<DiffElement> EMFCompare(EObject a, EObject b) {
+		MatchModel match = null;
+		Map<String, Object> options = new HashMap<String, Object>();
+		options.put(MatchOptions.OPTION_DISTINCT_METAMODELS, Boolean.TRUE);
+		options.put(MatchOptions.OPTION_IGNORE_ID, Boolean.TRUE);
+		options.put(MatchOptions.OPTION_IGNORE_XMI_ID, Boolean.TRUE);
+		match = new SpoofaxMatchEngine(a, b).contentMatch(a, b, options);
+		DiffModel diff = DiffService.doDiff(match, false);
+		return new ArrayList<DiffElement>(diff.getOwnedElements());
+	}
+
+	public static void EMFMerge(List<DiffElement> differences) {
+		MergeService.merge(differences, true);
+	}
+}

Copied and modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/compare/SpoofaxMatchEngine.java (from r24974, experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SpoofaxMatchEngine.java)
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SpoofaxMatchEngine.java	Mon Jun 11 03:25:23 2012	(r24974, copy source)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/compare/SpoofaxMatchEngine.java	Mon Jul  9 05:29:41 2012	(r25174)
@@ -1,4 +1,4 @@
-package org.spoofax.graphical;
+package org.spoofax.graphical.emf.compare;
 
 import java.util.List;
 

Added: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/GMFSelectionChangedListener.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/GMFSelectionChangedListener.java	Mon Jul  9 05:29:41 2012	(r25174)
@@ -0,0 +1,123 @@
+package org.spoofax.graphical.selectionsharing;
+
+import java.util.LinkedList;
+import java.util.List;
+
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.util.EcoreUtil;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gmf.runtime.notation.Diagram;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.TextSelection;
+import org.eclipse.jface.viewers.ISelection;
+import org.eclipse.jface.viewers.ISelectionChangedListener;
+import org.eclipse.jface.viewers.ISelectionProvider;
+import org.eclipse.jface.viewers.SelectionChangedEvent;
+import org.eclipse.jface.viewers.StructuredSelection;
+import org.eclipse.ui.IEditorPart;
+import org.spoofax.graphical.GMFUtil;
+import org.spoofax.graphical.emf.StrategoTermPathAdapter;
+import org.spoofax.interpreter.terms.IStrategoString;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.jsglr.client.imploder.ImploderAttachment;
+import org.strategoxt.imp.runtime.EditorState;
+import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
+import org.strategoxt.lang.Context;
+
+public class GMFSelectionChangedListener implements ISelectionChangedListener {
+
+	private String textFilePath;
+	private Context context;
+	private String diagramFilePath;
+	private IStrategoString packName;
+
+	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getLeftToken;
+	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getRightToken;
+	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getTokenizer;
+
+	public GMFSelectionChangedListener(String textFilePath, String diagramFilePath, Context context, IStrategoString packName) {
+		this.textFilePath = textFilePath;
+		this.diagramFilePath = diagramFilePath;
+		this.context = context;
+		this.packName = packName;
+	}
+
+	@Override
+	public void selectionChanged(SelectionChangedEvent event) {
+		List<EObject> selectedEObjects = getSelectedEObjects(event.getSelection());
+		// List<EObject> filteredEObjects = filterAncestors(selectedEObjects);
+
+		IEditorPart textEditor = GMFUtil.findTextEditor(textFilePath);
+		EObject root = GMFUtil.getSemanticModel(GMFUtil.findDiagramEditor(diagramFilePath, packName.stringValue()));
+
+		if (textEditor == null) {
+			return;
+		}
+
+		if (GMFUtil.textSelection) {
+			GMFUtil.textSelection = false;
+			return;
+		} else {
+			GMFUtil.diagramSelection = true;
+		}
+
+		// if (selectedEObjects.size()==0) {
+		// return;
+		// }
+
+		IStrategoTerm currentAST = EditorState.getEditorFor(textEditor).getCurrentAst();
+
+		int a = Integer.MAX_VALUE;
+		int b = Integer.MIN_VALUE;
+
+		for (int i = 0; i < selectedEObjects.size(); i++) {
+			if (EcoreUtil.isAncestor(root, selectedEObjects.get(i))) { // if not, then the selected object is a phantom node
+				List<Integer> path = StrategoTermPathAdapter.eObjectToStrategoTermPath(selectedEObjects.get(i));
+				IStrategoTerm selectedTerm = StrategoTermPath.getTermAtPath(context, currentAST, StrategoTermPath.toStrategoPath(path));
+
+				if (selectedTerm != null) {
+					int newA = (ImploderAttachment.getLeftToken(selectedTerm).getStartOffset());
+					int newB = (ImploderAttachment.getRightToken(selectedTerm).getStartOffset());
+
+					if (newA < a) {
+						a = newA;
+					}
+					if (newB > b) {
+						b = newB;
+					}
+				}
+			}
+		}
+
+		ISelectionProvider selectionProvider = textEditor.getEditorSite().getSelectionProvider();
+		if (a != Integer.MAX_VALUE && b != Integer.MIN_VALUE) {
+			selectionProvider.setSelection(new TextSelection(a, b - a));
+		} else {
+			selectionProvider.setSelection(new TextSelection(0, 0));
+		}
+	}
+
+	private List<EObject> getSelectedEObjects(ISelection selection) {
+		LinkedList<EObject> result = new LinkedList<EObject>();
+
+		if (!(selection instanceof StructuredSelection)) {
+			return result;
+		}
+
+		List<?> selectedParts = ((StructuredSelection) selection).toList();
+
+		for (Object o : selectedParts) {
+			if (o instanceof EditPart) {
+				EditPart editPart = (EditPart) o;
+				if (editPart.getModel() instanceof View) {
+					View view = (View) editPart.getModel();
+					if (!(view instanceof Diagram) && view.getElement() != null) {
+						result.add(view.getElement());
+					}
+				}
+			}
+		}
+
+		return result;
+	}
+}

Added: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/SpoofaxSelectionChangedListener.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/SpoofaxSelectionChangedListener.java	Mon Jul  9 05:29:41 2012	(r25174)
@@ -0,0 +1,142 @@
+package org.spoofax.graphical.selectionsharing;
+
+import java.util.LinkedList;
+import java.util.List;
+
+import org.eclipse.emf.common.util.TreeIterator;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.util.EcoreUtil;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
+import org.eclipse.jface.viewers.ISelectionChangedListener;
+import org.eclipse.jface.viewers.SelectionChangedEvent;
+import org.eclipse.jface.viewers.StructuredSelection;
+import org.spoofax.graphical.GMFUtil;
+import org.spoofax.graphical.emf.StrategoTermPathAdapter;
+import org.spoofax.interpreter.terms.IStrategoAppl;
+import org.spoofax.interpreter.terms.IStrategoList;
+import org.spoofax.interpreter.terms.IStrategoString;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.EditorState;
+import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
+import org.strategoxt.lang.Context;
+
+public class SpoofaxSelectionChangedListener implements ISelectionChangedListener {
+
+	private String textFilePath;
+	private Context context;
+	private String diagramFilePath;
+	private IStrategoString packName;
+
+	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getLeftToken;
+	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getRightToken;
+	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getTokenizer;
+
+	public SpoofaxSelectionChangedListener(String textFilePath, String diagramFilePath, Context context, IStrategoString packName) {
+		this.textFilePath = textFilePath;
+		this.diagramFilePath = diagramFilePath;
+		this.context = context;
+		this.packName = packName;
+	}
+
+	@Override
+	public void selectionChanged(SelectionChangedEvent event) {
+		DiagramEditor diagramEditor = GMFUtil.findDiagramEditor(diagramFilePath, packName.stringValue());
+		
+		if (GMFUtil.diagramSelection) {
+			GMFUtil.diagramSelection = false;
+			return;
+		}
+		else {
+			GMFUtil.textSelection = true;
+		}
+
+		IStrategoTerm selection = EditorState.getActiveEditor().getSelectionAst(true);
+		if (selection == null) {
+			diagramEditor.getSite().getSelectionProvider().setSelection(new StructuredSelection());
+			return;
+		}
+
+		List<IStrategoAppl> selectedIStrategoAppls = filterIStrategoAppls(selection);
+		
+		EObject root = GMFUtil.getSemanticModel(GMFUtil.findDiagramEditor(diagramFilePath, packName.stringValue()));
+		List<EObject> eObjectsToSelect = strategoApplToEObject(selectedIStrategoAppls, root);
+		eObjectsToSelect = addAllContents(eObjectsToSelect);
+
+		List<EditPart> editPartsToSelect = eObjectsToEditPart(eObjectsToSelect, diagramEditor.getDiagramEditPart());
+		
+		diagramEditor.getSite().getSelectionProvider().setSelection(new StructuredSelection(editPartsToSelect));
+	}
+
+	private List<EObject> addAllContents(List<EObject> eObjectsToSelect) {
+		List<EObject> result = new LinkedList<EObject>();
+		TreeIterator<Object> it = EcoreUtil.getAllContents(eObjectsToSelect);
+		
+		while (it.hasNext()) {
+			Object object = it.next();
+			if (object instanceof EObject) {
+				result.add((EObject) object);
+			}
+		}
+		
+		return result;
+	}
+
+	private List<EditPart> eObjectsToEditPart(List<EObject> eObjects, DiagramEditPart diagramEditPart) {
+		List<EditPart> result = new LinkedList<EditPart>();
+		
+		for (EObject eObject : eObjects) {
+			EditPart editPart = diagramEditPart.findEditPart(diagramEditPart, eObject);
+			if (editPart != null) {
+				result.add(editPart);
+			}
+		}
+		
+		return result;
+	}
+
+	private List<EObject> strategoApplToEObject(List<IStrategoAppl> appls, EObject root) {
+		List<EObject> result = new LinkedList<EObject>();
+		
+		for (int i=0; i<appls.size(); i++) {
+			List<Integer> path = StrategoTermPath.createPathList(appls.get(i));
+			result.add(StrategoTermPathAdapter.strategoTermPathToEObject(path, root));
+		}
+		
+		return result;
+	}
+	
+
+
+	private List<IStrategoAppl> filterIStrategoAppls(IStrategoTerm selection) {
+		List<IStrategoAppl> result = new LinkedList<IStrategoAppl>();
+
+		switch (selection.getTermType()) {
+		case IStrategoTerm.APPL:
+			IStrategoAppl appl = (IStrategoAppl) selection;
+			if (appl.getConstructor().getName().equals("Some")) {
+				if (appl.getSubterm(0).getTermType() == IStrategoTerm.APPL) {
+					result.add((IStrategoAppl) appl.getSubterm(0));
+				}
+			}
+			else {
+				result.add((IStrategoAppl) selection);
+			}
+			break;
+		case IStrategoTerm.LIST:
+			IStrategoList list = (IStrategoList) selection;
+			for (int i=0; i<((IStrategoList) selection).size(); i++) {
+				if (list.head().getTermType() == IStrategoTerm.APPL) {
+					result.add((IStrategoAppl) list.head());
+				}
+				list = list.tail();
+			}
+			break;
+		default:
+			break;
+		}
+
+		return result;
+	}
+}

From oskarvanrest at gmail.com  Mon Jul  9 09:16:55 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 09 Jul 2012 07:16:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25175 - in
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual:
	editor/java/org/behaviorengineering/combe/textual/strategies trans
Message-ID: <20120709071655.833C7108C002@mx3.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul  9 07:16:55 2012
New Revision: 25175
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25175&sc=1

Log:


Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/java/org/behaviorengineering/combe/textual/strategies/term_to_model_0_3.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/combe.str

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/java/org/behaviorengineering/combe/textual/strategies/term_to_model_0_3.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/java/org/behaviorengineering/combe/textual/strategies/term_to_model_0_3.java	Mon Jul  9 05:29:41 2012	(r25174)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/java/org/behaviorengineering/combe/textual/strategies/term_to_model_0_3.java	Mon Jul  9 07:16:55 2012	(r25175)
@@ -1,6 +1,6 @@
 package org.behaviorengineering.combe.textual.strategies;
 
-import org.spoofax.graphical.GMFUtil;
+import org.spoofax.graphical.GMFBridge;
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.lang.Context;
@@ -11,8 +11,7 @@
 	public static term_to_model_0_3 instance = new term_to_model_0_3();
 
 	@Override
-	public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm diagramFilePath, IStrategoTerm packName, IStrategoTerm textFilePath) {
-		GMFUtil.updateSemanticModel(context.getFactory(), (IStrategoString) diagramFilePath, (IStrategoString) packName, term);
-		return GMFUtil.installSemanticModelListener(context.getFactory(), (IStrategoString) diagramFilePath, (IStrategoString) packName, (IStrategoString) textFilePath);
+	public IStrategoTerm invoke(Context context, IStrategoTerm analysedAST, IStrategoTerm textFilePath, IStrategoTerm diagramFilePath, IStrategoTerm packageName) {
+		return GMFBridge.getInstance().synchronize(analysedAST, (IStrategoString) textFilePath, context, (IStrategoString) diagramFilePath, (IStrategoString) packageName);
 	}
 }

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/combe.str
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/combe.str	Mon Jul  9 05:29:41 2012	(r25174)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/combe.str	Mon Jul  9 07:16:55 2012	(r25175)
@@ -68,7 +68,7 @@
       textFilePath := $[[project-path]/[path]];
       diagramFileExtension := <conc-strings> (<lower-case> packageName, "_diagram");
       diagramFilePath := $[[project-path]/[<guarantee-extension(|diagramFileExtension)> path]];
-      <term-to-model(|diagramFilePath, packageName, textFilePath)> ast'
+      <term-to-model(|textFilePath, diagramFilePath, packageName)> ast'
       
   external term-to-model(|diagramFilePath, packageName, textFilePath)
 

From oskarvanrest at gmail.com  Mon Jul  9 09:29:51 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 09 Jul 2012 07:29:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25176 - in
	experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical:
	. selectionsharing
Message-ID: <20120709072951.C5C7A2B8003@mx2.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul  9 07:29:51 2012
New Revision: 25176
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25176&sc=1

Log:
Refactor

Added:
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/EditorPair.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFBridge.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFBridgeUtil.java
Deleted:
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFUtil.java
Modified:
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/GMFSelectionChangedListener.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/SpoofaxSelectionChangedListener.java

Added: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/EditorPair.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/EditorPair.java	Mon Jul  9 07:29:51 2012	(r25176)
@@ -0,0 +1,54 @@
+package org.spoofax.graphical;
+
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.EPackage;
+import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
+import org.eclipse.ui.IEditorPart;
+import org.spoofax.graphical.selectionsharing.GMFSelectionChangedListener;
+import org.spoofax.graphical.selectionsharing.SpoofaxSelectionChangedListener;
+import org.strategoxt.lang.Context;
+
+public class EditorPair {
+
+	private IEditorPart textEditor;
+	private DiagramEditor diagramEditor;
+	private Context context;
+	private EPackage ePackage;
+
+	public long lastTextUpdate;
+	public boolean diagramEdit;
+	public boolean textSelection;
+	public boolean diagramSelection;
+
+	public EditorPair(IEditorPart textEditor, DiagramEditor diagramEditor, Context context, EPackage ePackage) {
+		this.textEditor = textEditor;
+		this.diagramEditor = diagramEditor;
+		this.context = context;
+		this.ePackage = ePackage;
+
+		installSemanticModelListener();
+		diagramEditor.getEditorSite().getSelectionProvider().addSelectionChangedListener(new GMFSelectionChangedListener(this));
+		textEditor.getSite().getSelectionProvider().addSelectionChangedListener(new SpoofaxSelectionChangedListener(this));
+	}
+
+	public IEditorPart getTextEditor() {
+		return textEditor;
+	}
+
+	public DiagramEditor getDiagramEditor() {
+		return diagramEditor;
+	}
+
+	public Context getContext() {
+		return context;
+	}
+
+	public EPackage getEPackage() {
+		return ePackage;
+	}
+
+	private void installSemanticModelListener() {
+		EObject semanticModel = GMFBridgeUtil.getSemanticModel(diagramEditor);
+		semanticModel.eAdapters().add(new SemanticModelContentAdapter(this));
+	}
+}

Added: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFBridge.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFBridge.java	Mon Jul  9 07:29:51 2012	(r25176)
@@ -0,0 +1,87 @@
+package org.spoofax.graphical;
+
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import org.eclipse.emf.compare.diff.metamodel.DiffElement;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.EPackage;
+import org.eclipse.emf.transaction.RecordingCommand;
+import org.eclipse.emf.transaction.TransactionalEditingDomain;
+import org.eclipse.emf.transaction.util.TransactionUtil;
+import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
+import org.eclipse.swt.widgets.Display;
+import org.eclipse.ui.IEditorPart;
+import org.spoofax.graphical.emf.Term2Model;
+import org.spoofax.graphical.emf.compare.SpoofaxEMFCompare;
+import org.spoofax.interpreter.terms.IStrategoString;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.lang.Context;
+
+public class GMFBridge {
+
+	private static GMFBridge instance = new GMFBridge();
+
+	private Map<IStrategoString, EditorPair> editorPairs;
+
+	private GMFBridge() {
+		editorPairs = new HashMap<IStrategoString, EditorPair>();
+	}
+
+	public static GMFBridge getInstance() {
+		return instance;
+	}
+
+	public IStrategoTerm synchronize(IStrategoTerm analysedAST, IStrategoString textFilePath, Context context, IStrategoString diagramFilePath, IStrategoString packageName) {
+		EditorPair editorPair = null;
+
+		if (editorPairs.containsKey(textFilePath)) {
+			editorPair = editorPairs.get(textFilePath);
+		} else {
+			IEditorPart textEditor = GMFBridgeUtil.findTextEditor(textFilePath.stringValue());
+			DiagramEditor diagramEditor = GMFBridgeUtil.findDiagramEditor(diagramFilePath.stringValue(), packageName.stringValue());
+			EPackage ePackage = EPackage.Registry.INSTANCE.getEPackage(packageName.stringValue());
+
+			if (!(textEditor == null || diagramEditor == null || ePackage == null)) {
+				editorPair = new EditorPair(textEditor, diagramEditor, context, ePackage);
+				editorPairs.put(textFilePath, editorPair);
+			}
+		}
+
+		if (editorPair != null) {
+			if (editorPair.diagramEdit) {
+				editorPair.diagramEdit = false;
+			} else {
+				editorPair.lastTextUpdate = System.currentTimeMillis();
+				term2Model(editorPair, analysedAST);
+			}
+		}
+
+		return analysedAST;
+	}
+
+	private void term2Model(final EditorPair editorPair, IStrategoTerm analysedAST) {
+		EObject newModel = new Term2Model(editorPair.getEPackage()).convert(analysedAST);
+		EObject currentModel = GMFBridgeUtil.getSemanticModel(editorPair.getDiagramEditor());
+		TransactionalEditingDomain editingDomain = TransactionUtil.getEditingDomain(currentModel);
+
+		for (int i = 0; i < 2; i++) { // TODO: hack/workaround for http://www.eclipse.org/forums/index.php/t/366610/
+			final List<DiffElement> differences = SpoofaxEMFCompare.EMFCompare(newModel, currentModel);
+			editingDomain.getCommandStack().execute(new RecordingCommand(editingDomain) {
+				protected void doExecute() {
+					SpoofaxEMFCompare.EMFMerge(differences);
+				}
+			});
+		}
+		;
+
+		// Workaround for http://www.eclipse.org/forums/index.php/m/885469/#msg_885469
+		// TODO remove once the people of GMF fixed it
+		Display.getDefault().asyncExec(new Runnable() {
+			public void run() {
+				editorPair.getDiagramEditor().getDiagramEditPart().addNotify();
+			}
+		});
+	}
+}

Added: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFBridgeUtil.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFBridgeUtil.java	Mon Jul  9 07:29:51 2012	(r25176)
@@ -0,0 +1,65 @@
+package org.spoofax.graphical;
+
+import org.eclipse.core.resources.IFile;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.emf.ecore.resource.ResourceSet;
+import org.eclipse.emf.transaction.TransactionalEditingDomain;
+import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
+import org.eclipse.ui.IEditorInput;
+import org.eclipse.ui.IEditorPart;
+import org.eclipse.ui.IEditorReference;
+import org.eclipse.ui.IWorkbench;
+import org.eclipse.ui.IWorkbenchPage;
+import org.eclipse.ui.IWorkbenchWindow;
+import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.part.FileEditorInput;
+
+public class GMFBridgeUtil {
+
+	public static IEditorPart findTextEditor(String textFilePath) {
+		return findEditor(textFilePath, "org.eclipse.imp.runtime.impEditor");
+	}
+
+	public static DiagramEditor findDiagramEditor(String diagramFilePath, String packageName) {
+		return (DiagramEditor) findEditor(diagramFilePath, (packageName + ".diagram.part." + packageName + "DiagramEditorID"));
+	}
+
+	private static IEditorPart findEditor(String path, String editorId) {
+		IWorkbench wb = PlatformUI.getWorkbench();
+		IWorkbenchWindow win = wb.getWorkbenchWindows()[0]; // getActiveWorkbenchWindow doesn't work
+		IWorkbenchPage page = win.getActivePage();
+
+		IPath iPath = new Path(path);
+		IFile iFile = ResourcesPlugin.getWorkspace().getRoot().getFileForLocation(iPath);
+		IEditorInput editorInput = new FileEditorInput(iFile);
+
+		IEditorPart editor = null;
+
+		IEditorReference[] editors = page.findEditors(editorInput, null, IWorkbenchPage.MATCH_INPUT);
+		for (int i = 0; i < editors.length; i++) {
+			if (editors[i].getId().equals(editorId)) {
+				editor = editors[i].getEditor(false);
+			}
+		}
+
+		return editor;
+	}
+	
+	public static Resource getSemanticModelResource(DiagramEditor diagramEditor) {
+		TransactionalEditingDomain editingDomain = diagramEditor.getEditingDomain();
+		ResourceSet diagramEditorResourceSet = editingDomain.getResourceSet();
+		return diagramEditorResourceSet.getResources().get(1);
+	}
+
+	public static EObject getSemanticModel(DiagramEditor diagramEditor) {
+		Resource semanticModelResource = getSemanticModelResource(diagramEditor);
+		if (semanticModelResource.getContents().size() != 0)
+			return semanticModelResource.getContents().get(0);
+		else
+			return null;
+	}
+}

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java	Mon Jul  9 07:16:55 2012	(r25175)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java	Mon Jul  9 07:29:51 2012	(r25176)
@@ -1,8 +1,8 @@
 package org.spoofax.graphical;
 
 import org.eclipse.emf.common.notify.Notification;
-import org.eclipse.emf.ecore.EObject;
 import org.eclipse.emf.ecore.util.EContentAdapter;
+import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
 import org.eclipse.ui.IEditorPart;
 import org.spoofax.graphical.emf.Model2Term;
 import org.spoofax.interpreter.terms.IStrategoTerm;
@@ -13,29 +13,30 @@
 
 public class SemanticModelContentAdapter extends EContentAdapter {
 
-	private EObject semanticModel;
-	private Context context;
-	private String textFilePath;
+	private EditorPair editorPair;
 
-	public SemanticModelContentAdapter(EObject semanticModel, Context context, String textFilePath) {
-		this.semanticModel = semanticModel;
-		this.context = context;
-		this.textFilePath = textFilePath;
+	public SemanticModelContentAdapter(EditorPair editorPair) {
+		this.editorPair = editorPair;
 	}
 
 	public void notifyChanged(Notification n) {
 		super.notifyChanged(n);
 		
 		if (n.getEventType() != Notification.REMOVING_ADAPTER) {
-			final IEditorPart textEditor = GMFUtil.findTextEditor(textFilePath);
-			if (textEditor == null || GMFUtil.lastTextUpdate + 500 > System.currentTimeMillis()) {
+			IEditorPart textEditor = editorPair.getTextEditor();
+			DiagramEditor diagramEditor = editorPair.getDiagramEditor();
+			Context context = editorPair.getContext();
+			
+			if (editorPair.lastTextUpdate + 500 > System.currentTimeMillis()) {
 				return;
 			}
-			
-			GMFUtil.diagramEdit = true;
+			else {
+				editorPair.diagramEdit = true;
+			}
 			
 			IStrategoTerm currentTerm = EditorState.getEditorFor(textEditor).getCurrentAst();
-			IStrategoTerm newTerm = new Model2Term(context.getFactory()).convert(semanticModel);
+			IStrategoTerm newTerm = new Model2Term(context.getFactory()).convert(GMFBridgeUtil.getSemanticModel(diagramEditor));
+			
 			EditorState editor = EditorState.getEditorFor(textEditor);
 			ITextReplacer textReplacer = null;
 			try {

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/GMFSelectionChangedListener.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/GMFSelectionChangedListener.java	Mon Jul  9 07:16:55 2012	(r25175)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/GMFSelectionChangedListener.java	Mon Jul  9 07:29:51 2012	(r25176)
@@ -15,83 +15,63 @@
 import org.eclipse.jface.viewers.SelectionChangedEvent;
 import org.eclipse.jface.viewers.StructuredSelection;
 import org.eclipse.ui.IEditorPart;
-import org.spoofax.graphical.GMFUtil;
+import org.spoofax.graphical.EditorPair;
+import org.spoofax.graphical.GMFBridgeUtil;
 import org.spoofax.graphical.emf.StrategoTermPathAdapter;
-import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.jsglr.client.imploder.ImploderAttachment;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
-import org.strategoxt.lang.Context;
 
 public class GMFSelectionChangedListener implements ISelectionChangedListener {
 
-	private String textFilePath;
-	private Context context;
-	private String diagramFilePath;
-	private IStrategoString packName;
-
-	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getLeftToken;
-	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getRightToken;
-	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getTokenizer;
-
-	public GMFSelectionChangedListener(String textFilePath, String diagramFilePath, Context context, IStrategoString packName) {
-		this.textFilePath = textFilePath;
-		this.diagramFilePath = diagramFilePath;
-		this.context = context;
-		this.packName = packName;
+	private EditorPair editorPair;
+
+	public GMFSelectionChangedListener(EditorPair editorPair) {
+		this.editorPair = editorPair;
 	}
 
 	@Override
 	public void selectionChanged(SelectionChangedEvent event) {
-		List<EObject> selectedEObjects = getSelectedEObjects(event.getSelection());
-		// List<EObject> filteredEObjects = filterAncestors(selectedEObjects);
 
-		IEditorPart textEditor = GMFUtil.findTextEditor(textFilePath);
-		EObject root = GMFUtil.getSemanticModel(GMFUtil.findDiagramEditor(diagramFilePath, packName.stringValue()));
-
-		if (textEditor == null) {
-			return;
-		}
-
-		if (GMFUtil.textSelection) {
-			GMFUtil.textSelection = false;
+		if (editorPair.textSelection) {
+			editorPair.textSelection = false;
 			return;
 		} else {
-			GMFUtil.diagramSelection = true;
+			editorPair.diagramSelection = true;
 		}
 
-		// if (selectedEObjects.size()==0) {
-		// return;
-		// }
+		List<EObject> selectedEObjects = getSelectedEObjects(event.getSelection());
 
+		IEditorPart textEditor = editorPair.getTextEditor();
+		EObject root = GMFBridgeUtil.getSemanticModel(editorPair.getDiagramEditor());
 		IStrategoTerm currentAST = EditorState.getEditorFor(textEditor).getCurrentAst();
 
-		int a = Integer.MAX_VALUE;
-		int b = Integer.MIN_VALUE;
+		int left = Integer.MAX_VALUE;
+		int right = Integer.MIN_VALUE;
 
 		for (int i = 0; i < selectedEObjects.size(); i++) {
 			if (EcoreUtil.isAncestor(root, selectedEObjects.get(i))) { // if not, then the selected object is a phantom node
 				List<Integer> path = StrategoTermPathAdapter.eObjectToStrategoTermPath(selectedEObjects.get(i));
-				IStrategoTerm selectedTerm = StrategoTermPath.getTermAtPath(context, currentAST, StrategoTermPath.toStrategoPath(path));
+				IStrategoTerm selectedTerm = StrategoTermPath.getTermAtPath(editorPair.getContext(), currentAST, StrategoTermPath.toStrategoPath(path));
 
 				if (selectedTerm != null) {
-					int newA = (ImploderAttachment.getLeftToken(selectedTerm).getStartOffset());
-					int newB = (ImploderAttachment.getRightToken(selectedTerm).getStartOffset());
+					int newLeft = (ImploderAttachment.getLeftToken(selectedTerm).getStartOffset());
+					int newRight = (ImploderAttachment.getRightToken(selectedTerm).getStartOffset());
 
-					if (newA < a) {
-						a = newA;
+					if (newLeft < left) {
+						left = newLeft;
 					}
-					if (newB > b) {
-						b = newB;
+					if (newRight > right) {
+						right = newRight;
 					}
 				}
 			}
 		}
 
 		ISelectionProvider selectionProvider = textEditor.getEditorSite().getSelectionProvider();
-		if (a != Integer.MAX_VALUE && b != Integer.MIN_VALUE) {
-			selectionProvider.setSelection(new TextSelection(a, b - a));
+		if (left != Integer.MAX_VALUE && right != Integer.MIN_VALUE) {
+			selectionProvider.setSelection(new TextSelection(left, right - left));
 		} else {
 			selectionProvider.setSelection(new TextSelection(0, 0));
 		}

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/SpoofaxSelectionChangedListener.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/SpoofaxSelectionChangedListener.java	Mon Jul  9 07:16:55 2012	(r25175)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/SpoofaxSelectionChangedListener.java	Mon Jul  9 07:29:51 2012	(r25176)
@@ -12,58 +12,46 @@
 import org.eclipse.jface.viewers.ISelectionChangedListener;
 import org.eclipse.jface.viewers.SelectionChangedEvent;
 import org.eclipse.jface.viewers.StructuredSelection;
-import org.spoofax.graphical.GMFUtil;
+import org.spoofax.graphical.EditorPair;
+import org.spoofax.graphical.GMFBridgeUtil;
 import org.spoofax.graphical.emf.StrategoTermPathAdapter;
 import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.spoofax.interpreter.terms.IStrategoList;
-import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
-import org.strategoxt.lang.Context;
 
 public class SpoofaxSelectionChangedListener implements ISelectionChangedListener {
 
-	private String textFilePath;
-	private Context context;
-	private String diagramFilePath;
-	private IStrategoString packName;
-
-	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getLeftToken;
-	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getRightToken;
-	// import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getTokenizer;
-
-	public SpoofaxSelectionChangedListener(String textFilePath, String diagramFilePath, Context context, IStrategoString packName) {
-		this.textFilePath = textFilePath;
-		this.diagramFilePath = diagramFilePath;
-		this.context = context;
-		this.packName = packName;
+	private EditorPair editorPair;
+
+	public SpoofaxSelectionChangedListener(EditorPair editorPair) {
+		this.editorPair = editorPair;
 	}
 
 	@Override
-	public void selectionChanged(SelectionChangedEvent event) {
-		DiagramEditor diagramEditor = GMFUtil.findDiagramEditor(diagramFilePath, packName.stringValue());
-		
-		if (GMFUtil.diagramSelection) {
-			GMFUtil.diagramSelection = false;
+	public void selectionChanged(SelectionChangedEvent event) {		
+		if (editorPair.diagramSelection) {
+			editorPair.diagramSelection = false;
 			return;
 		}
 		else {
-			GMFUtil.textSelection = true;
+			editorPair.textSelection = true;
 		}
 
+		
 		IStrategoTerm selection = EditorState.getActiveEditor().getSelectionAst(true);
+		DiagramEditor diagramEditor = editorPair.getDiagramEditor();
 		if (selection == null) {
 			diagramEditor.getSite().getSelectionProvider().setSelection(new StructuredSelection());
 			return;
 		}
 
 		List<IStrategoAppl> selectedIStrategoAppls = filterIStrategoAppls(selection);
-		
-		EObject root = GMFUtil.getSemanticModel(GMFUtil.findDiagramEditor(diagramFilePath, packName.stringValue()));
+
+		EObject root = GMFBridgeUtil.getSemanticModel(diagramEditor);
 		List<EObject> eObjectsToSelect = strategoApplToEObject(selectedIStrategoAppls, root);
 		eObjectsToSelect = addAllContents(eObjectsToSelect);
-
 		List<EditPart> editPartsToSelect = eObjectsToEditPart(eObjectsToSelect, diagramEditor.getDiagramEditPart());
 		
 		diagramEditor.getSite().getSelectionProvider().setSelection(new StructuredSelection(editPartsToSelect));

From m.dejonge at tudelft.nl  Mon Jul  9 11:57:34 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 09 Jul 2012 09:57:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25177 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff
Message-ID: <20120709095734.760C87F803A@mx1.tudelft.nl>

Author: MaartjeDeJonge
Date: Mon Jul  9 09:57:34 2012
New Revision: 25177
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25177&sc=1

Log:


Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTreeMatcher.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HelperFunctions.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTreeMatcher.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTreeMatcher.java	Mon Jul  9 07:29:51 2012	(r25176)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTreeMatcher.java	Mon Jul  9 09:57:34 2012	(r25177)
@@ -118,7 +118,6 @@
 		TermMatchAttachment.forceMatchTerms(t1, t2);
 		if(prev_t2 != null){
 			assert TermMatchAttachment.getMatchedTerm(prev_t2) == null;
-			assert matchingScore(t1, t2) > matchingScore(t1, prev_t2) : "matching structure must be improved after rematching"; //ensures termination
 			tryMatchTerminalNode(root1, prev_t2);
 		}
 	}
@@ -197,7 +196,7 @@
 				IStrategoTerm trm1Child = trm1.getSubterm(i);
 				IStrategoTerm trm2ChildPartner = TermMatchAttachment.getMatchedTerm(trm2Child);
 				if(trm1Child != trm2ChildPartner){ 
-					if(hasBetterOrEqualMatchingScore(trm2ChildPartner, trm1Child, trm2Child) || haveTupleOrListType(trm1Child, trm2Child)){
+					if(hasBetterOrEqualMatchingScore(trm2ChildPartner, trm1Child, trm2Child)){
 						//trm1Child has the same child index as trm2Child, and matched parents M(trm1,trm2)
 						//Therefore, trm1child is the preferred candidate for trm2Child, 
 						//unless trm2ChildPartner is better
@@ -206,17 +205,12 @@
 				}
 			}
 		}
-		for (int i = 0; i < trm2.getSubtermCount(); i++) {
+		for (int i = trm2.getSubtermCount()-1; i >=0; i--) {
 			matchTermsTopdown(root1, trm2.getSubterm(i));
 		}
 	}
 
-	private boolean haveTupleOrListType(IStrategoTerm trm1, IStrategoTerm trm2) {
-		return (Tools.isTermList(trm1) && Tools.isTermList(trm2)) || (Tools.isTermTuple(trm1) && Tools.isTermTuple(trm2));
-	}
-
-	private boolean hasBetterOrEqualMatchingScore(IStrategoTerm oldCandidate,
-			IStrategoTerm newCandidate, IStrategoTerm trm) {
+	private boolean hasBetterOrEqualMatchingScore(IStrategoTerm oldCandidate,IStrategoTerm newCandidate, IStrategoTerm trm) {
 		return !isBetterCandidate(newCandidate, oldCandidate, trm) && matchingScore(newCandidate, trm) > 0;
 	}
 

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HelperFunctions.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HelperFunctions.java	Mon Jul  9 07:29:51 2012	(r25176)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HelperFunctions.java	Mon Jul  9 09:57:34 2012	(r25177)
@@ -142,4 +142,9 @@
 		||  (Tools.isTermString(t1) && Tools.isTermString(t2))
 		||  (Tools.isTermTuple(t1) && Tools.isTermTuple(t2));
 	}
+	
+	public static boolean haveTupleOrListType(IStrategoTerm trm1, IStrategoTerm trm2) {
+		return (Tools.isTermList(trm1) && Tools.isTermList(trm2)) || (Tools.isTermTuple(trm1) && Tools.isTermTuple(trm2));
+	}
+
 }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java	Mon Jul  9 07:29:51 2012	(r25176)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/HeuristicTreeMatcher.java	Mon Jul  9 09:57:34 2012	(r25177)
@@ -97,7 +97,10 @@
 	 */
 	double matchingScore(IStrategoTerm t1, IStrategoTerm t2){
 		if(!meetsMatchingCriteria(t1, t2))
-			return -1;
+			return -1.0;
+		if(HelperFunctions.haveTupleOrListType(t1, t2) && hasMatchedParents(t1, t2) && hasMatchingChildIndex(t1, t2)){
+			return 1.0;
+		}
 		ArrayList<IStrategoTerm> leafnodes1 = HelperFunctions.collectLeafnodes(t1);
 		ArrayList<IStrategoTerm> leafnodes2 = HelperFunctions.collectLeafnodes(t2);
 		double maxValue = 
@@ -127,8 +130,7 @@
 		//whether or not the parent nodes are matched
 		if (hasMatchedParents(t1, t2)){
 			value += 2.0; //+2 for matched parents
-			boolean hasMatchingChildIndex = hasMatchingChildIndex(t1, t2);
-			if(hasMatchingChildIndex){
+			if(hasMatchingChildIndex(t1, t2)){
 				value +=2.0; //+2 for matched child index
 			}
 		}
@@ -145,8 +147,8 @@
 		int childIndex2 = getChildIndex(parent2, t2);
 		assert childIndex1 != -1 && childIndex2 != -1;
 		return 
-			Tools.isTermAppl(parent1) && 
-			HelperFunctions.haveSameSignature(parent1, parent2) && 
+			HelperFunctions.haveSameSignature(parent1, parent2) &&
+			Tools.isTermAppl(parent1) &&
 			childIndex1 == childIndex2;
 	}
 
@@ -162,7 +164,12 @@
 		}
 		if(!HelperFunctions.haveSameSignature(t1, t2) && Tools.isTermAppl(t1)){
 			assert Tools.isTermAppl(t2): "Same term type required";
-			return !requireSameSignature && hasMatchedParents(t1, t2); //only match terms with the same signature in case they are not moved 
+			return 
+				!requireSameSignature && 
+				hasMatchedParents(t1, t2) && 
+				hasMatchingChildIndex(t1, t2); 
+			//only match appl terms with different signatures in case they are not moved 
+			//(but they can be mis-aligned list or tuple elements) 
 		}
 		if(HelperFunctions.isPrimitiveWithDifferentValues(t1, t2)){
 			return !requireSameValue;

From m.dejonge at tudelft.nl  Mon Jul  9 12:18:14 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 09 Jul 2012 10:18:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25178 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/test/java/org/spoofax/interpreter/library/jsglr/treediff
Message-ID: <20120709101814.354FBCC056@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Mon Jul  9 10:18:13 2012
New Revision: 25178
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25178&sc=1

Log:


Added:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/test/java/org/spoofax/interpreter/library/jsglr/treediff/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/test/java/org/spoofax/interpreter/library/jsglr/treediff/TestEditDistance.java   (contents, props changed)

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/test/java/org/spoofax/interpreter/library/jsglr/treediff/TestEditDistance.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/test/java/org/spoofax/interpreter/library/jsglr/treediff/TestEditDistance.java	Mon Jul  9 10:18:13 2012	(r25178)
@@ -0,0 +1,296 @@
+package org.spoofax.interpreter.library.jsglr.treediff;
+
+import static org.junit.Assert.*;
+import java.io.FileNotFoundException;
+import java.io.IOException;
+
+import org.junit.Assert;
+import org.junit.Test;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.jsglr.client.InvalidParseTableException;
+import org.spoofax.jsglr.client.ParseException;
+import org.spoofax.jsglr.shared.BadTokenException;
+import org.spoofax.jsglr.shared.SGLRException;
+import org.spoofax.jsglr.shared.TokenExpectedException;
+
+public class TestEditDistance extends AbstractTestTreeDiff {
+
+	public TestEditDistance() throws IOException, InvalidParseTableException {
+		super();
+	}
+
+	@Test
+	public void testInsertion() throws TokenExpectedException, FileNotFoundException, BadTokenException, ParseException, IOException, SGLRException
+	{
+		String fname1 = "tests/test-inputs/test-insertion1-001.java";
+		String fname2 = "tests/test-inputs/test-insertion2-001.java";
+		IStrategoTerm trm1 = parseFile(fname1);
+		IStrategoTerm trm2 = parseFile(fname2);
+		
+		AbstractTreeMatcher treeMatcher = new HeuristicTreeMatcher(false, false, false);
+		TreeEditDistance editDistance = new TreeEditDistance();
+		editDistance.detectTreeEditActions(trm1, trm2, treeMatcher);
+		Assert.assertEquals(68, countMatches(trm2));	
+		assertEquals(0, editDistance.getDeletionCount());
+		assertEquals(15, editDistance.getInsertionCount());
+		assertEquals(0, editDistance.getMovedCount());
+		assertEquals(0, editDistance.getRelabeledCount());
+		assertEquals(0, editDistance.getValueChangeCount());
+
+		//With support for matching moved terms
+		AbstractTreeMatcher treeMatcher_move = new HeuristicTreeMatcher(false, false, true);
+		TreeEditDistance editDistance2 = new TreeEditDistance();
+		IStrategoTerm trm_1 = parseFile(fname1);
+		IStrategoTerm trm_2 = parseFile(fname2);
+		editDistance2.detectTreeEditActions(trm_1, trm_2, treeMatcher_move);
+		TreeEditDistance editDistance_move = editDistance2;
+		Assert.assertEquals(68, countMatches(trm_2));	
+		assertEquals(0, editDistance_move.getDeletionCount());
+		assertEquals(15, editDistance_move.getInsertionCount());
+		assertEquals(0, editDistance_move.getMovedCount());
+		assertEquals(0, editDistance_move.getRelabeledCount());
+		assertEquals(0, editDistance_move.getValueChangeCount());
+	}
+
+	@Test
+	public void testDeletion() throws TokenExpectedException, FileNotFoundException, BadTokenException, ParseException, IOException, SGLRException
+	{
+		String fname1 = "tests/test-inputs/test-insertion2-001.java";
+		String fname2 = "tests/test-inputs/test-insertion1-001.java";
+		IStrategoTerm trm1 = parseFile(fname1);
+		IStrategoTerm trm2 = parseFile(fname2);
+		
+		AbstractTreeMatcher treeMatcher = new HeuristicTreeMatcher(false, false, false);
+		TreeEditDistance editDistance = new TreeEditDistance();
+		editDistance.detectTreeEditActions(trm1, trm2, treeMatcher);
+		Assert.assertEquals(68, countMatches(trm2));	
+		assertEquals(15, editDistance.getDeletionCount());
+		assertEquals(0, editDistance.getInsertionCount());
+		assertEquals(0, editDistance.getMovedCount());
+		assertEquals(0, editDistance.getRelabeledCount());
+		assertEquals(0, editDistance.getValueChangeCount());
+
+		//With support for matching moved terms
+		AbstractTreeMatcher treeMatcher_move = new HeuristicTreeMatcher(false, false, true);
+		TreeEditDistance editDistance2 = new TreeEditDistance();
+		IStrategoTerm trm_1 = parseFile(fname1);
+		IStrategoTerm trm_2 = parseFile(fname2);
+		editDistance2.detectTreeEditActions(trm_1, trm_2, treeMatcher_move);
+		TreeEditDistance editDistance_move = editDistance2;
+		Assert.assertEquals(68, countMatches(trm_2));	
+		assertEquals(15, editDistance_move.getDeletionCount());
+		assertEquals(0, editDistance_move.getInsertionCount());
+		assertEquals(0, editDistance_move.getMovedCount());
+		assertEquals(0, editDistance_move.getRelabeledCount());
+		assertEquals(0, editDistance_move.getValueChangeCount());
+	}
+
+	@Test
+	public void testUpdateValue() throws TokenExpectedException, FileNotFoundException, BadTokenException, ParseException, IOException, SGLRException
+	{
+		String fname1 = "tests/test-inputs/test-updateValue1-001.java";
+		String fname2 = "tests/test-inputs/test-updateValue2-001.java";
+		IStrategoTerm trm1 = parseFile(fname1);
+		IStrategoTerm trm2 = parseFile(fname2);
+		
+		AbstractTreeMatcher treeMatcher = new HeuristicTreeMatcher(false, false, false);
+		TreeEditDistance editDistance = new TreeEditDistance();
+		editDistance.detectTreeEditActions(trm1, trm2, treeMatcher);
+		Assert.assertEquals(48, countMatches(trm2));	
+		assertEquals(0, editDistance.getDeletionCount());
+		assertEquals(0, editDistance.getInsertionCount());
+		assertEquals(0, editDistance.getMovedCount());
+		assertEquals(0, editDistance.getRelabeledCount());
+		assertEquals(2, editDistance.getValueChangeCount());
+
+		//With support for matching value updates
+		AbstractTreeMatcher treeMatcher_move = new HeuristicTreeMatcher(false, true, false);
+		TreeEditDistance editDistance2 = new TreeEditDistance();
+		IStrategoTerm trm_1 = parseFile(fname1);
+		IStrategoTerm trm_2 = parseFile(fname2);
+		editDistance2.detectTreeEditActions(trm_1, trm_2, treeMatcher_move);
+		//super.topdownPrintMatching(trm_2);
+		TreeEditDistance editDistance_move = editDistance2;
+		Assert.assertEquals(46, countMatches(trm_2));	
+		assertEquals(2, editDistance_move.getDeletionCount());
+		assertEquals(2, editDistance_move.getInsertionCount());
+		assertEquals(0, editDistance_move.getMovedCount());
+		assertEquals(0, editDistance_move.getRelabeledCount());
+		assertEquals(0, editDistance_move.getValueChangeCount());
+	}
+
+	@Test
+	public void testRelabel() throws TokenExpectedException, FileNotFoundException, BadTokenException, ParseException, IOException, SGLRException
+	{
+		String fname1 = "tests/test-inputs/test-relabel1-001.java";
+		String fname2 = "tests/test-inputs/test-relabel2-001.java";
+		IStrategoTerm trm1 = parseFile(fname1);
+		IStrategoTerm trm2 = parseFile(fname2);
+		
+		AbstractTreeMatcher treeMatcher = new HeuristicTreeMatcher(false, false, false);
+		TreeEditDistance editDistance = new TreeEditDistance();
+		editDistance.detectTreeEditActions(trm1, trm2, treeMatcher);
+		Assert.assertEquals(48, countMatches(trm2));	
+		assertEquals(0, editDistance.getDeletionCount());
+		assertEquals(0, editDistance.getInsertionCount());
+		assertEquals(0, editDistance.getMovedCount());
+		assertEquals(1, editDistance.getRelabeledCount());
+		assertEquals(0, editDistance.getValueChangeCount());
+
+		//With support for matching value updates
+		AbstractTreeMatcher treeMatcher_move = new HeuristicTreeMatcher(true, false, false);
+		TreeEditDistance editDistance2 = new TreeEditDistance();
+		IStrategoTerm trm_1 = parseFile(fname1);
+		IStrategoTerm trm_2 = parseFile(fname2);
+		editDistance2.detectTreeEditActions(trm_1, trm_2, treeMatcher_move);
+		//super.topdownPrintMatching(trm_2);
+		TreeEditDistance editDistance_move = editDistance2;
+		Assert.assertEquals(47, countMatches(trm_2));	
+		assertEquals(1, editDistance_move.getDeletionCount());
+		assertEquals(1, editDistance_move.getInsertionCount());
+		assertEquals(2, editDistance_move.getMovedCount());
+		assertEquals(0, editDistance_move.getRelabeledCount());
+		assertEquals(0, editDistance_move.getValueChangeCount());
+	}
+
+
+	@Test
+	public void testMove001() throws TokenExpectedException, FileNotFoundException, BadTokenException, ParseException, IOException, SGLRException
+	{
+		String fname1 = "tests/test-inputs/test-move1-001.java";
+		String fname2 = "tests/test-inputs/test-move2-001.java";
+		IStrategoTerm trm1 = parseFile(fname1);
+		IStrategoTerm trm2 = parseFile(fname2);
+		
+		AbstractTreeMatcher treeMatcher = new HeuristicTreeMatcher(false, false, true);
+		TreeEditDistance editDistance = new TreeEditDistance();
+		editDistance.detectTreeEditActions(trm1, trm2, treeMatcher);
+		Assert.assertEquals(83, countMatches(trm2));	
+		assertEquals(0, editDistance.getDeletionCount());
+		assertEquals(0, editDistance.getInsertionCount());
+		assertEquals(1, editDistance.getMovedCount());
+		assertEquals(0, editDistance.getRelabeledCount());
+		assertEquals(0, editDistance.getValueChangeCount());
+	}
+
+	
+	@Test
+	public void testMove002() throws TokenExpectedException, FileNotFoundException, BadTokenException, ParseException, IOException, SGLRException
+	{
+		String fname1 = "tests/test-inputs/test-move1-002.java";
+		String fname2 = "tests/test-inputs/test-move2-002.java";
+		IStrategoTerm trm1 = parseFile(fname1);
+		IStrategoTerm trm2 = parseFile(fname2);
+		
+		AbstractTreeMatcher treeMatcher = new HeuristicTreeMatcher(false, false, true);
+		TreeEditDistance editDistance = new TreeEditDistance();
+		editDistance.detectTreeEditActions(trm1, trm2, treeMatcher);
+		Assert.assertEquals(83, countMatches(trm2));	
+		assertEquals(0, editDistance.getDeletionCount());
+		assertEquals(0, editDistance.getInsertionCount());
+		assertEquals(1, editDistance.getMovedCount());
+		assertEquals(0, editDistance.getRelabeledCount());
+		assertEquals(0, editDistance.getValueChangeCount());
+
+		IStrategoTerm trm_1 = parseFile(fname1);
+		IStrategoTerm trm_2 = parseFile(fname2);
+		AbstractTreeMatcher treeMatcher2 = new HeuristicTreeMatcher(false, false, false);
+		TreeEditDistance editDistance2 = new TreeEditDistance();
+		editDistance2.detectTreeEditActions(trm_1, trm_2, treeMatcher2);
+		Assert.assertEquals(67, countMatches(trm_2));	
+		assertEquals(16, editDistance2.getDeletionCount());
+		assertEquals(16, editDistance2.getInsertionCount());
+		assertEquals(0, editDistance2.getMovedCount());
+		assertEquals(0, editDistance2.getRelabeledCount());
+		assertEquals(0, editDistance2.getValueChangeCount());
+
+	}
+
+	
+	@Test
+	public void testMove003() throws TokenExpectedException, FileNotFoundException, BadTokenException, ParseException, IOException, SGLRException
+	{
+		String fname1 = "tests/test-inputs/test-move1-003.java";
+		String fname2 = "tests/test-inputs/test-move2-003.java";
+		IStrategoTerm trm1 = parseFile(fname1);
+		IStrategoTerm trm2 = parseFile(fname2);
+		
+		AbstractTreeMatcher treeMatcher = new HeuristicTreeMatcher(false, false, false);
+		TreeEditDistance editDistance = new TreeEditDistance();
+		editDistance.detectTreeEditActions(trm1, trm2, treeMatcher);
+		Assert.assertEquals(76, countMatches(trm2));	
+		assertEquals(7, editDistance.getDeletionCount());
+		assertEquals(23, editDistance.getInsertionCount());
+		assertEquals(3, editDistance.getMovedCount());
+		assertEquals(0, editDistance.getRelabeledCount());
+		assertEquals(1, editDistance.getValueChangeCount());
+
+		//With support for matching moved terms
+		AbstractTreeMatcher treeMatcher_move = new HeuristicTreeMatcher(false, false, true);
+		TreeEditDistance editDistance2 = new TreeEditDistance();
+		IStrategoTerm trm_1 = parseFile(fname1);
+		IStrategoTerm trm_2 = parseFile(fname2);
+		editDistance2.detectTreeEditActions(trm_1, trm_2, treeMatcher_move);
+		TreeEditDistance editDistance_move = editDistance2;
+		Assert.assertEquals(76, countMatches(trm_2));	
+		assertEquals(7, editDistance_move.getDeletionCount());
+		assertEquals(23, editDistance_move.getInsertionCount());
+		assertEquals(3, editDistance_move.getMovedCount());
+		assertEquals(0, editDistance_move.getRelabeledCount());
+		assertEquals(1, editDistance_move.getValueChangeCount());
+	}
+
+
+	@Test
+	public void testMove004() throws TokenExpectedException, FileNotFoundException, BadTokenException, ParseException, IOException, SGLRException
+	{
+		String fname1 = "tests/test-inputs/test-move1-004.java";
+		String fname2 = "tests/test-inputs/test-move2-004.java";
+		IStrategoTerm trm1 = parseFile(fname1);
+		IStrategoTerm trm2 = parseFile(fname2);
+		
+		AbstractTreeMatcher treeMatcher = new HeuristicTreeMatcher(false, false, false);
+		TreeEditDistance editDistance = new TreeEditDistance();
+		editDistance.detectTreeEditActions(trm1, trm2, treeMatcher);
+		Assert.assertEquals(121, countMatches(trm2));	
+		assertEquals(0, editDistance.getDeletionCount());
+		assertEquals(0, editDistance.getInsertionCount());
+		assertEquals(4, editDistance.getMovedCount());
+		assertEquals(0, editDistance.getRelabeledCount());
+		assertEquals(0, editDistance.getValueChangeCount());
+	}
+
+	@Test
+	public void testMove005() throws TokenExpectedException, FileNotFoundException, BadTokenException, ParseException, IOException, SGLRException
+	{
+		//fail();//TODO: check results manually
+		String fname1 = "tests/test-inputs/test-move1-005.java";
+		String fname2 = "tests/test-inputs/test-move2-005.java";
+
+		IStrategoTerm trm1 = parseFile(fname1);
+		IStrategoTerm trm2 = parseFile(fname2);		
+		AbstractTreeMatcher treeMatcher = new HeuristicTreeMatcher(false, false, false);
+		TreeEditDistance editDistance = new TreeEditDistance();
+		editDistance.detectTreeEditActions(trm1, trm2, treeMatcher);
+		Assert.assertEquals(79, countMatches(trm2));	
+		assertEquals(12, editDistance.getDeletionCount());
+		assertEquals(39, editDistance.getInsertionCount());
+		assertEquals(1, editDistance.getMovedCount());
+		assertEquals(0, editDistance.getRelabeledCount());
+		assertEquals(0, editDistance.getValueChangeCount());
+
+		//With support for matching moved terms
+		AbstractTreeMatcher treeMatcher_move = new HeuristicTreeMatcher(false, false, true);
+		TreeEditDistance editDistance2 = new TreeEditDistance();
+		IStrategoTerm trm_1 = parseFile(fname1);
+		IStrategoTerm trm_2 = parseFile(fname2);
+		editDistance2.detectTreeEditActions(trm_1, trm_2, treeMatcher_move);
+		TreeEditDistance editDistance_move = editDistance2;
+		Assert.assertEquals(91, countMatches(trm_2));	
+		assertEquals(0, editDistance_move.getDeletionCount());
+		assertEquals(27, editDistance_move.getInsertionCount());
+		assertEquals(1, editDistance_move.getMovedCount());
+		assertEquals(0, editDistance_move.getRelabeledCount());
+		assertEquals(0, editDistance_move.getValueChangeCount());
+	}
+}

From m.dejonge at tudelft.nl  Mon Jul  9 12:18:30 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 09 Jul 2012 10:18:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25179 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/test/java/org/spoofax/interpreter/library/jsglr/treediff
Message-ID: <20120709101830.795FECC043@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Mon Jul  9 10:18:30 2012
New Revision: 25179
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25179&sc=1

Log:


Added:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/test/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTestTreeDiff.java   (contents, props changed)

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/test/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTestTreeDiff.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/test/java/org/spoofax/interpreter/library/jsglr/treediff/AbstractTestTreeDiff.java	Mon Jul  9 10:18:30 2012	(r25179)
@@ -0,0 +1,78 @@
+package org.spoofax.interpreter.library.jsglr.treediff;
+
+import java.io.BufferedReader;
+import java.io.FileNotFoundException;
+import java.io.FileReader;
+import java.io.IOException;
+
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.jsglr.client.InvalidParseTableException;
+import org.spoofax.jsglr.client.ParseException;
+import org.spoofax.jsglr.client.ParseTable;
+import org.spoofax.jsglr.client.SGLR;
+import org.spoofax.jsglr.client.imploder.TermTreeFactory;
+import org.spoofax.jsglr.client.imploder.TreeBuilder;
+import org.spoofax.jsglr.io.FileTools;
+import org.spoofax.jsglr.shared.BadTokenException;
+import org.spoofax.jsglr.shared.SGLRException;
+import org.spoofax.jsglr.shared.TokenExpectedException;
+import org.spoofax.terms.TermFactory;
+import org.spoofax.terms.attachments.ParentTermFactory;
+import org.spoofax.terms.io.binary.TermReader;
+
+public abstract class AbstractTestTreeDiff {
+
+	private SGLR sglr;
+
+	public AbstractTestTreeDiff() throws IOException, InvalidParseTableException {
+		super();
+		String pathToParseTable = "tests/parsetables/Java.tbl";
+		setSGLR(pathToParseTable);
+	}
+
+	protected IStrategoTerm parseFile(String fname) throws IOException,
+			FileNotFoundException, BadTokenException, TokenExpectedException,
+			ParseException, SGLRException {
+				String inputChars = FileTools.loadFileAsString(new BufferedReader(new FileReader(fname)));
+				IStrategoTerm trm1 = (IStrategoTerm) sglr.parse(inputChars, fname, null);
+				return trm1;
+			}
+
+	protected void setSGLR(String pathToParseTable) throws IOException,
+			InvalidParseTableException {
+				final TermFactory factory = new TermFactory();
+				final IStrategoTerm tableTerm = new TermReader(factory).parseFromFile(pathToParseTable);
+				final ParseTable pt = new ParseTable(tableTerm, factory);		
+				TermTreeFactory parentFactory = new TermTreeFactory(new ParentTermFactory(new TermFactory()));
+				sglr = new SGLR(new TreeBuilder(parentFactory), pt);
+				//sglr = new SGLR(new TreeBuilder(true), pt);
+				sglr.getDisambiguator().setDefaultFilters();
+				sglr.getDisambiguator().setHeuristicFilters(true);
+				sglr.setUseStructureRecovery(false);
+			}
+
+	protected int countMatches(IStrategoTerm trm) {
+		int nrOfMatches = 0;
+		if(TermMatchAttachment.getMatchedTerm(trm) != null)
+			nrOfMatches += 1;
+		for (int i = 0; i < trm.getSubtermCount(); i++) {
+			nrOfMatches += countMatches(trm.getSubterm(i));
+		}
+		return nrOfMatches;
+	}
+
+	protected void topdownPrintMatching(IStrategoTerm trm) {
+		printMatching(trm);
+		for (int i = 0; i < trm.getSubtermCount(); i++) {
+			topdownPrintMatching(trm.getSubterm(i));
+		}
+			
+	}
+
+	protected void printMatching(IStrategoTerm trm) {
+		System.out.println("M: ");
+		System.out.println("   - " + trm);
+		System.out.println("   - " + TermMatchAttachment.getMatchedTerm(trm));
+	}
+
+}
\ No newline at end of file

From m.dejonge at tudelft.nl  Mon Jul  9 12:19:22 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 09 Jul 2012 10:19:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25180 - in
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests:
	. parsetables test-inputs
Message-ID: <20120709101922.74B347F8042@mx1.tudelft.nl>

Author: MaartjeDeJonge
Date: Mon Jul  9 10:19:22 2012
New Revision: 25180
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25180&sc=1

Log:


Added:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/parsetables/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/parsetables/Java.tbl   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-insertion1-001.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-insertion2-001.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move1-001.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move1-002.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move1-003.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move1-004.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move1-005.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move2-001.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move2-002.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move2-003.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move2-004.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move2-005.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-relabel1-001.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-relabel2-001.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-updateValue1-001.java   (contents, props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-updateValue2-001.java   (contents, props changed)

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/parsetables/Java.tbl
==============================================================================
Binary file. No diff available.

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-insertion1-001.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-insertion1-001.java	Mon Jul  9 10:19:22 2012	(r25180)
@@ -0,0 +1,9 @@
+package tt;
+
+public class Example {
+	private void m(){
+		int v = 10;
+		v+= 10;
+		System.out.println(v);
+	}
+}
\ No newline at end of file

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-insertion2-001.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-insertion2-001.java	Mon Jul  9 10:19:22 2012	(r25180)
@@ -0,0 +1,12 @@
+package tt;
+
+public class Example {
+	private void m(){
+		int v = 10;
+		if(v > 5){
+			v++;
+		}
+		v+= 10;
+		System.out.println(v);
+	}
+}
\ No newline at end of file

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move1-001.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move1-001.java	Mon Jul  9 10:19:22 2012	(r25180)
@@ -0,0 +1,12 @@
+package tt;
+
+public class Example {
+	private void m(){
+		int v = 10;
+		if(v > 5){
+			v++;
+			v+= 10;
+		}
+		System.out.println(v);
+	}
+}
\ No newline at end of file

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move1-002.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move1-002.java	Mon Jul  9 10:19:22 2012	(r25180)
@@ -0,0 +1,12 @@
+package tt;
+
+public class Example {
+	private void m(){
+		int v = 10;
+		if(v > 5){
+			v++;
+		}
+		v+= 10;
+		System.out.println(v);
+	}
+}
\ No newline at end of file

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move1-003.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move1-003.java	Mon Jul  9 10:19:22 2012	(r25180)
@@ -0,0 +1,12 @@
+package tt;
+
+public class Example {
+	private void m(){
+		int v = 10;
+		if(v > 5){
+			v++;
+		}
+		v+= 10;
+		System.out.println(v);
+	}
+}
\ No newline at end of file

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move1-004.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move1-004.java	Mon Jul  9 10:19:22 2012	(r25180)
@@ -0,0 +1,17 @@
+package tt;
+
+public class Example {
+	private void m(){
+		int v = 10;
+		if(v > 5){
+			while(true){
+				System.out.println(v);
+				v++;
+				v+=5;
+				v+= 10;
+				v+=20;
+			}
+		}
+		System.out.println(v);
+	}
+}
\ No newline at end of file

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move1-005.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move1-005.java	Mon Jul  9 10:19:22 2012	(r25180)
@@ -0,0 +1,13 @@
+package tt;
+
+public class Example {
+	private void m(){
+		int v = 10;
+		if(v > 5){
+			v++;
+		}
+		v+= 10;
+		v += 11;
+		System.out.println(v);
+	}
+}
\ No newline at end of file

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move2-001.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move2-001.java	Mon Jul  9 10:19:22 2012	(r25180)
@@ -0,0 +1,12 @@
+package tt;
+
+public class Example {
+	private void m(){
+		int v = 10;
+		if(v > 5){
+			v++;
+		}
+		v+= 10;
+		System.out.println(v);
+	}
+}
\ No newline at end of file

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move2-002.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move2-002.java	Mon Jul  9 10:19:22 2012	(r25180)
@@ -0,0 +1,12 @@
+package tt;
+
+public class Example {
+	private void m(){
+		int v = 10;
+		System.out.println(v);
+		if(v > 5){
+			v++;
+		}
+		v+= 10;
+	}
+}
\ No newline at end of file

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move2-003.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move2-003.java	Mon Jul  9 10:19:22 2012	(r25180)
@@ -0,0 +1,16 @@
+package tt;
+
+public class Example {
+	
+	private void m(){
+		extracted(v);
+	}
+
+	private void extracted(int v){
+		if(v > 5){
+			v++;
+		}
+		v+= 10;
+		System.out.println(v);
+	}
+}
\ No newline at end of file

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move2-004.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move2-004.java	Mon Jul  9 10:19:22 2012	(r25180)
@@ -0,0 +1,17 @@
+package tt;
+
+public class Example {
+	private void m(){
+		int v = 10;
+		if(v > 5){
+			while(true){
+				System.out.println(v);
+			}
+			v++;
+			v+=5;
+		}
+		v+= 10;
+		v+=20;
+		System.out.println(v);
+	}
+}
\ No newline at end of file

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move2-005.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-move2-005.java	Mon Jul  9 10:19:22 2012	(r25180)
@@ -0,0 +1,16 @@
+package tt;
+
+public class Example {
+	private void m(){
+		int v = 10;
+		extracted(v);
+		v+= 10;
+		v += 11;
+		System.out.println(v);
+	}
+	private void extracted(int v){
+		if(v > 5){
+			v++;
+		}				
+	}
+}
\ No newline at end of file

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-relabel1-001.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-relabel1-001.java	Mon Jul  9 10:19:22 2012	(r25180)
@@ -0,0 +1,9 @@
+package tt;
+
+public class Example {
+	private void m(){
+		if(v > 5){
+			v++;
+		}
+	}
+}
\ No newline at end of file

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-relabel2-001.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-relabel2-001.java	Mon Jul  9 10:19:22 2012	(r25180)
@@ -0,0 +1,9 @@
+package tt;
+
+public class Example {
+	private void m(){
+		if(v < 5){
+			v++;
+		}
+	}
+}
\ No newline at end of file

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-updateValue1-001.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-updateValue1-001.java	Mon Jul  9 10:19:22 2012	(r25180)
@@ -0,0 +1,9 @@
+package tt;
+
+public class Example {
+	private void m(){
+		if(v > 5){
+			v++;
+		}
+	}
+}
\ No newline at end of file

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-updateValue2-001.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/tests/test-inputs/test-updateValue2-001.java	Mon Jul  9 10:19:22 2012	(r25180)
@@ -0,0 +1,9 @@
+package tt;
+
+public class Example {
+	private void q(){
+		if(v > 10){
+			v++;
+		}
+	}
+}
\ No newline at end of file

From gabrielkonat at gmail.com  Tue Jul 10 12:55:37 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Tue, 10 Jul 2012 10:55:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25181 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest
	spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy
	spoofax-imp/trunk/org.strategoxt.imp....
Message-ID: <20120710105537.537182B8024@mx2.tudelft.nl>

Author: gkonat
Date: Tue Jul 10 10:55:36 2012
New Revision: 25181
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25181&sc=1

Log:
Fixed with failure during compilation

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/   (props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/   (props changed)
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/   (props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/compilation-library.str

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/compilation-library.str
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/compilation-library.str	Mon Jul  9 10:19:22 2012	(r25180)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/compilation-library.str	Tue Jul 10 10:55:36 2012	(r25181)
@@ -241,5 +241,5 @@
   index-file-is-partial:
   	file -> file
   	where 
-      Snd; index-uri-namespace; index-is-partial-ast
+      Snd; index-uri; index-is-partial-ast
   	 

From gabrielkonat at gmail.com  Tue Jul 10 16:47:50 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Tue, 10 Jul 2012 14:47:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25182 - in
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses:
	syntax test trans
Message-ID: <20120710144750.897207F805C@mx1.tudelft.nl>

Author: gkonat
Date: Tue Jul 10 14:47:50 2012
New Revision: 25182
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25182&sc=1

Log:
Added this

Added:
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/desugar.str
Modified:
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.sdf
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example2.csh
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.nd
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.str

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.sdf
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.sdf	Tue Jul 10 10:55:36 2012	(r25181)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.sdf	Tue Jul 10 14:47:50 2012	(r25182)
@@ -63,7 +63,8 @@
     STRING      -> Exp {"StrLit"}
     ID          -> Exp {"VarRef"}
     FunCall     -> Exp
-    FieldAccess -> Exp
+    FieldAccess -> Exp
+    "this" -> Exp {"This", prefer}
     
     Exp "+" Exp  -> Exp {"Add", prefer}
     Exp "-" Exp  -> Exp {"Sub", prefer}

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example2.csh
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example2.csh	Tue Jul 10 10:55:36 2012	(r25181)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example2.csh	Tue Jul 10 14:47:50 2012	(r25182)
@@ -19,7 +19,7 @@
 		string body; 
 		
 		URL Homepage() {
-		  return poster.homepage;
+		  return this.poster.homepage;
 		}
 		
 		string HomepageString() {

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Tue Jul 10 10:55:36 2012	(r25181)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Tue Jul 10 14:47:50 2012	(r25182)
@@ -15,6 +15,7 @@
   splitter
   types
   names
+  desugar
 
 rules // Analysis
   
@@ -23,7 +24,7 @@
   analyze:
     (ast, path, project-path) -> (ast'', errors, warnings, notes, filesToAnalyze')
     with
-      ast'                    := <id> ast; // Optional AST desugaring
+      ast'                    := <desugar-all> ast; // Optional AST desugaring
       (ast'', filesToAnalyze) := <analyze-top(|<language>)> (ast', path, project-path);
       index-transaction(
         errors                := <collect-all(constraint-error, conc)> ast'';
@@ -100,7 +101,7 @@
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       filename := <guarantee-extension(|"aterm")> path;
-      result   := selected
+      result   := <desugar-all> selected
       
   // Prints the definition annotated abstract syntax ATerm of a selection.
   debug-generate-deffed:
@@ -108,7 +109,7 @@
     with
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       filename := <guarantee-extension(|"aterm")> path;
-      result   := <analyze-defs> selected
+      result   := <analyze-defs> <desugar-all> selected
       
   // Prints the analyzed annotated abstract syntax ATerm of a selection.
   debug-generate-analyzed:
@@ -116,7 +117,7 @@
     with
       editor-init;
       filename := <guarantee-extension(|"analyzed.aterm")> path;
-      result   := <analyze-top(|<language>)> (selected, path, project-path)   
+      result   := <analyze-top(|<language>)> (<desugar-all> selected, path, project-path)   
       
   // Prints the entries in the index of the current file.
   debug-index-show-current-file:

Added: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/desugar.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/desugar.str	Tue Jul 10 14:47:50 2012	(r25182)
@@ -0,0 +1,28 @@
+module desugar
+
+imports
+	
+  libstratego-lib
+  include/CSharpPartialClassses
+  lib/editor-common.generated
+  lib/index-library
+  lib/analysis-library
+  lib/compilation-library
+  types
+  names
+  splitter
+  
+strategies
+
+	desugar-all = topdown(try(desugar))
+	
+rules
+		
+	desugar:
+		class -> class'
+		where
+			name   := <?Class(<id>, _) <+ ?Class(<id>, _, _) <+ ?PartialClass(<id>, _) <+ ?PartialClass(<id>, _, _)> class;
+			class' := <topdown(try(desugar-this(|name)))> class
+			
+	desugar-this(|name):
+		This() -> Type(name)
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.nd
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.nd	Tue Jul 10 10:55:36 2012	(r25181)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.nd	Tue Jul 10 14:47:50 2012	(r25182)
@@ -3,6 +3,7 @@
 imports
 
   include/CSharpPartialClassses
+  desugar
   
 namespaces
 
@@ -66,7 +67,7 @@
     imports Field from Class y {transitive}
     imports Function from Class y {transitive}
 
-  Type(c):
+  Type(c) :
   	refers to Class c
   	
 rules // Fields

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.str	Tue Jul 10 10:55:36 2012	(r25181)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.str	Tue Jul 10 14:47:50 2012	(r25182)
@@ -8,6 +8,7 @@
 
 imports
   include/CSharpPartialClassses
+  desugar
 
 
 signature

From andre.s.d.vieira at gmail.com  Wed Jul 11 12:02:12 2012
From: andre.s.d.vieira at gmail.com (Andre Vieira)
Date: Wed, 11 Jul 2012 10:02:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25183 - in
	spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2:
	c_14828crashed p_3414 p_3414crashed
Message-ID: <20120711100212.E355F108C02D@mx3.tudelft.nl>

Author: AndreVieira
Date: Wed Jul 11 10:02:12 2012
New Revision: 25183
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25183&sc=1

Log:


Added:
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/c_14828crashed/
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/c_14828crashed/AST.aterm
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/c_14828crashed/program.app
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/c_14828crashed/strategyResult.txt
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/p_3414/
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/p_3414/amb0.app
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/p_3414/amb0.aterm
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/p_3414crashed/
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/p_3414crashed/AST.aterm
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/p_3414crashed/program.app
   spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/p_3414crashed/strategyResult.txt

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/c_14828crashed/AST.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/c_14828crashed/AST.aterm	Wed Jul 11 10:02:12 2012	(r25183)
@@ -0,0 +1,26 @@
+Application(
+  "M8_"
+, [ AccessControlDefinition(
+      Some("W_")
+    , [ Predicate(
+          "Z_w_"
+        , []
+        , SearcherRefMod(
+            LargerThan(
+              ThisCall("validatetemplate", [ObjectCreation(SimpleSort("validationContext"), [])])
+            , FieldAccess(TypedListCreation(FunctionSort([], SimpleSort("Void")), []), "P8")
+            )
+          , [QueryDef([])]
+          )
+        )
+      , AccessControlPrincipal(
+          "P8"
+        , ["P8", "M8_", "Z_w_", "P8", "JKP", "M8_", "W_", "W_", "P8"]
+        )
+      , AccessControlPointcut("JKP", [], [])
+      , Predicate("P8", [], FieldAccess(GlobalVar("M8_"), "M8_"))
+      , AccessControlPointcut("Z_w_", [], [])
+      ]
+    )
+  ]
+)
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/c_14828crashed/program.app
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/c_14828crashed/program.app	Wed Jul 11 10:02:12 2012	(r25183)
@@ -0,0 +1,52 @@
+application M8_
+
+access control rules
+  W_
+  predicate
+  Z_w_
+  (
+  )
+  {
+  ~ validatetemplate ( validationContext { } ) > List<function ( ) : Void>().P8 matching
+  }
+  principal
+  is
+  P8
+  with
+  credentials
+  P8
+  ,
+  M8_
+  ,
+  Z_w_
+  ,
+  P8
+  ,
+  JKP
+  ,
+  M8_
+  ,
+  W_
+  ,
+  W_
+  ,
+  P8
+  pointcut
+  JKP
+  (
+  )
+  {
+  }
+  predicate
+  P8
+  (
+  )
+  {
+  global.M8_.M8_
+  }
+  pointcut
+  Z_w_
+  (
+  )
+  {
+  }
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/c_14828crashed/strategyResult.txt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/c_14828crashed/strategyResult.txt	Wed Jul 11 10:02:12 2012	(r25183)
@@ -0,0 +1,74 @@
+
+Analyzing: TestFolder/program.app
+rename: 0.000 s
+
+* : error: Type not defined: validationContext
+validationContext
+* : error: No function 'validatetemplate' with signature validatetemplate(validationContext). Available global functions with that name: 
+validatetemplate(validationContext{})
+* : error: No property P8 defined for List<function():Void>
+List<function ( ) : Void>().P8
+WebDSL: rewriting failed, trace:
+	editor_analyze1_0_0
+	editor_analyze1_0_0
+	editor_analyze_0_0
+	editor_analyze_work_0_0
+	in_typechecking_phase_1_0
+	dr_scope_1_1
+	editor_check_0_1
+	dr_scope_1_1
+	dr_scope_1_1
+	dbg_time_1_1
+	catch_errors_editor_1_0
+	dr_scope_1_1
+	dr_scope_1_1
+	constraint_error_all_0_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	try_1_0
+	constraint_error_0_0
+	constraint_error_search_0_0
+	eq_type_of_0_0
+	type_of_query_0_0
+[ WebDSL | critical ] Internal error: with clause failed unexpectedly in rule 'constraint-error-search'
+           SearcherRefMod(LargerThan(ThisCall("validatetemplate"{"Z_w__validatetemplate0"},[ObjectCreation(SimpleSort("validationContext"),[]){ClosureInAnno([])}]),FieldAccess(TypedListCreation(FunctionSort([],SimpleSort("Void")),[]){ClosureInAnno([])},"P8")),[QueryDef([])])Analyzing: TestFolder/program.app
+rename: 0.000 s
+
+* : error: Type not defined: validationContext
+validationContext
+* : error: No function 'validatetemplate' with signature validatetemplate(validationContext). Available global functions with that name: 
+validatetemplate(validationContext{})
+* : error: No property P8 defined for List<function():Void>
+List<function ( ) : Void>().P8
+WebDSL: rewriting failed, trace:
+	editor_analyze1_0_0
+	editor_analyze1_0_0
+	editor_analyze_0_0
+	editor_analyze_work_0_0
+	in_typechecking_phase_1_0
+	dr_scope_1_1
+	editor_check_0_1
+	dr_scope_1_1
+	dr_scope_1_1
+	dbg_time_1_1
+	catch_errors_editor_1_0
+	dr_scope_1_1
+	dr_scope_1_1
+	constraint_error_all_0_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	try_1_0
+	constraint_error_0_0
+	constraint_error_search_0_0
+	eq_type_of_0_0
+	type_of_query_0_0
+[ WebDSL | critical ] Internal error: with clause failed unexpectedly in rule 'constraint-error-search'
+           SearcherRefMod(LargerThan(ThisCall("validatetemplate"{"Z_w__validatetemplate0"},[ObjectCreation(SimpleSort("validationContext"),[]){ClosureInAnno([])}]),FieldAccess(TypedListCreation(FunctionSort([],SimpleSort("Void")),[]){ClosureInAnno([])},"P8")),[QueryDef([])])
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/p_3414/amb0.app
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/p_3414/amb0.app	Wed Jul 11 10:02:12 2012	(r25183)
@@ -0,0 +1 @@
+X_2Ea49y ( 'yx   '|S  '), eU8YwFA4 ( 'yx   '|S  ' )
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/p_3414/amb0.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/p_3414/amb0.aterm	Wed Jul 11 10:02:12 2012	(r25183)
@@ -0,0 +1,5 @@
+amb(
+  [ [EnumValue("X_2Ea49y", "'yx   '|S  '), eU8YwFA4 ( 'yx   '|S  '")]
+  , [EnumValue("X_2Ea49y", "'yx   '|S  '"), EnumValue("eU8YwFA4", "'yx   '|S  '")]
+  ]
+)
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/p_3414crashed/AST.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/p_3414crashed/AST.aterm	Wed Jul 11 10:02:12 2012	(r25183)
@@ -0,0 +1,111 @@
+ApplicationDefs(
+  "mDS9"
+, [ ExtendProcedure(
+      "mDS9"
+    , Arg(
+        "eU8YwFA4"
+      , FunctionSort(
+          [ Arg("mDS9", GenericSort("eU8YwFA4", [SimpleSort("X_2Ea49y")]))
+          , Arg("mDS9", FunctionSort([], SimpleSort("Void")))
+          , Arg("xYX2O_V_yR", RefSort(RefSort(SimpleSort("X_2Ea49y"))))
+          , UnnamedArg(GenericSort("mDS9", [SimpleSort("X_2Ea49y")]))
+          , UnnamedArg(GenericSort("x", [SimpleSort("x")]))
+          , UnnamedArg(SimpleSort("x"))
+          , Arg("x", SimpleSort("eU8YwFA4"))
+          , Arg("x", FunctionSort([], SimpleSort("Void")))
+          ]
+        , SimpleSort("Void")
+        )
+      )
+    , [ ProcedureDo(Block([Block([])]))
+      , ProcedureDisabled(Block([Block([])]))
+      , ProcedureWho(
+          AndForExp(
+            ForExpNoFilter(
+              Assignment(
+                ListCreation([])
+              , AndForExp(
+                  ForExp(
+                    Call(
+                      RegexPattern(
+                        TupleBranch(
+                          SingleBranch(Pieces([SingleAtom(AtomLiteral("/"))]))
+                        , SingleBranch(Pieces([QuantifiedAtom(SingleCharacter(), GreedyZeroOrMore())]))
+                        )
+                      )
+                    , "eU8YwFA4"
+                    , []
+                    )
+                  , "x"
+                  , GenericSort("eU8YwFA4", [SimpleSort("eU8YwFA4")])
+                  , Mod(ListCreation([]), SetCreation([]))
+                  , Filter(
+                      Null()
+                    , OrderAscending(Mul(SetCreation([]), ThisCall("X_2Ea49y", [])))
+                    , LimitNoOffset(SetCreation([]))
+                    )
+                  )
+                )
+              )
+            , "X_2Ea49y"
+            , GenericSort("eU8YwFA4", [SimpleSort("xYX2O_V_yR")])
+            , ObjectCreation(SimpleSort("eU8YwFA4"), [])
+            )
+          )
+        )
+      , ProcedureWho(
+          Mod(
+            AndForExp(
+              ForExpNoFilter(
+                TypedListCreation(GenericSort("eU8YwFA4", [SimpleSort("x")]), [])
+              , "X_2Ea49y"
+              , SimpleSort("x")
+              , LargerThanOrEqual(
+                  RenderTemplateFunctionCall(
+                    TryTemplate(
+                      Block([])
+                    , [Catch(
+                         "X_2Ea49y"
+                       , RefSort(FunctionSort([], SimpleSort("xYX2O_V_yR")))
+                       , Block([])
+                       )]
+                    )
+                  )
+                , IsA(
+                    IsA(FunctionRef("x", [], SimpleSort("xYX2O_V_yR")), SimpleSort("X_2Ea49y"))
+                  , FunctionSort([], SimpleSort("eU8YwFA4"))
+                  )
+                )
+              )
+            )
+          , CollectionIndex(
+              EmailFunctionCall(EmailCall("x", []))
+            , ObjectCreation(RefSort(GenericSort("X_2Ea49y", [SimpleSort("mDS9")])), [])
+            )
+          )
+        )
+      , ProcedureWhen(
+          Sub(
+            Call(FieldAccess(Var("externalscope"), "x"), "X_2Ea49y", [])
+          , Var("X_2Ea49y")
+          )
+        )
+      ]
+    )
+  , DeriveCrud("mDS9")
+  , AutoProcedure("mDS9", Arg("X_2Ea49y", SimpleSort("xYX2O_V_yR")), [])
+  , Procedure("X_2Ea49y", Arg("eU8YwFA4", SimpleSort("mDS9")), [])
+  , Enum("mDS9", [[EnumValue("X_2Ea49y", "'yx   '|S  '), eU8YwFA4 ( 'yx   '|S  '")]])
+  , TypeDef(
+      "mDS9"
+    , [ NativeClassFunction(NativeClassFunctionStatic(), "eU8YwFA4", [], None())
+      , NativeClassFunctionFromStatic(
+          "xYX2O_V_yR"
+        , NativeClassFunction(None(), "eU8YwFA4", [], NativeClassFunctionReturn(NativeSimpleType("xYX2O_V_yR")))
+        )
+      , TypeDefAnno(ValidationAnnoPatternWithFlags("'#p Y&&. ' '", []))
+      ]
+    )
+  ]
+, []
+)
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/p_3414crashed/program.app
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/p_3414crashed/program.app	Wed Jul 11 10:02:12 2012	(r25183)
@@ -0,0 +1,92 @@
+application mDS9
+
+extend procedure mDS9 ( eU8YwFA4 : function ( mDS9 : eU8YwFA4<X_2Ea49y>, mDS9 : function ( ) : Void, xYX2O_V_yR : Ref<Ref<X_2Ea49y>>, mDS9<X_2Ea49y>, x<x>, x, x : eU8YwFA4, x : function ( ) : Void ) : Void ) {
+  do {
+    {
+    }
+  }
+  disabled {
+    {
+    }
+  }
+  who {
+    And
+    [ [
+      ] := And [  /  /|.*  / .eU8YwFA4() | x : eU8YwFA4<eU8YwFA4> in [] % {} where null order by {} * X_2Ea49y() asc limit {} ] | X_2Ea49y : eU8YwFA4<xYX2O_V_yR> in eU8YwFA4{} ]
+  }
+  who {
+    And
+    [ List<eU8YwFA4<x>>() | X_2Ea49y : x in rendertemplate ( try {
+                                                                 } catch ( X_2Ea49y : Ref<function():xYX2O_V_yR> ) {
+                                                                                                                   } ) >= function. x ( ) : xYX2O_V_yR is a X_2Ea49y is a function ( ) : eU8YwFA4 ]
+    %
+    email
+    (
+    x
+    (
+    )
+    )
+    [
+    Ref<X_2Ea49y<mDS9>>{}
+    ]
+  }
+  when {
+    externalscope.x.X_2Ea49y()
+    -
+    X_2Ea49y
+  }
+}
+
+derive
+
+CRUD
+
+mDS9
+
+auto procedure mDS9 ( X_2Ea49y : xYX2O_V_yR ) {
+}
+
+procedure X_2Ea49y ( eU8YwFA4 : mDS9 ) {
+}
+
+enum mDS9 { X_2Ea49y('yx   '|S  '), eU8YwFA4 ( 'yx   '|S  ' ) }
+
+type
+
+mDS9
+
+{
+
+static
+
+eU8YwFA4
+
+(
+
+)
+
+xYX2O_V_yR
+
+as
+
+eU8YwFA4
+
+(
+
+)
+
+:
+
+xYX2O_V_yR
+
+pattern
+
+(
+
+'#p Y&&. ' '
+
+,
+
+)
+
+}
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/p_3414crashed/strategyResult.txt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/Webdsl2/p_3414crashed/strategyResult.txt	Wed Jul 11 10:02:12 2012	(r25183)
@@ -0,0 +1,42 @@
+
+Analyzing: TestFolder/program.app
+WebDSL: rewriting failed, trace:
+	editor_analyze1_0_0
+	editor_analyze1_0_0
+	editor_analyze_0_0
+	editor_analyze_work_0_0
+	in_typechecking_phase_1_0
+	dr_scope_1_1
+	dr_scope_1_1
+	declare_globals_0_0
+	typecheck_declare_0_0
+	log_time_1_1
+	declare_all_0_0
+	dr_scope_1_1
+	alltd_1_0
+	declare_0_0
+	declare_enum_0_0
+	map_1_0
+	enum_generate_vardecl_0_1
+[ WebDSL | critical ] Internal error: with clause failed unexpectedly in rule 'declare-enum'
+           Enum("mDS9",[[EnumValue("X_2Ea49y","'yx   '|S  '), eU8YwFA4 ( 'yx   '|S  '")]])Analyzing: TestFolder/program.app
+WebDSL: rewriting failed, trace:
+	editor_analyze1_0_0
+	editor_analyze1_0_0
+	editor_analyze_0_0
+	editor_analyze_work_0_0
+	in_typechecking_phase_1_0
+	dr_scope_1_1
+	dr_scope_1_1
+	declare_globals_0_0
+	typecheck_declare_0_0
+	log_time_1_1
+	declare_all_0_0
+	dr_scope_1_1
+	alltd_1_0
+	declare_0_0
+	declare_enum_0_0
+	map_1_0
+	enum_generate_vardecl_0_1
+[ WebDSL | critical ] Internal error: with clause failed unexpectedly in rule 'declare-enum'
+           Enum("mDS9",[[EnumValue("X_2Ea49y","'yx   '|S  '), eU8YwFA4 ( 'yx   '|S  '")]])
\ No newline at end of file

From andre.s.d.vieira at gmail.com  Wed Jul 11 12:10:07 2012
From: andre.s.d.vieira at gmail.com (Andre Vieira)
Date: Wed, 11 Jul 2012 10:10:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25184 - in
	spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3:
	. l_14863 l_14863crashed
Message-ID: <20120711101007.3EF6D2B802A@mx2.tudelft.nl>

Author: AndreVieira
Date: Wed Jul 11 10:10:05 2012
New Revision: 25184
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25184&sc=1

Log:


Added:
   spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/
   spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863/
   spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863/amb0.app
   spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863/amb0.aterm
   spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863/amb1.app
   spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863/amb1.aterm
   spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863crashed/
   spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863crashed/AST.aterm
   spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863crashed/program.app
   spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863crashed/strategyResult.txt

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863/amb0.app
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863/amb0.app	Wed Jul 11 10:10:05 2012	(r25184)
@@ -0,0 +1 @@
+ookL3GK_7g0 < {} / 7.E1f < Set<ookL3GK_7g0<CRso_FJ49hY>>()
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863/amb0.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863/amb0.aterm	Wed Jul 11 10:10:05 2012	(r25184)
@@ -0,0 +1,17 @@
+amb(
+  [ SmallerThan(
+      SmallerThan(
+        Var("ookL3GK_7g0")
+      , Div(SetCreation([]), FieldAccess(Int("7"), "E1f"))
+      )
+    , TypedSetCreation(GenericSort("ookL3GK_7g0", [SimpleSort("CRso_FJ49hY")]), [])
+    )
+  , SmallerThan(
+      Var("ookL3GK_7g0")
+    , SmallerThan(
+        Div(SetCreation([]), FieldAccess(Int("7"), "E1f"))
+      , TypedSetCreation(GenericSort("ookL3GK_7g0", [SimpleSort("CRso_FJ49hY")]), [])
+      )
+    )
+  ]
+)
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863/amb1.app
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863/amb1.app	Wed Jul 11 10:10:05 2012	(r25184)
@@ -0,0 +1 @@
+rendertemplate ( L78 ) <= function. q25__Y ( ) : Q_b <= rendertemplate ( h_V_K7DI075[]with { } )
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863/amb1.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863/amb1.aterm	Wed Jul 11 10:10:05 2012	(r25184)
@@ -0,0 +1,17 @@
+amb(
+  [ SmallerThanOrEqual(
+      SmallerThanOrEqual(
+        RenderTemplateFunctionCall(TemplateCallNoArgs("L78"))
+      , FunctionRef("q25__Y", [], SimpleSort("Q_b"))
+      )
+    , RenderTemplateFunctionCall(TemplateCallPropsNoArgs("h_V_K7DI075", [], TemplateWith([])))
+    )
+  , SmallerThanOrEqual(
+      RenderTemplateFunctionCall(TemplateCallNoArgs("L78"))
+    , SmallerThanOrEqual(
+        FunctionRef("q25__Y", [], SimpleSort("Q_b"))
+      , RenderTemplateFunctionCall(TemplateCallPropsNoArgs("h_V_K7DI075", [], TemplateWith([])))
+      )
+    )
+  ]
+)
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863crashed/AST.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863crashed/AST.aterm	Wed Jul 11 10:10:05 2012	(r25184)
@@ -0,0 +1,185 @@
+Application(
+  "vVQ"
+, [ AccessControlDefinition(Some("q25__Y"), [])
+  , ACPolicy(
+      PolicyOr(
+        PolicyOr(
+          PolicyOr(Name("q25__Y"), PolicyAnd(Name("ookL3GK_7g0"), Name("CRso_FJ49hY")))
+        , PolicyAnd(Name("CRso_FJ49hY"), Name("ookL3GK_7g0"))
+        )
+      , PolicyAnd(Name("Q_b"), Name("CRso_FJ49hY"))
+      )
+    )
+  , AccessControlDefinition(
+      None()
+    , [ AccessControlPointcut("Q_b", [], [])
+      , AccessControlRule(
+          "Q_b"
+        , "akqIUM2*"
+        , MatchArgs([], None())
+        , SearcherRefMod(
+            LargerThanOrEqual(
+              FieldAccess(Var("externalscope"), "ookL3GK_7g0")
+            , Mod(
+                OrForExp(
+                  ForExpNoFilter(
+                    ListCreation([])
+                  , "q25__Y"
+                  , FunctionSort([], SimpleSort("Void"))
+                  , Div(
+                      False()
+                    , FunctionRefCallPartial(FunctionRef("CRso_FJ49hY", [], SimpleSort("CRso_FJ49hY")), [])
+                    )
+                  )
+                )
+              , TypedListCreation(SimpleSort("CRso_FJ49hY"), [])
+              )
+            )
+          , [QueryDef([])]
+          )
+        , []
+        )
+      , Predicate(
+          "CRso_FJ49hY"
+        , []
+        , SmallerThanOrEqual(
+            Call(
+              RegexPattern(SingleBranch(Pieces([SingleAtom(QuotedAtom("!!Z"))])))
+            , "q25__Y"
+            , []
+            )
+          , GlobalVar("q25__Y")
+          )
+        )
+      , AccessControlPrincipal("vVQ", ["q25__Y"])
+      , AccessControlPointcut("Q_b", [], [])
+      , AccessControlPointcut("CRso_FJ49hY", [], [])
+      ]
+    )
+  , AccessControlDefinition(
+      None()
+    , [ AccessControlRule("q25__Y", "*", MatchArgs([], None()), False(), [])
+      , SpecialAccessControlRule(
+          "ookL3GK_7g0"
+        , FunctionRefCall(FunctionRef("ookL3GK_7g0", [], SimpleSort("ookL3GK_7g0")), [])
+        )
+      , AccessControlPrincipal("vVQ", ["CRso_FJ49hY"])
+      , AccessControlRule(
+          "q25__Y"
+        , "*"
+        , MatchArgs([], None())
+        , Long("-74L")
+        , []
+        )
+      , SpecialAccessControlRule("ookL3GK_7g0", LargerThanOrEqual(GlobalVar("CRso_FJ49hY"), ListCreation([])))
+      , AccessControlPointcut("ookL3GK_7g0", [], [])
+      ]
+    )
+  , AccessControlDefinition(
+      Some("vVQ")
+    , [ AccessControlRule(
+          "Q_b"
+        , "*"
+        , MatchArgs([], None())
+        , SmallerThan(
+            SmallerThan(
+              Var("ookL3GK_7g0")
+            , Div(SetCreation([]), FieldAccess(Int("7"), "E1f"))
+            )
+          , TypedSetCreation(GenericSort("ookL3GK_7g0", [SimpleSort("CRso_FJ49hY")]), [])
+          )
+        , []
+        )
+      , AccessControlRule(
+          "q25__Y"
+        , "*"
+        , MatchArgs([], Some("*"))
+        , FieldAccess(
+            FunctionRefCallPartial(FunctionRef("ookL3GK_7g0", [], SimpleSort("Void")), [])
+          , "ookL3GK_7g0"
+          )
+        , []
+        )
+      , AccessControlPointcut("q25__Y", [], [])
+      , Predicate(
+          "q25__Y"
+        , []
+        , SmallerThanOrEqual(
+            RenderTemplateFunctionCall(TemplateCallNoArgs("L78"))
+          , SmallerThanOrEqual(
+              FunctionRef("q25__Y", [], SimpleSort("Q_b"))
+            , RenderTemplateFunctionCall(TemplateCallPropsNoArgs("h_V_K7DI075", [], TemplateWith([])))
+            )
+          )
+        )
+      ]
+    )
+  , AccessControlDefinition(
+      None()
+    , [ AccessControlPointcut("CRso_FJ49hY", [], [])
+      , SpecialAccessControlRule("vVQ", ThisCall("q25__Y", []))
+      , SpecialAccessControlRule("ookL3GK_7g0", SendEmailFunctionCall(EmailCall("ookL3GK_7g0", [])))
+      , AccessControlPrincipal("ookL3GK_7g0", ["ookL3GK_7g0"])
+      , AccessControlPointcut("ookL3GK_7g0", [], [])
+      , AccessControlPrincipal("vVQ", ["q25__Y"])
+      , AccessControlPrincipal("vVQ", ["q25__Y"])
+      , Predicate(
+          "vVQ"
+        , []
+        , SearcherRefMod(
+            Call(
+              ObjectCreation(FunctionSort([], SimpleSort("q25__Y")), [])
+            , "CRso_FJ49hY"
+            , []
+            )
+          , [SearchAttributes([])]
+          )
+        )
+      , AccessControlPrincipal("vVQ", ["Q_b"])
+      ]
+    )
+  , ACPolicy(
+      PolicyOr(
+        PolicyOr(
+          PolicyOr(
+            PolicyOr(
+              PolicyAnd(PolicyAnd(Name("ookL3GK_7g0"), Name("ookL3GK_7g0")), Name("ookL3GK_7g0"))
+            , Name("CRso_FJ49hY")
+            )
+          , Name("CRso_FJ49hY")
+          )
+        , PolicyAnd(Name("vVQ"), Name("ookL3GK_7g0"))
+        )
+      , Name("Q_b")
+      )
+    )
+  , AccessControlDefinition(
+      Some("vVQ")
+    , [ AccessControlPrincipal("Q_b", ["ookL3GK_7g0"])
+      , AccessControlPrincipal("Q_b", ["q25__Y"])
+      , AccessControlRule(
+          "CRso_FJ49hY"
+        , "akqIUM2*"
+        , MatchArgs([], None())
+        , Assignment(
+            SmallerThanOrEqual(EmailFunctionCall(EmailCall("vVQ", [])), ListCreation([]))
+          , IsA(
+              ObjectCreation(RefSort(FunctionSort([], SimpleSort("CRso_FJ49hY"))), [])
+            , GenericSort("ookL3GK_7g0", [SimpleSort("q25__Y")])
+            )
+          )
+        , []
+        )
+      , Predicate(
+          "CRso_FJ49hY"
+        , []
+        , SearchResultsSize(ObjectCreation(FunctionSort([], SimpleSort("Void")), []))
+        )
+      , AccessControlPointcut("ookL3GK_7g0", [], [])
+      , AccessControlRule("CRso_FJ49hY", "akqIUM2*", MatchArgs([], None()), False(), [])
+      , AccessControlPointcut("q25__Y", [], [])
+      , AccessControlPointcut("q25__Y", [], [])
+      ]
+    )
+  ]
+)
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863crashed/program.app
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863crashed/program.app	Wed Jul 11 10:10:05 2012	(r25184)
@@ -0,0 +1,274 @@
+application vVQ
+
+access control rules
+  q25__Y
+
+access
+
+control
+
+policy
+
+q25__Y
+
+OR
+
+ookL3GK_7g0
+
+AND
+
+CRso_FJ49hY
+
+OR
+
+CRso_FJ49hY
+
+AND
+
+ookL3GK_7g0
+
+OR
+
+Q_b
+
+AND
+
+CRso_FJ49hY
+
+access control rules
+  pointcut
+  Q_b
+  (
+  )
+  {
+  }
+  rule Q_b akqIUM2* (  ) {
+    ~ externalscope . ookL3GK_7g0 >= Or [ [
+                                          ] | q25__Y : function ( ) : Void in false / function.CRso_FJ49hY():CRso_FJ49hY(*,) ] % List<CRso_FJ49hY>() matching
+  }
+  predicate
+  CRso_FJ49hY
+  (
+  )
+  {
+   /  \Q!!Z\E  / .q25__Y()
+  <=
+  global.q25__Y
+  }
+  principal
+  is
+  vVQ
+  with
+  credentials
+  q25__Y
+  pointcut
+  Q_b
+  (
+  )
+  {
+  }
+  pointcut
+  CRso_FJ49hY
+  (
+  )
+  {
+  }
+
+access control rules
+  rule q25__Y * (  ) {
+    false
+  }
+  rule ookL3GK_7g0 {
+    function.ookL3GK_7g0():ookL3GK_7g0()
+  }
+  principal
+  is
+  vVQ
+  with
+  credentials
+  CRso_FJ49hY
+  rule q25__Y * (  ) {
+    -74L
+  }
+  rule ookL3GK_7g0 {
+    global.CRso_FJ49hY >= [
+                          ]
+  }
+  pointcut
+  ookL3GK_7g0
+  (
+  )
+  {
+  }
+
+access control rules
+  vVQ
+  rule Q_b * (  ) {
+    ookL3GK_7g0 < {} / 7.E1f < Set<ookL3GK_7g0<CRso_FJ49hY>>()
+  }
+  rule q25__Y * ( * ) {
+    function.ookL3GK_7g0():Void(*,).ookL3GK_7g0
+  }
+  pointcut
+  q25__Y
+  (
+  )
+  {
+  }
+  predicate
+  q25__Y
+  (
+  )
+  {
+  rendertemplate
+  (
+  L78
+  )
+  <=
+  function.
+  q25__Y
+  (
+  )
+  :
+  Q_b
+  <=
+  rendertemplate
+  (
+  h_V_K7DI075[]with { }
+  )
+  }
+
+access control rules
+  pointcut
+  CRso_FJ49hY
+  (
+  )
+  {
+  }
+  rule vVQ {
+    q25__Y()
+  }
+  rule ookL3GK_7g0 {
+    sendemail ( ookL3GK_7g0 ( ) )
+  }
+  principal
+  is
+  ookL3GK_7g0
+  with
+  credentials
+  ookL3GK_7g0
+  pointcut
+  ookL3GK_7g0
+  (
+  )
+  {
+  }
+  principal
+  is
+  vVQ
+  with
+  credentials
+  q25__Y
+  principal
+  is
+  vVQ
+  with
+  credentials
+  q25__Y
+  predicate
+  vVQ
+  (
+  )
+  {
+  ~ function():q25__Y{
+                     }.CRso_FJ49hY() [ ]
+  }
+  principal
+  is
+  vVQ
+  with
+  credentials
+  Q_b
+
+access
+
+control
+
+policy
+
+ookL3GK_7g0
+
+AND
+
+ookL3GK_7g0
+
+AND
+
+ookL3GK_7g0
+
+OR
+
+CRso_FJ49hY
+
+OR
+
+CRso_FJ49hY
+
+OR
+
+vVQ
+
+AND
+
+ookL3GK_7g0
+
+OR
+
+Q_b
+
+access control rules
+  vVQ
+  principal
+  is
+  Q_b
+  with
+  credentials
+  ookL3GK_7g0
+  principal
+  is
+  Q_b
+  with
+  credentials
+  q25__Y
+  rule CRso_FJ49hY akqIUM2* (  ) {
+    email ( vVQ ( ) ) <= [] := Ref<function():CRso_FJ49hY>{} is a ookL3GK_7g0<q25__Y>
+  }
+  predicate
+  CRso_FJ49hY
+  (
+  )
+  {
+  count from function ( ) : Void {
+                                 }
+  }
+  pointcut
+  ookL3GK_7g0
+  (
+  )
+  {
+  }
+  rule CRso_FJ49hY akqIUM2* (  ) {
+    false
+  }
+  pointcut
+  q25__Y
+  (
+  )
+  {
+  }
+  pointcut
+  q25__Y
+  (
+  )
+  {
+  }
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863crashed/strategyResult.txt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/Errors/WebDSL3/l_14863crashed/strategyResult.txt	Wed Jul 11 10:10:05 2012	(r25184)
@@ -0,0 +1,94 @@
+
+Analyzing: TestFolder/program.app
+rename: 0.030 s
+
+* : error: Variable 'externalscope' not defined
+externalscope
+* : error: Type cannot be determined for empty untyped list creation.
+[]
+* : error: Type not defined: CRso_FJ49hY
+CRso_FJ49hY
+* : error: Wrong operand types for operator Div: false has type Bool,function.CRso_FJ49hY():CRso_FJ49hY(*,) has type function():CRso_FJ49hY
+false / function.CRso_FJ49hY():CRso_FJ49hY(*,)
+* : error: collection in for-expression does not contain declared type function():
+
+[ [] | q25__Y : function ( ) : Void in false / function.CRso_FJ49hY():CRso_FJ49hY(*,) ]
+* : error: Or-for-expression should contain a collection of Bool type
+Or
+[ [] | q25__Y : function ( ) : Void in false / function.CRso_FJ49hY():CRso_FJ49hY(*,) ]
+* : error: Type not defined: CRso_FJ49hY
+CRso_FJ49hY
+WebDSL: rewriting failed, trace:
+	editor_analyze1_0_0
+	editor_analyze1_0_0
+	editor_analyze_0_0
+	editor_analyze_work_0_0
+	in_typechecking_phase_1_0
+	dr_scope_1_1
+	editor_check_0_1
+	dr_scope_1_1
+	dr_scope_1_1
+	dbg_time_1_1
+	catch_errors_editor_1_0
+	dr_scope_1_1
+	dr_scope_1_1
+	constraint_error_all_0_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	try_1_0
+	constraint_error_0_0
+	constraint_error_search_0_0
+	eq_type_of_0_0
+	type_of_query_0_0
+[ WebDSL | critical ] Internal error: with clause failed unexpectedly in rule 'constraint-error-search'
+           SearcherRefMod(LargerThanOrEqual(FieldAccess(Var("externalscope"),"ookL3GK_7g0"),Mod(OrForExp(ForExp(ListCreation([]){ClosureInAnno([])},"q25__Y"{"topdef46_q25__Y0"},FunctionSort([],SimpleSort("Void")),Div(False,FunctionRefCallPartial(FunctionRef("CRso_FJ49hY"{"topdef46_CRso_FJ49hY0"},[],SimpleSort("CRso_FJ49hY")),[])),None){ClosureInAnno([])}){ClosureInAnno([])},TypedListCreation(SimpleSort("CRso_FJ49hY"),[]){ClosureInAnno([])})),[QueryDef([])])Analyzing: TestFolder/program.app
+rename: 0.030 s
+
+* : error: Variable 'externalscope' not defined
+externalscope
+* : error: Type cannot be determined for empty untyped list creation.
+[]
+* : error: Type not defined: CRso_FJ49hY
+CRso_FJ49hY
+* : error: Wrong operand types for operator Div: false has type Bool,function.CRso_FJ49hY():CRso_FJ49hY(*,) has type function():CRso_FJ49hY
+false / function.CRso_FJ49hY():CRso_FJ49hY(*,)
+* : error: collection in for-expression does not contain declared type function():
+
+[ [] | q25__Y : function ( ) : Void in false / function.CRso_FJ49hY():CRso_FJ49hY(*,) ]
+* : error: Or-for-expression should contain a collection of Bool type
+Or
+[ [] | q25__Y : function ( ) : Void in false / function.CRso_FJ49hY():CRso_FJ49hY(*,) ]
+* : error: Type not defined: CRso_FJ49hY
+CRso_FJ49hY
+WebDSL: rewriting failed, trace:
+	editor_analyze1_0_0
+	editor_analyze1_0_0
+	editor_analyze_0_0
+	editor_analyze_work_0_0
+	in_typechecking_phase_1_0
+	dr_scope_1_1
+	editor_check_0_1
+	dr_scope_1_1
+	dr_scope_1_1
+	dbg_time_1_1
+	catch_errors_editor_1_0
+	dr_scope_1_1
+	dr_scope_1_1
+	constraint_error_all_0_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	bottomup_1_0
+	try_1_0
+	constraint_error_0_0
+	constraint_error_search_0_0
+	eq_type_of_0_0
+	type_of_query_0_0
+[ WebDSL | critical ] Internal error: with clause failed unexpectedly in rule 'constraint-error-search'
+           SearcherRefMod(LargerThanOrEqual(FieldAccess(Var("externalscope"),"ookL3GK_7g0"),Mod(OrForExp(ForExp(ListCreation([]){ClosureInAnno([])},"q25__Y"{"topdef46_q25__Y0"},FunctionSort([],SimpleSort("Void")),Div(False,FunctionRefCallPartial(FunctionRef("CRso_FJ49hY"{"topdef46_CRso_FJ49hY0"},[],SimpleSort("CRso_FJ49hY")),[])),None){ClosureInAnno([])}){ClosureInAnno([])},TypedListCreation(SimpleSort("CRso_FJ49hY"),[]){ClosureInAnno([])})),[QueryDef([])])
\ No newline at end of file

From g.h.wachsmuth at tudelft.nl  Thu Jul 12 10:54:40 2012
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 12 Jul 2012 08:54:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25185 - in
	spoofax-imp/branches/nbl-dev: semantics syntax trans
Message-ID: <20120712085440.9E719CC097@mx4.tudelft.nl>

Author: GuidoWachsmuth
Date: Thu Jul 12 08:54:38 2012
New Revision: 25185
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25185&sc=1

Log:
working version with c# branch

Modified:
   spoofax-imp/branches/nbl-dev/semantics/names.str
   spoofax-imp/branches/nbl-dev/syntax/NameDefinitionLanguage.sdf
   spoofax-imp/branches/nbl-dev/trans/generate.str

Modified: spoofax-imp/branches/nbl-dev/semantics/names.str
==============================================================================
--- spoofax-imp/branches/nbl-dev/semantics/names.str	Wed Jul 11 10:10:05 2012	(r25184)
+++ spoofax-imp/branches/nbl-dev/semantics/names.str	Thu Jul 12 08:54:38 2012	(r25185)
@@ -18,7 +18,7 @@
 
 
 rules
-
+  
   nam-get-definitions(|paths__, subsequent__):
     Naming(m, _, _) -> ( <Naming(nam-annotate-def(|uri3), id, id)>
                        , [Def(uri3)]

Modified: spoofax-imp/branches/nbl-dev/syntax/NameDefinitionLanguage.sdf
==============================================================================
--- spoofax-imp/branches/nbl-dev/syntax/NameDefinitionLanguage.sdf	Wed Jul 11 10:10:05 2012	(r25184)
+++ spoofax-imp/branches/nbl-dev/syntax/NameDefinitionLanguage.sdf	Thu Jul 12 08:54:38 2012	(r25185)
@@ -74,7 +74,7 @@
     "of" "type" RTerm -> TypePart  {"TypeBinding"}
                       -> TypePart  {"None"}
     "of" "type" BTerm -> BTypePart {"TypeBinding"}
-                      -> NTypePart {"None"}
+                      -> BTypePart {"None"}
     
     %% Reference postfixes
     "in" DefScopeCore       -> DefScopePart {bracket}

Modified: spoofax-imp/branches/nbl-dev/trans/generate.str
==============================================================================
--- spoofax-imp/branches/nbl-dev/trans/generate.str	Wed Jul 11 10:10:05 2012	(r25184)
+++ spoofax-imp/branches/nbl-dev/trans/generate.str	Thu Jul 12 08:54:38 2012	(r25185)
@@ -40,30 +40,35 @@
 	
 overlays
 	
-	PATHS       = DefaultVarDec("paths__")	
 	PATH        = DefaultVarDec("path__")	
+	PATHS       = DefaultVarDec("paths__")	
+	PATHS'      = DefaultVarDec("paths'__")	
 	SUBSEQUENT  = DefaultVarDec("subsequent__")
 	TARGET      = CALL("target__")
 	LOOKUP_PATH = CALL("lookup-index-path")
-
-overlays
 	
-	REGULAR(ns, n)          = TERM("Regular", [ns, n])
-	REGULAR(ns, n, t)       = TERM("Regular", [ns, n, t])
-	CHILD(ns, n, pns, p)    = TERM("Child", [ns, n, pns, p])
-	CHILD(ns, n, pns, p, t) = TERM("Child", [ns, n, pns, p, t])
-		
+	DEF_DATA(uri, kind, data) = TERM("DefData", [uri, TERM(kind), data])
+	IMPORT(uri1, uri2)        = DEF_DATA(uri1, "Import", uri2)
+	TIMPORT(uri1, uri2)       = DEF_DATA(uri1, "TImport", uri2)
+	
 overlays
 	
-	ANON                      = TERM("Anon", [RootApp(CALL("new"))])
-	LOOKUP_PATH(nsv, v, path) = WhereClause(Assign(v, LIST(path, App(LOOKUP_PATH(), TUPLE([nsv, PATHS()])))))	
-    ANNOTATE_DEF(v)           = CALL("nam-annotate-def", [v])
-    ANNOTATE_SCOPE(v)         = CALL("nam-annotate-scope", [v])
-	ANNOTATE_IMPORT(v)        = CALL("nam-annotate-use", [TERM("Unresolved", [v])])
+	REGULAR(ns, n)              = TERM("Regular", [ns, n])
+	REGULAR(ns, n, t)           = TERM("Regular", [ns, n, t])
+	CHILD(ns, n, pns, p)        = TERM("Child", [ns, n, pns, p])
+	CHILD(ns, n, pns, p, t)     = TERM("Child", [ns, n, pns, p, t])
+	
+	ANON                        = TERM("Anon", [App(CALL("newname"), NoAnnoList(Str("anon")))])
+	LOOKUP_PATH(nsv, v, path)   = WhereClause(Assign(v, LIST(path, App(LOOKUP_PATH(), TUPLE([nsv, PATHS()])))))	
+    LOOKUP_PATH'(nsv, v, path)  = WhereClause(Assign(v, LIST(path, App(LOOKUP_PATH(), TUPLE([nsv, PATHS'()])))))	
+    ANNOTATE_DEF(v)             = CALL("nam-annotate-def", [v])
+    ANNOTATE_USE(nss)           = CALL("nam-annotate-use", [PATHS'(), LIST(nss)])
+    ANNOTATE_SCOPE(v)           = CALL("nam-annotate-scope", [v])
+	ANNOTATE_IMPORT(v)          = CALL("nam-annotate-use", [TERM("Unresolved", [v])])
 
     DEF_KEY_RULE(t, ks)         = RULE("nam-get-definition-keys", t, LIST(ks), [])
     USE_KEY_RULE(t, ks)         = RULE("nam-get-use-keys", t, LIST(ks), [])
-    DEF_RULE(t, t', ds, is, cs) = RULE("nam-get-definitions", [PATHS(), SUBSEQUENT()], t, TUPLE([RootApp(t'), LIST(ds), LIST(is)]), cs) 
+    DEF_RULE(t, t', ds, is, cs) = RULE("nam-get-definitions", [PATHS(), PATHS'(), SUBSEQUENT()], t, TUPLE([RootApp(t'), LIST(ds), LIST(is)]), cs) 
 	USE_RULE(t, t')             = RULE("nam-annotate-uses", [PATHS()], t, RootApp(t'), [])
 	
 overlays
@@ -89,12 +94,6 @@
 				, [WhereClause(App(TARGET(), name))|clauses]
 				)
   		)
-
-overlays 
-	
-    ANNOTATE_USE(nss)         = CALL("nam-annotate-use", [Var("paths__"), LIST(nss)])
-    LOOKUP_CHILDREN(ns, n)    = App(CALL("index-lookup-children", [TERM(ns), Var("prefix__")]), n)
-    LOOKUP_CHILDREN(ns, t, n) = App(CALL("index-lookup-children", [TERM(ns), t, Var("prefix__")]), n)
     
 rules
 	
@@ -124,10 +123,9 @@
 		ND-Rules(rule*) -> <filter(to-rules)> rule*
 		
 	to-rules:
-		ND-Rule(term, part*) -> Rules(<nonempty> [definition-rule*, reference-rule*, scope-rule*, type-rule*])
+		ND-Rule(term, part*) -> Rules(<nonempty> [definition-rule*, scope-rule*, type-rule*])
 		with
 			definition-rule* := <to-definition-rules(|term)> part* ;
-			reference-rule*  := <to-reference-rules(|term)> part* ;
 			scope-rule*      := <to-scope-rules(|term)> part* ;
 			type-rule*       := <filter(to-type-rules(|term))> part* 
 
@@ -137,19 +135,25 @@
 		part* -> result
 		with
 			replaces := <new-iset> ;
-			(key*, def*, imp*, clause*) := <filter(to-definition-parts(|replaces)); unzip4> part*;
-			if <nonempty> key* then
-				key := [DEF_KEY_RULE(term, key*)]
+			(dkey*, def*, imp*, clause*) := <filter(to-definition-parts(|replaces)); unzip4> part*;
+			(ukey*, rule*)               := <filter(to-reference-parts(|term, replaces)); unzip> part*;
+			if <nonempty> dkey* then
+				dkey-rule* := [DEF_KEY_RULE(term, dkey*)]
 			else
-		    	key := []
+		    	dkey-rule* := []
 		    end;
-		    if <nonempty> clause* then
-		    	term'  := <alltd(replace(|<iset-elements> replaces) <+ introduce-id)> term;
-				result := [DEF_RULE(term, term', def*, imp*, clause*)|key]
+		    if <nonempty> ukey* then
+				ukey-rule* := [USE_KEY_RULE(term, ukey*), rule*]
 			else
-				result := key
+		    	ukey-rule* := rule*
+		    end;
+		    if replace* := <iset-elements; nonempty> replaces then
+		    	term'  := <alltd(replace(|replace*) <+ introduce-id)> term;
+				result := [DEF_RULE(term, term', def*, imp*, clause*), dkey-rule*, ukey-rule*]
+			else
+				result := [dkey-rule*, ukey-rule*]
 			end
-		    
+				
 	to-definition-parts(|replaces):
 		ND-Def(_, ns, name, _, def-scope, _, _) -> ([name], [TERM("Def", [v])], [], [clause])
 		with
@@ -170,7 +174,6 @@
 	to-definition-parts(|replaces):
 		ND-Import(ns*, ND-Ref(ns, name, _, _, _), def-scope) -> ([], [], term*, [clause|clause*])
 		with
-			nsv*   := <map(inamespace-to-term)> ns*;
 			v*     := <map(!Var(<newname> "uri"))> ns*;
 			nsv    := <namespace-to-term> ns;
 			v      := Var(<newname> "import");
@@ -185,9 +188,18 @@
 			case ?OrderedScope():
 				anon := [SUBSEQUENT()]
 			end;
-			term*   := <zip(\(nsv', v') -> TERM("DefData", [v', TERM("Import", []), v])\)> (nsv*, v*); 
-			clause* := <zip(\(nsv', v') -> LOOKUP_PATH(nsv', v', [nsv'|anon])\)> (nsv*, v*)
+			(term*, clause*) := <zip(import-to-data(|nsv, v, anon)); unzip> (ns*, v*)
 	
+	import-to-data(|nsv, v, anon):
+		(Transitive(ns), v') -> (TIMPORT(v', v), LOOKUP_PATH'(nsv', v', [nsv'|anon]))
+		where
+			nsv' := <namespace-to-term> ns
+			
+	import-to-data(|nsv, v, anon):
+		(NonTransitive(ns), v') -> (IMPORT(v', v), LOOKUP_PATH'(nsv', v', [nsv'|anon]))
+		where
+			nsv' := <namespace-to-term> ns
+		
 	unzip4: [] -> ([], [], [], [])
 	unzip4: [(h1*, h2*, h3*, h4*)|t] -> ([h1*, t1*], [h2*, t2*], [h3*, t3*], [h4*, t4*]) where (t1*, t2*, t3*, t4*) := <unzip4> t
 	
@@ -198,21 +210,6 @@
 
 rules
       
-	to-reference-rules(|term):
-		part* -> result
-		with
-			replaces   := <new-iset> ;
-			if (name*, rule*) := <filter(to-reference-parts(|term, replaces)); nonempty; unzip> part* then
-				if replace* := <iset-elements; nonempty> replaces then
-					term'  := <alltd(replace(|replace*) <+ introduce-id)> term;
-					result := [ USE_KEY_RULE(term, name*), USE_RULE(term, term'), rule* ]
-				else
-					result := [ USE_KEY_RULE(term, name*), rule*]
-				end	
-			else
-				result := []
-			end
-  
 	to-reference-parts(|term, replaces):
 		ND-Refs(ref*) -> (name, ADJUST_LOOKUP(term, name, resolution*, []))
   	    with
@@ -267,8 +264,9 @@
 			else
 				ordered := []
 			end;
-			if scope* := <filter(to-scope) ; concat; nonempty> part* then
-				result := [RULE("nam-get-scope-types", term, LIST(scope*), [])|ordered]
+			var := Var(<newname> "anon");
+			if scope* := <filter(to-scope(|var)) ; concat; nonempty> part* then
+				result := [RULE("nam-get-scope-types", term, LIST(scope*), [WhereClause(Assign(var, ANON()))])|ordered]
 			else
 				result := ordered 
 			end
@@ -279,10 +277,16 @@
 	ordered-scope:
 		ND-Import(ns*, _, OrderedScope()) -> <map(inamespace-to-term)> ns*
 		
-	to-scope: 
-		ND-Def(unique, ns, name, _, _, scope*, _) -> <map(scope-to-term(|unique, <namespace-to-term> ns, name))> scope*
+	to-scope(|var): 
+		ND-Def(unique, ns, name, _, _, scope*, _) -> <map(scope-to-term(|anon, <namespace-to-term> ns, name))> scope*
+		with
+			if Unique() := unique then
+				anon := var
+			else
+				anon := TUPLE([])
+			end
 			
-	to-scope:
+	to-scope(|var):
 		ND-Scope(scope*) -> <map(scope-to-term)> scope*
 		
 	scope-to-term:
@@ -291,13 +295,7 @@
 			t := <namespace-to-term> scope
 			
 	scope-to-term(|unique, ns, name):
-		scope -> TUPLE([ns, name, <namespace-to-term> scope, anon])
-		with
-			if Unique() := unique then
-				anon := ANON()
-			else
-				anon := TUPLE([])
-			end
+		scope -> TUPLE([ns, name, <namespace-to-term> scope, unique])
 			
 	namespace-to-term:
 		NsRef(namespace) -> TERM(namespace)

From g.h.wachsmuth at tudelft.nl  Thu Jul 12 10:57:09 2012
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 12 Jul 2012 08:57:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25186 -
	spoofax-contrib/separate-compilation-examples/csharp-branch
Message-ID: <20120712085709.F325A7F80B4@mx1.tudelft.nl>

Author: GuidoWachsmuth
Date: Thu Jul 12 08:57:09 2012
New Revision: 25186
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25186&sc=1

Log:
branch for NBL

Added:
   spoofax-contrib/separate-compilation-examples/csharp-branch/
      - copied from r25185, spoofax-contrib/separate-compilation-examples/csharp-partial-classses/

From g.h.wachsmuth at tudelft.nl  Thu Jul 12 11:00:05 2012
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 12 Jul 2012 09:00:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25187 -
	spoofax-contrib/separate-compilation-examples/csharp-nbl
Message-ID: <20120712090005.E27D87F8008@mx1.tudelft.nl>

Author: GuidoWachsmuth
Date: Thu Jul 12 09:00:05 2012
New Revision: 25187
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25187&sc=1

Log:
branch for NBL

Added:
   spoofax-contrib/separate-compilation-examples/csharp-nbl/
      - copied from r25186, spoofax-contrib/separate-compilation-examples/csharp-partial-classses/

From g.h.wachsmuth at tudelft.nl  Thu Jul 12 11:02:23 2012
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 12 Jul 2012 09:02:23 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25188 -
	spoofax-contrib/separate-compilation-examples/csharp-branch
Message-ID: <20120712090223.DCADB7F802E@mx1.tudelft.nl>

Author: GuidoWachsmuth
Date: Thu Jul 12 09:02:23 2012
New Revision: 25188
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25188&sc=1

Log:
removed duplicate branch

Deleted:
   spoofax-contrib/separate-compilation-examples/csharp-branch/

From g.h.wachsmuth at tudelft.nl  Thu Jul 12 11:35:53 2012
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 12 Jul 2012 09:35:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25189 - in
	spoofax-contrib/separate-compilation-examples/csharp-nbl: .
	.externalToolBuilders test trans
Message-ID: <20120712093553.3F024108C066@mx3.tudelft.nl>

Author: GuidoWachsmuth
Date: Thu Jul 12 09:35:52 2012
New Revision: 25189
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25189&sc=1

Log:
Guido's version for lookups

Added:
   spoofax-contrib/separate-compilation-examples/csharp-nbl/test/foo.csh
Modified:
   spoofax-contrib/separate-compilation-examples/csharp-nbl/.externalToolBuilders/CSharpPartialClassses build.main.xml.launch
   spoofax-contrib/separate-compilation-examples/csharp-nbl/build.main.xml
   spoofax-contrib/separate-compilation-examples/csharp-nbl/test/inheritence.csh
   spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/csharppartialclassses.str
   spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/generate.str
   spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/names.nd
   spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/names.str
   spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/splitter.str
   spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/types.str

Modified: spoofax-contrib/separate-compilation-examples/csharp-nbl/.externalToolBuilders/CSharpPartialClassses build.main.xml.launch
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-nbl/.externalToolBuilders/CSharpPartialClassses build.main.xml.launch	Thu Jul 12 09:02:23 2012	(r25188)
+++ spoofax-contrib/separate-compilation-examples/csharp-nbl/.externalToolBuilders/CSharpPartialClassses build.main.xml.launch	Thu Jul 12 09:35:52 2012	(r25189)
@@ -14,7 +14,6 @@
 <booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
 <stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value=""/>
 <stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="all,"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${none}"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/csharp-partial-classses/build.main.xml}"/>
 <booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>

Modified: spoofax-contrib/separate-compilation-examples/csharp-nbl/build.main.xml
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-nbl/build.main.xml	Thu Jul 12 09:02:23 2012	(r25188)
+++ spoofax-contrib/separate-compilation-examples/csharp-nbl/build.main.xml	Thu Jul 12 09:35:52 2012	(r25189)
@@ -40,29 +40,16 @@
         <import file="build.generated.xml"/>
     
         <!-- Main target -->
-        <target name="all" depends="link-lib-files, copy-lib-files, spoofaximp.default.jar"/>
+        <target name="all" depends="copy-lib-files, spoofaximp.default.jar"/>
       
-        <target name="os-detection">
-          <condition property="isWin">
-            <os family="windows"/>
-          </condition>  
-        </target>
         
-        <target name="copy-lib-files" if="isWin" depends="os-detection">
+        <target name="copy-lib-files">
           <!-- Copy libraries from naming experiment, Ant is stupid and cannot link on Windows :( -->
-          <copy file="../../../spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/index-library.str" tofile="lib/index-library.str"/>
-          <copy file="../../../spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/analysis-library.str" tofile="lib/analysis-library.str"/>
-          <copy file="../../../spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/analysis-library-internal.str" tofile="lib/analysis-library-internal.str"/>
-          <copy file="../../../spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/compilation-library.str" tofile="lib/compilation-library.str"/>
-          <copy file="../../../spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/nbl-library.str" tofile="lib/nbl-library.str"/>
+          <copy file="../org.spoofax.interpreter.library.language/src/main/stratego/lib/index-library.str" tofile="lib/index-library.str"/>
+          <copy file="../org.spoofax.interpreter.library.language/src/main/stratego/lib/analysis-library.str" tofile="lib/analysis-library.str"/>
+          <copy file="../org.spoofax.interpreter.library.language/src/main/stratego/lib/analysis-library-internal.str" tofile="lib/analysis-library-internal.str"/>
+          <copy file="../org.spoofax.interpreter.library.language/src/main/stratego/lib/compilation-library.str" tofile="lib/compilation-library.str"/>
+          <copy file="../org.spoofax.interpreter.library.language/src/main/stratego/lib/nbl-library.str" tofile="lib/nbl-library.str"/>
         </target>
         
-        <target name="link-lib-files" unless="isWin" depends="os-detection">
-          <!-- Link libraries from naming experiment -->
-          <symlink resource="${basedir}/../../../spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/index-library.str" link="${basedir}/lib/index-library.str" overwrite="true" />
-          <symlink resource="${basedir}/../../../spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/analysis-library.str" link="${basedir}/lib/analysis-library.str" overwrite="true" />
-          <symlink resource="${basedir}/../../../spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/analysis-library-internal.str" link="${basedir}/lib/analysis-library-internal.str" overwrite="true" />
-          <symlink resource="${basedir}/../../../spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/compilation-library.str" link="${basedir}/lib/compilation-library.str" overwrite="true" />
-          <symlink resource="${basedir}/../../../spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/nbl-library.str" link="${basedir}/lib/nbl-library.str" overwrite="true" />
-        </target>
     </project>
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/csharp-nbl/test/foo.csh
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/csharp-nbl/test/foo.csh	Thu Jul 12 09:35:52 2012	(r25189)
@@ -0,0 +1,20 @@
+namespace Foobar {
+	
+	class B {
+		B b;
+	}
+	class C:B {
+		A a;
+		A aa;
+		A aaa;
+	}
+	
+	class A:C {
+		A a() {
+			B b = b;
+			A a = a;
+			A c = a;
+			return c;
+		}
+	}
+}
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-nbl/test/inheritence.csh
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-nbl/test/inheritence.csh	Thu Jul 12 09:02:23 2012	(r25188)
+++ spoofax-contrib/separate-compilation-examples/csharp-nbl/test/inheritence.csh	Thu Jul 12 09:35:52 2012	(r25189)
@@ -1,18 +1,16 @@
 namespace Inheritance {
 	class C  {
-	  int inherited() {
-	    return 2;
+	  C inherited() {
+	    return inherited();
 	  }  
 	} 
 	
 	class B : C {
-	  int inherited() {
-	    return 1;
-	  }
+	  
 	}
 	
 	class A : B {
-	  int test() {
+	  C test() {
 	    return inherited();
 	  }
 	}

Modified: spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/csharppartialclassses.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/csharppartialclassses.str	Thu Jul 12 09:02:23 2012	(r25188)
+++ spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/csharppartialclassses.str	Thu Jul 12 09:35:52 2012	(r25189)
@@ -9,7 +9,6 @@
   lib/analysis-library
   lib/analysis-library-internal
   lib/compilation-library
-  lib/nbl-library
   check
   generate
   splitter
@@ -67,11 +66,11 @@
   
   // Resolves a reference when the user control-clicks or presses F3 in the editor.
   editor-resolve:
-    (node, position, ast, path, project-path) -> target
+    (node, position, ast, file-path, project-path) -> target
     where
-      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      index-setup(|<language>, [project-path], $[[project-path]/[file-path]]);
       index-transaction(
-        target := <index-lookup> node
+        target := <index-lookup-element> node
       )
 
   // Returns "hover help" information for a particular node in the editor.
@@ -84,15 +83,12 @@
   // Completes an identifier when the user presses control-space
   // (the completion identifier in the AST provides additional context information)
   editor-complete:
-    (node, position, ast, path, project-path) -> proposals'
+    (node, position, ast, path, project-path) -> proposals
     where
       editor-init;
       (ast', _) := <analyze-top(|<language>)> (ast, path, project-path);
-      item at COMPLETION(name) := <collect-one(?COMPLETION(_))> ast';
-      index-transaction(
-        (<index-lookup-all(|name)> item <+ ![]) => proposals
-      );
-      proposals' := <map(index-uri; index-uri-name)> proposals
+      _{defs}   := <collect-one(?COMPLETION(_))> ast';
+      proposals := <filter(?Def([_, <id>|_]))> defs
       
 rules // Debugging
   
@@ -128,7 +124,7 @@
       result   := <index-get-all-in-file> path
       
   // Prints the entries in the index of all files.
-  debug-index-show-all-files:
+  index-allfiles:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
@@ -136,7 +132,7 @@
       result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
 
   // Cleans current file from the index.
-  debug-index-clear-current:
+  index-clean-curentfile:
     (selected, position, ast, path, project-path)  -> None()
     with
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
@@ -155,7 +151,7 @@
     with
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       index-reload
-      
+
 rules // Utility
 	
   // Queue parallel analysis for given list of files.

Modified: spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/generate.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/generate.str	Thu Jul 12 09:02:23 2012	(r25188)
+++ spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/generate.str	Thu Jul 12 09:35:52 2012	(r25189)
@@ -36,7 +36,7 @@
   index-compile-ast(|file, subfile):
     ast -> None()
     with
-      if name := <index-path-to-string> <index-uri-path> subfile then
+      if name := <fail> <index-uri-path> subfile then
       	cs := <pp-csharppartialclassses-string> ast;
         full-path := <dirname> file;
         filename := <add-extension> (name, "cs");

Modified: spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/names.nd
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/names.nd	Thu Jul 12 09:02:23 2012	(r25188)
+++ spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/names.nd	Thu Jul 12 09:35:52 2012	(r25189)
@@ -18,79 +18,83 @@
   
   Variable
   
-rules // Namespaces 
+binding rules // Namespaces 
 
   Namespace(x, _) :
     defines non-unique Namespace x
-    scopes Namespace, Class
+      scope for Namespace, Class
     
   UsingPart(x) :
-    defines non-unique Using x
-    refers to Namespace x
-    imports Class from Namespace x {current-file}
-    
-  UsingPart(u, x) :
-    refers to Namespace x in Namespace y
-    where u refers to Namespace y
+    imports Class 
+      from Namespace x 
+      into subsequent scope
+    
+  // UsingPart(u, x) :
+  //   refers to Namespace x 
+  //     in Namespace y
+  //     where u refers to Namespace y
   
-rules // Classes
+binding rules // Classes
 
   Class(x, _) :
     defines unique Class x of type Type(x)
-    scopes Field, Function
+      scope for Field, Function
     
   Class(x, y, _) :
     defines unique Class x of type Type(x)
-    refers to Class y
-    scopes Field, Function
-    imports Field from Class y {transitive}
-    imports Function from Class y {transitive}
+      scope for Field, Function
+    imports 
+      Field,  
+      Function, 
+      imported Field,
+      imported Function 
+      from Class y 
     
   Interface(x, _) :
     defines unique Class x of type Type(x)
-    scopes Function
+    scope for Function
     
   Interface(x, y, _) :
     defines unique Class x of type Type(x)
-    refers to Class y
-    scopes Function
-    imports Function from Class y {transitive}
+    scope for Function
+    imports Function, imported Function from Class y 
     
   PartialClass(x, _) :
     defines non-unique Class x of type Type(x)
-    scopes Field, Function
+    scope for Field, Function
     
   PartialClass(x, y, _) :
     defines non-unique Class x of type Type(x)
-    refers to Class y
-    scopes Field, Function
-    imports Field from Class y {transitive}
-    imports Function from Class y {transitive}
-
+      scope for Field, Function
+    imports 
+      Field, imported Field, 
+      Function, imported Function 
+      from Class y 
+    
   Type(c) :
   	refers to Class c
   	
-rules // Fields
+binding rules // Fields
 
   FieldDef(t, x) :
     defines Field x of type t 
     
-  FieldAccess(exp, f) :
-    refers to Field f in Class e
-    where exp has type Type(e)
+  // FieldAccess(exp, f) :
+  //   refers to Field f in Class e
+  //     where exp has type Type(e)
     
-rules // Functions
+binding rules // Functions
 
   FunDef(t, x, _) :
     defines Function x of type t
 
   FunDef(t, x, _, _) :
     defines Function x of type t 
-    scopes Variable, Field
+      scope for Variable, Field
     
-  FunCall(exp, f, _) :
-    refers to Function f in Class e
-    where exp has type Type(e)
+  // FunCall(exp, f, _) :
+  //   refers to Function f in Class e
+  //     where exp has type Type(e)
     
   FunCall(x, _) : 
     refers to Function x
@@ -98,30 +102,33 @@
   Param(t, x) :
     defines Variable x of type t 
     
-rules // Variables
+binding rules // Variables
 
   VarDef(t, x, _) :
-    defines Variable x of type t in subsequent scope 
+    defines Variable x of type t 
+      in subsequent scope 
 
   VarDef(t, x) :
-    defines Variable x of type t in subsequent scope 
+    defines Variable x of type t 
+      in subsequent scope 
 
   VarRef(x) :
-    refers to Variable x
+    refers to Variable x otherwise 
     refers to Field x
 
   Assign(x, _):
-    refers to Variable x
+    refers to Variable x otherwise 
     refers to Field x
     
-rules // Flow control
+binding rules // Flow control
 
   For(t, x, init, cond, stmt, body) :
-    defines Variable x of type t in cond, stmt, body
+    defines Variable x of type t 
+      in cond, stmt, body
 
   ForEach(t, x, e, body) :
     defines Variable x of type t in body
 
   Block(stmt*) : 
-    scopes Variable
+    anonymous scope for Variable
     
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/names.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/names.str	Thu Jul 12 09:02:23 2012	(r25188)
+++ spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/names.str	Thu Jul 12 09:35:52 2012	(r25189)
@@ -13,12 +13,6 @@
 
 signature
   constructors
-    Type        : DefDataKind
-    Import      : DefDataKind
-    Transitive  : ImportAnno
-    CurrentFile : ImportAnno
-
-  constructors
     Program   : Namespace
     Namespace : Namespace
     Using     : Namespace
@@ -30,631 +24,461 @@
 
 rules
 
-  nam-get-scope-types :
-    Namespace(x, _) -> [Namespace(), Class()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Namespace(x, _) -> ( <Namespace(nam-annotate-def(|uri24), id)>
+                       , [Def(uri24)]
+                       , []
+                       )
+    where uri24 := [Namespace(), x|<lookup-index-path> (Namespace(), paths__)]
 
   nam-get-definition-keys :
     Namespace(x, _) -> [x]
 
-  nam-get-definitions :
-    Namespace(x, _) -> [(Namespace(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Namespace(x, _) -> <Namespace(nam-annotate-def(|path__), id)>
+  nam-get-scope-types :
+    Namespace(x, _) -> [ (Namespace(), x, Namespace(), ())
+                       , (Namespace(), x, Class(), ())
+                       ]
+    where anon726 := Anon(<newname> "anon")
 
 
 rules
 
-  nam-get-definition-keys :
-    UsingPart(x) -> [x]
-
-  nam-get-definitions :
-    UsingPart(x) -> [(Using(), [x])]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    UsingPart(x) -> ( <UsingPart(!import3)>
+                    , []
+                    , [DefData(uri25, Import(), import3)]
+                    )
+    where import3 := <nam-annotate-use(|paths'__, [Namespace()])> x
+    where uri25 := [Class(), subsequent__|<lookup-index-path> (Class(), paths'__)]
 
-  nam-get-uses-keys :
+  nam-get-use-keys :
     UsingPart(x) -> [x]
 
-  nam-get-uses :
-    UsingPart(x) -> [(Namespace(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    UsingPart(x) -> <UsingPart(nam-annotate-def(|path__))>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    UsingPart(x) -> <store__> DefData(
-                                [Class()|[<index-file-to-string> <index-get-current-file>]]
-                              , Import()
-                              , (x, [CurrentFile()])
-                              )
-
-
-rules
-
-  nam-get-uses-keys :
-    UsingPart(u, x) -> [x]
-    where Def([Namespace()|y]) := <index-find-key ; index-lookup> u
-
-  nam-get-uses :
-    UsingPart(u, x) -> [(Namespace(), [x])]
-    where Def([Namespace()|y]) := <index-find-key ; index-lookup> u
-
-  nam-annotate-names(|paths__, path__):
-    UsingPart(u, x) -> <UsingPart(id, nam-annotate-use(|paths__, Namespace()))>
-
-  adjust-index-lookup(target__|namespace__, path__, prefix__):
-    UsingPart(u, x) -> <index-lookup-children(|Namespace(), prefix__)> y
+  nam-resolve(target__|):
+    UsingPart(x) -> [Regular(Namespace(), x)]
     where <target__> x
-    where Def([Namespace()|y]) := <index-find-key ; index-lookup> u
+
+  nam-ordered-def :
+    UsingPart(x) -> [Class()]
 
 
 rules
 
-  nam-get-scope-types :
-    Class(x, _) -> [Field(), Function()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Class(x, _) -> ( <Class(nam-annotate-def(|uri8), id)>
+                   , [Def(uri8)]
+                   , []
+                   )
+    where uri8 := [Class(), x|<lookup-index-path> (Class(), paths__)]
 
   nam-get-definition-keys :
     Class(x, _) -> [x]
 
-  nam-get-definitions :
-    Class(x, _) -> [(Class(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Class(x, _) -> <Class(nam-annotate-def(|path__), id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Class(x, _) -> <store__> DefData(
-                               [namespace__|path__]
-                             , Type()
-                             , Type(x)
-                             )
-
-  type-of :
-    Class(x, _) -> Type(x)
+  nam-get-scope-types :
+    Class(x, _) -> [ (Class(), x, Field(), anon719)
+                   , (Class(), x, Function(), anon719)
+                   ]
+    where anon719 := Anon(<newname> "anon")
 
-  nam-unique :
-    Class(x, _) -> <id>
+  nam-get-type :
+    Class(x, _) -> (x, Type(x))
 
 
 rules
 
-  nam-get-scope-types :
-    Class(x, y, _) -> [Field(), Function()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Class(x, y, _) -> ( <Class(nam-annotate-def(|uri9), !import0, id)>
+                      , [Def(uri9)]
+                      , [ DefData(uri10, Import(), import0)
+                        , DefData(uri11, Import(), import0)
+                        , DefData(uri12, TImport(), import0)
+                        , DefData(uri13, TImport(), import0)
+                        ]
+                      )
+    where uri9 := [Class(), x|<lookup-index-path> (Class(), paths__)]
+    where import0 := <nam-annotate-use(|paths'__, [Class()])> y
+    where uri10 := [Field()|<lookup-index-path> (Field(), paths'__)]
+    where uri11 := [Function()|<lookup-index-path> (Function(), paths'__)]
+    where uri12 := [Field()|<lookup-index-path> (Field(), paths'__)]
+    where uri13 := [Function()|<lookup-index-path> (Function(), paths'__)]
 
   nam-get-definition-keys :
     Class(x, y, _) -> [x]
 
-  nam-get-definitions :
-    Class(x, y, _) -> [(Class(), [x])]
-
-  nam-get-uses-keys :
+  nam-get-use-keys :
     Class(x, y, _) -> [y]
 
-  nam-get-uses :
-    Class(x, y, _) -> [(Class(), [y])]
+  nam-resolve(target__|):
+    Class(x, y, _) -> [Regular(Class(), y)]
+    where <target__> y
 
-  nam-annotate-names(|paths__, path__):
-    Class(x, y, _) -> <Class(
-                         nam-annotate-def(|path__)
-                       , nam-annotate-use(|paths__, Class())
-                       , id
-                       )>
+  nam-get-scope-types :
+    Class(x, y, _) -> [ (Class(), x, Field(), anon720)
+                      , (Class(), x, Function(), anon720)
+                      ]
+    where anon720 := Anon(<newname> "anon")
 
-  adjust-index-def-data(store__|namespace__, path__):
-    Class(x, y, _) -> <store__> DefData(
-                                  [namespace__|path__]
-                                , Type()
-                                , Type(x)
-                                )
-
-  type-of :
-    Class(x, y, _) -> Type(x)
-
-  nam-unique :
-    Class(x, y, _) -> <id>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Class(x, y, _) -> <store__> DefData(
-                                  [Field()|path__]
-                                , Import()
-                                , (y, [Transitive()])
-                                )
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Class(x, y, _) -> <store__> DefData(
-                                  [Function()|path__]
-                                , Import()
-                                , (y, [Transitive()])
-                                )
+  nam-get-type :
+    Class(x, y, _) -> (x, Type(x))
 
 
 rules
 
-  nam-get-scope-types :
-    Interface(x, _) -> [Function()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Interface(x, _) -> ( <Interface(nam-annotate-def(|uri14), id)>
+                       , [Def(uri14)]
+                       , []
+                       )
+    where uri14 := [Class(), x|<lookup-index-path> (Class(), paths__)]
 
   nam-get-definition-keys :
     Interface(x, _) -> [x]
 
-  nam-get-definitions :
-    Interface(x, _) -> [(Class(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Interface(x, _) -> <Interface(nam-annotate-def(|path__), id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Interface(x, _) -> <store__> DefData(
-                                   [namespace__|path__]
-                                 , Type()
-                                 , Type(x)
-                                 )
-
-  type-of :
-    Interface(x, _) -> Type(x)
+  nam-get-scope-types :
+    Interface(x, _) -> [ (Class(), x, Function(), anon721)
+                       ]
+    where anon721 := Anon(<newname> "anon")
 
-  nam-unique :
-    Interface(x, _) -> <id>
+  nam-get-type :
+    Interface(x, _) -> (x, Type(x))
 
 
 rules
 
-  nam-get-scope-types :
-    Interface(x, y, _) -> [Function()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Interface(x, y, _) -> ( <Interface(nam-annotate-def(|uri15), !import1, id)>
+                          , [Def(uri15)]
+                          , [ DefData(uri16, Import(), import1)
+                            , DefData(uri17, TImport(), import1)
+                            ]
+                          )
+    where uri15 := [Class(), x|<lookup-index-path> (Class(), paths__)]
+    where import1 := <nam-annotate-use(|paths'__, [Class()])> y
+    where uri16 := [Function()|<lookup-index-path> (Function(), paths'__)]
+    where uri17 := [Function()|<lookup-index-path> (Function(), paths'__)]
 
   nam-get-definition-keys :
     Interface(x, y, _) -> [x]
 
-  nam-get-definitions :
-    Interface(x, y, _) -> [(Class(), [x])]
-
-  nam-get-uses-keys :
+  nam-get-use-keys :
     Interface(x, y, _) -> [y]
 
-  nam-get-uses :
-    Interface(x, y, _) -> [(Class(), [y])]
+  nam-resolve(target__|):
+    Interface(x, y, _) -> [Regular(Class(), y)]
+    where <target__> y
+
+  nam-get-scope-types :
+    Interface(x, y, _) -> [ (Class(), x, Function(), anon722)
+                          ]
+    where anon722 := Anon(<newname> "anon")
 
-  nam-annotate-names(|paths__, path__):
-    Interface(x, y, _) -> <Interface(
-                             nam-annotate-def(|path__)
-                           , nam-annotate-use(|paths__, Class())
-                           , id
-                           )>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Interface(x, y, _) -> <store__> DefData(
-                                      [namespace__|path__]
-                                    , Type()
-                                    , Type(x)
-                                    )
-
-  type-of :
-    Interface(x, y, _) -> Type(x)
-
-  nam-unique :
-    Interface(x, y, _) -> <id>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Interface(x, y, _) -> <store__> DefData(
-                                      [Function()|path__]
-                                    , Import()
-                                    , (y, [Transitive()])
-                                    )
+  nam-get-type :
+    Interface(x, y, _) -> (x, Type(x))
 
 
 rules
 
-  nam-get-scope-types :
-    PartialClass(x, _) -> [Field(), Function()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    PartialClass(x, _) -> ( <PartialClass(nam-annotate-def(|uri18), id)>
+                          , [Def(uri18)]
+                          , []
+                          )
+    where uri18 := [Class(), x|<lookup-index-path> (Class(), paths__)]
 
   nam-get-definition-keys :
     PartialClass(x, _) -> [x]
 
-  nam-get-definitions :
-    PartialClass(x, _) -> [(Class(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    PartialClass(x, _) -> <PartialClass(nam-annotate-def(|path__), id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    PartialClass(x, _) -> <store__> DefData(
-                                      [namespace__|path__]
-                                    , Type()
-                                    , Type(x)
-                                    )
+  nam-get-scope-types :
+    PartialClass(x, _) -> [ (Class(), x, Field(), ())
+                          , (Class(), x, Function(), ())
+                          ]
+    where anon723 := Anon(<newname> "anon")
 
-  type-of :
-    PartialClass(x, _) -> Type(x)
+  nam-get-type :
+    PartialClass(x, _) -> (x, Type(x))
 
 
 rules
 
-  nam-get-scope-types :
-    PartialClass(x, y, _) -> [Field(), Function()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    PartialClass(x, y, _) -> ( <PartialClass(nam-annotate-def(|uri19), !import2, id)>
+                             , [Def(uri19)]
+                             , [ DefData(uri20, Import(), import2)
+                               , DefData(uri21, TImport(), import2)
+                               , DefData(uri22, Import(), import2)
+                               , DefData(uri23, TImport(), import2)
+                               ]
+                             )
+    where uri19 := [Class(), x|<lookup-index-path> (Class(), paths__)]
+    where import2 := <nam-annotate-use(|paths'__, [Class()])> y
+    where uri20 := [Field()|<lookup-index-path> (Field(), paths'__)]
+    where uri21 := [Field()|<lookup-index-path> (Field(), paths'__)]
+    where uri22 := [Function()|<lookup-index-path> (Function(), paths'__)]
+    where uri23 := [Function()|<lookup-index-path> (Function(), paths'__)]
 
   nam-get-definition-keys :
     PartialClass(x, y, _) -> [x]
 
-  nam-get-definitions :
-    PartialClass(x, y, _) -> [(Class(), [x])]
-
-  nam-get-uses-keys :
+  nam-get-use-keys :
     PartialClass(x, y, _) -> [y]
 
-  nam-get-uses :
-    PartialClass(x, y, _) -> [(Class(), [y])]
+  nam-resolve(target__|):
+    PartialClass(x, y, _) -> [Regular(Class(), y)]
+    where <target__> y
+
+  nam-get-scope-types :
+    PartialClass(x, y, _) -> [ (Class(), x, Field(), ())
+                             , (Class(), x, Function(), ())
+                             ]
+    where anon724 := Anon(<newname> "anon")
 
-  nam-annotate-names(|paths__, path__):
-    PartialClass(x, y, _) -> <PartialClass(
-                                nam-annotate-def(|path__)
-                              , nam-annotate-use(|paths__, Class())
-                              , id
-                              )>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    PartialClass(x, y, _) -> <store__> DefData(
-                                         [namespace__|path__]
-                                       , Type()
-                                       , Type(x)
-                                       )
-
-  type-of :
-    PartialClass(x, y, _) -> Type(x)
-
-  adjust-index-def-data(store__|namespace__, path__):
-    PartialClass(x, y, _) -> <store__> DefData(
-                                         [Field()|path__]
-                                       , Import()
-                                       , (y, [Transitive()])
-                                       )
-
-  adjust-index-def-data(store__|namespace__, path__):
-    PartialClass(x, y, _) -> <store__> DefData(
-                                         [Function()|path__]
-                                       , Import()
-                                       , (y, [Transitive()])
-                                       )
+  nam-get-type :
+    PartialClass(x, y, _) -> (x, Type(x))
 
 
 rules
 
-  nam-get-uses-keys :
-    Type(c) -> [c]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Type(c) -> ( <Type(
+                    nam-annotate-use(|paths'__, [Class()])
+                  )>
+               , []
+               , []
+               )
 
-  nam-get-uses :
-    Type(c) -> [(Class(), [c])]
+  nam-get-use-keys :
+    Type(c) -> [c]
 
-  nam-annotate-names(|paths__, path__):
-    Type(c) -> <Type(nam-annotate-use(|paths__, Class()))>
+  nam-resolve(target__|):
+    Type(c) -> [Regular(Class(), c)]
+    where <target__> c
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    FieldDef(t, x) -> ( <FieldDef(id, nam-annotate-def(|uri7))>
+                      , [Def(uri7)]
+                      , []
+                      )
+    where uri7 := [Field(), x|<lookup-index-path> (Field(), paths__)]
+
   nam-get-definition-keys :
     FieldDef(t, x) -> [x]
 
-  nam-get-definitions :
-    FieldDef(t, x) -> [(Field(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    FieldDef(t, x) -> <FieldDef(id, nam-annotate-def(|path__))>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    FieldDef(t, x) -> <store__> DefData(
-                                  [namespace__|path__]
-                                , Type()
-                                , t
-                                )
-
-  type-of :
-    FieldDef(t, x) -> t
-
-  nam-unique :
-    FieldDef(t, x) -> <id>
+  nam-get-type :
+    FieldDef(t, x) -> (x, t)
 
 
 rules
 
-  nam-get-uses-keys :
-    FieldAccess(exp, f) -> [f]
-    where Type(e) := <type-of> exp
-
-  nam-get-uses :
-    FieldAccess(exp, f) -> [(Field(), [f])]
-    where Type(e) := <type-of> exp
-
-  nam-annotate-names(|paths__, path__):
-    FieldAccess(exp, f) -> <FieldAccess(id, nam-annotate-use(|paths__, Field()))>
-
-  adjust-index-lookup(target__|namespace__, path__, prefix__):
-    FieldAccess(exp, f) -> <index-lookup-children(|Field(), prefix__)> e
-    where <target__> f
-    where Type(e) := <type-of> exp
-
-
-rules
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    FunDef(t, x, _) -> ( <FunDef(id, nam-annotate-def(|uri4), id)>
+                       , [Def(uri4)]
+                       , []
+                       )
+    where uri4 := [Function(), x|<lookup-index-path> (Function(), paths__)]
 
   nam-get-definition-keys :
     FunDef(t, x, _) -> [x]
 
-  nam-get-definitions :
-    FunDef(t, x, _) -> [(Function(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    FunDef(t, x, _) -> <FunDef(id, nam-annotate-def(|path__), id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    FunDef(t, x, _) -> <store__> DefData(
-                                   [namespace__|path__]
-                                 , Type()
-                                 , t
-                                 )
-
-  type-of :
-    FunDef(t, x, _) -> t
-
-  nam-unique :
-    FunDef(t, x, _) -> <id>
+  nam-get-type :
+    FunDef(t, x, _) -> (x, t)
 
 
 rules
 
-  nam-get-scope-types :
-    FunDef(t, x, _, _) -> [Variable(), Field()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    FunDef(t, x, _, _) -> ( <FunDef(id, nam-annotate-def(|uri5), id, id)>
+                          , [Def(uri5)]
+                          , []
+                          )
+    where uri5 := [Function(), x|<lookup-index-path> (Function(), paths__)]
 
   nam-get-definition-keys :
     FunDef(t, x, _, _) -> [x]
 
-  nam-get-definitions :
-    FunDef(t, x, _, _) -> [(Function(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    FunDef(t, x, _, _) -> <FunDef(id, nam-annotate-def(|path__), id, id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    FunDef(t, x, _, _) -> <store__> DefData(
-                                      [namespace__|path__]
-                                    , Type()
-                                    , t
-                                    )
-
-  type-of :
-    FunDef(t, x, _, _) -> t
+  nam-get-scope-types :
+    FunDef(t, x, _, _) -> [ (Function(), x, Variable(), anon715)
+                          , (Function(), x, Field(), anon715)
+                          ]
+    where anon715 := Anon(<newname> "anon")
 
-  nam-unique :
-    FunDef(t, x, _, _) -> <id>
+  nam-get-type :
+    FunDef(t, x, _, _) -> (x, t)
 
 
 rules
 
-  nam-get-uses-keys :
-    FunCall(exp, f, _) -> [f]
-    where Type(e) := <type-of> exp
-
-  nam-get-uses :
-    FunCall(exp, f, _) -> [(Function(), [f])]
-    where Type(e) := <type-of> exp
-
-  nam-annotate-names(|paths__, path__):
-    FunCall(exp, f, _) -> <FunCall(
-                             id
-                           , nam-annotate-use(|paths__, Function())
-                           , id
-                           )>
-
-  adjust-index-lookup(target__|namespace__, path__, prefix__):
-    FunCall(exp, f, _) -> <index-lookup-children(|Function(), prefix__)> e
-    where <target__> f
-    where Type(e) := <type-of> exp
-
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    FunCall(x, _) -> ( <FunCall(
+                          nam-annotate-use(|paths'__, [Function()])
+                        , id
+                        )>
+                     , []
+                     , []
+                     )
 
-rules
-
-  nam-get-uses-keys :
+  nam-get-use-keys :
     FunCall(x, _) -> [x]
 
-  nam-get-uses :
-    FunCall(x, _) -> [(Function(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    FunCall(x, _) -> <FunCall(nam-annotate-use(|paths__, Function()), id)>
+  nam-resolve(target__|):
+    FunCall(x, _) -> [Regular(Function(), x)]
+    where <target__> x
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Param(t, x) -> ( <Param(id, nam-annotate-def(|uri6))>
+                   , [Def(uri6)]
+                   , []
+                   )
+    where uri6 := [Variable(), x|<lookup-index-path> (Variable(), paths__)]
+
   nam-get-definition-keys :
     Param(t, x) -> [x]
 
-  nam-get-definitions :
-    Param(t, x) -> [(Variable(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Param(t, x) -> <Param(id, nam-annotate-def(|path__))>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Param(t, x) -> <store__> DefData(
-                               [namespace__|path__]
-                             , Type()
-                             , t
-                             )
-
-  type-of :
-    Param(t, x) -> t
-
-  nam-unique :
-    Param(t, x) -> <id>
+  nam-get-type :
+    Param(t, x) -> (x, t)
 
 
 rules
 
-  nam-ordered-def :
-    VarDef(t, x, _) -> <id>
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    VarDef(t, x, _) -> ( <VarDef(id, nam-annotate-def(|uri2), id)>
+                       , [Def(uri2)]
+                       , []
+                       )
+    where uri2 := [Variable(), x, subsequent__|<lookup-index-path> (Variable(), paths__)]
 
   nam-get-definition-keys :
     VarDef(t, x, _) -> [x]
 
-  nam-get-definitions :
-    VarDef(t, x, _) -> [ ( Variable()
-                         , [x, Anon(<new>)]
-                         )
-                       ]
-
-  nam-annotate-names(|paths__, path__):
-    VarDef(t, x, _) -> <VarDef(id, nam-annotate-def(|path__), id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    VarDef(t, x, _) -> <store__> DefData(
-                                   [namespace__|path__]
-                                 , Type()
-                                 , t
-                                 )
-
-  type-of :
-    VarDef(t, x, _) -> t
+  nam-ordered-def :
+    VarDef(t, x, _) -> [Variable()]
 
-  nam-unique :
-    VarDef(t, x, _) -> <id>
+  nam-get-type :
+    VarDef(t, x, _) -> (x, t)
 
 
 rules
 
-  nam-ordered-def :
-    VarDef(t, x) -> <id>
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    VarDef(t, x) -> ( <VarDef(id, nam-annotate-def(|uri3))>
+                    , [Def(uri3)]
+                    , []
+                    )
+    where uri3 := [Variable(), x, subsequent__|<lookup-index-path> (Variable(), paths__)]
 
   nam-get-definition-keys :
     VarDef(t, x) -> [x]
 
-  nam-get-definitions :
-    VarDef(t, x) -> [ ( Variable()
-                      , [x, Anon(<new>)]
-                      )
-                    ]
-
-  nam-annotate-names(|paths__, path__):
-    VarDef(t, x) -> <VarDef(id, nam-annotate-def(|path__))>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    VarDef(t, x) -> <store__> DefData(
-                                [namespace__|path__]
-                              , Type()
-                              , t
-                              )
-
-  type-of :
-    VarDef(t, x) -> t
+  nam-ordered-def :
+    VarDef(t, x) -> [Variable()]
 
-  nam-unique :
-    VarDef(t, x) -> <id>
+  nam-get-type :
+    VarDef(t, x) -> (x, t)
 
 
 rules
 
-  nam-get-uses-keys :
-    VarRef(x) -> [x]
-
-  nam-get-uses :
-    VarRef(x) -> [ (Variable(), [x])
-                 , (Field(), [x])
-                 ]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    VarRef(x) -> ( <VarRef(
+                      nam-annotate-use(
+                      | paths'__
+                      , [Variable(), Field()]
+                      )
+                    )>
+                 , []
+                 , []
+                 )
 
-  nam-annotate-names(|paths__, path__):
-    VarRef(x) -> <VarRef(nam-annotate-use(|paths__, Variable()))>
+  nam-get-use-keys :
+    VarRef(x) -> [x]
 
-  adjust-index-lookup(target__|namespace__, path__, prefix__):
-    VarRef(x) -> [ [Variable()|path__]
-                 , [Field()|path__]
+  nam-resolve(target__|):
+    VarRef(x) -> [ Regular(Variable(), x)
+                 , Regular(Field(), x)
                  ]
     where <target__> x
 
 
 rules
 
-  nam-get-uses-keys :
-    Assign(x, _) -> [x]
-
-  nam-get-uses :
-    Assign(x, _) -> [ (Variable(), [x])
-                    , (Field(), [x])
-                    ]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Assign(x, _) -> ( <Assign(
+                         nam-annotate-use(
+                         | paths'__
+                         , [Variable(), Field()]
+                         )
+                       , id
+                       )>
+                    , []
+                    , []
+                    )
 
-  nam-annotate-names(|paths__, path__):
-    Assign(x, _) -> <Assign(nam-annotate-use(|paths__, Variable()), id)>
+  nam-get-use-keys :
+    Assign(x, _) -> [x]
 
-  adjust-index-lookup(target__|namespace__, path__, prefix__):
-    Assign(x, _) -> [ [Variable()|path__]
-                    , [Field()|path__]
+  nam-resolve(target__|):
+    Assign(x, _) -> [ Regular(Variable(), x)
+                    , Regular(Field(), x)
                     ]
     where <target__> x
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    For(t, x, init, cond, stmt, body) -> ( <For(
+                                              id
+                                            , nam-annotate-def(|uri0)
+                                            , id
+                                            , nam-annotate-scope(|[uri0])
+                                            , nam-annotate-scope(|[uri0])
+                                            , nam-annotate-scope(|[uri0])
+                                            )>
+                                         , [Def(uri0)]
+                                         , []
+                                         )
+    where uri0 := [Variable(), x, Anon(<newname> "anon")|<lookup-index-path> (Variable(), paths__)]
+
   nam-get-definition-keys :
     For(t, x, init, cond, stmt, body) -> [x]
 
-  nam-get-definitions :
-    For(t, x, init, cond, stmt, body) -> [ ( Variable()
-                                           , [x, Anon(<new>)]
-                                           )
-                                         ]
-
-  nam-annotate-scopes(|path__):
-    For(t, x, init, cond, stmt, body) -> <For(
-                                            id
-                                          , id
-                                          , id
-                                          , nam-annotate-scope(|path__)
-                                          , nam-annotate-scope(|path__)
-                                          , nam-annotate-scope(|path__)
-                                          )>
-
-  nam-annotate-names(|paths__, path__):
-    For(t, x, init, cond, stmt, body) -> <For(id, nam-annotate-def(|path__), id, id, id, id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    For(t, x, init, cond, stmt, body) -> <store__> DefData(
-                                                     [namespace__|path__]
-                                                   , Type()
-                                                   , t
-                                                   )
-
-  type-of :
-    For(t, x, init, cond, stmt, body) -> t
-
-  nam-unique :
-    For(t, x, init, cond, stmt, body) -> <id>
+  nam-get-type :
+    For(t, x, init, cond, stmt, body) -> (x, t)
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    ForEach(t, x, e, body) -> ( <ForEach(
+                                   id
+                                 , nam-annotate-def(|uri1)
+                                 , id
+                                 , nam-annotate-scope(|[uri1])
+                                 )>
+                              , [Def(uri1)]
+                              , []
+                              )
+    where uri1 := [Variable(), x, Anon(<newname> "anon")|<lookup-index-path> (Variable(), paths__)]
+
   nam-get-definition-keys :
     ForEach(t, x, e, body) -> [x]
 
-  nam-get-definitions :
-    ForEach(t, x, e, body) -> [ ( Variable()
-                                , [x, Anon(<new>)]
-                                )
-                              ]
-
-  nam-annotate-scopes(|path__):
-    ForEach(t, x, e, body) -> <ForEach(id, id, id, nam-annotate-scope(|path__))>
-
-  nam-annotate-names(|paths__, path__):
-    ForEach(t, x, e, body) -> <ForEach(id, nam-annotate-def(|path__), id, id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    ForEach(t, x, e, body) -> <store__> DefData(
-                                          [namespace__|path__]
-                                        , Type()
-                                        , t
-                                        )
-
-  type-of :
-    ForEach(t, x, e, body) -> t
-
-  nam-unique :
-    ForEach(t, x, e, body) -> <id>
+  nam-get-type :
+    ForEach(t, x, e, body) -> (x, t)
 
 
 rules
 
   nam-get-scope-types :
-    Block(stmt*) -> [Variable()]
\ No newline at end of file
+    Block(stmt*) -> [ ( Variable()
+                      , Anon(<newname> "anon")
+                      , Variable()
+                      , ()
+                      )
+                    ]
+    where anon709 := Anon(<newname> "anon")
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/splitter.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/splitter.str	Thu Jul 12 09:02:23 2012	(r25188)
+++ spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/splitter.str	Thu Jul 12 09:35:52 2012	(r25189)
@@ -14,7 +14,7 @@
 rules // Splitter configuration
  
   // Enable AST splitting by analyze-top for compilation of top level units.
-  index-split = id
+  index-split = fail
   
   // Top level units
   index-is-toplevel = ?Class(_, _)

Modified: spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/types.str	Thu Jul 12 09:02:23 2012	(r25188)
+++ spoofax-contrib/separate-compilation-examples/csharp-nbl/trans/types.str	Thu Jul 12 09:35:52 2012	(r25189)
@@ -5,6 +5,7 @@
   include/CSharpPartialClassses
   lib/index-library
   lib/analysis-library
+  lib/analysis-library-internal
   names
 
 signature constructors
@@ -44,22 +45,22 @@
     VoidType() -> VoidType()
   
   type-of:
-    VarRef(f) -> <type-of> <index-lookup> f
+    VarRef(f) -> <type-of> f
   
   type-of:
-    FieldAccess(e, f) -> <type-of> <index-lookup> f
+    FieldAccess(e, f) -> <type-of> f
     
   type-of:
-    FunCall(e, m, _) -> <type-of> <index-lookup> m
+    FunCall(e, m, _) -> <type-of>  m
     
   type-of:
-    FunCall(m, _) -> <type-of> <index-lookup> m
+    FunCall(m, _) -> <type-of>  m
 
   // Lazy resolving of types because index-lookup during use analysis on data fails for imports.
   type-of:
     Type(t{[Unresolved(Class())|_]}) -> Type(name{uri})
     where
-      Def(uri) := <index-lookup> t;
+      Def(uri) :=  t;
       name := <strip-annos> t
       
   type-of:

From g.h.wachsmuth at tudelft.nl  Thu Jul 12 11:36:21 2012
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 12 Jul 2012 09:36:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25190 -
	spoofax-contrib/separate-compilation-examples/csharp-nbl/lib
Message-ID: <20120712093621.BA0C3108C004@mx3.tudelft.nl>

Author: GuidoWachsmuth
Date: Thu Jul 12 09:36:21 2012
New Revision: 25190
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25190&sc=1

Log:
corresponding libraries

Added:
   spoofax-contrib/separate-compilation-examples/csharp-nbl/lib/analysis-library-internal.str
   spoofax-contrib/separate-compilation-examples/csharp-nbl/lib/analysis-library.str
   spoofax-contrib/separate-compilation-examples/csharp-nbl/lib/compilation-library.str
   spoofax-contrib/separate-compilation-examples/csharp-nbl/lib/index-library.str

Added: spoofax-contrib/separate-compilation-examples/csharp-nbl/lib/analysis-library-internal.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/csharp-nbl/lib/analysis-library-internal.str	Thu Jul 12 09:36:21 2012	(r25190)
@@ -0,0 +1,937 @@
+module lib/analysis-library-internal
+ 
+imports
+  libstratego-lib
+  libstratego-parallel
+  lib/editor-common.generated
+  lib/analysis-library
+  lib/index-library
+
+signature
+
+  constructors // data kinds stored in the index
+
+    Type    : DefDataKind
+    Import  : DefDataKind
+    TImport : DefDataKind
+    Unique  : DefDataKind
+  
+  constructors // resolution kinds for use sites
+
+  	Regular : Namespace * Name                           -> ResolutionKind
+  	Regular : Namespace * Name * Type                    -> ResolutionKind
+  	Child   : Namespace * Name * Namespace * Name        -> ResolutionKind
+  	Child   : Namespace * Name * Namespace * Name * Type -> ResolutionKind
+  	
+  constructors // annotations used in analysis
+
+    Scope: Term -> Anno
+  
+  constructors
+  
+  // Analysis
+  Results         : AST * List(Def) * List(Use) * List(DefData) * List(Def) * List(Def) * List(File) -> Results
+  ParallelResults : AST * AST * List(Error) * List(Warning) * List(Note) * List(File) -> ParallelResults
+  
+  // Namespaces
+  Diff            : Namespace
+  ASTDiff         : Namespace
+  AST             : Namespace
+  
+  // Data
+  AST             : List(UriPart) * AST -> AST
+  
+rules // Analysis traversals
+  
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   *
+   * @internal
+   * @type List((ast, (file, subfile))) -> Results(List(ast), List(def), List(use), List(data), List(addedElem), 
+   *                                       List(removedElem), List(fileToAnalyze@(file, subfile))))
+   */
+  analyze-top-internal(|phase, language, project-path, full-path):
+    astFilePairs -> Results(asts, defs, uses, data, added, removed, filesToAnalyze)
+    with
+      // Init
+      index-setup(|language, [project-path], full-path);
+      revision := <index-start-transaction>
+    with
+      // Store old elements
+      oldElems := <filter(index-diff-constructors)> <index-get-all-in-file> full-path;
+      <index-clear-file> full-path
+    with
+      {| Index-UnresolvedSet:
+        unresolvedSet := <new-iset>;
+        rules(Index-UnresolvedSet: _ -> unresolvedSet);
+        
+        (astFilePairs2, defsList) := <map(analyze-top-defs); unzip> astFilePairs;
+        defs := <concat> defsList;
+        (astFilePairs3, dataList) := <map(analyze-top-data(|language, full-path)); unzip> astFilePairs2;
+        data := <concat> dataList;
+        (astFilePairs4, usesList) := <map(analyze-top-uses(|language, full-path)); unzip> astFilePairs3;
+        uses := <concat> usesList;
+        (asts, _) := <unzip> astFilePairs4
+      |}
+    with
+      index-end-transaction
+    with
+      // Schedule re-analysis of dependent files (if current file is not testing language file)
+      // HACK: Depends on file extension, could be other languages with .spt extension?
+      if Editor() := phase; not(<is-test-file> full-path) then
+        newElems := <conc> (defs, <filter(index-diff-constructors)> data);
+        
+        // Find added and removed definitions
+        (added, removed) := <analyze-diff> (oldElems, newElems);
+        changed := <conc> (added, removed);
+        
+        // Store files that have changed in the index
+        index-transaction(
+          filesToAnalyze := <analyze-store-diff(|changed, revision)> astFilePairs4
+        )
+      else
+        (added, removed) := ([], []);
+        filesToAnalyze := []
+      end
+    with
+      <list-loop(analyze-top-store-ast)> astFilePairs4
+
+rules  // Phase 1: scope analysis
+
+  /**
+   * Add URI annotations to each definition and unresolved annotations to each use site.
+   *
+   * @internal
+   */
+  analyze-top-defs:
+    (ast, file) -> ((ast2, file), defs)
+    with
+      <index-set-current-file> file;
+      (ast2, defs, data) := <analyze-defs> ast; 
+      <index-add-all(|file)> defs;
+      (data2, _) := <analyze-uses> data;
+      <index-add-all(|file)> data2
+  
+  /**
+   * Identifies all definitions in the tree and annotates them with their URI.
+   * Also annotates uses with a preliminary "Unresolved(pathes)" annotation, 
+   * where "pathes" maps relevant namespaces to their pathes.
+   *
+   * @internal
+   */
+  analyze-defs:
+  	ast -> (ast', defs, data) 
+  	with 
+  		def-set  := <new-iset>; 
+  		data-set := <new-iset>;
+  		ast'     := <analyze-defs(|[], Anon(<new>), def-set, data-set)> ast;
+  		defs     := <iset-elements; map(try(Snd))> def-set;
+  		data     := <iset-elements> data-set
+  	 
+  /**
+   * Special case for tree nodes which are defined as scopes at parent nodes. 
+   *
+   * @internal 
+   */
+  analyze-defs(|paths, subsequent, defs, data):
+    ast{a*} -> ast'
+    where
+  	  a'* := <split-fetch(?Scope(uri*)) ; conc> a*
+    with
+      updates := <map(!(<Hd>, <Tl;Tl>))> uri* ;
+      paths'  := <update-index-paths(|updates)> paths ;
+      ast'    := <analyze-defs(|paths', subsequent, defs, data)> ast{a'*}
+       
+  /**
+   * Default case for all other tree nodes. 
+   *
+   * Uses the following rules generated from a NBL definition:
+   *
+   * nam-get-definitions: definition sites of the current node
+   * nam-get-scope-types: namespaces scoped by the current node
+   * nam-annotate-use   : use sites of the current node
+   *
+   * @internal 
+   */
+  analyze-defs(|paths, subsequent, defs, data):
+    ast{a*} -> f#(children'){a*}
+    where 
+      not(<fetch(?Scope(_))> a*)
+    with
+      // check wether the current AST node scopes other definitions
+      // scope*: list of scope information
+      //
+      // updates the pathes for scoped namespaces
+      if scope* := <nam-get-scope-types> ast then
+      	update* := <map(construct-index-path(|paths, defs, ast))> scope*;
+        paths'  := <update-index-paths(|update*)> paths
+      else
+      	paths'  := paths
+      end;
+      // check wether the current AST node defines names
+      // ast1 : AST node with annotated definition sites and scopes
+      // def* : list of definition entries
+      // imp* : list of import entries
+      //
+      // definitions are paired with unique identifier to keep duplicates
+      if (ast', def*, imp*) := <nam-get-definitions(|paths, paths', subsequent)> ast then
+      	<iset-addlist(|<map(!(<new>, <id>))> def*)> defs;
+      	<iset-addlist(|imp*)> data
+      else
+        ast' := ast 
+      end;
+      // analyze children and annotate use sites afterwards
+      f#(children) := ast';
+      children'    := <origin-track-forced(analyze-child-defs(|paths', defs, data))> children
+      
+  /** @internal */
+  analyze-child-defs(|paths, defs, data):
+  	[] -> []
+  	
+  /** @internal */
+  analyze-child-defs(|paths, defs, data):
+  	[d|ds] -> [d'|ds']
+  	with
+      subsequent := Anon(<new>);
+  	  d'         := <analyze-defs(|paths, subsequent, defs, data)> d ;
+  	  if scopes := <nam-ordered-def> d then
+  	  	updates := <map(\scope -> (scope, [subsequent|<lookup-index-path> (scope, paths)])\)> scopes ; 
+        paths'  := <update-index-paths(|updates)> paths 
+      else
+  	    paths' := paths
+  	  end;
+  	  ds'  := <analyze-child-defs(|paths', defs, data)> ds
+
+rules // helper for phase 1
+	 
+  /** @internal */
+  construct-index-path(|paths, defs, ast):
+    (ns, name, scope-type, unique) -> (scope-type, path'')
+    with
+      path  := <lookup-index-path> (ns, paths);
+      path' := <index-do-adjust-path(|scope-type, path, name)> ast;
+      if () := unique then
+      	path'' := path'
+      else
+      	path'' := <index-do-adjust-path(|scope-type, path', unique)> ast;
+      	<iset-add(|DefData([scope-type| path'], Unique(), path''))> defs
+      end
+  
+  update-import(|source, paths):
+  	namespace -> DefData([namespace | path], Import(), source)
+  	with
+  	  path := <lookup-index-path> (namespace, paths)
+  	  
+  /** @internal */
+  update-index-paths(|updates) = 
+    remove-all({key: Fst => key; <fetch-elem(Fst => key)> updates}); 
+    at-end(!updates)
+  
+  /** @internal */
+  lookup-index-path = 
+    lookup' <+ ![]
+ 
+  /** 
+   * Kept for backward compatibility.
+   *
+   * @internal 
+   */
+  index-do-adjust-path(|namespace, path, scope) =
+    adjust-index-path(origin-equal(|scope)|namespace, path) <+ ![scope|path]
+
+rules // interface to NBL generator for phase 1
+	
+  /** @internal */
+  nam-get-definitions(|paths, paths', subsequent) 
+    = fail
+
+  /** 
+   * Callback for nam-get-definitions
+   *
+   * @internal */ 
+  nam-annotate-def(|uris):
+    t{a*} -> t{uris, a*}
+  
+  /** 
+   * Callback for nam-get-definitions
+   *
+   * @internal */ 
+  nam-annotate-scope(|paths):
+    t -> t{Scope(paths)}
+  
+  /** @internal */ 
+  nam-get-scope-types 
+     = fail
+  
+  /** @internal */
+  nam-annotate-uses(|paths) 
+     = fail
+  
+  /**
+   * Callback for nam-get-definitions (imports) and nam-annotate-uses
+   * 
+   * @internal 
+   */ 
+  nam-annotate-use(|paths, namespace*):
+    t{a*} -> t{Unresolved(<filter(nam-is-relevant(|namespace*))> paths), a*}
+    
+  nam-is-relevant(|namespace*):
+  	(ns, _) -> <id> where <fetch-elem(?ns)> namespace*
+ 
+  /** @internal */ 
+  nam-ordered-def 
+     = fail
+
+rules // Phase 2: type analysis of definition sites     
+
+  /**
+   * Gathers all data for each definition.
+   *
+   * @internal
+   */
+  analyze-top-data(|language, full-path):
+    (ast, file) -> ((ast2, file), data2)
+    with
+      <index-set-current-file> file;
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Gather all data for each definition.
+        ast2 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast; // Parent pointers needed.
+        data := <origin-track-forced(analyze-data)> ast2;
+        
+				// Resolve all references in gathered data.
+				(data2, _) := <analyze-uses> data;
+				<index-add-all(|file)> data2;		
+        // Store reads into the index (if not testing language)
+        if not(is-test-input(|language, full-path)) then
+          <index-add-all(|file)> <iset-elements> readSet
+        end
+      |}
+
+ /**
+   * Collects all index data (e.g. types of definitions).
+   *
+   * @internal
+   */
+  analyze-data:
+    ast -> types
+    with
+      set := <new-iset>;
+      <topdown(try(analyze-type(|set)); analyze-data-part(|set))> ast;
+      types := <iset-elements> set
+      
+  /** @internal */
+  analyze-type(|set):
+    ast -> ast
+    where
+      (_{uri}, type) := <nam-get-type> ast;
+      <iset-add(|DefData(uri, Type(), type))> set
+      
+  /** @internal */
+  analyze-data-part(|set):
+    ast -> ast
+    where
+      if keys := <nam-get-definition-keys> then
+      	<list-loop(do-adjust-index-def-data(|set, ast))> keys
+      end
+
+rules // helper for phase 2
+	 
+  /**
+   * Kept for backward compability and possibly additional data.
+   * 
+   * @internal 
+   */
+  do-adjust-index-def-data(|set, ast):
+  	key -> key
+  	where
+      if 
+        _{[ns|path]} := key; 
+        result       := <adjust-index-def-data(store-index-data-results(|set) |ns, path)> ast 
+      then
+         <fatal-err(|"Unexpected result from adjust-index-def-data; should call <store-results>")> result
+      end
+  
+  /** @internal */
+  store-index-data-results(|set):
+    t -> <fail>
+    where
+      if is-list then
+        <iset-addlist(|t)> set
+      else
+        <iset-add(|t)> set
+      end
+
+rules // interface to NBL generator for phase 2
+	
+  /** @internal */
+  nam-get-definition-keys
+    = fail
+
+  /** @internal */
+  nam-get-type
+    = fail
+
+rules // Phase 3: resolution of use sites     
+
+  /**
+   * Resolves all unresolved references for each use site.
+   *
+   * @internal
+   */
+  analyze-top-uses(|language, full-path):
+    (ast, file) -> ((ast3, file), uses)
+    with
+      <index-set-current-file> file;
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Resolve all unresolved references for each use site.
+        (ast2, uses) := <analyze-uses> ast;
+        <index-add-all(|file)> uses;
+        
+        ast3 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast2; // AST changed, reset parent pointers.
+        
+        // Store reads into the index (if not testing language)
+        if not(is-test-input(|language, full-path)) then
+          <index-add-all(|file)> <iset-elements> readSet
+        end
+      |}
+
+  /**
+   * Analyze all uses, changing their preliminary "Unresolved(_)" annotation 
+   * to an URI of their definition.
+   *
+   * @internal
+   */
+  analyze-uses:
+    ast -> (ast', uses)
+    with
+    	use-set := <new-iset>;
+    	ast'    := <bottomup(try(analyze-use(|use-set)))> ast;
+    	uses    := <iset-elements ; map(Snd)> use-set
+  
+  analyze-use(|uses):
+  	ast -> ast'
+    where
+      _{Unresolved(paths)} := ast;
+      origin               := <origin-term> ast;
+      resolution*          := <repeat-until(prim("SSL_EXT_get_parent", <id>), nam-resolve(origin-equal(|ast)))> origin;
+      if 
+        COMPLETION(_) := ast 
+      then
+        ast' := ast{<filter(index-complete(|paths, ast)); concat> resolution*}
+      else
+        Def(def-uri) := <fetch-elem(index-resolve(|paths, ast))> resolution*;
+        ast'         := ast{def-uri};
+        <iset-add(|(<new>, Use(def-uri)))> uses
+      end
+
+rules // resolution rules for phase 3
+	
+  index-resolve(|paths, target):
+  	Regular(ns, name) -> <index-lookup-name> (ns, name', path)
+  	where
+  	  name' := <strip-annos> name;
+  	  path  := <lookup-index-path> (ns, paths)
+  	  
+  // TODO take type into account
+  index-resolve(|paths, target):
+  	Regular(ns, name, type) -> <index-lookup-name> (ns, name', path)
+  	where
+  	  name' := <strip-annos> name;
+  	  path  := <lookup-index-path> (ns, paths)
+  
+  index-resolve(|paths, target):
+  	Child(ns, name, pns, parent) -> <index-lookup-child-name> (ns, name', pns, path)
+  	where
+  	  name'           := <strip-annos> name;
+  	  Def([pns|path]) := <index-resolve(|paths, parent)> Regular(pns, parent)
+  	  
+  // TODO take type into account
+  index-resolve(|paths, target):
+   	Child(ns, name, pns, parent, type) -> <index-lookup-child-name> (ns, name', pns, path)
+  	where
+  	  name'           := <strip-annos> name;
+  	  Def([pns|path]) := <index-resolve(|paths, parent)> Regular(pns, parent)
+
+rules // completion rules for phase 3
+
+  index-complete(|paths, target):
+  	Regular(ns, COMPLETION(name)) -> <index-lookup-prefix> (ns, name, path)
+  	where
+  	  path := <lookup-index-path> (ns, paths)
+
+  // TODO take type into account??
+  index-complete(|paths, target):
+  	Regular(ns, COMPLETION(name), type) -> <index-lookup-prefix> (ns, name, path)
+  	where
+  	  path := <lookup-index-path> (ns, paths)
+
+  index-complete(|paths, target):
+  	Child(ns, COMPLETION(name), pns, parent) -> <index-lookup-child-prefix> (ns, name, path)
+  	where
+  	  path := <lookup-index-path> (ns, paths)
+
+  // TODO take type into account??
+  index-resolve(|paths, target):
+  	Child(ns, COMPLETION(name), pns, parent, type) -> <index-lookup-child-prefix> (ns, name, path)
+  	where
+  	  path := <lookup-index-path> (ns, paths)
+
+rules // name-based lookup, first result
+	
+  index-lookup-element =
+  	index-uri => [ns, name|path] ; <index-lookup-name> (ns, name, path)
+  
+  index-lookup-child-name:
+  	(ns, name, path) -> <index-lookup-child(index-first-name(|name))> [ns|path]
+  
+  index-lookup-name:
+  	(ns, name, path) -> <index-lookup(index-first-name(|name))> [ns|path]
+  	
+  index-lookup-local-name:
+  	(ns, name, path) -> <index-lookup-local(index-first-name(|name))> [ns|path]
+  
+  index-lookup-imported-name:
+  	(ns, name, path) -> <index-lookup-imported(index-first-name(|name))> [ns|path]
+
+rules // name-based lookup, all results
+	
+  index-lookup-all-element =
+  	index-uri => [ns, name|path] ; <index-lookup-all-name> (ns, name, path)
+  
+  index-lookup-children-name:
+  	(ns, name, path) -> <index-lookup-child(index-all-name(|name))> [ns|path]
+  
+  index-lookup-all-name:
+  	(ns, name, path) -> <index-lookup(index-all-name(|name))> [ns|path]
+  	
+  index-lookup-all-local-name:
+  	(ns, name, path) -> <index-lookup-local(index-all-name(|name))> [ns|path]
+  
+  index-lookup-all-imported-name:
+  	(ns, name, path) -> <index-lookup-imported(index-all-name(|name))> [ns|path]
+	
+rules // prefix-based lookup
+	 	
+  index-lookup-child-prefix:
+  	(ns, prefix, path) -> <index-lookup-child(index-all-prefix(|prefix))> [ns|path]
+  
+  index-lookup-prefix:
+  	(ns, prefix, path) -> <index-lookup-all(index-all-prefix(|prefix))> [ns|path]
+  	
+  index-lookup-local-prefix:
+  	(ns, prefix, path) -> <index-lookup-local(index-all-prefix(|prefix))> [ns|path]
+  
+  index-lookup-imported-prefix:
+  	(ns, prefix, path) -> <index-lookup-imported(index-all-prefix(|prefix))> [ns|path]
+	
+rules // generic lookups
+	
+  index-lookup-child(select) = 
+  	index-unique-path ; index-lookup-local(select)
+  	
+  // extends path with its unique extension
+  index-unique-path:
+  	[ns|path] -> [ns|<index-get-value <+ !path> DefData([ns|path], Unique(), ())] 	
+  	  
+  // path -> list of selected children
+  index-lookup-local(select):
+  	ns-path -> definition
+  	where
+  	  candidate* := <prim("LANG_index_get_children", Def(ns-path))>;
+  	  definition := <select> candidate*
+  
+  // path -> list of selected imports
+  index-lookup-imported(select) =
+  	index-import-paths; 
+    select 
+  
+  // performs a lookup in current and enclosing scopes
+  // stops on first result
+  // considers imports
+  index-lookup(select) =
+  	index-lookup-local(select) <+
+  	index-lookup-imported(fetch-elem(index-lookup-local(select))) <+
+  	([id|Tl]; index-lookup(select))
+
+  // performs a lookup in current and enclosing scopes
+  // combines the results
+  // considers imports
+  index-lookup-all(select):
+  	p -> [local*, imported*, scoped*]
+  	where
+  	  local*    := <index-lookup-local(select)> p;
+  	  imported* := <index-lookup-imported(filter(index-lookup-local(select))); concat> p;
+  	  scoped*   := <([id|Tl]; index-lookup-all(select)) <+ ![]> p
+  		
+rules // helper for imports
+	
+  index-import-paths = MkSingleton ; index-import-paths(|[], [])
+   
+  /**
+   * Finds all import paths.
+   * 
+   * i*: accumulator for the result
+   * t*: already analyzed paths
+   *
+   * list of paths to consider -> list of all import paths
+   *
+   * @internal
+   */
+  index-import-paths(|i*, t*): 
+  	[] -> i*
+  
+  index-import-paths(|i*, t*): 
+  	[p|p*] -> p'*
+    where
+      [ns|path] := p;
+      if <elem> (p, t*) then
+      	p'* := <index-import-paths(|i*, t*)> p*
+      else
+      	i'* := <indexlib-get-all-values; map(index-uri; [!ns|id]; index-unique-path)> DefData(p, Import(), ());
+      	t'* := <indexlib-get-all-values; map(index-uri; [!ns|id]; index-unique-path)> DefData(p, TImport(), ());
+      	p'* := <index-import-paths(|[i*, i'*], [p, t*])> [p*, t'*]
+      end
+
+rules // low-level comparisons
+
+  index-first-name(|name) = 
+  	fetch-elem(index-compare-name-equal(|name))
+ 
+  index-all-name(|name) = 
+  	filter(index-compare-name-equal(|name))
+ 
+  index-all-prefix(|prefix) =
+  	filter(index-compare-name-substring(|prefix))
+ 
+   /**
+   * Compares given element (with an URI) to given name using string equality comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-equal(|name) =
+    where(
+      ?Def([_,<id>|_]); 
+      SRTS-EXT-eq-ignore-annos(|name)
+    )
+ 		   
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-substring(|prefix) =
+  	where (
+  	  ?Def([_,<id>|_]); 
+      is-substring(!prefix)
+    )
+      
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison and given namespace.
+   * 
+   * @internal 
+   */      
+  index-compare-name-substring(|prefix, namespace) =
+    where (
+      ?Def([ns,name|_]); 
+      <eq> (namespace, ns);
+      <is-substring(!prefix)> name
+   )
+   
+rules // interface to NBL generator for phase 3
+	
+  /** @internal */
+  nam-get-uses 
+    = fail
+  
+  /** @internal */
+  nam-resolve(target) 
+    = fail
+
+rules // Final: storing analyzed AST
+	     
+  /**
+   * Stores AST from file to the index.
+   *
+   * @internal
+   */   
+  analyze-top-store-ast:
+    (ast, file) -> <id>
+    with
+      <index-set-global(|<conc> (<index-file-to-uri> file, ["ast"]))> ast
+        		      
+rules // Parallel analysis
+  
+  /** @internal */
+  index-parallel-analyze(analyze):
+    files -> allResults
+    with
+      map(index-parse-file); // Parsing cannot be done in parallel.
+      map(\(ast, file) -> (ast, file, <project-path>)\);
+      parallel-unordered(all(index-analyze(analyze)));
+      ?results;
+      with(<eq> (<length> results, <length> files) | "Input size not equal to output size");
+      filesToAnalyze := <make-set> <mapconcat(?ParallelResults(_, _, _, _, _, <id>))> results;
+      if not([] := filesToAnalyze) then
+        allResults := <concat> [results, <index-parallel-analyze(analyze)> filesToAnalyze]
+      else
+        allResults := results
+      end
+  
+  /** @internal */   
+  index-parse-file:
+    file -> (ast, file)
+    with
+    if <file-exists> file then
+      ast := <parse-file> file
+    else
+      ast := ()
+    end
+   
+  /** @internal */   
+  index-set-markers:
+    ParallelResults(ast, ast', errors, warnings, notes, diffs) -> <id>
+    with
+      <set-markers(|ast)> (ast', errors, warnings, notes)
+      
+  /** @internal */
+  index-analyze(analyze):
+    (ast, path, project-path) -> ParallelResults(ast, ast', errors, warnings, notes, filesToAnalyze)
+    with
+      (ast', errors, warnings, notes, filesToAnalyze) := <analyze>;
+      if [] := filesToAnalyze then
+        complete-work-unit
+      end
+      
+/** @internal */
+rules // Splitter
+  
+  /** @internal */
+  index-split = fail
+  /** @internal */
+  index-is-toplevel = fail
+  /** @internal */
+  index-is-qualifier = fail
+  /** @internal */
+  index-qualifier-subelements = fail
+  /** @internal */
+  index-create-qualifier(|qualifier) = fail
+  
+  /** @internal */
+  index-toplevel-split:
+    ast -> asts'
+    with
+      (ast', _) := <analyze-defs> ast;
+      asts      := <index-toplevel-split-internal> ast';
+      asts'     := <strip-annos> asts
+      
+  /** @internal */
+  index-toplevel-split-internal:
+    node -> units
+    with
+      switch id
+        case ?():
+          units := [((), [])]
+        case index-is-qualifier:
+          elems := <mapconcat(index-toplevel-split-internal)> <index-qualifier-subelements> node;
+          units := <map(index-transform-qualifier(|node))> elems
+        case index-is-toplevel:
+          units := [(node, <index-uri> <nam-get-definition-keys; Hd> node)]
+        otherwise:
+          units := [(node, [])]
+      end
+      
+  /** @internal */
+  index-transform-qualifier(|node):
+    (elem, subfileName) -> (qualifier, subfileName)
+    with
+      qualifier := <index-create-qualifier(|node)> elem
+
+/** @internal */
+rules // Diffs
+  
+  /** @internal */
+  analyze-diff:
+    (defs1, defs2) -> (added, removed)
+    with
+      added   := <diff(index-diff-compare)> (defs2, defs1);
+      removed := <diff(index-diff-compare)> (defs1, defs2)
+    
+  /** @internal */
+  analyze-store-diff(|changedEntries, revision): 
+    astFilePairs -> analyzeFiles'
+    with
+      changedFiles    := <mapconcat(index-get-files-of)> changedEntries;
+      dependentFiles  := <index-get-dependent-files> changedEntries;
+      
+      // Files to analyze
+      analyzeFiles := <make-set> <remove-all(fake-file)> dependentFiles;
+      analyzeFiles' := analyzeFiles;
+      // TODO: Is this extra check needed?
+      /*if <getfirst(index-get-file-revision; \r -> (r, revision)\; gt)> analyzeFiles then
+        // Add current file if the current file has read information from another file with a higher revision.
+        // This indicates that potentially outdated information was read.
+        analyzeFiles' := [file|analyzeFiles]
+      else
+        analyzeFiles' := analyzeFiles
+      end;*/
+      
+      // Files to compile
+      changedAstFiles := <filter(analyze-astdiff)> astFilePairs;
+      compileFiles := <make-set> <concat> [analyzeFiles', changedFiles, changedAstFiles];
+      // TODO: Optimize so that there are no duplicate files stored in the index, use iset?
+      <map(analyze-add-compilediff)> compileFiles
+      
+  /** 
+   * Checks if ast for given file has changed. Succeeds if old ASTDiff is not found or if ASTDiff is different.
+   *
+   * @internal
+   */
+  analyze-astdiff:
+    (ast, file) -> file
+    where
+      name := <conc> (<index-file-to-uri> file, ["ast-checksum"]);
+      newChecksum := <checksum> ast;
+      if oldChecksum := <index-get-global(|name)> then
+        <index-set-global(|name)> newChecksum;
+        not(<eq> (oldChecksum, newChecksum))
+      else
+        <index-set-global(|name)> newChecksum
+      end
+      
+  /** 
+   * Adds given file to the list of files to compile.
+   *
+   * @internal
+   */
+  analyze-add-compilediff = index-add-global(|"compile-diff")
+  
+  /** 
+   * Gets the list of files to compile, and then clear it.
+   *
+   * @internal
+   */
+  analyze-get-compilediffs = index-get-all-globals(|"compile-diff"); index-clear-global(|"compile-diff")
+             
+rules // URI and value projections
+       
+  /** @internal */
+  index-uri-impl:
+    Def(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    Use(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    Read(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    x{[namespace | path]} -> [<index-namespace-unwrap> namespace | path]
+ 
+  /**
+   * TODO: Should second part of ReadWildcard be included in the URI, between namespace and path?
+   * 
+   * @internal 
+   */
+  index-uri-impl:
+    ReadWildcard(uri, _) -> uri
+
+  /** @internal */
+  index-value-impl:
+    Def(value) -> value
+
+  /** @internal */
+  index-value-impl:
+    Use(value) -> value
+
+  /** @internal */
+  index-value-impl:
+    Read(value) -> value
+  
+  /** @internal */
+  index-value-impl:
+    ReadWildcard(_, value) -> value
+    
+rules // Internal helpers
+
+  /**
+   * Tests if the current file is just a testing language input
+   *
+   * @internal
+   */
+  is-test-file = 
+    string-ends-with(|".spt")
+  /** @internal */
+  is-test-language = 
+    ?"Spoofax-Testing"
+  /** @internal */
+  is-test-input(|language, path) = 
+    <is-test-language> language <+ <is-test-file> path
+      
+  /** @internal */
+  fake-file = 
+    is-test-file <+ index-is-fake-file
+  
+  /** @internal */
+  ast-uri-to-ast-file(|full-path):
+    (ast, uri) -> (ast, (full-path, uri))
+   
+  /** @internal */    
+  index-readwildcard-substring(|prefix):
+    ReadWildcard(_, name) -> <id>
+    where <is-substring(!prefix)> name
+  
+  /** @internal */  
+  store-wildcard-read(|namespace, path, prefix):
+    children -> <id>
+    with
+      if set := <Index-ReadSet> then
+        if 1 := <length> children then
+          // HACK: This solves the problem of ReadWildcards making too many files re-analyze, but this should
+          // be handled in the index primitives instead.
+          <iset-add(|Read([namespace, prefix|path]))> set
+        else
+          <iset-add(|ReadWildcard([namespace|path], prefix))> set
+        end
+      end
+  
+  /** @internal */    
+  index-is-unresolved(|x, uri) = 
+    Index-UnresolvedSet; (iset-contains(|(x, uri)) <+ fail)
+  /** @internal */
+  index-add-unresolved(|x, uri) = 
+    (Index-UnresolvedSet; iset-add(|(x, uri))) <+ id
+  
+  /** @internal */
+  index-file-dependent-construct: 
+    uri -> <conc> (uses, reads)
+    with
+      uses := <index-get-uses-all> Def(uri);
+      reads := <index-get-reads-all> Def(uri)
+  
+  /** @internal */  
+  index-file-dependency-filter = 
+    ?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_)
+ 
+  /** @internal */
+  index-eq(|namespace, expected) =
+    where(
+      ?Def([_, name | _]);
+      <SRTS-EXT-eq-ignore-annos(|expected)> name
+    )
+  
+  /** @internal */
+  external SRTS-EXT-eq-ignore-annos(|t)
+  
+  /** @internal */
+  index-key-unwrap = 
+    \key{uri} -> key{<index-uri-unwrap> uri}\ <+ id
+    

Added: spoofax-contrib/separate-compilation-examples/csharp-nbl/lib/analysis-library.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/csharp-nbl/lib/analysis-library.str	Thu Jul 12 09:36:21 2012	(r25190)
@@ -0,0 +1,463 @@
+module lib/analysis-library
+ 
+imports
+  libstratego-lib
+  libstratego-parallel
+  lib/editor-common.generated
+  lib/analysis-library-internal
+  lib/index-library
+ 
+signature constructors
+ 
+  // Analyze constructors
+  Editor      : AnalysisPhase
+  Compile     : AnalysisPhase
+ 
+  // Index elements
+  Def          : List(UriPart) -> Summary
+  Use          : List(UriPart) -> Summary
+  BadUse       : List(UriPart) -> Summary
+  Read         : List(UriPart) -> Summary
+  ReadWildcard : List(UriPart) * String -> Summary
+  Diff         : List(UriPart) * List(Summary) -> Summary
+  
+  // Adjust lookup actions
+  StopLookup   : LookupAction
+  
+rules // Index analysis extension points
+ 
+  type-of = fail
+  
+  /**
+   * Extension point. Override this rule to adjust how the index analysis looks up use sites to definitions.
+   *
+   * The overriden rule must return a list that contains any of the following items:
+   *   - Def(uri)         : A definition with exactly this URI has been found. This tells the lookup to resolve the
+   *                        use site to this definition.
+   *   - [namespace|path] : This tells the lookup to do a new lookup at the given namespace and path.
+   * 
+   * Returning multiple of these in the list is allowed, these will all show up during content completion and possibly
+   * other custom strategies. If multiple items are returned during reference resolving for example, the first item
+   * will be used.
+   *
+   * If the lookup has failed, for example your custom rule cannot find any definitions, you can also return 
+   * StopLookup() instead of a list. This tells the lookup algorithm to stop any further lookups for this use site.
+   * This can be useful to stop lookups for recursive expressions like property access, preventing a lot of useless
+   * lookups that will always fail anyway.
+   *
+   * Extension example:
+   *   adjust-index-lookup(check-target-name|namespace, path, prefix):
+   *     PropAccess(exp, name) -> properties
+   *     where
+   *       <check-target-name> name
+   *     with
+   *       if TYPE(type{_}) := <type-of> exp then
+   *         properties := <index-lookup-children(|Property(), prefix)> type
+   *       else
+   *         properties := StopLookup()
+   *       end
+   *
+   *   adjust-index-lookup(check-target-name|namespace, path, prefix):
+   *     Var(name) -> [[Var() | path], [Property() | path]]
+   *     where
+   *       <check-target-name> name
+   *
+   * @param check-target-name   A strategy that should be used to check if the name of the current element is what the
+   *                            lookup algorithm is looking for.
+   * @param namespace           The namespace of the element that should be looked up.
+   * @param path                The path the lookup algorithm is currently looking at for the element.
+   * @param prefix              The prefix name of the element the lookup algorithm is looking for. This is usually the
+   *                            full name of the element, but could be a partial prefix during content completion.
+   * @type def -> List(Def(uri) or [namespace|path]) or StopLookup()
+   */
+  adjust-index-lookup(check-target-name|namespace, path, prefix) = fail
+    
+  /** 
+   * Extension point. Override this rule to store data about definitions in the index. Should call <store-results> on 
+   * a (list of) data that must be stored in the index.
+   *
+   * Note that store-results always fails, this is a trick to make every adjust-index-def-data override always fail so 
+   * that every overriden rule is called once for each definition. This can lead to unexpected behaviour when trying to 
+   * store multiple items by calling store-results in a map or filter! Be sure to always let your adjust-index-def-data 
+   * rule fail if you are doing a <filter(store-results)> for example.
+   *
+   * Extension example:
+   *   adjust-index-def-data(store-results|namespace, path):
+   *     def -> <store-results> Type([namespace|path], type)
+   *     where
+   *       type := <type-of> def
+   *
+   * @param store-results Call this on the data you want to store in the index.
+   * @param namespace     The namespace of the definition that the rule is being called on.
+   * @param path          The path of the definition that the rule is being called on.
+   * @type def -> fail 
+   */
+  adjust-index-def-data(store-results|namespace, path) = fail
+  
+  /**
+   * Extension point. Override this rule to adjust how the index assigns a namespace and path (URI) to definitions and
+   * use sites. Should return a path that will be assigned to the definition or use site.
+   *
+   * Extension example:
+   *   adjust-index-path(check-target-definition|namespace, path):
+   *     Start(_, _) -> [<string-replace(|<project-path>, "")> <Fst> <index-get-current-file>]
+   *
+   *
+   * @param check-target-definition 
+   * @param namespace               The namespace that would be given to the current definition or use site.
+   * @param path                    The path that would be given to the current definition or use site.
+   * @type def -> uri@[namespace|path]
+   */
+  adjust-index-path(check-target-definition|namespace, path) = fail
+  
+  /**
+   * Extension point. Override this rule to define index-stored constructors to check for difference during analysis.
+   * The index-diff-compare extension point is used to do the actual comparison. Defaults to Def constructs.
+   *
+   * Extension example:
+   *   index-diff-constructors = ?Type(_, _)
+   *
+   * @type a -> ?a
+   *
+   * @see index-diff-compare
+   */
+  index-diff-constructors = 
+    ?Def(_)
+  
+  /**
+   * Extension point. Override this rule to define a custom comparison of two index elements. It should fail if they 
+   * are not equal and return the indentity if they are equal. Only constructors defined by index-diff-constructors are
+   * compared.
+   *
+   * Extension example:
+   *   index-diff-compare:
+   *     (Type(u1, v1), Type(u2, v2)) -> <id>
+   *     where
+   *       <index-uri-eq> (u1, u2);
+   *       <eq> (v1, v2)
+   *
+   * @type (a, b) -> ?(a, b)
+   *
+   * @see index-diff-constructors
+   */
+  index-diff-compare:
+    (Def(u1), Def(u2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2)
+ 
+rules // Analysis traversals
+  
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   * Defaults to Editor() phase.
+   *
+   * @param language  The name of the language that is being analysed.
+   *
+   * @type (ast, path, project-path) -> (ast', List(fileToAnalyze@(file, subfile)))
+   *
+   * @see analyze-top(|phase, language)
+   */
+  analyze-top(|language):
+    (ast, path, project-path) -> <analyze-top(|Editor(), language, path, project-path)> ast
+   
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   *
+   * @param phase         The type of analysis phase. There are 2 phases to choose from:
+   *                      - Editor():   File dependencies are analysed.
+   *                      - Compile():  File dependencies are not analysed.
+   * @param language      The name of the language that is being analysed.
+   * @param path          The path of the file to analyze relative to project-path.
+   * @param project-path  The path of the directory that contains all the source files.
+   * @type ast -> (ast', List(fileToAnalyze@(file, subfile)))
+   *
+   * @see analyze-top-internal(|phase, language, project-path, full-path)
+   */
+  analyze-top(|phase, language, path, project-path):
+    ast -> (ast', filesToAnalyze)
+    with
+      full-path := $[[project-path]/[path]];
+      if index-split then
+        index-setup(|language, [project-path], full-path); // Set up the index, splitting may require index calls.
+        asts := <index-toplevel-split> ast;
+        astsFilePairs := <map(ast-uri-to-ast-file(|full-path))> asts;
+        Results(ast', _, _, _, _, _, filesToAnalyze) := 
+          <analyze-top-internal(|phase, language, project-path, full-path)> astsFilePairs
+      else
+        Results(asts, _, _, _, _, _, filesToAnalyze) := 
+          <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, full-path)];
+        ast' := <Hd> asts
+      end
+  
+rules // Parallel analysis
+  
+  /**
+   * Does a parallel analysis of given files using the specified analysis strategy. Automatically does parallel
+   * analysis of dependent files that have changed during the analysis.
+   *
+   * Example:
+   *   <index-parallel-analyze-files(analyze)> ["text/file1.ext", "text/file2.ext"]
+   *
+   * @param analyze (ast, path, project-path) -> (ast', errors, warnings, notes, filesToAnalyze). Strategy that 
+   *                analyzes a file using the index. Gets a (ast, path, project-path) tuple as input and must return 
+   *                a (ast', errors, warnings, notes, filesToAnalyze) tuple as output.
+   * @type List((file, subfile) or file) -> None()
+   */
+  index-parallel-analyze-files(analyze):
+    files -> None()
+    with
+      length; 
+      set-total-work-units
+    with
+      index-parallel-analyze(analyze);
+      filter(not(?ParallelResults((), (), _, _, _, _) <+ ?ParallelResults((), [()], _, _, _, _)); index-set-markers)
+
+rules // Splitter
+  
+  /**
+   * Merges a top level definition back into an AST using splitter rules.
+   *
+   * @param toplevel  The top level definition to merge back into the given AST.
+   * @type ast -> ast'
+   */
+  index-merge-ast(|toplevel):
+    term -> merged
+    with
+      if <is-list> term then
+        [first-ast|_] := term;
+        merged        := <index-merge-ast(|toplevel)> first-ast
+      else
+        if <index-is-qualifier> term then
+          [elem|_]    := <index-qualifier-subelements> term;
+          merged      := <index-create-qualifier(|term)> <index-merge-ast(|toplevel)> elem
+        else
+          merged      := toplevel
+        end
+      end
+  
+rules // Query primitives
+ 
+  /**
+   * Gets all DefData entries that match the kind of data and URI in given definition.
+   *
+   * Example:
+   *   <index-get-data(|Type())> Def([Entity(), "Bar"]) => [DefData([Entity(), "Bar"], Type(), TYPE("Bar")), ...]
+   *
+   * @param kind Only data of this kind is returned.
+   * @type Def(uri) -> List(DefData(uri, kind, value))
+   */
+  index-get-data(|kind):
+    <with(?Def(uri) | "Def expected")> -> <index-get-value> DefData(uri, kind, ())
+      
+  /**
+   * Gets all data entries that match the kind of data and URI in given definition.
+   *
+   * Example:
+   *   <index-get-data-all(|Type())> Def([Entity(), "Bar"]) => [TYPE("Bar"), ...]
+   *
+   * @param kind Only data of this kind is returned.
+   * @type Def(uri) -> List(value)
+   */
+  index-get-data-all(|kind):
+    <with(?Def(uri) | "Def expected")> -> <index-get-all-values> DefData(uri, kind, ())
+     
+  /**
+   * Gets all Use entries that match the URI in given definition.
+   *
+   * Example:
+   *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"]), ...]
+   *
+   * @type Def(uri) -> List(Use(uri))
+   */
+  index-get-uses-all:
+    <with(?Def(uri) | "Def expected")> -> <index-get-all> Use(uri)
+     
+  /**
+   * Gets all Read or ReadWildcard entries that match the given template.
+   *
+   * Example:
+   *   <index-get-reads-all> [Property(), "Bar", "p"] => [Read([Property(), "Bar", "p"]), ...]
+   *
+   * @type Def(uri) -> List(Read(uri) or ReadWildcard(uri, prefix))
+   */
+  index-get-reads-all:
+    template -> <conc> (reads, readwildcards')
+    where
+      uri   := <index-uri> template;
+      reads := <index-get-all> Read(uri);
+      if !uri => [namespace, prefix | path-parent] then
+        readwildcards  := <index-get-all> ReadWildcard([namespace | path-parent], ());
+        readwildcards' := <filter(index-readwildcard-substring(|prefix))> readwildcards
+      else
+        readwildcards' := []
+      end
+ 
+  /**
+   * Get all index entries that match the given template.
+   *
+   * Example:
+   *   <index-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type template -> List(elem)
+   */
+  index-get-all:
+    template -> <indexlib-get-all> template
+      with
+       if set := <Index-ReadSet> then
+         uri := <index-uri>;
+         <iset-add(|Read(uri))> set
+       end
+       
+  /**
+   * Get all values of index entries that match the given template.
+   *
+   * Example:
+   *   <index-get-all-values> DefData([Property(), "s"], Type(), ()) => [TYPE("String"), ...]
+   *
+   * @type template -> List(value)
+   *
+   * @see index-value
+   */
+  index-get-all-values:
+    template -> <map(index-value)> <index-get-all> template
+       
+  /**
+   * Get the first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <index-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   *
+   * @type template -> ?elem
+   */
+  index-get:
+    template -> <?[<id>|_]> <index-get-all> template
+      
+  /**
+   * Get the value of first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <index-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
+   *
+   * @type template -> ?value
+   *
+   * @see index-value
+   */
+  index-get-value:
+    template -> <index-value> <?[<id>|_]> <index-get-all> template
+
+  /**
+   * Gets a set of all files that have a reference to the given index entries.
+   *
+   * Example:
+   *   <index-get-referenced-files(\uri -> [Read(uri), Use(uri, [])]\)> [Def([Entity(), "Bar"]), ...] => 
+   *     [("fullpath/otherfile.ext", "subfile"), ...]
+   *
+   * @param construct-from-uri  uri -> List(elements). Construction strategy that creates a list of reference 
+   *                            constructs from all given entries, such as \uri -> [Read(uri), Use(uri, [])]\
+   * @type List(elem) -> List((file, subfile))
+   */
+  index-get-referenced-files(construct-from-uri):
+    entries -> files
+    where
+      uris        := <filter(index-uri)> entries;
+      referenced  := <concat> <filter(construct-from-uri)> uris;
+      files       := <iset-elements> <iset-addlist(|<mapconcat(index-get-files-of)> referenced)> <new-iset>
+ 
+  /**
+   * Convenience function for finding files with Read and Use dependencies to the given definitions.
+   *
+   * Example:
+   *   <index-get-dependent-files> [Def([Entity(), "Bar"]), ...] => [("fullpath/otherfile.ext", "subfile"), ...]
+   *
+   * @type List(elem) -> List((file, subfile))
+   *
+   * @see index-get-referenced-files(construct-from-uri)
+   * @see index-file-dependent-construct
+   */
+  index-get-dependent-files = 
+    index-get-referenced-files(index-file-dependent-construct)
+           
+rules // Index utilities
+  
+  /**
+   * Gets the namespace part of the URI for given key (term{uri} element).
+   *
+   * Example:
+   *   <index-uri-namespace> "Bar"{[Entity(), "Bar", "Baz"]} => Entity()
+   *
+   * @type "name"{uri@[namespace|path]} -> namespace
+   */
+  index-uri-namespace:
+    x{[namespace|path]} -> <index-namespace-unwrap> namespace
+
+  /**
+   * Gets the path part of the URI for given key (term{uri} element). Resolves it if unresolved.
+   *
+   * Example:
+   *   <index-uri-path> "Bar"{[Entity(), "Bar", "Baz"]} => ["Bar", "Baz"]
+   *
+   * @type "name"{uri@[namespace|path]} -> path'
+   */
+  index-uri-path:
+    x{[namespace|path]} -> path
+      
+  /**
+   * Gets the name part of the URI for given key (term{uri} element).
+   *
+   * Example:
+   *   <index-uri-name> "Bar"{[Entity(), "Bar", "Baz"] => "Bar"
+   *
+   * @type "name"{uri@[namespace|[name|restPath]]} -> name
+   */ 
+  index-uri-name:
+    x{[_|[name|_]]} -> name
+    
+  /**
+   * Tries to get the name part of the URI for given term or fail if given term does not have an URI or name.
+   *
+   * Example:
+   *   <index-uri-name> Def([Entity(), "Bar", "Baz"]) => "Bar"
+   *   <index-uri-name> Type("Foo") => fail
+   *   <index-uri-name> Read([Entity()]) => fail
+   *
+   * @type x -> name
+   */   
+  index-uri-name:
+    x -> <index-uri-name> <index-uri> x
+    where
+      not(<has-annos> x)
+    
+  /**
+   * Determines if a given AST node is a definition site, according to the syntax.
+   *
+   * FIXME: Also succeeds on use sites.
+   *
+   * @type def -> ?def
+   */
+  index-is-definition =
+    where(nam-get-definition-keys; Hd)
+    
+  /**
+   * Checks if given keys (term{uri} elements) are equal. Discards unresolved URI's.
+   *
+   * Example:
+   *   <index-key-eq> ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]}) => 
+   *     ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]})
+   *   <index-key-eq> ("Foo"{[Entity(), "Foo"]}, "Bar"{[Entity(), "Bar"]}) => fail
+   *
+   * @type (k1, k2) -> ?(k1, k2)
+   */      
+  index-key-eq:
+    (k1, k2) -> <id>
+    where
+      <eq> (<index-key-unwrap> k1, <index-key-unwrap> k2)
+      
+  /**
+   * Given a list of file pairs, returns the list of real files.
+   *
+   * @type List((file, subfile)) -> List(file)
+   */    
+  index-filepairs-to-files:
+    filePairs -> files
+    with
+      files := <make-set> <map(Fst; string-replace(|<conc-strings> (<project-path>, "/"), ""))> filePairs
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/csharp-nbl/lib/compilation-library.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/csharp-nbl/lib/compilation-library.str	Thu Jul 12 09:36:21 2012	(r25190)
@@ -0,0 +1,245 @@
+module lib/compilation-library
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  lib/index-library
+  lib/analysis-library
+  lib/analysis-library-internal
+  
+rules // Extension points
+  
+  /**
+   * Extension point. Override this rule to define a desugaring that is applied to AST before analyzing and compiling.
+   *
+   * Extension example:
+   *   index-desugar-ast:
+   *     ast -> <desugar> ast
+   *
+   * @type ast -> ast'
+   */
+  index-desugar-ast = fail
+    
+  /**
+   * Extension point. Override this rule to define a compilation or transformation to some other target language. The
+   * index manages which files have to be compiled and calls this rule for each AST that has changed since the last
+   * compilation.
+   *
+   * Extensions example:
+   *   index-compile-ast(|file, subfile):
+   *     ast -> None()
+   *     with
+   *       java := <to-java> ast;
+   *       full-path := <dirname> file;
+   *       filename := <guarantee-extension(|"java")> <base-filename> file;
+   *       writePath := $[[full-path]/java/];
+   *       writeFile :=  $[[writePath][filename]];
+   *       try(<mkdir> writePath);
+   *       <fclose> <fputs> (java, <fopen> (writeFile, "w"))
+   *
+   * @param file    The file that must be compiled.
+   * @param subfile The subfile that must be compiled ("" if there is no subfile).
+   * @type ast -> None()
+   */
+  index-compile-ast(|file, subfile) = fail
+
+  /**
+   * Extension point. 
+   */
+  index-is-partial-ast = fail
+
+  /**
+   * Extension point. 
+   */
+  index-combine-asts = fail
+  
+rules // Compilation
+  
+  /**
+   * Schedules compilation in the background of all files that have changed since the last compilation.
+   *
+   * @type x -> x
+   */
+  index-schedule-compilation:
+    _ -> None()
+    with
+      queue-strategy(|"index-compilation", "Compiling files")
+  
+  /** @internal */
+  index-compilation:
+    language -> None()
+    with
+      // Init
+      project-path := <project-path>;
+      index-setup(|language, [project-path], ".")
+    with
+      // Determine the files to compile by looking at changed files
+      diffs         := <analyze-get-compilediffs>;
+      files         := <map(index-compilation-restore-read-file)> diffs;
+      filteredFiles := <make-set> <remove-all(index-compilation-filter-file)> files;
+      (completeFiles, partialFiles) := <index-split-partial-files> filteredFiles;
+      
+      // Clean compile time reads
+      <filter(index-compilation-clean-reads)> completeFiles;
+      <filter(index-compilation-clean-reads)> partialFiles;
+      
+      // Set total work units to number of files to compile for visual indication
+      <set-total-work-units> <add> (<length> completeFiles, <length> partialFiles);
+      
+      // Compile the files
+      <filter(index-compilation-file; complete-work-unit)> completeFiles;
+      <filter(index-compilation-partial-file; complete-work-unit)> partialFiles
+      
+  /** @internal */    
+  index-split-partial-files:
+    files -> (completeFiles, <make-set> splitFiles)
+    with
+      (completeFiles, splitFiles) := <partition(not(index-file-is-partial), index-file-is-partial)> files
+
+  /** @internal */
+  index-compilation-file:
+    (path, subfile) -> None()
+    with
+    	asts := <index-get-all-values> AST(subfile, ());
+      <map(index-compilation-ast(|path, subfile))> asts
+      
+  /** @internal */    
+  index-compilation-partial-file:
+    (path, subfile) -> None()
+    with
+      asts := <index-get-all-values> AST(subfile, ());
+      if 1 := <length> asts then
+      	ast := <?[<id>|_]> asts
+    	else
+    		ast := <try(index-combine-asts)> asts
+  		end;
+      <index-compilation-ast(|path, subfile)> ast
+      
+  /** @internal */
+  index-compilation-ast(|path, subfile):
+    ast -> None()
+    with
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Compile file
+        <try(index-compile-ast(|path, subfile))> ast;
+        
+        // Store compile-time reads.
+        reads := <iset-elements> readSet;
+        <index-add-all(|<index-compilation-file-tuple> (path, subfile))> reads
+      |} 
+
+  /** @internal */
+  index-compilation-filter-file:
+    (file, subfile) -> (file, subfile)
+    where
+      <is-test-file <+ index-is-fake-file <+ not(file-exists)> file
+    
+rules // On save handling
+  
+  /**
+   * Commits the index to disk and schedules compilation. Use trigger-commit-and-compile instead of this strategy.
+   *
+   * @see trigger-commit-and-compile
+   *
+   * @internal
+   */
+  commit-and-compile:
+    language -> None()
+    with
+      index-commit
+    with
+      index-schedule-compilation
+
+  /**
+   * Triggers commit and compilation, requires target language as current term.
+   * Compilation can be delayed by using disable-commit-and-compile. Compilation will be triggered when 
+   * enable-commit-and-compile is called.
+   *
+   * @type language -> language
+   *
+   * @see enable-commit-and-compile
+   * @see disable-commit-and-compile
+   */
+  trigger-commit-and-compile:
+    language -> <id>
+    with
+      if not(index-is-global-enabled(|"delay-compile")) then
+        commit-and-compile
+      else
+        index-enable-global(|"trigger-compile")
+      end
+  
+  /**
+   * Delays commit and compilation until enable-commit-and-compile is called.
+   *
+   * @type x -> x
+   *
+   * @see enable-commit-and-compile
+   */
+  disable-commit-and-compile = 
+    index-enable-global(|"delay-compile")
+  
+  /**
+   * Cancels the commit and compilation delay, requires target language as current term. 
+   * If commit and compilation was triggered during the delay, it is triggered now.
+   *
+   * @type language -> language
+   *
+   * @see disable-commit-and-compile
+   */
+  enable-commit-and-compile:
+    language -> <id>
+    with
+      if index-is-global-enabled(|"trigger-compile") then
+        commit-and-compile
+      end;
+      index-disable-global(|"delay-compile")
+      
+/** @internal */
+rules // Compile time reads
+
+  /** @internal */
+  index-compilation-restore-read-file:
+    (file, subfile) -> (file', subfile)
+    where
+      if removedPath := <string-replace(|<index-compilation-read-path>, "")> file then
+        file' := removedPath
+      else
+        file' := file
+      end
+
+  /** @internal */
+  index-compilation-restore-read-file:
+    file -> file'
+    where
+      not(<is-tuple> file);
+      if removedPath := <string-replace(|<index-compilation-read-path>, "")> file then
+        file' := removedPath
+      else
+        file' := file
+      end
+      
+  /** @internal */
+  index-compilation-clean-reads = 
+    ?(file, subfile); index-compilation-file-tuple; index-clear-file
+      
+  /** @internal */
+  index-compilation-file-tuple:
+    (file, subfile) -> ($[[<index-compilation-read-path>]/[file]], subfile)
+    
+  /** @internal */
+  index-compilation-read-path =
+    !"/.internal/reads/compile"
+    
+/** @internal */
+rules // Utility
+
+  /** @internal */
+  index-file-is-partial:
+  	file -> file
+  	where 
+      Snd; index-uri; index-is-partial-ast
+  	 

Added: spoofax-contrib/separate-compilation-examples/csharp-nbl/lib/index-library.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/csharp-nbl/lib/index-library.str	Thu Jul 12 09:36:21 2012	(r25190)
@@ -0,0 +1,733 @@
+module lib/index-library
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+signature constructors
+  
+  // Index elements
+  DefData      : List(UriPart) * DefDataType * Term -> Summary
+    
+  // URI header
+  Namespace      : UriPart
+  Unresolved     : Namespace -> UriPart
+  INTERNAL_ERROR : UriPart
+  Timestamp      : UriPart
+ 
+  // Remainder of URI
+  String : UriPart
+  Anon   : Int -> UriPart
+  Anon   : UriPart
+  
+  FileEntries : Term * Term -> Term
+  
+  // Globals
+  Global : Namespace
+  Global : List(UriPart) -> Summary
+  Global : List(UriPart) * List(Summary) -> Summary
+  
+  // None namespace
+  None   : Namespace
+  
+rules // Index management
+   
+  /**
+   * Sets up the index library for given language and project paths.
+   * Must be called once before doing anything with the library.
+   *
+   * @param language      The language to set the index up for.
+   * @param project-path  The project paths that contain all source files to analyse and compile.
+   *
+   * @obsolete
+   * @type x -> x
+   */
+  index-setup(|language, project-paths) =
+    obsolete(!"index-setup(|language, project-paths); use index-setup(|language, project-paths, current-file)");
+    index-setup(|language, project-paths, ".")
+    
+  /**
+   * Sets up the index library for given language, project paths and current file.
+   * Must be called once before doing anything with the library.
+   *
+   * Example:
+   *   <index-setup(|"MiniJava", [<project-path>], "test/test.mjv")
+   *
+   * @param language      The language to set the index up for.
+   * @param project-path  The project paths that contain all source files to analyse and compile.
+   * @param current-file  The current file that is being analysed. Can be retrieved later using index-get-current-file.
+   *                      Can also be changed later using index-set-current-file.
+   * @type x -> x
+   */
+  index-setup(|language, project-paths, current-file) =
+    prim("LANG_index_setup", language, project-paths, current-file)
+    
+  /**
+   * Sets the current file the index (analysis) is operating on to the given file.
+   *
+   * Example:
+   *   <index-set-current-file> "fullpath/file.ext"
+   *   <index-set-current-file> ("fullpath/file.ext", "subfile")
+   *
+   * @type x -> ?x
+   */
+  index-set-current-file = 
+    prim("LANG_index_set_current_file", <id>)
+
+  /**
+   * Adds given element to the index with given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-add(|"fullpath/file.ext")> Def([Entity(), "Bar"])
+   *   <index-add(|("fullpath/file.ext", "subfile"))> Def([Entity(), "Bar"])
+   *
+   * @param file  The file (and subfile) to add the element to.
+   * @type x -> ?x
+   */
+  index-add(|file) =
+    prim("LANG_index_add", <id>, file)
+
+  /**
+   * Adds all given elements to the index with given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-add-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
+   *   <index-add-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
+   *
+   * @param file  The file (and subfile) to add the elements to.
+   * @type List(x) -> ?List(x)
+   */
+  index-add-all(|file) =
+    list-loop(with(index-add(|file)))
+    
+  /**
+   * Removes given element from the index that is contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-remove(|"fullpath/file.ext")> Def([Entity(), "Bar"])
+   *   <index-remove(|("fullpath/file.ext", "subfile"))> Def([Entity(), "Bar"])
+   * 
+   * @param file  The file (and subfile) to remove the element from.
+   * @type x -> ?x
+   */
+  index-remove(|file) =
+    prim("LANG_index_remove", <id>, file)
+    
+  /**
+   * Removes all given elements from the index that are contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-remove-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
+   *   <index-remove-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
+   *
+   * @param file  The file (and subfile) to remove the elements from.
+   * @type List(x) -> ?List(x)
+   */
+  index-remove-all(|file) =
+    list-loop(with(index-remove(|file)))
+    
+  /**
+   * Removes all elements from the index that are contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-clear-file> "fullpath/file.ext"
+   *   <index-clear-file> ("fullpath/file.ext", "subfile")
+   *
+   * @type x -> ?x
+   */
+  index-clear-file = 
+    prim("LANG_index_clear_file", <id>)
+    
+  /**
+   * Clears all elements from the index.
+   *
+   * @type x -> x
+   */
+  index-clear = 
+    prim("LANG_index_clear_all")
+    
+  /**
+   * Clears all elements from the index and re-analyzes all files in the project.
+   *
+   * @type x -> x
+   */
+  index-reload = 
+    prim("LANG_index_reload")
+   
+  /**
+   * Commits index to a file on disk.
+   *
+   * @type x -> x
+   */
+  index-commit = 
+    prim("LANG_index_commit")
+
+  /**
+   * Starts a transaction on the index for the current file. Additions to the index are not visible to other files 
+   * until index-end-transaction is called. Operations on the index are only thread safe during a transaction.
+   *
+   * @type x -> x
+   */
+  index-start-transaction = 
+    prim("LANG_index_start_transaction")
+  
+  /**
+   * Ends a transaction on the index for the current file. Additions made to the index during the transaction are
+   * added to the global index visible for other files. Operations on the index are not thread safe any more after 
+   * this call.
+   *
+   * @type x -> x
+   */
+  index-end-transaction = 
+    prim("LANG_index_end_transaction")
+  
+  /**
+   * Starts a transaction, applies given strategy and ends the transaction. All index operations used from the given
+   * strategy are thread safe.
+   * 
+   * @param s The strategy to apply. Transaction will still properly end if strategy fails.
+   * @type x -> x'
+   *
+   * @see index-start-transaction
+   * @see index-end-transaction
+   */
+  index-transaction(s) = 
+    prim("LANG_index_start_transaction"); try(s); prim("LANG_index_end_transaction")
+  
+rules // Index querying
+  
+  /**
+   * Gets the file that the analysis is currently in.
+   *
+   * @type x -> (file, subfile)
+   *
+   * @see index-setup(|language, project-paths, current-file)
+   * @see index-set-current-file
+   */
+  index-get-current-file =
+    prim("LANG_index_get_current_file")
+  
+  /**
+   * Gets a list of all files and subfiles for current project.
+   *
+   * Example:
+   *   <index-get-all-files> => [("fullpath/file.ext", "subfile"), ...]
+   *
+   * @type x -> List((file, subfile))
+   */   
+  index-get-all-files =
+    prim("LANG_index_all_files")
+  
+  /**
+   * Gets all index entries for the given file path and optionally subfile.
+   *
+   * Examples:
+   *   <index-get-all-in-file> "fullpath/file.ext" => [Def([Entity(), "Bar"]), ...]
+   *   <index-get-all-in-file> ("fullpath/file.ext", "subfile") => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type file or (file, subfile) -> List(elem)
+   */  
+  index-get-all-in-file:
+    filepath -> entries
+    with
+      entries := <prim("LANG_index_get_all_in_file", filepath)>
+   
+  /**
+   * Gets index entries in some namespace for the given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-get-all-in-file(|Import())> "fullpath/file.ext" => [Def([Import(), "Bar"]), ...]
+   *   <index-get-all-in-file(|Import())> ("fullpath/file.ext", "subfile") => [Def([Import(), "Bar"]), ...]
+   *
+   * @param namespace Only index entries from this namespace are retrieved.
+   * @type file or (file, subfile) -> List(elem)
+   */  
+  index-get-all-in-file(|namespace):
+    filepath -> entries
+    with
+      // TODO: Optimize -- add an argument to LANG_index_get_all_in_file to do this filtering
+      entries := <prim("LANG_index_get_all_in_file", filepath)>;
+      filter(where(index-uri => [namespace | _]))
+    
+  /**
+   * Gets the revision of a file and optionally subfile.
+   *
+   * Example:
+   *   <index-get-file-revision> "fullpath/file.ext" => 13
+   *   <index-get-file-revision> ("fullpath/file.ext", "subfile") => 37
+   *
+   * @type file or (file, subfile) -> Int
+   */
+  index-get-file-revision:
+    file -> <prim("LANG_index_get_file_revision", file)>
+    
+  /**
+   * Gets the containing files and subfiles of index entry with given template.
+   *
+   * Example:
+   *   <index-get-files-of> Def([Entity(), "Bar"]) => [("fullpath/file.ext", "subfile"), ...]
+   *
+   * @type template -> List((file, subfile))
+   */  
+  index-get-files-of:
+    template -> <prim("LANG_index_get_files_of", template)>
+    
+  /**
+   * Get all index entries that match the given template.
+   *
+   * Example:
+   *   <indexlib-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type template -> List(elem)
+   */
+  indexlib-get-all:
+    template -> <prim("LANG_index_get", template)>
+    
+  /**
+   * Get all values of index entries that match the given template.
+   *
+   * Example:
+   *   <indexlib-get-all-values> DefData([Property(), "s"], Type(), ()) => [TYPE("String"), ...]
+   *
+   * @type template -> List(value)
+   *
+   * @see index-value
+   */
+  indexlib-get-all-values:
+    template -> <map(index-value)> <indexlib-get-all> template
+ 
+  /**
+   * Get the first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <indexlib-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   *
+   * @type template -> ?elem
+   */
+  indexlib-get:
+    template -> <?[<id>|_]> <indexlib-get-all> template
+   
+  /**
+   * Get the value of first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <indexlib-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
+   *
+   * @type template -> ?value
+   *
+   * @see index-value
+   */
+  indexlib-get-value:
+    template -> <index-value> <?[<id>|_]> <indexlib-get-all> template
+    
+rules // Index globals
+    
+  /**
+   * Gets the 'fake' path where globals are stored in the index.
+   *
+   * @internal
+   */
+  index-globals-path = 
+    !"/.internal/globals"
+    
+  /**
+   * Gets the URI where globals are stored in the index for given name or names.
+   *
+   * @internal
+   * @type name or List(name) -> uri
+   */
+  index-globals-uri:
+    names -> uri
+    with
+      if is-list then
+        uri := <concat> [[Global()], names, ["globals", ".internal"]]
+      else
+        uri := [Global(), names, "global", ".internal"]
+      end
+    
+  /**
+   * Gets the first value in global storage with given name, or fail.
+   *
+   * Example:
+   *   index-get-global(|"last-compile") => Timestamp(1334322856)
+   *   index-get-global(|["last-compile", "file.str"]) => Timestamp(1334322856)
+   * 
+   * @param name  The name or list of names to identify the global value.
+   * @type _ -> ?value
+   */
+  index-get-global(|name):
+    _ -> value
+    where
+      value := <indexlib-get-value> Global(<index-globals-uri> name, ())
+    
+  /**
+   * Gets all values in global storage with given name.
+   *
+   * Example:
+   *   index-get-global(|"last-compile") => [Timestamp(1334322856), ...]
+   *   index-get-global(|["last-compile", "file.str"]) => [Timestamp(1334322856), ...]
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type _ -> List(value)
+   */ 
+  index-get-all-globals(|name):
+    _ -> values
+    with
+      values := <indexlib-get-all-values> Global(<index-globals-uri> name, ())
+    
+  /**
+   * Add value to global storage with given name.
+   *
+   * Example:
+   *   <index-add-global(|"last-compile")> Timestamp(1334322856)
+   *   <index-add-global(|["last-compile", "file.str"])> Timestamp(1334322856)
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-add-global(|name):
+    value -> <id>
+    with
+      <index-add(|<index-globals-path>)> Global(<index-globals-uri> name, value)
+      
+  /**
+   * Overwrites value in global storage with given value.
+   *
+   * Example:
+   *   <index-set-global(|"last-compile")> Timestamp(1334322856)
+   *   <index-set-global(|["last-compile", "file.str"])> Timestamp(1334322856)
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-set-global(|name):
+    value -> <id>
+    with
+      index-clear-global(|name);
+      <index-add-global(|name)> value
+    
+  /**
+   * Removes all values from global storage with given name.
+   *
+   * Example:
+   *   index-clear-global(|"last-compile")
+   *   index-clear-global(|["last-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-clear-global(|name):
+    _ -> <id>
+    with
+      <index-remove(|<index-globals-path>)> Global(<index-globals-uri> name, ())
+      
+  /**
+   * Gets the URI where boolean globals are stored in the index for given name or names.
+   *
+   * @internal
+   */
+  index-boolean-globals-uri:
+    names -> uri
+    with
+      if is-list then
+        uri := <concat> [[Global()], names, ["boolean", "globals", ".internal"]]
+      else
+        uri := [Global(), names, "boolean", "global", ".internal"]
+      end
+      
+  /**
+   * Sets boolean value true to global boolean storage with given name.
+   *
+   * Example:
+   *   index-enable-global(|"can-compile")
+   *   index-enable-global(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> x
+   */   
+  index-enable-global(|name):
+    _ -> <id>
+    with
+      <index-add(|<index-globals-path>)> Global(<index-boolean-globals-uri> name)
+      
+  /**
+   * Sets boolean value false to global boolean storage with given name.
+   *
+   * Example:
+   *   index-disable-global(|"can-compile")
+   *   index-disable-global(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> x
+   */   
+  index-disable-global(|name):
+    _ -> <id>
+    with
+      <index-remove(|<index-globals-path>)> Global(<index-boolean-globals-uri> name)
+      
+  /**
+   * Query for boolean value true in global boolean storage with given name.
+   *
+   * Example:
+   *   index-is-global-enabled(|"can-compile")
+   *   index-is-global-enabled(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> ?x
+   */   
+  index-is-global-enabled(|name):
+    _ -> <id>
+    where
+      <indexlib-get> Global(<index-boolean-globals-uri> name)
+
+rules // Index utility
+  
+  /**
+   * Gets the URI part for given term. Can be extended by defining a index-uri-impl rule. If no index-uri-impl rule
+   * is defined for the given term the first subterm is used as the URI. Fails if no URI can be retrieved from the
+   * given term.
+   *
+   * Example:
+   *   <index-uri> DefData([Entity(), "Bar", "Baz"], Type(), TYPE("Bar")) => [Entity(), "Bar", "Baz"]
+   *
+   * @type elem -> ?uri
+   *
+   * @see index-uri-impl
+   * @see index-uri-generic
+   */ 
+  index-uri = 
+    index-uri-impl <+ index-uri-generic
+  
+  /**
+   * Gets the namespace part of the given URI.
+   *
+   * Example:
+   *   <index-uri-path> [Entity(), "Bar", "Baz"] => Entity()
+   *
+   * @type uri@[namespace|path] -> namespace
+   */ 
+  index-uri-namespace =
+    ?[<id>|_]
+  
+  /**
+   * Gets the path part of the given URI.
+   *
+   * Example:
+   *   <index-uri-path> [Entity(), "Bar", "Baz"] => ["Bar", "Baz"]
+   *   <index-uri-path> [Entity()] => []
+   *
+   * @type uri@[namespace|path] -> path
+   */ 
+  index-uri-path =
+    ?[_|<id>]
+    
+  /**
+   * Gets the name part of the given URI or fail if there is no name.
+   *
+   * Example:
+   *   <index-uri-name> [Entity(), "Bar", "Baz"] => "Bar"
+   *   <index-uri-name> [Entity()] => fail
+   *
+   * @type uri@[namespace|[name|restPath]] -> ?name
+   */ 
+  index-uri-name =
+    ?[_|[<id>|_]]
+    
+  /**
+   * Gets the parent of given URI or fail if the URI doesn't have a parent.
+   *
+   * Example:
+   *   <index-uri-parent> [Entity(), "Bar", "Baz"] => [Entity(), "Baz"]
+   *   <index-uri-parent> [Entity(), "Baz"] => [Entity()]
+   *   <index-uri-parent> [Entity()] => fail
+   *
+   * @type uri@[namespace|[name|restPath]] -> ?name
+   */     
+  index-uri-parent =
+    ?[ns|[_|<id>]]; ![ns|<id>]
+  
+  /**
+   * Gets the value part for given term. Can be extended by defining a index-value-impl rule. If no index-value-impl 
+   * rule is defined for the given term the second subterm is used as the value. Fails if no value can be retrieved
+   * from the given term.
+   *
+   * Example:
+   *   <index-value> DefData([Entity(), "Bar", "Baz"], Type(), TYPE("Bar")) => TYPE("Bar")
+   *
+   * @type elem -> ?value
+   *
+   * @see index-value-impl
+   * @see index-value-generic
+   */  
+  index-value = 
+    index-value-impl <+ index-value-generic
+  
+  /**
+   * Queries if given index file is a 'fake' file for storing internal data.
+   *
+   * @type x -> ?x
+   */
+  index-is-fake-file = 
+    string-starts-with(|"/.internal")
+  
+  /**
+   * Checks if given URI's are equal. Discards anonymous scopes if necessary.
+   *
+   * Example:
+   *   <index-uri-eq> ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"]) => 
+   *     ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"])
+   *   <index-uri-eq> ([Entity(), "Foo"], [Entity(), "Bar"]) => fail
+   *
+   * @type (u1, u2) -> ?(u1, u2)
+   */
+  index-uri-eq:
+    (u1, u2) -> <id>
+    where
+      u1' := <index-uri-unwrap> u1;
+      u2' := <index-uri-unwrap> u2;
+      (<eq> (u1', u2') <+ <eq> (<remove-all(?Anon(_))> u1', <remove-all(?Anon(_))> u2'))
+  
+  /**
+   * Finds the first key (term{uri} element) for given term, or fail. 
+   *
+   * @type x -> ?name{uri}
+   */
+  index-find-key:
+    x -> key
+    where
+      key := <collect-one(?_{_})> x
+
+  /**
+   * Converts a path from an URI to a string.
+   *
+   * Example:
+   *   <index-path-to-string> ["Bar", "Baz"] => "Bar.Baz"
+   *
+   * @type path -> str
+   */
+  index-path-to-string:
+    path -> str
+    with
+      str := <take-until(?Anon(_)); reverse; separate-by(|"."); concat-strings> path
+      
+  /**
+   * Converts a URI to a string.
+   *
+   * Example:
+   *   <index-uri-to-string> [Entity(), "Bar", "Baz"] => "Entity://Bar.Baz"
+   *
+   * @type uri -> str
+   */
+  index-uri-to-string:
+    [ns|path] -> <concat-strings> [nsStr, "://", pathStr]
+    with
+      pathStr := <index-path-to-string> path;
+      nsStr := <?<id>#(_)> ns
+  
+  /**
+   * Converts a file to a string.
+   *
+   * Example:
+   *   <index-file-to-string> "fullpath/file.ext" => "fullpath/file.ext"
+   *
+   * @type file -> file
+   */
+  index-file-to-string:
+    file -> file
+    where
+      not(<is-tuple> file)
+  
+  /**
+   * Converts a file ((file, subfile) tuple) to a string.
+   *
+   * Example:
+   *   <index-file-to-string> ("fullpath/file.ext", []) => "fullpath/file.ext"
+   *
+   * @type (file, []) -> file
+   */
+  index-file-to-string:
+    (file, []) -> file
+    
+  /**
+   * Converts a file ((file, subfile) tuple) to a string.
+   *
+   * Example:
+   *   <index-file-to-string> ("fullpath/file.ext", [Entity(), "Foo" "Bar"]) => "fullpath/file.ext at Entity://Foo.Bar"
+   *
+   * @type (file, subfile) -> str
+   */
+  index-file-to-string:
+    (file, subfile) -> <concat-strings> [file, "@", <index-uri-to-string> subfile]
+    where
+      not([] := subfile)
+
+  /**
+   * Converts a file to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> "fullpath/file.ext" => [None(), "fullpath/file.ext"]
+   *
+   * @type file -> uri
+   */      
+  index-file-to-uri:
+    file -> [None(), file]
+    where
+      not(<is-tuple> file)
+      
+  /**
+   * Converts a file ((file, subfile) tuple) to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> ("fullpath/file.ext", []) => [None(), "fullpath/file.ext]
+   *
+   * @type (file, subfile) -> uri
+   */      
+  index-file-to-uri:
+    (file, []) -> [None(), file]
+    
+  /**
+   * Converts a file ((file, subfile) tuple) to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> ("fullpath/file.ext", [Entity(), "Foo" "Bar"]) => [Entity(), "Foo", "Bar", "fullpath/file.ext"]
+   *
+   * @type (file, subfile) -> uri
+   */      
+  index-file-to-uri:
+    (file, subfile) -> <conc> ([file], subfile)
+    where
+      not([] := subfile)
+      
+/** @internal */
+rules // URI and value projections
+
+  /** @internal */
+  index-uri-impl:
+    [_|_] -> <id>
+  
+  /** @internal */
+  index-uri-impl:
+    DefData(uri, _, _) -> uri
+
+  /** @internal */
+  index-uri-generic:
+    term -> <?_#(<?[<id>|_]>)> term
+  
+  /** @internal */
+  index-value-impl:
+    DefData(_, _, value) -> value
+    
+  /** @internal */
+  index-value-generic:
+    term -> <?_#(<?[_, <id>|_]> )> term
+     
+/** @internal */ 
+rules // Internal helpers
+  
+  /** @internal */
+  index-namespace-unwrap =
+    \Unresolved(n) -> n\ <+ id
+    
+  /** @internal */
+  index-uri-unwrap =
+    \[ns|xs] -> [<index-namespace-unwrap> ns|xs]\ <+ id

From gabrielkonat at gmail.com  Thu Jul 12 16:40:47 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Thu, 12 Jul 2012 14:40:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25191 -
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp
	spoofax-imp/trunk/org.strategoxt...
Message-ID: <20120712144047.1D46F7F80BE@mx1.tudelft.nl>

Author: gkonat
Date: Thu Jul 12 14:40:46 2012
New Revision: 25191
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25191&sc=1

Log:
Changed default Entity project to use NBL

Added:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-nbl-example.str
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/bin/org/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/bin/org/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/bin/org/
Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/print-index-libraries.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-index-libraries.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-builders-descriptor.str
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/print-index-libraries.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/print-index-libraries.str	Thu Jul 12 09:36:21 2012	(r25190)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/print-index-libraries.str	Thu Jul 12 14:40:46 2012	(r25191)
@@ -10,7 +10,8 @@
     (_, _, _, path, project-path) -> None()
     with
       files := [$[[project-path]/lib/index-library], $[[project-path]/lib/analysis-library], 
-        $[[project-path]/lib/analysis-library-internal], $[[project-path]/lib/compilation-library]];
+        $[[project-path]/lib/analysis-library-internal], $[[project-path]/lib/compilation-library],
+        $[[project-path]/lib/nbl-library]];
       strings := <map(\file -> (file, <read-text-file> $[[file].str])\)> files;
       <map(\(file, string) -> <write-lib> ($[[file].generated.str2], string)\)> strings
       
@@ -18,12 +19,13 @@
     (file, string) -> None()
     with
       replaces := [
-        ("\\",                            "\\\\"                                    ),
-        ("\"",                            "\\\""                                    ),
-        ("lib/index-library",             "lib/index-library.generated"             ),
-        ("lib/analysis-library-internal", "lib/analysis-library-internal.generated" ),
-        ("lib/analysis-library",          "lib/analysis-library.generated"          ),
-        ("lib/compilation-library",       "lib/compilation-library.generated"       )
+        ("\\",                            					"\\\\"                                   ),
+        ("\"",                            					"\\\""                                   ),
+        ("lib/index-library",                       "lib/index-library.generated"            ),
+        ("lib/analysis-library",                    "lib/analysis-library.generated"         ),
+        ("lib/analysis-library.generated-internal", "lib/analysis-library-internal.generated"),
+        ("lib/compilation-library",                 "lib/compilation-library.generated"      ),
+        ("lib/nbl-library",                 				"lib/nbl-library.generated"      				 )
       ];
       string' := <list-string-replace> (string, replaces);
       <fclose> <fputs> (string', <fopen> (file, "w"))

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	Thu Jul 12 09:36:21 2012	(r25190)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	Thu Jul 12 14:40:46 2012	(r25191)
@@ -104,6 +104,8 @@
       create-pp-table;
       create-example-trans;
       create-java-strategy;
+      create-example-nd;
+      create-placeholder-compiled-nd;
       input @ FILE(inputname) := <pack-default-sdf> FILE($[syntax/[<get-sdf-main-module>].sdf]);
       rules(DefaultDefFile := inputname)
     end;
@@ -147,11 +149,11 @@
     create-example-file;
     create-common-trans;
     
-    create-analysis-auto-placeholder;
     create-index-library;
     create-analysis-library;
     create-analysis-internal-library;
     create-compilation-library;
+    create-nbl-library;
     
     copy-jars;
     copy-def-file;

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str	Thu Jul 12 09:36:21 2012	(r25190)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str	Thu Jul 12 14:40:46 2012	(r25191)
@@ -25,31 +25,31 @@
   libstratego-aterm
   include/{sdf-name}
   lib/editor-common.generated
-  lib/analysis-auto.generated
   lib/index-library.generated
   lib/analysis-library.generated
   lib/analysis-library-internal.generated
   lib/compilation-library.generated
-  analysis-manual
+  lib/nbl-library.generated
+  names
   check
   generate
   refactor
 
 rules // Analysis
   
-  // Analyzes the current program, returning a tuple with the analyzed AST, errors, warnings, notes and
-  // files that should be re-analyzed.
+	// Analyzes the current program, returning a tuple with the analyzed AST, errors, warnings, notes and
+	// files that should be re-analyzed.
   analyze:
     (ast, path, project-path) -> (ast'', errors, warnings, notes, filesToAnalyze')
     with
       ast'                    := <id> ast; // Optional AST desugaring
       (ast'', filesToAnalyze) := <analyze-top(|<language>)> (ast', path, project-path);
       index-transaction(
-        errors                := <collect-all(constraint-error, conc)> ast'';
-        warnings              := <collect-all(constraint-warning, conc)> ast'';
-        notes                 := <collect-all(constraint-note, conc)> ast''
+	      errors                := <collect-all(constraint-error, conc)> ast'';
+	      warnings              := <collect-all(constraint-warning, conc)> ast'';
+	      notes                 := <collect-all(constraint-note, conc)> ast''
       );
-      filesToAnalyze'         := <make-set> <map(index-filepair-to-file)> filesToAnalyze
+      filesToAnalyze'         := <index-filepairs-to-files> filesToAnalyze
 
   // Main entry point for analyzes, called when a single file is opened in the editor.
   editor-analyze:
@@ -57,7 +57,7 @@
     with
       editor-init;
       (ast', errors, warnings, notes, filesToAnalyze) := <analyze> (ast, path, project-path);
-      <try(editor-queue-analysis)> filesToAnalyze
+      <try(editor-queue-analysis)> <remove-all(?path)> filesToAnalyze
       
   // Main entry point for analyzes, called when multiple files have changed. 
   editor-analyze:
@@ -65,7 +65,7 @@
     where
       not(is-tuple)
     with
-      index-setup(|<language>, [<project-path>], ".");
+    	index-setup(|<language>, [<project-path>], ".");
       disable-commit-and-compile // Disable compilation during analysis.
     with
       editor-queue-analysis
@@ -108,37 +108,37 @@
       (ast', _) := <analyze-top(|<language>)> (ast, path, project-path);
       item at COMPLETION(name) := <collect-one(?COMPLETION(_))> ast';
       index-transaction(
-        (<index-lookup-all-levels(|name)> item <+ ![]) => proposals
+        (<index-lookup-all(|name)> item <+ ![]) => proposals
       );
-      proposals' := <map(index-uri-name)> proposals
+      proposals' := <map(index-uri; index-uri-name)> proposals
 
 rules // Debugging
   
   // Prints the abstract syntax ATerm of a selection.
-  generate-aterm:
+  debug-generate-aterm:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       filename := <guarantee-extension(|"aterm")> path;
       result   := selected
       
+  // Prints the definition annotated abstract syntax ATerm of a selection.
+  debug-generate-deffed:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      filename := <guarantee-extension(|"aterm")> path;
+      result   := <analyze-defs> selected
+      
   // Prints the analyzed annotated abstract syntax ATerm of a selection.
-  generate-analyzed:
+  debug-generate-analyzed:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       editor-init;
       filename := <guarantee-extension(|"analyzed.aterm")> path;
       result   := <analyze-top(|<language>)> (selected, path, project-path)   
       
-  // Prints the definition annotated abstract syntax ATerm of a selection.
-  generate-deffed:
-    (selected, position, ast, path, project-path) -> (filename, result)
-    with
-      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
-      filename := <guarantee-extension(|"aterm")> path;
-      result   := <analyze-defs(|Anon(), Anon())> selected
-      
   // Prints the entries in the index of the current file.
-  index-currentfile:
+  debug-index-show-current-file:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
@@ -146,19 +146,33 @@
       result   := <index-get-all-in-file> path
       
   // Prints the entries in the index of all files.
-  index-allfiles:
+  debug-index-show-all-files:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       filename := <guarantee-extension(|"index.allfiles.aterm")> path;
       result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
+
+  // Cleans current file from the index.
+  debug-index-clear-current:
+    (selected, position, ast, path, project-path)  -> None()
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      <index-clear-file> $[[project-path]/[path]]
       
   // Cleans all data from the index.
-  index-cleanall:
+  debug-index-clear:
     (selected, position, ast, path, project-path)  -> None()
     with
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       index-clear
+      
+  // Cleans all data from the index and re-analyzes every file.
+  debug-index-reload:
+    (selected, position, ast, path, project-path)  -> None()
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      index-reload
     
 rules // Utility
   
@@ -250,29 +264,11 @@
   libstratego-lib
   include/{sdf-name}
   lib/editor-common.generated
-  lib/analysis-auto.generated
   lib/index-library.generated
   lib/analysis-library.generated
   lib/analysis-library-internal.generated
+  lib/nbl-library.generated
 
-rules // Resolving
-  
-  constraint-error:
-    x{"{[Unresolved(t) | _]}"} -> (x, $[Unable to resolve.])
-    
-rules // Duplicates
-    
-  is-unique-namespace = ?Type()
-  is-unique-namespace = ?Property()
-      
-  constraint-error:
-    definition -> (definition, $[Duplicate definition])
-    where
-      key{"{[ns|_]}"} := <nam-get-definition-key> definition;
-      <is-unique-namespace> ns;
-      definitions := <index-lookup-all> key;
-      <gt> (<length> definitions, 1)
-    
 rules // Other
   
   constraint-warning:
@@ -286,25 +282,6 @@
 }
 end;
 
-if not(<file-exists> "trans/analysis-manual.str") then
-  <output-text-file(|["trans"], "analysis-manual.str")>
-${module analysis-manual
-
-imports
-  include/{sdf-name}
-  lib/analysis-auto.generated
-  lib/index-library.generated
-  lib/analysis-library.generated
-  lib/analysis-library-internal.generated
-
-rules // Adjust lookup
-
-  // Add primitive types to type lookup.
-  adjust-index-lookup(target |namespace, path, prefix): 
-    Type(<target>) ->  [Def([Type(), "Int"]), Def([Type(), "String"]), [Type() | path]]
-}
-end;
-
 if not(<file-exists> "trans/refactor.str") then
   <output-text-file(|["trans"], "refactor.str")>
 ${module refactor

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-index-libraries.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-index-libraries.str	Thu Jul 12 09:36:21 2012	(r25190)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-index-libraries.str	Thu Jul 12 14:40:46 2012	(r25191)
@@ -5,73 +5,9 @@
 
 strategies
 
-  create-analysis-auto-placeholder = 
-    <file-exists> "lib/analysis-auto.generated.str"
-  <+
-    try(<file-exists <+ mkdir> "lib");
-    sdf-name := <get-sdf-main-module>;
-  <output-text-file(|["lib"], "analysis-auto.generated.str")>
-<conc-strings> ("module lib/analysis-auto.generated
-
-signature
-  constructors
-    Module   : Namespace
-    Property : Namespace
-    Type     : Namespace
-
-
-imports
-  include/", sdf-name, "
-
-
-rules
-
-  nam-get-scope-types :
-    Module(_, _) -> [Type()]
-
-  nam-get-scope-types :
-    Entity(_, _) -> [Property()]
-
-  nam-get-definition-key :
-    Module(x, _) -> x
-
-  nam-get-definition :
-    Module(x, _) -> <nam-get-def(|Module())> x
-
-  nam-get-definition-key :
-    Entity(x, _) -> x
-
-  nam-get-definition :
-    Entity(x, _) -> <nam-get-def(|Type())> x
-
-  nam-get-definition-key :
-    Property(x, _) -> x
-
-  nam-get-definition :
-    Property(x, _) -> <nam-get-def(|Property())> x
-
-  nam-annotate-names(|def-path):
-    Module(s_1422, t_1422) -> Module(s_1422{def-path}, t_1422)
-
-  nam-annotate-names(|def-path):
-    Entity(q_1422, r_1422) -> Entity(q_1422{def-path}, r_1422)
-
-  nam-annotate-names(|def-path):
-    Property(o_1422, p_1422) -> Property(o_1422{def-path}, p_1422)
-
-  nam-annotate-names(|def-path):
-    Type(n_1422) -> Type(<nam-annotate-use(|Type())> n_1422)
-
-  nam-get-def(|n) =
-    fail
-
-  nam-annotate-use(|n) =
-    fail
-")  
-
   create-index-library =
-  try(<file-exists <+ mkdir> "lib");
-  <output-text-file(|["lib"], "index-library.generated.str")>
+	  try(<file-exists <+ mkdir> "lib");
+	  <output-text-file(|["lib"], "index-library.generated.str")>
 "module lib/index-library.generated
 
 imports
@@ -219,6 +155,14 @@
    */
   index-clear = 
     prim(\"LANG_index_clear_all\")
+    
+  /**
+   * Clears all elements from the index and re-analyzes all files in the project.
+   *
+   * @type x -> x
+   */
+  index-reload = 
+    prim(\"LANG_index_reload\")
    
   /**
    * Commits index to a file on disk.
@@ -598,6 +542,19 @@
    */ 
   index-uri-name =
     ?[_|[<id>|_]]
+    
+  /**
+   * Gets the parent of given URI or fail if the URI doesn't have a parent.
+   *
+   * Example:
+   *   <index-uri-parent> [Entity(), \"Bar\", \"Baz\"] => [Entity(), \"Baz\"]
+   *   <index-uri-parent> [Entity(), \"Baz\"] => [Entity()]
+   *   <index-uri-parent> [Entity()] => fail
+   *
+   * @type uri@[namespace|[name|restPath]] -> ?name
+   */     
+  index-uri-parent =
+    ?[ns|[_|<id>]]; ![ns|<id>]
   
   /**
    * Gets the value part for given term. Can be extended by defining a index-value-impl rule. If no index-value-impl 
@@ -649,6 +606,19 @@
     x -> key
     where
       key := <collect-one(?_{_})> x
+
+  /**
+   * Converts a path from an URI to a string.
+   *
+   * Example:
+   *   <index-path-to-string> [\"Bar\", \"Baz\"] => \"Bar.Baz\"
+   *
+   * @type path -> str
+   */
+  index-path-to-string:
+    path -> str
+    with
+      str := <take-until(?Anon(_)); reverse; separate-by(|\".\"); concat-strings> path
       
   /**
    * Converts a URI to a string.
@@ -661,7 +631,7 @@
   index-uri-to-string:
     [ns|path] -> <concat-strings> [nsStr, \"://\", pathStr]
     with
-      pathStr := <take-until(?Anon(_)); reverse; separate-by(|\".\"); concat-strings> path;
+      pathStr := <index-path-to-string> path;
       nsStr := <?<id>#(_)> ns
   
   /**
@@ -740,6 +710,10 @@
       
 /** @internal */
 rules // URI and value projections
+
+  /** @internal */
+  index-uri-impl:
+    [_|_] -> <id>
   
   /** @internal */
   index-uri-impl:
@@ -770,8 +744,8 @@
 "
 
   create-analysis-library =
-  try(<file-exists <+ mkdir> "lib");
-  <output-text-file(|["lib"], "analysis-library.generated.str")>
+	  try(<file-exists <+ mkdir> "lib");
+	  <output-text-file(|["lib"], "analysis-library.generated.str")>
 "module lib/analysis-library.generated
  
 imports
@@ -844,6 +818,11 @@
    */
   adjust-index-lookup(check-target-name|namespace, path, prefix) = fail
   
+  /**
+   * Extension point.
+   */
+  adjust-index-import(|namespace, path) = fail
+  
   /** 
    * Extension point. Override this rule to store data about definitions in the index. Should call <store-results> on 
    * a (list of) data that must be stored in the index.
@@ -958,7 +937,7 @@
       else
         Results(asts, _, _, _, _, _, filesToAnalyze) := 
           <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, full-path)];
-        ast' := <Hd> asts
+        ast' := <Hd> asts // Always returns a list of 1 AST if there is no splitter, so take the head.
       end
   
 rules // Parallel analysis
@@ -983,56 +962,89 @@
     with
       index-parallel-analyze(analyze);
       filter(not(?ParallelResults((), (), _, _, _, _) <+ ?ParallelResults((), [()], _, _, _, _)); index-set-markers)
+      
+rules // Splitter
+  
+  /**
+   * Merges a top level definition back into an AST using splitter rules.
+   *
+   * @param toplevel  The top level definition to merge back into the given AST.
+   * @type ast -> ast'
+   */
+  index-merge-ast(|toplevel):
+    term -> merged
+    with
+      if <is-list> term then
+        [first-ast|_] := term;
+        merged        := <index-merge-ast(|toplevel)> first-ast
+      else
+        if <index-is-qualifier> term then
+          [elem|_]    := <index-qualifier-subelements> term;
+          merged      := <index-create-qualifier(|term)> <index-merge-ast(|toplevel)> elem
+        else
+          merged      := toplevel
+        end
+      end
  
 rules // Query primitives
  
   /**
-   * Gets all DefData entries that match the kind of data and URI in given definition.
+   * Gets a DefData entry that matches the kind of data and given URI, or fail.
    *
    * Example:
    *   <index-get-data(|Type())> Def([Entity(), \"Bar\"]) => [DefData([Entity(), \"Bar\"], Type(), TYPE(\"Bar\")), ...]
    *
    * @param kind Only data of this kind is returned.
-   * @type Def(uri) -> List(DefData(uri, kind, value))
+   * @type Def(uri) or \"name\"{uri} or [namespace|path] -> List(DefData(uri, kind, value))
    */
   index-get-data(|kind):
-    <with(?Def(uri) | \"Def expected\")> -> <index-get-value> DefData(uri, kind, ())
+    <with(uri := <index-uri> | \"Def, key or URI expected\")> -> <index-get-value> DefData(uri, kind, ())
       
   /**
-   * Gets all data entries that match the kind of data and URI in given definition.
+   * Gets all DefData entries that match the kind of data and given URI
    *
    * Example:
    *   <index-get-data-all(|Type())> Def([Entity(), \"Bar\"]) => [TYPE(\"Bar\"), ...]
    *
    * @param kind Only data of this kind is returned.
-   * @type Def(uri) -> List(value)
+   * @type Def(uri) or \"name\"{uri} or [namespace|path] -> List(value)
    */
   index-get-data-all(|kind):
-    <with(?Def(uri) | \"Def expected\")> -> <index-get-all-values> DefData(uri, kind, ())
+     <with(uri := <index-uri> | \"Def, key or URI expected\")> -> <index-get-all-values> DefData(uri, kind, ())
+
+  /**
+   * Gets a Use entry that matches given URI, or fail.
+   *
+   * Example:
+   *   <index-get-uses-all> Def([Entity(), \"M\", \"Bar\"]) => [Use([Entity(), \"M\", \"Bar\"]), ...]
+   *
+   * @type Def(uri) or \"name\"{uri} or [namespace|path] -> List(Use(uri))
+   */
+  index-get-use:
+    <with(uri := <index-uri> | \"Def, key or URI expected\")> -> <index-get-all> Use(uri)
      
   /**
-   * Gets all Use entries that match the URI in given definition.
+   * Gets all Use entries that match the given URI.
    *
    * Example:
    *   <index-get-uses-all> Def([Entity(), \"M\", \"Bar\"]) => [Use([Entity(), \"M\", \"Bar\"]), ...]
    *
-   * @type Def(uri) -> List(Use(uri))
+   * @type Def(uri) or \"name\"{uri} or [namespace|path] -> List(Use(uri))
    */
   index-get-uses-all:
-    <with(?Def(uri) | \"Def expected\")> -> <index-get-all> Use(uri)
+    <with(uri := <index-uri> | \"Def, key or URI expected\")> -> <index-get-all> Use(uri)
      
   /**
-   * Gets all Read or ReadWildcard entries that match the given template.
+   * Gets all Read and ReadWildcard entries that match the given URI.
    *
    * Example:
    *   <index-get-reads-all> [Property(), \"Bar\", \"p\"] => [Read([Property(), \"Bar\", \"p\"]), ...]
    *
-   * @type Def(uri) -> List(Read(uri) or ReadWildcard(uri, prefix))
+   * @type Def(uri) or \"name\"{uri} or [namespace|path] -> List(Read(uri) or ReadWildcard(uri, prefix))
    */
   index-get-reads-all:
-    template -> <conc> (reads, readwildcards')
+    <with(uri := <index-uri> | \"Def, key or URI expected\")> -> <conc> (reads, readwildcards')
     where
-      uri   := <index-uri> template;
       reads := <index-get-all> Read(uri);
       if !uri => [namespace, prefix | path-parent] then
         readwildcards  := <index-get-all> ReadWildcard([namespace | path-parent], ());
@@ -1107,18 +1119,19 @@
    * @type Def(uri) or \"name\"{uri} or uri@[namespace|path] -> List(Def(uri))
    */
   index-get-children(|namespace) = 
-    index-get-children(\\uri -> Def(uri)\\|namespace)
+    index-get-children(\\uri -> Def(uri)\\, id|namespace)
   
   /**
    * Gets all children elements of an URI in a certain namespace using custom templates.
    * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
    *
    * @param construct-template  uri -> template. Should create a template to match index entries with, given an URI.
+   * @param name-compare        element -> ?element. Strategy for filtering children elements.
    * @param namespace           Only child elements in this namespace are returned.
    * @type Def(uri) or \"name\"{uri} or uri@[namespace|path] -> List(Def(uri))
    */
-  index-get-children(construct-template|namespace):
-    <with(?Def([parent-ns | path]) <+ ?_{[parent-ns | path]} <+ ?[parent-ns | path] | \"Def, key or uri expected\")> -> children
+  index-get-children(construct-template, name-compare|namespace):
+    <with([parent-ns | path] := <index-uri> | \"Def, key or URI expected\")> -> children
     with
       template  := <construct-template> [namespace | path];
       children  := <prim(\"LANG_index_get_children\", template)>;
@@ -1135,10 +1148,10 @@
    *
    * @param namespace Only child Def elements in this namespace are returned.
    * @param prefix    Only child Def elements where the name starts with this prefix are returned.
-   * @type Def(uri) or \"name\"{uri} or uri@[namespace|path] -> List(Def(uri))
+   * @type Def(uri) or \"name\"{uri} or [namespace|path] -> List(Def(uri))
    */
   index-get-children(|namespace, prefix) = 
-    index-get-children(\\uri -> Def(uri)\\|namespace, prefix)
+    index-get-children(\\uri -> Def(uri)\\, index-compare-name-substring(|prefix, namespace)|namespace, prefix)
   
   /**
    * Gets all children elements of an URI in a certain namespace where the name starts with a prefix
@@ -1146,18 +1159,18 @@
    * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
    *
    * @param construct-template  uri -> template. Should create a template to match index entries with, given an URI.
+   * @param name-compare        element -> ?element. Strategy for filtering children elements.
    * @param namespace           Only child elements in this namespace are returned.
    * @param prefix              Only child elements where the name starts with this prefix are returned.
-   * @type Def(uri) or \"name\"{uri} or uri@[namespace|path] -> List(Def(uri))
+   * @type Def(uri) or \"name\"{uri} or [namespace|path] -> List(Def(uri))
    */
-  index-get-children(construct-template|namespace, prefix):
-    <with(?Def([parent-ns | path]) <+ ?_{[parent-ns | path]} <+ ?[parent-ns | path] | \"Def, key or uri expected\")> -> children'
+  index-get-children(construct-template, name-compare|namespace, prefix):
+    <with([parent-ns | path] := <index-uri> | \"Def, key or URI expected\")> -> children'
     with
-      prefix'   := <strip-annos> prefix;
       template  := <construct-template> [namespace | path];
       children  := <prim(\"LANG_index_get_children\", template)>;
-      children' := <filter(index-is-name-substring(|prefix'))> children;
-      <store-wildcard-read(|namespace, path, prefix')> children'
+      children' := <filter(name-compare)> children;
+      <store-wildcard-read(|namespace, path, prefix)> children'
 
   /**
    * Gets a set of all files that have a reference to the given index entries.
@@ -1194,67 +1207,103 @@
 rules // Index lookup rules (that take into account adjust-index-lookup)
  
   /**
-   * Given an annotated AST node, resolves it, returning its Def.
+   * Given an annotated AST node, resolves it, returning its definition.
+   * Uses precise matching for names.
    *
    * @type \"name\"{uri} -> ?Def(uri')
    */
   index-lookup:
-    x{[namespace|path]} -> <index-lookup(id|<index-namespace-unwrap> namespace, path, <strip-annos> x)>
+    x{[namespace|path]} -> <index-lookup-internal(index-compare-name-equal(|name)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
  
   /**
-   * Given an annotated AST node, resolves it, returning all its Defs.
+   * Given an annotated AST node, resolves it, returning all its definitions.
+   * Uses precise matching for names.
    * 
    * @type \"name\"{uri} -> List(Def(uri'))
    */
   index-lookup-all:
-    x{[namespace|path]} -> <index-lookup-all(id|<index-namespace-unwrap> namespace, path, <strip-annos> x)>
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-name-equal(|name)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
  
   /**
-   * Given an annotated AST node, returns the outermost Def with a corresponding URI.
+   * Given an annotated AST node and a prefix, looks for all definitions with given prefix starting at the scope of 
+   * the given node.
+   * Uses substring matching for names.
    *
-   * @param prefix  Only Defs with a name that starts with this string are returned.
-   * @type \"name\"{uri} -> ?Def(uri')
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type \"name\"{uri} -> List(Def(uri'))
    */
-  index-lookup-outermost(|prefix):
-    x{[namespace|path]} -> <index-lookup-outermost(id|<index-namespace-unwrap> namespace, path, prefix)>
- 
+  index-lookup-all(|prefix):
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-name-substring(|prefix)|ns, path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace
+      
   /**
-   * Given an annotated AST node, returns Defs that have the same parent URI.
+   * Given an annotated AST node, resolves it in only the parent scope of the given node, returning all its definitions.
+   * Uses precise matching for names.
    *
-   * @param prefix  Only Defs with a name that starts with this string are returned.
    * @type \"name\"{uri} -> List(Def(uri'))
    */
-  index-lookup-one-level(|prefix):
-    x{[namespace|path]} -> <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix)>
+  index-lookup-all-scoped:
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(index-compare-name-equal(|name)|ns, parent-path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x;
+      (<?[_|<id>]> path <+ !path) => parent-path
       
   /**
-   * Given an annotated AST node, resolves it, and returns all possibly matching Defs with a common ancestor URI. 
+   * Given an annotated AST node, resolves it in only the parent scope of the given node, returning all its definitions.
+   * Uses precise matching for names. Imports are not considered.
    *
-   * @param namespace Only Defs with this namespace are returned.
-   * @param prefix    Only Defs with a name that starts with this string are returned.
    * @type \"name\"{uri} -> List(Def(uri'))
    */
-  index-lookup-all-levels(|prefix):
-    x{[namespace|path]} -> <index-lookup-all-levels(id|<index-namespace-unwrap> namespace, path, prefix)>
- 
+  index-lookup-all-scoped-noimports:
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(fail, id, index-compare-name-equal(|name)|ns, parent-path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x;
+      (<?[_|<id>]> path <+ !path) => parent-path
+  
   /**
-   * Given an annotated AST node, resolves it, and returns all child Defs of its definition.
+   * Given an annotated AST node and a prefix, looks for all definitions with given prefix in only the parent scope of 
+   * the given node.
+   * Uses substring matching for names.
    *
-   * @param namespace Only child Defs with this namespace are returned.
-   * @param prefix    Only Defs with a name that starts with this string are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
    * @type \"name\"{uri} -> List(Def(uri'))
    */
-  index-lookup-children(|namespace, prefix): // TODO: how does this compare w/ index-lookup-one-level?
-    x{[ns | path]} -> defs
-    with
-      if !ns => Unresolved(_) then
-        Def([_ | def-path]) := <index-lookup>;
-        defs := <index-lookup-one-level(id|namespace, def-path, prefix)> x
-      else
-        defs := <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix)>
-      end
-    <+
-      defs := []
+  index-lookup-all-scoped(|prefix):
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(index-compare-name-substring(|prefix)|ns, parent-path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      (<?[_|<id>]> path <+ !path) => parent-path
+
+  /**
+   * Given an annotated AST node and a namespace, returns all definitions inside given node with given namespace.
+   * Does not match names, all names are allowed.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @type \"name\"{uri} -> List(Def(uri'))
+   */
+  index-lookup-children(|namespace) = 
+    index-lookup-children(|namespace, \"\")
+      
+  /**
+   * Given an annotated AST node, a namespace and prefix, returns all definitions inside given node with given 
+   * namespace and prefix.
+   * Uses substring matching for names.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type \"name\"{uri} -> List(Def(uri'))
+   */    
+  index-lookup-children(|namespace, prefix):
+    x{[_|path]} -> <index-lookup-all-scoped-internal(index-compare-name-substring(|prefix, namespace)|namespace, path, prefix)> x
       
 rules // Index utilities
   
@@ -1298,21 +1347,6 @@
     x{[_|[name|_]]} -> name
     
   /**
-   * Tries to get the name part of the URI for given term or fail if given term does not have an URI or name.
-   *
-   * Example:
-   *   <index-uri-name> Def([Entity(), \"Bar\", \"Baz\"]) => \"Bar\"
-   *   <index-uri-name> Type(\"Foo\") => fail
-   *   <index-uri-name> Read([Entity()]) => fail
-   *
-   * @type x -> name
-   */   
-  index-uri-name:
-    x -> <index-uri-name> <index-uri> x
-    where
-      not(<has-annos> x)
-    
-  /**
    * Determines if a given AST node is a definition site, according to the syntax.
    *
    * FIXME: Also succeeds on use sites.
@@ -1336,11 +1370,21 @@
     (k1, k2) -> <id>
     where
       <eq> (<index-key-unwrap> k1, <index-key-unwrap> k2)
+      
+  /**
+   * Given a list of file pairs, returns the list of real files.
+   *
+   * @type List((file, subfile)) -> List(file)
+   */    
+  index-filepairs-to-files:
+    filePairs -> files
+    with
+      files := <make-set> <map(Fst; string-replace(|<conc-strings> (<project-path>, \"/\"), \"\"))> filePairs
 "
 
 	create-analysis-internal-library =
-	  try(<file-exists <+ mkdir> "lib");
-	  <output-text-file(|["lib"], "analysis-library-internal.generated.str")>
+		  try(<file-exists <+ mkdir> "lib");
+		  <output-text-file(|["lib"], "analysis-library-internal.generated.str")>
 "module lib/analysis-library-internal.generated
  
 imports
@@ -1359,6 +1403,13 @@
   // Namespaces
   Diff            : Namespace
   ASTDiff         : Namespace
+  AST             : Namespace
+  
+  // Data
+  AST             : List(UriPart) * AST -> AST
+  
+  // Annotations 
+  Scope: Term -> Anno
   
 rules // Analysis traversals
   
@@ -1413,7 +1464,7 @@
         filesToAnalyze := []
       end
     with
-      <list-loop(analyze-top-store-ast)> astFilePairs4
+      <list-loop(analyze-top-store-ast(|full-path))> astFilePairs4
       
   /**
    * Add URI annotations to each definition and unresolved URI annotations to each use site.
@@ -1424,7 +1475,8 @@
     (ast, file) -> ((ast2, file), defs)
     with
       <index-set-current-file> file;
-      (Some(ast2), defs) := <analyze-defs> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
+      (Some(ast2), edefs) := <analyze-defs> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
+      defs := <map(Snd)> edefs; 
       <index-add-all(|file)> defs
       
   /**
@@ -1444,10 +1496,10 @@
         ast2 := <prim(\"SSL_EXT_clone_and_set_parents\", <id>)> ast; // Parent pointers needed.
         data := <origin-track-forced(analyze-tree-data)> ast2;
         
-        // Resolve all references in gathered data.
-        (data2, _) := <analyze-uses> data; // Ignoring data uses, have not found a use-case for them yet.
-        <index-add-all(|file)> data2;
-        
+				// Resolve all references in gathered data.
+				(data2, _) := <analyze-uses> data;
+				<index-add-all(|file)> data2;
+				
         // Store reads into the index (if not testing language)
         if not(is-test-input(|language, full-path)) then
           <index-add-all(|file)> <iset-elements> readSet
@@ -1484,10 +1536,21 @@
    *
    * @internal
    */   
-  analyze-top-store-ast:
+  analyze-top-store-ast(|full-path):
+    (ast, (_, subfile)) -> <id>
+    where
+      <index-add(|full-path)> AST(subfile, ast)
+
+  /**
+   * Stores AST from file to the index.
+   *
+   * @internal
+   */   
+  analyze-top-store-ast(|full-path):
     (ast, file) -> <id>
-    with
-      <index-set-global(|<conc> (<index-file-to-uri> file, [\"ast\"]))> ast
+    where
+      <is-string> file;
+      <index-add(|full-path)> AST([AST()], ast)
       
   /**
    * Identifies all definitions in the tree and annotates them with their URI.
@@ -1495,66 +1558,100 @@
    *
    * @internal
    */
-  analyze-defs = analyze-defs(|Anon(), Anon())
+  analyze-defs:
+  	ast -> (<analyze-defs(|[], set, Anon(), Anon())> ast, <iset-elements> set)
+  	where
+  		set := <new-iset>
+  		 
+  /** @internal */
+  analyze-defs(|paths, defs, head-scope, head-scope-ns):
+    ast{Scope([namespace, name | path])} -> ast'
+    where
+      paths' := <update-index-paths(|[(namespace, path)])> paths ;
+      ast'   := <rm-annotations; analyze-defs(|paths', defs, Anon(), Anon())> ast
+      
+  
   /** @internal */
-  analyze-defs(|head-scope, head-scope-ns):
-    ast -> (ast', defs')
+  analyze-defs(|paths, defs, head-scope, head-scope-ns):
+    ast -> ast'
+    where
+    	<not(has-annos)> ast    	
     with
-      if def := <nam-get-definition> ast then
-        Def(def-path)                     := def;
-        [head-scope-ns', head-scope' | _] := def-path
+      if (namespace, path) := <nam-get-definition> ast then
+      	definition     := <nam-get-def(|paths, namespace)> path;
+      	Def(def-path)  := definition; 
+        head-scope-ns' := namespace;
+        head-scope'    := <Hd> path;
+        f#(children)   := <try(nam-annotate-scopes(|def-path))> ast;
+        <iset-add(|(<new>, definition))> defs
       else
         def-path       := INTERNAL_ERROR();
         head-scope-ns' := head-scope-ns;
-        head-scope'    := head-scope
+        head-scope'    := head-scope;
+        f#(children)   := ast
       end;
       if scope-types := <nam-get-scope-types> ast then
-        {| IndexPath:
-          <list-loop(update-index-path(|head-scope', head-scope-ns', ast))> scope-types;
-          // <balanced-update-path> head-scope';
-          (ast', defs) := <analyze-defs-recurse(|Anon(), Anon(), def-path)> ast
-        |}
-      else
-        (ast', defs) := <analyze-defs-recurse(|head-scope', head-scope-ns', def-path)> ast
+      	unique          := Anon(<new>);
+        updates         := <map(construct-index-path(|paths, head-scope', head-scope-ns', unique, ast))> scope-types;
+        paths'          := <update-index-paths(|updates)> paths;
+        head-scope-ns'' := Anon();
+        head-scope''    := Anon()
+      else
+      	paths'          := paths;
+      	head-scope-ns'' := head-scope-ns';
+        head-scope''    := head-scope'
       end;
-      defs' := <![def | defs] <+ !defs>
-      
+      children' := <origin-track-forced(analyze-child-defs(|paths', defs, head-scope'', head-scope-ns''))> children;
+      ast'      := <try(nam-annotate-names(|paths', def-path))> f#(children') 
+       
   /** @internal */
-  analyze-defs-recurse(|head-scope, head-scope-ns, def-path):
-    ast -> (ast'', defs)
-    where
-      analyzed      := <all(analyze-defs(|head-scope, head-scope-ns))> ast;
-      (ast', defs)  := <unzip-analyzed> analyzed;
-      ast''         := <try(nam-annotate-names(|def-path))> ast'
- 
+  analyze-child-defs(|paths, defs, head-scope, head-scope-ns):
+  	[] -> []
+  	
+  /** @internal */
+  analyze-child-defs(|paths, defs, head-scope, head-scope-ns):
+  	[d|ds] -> [d'|ds']
+  	where
+  	  d'  := <analyze-defs(|paths, defs, head-scope, head-scope-ns)> d ;
+  	  if <nam-ordered-def> d then
+  	  	[namespace, name | path] := <nam-get-definition-key ; index-uri> d' ;
+        paths'                   := <update-index-paths(|[(namespace, path)])> paths ;
+  	  	ds'                      := <analyze-child-defs(|paths', defs, Anon(), Anon())> ds
+  	  else
+  	    ds' := <analyze-child-defs(|paths, defs, head-scope, head-scope-ns)> ds
+  	  end
+  
   /** @internal */
-  update-index-path(|head-scope, head-scope-ns, ast):
-    scope-type -> scope-type
+  construct-index-path(|paths, head-scope, head-scope-ns, unique, ast):
+    scope-type -> (scope-type, path'')
     where
       if !head-scope-ns => Anon() then
-        path  := <IndexPath <+ ![]> scope-type;
-        path' := <do-adjusted-index-path(|scope-type, path, Anon(<new>))> ast
+        path  := <lookup-index-path> (scope-type, paths);
+        path' := <index-do-adjust-path(|scope-type, path, Anon(<new>))> ast
       else
-        path  := <IndexPath <+ ![]> head-scope-ns;
-        path' := <do-adjusted-index-path(|scope-type, path, head-scope)> ast
+        path  := <lookup-index-path> (head-scope-ns, paths);
+        path' := <index-do-adjust-path(|scope-type, path, head-scope)> ast
       end;
-      rules(IndexPath: scope-type -> path')
- 
-  /* TODO: consider using simple-update-def-path
-   *       which uses \"balanced\" path scopes
-   *       e.g. when Entity doesn't scope Function
-   *       then it's hard to access properties from a function
-  balanced-update-index-path:
-    head-scope -> head-scope
-    where
-      if !head-scope => Anon() then
-        head-scope' := Anon(<new>)
+      // HACK: Disable generation of anonymous namespaces for unique definitions to let FieldAccess-like constructs work.
+      if /*<nam-unique> ast*/ fail then
+      	path'' := <index-do-adjust-path(|scope-type, path', unique)> ast
       else
-        head-scope' := head-scope
-      end;
-      (something with do-adjust-path)
-      rules(IndexPath := [head-scope' | <IndexPath <+ ![]> ()])
-  */
+      	path'' := path'
+      end
+      
+  /** @internal */
+  update-index-paths(|updates) = 
+    remove-all(?(<id>, _); !(<id>, updates) ; lookup') ; at-end(!updates)
+  
+  /** @internal */
+  lookup-index-path = 
+    lookup' <+ ![]
+ 
+  /** @internal */
+  index-do-adjust-path(|namespace, path, scope) =
+    adjust-index-path(origin-equal(|scope)|namespace, path)
+  <+
+    ![scope|path]
  
   /**
    * Analyze all uses, changing their preliminary \"Unresolved(_)\" URI to a definite URI of their definition.
@@ -1567,7 +1664,7 @@
       analyzed     := <all(analyze-uses)> ast;
       (ast', uses) := <unzip-analyzed> analyzed;
       if !ast' => _{unresolved@[Unresolved(namespace), x | path]} then
-        if Def(def-uri) := <index-lookup(id |namespace, path, <strip-annos> ast')> ast' then
+        if Def(def-uri) := <index-lookup> ast' then
           ast'' := ast{def-uri};
           uses' := [Use(def-uri) | uses]
         else
@@ -1632,13 +1729,17 @@
   
   /** @internal */   
   index-parse-file:
-    file -> (ast, file)
+    file -> (ast', file)
     with
-    if <file-exists> file then
-      ast := <parse-file> file
-    else
-      ast := ()
-    end
+	    if <file-exists> file then
+	    	if ast := <parse-file> file then
+	    		ast' := ast
+	      else
+	      	ast' := ()
+      	end
+	    else
+	      ast' := ()
+	    end
    
   /** @internal */   
   index-set-markers:
@@ -1768,121 +1869,180 @@
 rules // Index lookup rules (that take into account adjust-index-lookup)
   
   /**
-   * Given an annotated AST node, resolves it, returning all its Defs.
+   * Given a term x, namespace n, path s and prefix p, looks for a definition in the 
+   * scope of s and outer scopes in namespace n that start with prefix p, returning the first 
+   * found definition.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path or part of this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
    *
-   * @param prefix  Only Defs with a name that starts with this string are returned.
+   * @type term -> ?Def(uri')
    *
    * @internal
-   * @type \"name\"{uri} -> ?Def(uri')
    */
-  index-lookup(is-adjust-lookup-enabled|namespace, path, prefix):
-    x -> def
+  index-lookup-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> definition
     where
-      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
-      if <?StopLookup()> candidates then
+      defs := <index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix)> x;
+      
+      if StopLookup() := defs then
         fail
-      else
-        def        := <index-select(|namespace, path, x)>
-      <+
-        // TODO: optimize: try not to call do-adjust-index-lookup from here
-        [_ | path'] := path;
-        def         := <index-lookup(is-adjust-lookup-enabled|namespace, path', prefix)> x
+      end;
+      
+      if not(definition := <Hd> defs) then
+        [_|path']  := path;
+        definition := <index-lookup-internal(adjust-import, adjust-lookup, name-compare|namespace, path', prefix)> x
       end
+      
+  /** @internal */
+  index-lookup-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-internal(id, id, name-compare|namespace, path, prefix)
 
   /**
-   * Given an annotated AST node, resolves it, returning all its Defs.
-   *
-   * @param prefix  Only Defs with a name that starts with this string are returned.
+   * Given a term x, namespace n, path s and prefix p, looks for definitions in the scope of s 
+   * and outer scopes in namespace n that start with prefix p, returning all found definition.
    *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path or part of this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
    * @type \"name\"{uri} -> List(Def(uri'))
+   *
    * @internal
    */
-  index-lookup-all(is-adjust-lookup-enabled|namespace, path, prefix):
+  index-lookup-all-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
     x -> defs'
     where
-      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
-      defs       := <index-select-all(|namespace, path, x)>;
-      // TODO: optimize: try not to call do-adjust-index-lookup from here
-      if [_ | path'] := path then
-        defs2 := <index-lookup-all(is-adjust-lookup-enabled|namespace, path', prefix)> x;
+      defs := <index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix)> x;
+      
+      if [_|path'] := path then
+        defs2 := <index-lookup-all-internal(adjust-import, adjust-lookup, name-compare|namespace, path', prefix)> x;
         defs' := <conc> (defs, defs2)
       else
         defs' := defs
       end
+
+  /** @internal */
+  index-lookup-all-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-all-internal(id, id, name-compare|namespace, path, prefix)
       
   /**
-   * Given an annotated AST node, returns the outermost Def with a corresponding URI.
-   *
-   * @param prefix  Only Defs with a name that starts with this string are returned.
-   *
-   * @type \"name\"{uri} -> ?Def(uri')
-   * @internal
-   */
-  index-lookup-outermost(is-adjust-lookup-enabled |namespace, path, prefix):
-    x -> def
-    where
-      // TODO: optimize: just like index-lookup
-      [_ | path'] := path;
-      def         := <index-lookup-outermost(is-adjust-lookup-enabled |namespace, path', prefix)> x
-    <+
-      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
-      def        := <index-select(|namespace, path, x)>
-      
-  /**
-   * Given an annotated AST node, resolves it, and returns all possibly matching Defs with a common ancestor URI. 
+   * Given a term x, namespace n, path s and prefix p, looks for a definition in the 
+   * scope of s in namespace n that start with prefix p, returning the first found definition.
    *
-   * @param namespace Only Defs with this namespace are returned.
-   * @param prefix    Only Defs with a name that starts with this string are returned.
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type term -> List(Def(uri))
    *
-   * @type \"name\"{uri} -> List(Def(uri'))
    * @internal
    */
-  index-lookup-one-level(is-adjusted-lookup-enabled|namespace, path, prefix):
-    x{_} -> defs
+  index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> defs
     with
-      is-adjusted-lookup-enabled;
-      do-adjust-index-lookup(|namespace, path, x, prefix);
-      if ?StopLookup() then
-        defs := StopLookup()
-      else
-        mapconcat(\\d at Def(p) -> [d]\\
-          <+ \\[namespace' | path'] -> <index-lookup-one-level(fail |namespace', path', prefix)> x\\
-          <+ fatal-err(|\"Unexpected result from adjust-index-lookup, should be a list Def(_) or [namespace | path] or StopLookup() to stop the lookup\"));
-        ?defs
-      end
+      adjust-lookup;
+      adjusted := <index-do-adjust-lookup(|namespace, path, x, prefix)> x;
+      defs     := <index-get-adjust-lookup-results(adjust-import, name-compare|adjusted, prefix)> x
     <+
-      defs := <index-get-children(|namespace, prefix)> Def([namespace | path])
+      adjust-import;
+      adjusted := <index-do-adjust-import(|namespace, path)> x;
+      defs     := <index-get-adjust-import-results(adjust-lookup, name-compare|adjusted, prefix)> x
+    <+
+      defs     := <index-get-children(\\uri -> Def(uri)\\, name-compare|namespace, prefix)> [namespace | path]
       
-  /**
-   * Given an annotated AST node, resolves it, and returns all possibly matching Defs with a common ancestor URI. 
-   *
-   * @param prefix  Only Defs with a name that starts with this string are returned.
-   *
-   * @internal
-   * @type \"name\"{uri} -> List(Def(uri'))
-   */
-  index-lookup-all-levels(is-adjust-lookup-enabled |namespace, path, prefix):
-    x{_} -> all-defs
+  /** @internal */
+  index-lookup-all-scoped-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-all-scoped-internal(id, id, name-compare|namespace, path, prefix)
+  
+  /** @internal */
+  index-do-adjust-import(|namespace, path) =
+    adjust-index-import(|namespace, path)
+    
+  /** @internal */
+  index-get-adjust-import-results(adjust-lookup, name-compare|adjusted, prefix):
+    x -> defs'
     with
-      is-adjust-lookup-enabled;
-      do-adjust-index-lookup(|namespace, path, x, prefix);
-      if ?StopLookup() then
-        all-defs := []
-      else
-        mapconcat(\\d at Def(p) -> [d]\\
-            <+ \\[namespace' | path'] -> <index-lookup-all-levels(fail |namespace', path', prefix)> x\\
-            <+ fatal-err(|\"Unexpected result from adjust-index-lookup, should be a list Def(_) or [namespace | path] or StopLookup() to stop the lookup\"));
-        ?all-defs
-      end
-    <+
-      one-level := <index-get-children(|namespace, prefix)> Def([namespace | path]);
-      if [_ | path'] := path then
-        all-defs := <concat> [one-level, <index-lookup-all-levels(fail |namespace, path', prefix)> x]
+      defs := 
+        <mapconcat(
+             index-adjust-import-recurse(adjust-lookup, name-compare|x, prefix)
+          <+ fatal-err(|\"Unexpected result from adjust-index-import, should be a list of [namespace | path].\")
+        )> adjusted;
+        if not(<elem> (StopLookup(), defs)) then
+        	defs' := <filter(name-compare)> defs
+        else
+        	defs' := StopLookup()
+      	end
+      	
+  /** @internal */
+  index-adjust-import-recurse(adjust-lookup, name-compare|x, prefix):
+  	[namespace|path] -> results'
+  	with
+  		results := <index-lookup-all-scoped-internal(fail, adjust-lookup, name-compare|namespace, path, prefix)> x;
+  		if not(<is-list> results) then
+  			results' := [results]
+  		else
+  			results' := results
+			end
+        
+  /** @internal */
+  index-do-adjust-lookup(|namespace, path, use, prefix) =
+    repeat-until(
+      prim(\"SSL_EXT_get_parent\", <id>)
+    , adjust-index-lookup(origin-equal(|use)|namespace, path, prefix) 
+    )
+    
+  /** @internal */  
+  index-get-adjust-lookup-results(adjust-import, name-compare|adjusted, prefix):
+    x -> defs'
+    with
+      if StopLookup() := adjusted then
+        defs' := StopLookup()
       else
-        all-defs := one-level
+        defs := 
+          <mapconcat(
+               \\d at Def(p) -> [d]\\
+            <+ \\[namespace'|path'] -> <index-lookup-all-scoped-internal(adjust-import, fail, name-compare|namespace', path', prefix)> x\\
+            <+ fatal-err(|\"Unexpected result from adjust-index-lookup, should be a list of Def(uri) or [namespace | path], or StopLookup() to stop the lookup.\")
+          )> adjusted;
+          defs' := <filter(name-compare)> defs
       end
       
-/** @internal */
+rules // Name comparisons
+
+  /**
+   * Compares given element (with an URI) to given name using string equality comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-equal(|name):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <SRTS-EXT-eq-ignore-annos(|name)> <index-uri-name> uri
+  
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-substring(|prefix):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <is-substring(!prefix)> <index-uri-name> uri
+      
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison and given namespace.
+   * 
+   * @internal 
+   */      
+  index-compare-name-substring(|prefix, namespace):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <eq> (namespace, <index-uri-namespace> uri);
+      <is-substring(!prefix)> <index-uri-name> uri
+      
 rules // URI and value projections
        
   /** @internal */
@@ -1924,8 +2084,7 @@
   /** @internal */
   index-value-impl:
     ReadWildcard(_, value) -> value
-       
-/** @internal */
+    
 rules // Internal helpers
 
   /**
@@ -1957,21 +2116,9 @@
   fake-file = 
     is-test-file <+ index-is-fake-file
   
-  /** @internal */    
-  index-filepair-to-file = 
-    Fst; string-replace(|$[[<project-path>]/], \"\")
-  
   /** @internal */
   ast-uri-to-ast-file(|full-path):
     (ast, uri) -> (ast, (full-path, uri))
-  
-  /** @internal */     
-  index-is-name-substring(|name):
-    template -> <id>
-    with
-      [_, uri-name | _] := <index-uri>
-    where
-      <is-substring(!name)> uri-name
    
   /** @internal */    
   index-readwildcard-substring(|prefix):
@@ -1986,9 +2133,9 @@
         if 1 := <length> children then
           // HACK: This solves the problem of ReadWildcards making too many files re-analyze, but this should
           // be handled in the index primitives instead.
-          <iset-add(|Read([namespace | path]))> set
+          <iset-add(|Read([namespace, prefix|path]))> set
         else
-          <iset-add(|ReadWildcard([namespace | path], prefix))> set
+          <iset-add(|ReadWildcard([namespace|path], prefix))> set
         end
       end
   
@@ -2011,35 +2158,6 @@
     ?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_)
  
   /** @internal */
-  do-adjust-index-lookup(|namespace, path, use, prefix) =
-    repeat-until(
-      prim(\"SSL_EXT_get_parent\", <id>)
-    , adjust-index-lookup(origin-equal(|use) |namespace, path, prefix) 
-    )
- 
-  /** @internal */
-  index-select(|namespace, path, use) =
-    getfirst(
-      where(
-        ?Def([_, <SRTS-EXT-eq-ignore-annos(|use)> | _])
-      )
-    )
- 
-  /** @internal */
-  index-select-all(|namespace, path, use) =
-    filter(
-      where(
-        ?Def([_, <SRTS-EXT-eq-ignore-annos(|use)> | _])
-      )
-    )
- 
-  /** @internal */
-  do-adjusted-index-path(|namespace, path, def) =
-    adjust-index-path(origin-equal(|def) |namespace, path)
-  <+
-    ![def | path]
- 
-  /** @internal */
   index-eq(|namespace, expected) =
     where(
       ?Def([_, name | _]);
@@ -2053,30 +2171,61 @@
   index-key-unwrap = 
     \\key{uri} -> key{<index-uri-unwrap> uri}\\ <+ id
     
-/** @internal */
 rules // Interface for generated code
  
   /** @internal */
-  nam-get-def(|namespace):
-    x -> Def([namespace, x | <IndexPath <+ ![]> namespace])
+  nam-get-def(|paths, namespace):
+    part* -> Def([namespace, part* | <lookup-index-path> (namespace, paths)])
+  
+  /** @internal */ 
+  nam-annotate-def(|path):
+    t -> result
+    with
+    	result := t{path}
   
   /** @internal */ 
-  nam-annotate-use(|namespace):
-    t -> t{[Unresolved(namespace), t | <IndexPath <+ ![]> namespace]}
+  nam-annotate-use(|paths, namespace):
+    t -> t{[Unresolved(namespace), t | <lookup-index-path> (namespace, paths)]}
+  
+  /** @internal */ 
+  nam-annotate-use(|paths, namespace, namespace2, name):
+  	t -> t{[Unresolved(namespace), t | <lookup-index-path> (namespace, paths)]}
+  	
+  /** @internal */ 
+  nam-annotate-scope(|path):
+    t -> t{Scope(path)}
   
   /** @internal */ 
   nam-get-scope-types = fail
+  /** @internal */ 
+  nam-ordered-def = fail
+  /** @internal */
+  nam-get-definitions = fail
   /** @internal */
-  nam-get-definition = fail
+  nam-get-definition = nam-get-definitions ; Hd 
   /** @internal */
-  nam-get-definition-key = fail
+  nam-get-definition-keys = fail
   /** @internal */
-  nam-annotate-names(|def-path) = fail
+  nam-get-definition-key = nam-get-definition-keys ; Hd
+  /** @internal */
+  nam-get-uses = fail
+  /** @internal */
+  nam-get-use = nam-get-uses ; Hd 
+  /** @internal */
+  nam-get-uses-keys = fail
+  /** @internal */
+  nam-get-use-key = nam-get-uses-keys ; Hd
+  /** @internal */
+  nam-annotate-names(|paths, def-path) = fail
+  /** @internal */
+  nam-annotate-scopes(|def-path) = fail
+  /** @internal */
+  nam-unique = fail
 "
 
   create-compilation-library =
-  try(<file-exists <+ mkdir> "lib");
-  <output-text-file(|["lib"], "compilation-library.generated.str")>
+	  try(<file-exists <+ mkdir> "lib");
+	  <output-text-file(|["lib"], "compilation-library.generated.str")>
 "module lib/compilation-library.generated
 
 imports
@@ -2121,6 +2270,16 @@
    * @type ast -> None()
    */
   index-compile-ast(|file, subfile) = fail
+
+  /**
+   * Extension point. 
+   */
+  index-is-partial-ast = fail
+
+  /**
+   * Extension point. 
+   */
+  index-combine-asts = fail
   
 rules // Compilation
   
@@ -2146,21 +2305,48 @@
       diffs         := <analyze-get-compilediffs>;
       files         := <map(index-compilation-restore-read-file)> diffs;
       filteredFiles := <make-set> <remove-all(index-compilation-filter-file)> files;
+      (completeFiles, partialFiles) := <index-split-partial-files> filteredFiles;
       
       // Clean compile time reads
-      <filter(index-compilation-clean-reads)> filteredFiles;
+      <filter(index-compilation-clean-reads)> completeFiles;
+      <filter(index-compilation-clean-reads)> partialFiles;
       
       // Set total work units to number of files to compile for visual indication
-      <set-total-work-units> <length> filteredFiles;
+      <set-total-work-units> <add> (<length> completeFiles, <length> partialFiles);
       
       // Compile the files
-      <filter(index-compilation-file(|language, project-path); complete-work-unit)> filteredFiles
+      <filter(index-compilation-file; complete-work-unit)> completeFiles;
+      <filter(index-compilation-partial-file; complete-work-unit)> partialFiles
+      
+  /** @internal */    
+  index-split-partial-files:
+    files -> (completeFiles, <make-set> splitFiles)
+    with
+      (completeFiles, splitFiles) := <partition(not(index-file-is-partial), index-file-is-partial)> files
 
   /** @internal */
-  index-compilation-file(|language, project-path):
+  index-compilation-file:
+    (path, subfile) -> None()
+    with
+    	asts := <index-get-all-values> AST(subfile, ());
+      <map(index-compilation-ast(|path, subfile))> asts
+      
+  /** @internal */    
+  index-compilation-partial-file:
     (path, subfile) -> None()
     with
-      ast := <index-get-global(|<conc> (<index-file-to-uri> (path, subfile), [\"ast\"]))>;
+      asts := <index-get-all-values> AST(subfile, ());
+      if 1 := <length> asts then
+      	ast := <?[<id>|_]> asts
+    	else
+    		ast := <try(index-combine-asts)> asts
+  		end;
+      <index-compilation-ast(|path, subfile)> ast
+      
+  /** @internal */
+  index-compilation-ast(|path, subfile):
+    ast -> None()
+    with
       {| Index-ReadSet:
         readSet := <new-iset>;
         rules(Index-ReadSet: _ -> readSet);
@@ -2171,7 +2357,7 @@
         // Store compile-time reads.
         reads := <iset-elements> readSet;
         <index-add-all(|<index-compilation-file-tuple> (path, subfile))> reads
-      |}
+      |} 
 
   /** @internal */
   index-compilation-filter-file:
@@ -2247,12 +2433,22 @@
   index-compilation-restore-read-file:
     (file, subfile) -> (file', subfile)
     where
-      file' := <string-replace(|<index-compilation-read-path>, \"\")> file
+      if removedPath := <string-replace(|<index-compilation-read-path>, \"\")> file then
+        file' := removedPath
+      else
+        file' := file
+      end
+
   /** @internal */
   index-compilation-restore-read-file:
-    (file, subfile) -> (file, subfile)
+    file -> file'
     where
-      not(<string-replace(|<index-compilation-read-path>, \"\")> file)
+      not(<is-tuple> file);
+      if removedPath := <string-replace(|<index-compilation-read-path>, \"\")> file then
+        file' := removedPath
+      else
+        file' := file
+      end
       
   /** @internal */
   index-compilation-clean-reads = 
@@ -2265,4 +2461,162 @@
   /** @internal */
   index-compilation-read-path =
     !\"/.internal/reads/compile\"
+    
+/** @internal */
+rules // Utility
+
+  /** @internal */
+  index-file-is-partial:
+  	file -> file
+  	where 
+      Snd; index-uri; index-is-partial-ast
+"
+
+  create-nbl-library =
+	  try(<file-exists <+ mkdir> "lib");
+	  <output-text-file(|["lib"], "nbl-library.generated.str")>
+"module lib/nbl-library.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  
+signature constructors
+  
+  Type        : DefDataKind
+  Import      : DefDataKind
+  Transitive  : ImportAnno
+  CurrentFile : ImportAnno
+  
+rules // Import adjust rule
+     
+  import-transitive =
+    collect-one(?Transitive())
+  import-standard =
+    not(import-transitive)
+    
+  import-values(|namespace, path) =
+    <index-get-all-values> DefData([namespace| path], Import(), ())
+    
+  import-currentfile-values(|namespace) =
+    <index-get-all-values> DefData([namespace|[<index-file-to-string> <index-get-current-file>]], Import(), ())  
+    
+  adjust-index-import(|namespace, path):
+    _ -> <concat> [[[namespace | path]], currentFileImportDefs, importDefs]
+    with
+      uri := [namespace | path]
+    where
+      allImports := <import-values(|namespace, path)> ;
+      importDefs := <mapconcat(import-defs(|namespace, [uri]))> allImports
+    where
+      currentfileImports := <import-currentfile-values(|namespace)> ;
+      currentFileImportDefs := <mapconcat(import-defs(|namespace, [uri]))> currentfileImports
+    
+  import-defs(|namespace, seen):
+    (key, <import-standard>) -> [uri]
+    with
+      uri := [namespace | <index-uri-path> key]
+      
+  import-defs(|namespace, seen):
+    (key, <import-transitive>) -> <conc> ([uri], transitiveUris)
+    with
+      path := <index-uri-path> key ;
+      uri := [namespace | path] ;
+      
+      if not(<elem> (uri, seen)) then
+        allImports := <import-values(|namespace, path)> ;
+        transitiveUris := <mapconcat(import-defs(|namespace, [uri|seen]))> allImports
+      else
+        transitiveUris := []
+      end
+
+rules // Adjust difference comparison
+    
+  // Add Type to the constructors to check for differences.
+  index-diff-constructors = ?DefData(_, Type(), _)
+  
+  // Type definitions are equal if their URI is equal and if their values are equal.
+  index-diff-compare:
+    (DefData(u1, Type(), v1), DefData(u2, Type(), v2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2);
+       <index-key-eq> (v1, v2)
+
+rules // Error checks
+  
+  constraint-error:
+    x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
+    
+  constraint-error:
+    definition -> (key, $[Duplicate definition])
+    where
+      <nam-unique> definition;
+      key := <nam-get-definition-key> definition;
+      defs := <index-lookup-all-scoped-noimports> key;
+      <gt> (<length> defs, 1)
+      
+rules // Type dependant lookup
+	
+	/**
+   * Given an annotated AST node and a type, resolves it and checks if type equals given type, returning its definition.
+   * Uses precise matching for names.
+   *
+   * @param type	Only definitions with this type are returned.
+   * @type \"name\"{uri} -> ?Def(uri')
+   */
+  index-lookup-typed(|type):
+    x{[namespace|path]} -> <index-lookup-internal(index-compare-nametype-equal(|name, type)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
+
+  /**
+   * Given an annotated AST node, a prefix and a type, looks for all definitions with given prefix and type starting at the scope of 
+   * the given node.
+   * Uses substring matching for names.
+   *
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @param type			Only definitions with this type are returned.
+   * @type \"name\"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-typed(|prefix, type):
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-nametype-substring(|prefix, type)|ns, path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace
+
+  /**
+   * Compares given element (with an URI) to given name using string equality comparison and given type using equality.
+   * 
+   * @internal 
+   */     
+  index-compare-nametype-equal(|name, type):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <SRTS-EXT-eq-ignore-annos(|name)> <index-uri-name> uri;
+      <nbl-type-eq(|type)> <nbl-get-type> uri
+      
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison and given type using equality.
+   * 
+   * @internal 
+   */     
+  index-compare-nametype-substring(|prefix, type):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <is-substring(!prefix)> <index-uri-name> uri;
+      <nbl-type-eq(|type)> <nbl-get-type> uri
+  
+  /** @internal */
+  nbl-get-type:
+  	uri -> <index-get-data(|Type())> Def(uri)
+  
+  // TODO: Allow user defined type equality.
+  /** @internal */	
+  nbl-type-eq(|type) = 
+  	<eq> (<id>, type)
 "
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-nbl-example.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-nbl-example.str	Thu Jul 12 14:40:46 2012	(r25191)
@@ -0,0 +1,168 @@
+module sdf2imp/project/create-nbl-example
+
+imports
+  sdf2imp/util/-
+
+strategies
+
+  create-example-nd =
+    <file-exists> <conc-strings> ("trans/names.nd")
+  <+
+    sdf-name := <get-sdf-main-module>;
+    <output-text-file(|["trans"], $[names.nd])>
+${module names
+
+imports
+	
+	include/{sdf-name}
+	lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  lib/index-library.generated
+	
+namespaces
+	
+	Module
+	Entity
+	Property
+	
+rules
+
+	Module(x, _) : 
+		defines Module x
+		scopes Entity
+		
+	Entity(x, _) :
+		defines Entity x of type Type(x)
+		scopes Property
+		
+	Property(x, t) :
+		defines Property x of type t
+		
+	Type(x) :
+		refers to Entity x
+		refers to Entity "String"
+		refers to Entity "Int"
+}
+
+  create-placeholder-compiled-nd =
+    <file-exists> <conc-strings> ("trans/names.str")
+  <+
+    sdf-name := <get-sdf-main-module>;
+    <output-text-file(|["trans"], $[names.str])>
+${module names
+
+imports
+
+
+imports
+  include/{sdf-name}
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  lib/index-library.generated
+
+
+signature
+  constructors
+    Type        : DefDataKind
+    Import      : DefDataKind
+    Transitive  : ImportAnno
+    CurrentFile : ImportAnno
+
+  constructors
+    Module   : Namespace
+    Entity   : Namespace
+    Property : Namespace
+
+
+rules
+
+  nam-get-scope-types :
+    Module(x, _) -> [Entity()]
+
+  nam-get-definition-keys :
+    Module(x, _) -> [x]
+
+  nam-get-definitions :
+    Module(x, _) -> [(Module(), [x])]
+
+  nam-annotate-names(|paths__, path__):
+    Module(x, _) -> <Module(nam-annotate-def(|path__), id)>
+
+  nam-unique :
+    Module(x, _) -> <id>
+
+
+rules
+
+  nam-get-scope-types :
+    Entity(x, _) -> [Property()]
+
+  nam-get-definition-keys :
+    Entity(x, _) -> [x]
+
+  nam-get-definitions :
+    Entity(x, _) -> [(Entity(), [x])]
+
+  nam-annotate-names(|paths__, path__):
+    Entity(x, _) -> <Entity(nam-annotate-def(|path__), id)>
+
+  adjust-index-def-data(store__|namespace__, path__):
+    Entity(x, _) -> <store__> DefData(
+                                [namespace__|path__]
+                              , Type()
+                              , Type(x)
+                              )
+
+  type-of :
+    Entity(x, _) -> Type(x)
+
+  nam-unique :
+    Entity(x, _) -> <id>
+
+
+rules
+
+  nam-get-definition-keys :
+    Property(x, t) -> [x]
+
+  nam-get-definitions :
+    Property(x, t) -> [(Property(), [x])]
+
+  nam-annotate-names(|paths__, path__):
+    Property(x, t) -> <Property(nam-annotate-def(|path__), id)>
+
+  adjust-index-def-data(store__|namespace__, path__):
+    Property(x, t) -> <store__> DefData(
+                                  [namespace__|path__]
+                                , Type()
+                                , t
+                                )
+
+  type-of :
+    Property(x, t) -> t
+
+  nam-unique :
+    Property(x, t) -> <id>
+
+
+rules
+
+  nam-get-uses-keys :
+    Type(x) -> [x, "String", "Int"]
+
+  nam-get-uses :
+    Type(x) -> [ (Entity(), [x])
+               , (Entity(), ["String"])
+               , (Entity(), ["Int"])
+               ]
+
+  nam-annotate-names(|paths__, path__):
+    Type(x) -> <Type(nam-annotate-use(|paths__, Entity()))>
+
+  adjust-index-lookup(target__|namespace__, path__, prefix__):
+    Type(x) -> <concat> [ [[Entity()|path__]]
+                        , [Def([Entity(), "String"])]
+                        , [Def([Entity(), "Int"])]
+                        ]
+    where <target__> x
+}
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-builders-descriptor.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-builders-descriptor.str	Thu Jul 12 09:36:21 2012	(r25190)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-builders-descriptor.str	Thu Jul 12 14:40:46 2012	(r25191)
@@ -30,14 +30,17 @@
           provider: ~provider1
           provider: ~provider2
           ~~
-          observer: editor-analyze
+          observer: editor-analyze (multifile)
           ~~
-          builder: "Generate Java code (for selection)"            = generate-java  (openeditor) (realtime)
-          builder: "Show abstract syntax (for selection)"          = generate-aterm (openeditor) (realtime) (meta) (source)
-          builder: "Show analyzed abstract syntax (for selection)" = generate-analyzed (openeditor) (realtime) (meta) (source)
-          builder: "Show index entries for current file"           = index-currentfile (openeditor) (realtime) (meta) (source)
-          builder: "Show index entries for all files"              = index-allfiles (openeditor) (realtime) (meta) (source)
-          builder: "Clear index"                                   = index-cleanall (meta) (source)
+          builder: "Generate Java code" = generate-java  (openeditor) (realtime)
+				  builder: "Show abstract syntax" = debug-generate-aterm (openeditor) (realtime) (meta) (source)
+				  builder: "Show deffed syntax" = debug-generate-deffed (openeditor) (realtime) (meta) (source)
+				  builder: "Show analyzed syntax" = debug-generate-analyzed (openeditor) (realtime) (meta) (source)
+				  builder: "Show index entries for current file" = debug-index-show-current-file (openeditor) (realtime) (meta) (source)
+				  builder: "Show index entries for all files" = debug-index-show-all-files (openeditor) (realtime) (meta) (source)
+				  builder: "Clear index for current file" = debug-index-clear-current (meta) (source)
+				  builder: "Clear index" = debug-index-clear (meta) (source)
+				  builder: "Reload index" = debug-index-reload (meta) (source)
           ~~
         refactorings
           pretty-print: ~pp-strategy
@@ -122,6 +125,6 @@
           ~// 
           ~// The 'on save' handler can be used  to generate code as files are saved:
           ~//   
-          ~//   on save : index-on-save
+          ~//   on save : editor-save
       ]|
     )

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str	Thu Jul 12 09:36:21 2012	(r25190)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str	Thu Jul 12 14:40:46 2012	(r25191)
@@ -60,6 +60,7 @@
 			, Import("lib/index-library") 
 			]
 		)
+		
 	GEN_CONSTRUCTORS = 
 	  Constructors(
 		  [ CONS_DECL("Type", "DefDataKind")
@@ -111,19 +112,29 @@
 	
 	to-stratego-term:
 		cons#(args) -> TERM(cons, args)
-    
+		
+	is-generated-library = ?Import("lib/analysis-library.generated")
+	is-generated-library = ?Import("lib/analysis-library-internal.generated")
+  is-generated-library = ?Import("lib/index-library.generated")
+  	  
 rules
 	
 	to-analysis:
 		Naming(name, import*, namespace*, rule-sec*) -> 
 		Module(
 			  name
-			, [ GEN_IMPORTS()
+			, [ gen-imports
 			  , Imports(import*)
 			  , Signature([GEN_CONSTRUCTORS(), Constructors(<map(to-opdecl)> namespace*)])
 			  | <mapconcat(to-rules)> rule-sec*
 			  ]
 			)
+		with
+			if <fetch(is-generated-library)> import* then
+				gen-imports := Imports([])
+			else
+				gen-imports := GEN_IMPORTS()
+			end
 			
 	to-opdecl: // generates constructors for namespaces
 		Namespace(ns) -> CONS_DECL(ns, "Namespace")

From gabrielkonat at gmail.com  Fri Jul 13 11:05:15 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Fri, 13 Jul 2012 09:05:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25192 - in
	spoofax-imp/trunk: org.strategoxt.imp.names/editor
	org.strategoxt.imp.names/trans
	org.strategoxt.imp.runtime.sidebyside.latest/bin
	org.strategoxt.imp.runtime.si...
Message-ID: <20120713090515.DD9E0108C00F@mx3.tudelft.nl>

Author: gkonat
Date: Fri Jul 13 09:05:15 2012
New Revision: 25192
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25192&sc=1

Log:
Updated names project to use new generated libraries.

Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.latest/bin/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/bin/
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.main/bin/
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.names/editor/NameDefinitionLanguage-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/namedefinitionlanguage.str
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/splitter.str
   spoofax-imp/trunk/org.strategoxt.imp.runtime.sidebyside.legacy/   (props changed)

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/editor/NameDefinitionLanguage-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/editor/NameDefinitionLanguage-Builders.esv	Thu Jul 12 14:40:46 2012	(r25191)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/editor/NameDefinitionLanguage-Builders.esv	Fri Jul 13 09:05:15 2012	(r25192)
@@ -16,11 +16,13 @@
   observer : editor-analyze (multifile)
 
   builder  : "Generate name analysis" = generate-name-analysis (openeditor) (realtime)
-  builder  : "Show abstract syntax" = generate-aterm (openeditor) (realtime) (meta) (source)
-  builder  : "Show deffed syntax" = generate-deffed (openeditor) (realtime) (meta) (source)
-  builder  : "Show analyzed syntax" = generate-analyzed (openeditor) (realtime) (meta) (source)
-  builder  : "Show index entries for current file" = index-currentfile (openeditor) (realtime) (meta) (source)
-  builder  : "Show index entries for all files" = index-allfiles (openeditor) (realtime) (meta) (source)
-  builder  : "Clear index" = index-cleanall (meta) (source)                                                                                             
+  builder  : "Show abstract syntax" = debug-generate-aterm (openeditor) (realtime) (meta) (source)
+  builder  : "Show deffed syntax" = debug-generate-deffed (openeditor) (realtime) (meta) (source)
+  builder  : "Show analyzed syntax" = debug-generate-analyzed (openeditor) (realtime) (meta) (source)
+  builder  : "Show index entries for current file" = debug-index-show-current-file (openeditor) (realtime) (meta) (source)
+  builder  : "Show index entries for all files" = debug-index-show-all-files (openeditor) (realtime) (meta) (source)
+  builder  : "Clear index for current file" = debug-index-clear-current (meta) (source)
+  builder  : "Clear index" = debug-index-clear (meta) (source)
+  builder  : "Reload index" = debug-index-reload (meta) (source)                                                                                           
 
   on save  : editor-save
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/trans/namedefinitionlanguage.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/trans/namedefinitionlanguage.str	Thu Jul 12 14:40:46 2012	(r25191)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/trans/namedefinitionlanguage.str	Fri Jul 13 09:05:15 2012	(r25192)
@@ -30,7 +30,7 @@
         warnings              := <collect-all(constraint-warning, conc)> ast'';
         notes                 := <collect-all(constraint-note, conc)> ast''
       );
-      filesToAnalyze'         := <make-set> <map(index-filepair-to-file)> filesToAnalyze
+      filesToAnalyze'         := <index-filepairs-to-files> filesToAnalyze
 
   // Main entry point for analyzes, called when a single file is opened in the editor.
   editor-analyze:
@@ -38,7 +38,7 @@
     with
       editor-init;
       (ast', errors, warnings, notes, filesToAnalyze) := <analyze> (ast, path, project-path);
-      <try(editor-queue-analysis)> filesToAnalyze
+      <try(editor-queue-analysis)> <remove-all(?path)> filesToAnalyze
       
   // Main entry point for analyzes, called when multiple files have changed. 
   editor-analyze:
@@ -54,10 +54,10 @@
       // Enable and trigger compilation after all files have been analysed.
       <enable-commit-and-compile> <language>;
       <trigger-commit-and-compile> <language>
- 
+      
   // Called when current file is saved.
   editor-save:
-    (ast, _, _, _, _) -> None()
+    (_, _, _, _, _) -> None()
     with
       index-setup(|<language>, [<project-path>], ".");
       <trigger-commit-and-compile> <language>
@@ -89,37 +89,37 @@
       (ast', _) := <analyze-top(|<language>)> (ast, path, project-path);
       item at COMPLETION(name) := <collect-one(?COMPLETION(_))> ast';
       index-transaction(
-        (<index-lookup-all-levels(|name)> item <+ ![]) => proposals
+        (<index-lookup-all(|name)> item <+ ![]) => proposals
       );
-      proposals' := <map(index-uri-name)> proposals
+      proposals' := <map(index-uri; index-uri-name)> proposals
 
 rules // Debugging
   
   // Prints the abstract syntax ATerm of a selection.
-  generate-aterm:
+  debug-generate-aterm:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       filename := <guarantee-extension(|"aterm")> path;
       result   := selected
       
   // Prints the definition annotated abstract syntax ATerm of a selection.
-  generate-deffed:
+  debug-generate-deffed:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       filename := <guarantee-extension(|"aterm")> path;
-      result   := <analyze-defs(|Anon(), Anon())> selected
-  
+      result   := <analyze-defs> selected
+      
   // Prints the analyzed annotated abstract syntax ATerm of a selection.
-  generate-analyzed:
+  debug-generate-analyzed:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       editor-init;
       filename := <guarantee-extension(|"analyzed.aterm")> path;
-      result   := <analyze> (selected, path, project-path)
+      result   := <analyze-top(|<language>)> (selected, path, project-path)   
       
   // Prints the entries in the index of the current file.
-  index-currentfile:
+  debug-index-show-current-file:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
@@ -127,28 +127,42 @@
       result   := <index-get-all-in-file> path
       
   // Prints the entries in the index of all files.
-  index-allfiles:
+  debug-index-show-all-files:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       filename := <guarantee-extension(|"index.allfiles.aterm")> path;
       result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
+
+  // Cleans current file from the index.
+  debug-index-clear-current:
+    (selected, position, ast, path, project-path)  -> None()
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      <index-clear-file> $[[project-path]/[path]]
       
   // Cleans all data from the index.
-  index-cleanall:
+  debug-index-clear:
     (selected, position, ast, path, project-path)  -> None()
     with
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       index-clear
       
+  // Cleans all data from the index and re-analyzes every file.
+  debug-index-reload:
+    (selected, position, ast, path, project-path)  -> None()
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      index-reload
+    
 rules // Utility
   
   // Queue parallel analysis for given list of files.
   editor-queue-analysis = 
     not(?[]); queue-strategy(|"editor-parallel-analyze", "Analyzing files")
-  
+      
   // Executes parallel analysis using the index library.
   editor-parallel-analyze:
     files -> None()
     with
-      index-parallel-analyze-files(analyze)
+      index-parallel-analyze-files(analyze)
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/trans/splitter.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/trans/splitter.str	Thu Jul 12 14:40:46 2012	(r25191)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/trans/splitter.str	Fri Jul 13 09:05:15 2012	(r25192)
@@ -8,4 +8,4 @@
 rules // Splitter configuration
  
   // Enable AST splitting by analyze-top for compilation of top level units.
-  index-split = id
\ No newline at end of file
+  //index-split = id
\ No newline at end of file

From gabrielkonat at gmail.com  Fri Jul 13 11:26:09 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Fri, 13 Jul 2012 09:26:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25193 -
	spoofax-imp/trunk/org.strategoxt.imp.names/lib
Message-ID: <20120713092609.C50A8CC183@mx4.tudelft.nl>

Author: gkonat
Date: Fri Jul 13 09:26:09 2012
New Revision: 25193
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25193&sc=1

Log:
Updated generated libraries

Added:
   spoofax-imp/trunk/org.strategoxt.imp.names/lib/nbl-library.generated.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library-internal.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.names/lib/compilation-library.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.names/lib/index-library.generated.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library-internal.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library-internal.generated.str	Fri Jul 13 09:05:15 2012	(r25192)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library-internal.generated.str	Fri Jul 13 09:26:09 2012	(r25193)
@@ -16,6 +16,13 @@
   // Namespaces
   Diff            : Namespace
   ASTDiff         : Namespace
+  AST             : Namespace
+  
+  // Data
+  AST             : List(UriPart) * AST -> AST
+  
+  // Annotations 
+  Scope: Term -> Anno
   
 rules // Analysis traversals
   
@@ -70,7 +77,7 @@
         filesToAnalyze := []
       end
     with
-      <list-loop(analyze-top-store-ast)> astFilePairs4
+      <list-loop(analyze-top-store-ast(|full-path))> astFilePairs4
       
   /**
    * Add URI annotations to each definition and unresolved URI annotations to each use site.
@@ -81,7 +88,8 @@
     (ast, file) -> ((ast2, file), defs)
     with
       <index-set-current-file> file;
-      (Some(ast2), defs) := <analyze-defs> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
+      (Some(ast2), edefs) := <analyze-defs> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
+      defs := <map(Snd)> edefs; 
       <index-add-all(|file)> defs
       
   /**
@@ -101,10 +109,10 @@
         ast2 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast; // Parent pointers needed.
         data := <origin-track-forced(analyze-tree-data)> ast2;
         
-        // Resolve all references in gathered data.
-        (data2, _) := <analyze-uses> data; // Ignoring data uses, have not found a use-case for them yet.
-        <index-add-all(|file)> data2;
-        
+				// Resolve all references in gathered data.
+				(data2, _) := <analyze-uses> data;
+				<index-add-all(|file)> data2;
+				
         // Store reads into the index (if not testing language)
         if not(is-test-input(|language, full-path)) then
           <index-add-all(|file)> <iset-elements> readSet
@@ -141,10 +149,21 @@
    *
    * @internal
    */   
-  analyze-top-store-ast:
+  analyze-top-store-ast(|full-path):
+    (ast, (_, subfile)) -> <id>
+    where
+      <index-add(|full-path)> AST(subfile, ast)
+
+  /**
+   * Stores AST from file to the index.
+   *
+   * @internal
+   */   
+  analyze-top-store-ast(|full-path):
     (ast, file) -> <id>
-    with
-      <index-set-global(|<conc> (<index-file-to-uri> file, ["ast"]))> ast
+    where
+      <is-string> file;
+      <index-add(|full-path)> AST([AST()], ast)
       
   /**
    * Identifies all definitions in the tree and annotates them with their URI.
@@ -152,66 +171,100 @@
    *
    * @internal
    */
-  analyze-defs = analyze-defs(|Anon(), Anon())
+  analyze-defs:
+  	ast -> (<analyze-defs(|[], set, Anon(), Anon())> ast, <iset-elements> set)
+  	where
+  		set := <new-iset>
+  		 
+  /** @internal */
+  analyze-defs(|paths, defs, head-scope, head-scope-ns):
+    ast{Scope([namespace, name | path])} -> ast'
+    where
+      paths' := <update-index-paths(|[(namespace, path)])> paths ;
+      ast'   := <rm-annotations; analyze-defs(|paths', defs, Anon(), Anon())> ast
+      
+  
   /** @internal */
-  analyze-defs(|head-scope, head-scope-ns):
-    ast -> (ast', defs')
+  analyze-defs(|paths, defs, head-scope, head-scope-ns):
+    ast -> ast'
+    where
+    	<not(has-annos)> ast    	
     with
-      if def := <nam-get-definition> ast then
-        Def(def-path)                     := def;
-        [head-scope-ns', head-scope' | _] := def-path
+      if (namespace, path) := <nam-get-definition> ast then
+      	definition     := <nam-get-def(|paths, namespace)> path;
+      	Def(def-path)  := definition; 
+        head-scope-ns' := namespace;
+        head-scope'    := <Hd> path;
+        f#(children)   := <try(nam-annotate-scopes(|def-path))> ast;
+        <iset-add(|(<new>, definition))> defs
       else
         def-path       := INTERNAL_ERROR();
         head-scope-ns' := head-scope-ns;
-        head-scope'    := head-scope
+        head-scope'    := head-scope;
+        f#(children)   := ast
       end;
       if scope-types := <nam-get-scope-types> ast then
-        {| IndexPath:
-          <list-loop(update-index-path(|head-scope', head-scope-ns', ast))> scope-types;
-          // <balanced-update-path> head-scope';
-          (ast', defs) := <analyze-defs-recurse(|Anon(), Anon(), def-path)> ast
-        |}
-      else
-        (ast', defs) := <analyze-defs-recurse(|head-scope', head-scope-ns', def-path)> ast
+      	unique          := Anon(<new>);
+        updates         := <map(construct-index-path(|paths, head-scope', head-scope-ns', unique, ast))> scope-types;
+        paths'          := <update-index-paths(|updates)> paths;
+        head-scope-ns'' := Anon();
+        head-scope''    := Anon()
+      else
+      	paths'          := paths;
+      	head-scope-ns'' := head-scope-ns';
+        head-scope''    := head-scope'
       end;
-      defs' := <![def | defs] <+ !defs>
-      
+      children' := <origin-track-forced(analyze-child-defs(|paths', defs, head-scope'', head-scope-ns''))> children;
+      ast'      := <try(nam-annotate-names(|paths', def-path))> f#(children') 
+       
   /** @internal */
-  analyze-defs-recurse(|head-scope, head-scope-ns, def-path):
-    ast -> (ast'', defs)
-    where
-      analyzed      := <all(analyze-defs(|head-scope, head-scope-ns))> ast;
-      (ast', defs)  := <unzip-analyzed> analyzed;
-      ast''         := <try(nam-annotate-names(|def-path))> ast'
- 
+  analyze-child-defs(|paths, defs, head-scope, head-scope-ns):
+  	[] -> []
+  	
+  /** @internal */
+  analyze-child-defs(|paths, defs, head-scope, head-scope-ns):
+  	[d|ds] -> [d'|ds']
+  	where
+  	  d'  := <analyze-defs(|paths, defs, head-scope, head-scope-ns)> d ;
+  	  if <nam-ordered-def> d then
+  	  	[namespace, name | path] := <nam-get-definition-key ; index-uri> d' ;
+        paths'                   := <update-index-paths(|[(namespace, path)])> paths ;
+  	  	ds'                      := <analyze-child-defs(|paths', defs, Anon(), Anon())> ds
+  	  else
+  	    ds' := <analyze-child-defs(|paths, defs, head-scope, head-scope-ns)> ds
+  	  end
+  
   /** @internal */
-  update-index-path(|head-scope, head-scope-ns, ast):
-    scope-type -> scope-type
+  construct-index-path(|paths, head-scope, head-scope-ns, unique, ast):
+    scope-type -> (scope-type, path'')
     where
       if !head-scope-ns => Anon() then
-        path  := <IndexPath <+ ![]> scope-type;
-        path' := <do-adjusted-index-path(|scope-type, path, Anon(<new>))> ast
+        path  := <lookup-index-path> (scope-type, paths);
+        path' := <index-do-adjust-path(|scope-type, path, Anon(<new>))> ast
       else
-        path  := <IndexPath <+ ![]> head-scope-ns;
-        path' := <do-adjusted-index-path(|scope-type, path, head-scope)> ast
+        path  := <lookup-index-path> (head-scope-ns, paths);
+        path' := <index-do-adjust-path(|scope-type, path, head-scope)> ast
       end;
-      rules(IndexPath: scope-type -> path')
- 
-  /* TODO: consider using simple-update-def-path
-   *       which uses "balanced" path scopes
-   *       e.g. when Entity doesn't scope Function
-   *       then it's hard to access properties from a function
-  balanced-update-index-path:
-    head-scope -> head-scope
-    where
-      if !head-scope => Anon() then
-        head-scope' := Anon(<new>)
+      // HACK: Disable generation of anonymous namespaces for unique definitions to let FieldAccess-like constructs work.
+      if /*<nam-unique> ast*/ fail then
+      	path'' := <index-do-adjust-path(|scope-type, path', unique)> ast
       else
-        head-scope' := head-scope
-      end;
-      (something with do-adjust-path)
-      rules(IndexPath := [head-scope' | <IndexPath <+ ![]> ()])
-  */
+      	path'' := path'
+      end
+      
+  /** @internal */
+  update-index-paths(|updates) = 
+    remove-all(?(<id>, _); !(<id>, updates) ; lookup') ; at-end(!updates)
+  
+  /** @internal */
+  lookup-index-path = 
+    lookup' <+ ![]
+ 
+  /** @internal */
+  index-do-adjust-path(|namespace, path, scope) =
+    adjust-index-path(origin-equal(|scope)|namespace, path)
+  <+
+    ![scope|path]
  
   /**
    * Analyze all uses, changing their preliminary "Unresolved(_)" URI to a definite URI of their definition.
@@ -224,7 +277,7 @@
       analyzed     := <all(analyze-uses)> ast;
       (ast', uses) := <unzip-analyzed> analyzed;
       if !ast' => _{unresolved@[Unresolved(namespace), x | path]} then
-        if Def(def-uri) := <index-lookup(id |namespace, path, <strip-annos> ast')> ast' then
+        if Def(def-uri) := <index-lookup> ast' then
           ast'' := ast{def-uri};
           uses' := [Use(def-uri) | uses]
         else
@@ -289,13 +342,17 @@
   
   /** @internal */   
   index-parse-file:
-    file -> (ast, file)
+    file -> (ast', file)
     with
-    if <file-exists> file then
-      ast := <parse-file> file
-    else
-      ast := ()
-    end
+	    if <file-exists> file then
+	    	if ast := <parse-file> file then
+	    		ast' := ast
+	      else
+	      	ast' := ()
+      	end
+	    else
+	      ast' := ()
+	    end
    
   /** @internal */   
   index-set-markers:
@@ -425,121 +482,180 @@
 rules // Index lookup rules (that take into account adjust-index-lookup)
   
   /**
-   * Given an annotated AST node, resolves it, returning all its Defs.
+   * Given a term x, namespace n, path s and prefix p, looks for a definition in the 
+   * scope of s and outer scopes in namespace n that start with prefix p, returning the first 
+   * found definition.
    *
-   * @param prefix  Only Defs with a name that starts with this string are returned.
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path or part of this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   *
+   * @type term -> ?Def(uri')
    *
    * @internal
-   * @type "name"{uri} -> ?Def(uri')
    */
-  index-lookup(is-adjust-lookup-enabled|namespace, path, prefix):
-    x -> def
+  index-lookup-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> definition
     where
-      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
-      if <?StopLookup()> candidates then
+      defs := <index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix)> x;
+      
+      if StopLookup() := defs then
         fail
-      else
-        def        := <index-select(|namespace, path, x)>
-      <+
-        // TODO: optimize: try not to call do-adjust-index-lookup from here
-        [_ | path'] := path;
-        def         := <index-lookup(is-adjust-lookup-enabled|namespace, path', prefix)> x
+      end;
+      
+      if not(definition := <Hd> defs) then
+        [_|path']  := path;
+        definition := <index-lookup-internal(adjust-import, adjust-lookup, name-compare|namespace, path', prefix)> x
       end
+      
+  /** @internal */
+  index-lookup-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-internal(id, id, name-compare|namespace, path, prefix)
 
   /**
-   * Given an annotated AST node, resolves it, returning all its Defs.
-   *
-   * @param prefix  Only Defs with a name that starts with this string are returned.
+   * Given a term x, namespace n, path s and prefix p, looks for definitions in the scope of s 
+   * and outer scopes in namespace n that start with prefix p, returning all found definition.
    *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path or part of this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
    * @type "name"{uri} -> List(Def(uri'))
+   *
    * @internal
    */
-  index-lookup-all(is-adjust-lookup-enabled|namespace, path, prefix):
+  index-lookup-all-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
     x -> defs'
     where
-      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
-      defs       := <index-select-all(|namespace, path, x)>;
-      // TODO: optimize: try not to call do-adjust-index-lookup from here
-      if [_ | path'] := path then
-        defs2 := <index-lookup-all(is-adjust-lookup-enabled|namespace, path', prefix)> x;
+      defs := <index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix)> x;
+      
+      if [_|path'] := path then
+        defs2 := <index-lookup-all-internal(adjust-import, adjust-lookup, name-compare|namespace, path', prefix)> x;
         defs' := <conc> (defs, defs2)
       else
         defs' := defs
       end
+
+  /** @internal */
+  index-lookup-all-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-all-internal(id, id, name-compare|namespace, path, prefix)
       
   /**
-   * Given an annotated AST node, returns the outermost Def with a corresponding URI.
-   *
-   * @param prefix  Only Defs with a name that starts with this string are returned.
-   *
-   * @type "name"{uri} -> ?Def(uri')
-   * @internal
-   */
-  index-lookup-outermost(is-adjust-lookup-enabled |namespace, path, prefix):
-    x -> def
-    where
-      // TODO: optimize: just like index-lookup
-      [_ | path'] := path;
-      def         := <index-lookup-outermost(is-adjust-lookup-enabled |namespace, path', prefix)> x
-    <+
-      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
-      def        := <index-select(|namespace, path, x)>
-      
-  /**
-   * Given an annotated AST node, resolves it, and returns all possibly matching Defs with a common ancestor URI. 
+   * Given a term x, namespace n, path s and prefix p, looks for a definition in the 
+   * scope of s in namespace n that start with prefix p, returning the first found definition.
    *
-   * @param namespace Only Defs with this namespace are returned.
-   * @param prefix    Only Defs with a name that starts with this string are returned.
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type term -> List(Def(uri))
    *
-   * @type "name"{uri} -> List(Def(uri'))
    * @internal
    */
-  index-lookup-one-level(is-adjusted-lookup-enabled|namespace, path, prefix):
-    x{_} -> defs
+  index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> defs
     with
-      is-adjusted-lookup-enabled;
-      do-adjust-index-lookup(|namespace, path, x, prefix);
-      if ?StopLookup() then
-        defs := StopLookup()
-      else
-        mapconcat(\d at Def(p) -> [d]\
-          <+ \[namespace' | path'] -> <index-lookup-one-level(fail |namespace', path', prefix)> x\
-          <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list Def(_) or [namespace | path] or StopLookup() to stop the lookup"));
-        ?defs
-      end
+      adjust-lookup;
+      adjusted := <index-do-adjust-lookup(|namespace, path, x, prefix)> x;
+      defs     := <index-get-adjust-lookup-results(adjust-import, name-compare|adjusted, prefix)> x
     <+
-      defs := <index-get-children(|namespace, prefix)> Def([namespace | path])
+      adjust-import;
+      adjusted := <index-do-adjust-import(|namespace, path)> x;
+      defs     := <index-get-adjust-import-results(adjust-lookup, name-compare|adjusted, prefix)> x
+    <+
+      defs     := <index-get-children(\uri -> Def(uri)\, name-compare|namespace, prefix)> [namespace | path]
       
-  /**
-   * Given an annotated AST node, resolves it, and returns all possibly matching Defs with a common ancestor URI. 
-   *
-   * @param prefix  Only Defs with a name that starts with this string are returned.
-   *
-   * @internal
-   * @type "name"{uri} -> List(Def(uri'))
-   */
-  index-lookup-all-levels(is-adjust-lookup-enabled |namespace, path, prefix):
-    x{_} -> all-defs
+  /** @internal */
+  index-lookup-all-scoped-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-all-scoped-internal(id, id, name-compare|namespace, path, prefix)
+  
+  /** @internal */
+  index-do-adjust-import(|namespace, path) =
+    adjust-index-import(|namespace, path)
+    
+  /** @internal */
+  index-get-adjust-import-results(adjust-lookup, name-compare|adjusted, prefix):
+    x -> defs'
     with
-      is-adjust-lookup-enabled;
-      do-adjust-index-lookup(|namespace, path, x, prefix);
-      if ?StopLookup() then
-        all-defs := []
-      else
-        mapconcat(\d at Def(p) -> [d]\
-            <+ \[namespace' | path'] -> <index-lookup-all-levels(fail |namespace', path', prefix)> x\
-            <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list Def(_) or [namespace | path] or StopLookup() to stop the lookup"));
-        ?all-defs
-      end
-    <+
-      one-level := <index-get-children(|namespace, prefix)> Def([namespace | path]);
-      if [_ | path'] := path then
-        all-defs := <concat> [one-level, <index-lookup-all-levels(fail |namespace, path', prefix)> x]
+      defs := 
+        <mapconcat(
+             index-adjust-import-recurse(adjust-lookup, name-compare|x, prefix)
+          <+ fatal-err(|"Unexpected result from adjust-index-import, should be a list of [namespace | path].")
+        )> adjusted;
+        if not(<elem> (StopLookup(), defs)) then
+        	defs' := <filter(name-compare)> defs
+        else
+        	defs' := StopLookup()
+      	end
+      	
+  /** @internal */
+  index-adjust-import-recurse(adjust-lookup, name-compare|x, prefix):
+  	[namespace|path] -> results'
+  	with
+  		results := <index-lookup-all-scoped-internal(fail, adjust-lookup, name-compare|namespace, path, prefix)> x;
+  		if not(<is-list> results) then
+  			results' := [results]
+  		else
+  			results' := results
+			end
+        
+  /** @internal */
+  index-do-adjust-lookup(|namespace, path, use, prefix) =
+    repeat-until(
+      prim("SSL_EXT_get_parent", <id>)
+    , adjust-index-lookup(origin-equal(|use)|namespace, path, prefix) 
+    )
+    
+  /** @internal */  
+  index-get-adjust-lookup-results(adjust-import, name-compare|adjusted, prefix):
+    x -> defs'
+    with
+      if StopLookup() := adjusted then
+        defs' := StopLookup()
       else
-        all-defs := one-level
+        defs := 
+          <mapconcat(
+               \d at Def(p) -> [d]\
+            <+ \[namespace'|path'] -> <index-lookup-all-scoped-internal(adjust-import, fail, name-compare|namespace', path', prefix)> x\
+            <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list of Def(uri) or [namespace | path], or StopLookup() to stop the lookup.")
+          )> adjusted;
+          defs' := <filter(name-compare)> defs
       end
       
-/** @internal */
+rules // Name comparisons
+
+  /**
+   * Compares given element (with an URI) to given name using string equality comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-equal(|name):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <SRTS-EXT-eq-ignore-annos(|name)> <index-uri-name> uri
+  
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-substring(|prefix):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <is-substring(!prefix)> <index-uri-name> uri
+      
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison and given namespace.
+   * 
+   * @internal 
+   */      
+  index-compare-name-substring(|prefix, namespace):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <eq> (namespace, <index-uri-namespace> uri);
+      <is-substring(!prefix)> <index-uri-name> uri
+      
 rules // URI and value projections
        
   /** @internal */
@@ -581,8 +697,7 @@
   /** @internal */
   index-value-impl:
     ReadWildcard(_, value) -> value
-       
-/** @internal */
+    
 rules // Internal helpers
 
   /**
@@ -614,21 +729,9 @@
   fake-file = 
     is-test-file <+ index-is-fake-file
   
-  /** @internal */    
-  index-filepair-to-file = 
-    Fst; string-replace(|$[[<project-path>]/], "")
-  
   /** @internal */
   ast-uri-to-ast-file(|full-path):
     (ast, uri) -> (ast, (full-path, uri))
-  
-  /** @internal */     
-  index-is-name-substring(|name):
-    template -> <id>
-    with
-      [_, uri-name | _] := <index-uri>
-    where
-      <is-substring(!name)> uri-name
    
   /** @internal */    
   index-readwildcard-substring(|prefix):
@@ -643,9 +746,9 @@
         if 1 := <length> children then
           // HACK: This solves the problem of ReadWildcards making too many files re-analyze, but this should
           // be handled in the index primitives instead.
-          <iset-add(|Read([namespace | path]))> set
+          <iset-add(|Read([namespace, prefix|path]))> set
         else
-          <iset-add(|ReadWildcard([namespace | path], prefix))> set
+          <iset-add(|ReadWildcard([namespace|path], prefix))> set
         end
       end
   
@@ -668,35 +771,6 @@
     ?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_)
  
   /** @internal */
-  do-adjust-index-lookup(|namespace, path, use, prefix) =
-    repeat-until(
-      prim("SSL_EXT_get_parent", <id>)
-    , adjust-index-lookup(origin-equal(|use) |namespace, path, prefix) 
-    )
- 
-  /** @internal */
-  index-select(|namespace, path, use) =
-    getfirst(
-      where(
-        ?Def([_, <SRTS-EXT-eq-ignore-annos(|use)> | _])
-      )
-    )
- 
-  /** @internal */
-  index-select-all(|namespace, path, use) =
-    filter(
-      where(
-        ?Def([_, <SRTS-EXT-eq-ignore-annos(|use)> | _])
-      )
-    )
- 
-  /** @internal */
-  do-adjusted-index-path(|namespace, path, def) =
-    adjust-index-path(origin-equal(|def) |namespace, path)
-  <+
-    ![def | path]
- 
-  /** @internal */
   index-eq(|namespace, expected) =
     where(
       ?Def([_, name | _]);
@@ -710,22 +784,53 @@
   index-key-unwrap = 
     \key{uri} -> key{<index-uri-unwrap> uri}\ <+ id
     
-/** @internal */
 rules // Interface for generated code
  
   /** @internal */
-  nam-get-def(|namespace):
-    x -> Def([namespace, x | <IndexPath <+ ![]> namespace])
+  nam-get-def(|paths, namespace):
+    part* -> Def([namespace, part* | <lookup-index-path> (namespace, paths)])
+  
+  /** @internal */ 
+  nam-annotate-def(|path):
+    t -> result
+    with
+    	result := t{path}
   
   /** @internal */ 
-  nam-annotate-use(|namespace):
-    t -> t{[Unresolved(namespace), t | <IndexPath <+ ![]> namespace]}
+  nam-annotate-use(|paths, namespace):
+    t -> t{[Unresolved(namespace), t | <lookup-index-path> (namespace, paths)]}
+  
+  /** @internal */ 
+  nam-annotate-use(|paths, namespace, namespace2, name):
+  	t -> t{[Unresolved(namespace), t | <lookup-index-path> (namespace, paths)]}
+  	
+  /** @internal */ 
+  nam-annotate-scope(|path):
+    t -> t{Scope(path)}
   
   /** @internal */ 
   nam-get-scope-types = fail
+  /** @internal */ 
+  nam-ordered-def = fail
+  /** @internal */
+  nam-get-definitions = fail
+  /** @internal */
+  nam-get-definition = nam-get-definitions ; Hd 
+  /** @internal */
+  nam-get-definition-keys = fail
+  /** @internal */
+  nam-get-definition-key = nam-get-definition-keys ; Hd
+  /** @internal */
+  nam-get-uses = fail
+  /** @internal */
+  nam-get-use = nam-get-uses ; Hd 
+  /** @internal */
+  nam-get-uses-keys = fail
+  /** @internal */
+  nam-get-use-key = nam-get-uses-keys ; Hd
   /** @internal */
-  nam-get-definition = fail
+  nam-annotate-names(|paths, def-path) = fail
   /** @internal */
-  nam-get-definition-key = fail
+  nam-annotate-scopes(|def-path) = fail
   /** @internal */
-  nam-annotate-names(|def-path) = fail
+  nam-unique = fail

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library.generated.str	Fri Jul 13 09:05:15 2012	(r25192)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library.generated.str	Fri Jul 13 09:26:09 2012	(r25193)
@@ -70,6 +70,11 @@
    */
   adjust-index-lookup(check-target-name|namespace, path, prefix) = fail
   
+  /**
+   * Extension point.
+   */
+  adjust-index-import(|namespace, path) = fail
+  
   /** 
    * Extension point. Override this rule to store data about definitions in the index. Should call <store-results> on 
    * a (list of) data that must be stored in the index.
@@ -184,7 +189,7 @@
       else
         Results(asts, _, _, _, _, _, filesToAnalyze) := 
           <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, full-path)];
-        ast' := <Hd> asts
+        ast' := <Hd> asts // Always returns a list of 1 AST if there is no splitter, so take the head.
       end
   
 rules // Parallel analysis
@@ -209,56 +214,89 @@
     with
       index-parallel-analyze(analyze);
       filter(not(?ParallelResults((), (), _, _, _, _) <+ ?ParallelResults((), [()], _, _, _, _)); index-set-markers)
+      
+rules // Splitter
+  
+  /**
+   * Merges a top level definition back into an AST using splitter rules.
+   *
+   * @param toplevel  The top level definition to merge back into the given AST.
+   * @type ast -> ast'
+   */
+  index-merge-ast(|toplevel):
+    term -> merged
+    with
+      if <is-list> term then
+        [first-ast|_] := term;
+        merged        := <index-merge-ast(|toplevel)> first-ast
+      else
+        if <index-is-qualifier> term then
+          [elem|_]    := <index-qualifier-subelements> term;
+          merged      := <index-create-qualifier(|term)> <index-merge-ast(|toplevel)> elem
+        else
+          merged      := toplevel
+        end
+      end
  
 rules // Query primitives
  
   /**
-   * Gets all DefData entries that match the kind of data and URI in given definition.
+   * Gets a DefData entry that matches the kind of data and given URI, or fail.
    *
    * Example:
    *   <index-get-data(|Type())> Def([Entity(), "Bar"]) => [DefData([Entity(), "Bar"], Type(), TYPE("Bar")), ...]
    *
    * @param kind Only data of this kind is returned.
-   * @type Def(uri) -> List(DefData(uri, kind, value))
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(DefData(uri, kind, value))
    */
   index-get-data(|kind):
-    <with(?Def(uri) | "Def expected")> -> <index-get-value> DefData(uri, kind, ())
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-value> DefData(uri, kind, ())
       
   /**
-   * Gets all data entries that match the kind of data and URI in given definition.
+   * Gets all DefData entries that match the kind of data and given URI
    *
    * Example:
    *   <index-get-data-all(|Type())> Def([Entity(), "Bar"]) => [TYPE("Bar"), ...]
    *
    * @param kind Only data of this kind is returned.
-   * @type Def(uri) -> List(value)
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(value)
    */
   index-get-data-all(|kind):
-    <with(?Def(uri) | "Def expected")> -> <index-get-all-values> DefData(uri, kind, ())
+     <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-all-values> DefData(uri, kind, ())
+
+  /**
+   * Gets a Use entry that matches given URI, or fail.
+   *
+   * Example:
+   *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"]), ...]
+   *
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Use(uri))
+   */
+  index-get-use:
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-all> Use(uri)
      
   /**
-   * Gets all Use entries that match the URI in given definition.
+   * Gets all Use entries that match the given URI.
    *
    * Example:
    *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"]), ...]
    *
-   * @type Def(uri) -> List(Use(uri))
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Use(uri))
    */
   index-get-uses-all:
-    <with(?Def(uri) | "Def expected")> -> <index-get-all> Use(uri)
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-all> Use(uri)
      
   /**
-   * Gets all Read or ReadWildcard entries that match the given template.
+   * Gets all Read and ReadWildcard entries that match the given URI.
    *
    * Example:
    *   <index-get-reads-all> [Property(), "Bar", "p"] => [Read([Property(), "Bar", "p"]), ...]
    *
-   * @type Def(uri) -> List(Read(uri) or ReadWildcard(uri, prefix))
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Read(uri) or ReadWildcard(uri, prefix))
    */
   index-get-reads-all:
-    template -> <conc> (reads, readwildcards')
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <conc> (reads, readwildcards')
     where
-      uri   := <index-uri> template;
       reads := <index-get-all> Read(uri);
       if !uri => [namespace, prefix | path-parent] then
         readwildcards  := <index-get-all> ReadWildcard([namespace | path-parent], ());
@@ -333,18 +371,19 @@
    * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
    */
   index-get-children(|namespace) = 
-    index-get-children(\uri -> Def(uri)\|namespace)
+    index-get-children(\uri -> Def(uri)\, id|namespace)
   
   /**
    * Gets all children elements of an URI in a certain namespace using custom templates.
    * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
    *
    * @param construct-template  uri -> template. Should create a template to match index entries with, given an URI.
+   * @param name-compare        element -> ?element. Strategy for filtering children elements.
    * @param namespace           Only child elements in this namespace are returned.
    * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
    */
-  index-get-children(construct-template|namespace):
-    <with(?Def([parent-ns | path]) <+ ?_{[parent-ns | path]} <+ ?[parent-ns | path] | "Def, key or uri expected")> -> children
+  index-get-children(construct-template, name-compare|namespace):
+    <with([parent-ns | path] := <index-uri> | "Def, key or URI expected")> -> children
     with
       template  := <construct-template> [namespace | path];
       children  := <prim("LANG_index_get_children", template)>;
@@ -361,10 +400,10 @@
    *
    * @param namespace Only child Def elements in this namespace are returned.
    * @param prefix    Only child Def elements where the name starts with this prefix are returned.
-   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Def(uri))
    */
   index-get-children(|namespace, prefix) = 
-    index-get-children(\uri -> Def(uri)\|namespace, prefix)
+    index-get-children(\uri -> Def(uri)\, index-compare-name-substring(|prefix, namespace)|namespace, prefix)
   
   /**
    * Gets all children elements of an URI in a certain namespace where the name starts with a prefix
@@ -372,18 +411,18 @@
    * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
    *
    * @param construct-template  uri -> template. Should create a template to match index entries with, given an URI.
+   * @param name-compare        element -> ?element. Strategy for filtering children elements.
    * @param namespace           Only child elements in this namespace are returned.
    * @param prefix              Only child elements where the name starts with this prefix are returned.
-   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Def(uri))
    */
-  index-get-children(construct-template|namespace, prefix):
-    <with(?Def([parent-ns | path]) <+ ?_{[parent-ns | path]} <+ ?[parent-ns | path] | "Def, key or uri expected")> -> children'
+  index-get-children(construct-template, name-compare|namespace, prefix):
+    <with([parent-ns | path] := <index-uri> | "Def, key or URI expected")> -> children'
     with
-      prefix'   := <strip-annos> prefix;
       template  := <construct-template> [namespace | path];
       children  := <prim("LANG_index_get_children", template)>;
-      children' := <filter(index-is-name-substring(|prefix'))> children;
-      <store-wildcard-read(|namespace, path, prefix')> children'
+      children' := <filter(name-compare)> children;
+      <store-wildcard-read(|namespace, path, prefix)> children'
 
   /**
    * Gets a set of all files that have a reference to the given index entries.
@@ -420,67 +459,103 @@
 rules // Index lookup rules (that take into account adjust-index-lookup)
  
   /**
-   * Given an annotated AST node, resolves it, returning its Def.
+   * Given an annotated AST node, resolves it, returning its definition.
+   * Uses precise matching for names.
    *
    * @type "name"{uri} -> ?Def(uri')
    */
   index-lookup:
-    x{[namespace|path]} -> <index-lookup(id|<index-namespace-unwrap> namespace, path, <strip-annos> x)>
+    x{[namespace|path]} -> <index-lookup-internal(index-compare-name-equal(|name)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
  
   /**
-   * Given an annotated AST node, resolves it, returning all its Defs.
+   * Given an annotated AST node, resolves it, returning all its definitions.
+   * Uses precise matching for names.
    * 
    * @type "name"{uri} -> List(Def(uri'))
    */
   index-lookup-all:
-    x{[namespace|path]} -> <index-lookup-all(id|<index-namespace-unwrap> namespace, path, <strip-annos> x)>
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-name-equal(|name)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
  
   /**
-   * Given an annotated AST node, returns the outermost Def with a corresponding URI.
+   * Given an annotated AST node and a prefix, looks for all definitions with given prefix starting at the scope of 
+   * the given node.
+   * Uses substring matching for names.
    *
-   * @param prefix  Only Defs with a name that starts with this string are returned.
-   * @type "name"{uri} -> ?Def(uri')
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
    */
-  index-lookup-outermost(|prefix):
-    x{[namespace|path]} -> <index-lookup-outermost(id|<index-namespace-unwrap> namespace, path, prefix)>
- 
+  index-lookup-all(|prefix):
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-name-substring(|prefix)|ns, path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace
+      
   /**
-   * Given an annotated AST node, returns Defs that have the same parent URI.
+   * Given an annotated AST node, resolves it in only the parent scope of the given node, returning all its definitions.
+   * Uses precise matching for names.
    *
-   * @param prefix  Only Defs with a name that starts with this string are returned.
    * @type "name"{uri} -> List(Def(uri'))
    */
-  index-lookup-one-level(|prefix):
-    x{[namespace|path]} -> <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix)>
+  index-lookup-all-scoped:
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(index-compare-name-equal(|name)|ns, parent-path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x;
+      (<?[_|<id>]> path <+ !path) => parent-path
       
   /**
-   * Given an annotated AST node, resolves it, and returns all possibly matching Defs with a common ancestor URI. 
+   * Given an annotated AST node, resolves it in only the parent scope of the given node, returning all its definitions.
+   * Uses precise matching for names. Imports are not considered.
    *
-   * @param namespace Only Defs with this namespace are returned.
-   * @param prefix    Only Defs with a name that starts with this string are returned.
    * @type "name"{uri} -> List(Def(uri'))
    */
-  index-lookup-all-levels(|prefix):
-    x{[namespace|path]} -> <index-lookup-all-levels(id|<index-namespace-unwrap> namespace, path, prefix)>
- 
+  index-lookup-all-scoped-noimports:
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(fail, id, index-compare-name-equal(|name)|ns, parent-path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x;
+      (<?[_|<id>]> path <+ !path) => parent-path
+  
   /**
-   * Given an annotated AST node, resolves it, and returns all child Defs of its definition.
+   * Given an annotated AST node and a prefix, looks for all definitions with given prefix in only the parent scope of 
+   * the given node.
+   * Uses substring matching for names.
    *
-   * @param namespace Only child Defs with this namespace are returned.
-   * @param prefix    Only Defs with a name that starts with this string are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
    * @type "name"{uri} -> List(Def(uri'))
    */
-  index-lookup-children(|namespace, prefix): // TODO: how does this compare w/ index-lookup-one-level?
-    x{[ns | path]} -> defs
-    with
-      if !ns => Unresolved(_) then
-        Def([_ | def-path]) := <index-lookup>;
-        defs := <index-lookup-one-level(id|namespace, def-path, prefix)> x
-      else
-        defs := <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix)>
-      end
-    <+
-      defs := []
+  index-lookup-all-scoped(|prefix):
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(index-compare-name-substring(|prefix)|ns, parent-path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      (<?[_|<id>]> path <+ !path) => parent-path
+
+  /**
+   * Given an annotated AST node and a namespace, returns all definitions inside given node with given namespace.
+   * Does not match names, all names are allowed.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-children(|namespace) = 
+    index-lookup-children(|namespace, "")
+      
+  /**
+   * Given an annotated AST node, a namespace and prefix, returns all definitions inside given node with given 
+   * namespace and prefix.
+   * Uses substring matching for names.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */    
+  index-lookup-children(|namespace, prefix):
+    x{[_|path]} -> <index-lookup-all-scoped-internal(index-compare-name-substring(|prefix, namespace)|namespace, path, prefix)> x
       
 rules // Index utilities
   
@@ -524,21 +599,6 @@
     x{[_|[name|_]]} -> name
     
   /**
-   * Tries to get the name part of the URI for given term or fail if given term does not have an URI or name.
-   *
-   * Example:
-   *   <index-uri-name> Def([Entity(), "Bar", "Baz"]) => "Bar"
-   *   <index-uri-name> Type("Foo") => fail
-   *   <index-uri-name> Read([Entity()]) => fail
-   *
-   * @type x -> name
-   */   
-  index-uri-name:
-    x -> <index-uri-name> <index-uri> x
-    where
-      not(<has-annos> x)
-    
-  /**
    * Determines if a given AST node is a definition site, according to the syntax.
    *
    * FIXME: Also succeeds on use sites.
@@ -562,3 +622,13 @@
     (k1, k2) -> <id>
     where
       <eq> (<index-key-unwrap> k1, <index-key-unwrap> k2)
+      
+  /**
+   * Given a list of file pairs, returns the list of real files.
+   *
+   * @type List((file, subfile)) -> List(file)
+   */    
+  index-filepairs-to-files:
+    filePairs -> files
+    with
+      files := <make-set> <map(Fst; string-replace(|<conc-strings> (<project-path>, "/"), ""))> filePairs

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/lib/compilation-library.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/lib/compilation-library.generated.str	Fri Jul 13 09:05:15 2012	(r25192)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/lib/compilation-library.generated.str	Fri Jul 13 09:26:09 2012	(r25193)
@@ -42,6 +42,16 @@
    * @type ast -> None()
    */
   index-compile-ast(|file, subfile) = fail
+
+  /**
+   * Extension point. 
+   */
+  index-is-partial-ast = fail
+
+  /**
+   * Extension point. 
+   */
+  index-combine-asts = fail
   
 rules // Compilation
   
@@ -67,21 +77,48 @@
       diffs         := <analyze-get-compilediffs>;
       files         := <map(index-compilation-restore-read-file)> diffs;
       filteredFiles := <make-set> <remove-all(index-compilation-filter-file)> files;
+      (completeFiles, partialFiles) := <index-split-partial-files> filteredFiles;
       
       // Clean compile time reads
-      <filter(index-compilation-clean-reads)> filteredFiles;
+      <filter(index-compilation-clean-reads)> completeFiles;
+      <filter(index-compilation-clean-reads)> partialFiles;
       
       // Set total work units to number of files to compile for visual indication
-      <set-total-work-units> <length> filteredFiles;
+      <set-total-work-units> <add> (<length> completeFiles, <length> partialFiles);
       
       // Compile the files
-      <filter(index-compilation-file(|language, project-path); complete-work-unit)> filteredFiles
+      <filter(index-compilation-file; complete-work-unit)> completeFiles;
+      <filter(index-compilation-partial-file; complete-work-unit)> partialFiles
+      
+  /** @internal */    
+  index-split-partial-files:
+    files -> (completeFiles, <make-set> splitFiles)
+    with
+      (completeFiles, splitFiles) := <partition(not(index-file-is-partial), index-file-is-partial)> files
 
   /** @internal */
-  index-compilation-file(|language, project-path):
+  index-compilation-file:
+    (path, subfile) -> None()
+    with
+    	asts := <index-get-all-values> AST(subfile, ());
+      <map(index-compilation-ast(|path, subfile))> asts
+      
+  /** @internal */    
+  index-compilation-partial-file:
     (path, subfile) -> None()
     with
-      ast := <index-get-global(|<conc> (<index-file-to-uri> (path, subfile), ["ast"]))>;
+      asts := <index-get-all-values> AST(subfile, ());
+      if 1 := <length> asts then
+      	ast := <?[<id>|_]> asts
+    	else
+    		ast := <try(index-combine-asts)> asts
+  		end;
+      <index-compilation-ast(|path, subfile)> ast
+      
+  /** @internal */
+  index-compilation-ast(|path, subfile):
+    ast -> None()
+    with
       {| Index-ReadSet:
         readSet := <new-iset>;
         rules(Index-ReadSet: _ -> readSet);
@@ -92,7 +129,7 @@
         // Store compile-time reads.
         reads := <iset-elements> readSet;
         <index-add-all(|<index-compilation-file-tuple> (path, subfile))> reads
-      |}
+      |} 
 
   /** @internal */
   index-compilation-filter-file:
@@ -168,12 +205,22 @@
   index-compilation-restore-read-file:
     (file, subfile) -> (file', subfile)
     where
-      file' := <string-replace(|<index-compilation-read-path>, "")> file
+      if removedPath := <string-replace(|<index-compilation-read-path>, "")> file then
+        file' := removedPath
+      else
+        file' := file
+      end
+
   /** @internal */
   index-compilation-restore-read-file:
-    (file, subfile) -> (file, subfile)
+    file -> file'
     where
-      not(<string-replace(|<index-compilation-read-path>, "")> file)
+      not(<is-tuple> file);
+      if removedPath := <string-replace(|<index-compilation-read-path>, "")> file then
+        file' := removedPath
+      else
+        file' := file
+      end
       
   /** @internal */
   index-compilation-clean-reads = 
@@ -186,3 +233,12 @@
   /** @internal */
   index-compilation-read-path =
     !"/.internal/reads/compile"
+    
+/** @internal */
+rules // Utility
+
+  /** @internal */
+  index-file-is-partial:
+  	file -> file
+  	where 
+      Snd; index-uri; index-is-partial-ast

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/lib/index-library.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/lib/index-library.generated.str	Fri Jul 13 09:05:15 2012	(r25192)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/lib/index-library.generated.str	Fri Jul 13 09:26:09 2012	(r25193)
@@ -145,6 +145,14 @@
    */
   index-clear = 
     prim("LANG_index_clear_all")
+    
+  /**
+   * Clears all elements from the index and re-analyzes all files in the project.
+   *
+   * @type x -> x
+   */
+  index-reload = 
+    prim("LANG_index_reload")
    
   /**
    * Commits index to a file on disk.
@@ -524,6 +532,19 @@
    */ 
   index-uri-name =
     ?[_|[<id>|_]]
+    
+  /**
+   * Gets the parent of given URI or fail if the URI doesn't have a parent.
+   *
+   * Example:
+   *   <index-uri-parent> [Entity(), "Bar", "Baz"] => [Entity(), "Baz"]
+   *   <index-uri-parent> [Entity(), "Baz"] => [Entity()]
+   *   <index-uri-parent> [Entity()] => fail
+   *
+   * @type uri@[namespace|[name|restPath]] -> ?name
+   */     
+  index-uri-parent =
+    ?[ns|[_|<id>]]; ![ns|<id>]
   
   /**
    * Gets the value part for given term. Can be extended by defining a index-value-impl rule. If no index-value-impl 
@@ -575,6 +596,19 @@
     x -> key
     where
       key := <collect-one(?_{_})> x
+
+  /**
+   * Converts a path from an URI to a string.
+   *
+   * Example:
+   *   <index-path-to-string> ["Bar", "Baz"] => "Bar.Baz"
+   *
+   * @type path -> str
+   */
+  index-path-to-string:
+    path -> str
+    with
+      str := <take-until(?Anon(_)); reverse; separate-by(|"."); concat-strings> path
       
   /**
    * Converts a URI to a string.
@@ -587,7 +621,7 @@
   index-uri-to-string:
     [ns|path] -> <concat-strings> [nsStr, "://", pathStr]
     with
-      pathStr := <take-until(?Anon(_)); reverse; separate-by(|"."); concat-strings> path;
+      pathStr := <index-path-to-string> path;
       nsStr := <?<id>#(_)> ns
   
   /**
@@ -666,6 +700,10 @@
       
 /** @internal */
 rules // URI and value projections
+
+  /** @internal */
+  index-uri-impl:
+    [_|_] -> <id>
   
   /** @internal */
   index-uri-impl:

Added: spoofax-imp/trunk/org.strategoxt.imp.names/lib/nbl-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/lib/nbl-library.generated.str	Fri Jul 13 09:26:09 2012	(r25193)
@@ -0,0 +1,144 @@
+module lib/nbl-library.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  
+signature constructors
+  
+  Type        : DefDataKind
+  Import      : DefDataKind
+  Transitive  : ImportAnno
+  CurrentFile : ImportAnno
+  
+rules // Import adjust rule
+     
+  import-transitive =
+    collect-one(?Transitive())
+  import-standard =
+    not(import-transitive)
+    
+  import-values(|namespace, path) =
+    <index-get-all-values> DefData([namespace| path], Import(), ())
+    
+  import-currentfile-values(|namespace) =
+    <index-get-all-values> DefData([namespace|[<index-file-to-string> <index-get-current-file>]], Import(), ())  
+    
+  adjust-index-import(|namespace, path):
+    _ -> <concat> [[[namespace | path]], currentFileImportDefs, importDefs]
+    with
+      uri := [namespace | path]
+    where
+      allImports := <import-values(|namespace, path)> ;
+      importDefs := <mapconcat(import-defs(|namespace, [uri]))> allImports
+    where
+      currentfileImports := <import-currentfile-values(|namespace)> ;
+      currentFileImportDefs := <mapconcat(import-defs(|namespace, [uri]))> currentfileImports
+    
+  import-defs(|namespace, seen):
+    (key, <import-standard>) -> [uri]
+    with
+      uri := [namespace | <index-uri-path> key]
+      
+  import-defs(|namespace, seen):
+    (key, <import-transitive>) -> <conc> ([uri], transitiveUris)
+    with
+      path := <index-uri-path> key ;
+      uri := [namespace | path] ;
+      
+      if not(<elem> (uri, seen)) then
+        allImports := <import-values(|namespace, path)> ;
+        transitiveUris := <mapconcat(import-defs(|namespace, [uri|seen]))> allImports
+      else
+        transitiveUris := []
+      end
+
+rules // Adjust difference comparison
+    
+  // Add Type to the constructors to check for differences.
+  index-diff-constructors = ?DefData(_, Type(), _)
+  
+  // Type definitions are equal if their URI is equal and if their values are equal.
+  index-diff-compare:
+    (DefData(u1, Type(), v1), DefData(u2, Type(), v2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2);
+       <index-key-eq> (v1, v2)
+
+rules // Error checks
+  
+  constraint-error:
+    x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
+    
+  constraint-error:
+    definition -> (key, $[Duplicate definition])
+    where
+      <nam-unique> definition;
+      key := <nam-get-definition-key> definition;
+      defs := <index-lookup-all-scoped-noimports> key;
+      <gt> (<length> defs, 1)
+      
+rules // Type dependant lookup
+	
+	/**
+   * Given an annotated AST node and a type, resolves it and checks if type equals given type, returning its definition.
+   * Uses precise matching for names.
+   *
+   * @param type	Only definitions with this type are returned.
+   * @type "name"{uri} -> ?Def(uri')
+   */
+  index-lookup-typed(|type):
+    x{[namespace|path]} -> <index-lookup-internal(index-compare-nametype-equal(|name, type)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
+
+  /**
+   * Given an annotated AST node, a prefix and a type, looks for all definitions with given prefix and type starting at the scope of 
+   * the given node.
+   * Uses substring matching for names.
+   *
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @param type			Only definitions with this type are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-typed(|prefix, type):
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-nametype-substring(|prefix, type)|ns, path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace
+
+  /**
+   * Compares given element (with an URI) to given name using string equality comparison and given type using equality.
+   * 
+   * @internal 
+   */     
+  index-compare-nametype-equal(|name, type):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <SRTS-EXT-eq-ignore-annos(|name)> <index-uri-name> uri;
+      <nbl-type-eq(|type)> <nbl-get-type> uri
+      
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison and given type using equality.
+   * 
+   * @internal 
+   */     
+  index-compare-nametype-substring(|prefix, type):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <is-substring(!prefix)> <index-uri-name> uri;
+      <nbl-type-eq(|type)> <nbl-get-type> uri
+  
+  /** @internal */
+  nbl-get-type:
+  	uri -> <index-get-data(|Type())> Def(uri)
+  
+  // TODO: Allow user defined type equality.
+  /** @internal */	
+  nbl-type-eq(|type) = 
+  	<eq> (<id>, type)

From gabrielkonat at gmail.com  Fri Jul 13 12:47:51 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Fri, 13 Jul 2012 10:47:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25194 -
	spoofax-contrib/separate-compilation-examples/c-without-macros/lib
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib
	spoofax-contrib/separa...
Message-ID: <20120713104751.93A33CC0DB@mx4.tudelft.nl>

Author: gkonat
Date: Fri Jul 13 10:47:51 2012
New Revision: 25194
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25194&sc=1

Log:


Added:
   spoofax-contrib/separate-compilation-examples/c-without-macros/lib/nbl-library.generated.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/nbl-library.generated.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/lib/nbl-library.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.nd
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.str
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.names/test/example.str
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/analysis-manual.str
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/splitter.str
Modified:
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example2.csh
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/poster/   (props changed)
   spoofax-imp/trunk/org.strategoxt.imp.generator/   (props changed)
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-index-libraries.str
   spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-auto.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.names/syntax/NameDefinitionLanguage.sdf
   spoofax-imp/trunk/org.strategoxt.imp.names/test/example.nd
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/check.str
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/namedefinitionlanguage.str

Added: spoofax-contrib/separate-compilation-examples/c-without-macros/lib/nbl-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/lib/nbl-library.generated.str	Fri Jul 13 10:47:51 2012	(r25194)
@@ -0,0 +1,144 @@
+module lib/nbl-library.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  
+signature constructors
+  
+  Type        : DefDataKind
+  Import      : DefDataKind
+  Transitive  : ImportAnno
+  CurrentFile : ImportAnno
+  
+rules // Import adjust rule
+     
+  import-transitive =
+    collect-one(?Transitive())
+  import-standard =
+    not(import-transitive)
+    
+  import-values(|namespace, path) =
+    <index-get-all-values> DefData([namespace| path], Import(), ())
+    
+  import-currentfile-values(|namespace) =
+    <index-get-all-values> DefData([namespace|[<index-file-to-string> <index-get-current-file>]], Import(), ())  
+    
+  adjust-index-import(|namespace, path):
+    _ -> <concat> [[[namespace | path]], currentFileImportDefs, importDefs]
+    with
+      uri := [namespace | path]
+    where
+      allImports := <import-values(|namespace, path)> ;
+      importDefs := <mapconcat(import-defs(|namespace, [uri]))> allImports
+    where
+      currentfileImports := <import-currentfile-values(|namespace)> ;
+      currentFileImportDefs := <mapconcat(import-defs(|namespace, [uri]))> currentfileImports
+    
+  import-defs(|namespace, seen):
+    (key, <import-standard>) -> [uri]
+    with
+      uri := [namespace | <index-uri-path> key]
+      
+  import-defs(|namespace, seen):
+    (key, <import-transitive>) -> <conc> ([uri], transitiveUris)
+    with
+      path := <index-uri-path> key ;
+      uri := [namespace | path] ;
+      
+      if not(<elem> (uri, seen)) then
+        allImports := <import-values(|namespace, path)> ;
+        transitiveUris := <mapconcat(import-defs(|namespace, [uri|seen]))> allImports
+      else
+        transitiveUris := []
+      end
+
+rules // Adjust difference comparison
+    
+  // Add Type to the constructors to check for differences.
+  index-diff-constructors = ?DefData(_, Type(), _)
+  
+  // Type definitions are equal if their URI is equal and if their values are equal.
+  index-diff-compare:
+    (DefData(u1, Type(), v1), DefData(u2, Type(), v2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2);
+       <index-key-eq> (v1, v2)
+
+rules // Error checks
+  
+  constraint-error:
+    x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
+    
+  constraint-error:
+    definition -> (key, $[Duplicate definition])
+    where
+      <nam-unique> definition;
+      key := <nam-get-definition-key> definition;
+      defs := <index-lookup-all-scoped-noimports> key;
+      <gt> (<length> defs, 1)
+      
+rules // Type dependant lookup
+	
+	/**
+   * Given an annotated AST node and a type, resolves it and checks if type equals given type, returning its definition.
+   * Uses precise matching for names.
+   *
+   * @param type	Only definitions with this type are returned.
+   * @type "name"{uri} -> ?Def(uri')
+   */
+  index-lookup-typed(|type):
+    x{[namespace|path]} -> <index-lookup-internal(index-compare-nametype-equal(|name, type)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
+
+  /**
+   * Given an annotated AST node, a prefix and a type, looks for all definitions with given prefix and type starting at the scope of 
+   * the given node.
+   * Uses substring matching for names.
+   *
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @param type			Only definitions with this type are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-typed(|prefix, type):
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-nametype-substring(|prefix, type)|ns, path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace
+
+  /**
+   * Compares given element (with an URI) to given name using string equality comparison and given type using equality.
+   * 
+   * @internal 
+   */     
+  index-compare-nametype-equal(|name, type):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <SRTS-EXT-eq-ignore-annos(|name)> <index-uri-name> uri;
+      <nbl-type-eq(|type)> <nbl-get-type> uri
+      
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison and given type using equality.
+   * 
+   * @internal 
+   */     
+  index-compare-nametype-substring(|prefix, type):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <is-substring(!prefix)> <index-uri-name> uri;
+      <nbl-type-eq(|type)> <nbl-get-type> uri
+  
+  /** @internal */
+  nbl-get-type:
+  	uri -> <index-get-data(|Type())> Def(uri)
+  
+  // TODO: Allow user defined type equality.
+  /** @internal */	
+  nbl-type-eq(|type) = 
+  	<eq> (<id>, type)

Added: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/nbl-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/nbl-library.generated.str	Fri Jul 13 10:47:51 2012	(r25194)
@@ -0,0 +1,144 @@
+module lib/nbl-library.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  
+signature constructors
+  
+  Type        : DefDataKind
+  Import      : DefDataKind
+  Transitive  : ImportAnno
+  CurrentFile : ImportAnno
+  
+rules // Import adjust rule
+     
+  import-transitive =
+    collect-one(?Transitive())
+  import-standard =
+    not(import-transitive)
+    
+  import-values(|namespace, path) =
+    <index-get-all-values> DefData([namespace| path], Import(), ())
+    
+  import-currentfile-values(|namespace) =
+    <index-get-all-values> DefData([namespace|[<index-file-to-string> <index-get-current-file>]], Import(), ())  
+    
+  adjust-index-import(|namespace, path):
+    _ -> <concat> [[[namespace | path]], currentFileImportDefs, importDefs]
+    with
+      uri := [namespace | path]
+    where
+      allImports := <import-values(|namespace, path)> ;
+      importDefs := <mapconcat(import-defs(|namespace, [uri]))> allImports
+    where
+      currentfileImports := <import-currentfile-values(|namespace)> ;
+      currentFileImportDefs := <mapconcat(import-defs(|namespace, [uri]))> currentfileImports
+    
+  import-defs(|namespace, seen):
+    (key, <import-standard>) -> [uri]
+    with
+      uri := [namespace | <index-uri-path> key]
+      
+  import-defs(|namespace, seen):
+    (key, <import-transitive>) -> <conc> ([uri], transitiveUris)
+    with
+      path := <index-uri-path> key ;
+      uri := [namespace | path] ;
+      
+      if not(<elem> (uri, seen)) then
+        allImports := <import-values(|namespace, path)> ;
+        transitiveUris := <mapconcat(import-defs(|namespace, [uri|seen]))> allImports
+      else
+        transitiveUris := []
+      end
+
+rules // Adjust difference comparison
+    
+  // Add Type to the constructors to check for differences.
+  index-diff-constructors = ?DefData(_, Type(), _)
+  
+  // Type definitions are equal if their URI is equal and if their values are equal.
+  index-diff-compare:
+    (DefData(u1, Type(), v1), DefData(u2, Type(), v2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2);
+       <index-key-eq> (v1, v2)
+
+rules // Error checks
+  
+  constraint-error:
+    x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
+    
+  constraint-error:
+    definition -> (key, $[Duplicate definition])
+    where
+      <nam-unique> definition;
+      key := <nam-get-definition-key> definition;
+      defs := <index-lookup-all-scoped-noimports> key;
+      <gt> (<length> defs, 1)
+      
+rules // Type dependant lookup
+	
+	/**
+   * Given an annotated AST node and a type, resolves it and checks if type equals given type, returning its definition.
+   * Uses precise matching for names.
+   *
+   * @param type	Only definitions with this type are returned.
+   * @type "name"{uri} -> ?Def(uri')
+   */
+  index-lookup-typed(|type):
+    x{[namespace|path]} -> <index-lookup-internal(index-compare-nametype-equal(|name, type)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
+
+  /**
+   * Given an annotated AST node, a prefix and a type, looks for all definitions with given prefix and type starting at the scope of 
+   * the given node.
+   * Uses substring matching for names.
+   *
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @param type			Only definitions with this type are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-typed(|prefix, type):
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-nametype-substring(|prefix, type)|ns, path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace
+
+  /**
+   * Compares given element (with an URI) to given name using string equality comparison and given type using equality.
+   * 
+   * @internal 
+   */     
+  index-compare-nametype-equal(|name, type):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <SRTS-EXT-eq-ignore-annos(|name)> <index-uri-name> uri;
+      <nbl-type-eq(|type)> <nbl-get-type> uri
+      
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison and given type using equality.
+   * 
+   * @internal 
+   */     
+  index-compare-nametype-substring(|prefix, type):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <is-substring(!prefix)> <index-uri-name> uri;
+      <nbl-type-eq(|type)> <nbl-get-type> uri
+  
+  /** @internal */
+  nbl-get-type:
+  	uri -> <index-get-data(|Type())> Def(uri)
+  
+  // TODO: Allow user defined type equality.
+  /** @internal */	
+  nbl-type-eq(|type) = 
+  	<eq> (<id>, type)

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example2.csh
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example2.csh	Fri Jul 13 09:26:09 2012	(r25193)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example2.csh	Fri Jul 13 10:47:51 2012	(r25194)
@@ -4,7 +4,7 @@
   partial class URL {
 	  string GetLocation() {
 	    return location; 
-	  } 
+	  }
   }
 }
 

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/lib/nbl-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/lib/nbl-library.generated.str	Fri Jul 13 10:47:51 2012	(r25194)
@@ -0,0 +1,144 @@
+module lib/nbl-library.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  
+signature constructors
+  
+  Type        : DefDataKind
+  Import      : DefDataKind
+  Transitive  : ImportAnno
+  CurrentFile : ImportAnno
+  
+rules // Import adjust rule
+     
+  import-transitive =
+    collect-one(?Transitive())
+  import-standard =
+    not(import-transitive)
+    
+  import-values(|namespace, path) =
+    <index-get-all-values> DefData([namespace| path], Import(), ())
+    
+  import-currentfile-values(|namespace) =
+    <index-get-all-values> DefData([namespace|[<index-file-to-string> <index-get-current-file>]], Import(), ())  
+    
+  adjust-index-import(|namespace, path):
+    _ -> <concat> [[[namespace | path]], currentFileImportDefs, importDefs]
+    with
+      uri := [namespace | path]
+    where
+      allImports := <import-values(|namespace, path)> ;
+      importDefs := <mapconcat(import-defs(|namespace, [uri]))> allImports
+    where
+      currentfileImports := <import-currentfile-values(|namespace)> ;
+      currentFileImportDefs := <mapconcat(import-defs(|namespace, [uri]))> currentfileImports
+    
+  import-defs(|namespace, seen):
+    (key, <import-standard>) -> [uri]
+    with
+      uri := [namespace | <index-uri-path> key]
+      
+  import-defs(|namespace, seen):
+    (key, <import-transitive>) -> <conc> ([uri], transitiveUris)
+    with
+      path := <index-uri-path> key ;
+      uri := [namespace | path] ;
+      
+      if not(<elem> (uri, seen)) then
+        allImports := <import-values(|namespace, path)> ;
+        transitiveUris := <mapconcat(import-defs(|namespace, [uri|seen]))> allImports
+      else
+        transitiveUris := []
+      end
+
+rules // Adjust difference comparison
+    
+  // Add Type to the constructors to check for differences.
+  index-diff-constructors = ?DefData(_, Type(), _)
+  
+  // Type definitions are equal if their URI is equal and if their values are equal.
+  index-diff-compare:
+    (DefData(u1, Type(), v1), DefData(u2, Type(), v2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2);
+       <index-key-eq> (v1, v2)
+
+rules // Error checks
+  
+  constraint-error:
+    x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
+    
+  constraint-error:
+    definition -> (key, $[Duplicate definition])
+    where
+      <nam-unique> definition;
+      key := <nam-get-definition-key> definition;
+      defs := <index-lookup-all-scoped-noimports> key;
+      <gt> (<length> defs, 1)
+      
+rules // Type dependant lookup
+	
+	/**
+   * Given an annotated AST node and a type, resolves it and checks if type equals given type, returning its definition.
+   * Uses precise matching for names.
+   *
+   * @param type	Only definitions with this type are returned.
+   * @type "name"{uri} -> ?Def(uri')
+   */
+  index-lookup-typed(|type):
+    x{[namespace|path]} -> <index-lookup-internal(index-compare-nametype-equal(|name, type)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
+
+  /**
+   * Given an annotated AST node, a prefix and a type, looks for all definitions with given prefix and type starting at the scope of 
+   * the given node.
+   * Uses substring matching for names.
+   *
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @param type			Only definitions with this type are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-typed(|prefix, type):
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-nametype-substring(|prefix, type)|ns, path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace
+
+  /**
+   * Compares given element (with an URI) to given name using string equality comparison and given type using equality.
+   * 
+   * @internal 
+   */     
+  index-compare-nametype-equal(|name, type):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <SRTS-EXT-eq-ignore-annos(|name)> <index-uri-name> uri;
+      <nbl-type-eq(|type)> <nbl-get-type> uri
+      
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison and given type using equality.
+   * 
+   * @internal 
+   */     
+  index-compare-nametype-substring(|prefix, type):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <is-substring(!prefix)> <index-uri-name> uri;
+      <nbl-type-eq(|type)> <nbl-get-type> uri
+  
+  /** @internal */
+  nbl-get-type:
+  	uri -> <index-get-data(|Type())> Def(uri)
+  
+  // TODO: Allow user defined type equality.
+  /** @internal */	
+  nbl-type-eq(|type) = 
+  	<eq> (<id>, type)

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-index-libraries.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-index-libraries.str	Fri Jul 13 09:26:09 2012	(r25193)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-index-libraries.str	Fri Jul 13 10:47:51 2012	(r25194)
@@ -1550,7 +1550,7 @@
     (ast, file) -> <id>
     where
       <is-string> file;
-      <index-add(|full-path)> AST([AST()], ast)
+      <index-add(|full-path)> AST([], ast)
       
   /**
    * Identifies all definitions in the tree and annotates them with their URI.

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-auto.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-auto.generated.str	Fri Jul 13 09:26:09 2012	(r25193)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-auto.generated.str	Fri Jul 13 10:47:51 2012	(r25194)
@@ -2,8 +2,7 @@
 
 signature
   constructors
-    Module    : Namespace
-    Namespace : Namespace
+    
 
 
 imports
@@ -13,33 +12,6 @@
 
 rules
 
-  nam-get-scope-types :
-    Naming(_, _, _, _) -> [Namespace()]
-
-  nam-get-definition-key :
-    Naming(x, _, _, _) -> x
-
-  nam-get-definition :
-    Naming(x, _, _, _) -> <nam-get-def(|Module())> x
-
-  nam-get-definition-key :
-    Namespace(x) -> x
-
-  nam-get-definition :
-    Namespace(x) -> <nam-get-def(|Namespace())> x
-
-  nam-annotate-names(|def-path):
-    Naming(d_14248, e_14248, f_14248, g_14248) -> Naming(d_14248{def-path}, e_14248, f_14248, g_14248)
-
-  nam-annotate-names(|def-path):
-    Namespace(b_14248) -> Namespace(b_14248{def-path})
-
-  nam-annotate-names(|def-path):
-    NsRef(a_14248) -> NsRef(<nam-annotate-use(|Namespace())> a_14248)
-
-  nam-get-scope-types :
-    Naming(_, _, _, _) -> [Namespace()]
-
   nam-get-def(|n) =
     fail
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/syntax/NameDefinitionLanguage.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/syntax/NameDefinitionLanguage.sdf	Fri Jul 13 09:26:09 2012	(r25193)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/syntax/NameDefinitionLanguage.sdf	Fri Jul 13 10:47:51 2012	(r25194)
@@ -15,7 +15,7 @@
   context-free syntax
 
     NamingDefinition                                         -> Start
-    "module" Module@=ModName Imports Namespaces NamingRules* -> NamingDefinition {"Naming", scope(Namespace)}
+    "module" ModName Imports Namespaces NamingRules*         -> NamingDefinition {"Naming"}
     
     %% Imports
     "imports" ModuleRef* -> Imports   {bracket}
@@ -25,8 +25,8 @@
     %% Namespaces
     "namespaces" Namespace* -> Namespaces   {bracket}
                             -> Namespaces   {ast("[]")}
-    Namespace@=Id           -> Namespace    {"Namespace"}
-    Namespace at Id            -> NamespaceRef {"NsRef"}
+    Id                      -> Namespace    {"Namespace"}
+    Id                      -> NamespaceRef {"NsRef"}
     
     %% Rule
     "rules" NamingRule*               -> NamingRules {"ND-Rules"}

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/test/example.nd
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/test/example.nd	Fri Jul 13 09:26:09 2012	(r25193)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/test/example.nd	Fri Jul 13 10:47:51 2012	(r25194)
@@ -1,6 +1,7 @@
 module example
 
 imports
+
 	include/Entity
 	
 namespaces

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/trans/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/trans/check.str	Fri Jul 13 09:26:09 2012	(r25193)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/trans/check.str	Fri Jul 13 10:47:51 2012	(r25194)
@@ -4,27 +4,9 @@
   libstratego-lib
   include/NameDefinitionLanguage
   lib/editor-common.generated
-  lib/analysis-auto.generated
   lib/index-library.generated
   lib/analysis-library.generated
 
-rules // Resolving
-  
-  constraint-error:
-    x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
-    
-rules // Duplicates
-    
-  is-unique-namespace = fail
-  
-  constraint-error:
-    definition -> (definition, $[Duplicate definition])
-    where
-      key{[ns|_]} := <nam-get-definition-key> definition;
-      <is-unique-namespace> ns;
-      definitions := <index-lookup-all> key;
-      <gt> (<length> definitions, 1)
-
 rules // Other
   
   constraint-warning = fail

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str	Fri Jul 13 09:26:09 2012	(r25193)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str	Fri Jul 13 10:47:51 2012	(r25194)
@@ -13,6 +13,7 @@
   index-compile-ast(|file, subfile):
     ast at Naming(name, _, _, _) -> None()
     with
+      <debug> "test";
     	str       := <generate-name-analysis-stratego> ast ;
       full-path := <dirname> file ;
       filename  := <guarantee-extension(|"str")> name ;

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/trans/namedefinitionlanguage.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/trans/namedefinitionlanguage.str	Fri Jul 13 09:26:09 2012	(r25193)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/trans/namedefinitionlanguage.str	Fri Jul 13 10:47:51 2012	(r25194)
@@ -6,18 +6,17 @@
   libstratego-aterm
   include/NameDefinitionLanguage
   lib/editor-common.generated
-  lib/analysis-auto.generated
   lib/index-library.generated
   lib/analysis-library.generated
   lib/analysis-library-internal.generated
   lib/compilation-library.generated
-  analysis-manual
+  lib/nbl-library.generated
   check
   generate
-  splitter
-
-rules // Analysis
+  names
   
+rules // Analysis
+
   // Analyzes the current program, returning a tuple with the analyzed AST, errors, warnings, notes and
   // files that should be re-analyzed.
   analyze:

Added: spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.nd
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.nd	Fri Jul 13 10:47:51 2012	(r25194)
@@ -0,0 +1,29 @@
+module names
+
+imports
+
+  include/NameDefinitionLanguage
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  lib/index-library.generated
+
+namespaces
+
+  Module
+  Import
+  Namespace
+  
+rules
+
+  Naming(m, _, _, _): 
+    defines Module m 
+              
+	Import(m):
+	  defines Import m
+    imports Namespace from Module m
+	        
+	Namespace(ns):
+    defines Namespace ns
+	        
+	NsRef(ns):
+    refers to Namespace ns
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.str	Fri Jul 13 10:47:51 2012	(r25194)
@@ -0,0 +1,87 @@
+module names
+
+imports
+
+
+imports
+  include/NameDefinitionLanguage
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  lib/index-library.generated
+
+
+signature
+  constructors
+    Type        : DefDataKind
+    Import      : DefDataKind
+    Transitive  : ImportAnno
+    CurrentFile : ImportAnno
+
+  constructors
+    Module    : Namespace
+    Import    : Namespace
+    Namespace : Namespace
+
+
+rules
+
+  nam-get-definition-keys :
+    Naming(m, _, _, _) -> [m]
+
+  nam-get-definitions :
+    Naming(m, _, _, _) -> [(Module(), [m])]
+
+  nam-annotate-names(|paths__, path__):
+    Naming(m, _, _, _) -> <Naming(nam-annotate-def(|path__), id, id, id)>
+
+  nam-unique :
+    Naming(m, _, _, _) -> <id>
+
+
+rules
+
+  nam-get-definition-keys :
+    Import(m) -> [m]
+
+  nam-get-definitions :
+    Import(m) -> [(Import(), [m])]
+
+  nam-annotate-names(|paths__, path__):
+    Import(m) -> <Import(nam-annotate-def(|path__))>
+
+  nam-unique :
+    Import(m) -> <id>
+
+  adjust-index-def-data(store__|namespace__, path__):
+    Import(m) -> <store__> DefData(
+                             [Namespace()|path__]
+                           , Import()
+                           , (m, [])
+                           )
+
+
+rules
+
+  nam-get-definition-keys :
+    Namespace(ns) -> [ns]
+
+  nam-get-definitions :
+    Namespace(ns) -> [(Namespace(), [ns])]
+
+  nam-annotate-names(|paths__, path__):
+    Namespace(ns) -> <Namespace(nam-annotate-def(|path__))>
+
+  nam-unique :
+    Namespace(ns) -> <id>
+
+
+rules
+
+  nam-get-uses-keys :
+    NsRef(ns) -> [ns]
+
+  nam-get-uses :
+    NsRef(ns) -> [(Namespace(), [ns])]
+
+  nam-annotate-names(|paths__, path__):
+    NsRef(ns) -> <NsRef(nam-annotate-use(|paths__, Namespace()))>
\ No newline at end of file

From gabrielkonat at gmail.com  Fri Jul 13 13:45:12 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Fri, 13 Jul 2012 11:45:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25195 -
	spoofax-contrib/separate-compilation-examples/c-without-macros/trans
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans
	spoofax-contrib/se...
Message-ID: <20120713114512.EE8BF108C007@mx3.tudelft.nl>

Author: gkonat
Date: Fri Jul 13 11:45:11 2012
New Revision: 25195
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25195&sc=1

Log:


Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/names.nd
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/names.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.nd
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/names.nd
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/names.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-nbl-example.str
   spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library-internal.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.nd
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/names.nd
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/names.nd	Fri Jul 13 10:47:51 2012	(r25194)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/names.nd	Fri Jul 13 11:45:11 2012	(r25195)
@@ -2,6 +2,9 @@
 
 imports
 
+  lib/analysis-library
+  lib/analysis-library-internal
+  lib/index-library
   include/C-without-macros
   desugar
   types

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/names.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/names.str	Fri Jul 13 10:47:51 2012	(r25194)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/names.str	Fri Jul 13 11:45:11 2012	(r25195)
@@ -1,12 +1,12 @@
 module names
 
 imports
-  lib/analysis-library
-  lib/analysis-library-internal
-  lib/index-library
 
 
 imports
+  lib/analysis-library
+  lib/analysis-library-internal
+  lib/index-library
   include/C-without-macros
   desugar
   types
@@ -66,21 +66,21 @@
 
   adjust-index-def-data(store__|namespace__, path__):
     Include(x) -> <store__> DefData(
-                              [Struct()|[<index-file-to-string> <index-get-current-file>]]
+                              [Struct()|path__]
                             , Import()
                             , (x, [CurrentFile()])
                             )
 
   adjust-index-def-data(store__|namespace__, path__):
     Include(x) -> <store__> DefData(
-                              [Type()|[<index-file-to-string> <index-get-current-file>]]
+                              [Type()|path__]
                             , Import()
                             , (x, [CurrentFile()])
                             )
 
   adjust-index-def-data(store__|namespace__, path__):
     Include(x) -> <store__> DefData(
-                              [Function()|[<index-file-to-string> <index-get-current-file>]]
+                              [Function()|path__]
                             , Import()
                             , (x, [CurrentFile()])
                             )

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.nd
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.nd	Fri Jul 13 10:47:51 2012	(r25194)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.nd	Fri Jul 13 11:45:11 2012	(r25195)
@@ -2,6 +2,9 @@
   
 imports
 
+  lib/analysis-library
+  lib/analysis-library-internal
+  lib/index-library
   include/CSharpPartialClassses
   desugar
   

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.str	Fri Jul 13 10:47:51 2012	(r25194)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.str	Fri Jul 13 11:45:11 2012	(r25195)
@@ -1,12 +1,12 @@
 module names
 
 imports
-  lib/analysis-library
-  lib/analysis-library-internal
-  lib/index-library
 
 
 imports
+  lib/analysis-library
+  lib/analysis-library-internal
+  lib/index-library
   include/CSharpPartialClassses
   desugar
 
@@ -62,7 +62,7 @@
 
   adjust-index-def-data(store__|namespace__, path__):
     UsingPart(x) -> <store__> DefData(
-                                [Class()|[<index-file-to-string> <index-get-current-file>]]
+                                [Class()|path__]
                               , Import()
                               , (x, [CurrentFile()])
                               )

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/names.nd
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/names.nd	Fri Jul 13 10:47:51 2012	(r25194)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/names.nd	Fri Jul 13 11:45:11 2012	(r25195)
@@ -2,6 +2,9 @@
 
 imports
 
+  lib/analysis-library
+  lib/analysis-library-internal
+  lib/index-library
   include/EntityWithAspects
   
 namespaces

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/names.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/names.str	Fri Jul 13 10:47:51 2012	(r25194)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/names.str	Fri Jul 13 11:45:11 2012	(r25195)
@@ -1,12 +1,12 @@
 module names
 
 imports
-  lib/analysis-library
-  lib/analysis-library-internal
-  lib/index-library
 
 
 imports
+  lib/analysis-library
+  lib/analysis-library-internal
+  lib/index-library
   include/EntityWithAspects
 
 
@@ -89,7 +89,7 @@
 
   adjust-index-def-data(store__|namespace__, path__):
     WildcardImport(m) -> <store__> DefData(
-                                     [Entity()|[<index-file-to-string> <index-get-current-file>]]
+                                     [Entity()|path__]
                                    , Import()
                                    , (m, [CurrentFile()])
                                    )

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-nbl-example.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-nbl-example.str	Fri Jul 13 10:47:51 2012	(r25194)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-nbl-example.str	Fri Jul 13 11:45:11 2012	(r25195)
@@ -15,9 +15,6 @@
 imports
 	
 	include/{sdf-name}
-	lib/analysis-library.generated
-  lib/analysis-library-internal.generated
-  lib/index-library.generated
 	
 namespaces
 	
@@ -52,13 +49,13 @@
 ${module names
 
 imports
-
-
-imports
-  include/{sdf-name}
   lib/analysis-library.generated
   lib/analysis-library-internal.generated
   lib/index-library.generated
+  
+
+imports
+  include/{sdf-name}
 
 
 signature

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library-internal.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library-internal.generated.str	Fri Jul 13 10:47:51 2012	(r25194)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library-internal.generated.str	Fri Jul 13 11:45:11 2012	(r25195)
@@ -163,7 +163,7 @@
     (ast, file) -> <id>
     where
       <is-string> file;
-      <index-add(|full-path)> AST([AST()], ast)
+      <index-add(|full-path)> AST([], ast)
       
   /**
    * Identifies all definitions in the tree and annotates them with their URI.

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str	Fri Jul 13 10:47:51 2012	(r25194)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str	Fri Jul 13 11:45:11 2012	(r25195)
@@ -13,7 +13,7 @@
   index-compile-ast(|file, subfile):
     ast at Naming(name, _, _, _) -> None()
     with
-      <debug> "test";
+      <debug> "Compiling";
     	str       := <generate-name-analysis-stratego> ast ;
       full-path := <dirname> file ;
       filename  := <guarantee-extension(|"str")> name ;
@@ -56,9 +56,9 @@
 	
 	GEN_IMPORTS = 
 		Imports(
-			[ Import("lib/analysis-library")
-			, Import("lib/analysis-library-internal")
-			, Import("lib/index-library") 
+			[ Import("lib/analysis-library.generated")
+			, Import("lib/analysis-library-internal.generated")
+			, Import("lib/index-library.generated") 
 			]
 		)
 		
@@ -114,9 +114,9 @@
 	to-stratego-term:
 		cons#(args) -> TERM(cons, args)
 		
-	is-generated-library = ?Import("lib/analysis-library.generated")
-	is-generated-library = ?Import("lib/analysis-library-internal.generated")
-  is-generated-library = ?Import("lib/index-library.generated")
+	is-nongenerated-library = ?Import("lib/analysis-library")
+	is-nongenerated-library = ?Import("lib/analysis-library-internal")
+  is-nongenerated-library = ?Import("lib/index-library")
   	  
 rules
 	
@@ -131,7 +131,7 @@
 			  ]
 			)
 		with
-			if <fetch(is-generated-library)> import* then
+			if <fetch(is-nongenerated-library)> import* then
 				gen-imports := Imports([])
 			else
 				gen-imports := GEN_IMPORTS()

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.nd
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.nd	Fri Jul 13 10:47:51 2012	(r25194)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.nd	Fri Jul 13 11:45:11 2012	(r25195)
@@ -3,9 +3,6 @@
 imports
 
   include/NameDefinitionLanguage
-  lib/analysis-library.generated
-  lib/analysis-library-internal.generated
-  lib/index-library.generated
 
 namespaces
 
@@ -16,8 +13,9 @@
 rules
 
   Naming(m, _, _, _): 
-    defines Module m 
-              
+    defines Module m
+    scopes Import
+    
 	Import(m):
 	  defines Import m
     imports Namespace from Module m

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.str	Fri Jul 13 10:47:51 2012	(r25194)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.str	Fri Jul 13 11:45:11 2012	(r25195)
@@ -1,13 +1,13 @@
 module names
 
 imports
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  lib/index-library.generated
 
 
 imports
   include/NameDefinitionLanguage
-  lib/analysis-library.generated
-  lib/analysis-library-internal.generated
-  lib/index-library.generated
 
 
 signature
@@ -25,6 +25,9 @@
 
 rules
 
+  nam-get-scope-types :
+    Naming(m, _, _, _) -> [Namespace()]
+
   nam-get-definition-keys :
     Naming(m, _, _, _) -> [m]
 

From gabrielkonat at gmail.com  Fri Jul 13 15:10:11 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Fri, 13 Jul 2012 13:10:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25196 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
	spoofax-imp/trunk/org.strategoxt.imp.names/trans
	spoofax/trunk/spoofax/org.spoofax.interpreter.l...
Message-ID: <20120713131011.B7F382B8014@mx2.tudelft.nl>

Author: gkonat
Date: Fri Jul 13 13:10:11 2012
New Revision: 25196
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25196&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-index-libraries.str
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.nd
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/analysis-library.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-index-libraries.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-index-libraries.str	Fri Jul 13 11:45:11 2012	(r25195)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-index-libraries.str	Fri Jul 13 13:10:11 2012	(r25196)
@@ -936,7 +936,7 @@
           <analyze-top-internal(|phase, language, project-path, full-path)> astsFilePairs
       else
         Results(asts, _, _, _, _, _, filesToAnalyze) := 
-          <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, full-path)];
+          <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, (full-path, []))];
         ast' := <Hd> asts // Always returns a list of 1 AST if there is no splitter, so take the head.
       end
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.nd
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.nd	Fri Jul 13 11:45:11 2012	(r25195)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.nd	Fri Jul 13 13:10:11 2012	(r25196)
@@ -14,7 +14,7 @@
 
   Naming(m, _, _, _): 
     defines Module m
-    scopes Import
+    scopes Namespace
     
 	Import(m):
 	  defines Import m

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/analysis-library.str
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/analysis-library.str	Fri Jul 13 11:45:11 2012	(r25195)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/analysis-library.str	Fri Jul 13 13:10:11 2012	(r25196)
@@ -188,7 +188,7 @@
           <analyze-top-internal(|phase, language, project-path, full-path)> astsFilePairs
       else
         Results(asts, _, _, _, _, _, filesToAnalyze) := 
-          <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, full-path)];
+          <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, (full-path, []))];
         ast' := <Hd> asts // Always returns a list of 1 AST if there is no splitter, so take the head.
       end
   

From gabrielkonat at gmail.com  Fri Jul 13 16:13:20 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Fri, 13 Jul 2012 14:13:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25197 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.aster
	org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.metatoo...
Message-ID: <20120713141320.96B177F8023@mx1.tudelft.nl>

Author: gkonat
Date: Fri Jul 13 14:13:19 2012
New Revision: 25197
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25197&sc=1

Log:
Remove SDF annotations.
Also open NBL definition after wizard completes.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/   (props changed)
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/   (props changed)
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-grammar.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/   (props changed)
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-grammar.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-grammar.str	Fri Jul 13 13:10:11 2012	(r25196)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-grammar.str	Fri Jul 13 14:13:19 2012	(r25197)
@@ -31,10 +31,10 @@
 
   context-free syntax
   
-    "module" Module@=ID Definition*       -> Start {"Module", scope(Type)}
-    "entity" Type@=ID "{" Property* "}"   -> Definition {"Entity", scope(Property)}
-    Property@=ID ":" Type                 -> Property {"Property"}
-    Type at ID                               -> Type {"Type"}
+    "module" ID Definition*       -> Start {"Module"}
+    "entity" ID "{" Property* "}" -> Definition {"Entity"}
+    ID ":" Type                   -> Property {"Property"}
+    ID                            -> Type {"Type"}
 ]
   
   create-grammar-common =

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	Fri Jul 13 13:10:11 2012	(r25196)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	Fri Jul 13 14:13:19 2012	(r25197)
@@ -180,9 +180,11 @@
 		monitor.setTaskName("Opening editor tabs");
 		Display display = getShell().getDisplay();
 		EditorState.asyncOpenEditor(display, project.getFile("/trans/" + toStrategoName(languageName) +  ".str"), true);
-		monitor.worked(2);
+		monitor.worked(1);
 		EditorState.asyncOpenEditor(display, project.getFile("/editor/" + languageName +  ".main.esv"), true);
 		monitor.worked(1);
+		EditorState.asyncOpenEditor(display, project.getFile("/trans/names.str"), true);
+		monitor.worked(1);
 		EditorState.asyncOpenEditor(display, project.getFile("/syntax/" + languageName +  ".sdf"), true);
 		monitor.worked(1);
 		EditorState.asyncOpenEditor(display, project.getFile("/test/example." + extensions.split(",")[0]), false);

From gabrielkonat at gmail.com  Fri Jul 13 16:50:25 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Fri, 13 Jul 2012 14:50:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25198 -
	spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards
Message-ID: <20120713145025.AC27BCC1D7@mx4.tudelft.nl>

Author: gkonat
Date: Fri Jul 13 14:50:25 2012
New Revision: 25198
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25198&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	Fri Jul 13 14:13:19 2012	(r25197)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	Fri Jul 13 14:50:25 2012	(r25198)
@@ -183,7 +183,7 @@
 		monitor.worked(1);
 		EditorState.asyncOpenEditor(display, project.getFile("/editor/" + languageName +  ".main.esv"), true);
 		monitor.worked(1);
-		EditorState.asyncOpenEditor(display, project.getFile("/trans/names.str"), true);
+		EditorState.asyncOpenEditor(display, project.getFile("/trans/names.nd"), true);
 		monitor.worked(1);
 		EditorState.asyncOpenEditor(display, project.getFile("/syntax/" + languageName +  ".sdf"), true);
 		monitor.worked(1);

From gabrielkonat at gmail.com  Sat Jul 14 10:49:22 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Sat, 14 Jul 2012 08:49:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25199 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.spoofax
	org.strategoxt.imp.editors.template
	org.strategoxt.imp.generator/src/sdf2imp/services
	org.strategoxt.imp.s...
Message-ID: <20120714084922.B5197CC11F@mx4.tudelft.nl>

Author: gkonat
Date: Sat Jul 14 08:49:20 2012
New Revision: 25199
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25199&sc=1

Log:
Removed generate-java builder.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/   (props changed)
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/   (props changed)
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-builders-descriptor.str
   spoofax-imp/trunk/org.strategoxt.imp.spoofax.generator/   (props changed)

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-builders-descriptor.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-builders-descriptor.str	Fri Jul 13 14:50:25 2012	(r25198)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-builders-descriptor.str	Sat Jul 14 08:49:20 2012	(r25199)
@@ -32,7 +32,6 @@
           ~~
           observer: editor-analyze (multifile)
           ~~
-          builder: "Generate Java code" = generate-java  (openeditor) (realtime)
 				  builder: "Show abstract syntax" = debug-generate-aterm (openeditor) (realtime) (meta) (source)
 				  builder: "Show deffed syntax" = debug-generate-deffed (openeditor) (realtime) (meta) (source)
 				  builder: "Show analyzed syntax" = debug-generate-analyzed (openeditor) (realtime) (meta) (source)

From oskarvanrest at gmail.com  Mon Jul 16 03:38:27 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 16 Jul 2012 01:38:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25200 - in
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram:
	. META-INF icons icons/obj16 icons/wizban
	src/ComBE/diagram/customCod...
Message-ID: <20120716013827.279CE2B800C@mx2.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 16 01:38:25 2012
New Revision: 25200
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25200&sc=1

Log:
Highlight nodes when selected.
Added generated resources to SVN.

Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/.classpath
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/.options
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/.project
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/META-INF/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/META-INF/MANIFEST.MF
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/build.properties
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/build.xml
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/icons/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/icons/incomingLinksNavigatorGroup.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/icons/linkSourceNavigatorGroup.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/icons/linkTargetNavigatorGroup.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/icons/linksNavigatorGroup.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/icons/obj16/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/icons/obj16/ComBEDiagramFile.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/icons/outgoingLinksNavigatorGroup.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/icons/wizban/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/icons/wizban/NewComBEWizard.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/messages.properties
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/plugin.properties
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/customCode/ComBESelectionEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AlternativeBranchChildrenCreateCommand.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AlternativeBranchChildrenReorientCommand.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AtomicSequenceChildCreateCommand.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AtomicSequenceChildReorientCommand.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/EmptyNode2CreateCommand.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/EmptyNode3CreateCommand.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/EmptyNodeCreateCommand.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/ParallelBranchChildrenCreateCommand.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/ParallelBranchChildrenReorientCommand.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/StandardNode2CreateCommand.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/StandardNode3CreateCommand.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/StandardNodeCreateCommand.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/AlternativeBranchEditHelper.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/AtomicSequenceEditHelper.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/ComBEBaseEditHelper.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/EmptyNodeEditHelper.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/ParallelBranchEditHelper.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/SpecificationEditHelper.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/StandardNodeEditHelper.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AlternativeBranchChildrenEditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AtomicSequenceChildEditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/ComBEEditPartFactory.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNode2EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNode3EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeEditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeLabel2EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeLabel3EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeLabelEditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeOperator2EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeOperator3EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeOperatorEditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/ParallelBranchChildrenEditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/SpecificationEditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeLabel2EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeLabel3EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeLabelEditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeOperator2EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeOperator3EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeOperatorEditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeTracibilitystatus2EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeTracibilitystatus3EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeTracibilitystatusEditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AlternativeBranchAlternativeBranchNodesCompartmentCanonicalEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AlternativeBranchAlternativeBranchNodesCompartmentItemSemanticEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AlternativeBranchCanonicalEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AlternativeBranchChildrenItemSemanticEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AlternativeBranchItemSemanticEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AtomicSequenceAtomicSequenceNodesCompartmentCanonicalEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AtomicSequenceAtomicSequenceNodesCompartmentItemSemanticEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AtomicSequenceCanonicalEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AtomicSequenceChildItemSemanticEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AtomicSequenceItemSemanticEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ComBEBaseItemSemanticEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ComBETextNonResizableEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ComBETextSelectionEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNode2CanonicalEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNode3CanonicalEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNodeCanonicalEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ParallelBranchCanonicalEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ParallelBranchChildrenItemSemanticEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ParallelBranchItemSemanticEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ParallelBranchParallelBranchNodesCompartmentCanonicalEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ParallelBranchParallelBranchNodesCompartmentItemSemanticEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/SpecificationCanonicalEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/SpecificationItemSemanticEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNode2CanonicalEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNode3CanonicalEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNodeCanonicalEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/expressions/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/expressions/ComBEAbstractExpression.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/expressions/ComBEOCLFactory.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBEAbstractNavigatorItem.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBEDomainNavigatorContentProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBEDomainNavigatorItem.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBEDomainNavigatorLabelProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorActionProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorContentProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorGroup.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorItem.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorLabelProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorLinkHelper.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorSorter.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/parsers/AbstractParser.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/parsers/MessageFormatParser.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBECreationWizard.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBECreationWizardPage.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramActionBarContributor.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramEditor.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramEditorPlugin.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramEditorUtil.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramUpdateCommand.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDocumentProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEInitDiagramFileAction.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBELinkDescriptor.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEMatchingStrategy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBENewDiagramFileWizard.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBENodeDescriptor.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEPaletteFactory.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEUriEditorInputTester.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEVisualIDRegistry.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/DeleteElementAction.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/DiagramEditorContextMenuProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/LoadResourceAction.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/Messages.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ModelElementSelectionPage.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/DiagramAppearancePreferencePage.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/DiagramConnectionsPreferencePage.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/DiagramGeneralPreferencePage.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/DiagramPreferenceInitializer.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/DiagramPrintingPreferencePage.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/DiagramRulersAndGridPreferencePage.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ComBEEditPartProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ComBEElementTypes.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ComBEIconProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ComBEModelingAssistantProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ComBEParserProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ComBEViewProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ElementInitializers.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/sheet/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/sheet/ComBEPropertySection.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/sheet/ComBESheetLabelProvider.java
Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/plugin.xml
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/customCode/CustomPainting.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AlternativeBranchCreateCommand.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AtomicSequenceCreateCommand.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/ParallelBranchCreateCommand.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AlternativeBranchAlternativeBranchNodesCompartmentEditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AlternativeBranchEditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AtomicSequenceAtomicSequenceNodesCompartmentEditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AtomicSequenceEditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/ParallelBranchEditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/ParallelBranchParallelBranchNodesCompartmentEditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNode2EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNode3EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeEditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel2EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel3EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel4EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel5EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel6EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel7EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel8EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel9EditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabelEditPart.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNode2ItemSemanticEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNode3ItemSemanticEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNodeItemSemanticEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNode2ItemSemanticEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNode3ItemSemanticEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNodeItemSemanticEditPolicy.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/parsers/StandardNodeLabelExpressionLabelParser.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramUpdater.java

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/.classpath
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/.classpath	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/.options
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/.options	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,7 @@
+# Tracing options for the org.behaviorengineering.combe.graphical.diagram plug-in
+
+# Common issues
+org.behaviorengineering.combe.graphical.diagram/debug=false
+
+# Visual IDs
+org.behaviorengineering.combe.graphical.diagram/debug/visualID=false

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/.project
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/.project	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>org.behaviorengineering.combe.graphical.diagram</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.pde.PluginNature</nature>
+	</natures>
+</projectDescription>

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/META-INF/MANIFEST.MF
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/META-INF/MANIFEST.MF	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,44 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: %pluginName
+Bundle-SymbolicName: org.behaviorengineering.combe.graphical.diagram; singleton:=true
+Bundle-Version: 1.0.0
+Bundle-ClassPath: .
+Bundle-Activator: ComBE.diagram.part.ComBEDiagramEditorPlugin
+Bundle-Vendor: %providerName
+Bundle-Localization: plugin
+Export-Package: ComBE.diagram.edit.parts,
+ ComBE.diagram.part,
+ ComBE.diagram.providers
+Require-Bundle: org.eclipse.core.runtime,
+ org.eclipse.core.resources,
+ org.eclipse.core.expressions,
+ org.eclipse.jface,
+ org.eclipse.ui.ide,
+ org.eclipse.ui.views,
+ org.eclipse.ui.navigator,
+ org.eclipse.ui.navigator.resources,
+ org.eclipse.emf.ecore,
+ org.eclipse.emf.ecore.xmi,
+ org.eclipse.emf.edit.ui,
+ org.eclipse.gmf.runtime.emf.core,
+ org.eclipse.gmf.runtime.emf.commands.core,
+ org.eclipse.gmf.runtime.emf.ui.properties,
+ org.eclipse.gmf.runtime.diagram.ui,
+ org.eclipse.gmf.runtime.diagram.ui.printing,
+ org.eclipse.gmf.runtime.diagram.ui.printing.render,
+ org.eclipse.gmf.runtime.diagram.ui.properties,
+ org.eclipse.gmf.runtime.diagram.ui.providers,
+ org.eclipse.gmf.runtime.diagram.ui.providers.ide,
+ org.eclipse.gmf.runtime.diagram.ui.render,
+ org.eclipse.gmf.runtime.diagram.ui.resources.editor,
+ org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide,
+ org.eclipse.draw2d;visibility:=reexport,
+ org.eclipse.gmf.runtime.draw2d.ui;visibility:=reexport,
+ org.behaviorengineering.combe.graphical;visibility:=reexport,
+ org.behaviorengineering.combe.graphical.edit;visibility:=reexport,
+ org.eclipse.ocl.ecore;visibility:=reexport,
+ org.eclipse.gef;visibility:=reexport,
+ org.strategoxt.imp.runtime;bundle-version="0.1.1"
+Bundle-ActivationPolicy: lazy
+Bundle-RequiredExecutionEnvironment: JavaSE-1.6

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/build.properties	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,10 @@
+bin.includes = .,\
+               icons/,\
+               META-INF/,\
+               plugin.xml,\
+               plugin.properties,\
+               messages.properties,\
+               .options
+jars.compile.order = .
+source.. = src/
+output.. = bin/

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/build.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/build.xml	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,60 @@
+<project name="GMFPluginGeneration" default="runGeneration">
+	<description>
+		You'll need to configure the Classpath in the ../launch/Generate GMF Diagram.launch to add
+		  org.eclipse.gmf.common,
+		  org.eclipse.gmf.codegen
+		as external JARs.
+    </description>
+
+	<path id="myclasspath">
+		<pathelement location="bin" />
+	</path>
+
+	<!-- set global properties for this build -->
+	<property file="ant/config.properties"/>
+	<property file="ant/commonGen.properties"/>
+
+	<property name="workspaceRoot" location="${basedir}/../" />
+	<property name="gmfgenProject" location="${basedir}" />
+	
+	<property name="modelsFolder" location="../${models.folder}"/>
+	<property name="tempFolder" location="${gmfgenProject}/temp/model"/>
+	
+	<property name="gmfmap_src" location="${modelsFolder}/${gmfmap}"/>
+	
+	<property name="gmfgen_src" location="${modelsFolder}/${gmfgen}"/>
+	<property name="gmfgen_trgt" location="${tempFolder}/${gmfgen}"/>
+	
+	<property name="copyrightTextFile" location="${modelsFolder}/${copyrightTextFileName}"/>
+	
+	
+	<echo> Base dir : ${basedir} </echo>
+	<echo> WS root dir : ${workspaceRoot} </echo>
+	<echo> Models folder : ${modelsFolder}</echo>
+	<echo> Temp Folder : ${tempFolder}</echo>
+	<echo> GMFgen source : ${gmfgen_src}</echo>
+	<echo> GMFgen target : ${gmfgen_trgt}</echo>
+	
+	<taskdef name="gmf.adjustgenmodel" classname="org.eclipse.sphinx.gmfgen.tasks.GMFGenModelAdjustTask">
+			<classpath refid="myclasspath" />
+	</taskdef>
+	
+	<taskdef name="gmf.generatediagramcode" classname="org.eclipse.sphinx.gmfgen.tasks.GenerateDiagramCodeTask">
+		<classpath refid="myclasspath" />
+	</taskdef>
+	
+	<target name="copy" description="Copy genModel to a temp dir">
+			<eclipse.refreshLocal resource="${gmfgenProject}"/>
+			<copy file="${gmfgen_src}" tofile="${gmfgen_trgt}" overwrite="true"/>
+	</target>
+	
+	<target name="adjustGenModel">
+			<gmf.adjustgenmodel gmfgenPath="${gmfgen_trgt}" copyrightTextFile="${copyrightTextFile}" dynamicTemplates="${dynamicTemplates}" templateDirectory="${templateDirectory}"/>
+	</target>
+	
+	<target name="execGMFGeneration">
+		<gmf.generatediagramcode gmfgenPath="${gmfgen_trgt}" ignoreLoadErrors="true" ignoreValidationErrors="true"/>
+	</target>
+	
+	<target name="runGeneration" depends="copy, adjustGenModel, execGMFGeneration"/>
+</project>
\ No newline at end of file

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/icons/incomingLinksNavigatorGroup.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/icons/linkSourceNavigatorGroup.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/icons/linkTargetNavigatorGroup.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/icons/linksNavigatorGroup.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/icons/obj16/ComBEDiagramFile.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/icons/outgoingLinksNavigatorGroup.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/icons/wizban/NewComBEWizard.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/messages.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/messages.properties	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,86 @@
+
+# TODO: manually put keys and values
+ComBECreationWizardTitle=New ComBE Diagram
+ComBECreationWizard_DiagramModelFilePageTitle=Create ComBE Diagram
+ComBECreationWizard_DiagramModelFilePageDescription=Select file that will contain diagram model.
+ComBECreationWizard_DomainModelFilePageTitle=Create ComBE Domain Model
+ComBECreationWizard_DomainModelFilePageDescription=Select file that will contain domain model.
+ComBECreationWizardOpenEditorError=Error opening diagram editor
+ComBECreationWizardCreationError=Creation Problems
+ComBECreationWizardPageExtensionError=File name should have {0} extension.
+ComBEDiagramEditorUtil_OpenModelResourceErrorDialogTitle=Error
+ComBEDiagramEditorUtil_OpenModelResourceErrorDialogMessage=Failed to load model file {0}
+ComBEDiagramEditorUtil_CreateDiagramProgressTask=Creating diagram and model files
+ComBEDiagramEditorUtil_CreateDiagramCommandLabel=Creating diagram and model
+ComBEDocumentProvider_isModifiable=Updating cache failed
+ComBEDocumentProvider_handleElementContentChanged=Failed to refresh hierarchy for changed resource
+ComBEDocumentProvider_IncorrectInputError={1}
+ComBEDocumentProvider_NoDiagramInResourceError=Diagram is not present in resource
+ComBEDocumentProvider_DiagramLoadingError=Error loading diagram
+ComBEDocumentProvider_UnsynchronizedFileSaveError=The file has been changed on the file system
+ComBEDocumentProvider_SaveDiagramTask=Saving diagram
+ComBEDocumentProvider_SaveNextResourceTask=Saving {0}
+ComBEDocumentProvider_SaveAsOperation=Saving {0} diagram as
+InitDiagramFile_ResourceErrorDialogTitle=Error
+InitDiagramFile_ResourceErrorDialogMessage=Model file loading failed
+InitDiagramFile_WizardTitle=Initialize new {0} diagram file
+InitDiagramFile_OpenModelFileDialogTitle=Select domain model
+ComBENewDiagramFileWizard_CreationPageName=Initialize new diagram file
+ComBENewDiagramFileWizard_CreationPageTitle=Diagram file
+ComBENewDiagramFileWizard_CreationPageDescription=Create new diagram based on {0} model content
+ComBENewDiagramFileWizard_RootSelectionPageName=Select diagram root element
+ComBENewDiagramFileWizard_RootSelectionPageTitle=Diagram root element
+ComBENewDiagramFileWizard_RootSelectionPageDescription=Select semantic model element to be depicted on diagram
+ComBENewDiagramFileWizard_RootSelectionPageSelectionTitle=Select diagram root element:
+ComBENewDiagramFileWizard_RootSelectionPageNoSelectionMessage=Diagram root element is not selected
+ComBENewDiagramFileWizard_RootSelectionPageInvalidSelectionMessage=Invalid diagram root element is selected
+ComBENewDiagramFileWizard_InitDiagramCommand=Initializing diagram contents
+ComBENewDiagramFileWizard_IncorrectRootError=Incorrect model object stored as a root resource object
+ComBEDiagramEditor_SavingDeletedFile=The original file "{0}" has been deleted.
+ComBEDiagramEditor_SaveAsErrorTitle=Problem During Save As...
+ComBEDiagramEditor_SaveAsErrorMessage=Save could not be completed. Target file is already open in another editor.
+ComBEDiagramEditor_SaveErrorTitle=Save Problems
+ComBEDiagramEditor_SaveErrorMessage=Could not save file.
+ComBEElementChooserDialog_SelectModelElementTitle=Select model element
+ModelElementSelectionPageMessage=Select model element:
+ValidateActionMessage=Validate
+Objects1Group_title=Objects
+Connections2Group_title=Connections
+Node1CreationTool_title=Node
+Node1CreationTool_desc=Create new Node
+AlternativeBranch2CreationTool_title=AlternativeBranch
+AlternativeBranch2CreationTool_desc=Create new AlternativeBranch
+ParallelBranch3CreationTool_title=ParallelBranch
+ParallelBranch3CreationTool_desc=Create new ParallelBranch
+EmptyNode4CreationTool_title=EmptyNode
+EmptyNode4CreationTool_desc=Create new Empty Node
+Connection1CreationTool_title=Connection
+Connection1CreationTool_desc=Connect behavior
+AtomicSequenceAtomicSequenceNodesCompartmentEditPart_title=AlternativeBranchNodesCompartment
+AlternativeBranchAlternativeBranchNodesCompartmentEditPart_title=ParallelBranchNodesCompartment
+ParallelBranchParallelBranchNodesCompartmentEditPart_title=AtomicSequenceNodesCompartment
+
+CommandName_OpenDiagram=Open Diagram
+NavigatorGroupName_Specification_1000_links=links
+NavigatorGroupName_AlternativeBranch_2001_incominglinks=incoming links
+NavigatorGroupName_AlternativeBranch_2001_outgoinglinks=outgoing links
+NavigatorGroupName_ParallelBranchChildren_4002_target=target
+NavigatorGroupName_ParallelBranchChildren_4002_source=source
+NavigatorGroupName_AtomicSequenceChild_4003_target=target
+NavigatorGroupName_AtomicSequenceChild_4003_source=source
+NavigatorGroupName_AtomicSequence_2003_incominglinks=incoming links
+NavigatorGroupName_AtomicSequence_2003_outgoinglinks=outgoing links
+NavigatorGroupName_AlternativeBranchChildren_4001_target=target
+NavigatorGroupName_AlternativeBranchChildren_4001_source=source
+NavigatorGroupName_ParallelBranch_2002_incominglinks=incoming links
+NavigatorGroupName_ParallelBranch_2002_outgoinglinks=outgoing links
+NavigatorActionProvider_OpenDiagramActionName=Open Diagram
+AbstractParser_UnexpectedValueType=Value of type {0} is expected
+AbstractParser_WrongStringConversion=String value does not convert to {0} value
+AbstractParser_UnknownLiteral=Unknown literal: {0}
+
+MessageFormatParser_InvalidInputError=Invalid input at {0}
+ComBEModelingAssistantProviderTitle=Select domain model element
+ComBEModelingAssistantProviderMessage=Available domain model elements:
+Objects1Group_desc=Objects
+Connections2Group_desc=Connections

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/plugin.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/plugin.properties	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,50 @@
+pluginName=ComBE Plugin
+providerName=UQ
+
+editorName=ComBE Diagram Editing
+context.description=ComBE Diagram Editing
+context.name=In ComBE Diagram Editor
+newWizardName=ComBE Diagram
+newWizardDesc=Creates ComBE diagram.
+
+initDiagramActionLabel=Initialize combe_diagram diagram file
+
+
+navigatorContentName=*.combe_diagram diagram contents
+domainNavigatorContentName=*.combe model contents
+update.diagram.name=Update ComBE diagram
+update.diagram.description=Perform ComBE diagram update
+
+
+# Property Sheet
+tab.appearance=Appearance
+tab.diagram=Rulers & Grid
+tab.domain=Core
+
+# Preferences
+prefpage.org.behaviorengineering.combe.graphical.diagram.general=ComBE Diagram
+prefpage.org.behaviorengineering.combe.graphical.diagram.appearance=Appearance
+prefpage.org.behaviorengineering.combe.graphical.diagram.connections=Connections
+prefpage.org.behaviorengineering.combe.graphical.diagram.printing=Printing
+prefpage.org.behaviorengineering.combe.graphical.diagram.rulersAndGrid=Rulers And Grid
+
+
+# Providers
+metatype.name.Specification_1000=Undefined
+metatype.name.AlternativeBranch_2001=AlternativeBranch
+metatype.name.ParallelBranch_2002=ParallelBranch
+metatype.name.AtomicSequence_2003=AtomicSequence
+metatype.name.StandardNode_3001=StandardNode
+metatype.name.EmptyNode_3002=EmptyNode
+metatype.name.StandardNode_3003=StandardNode
+metatype.name.EmptyNode_3004=EmptyNode
+metatype.name.StandardNode_3005=StandardNode
+metatype.name.EmptyNode_3006=EmptyNode
+metatype.name.AlternativeBranchChildren_4001=Undefined
+metatype.name.ParallelBranchChildren_4002=Undefined
+metatype.name.AtomicSequenceChild_4003=Undefined
+
+# Commands and menu actions
+cmdcategory.name=ComBE Editor Commands
+cmdcategory.desc=ComBE Editor Commands
+

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/plugin.xml
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/plugin.xml	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/plugin.xml	Mon Jul 16 01:38:25 2012	(r25200)
@@ -6,5 +6,603 @@
 		<layoutProvider class="org.eclipse.gmf.runtime.diagram.ui.providers.TopDownProvider">
 			<Priority name="High"></Priority>
 		</layoutProvider>
-	</extension> 
+	</extension><extension point="org.eclipse.team.core.fileTypes" id="repo-ftype">
+      <?gmfgen generated="true"?>
+      <fileTypes type="text" extension="combe_diagram"/>
+   </extension>
+
+<extension point="org.eclipse.emf.ecore.extension_parser" id="resource-factory">
+      <?gmfgen generated="true"?>
+      <parser
+         type="combe_diagram"
+         class="org.eclipse.gmf.runtime.emf.core.resources.GMFResourceFactory">
+      </parser>
+   </extension>
+
+<extension point="org.eclipse.ui.editors" id="gmf-editor">
+      <?gmfgen generated="true"?>
+      <editor
+         id="ComBE.diagram.part.ComBEDiagramEditorID"
+         name="%editorName"
+         icon="icons/obj16/ComBEDiagramFile.gif"
+         extensions="combe_diagram"
+         default="true"
+         class="ComBE.diagram.part.ComBEDiagramEditor"
+         matchingStrategy="ComBE.diagram.part.ComBEMatchingStrategy"
+         contributorClass="ComBE.diagram.part.ComBEDiagramActionBarContributor">
+      </editor>
+   </extension>
+
+<extension point="org.eclipse.ui.contexts" id="ui-context">
+      <?gmfgen generated="true"?>
+      <context
+         description="%context.description"
+         id="ComBE.diagram.ui.diagramContext"
+         name="%context.name"
+         parentId="org.eclipse.gmf.runtime.diagram.ui.diagramContext">
+      </context>
+   </extension>
+
+<extension point="org.eclipse.ui.newWizards" id="creation-wizard">
+      <?gmfgen generated="true"?>
+  	  <wizard
+  	     name="%newWizardName"
+  	     icon="icons/obj16/ComBEDiagramFile.gif"
+  	     category="org.eclipse.ui.Examples"
+  	     class="ComBE.diagram.part.ComBECreationWizard"
+  	     id="ComBE.diagram.part.ComBECreationWizardID">
+  	  	 <description>%newWizardDesc</description>  
+      </wizard>
+   </extension>
+
+<extension point="org.eclipse.ui.popupMenus" id="init-diagram-action">
+      <?gmfgen generated="true"?>
+      <objectContribution
+            id="org.behaviorengineering.combe.graphical.diagram.InitDiagram"
+            nameFilter="*.combe"
+            objectClass="org.eclipse.core.resources.IFile">
+         <action
+               label="%initDiagramActionLabel"
+               class="ComBE.diagram.part.ComBEInitDiagramFileAction"
+               menubarPath="additions"
+               enablesFor="1"
+               id="org.behaviorengineering.combe.graphical.diagram.InitDiagramAction">
+         </action>
+      </objectContribution>
+   </extension>
+
+<extension point="org.eclipse.gmf.runtime.common.ui.services.action.globalActionHandlerProviders" id="global-actions">
+      <?gmfgen generated="true"?>
+      <GlobalActionHandlerProvider
+         class="org.eclipse.gmf.runtime.diagram.ui.providers.DiagramGlobalActionHandlerProvider"
+         id="ComBEPresentation">
+         <Priority name="Lowest"/>
+         <ViewId id="ComBE.diagram.part.ComBEDiagramEditorID">
+            <ElementType class="org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart">
+               <GlobalActionId actionId="delete"/>
+            </ElementType>
+            <ElementType class="org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart">
+               <GlobalActionId actionId="save"/>
+            </ElementType>
+            <ElementType class="org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart">
+               <GlobalActionId actionId="save">
+               </GlobalActionId>
+            </ElementType>        
+         </ViewId>
+      </GlobalActionHandlerProvider>
+      <GlobalActionHandlerProvider
+         class="org.eclipse.gmf.runtime.diagram.ui.printing.render.providers.DiagramWithPrintGlobalActionHandlerProvider"
+         id="ComBEPresentationPrint">
+         <Priority name="Lowest"/>
+         <ViewId id="ComBE.diagram.part.ComBEDiagramEditorID">
+            <ElementType class="org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart">
+               <GlobalActionId actionId="print"/>
+            </ElementType>
+         </ViewId>
+      </GlobalActionHandlerProvider>
+      <GlobalActionHandlerProvider
+         class="org.eclipse.gmf.runtime.diagram.ui.providers.ide.providers.DiagramIDEGlobalActionHandlerProvider"
+         id="ComBEPresentationIDE">
+         <Priority name="Lowest"/>
+         <ViewId id="ComBE.diagram.part.ComBEDiagramEditorID">
+            <ElementType class="org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart">
+               <GlobalActionId actionId="bookmark"/>
+            </ElementType>
+         </ViewId>
+      </GlobalActionHandlerProvider>
+      <GlobalActionHandlerProvider
+            class="org.eclipse.gmf.runtime.diagram.ui.render.providers.DiagramUIRenderGlobalActionHandlerProvider"
+            id="ComBERender">
+         <Priority name="Lowest"/>
+         <ViewId id="ComBE.diagram.part.ComBEDiagramEditorID">
+            <ElementType class="org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart">
+               <GlobalActionId actionId="cut"/>
+               <GlobalActionId actionId="copy"/>
+               <GlobalActionId actionId="paste"/>
+            </ElementType>
+         </ViewId>
+      </GlobalActionHandlerProvider>
+   </extension>
+
+<extension point="org.eclipse.core.runtime.preferences" id="prefs">
+      <?gmfgen generated="true"?>
+      <initializer class="ComBE.diagram.preferences.DiagramPreferenceInitializer"/>
+   </extension>
+
+<extension point="org.eclipse.ui.preferencePages" id="prefpages">
+      <?gmfgen generated="true"?>
+      <page
+            id="org.behaviorengineering.combe.graphical.diagram.general"
+            name="%prefpage.org.behaviorengineering.combe.graphical.diagram.general"
+            class="ComBE.diagram.preferences.DiagramGeneralPreferencePage">
+      </page>
+      <page
+            id="org.behaviorengineering.combe.graphical.diagram.appearance"
+            name="%prefpage.org.behaviorengineering.combe.graphical.diagram.appearance"
+            category="org.behaviorengineering.combe.graphical.diagram.general"
+            class="ComBE.diagram.preferences.DiagramAppearancePreferencePage">
+      </page>
+      <page
+            id="org.behaviorengineering.combe.graphical.diagram.connections"
+            name="%prefpage.org.behaviorengineering.combe.graphical.diagram.connections"
+            category="org.behaviorengineering.combe.graphical.diagram.general"
+            class="ComBE.diagram.preferences.DiagramConnectionsPreferencePage">
+      </page>
+      <page
+            id="org.behaviorengineering.combe.graphical.diagram.printing"
+            name="%prefpage.org.behaviorengineering.combe.graphical.diagram.printing"
+            category="org.behaviorengineering.combe.graphical.diagram.general"
+            class="ComBE.diagram.preferences.DiagramPrintingPreferencePage">
+      </page>
+      <page
+            id="org.behaviorengineering.combe.graphical.diagram.rulersAndGrid"
+            name="%prefpage.org.behaviorengineering.combe.graphical.diagram.rulersAndGrid"
+            category="org.behaviorengineering.combe.graphical.diagram.general"
+            class="ComBE.diagram.preferences.DiagramRulersAndGridPreferencePage">
+      </page>
+   </extension>
+
+<extension point="org.eclipse.ui.views.properties.tabbed.propertyContributor" id="prop-contrib">
+      <?gmfgen generated="true"?>
+      <propertyContributor
+            contributorId="org.behaviorengineering.combe.graphical.diagram"
+            labelProvider="ComBE.diagram.sheet.ComBESheetLabelProvider">
+         <propertyCategory category="domain"/>
+         <propertyCategory category="visual"/>
+         <propertyCategory category="extra"/>
+      </propertyContributor>
+   </extension>
+
+<extension point="org.eclipse.ui.views.properties.tabbed.propertyTabs" id="proptabs">
+      <?gmfgen generated="true"?>   
+      <propertyTabs contributorId="org.behaviorengineering.combe.graphical.diagram">
+         <propertyTab
+             category="visual"
+             id="property.tab.AppearancePropertySection"
+             label="%tab.appearance"/>
+          <propertyTab
+             category="visual"
+             id="property.tab.DiagramPropertySection"
+             label="%tab.diagram"/>
+          <propertyTab
+             category="domain"
+             id="property.tab.domain"
+             label="%tab.domain"/>
+      </propertyTabs>
+   </extension>
+
+<extension point="org.eclipse.ui.views.properties.tabbed.propertySections" id="propsections">
+      <?gmfgen generated="true"?>   
+      <propertySections contributorId="org.behaviorengineering.combe.graphical.diagram">
+         <propertySection id="property.section.ConnectorAppearancePropertySection" 
+            filter="org.eclipse.gmf.runtime.diagram.ui.properties.filters.ConnectionEditPartPropertySectionFilter" 
+            class="org.eclipse.gmf.runtime.diagram.ui.properties.sections.appearance.ConnectionAppearancePropertySection" 
+            tab="property.tab.AppearancePropertySection">
+         </propertySection>
+         <propertySection id="property.section.ShapeColorAndFontPropertySection" 
+            filter="org.eclipse.gmf.runtime.diagram.ui.properties.filters.ShapeEditPartPropertySectionFilter" 
+            class="org.eclipse.gmf.runtime.diagram.ui.properties.sections.appearance.ShapeColorsAndFontsPropertySection" 
+            tab="property.tab.AppearancePropertySection">
+         </propertySection> 
+         <propertySection id="property.section.DiagramColorsAndFontsPropertySection" 
+            filter="org.eclipse.gmf.runtime.diagram.ui.properties.filters.DiagramEditPartPropertySectionFilter" 
+            class="org.eclipse.gmf.runtime.diagram.ui.properties.sections.appearance.DiagramColorsAndFontsPropertySection" 
+            tab="property.tab.AppearancePropertySection">
+         </propertySection>     
+         <propertySection id="property.section.RulerGridPropertySection" 
+            filter="org.eclipse.gmf.runtime.diagram.ui.properties.filters.DiagramEditPartPropertySectionFilter" 
+            class="org.eclipse.gmf.runtime.diagram.ui.properties.sections.grid.RulerGridPropertySection" 
+            tab="property.tab.DiagramPropertySection">
+         </propertySection>     
+         <propertySection
+            id="property.section.domain" 
+            tab="property.tab.domain"
+            class="ComBE.diagram.sheet.ComBEPropertySection">
+            <input type="org.eclipse.gmf.runtime.notation.View"/>
+            <input type="org.eclipse.gef.EditPart"/>
+            <input type="ComBE.diagram.navigator.ComBEAbstractNavigatorItem"/>
+         </propertySection>
+      </propertySections>
+   </extension>
+
+<extension point="org.eclipse.gmf.runtime.diagram.core.viewProviders" id="view-provider">
+      <?gmfgen generated="true"?>
+      <viewProvider class="ComBE.diagram.providers.ComBEViewProvider">
+         <Priority name="Lowest"/>
+         <context viewClass="org.eclipse.gmf.runtime.notation.Diagram" semanticHints="ComBE"/>
+         <context viewClass="org.eclipse.gmf.runtime.notation.Node" semanticHints="2001,2002,2003,3001,3002,3003,3004,3005,3006"/>
+         <context viewClass="org.eclipse.gmf.runtime.notation.Edge" semanticHints="4001,4002,4003"/>
+      </viewProvider>
+   </extension>
+
+<extension point="org.eclipse.gmf.runtime.diagram.ui.editpartProviders" id="ep-provider">
+      <?gmfgen generated="true"?>
+      <editpartProvider class="ComBE.diagram.providers.ComBEEditPartProvider">
+         <Priority name="Lowest"/>
+         <object class="org.eclipse.gmf.runtime.notation.Diagram" id="generated-diagram">
+            <method name="getType()" value="ComBE"/>
+         </object>
+         <object class="org.eclipse.gmf.runtime.notation.Node" id="generated-nodes">
+            <method name="getType()" value="2001,2002,2003,3001,3002,3003,3004,3005,3006"/>
+         </object>
+         <object class="org.eclipse.gmf.runtime.notation.Edge" id="generated-links">
+            <method name="getType()" value="4001,4002,4003"/>
+         </object>
+         <object class="org.eclipse.gmf.runtime.notation.Node" id="generated-labels">
+            <method name="getType()" value="5001,5002,5003,5004,5005,5006,5021,5022,5007,5008,5009,5010,5011,5012,5023,5024,5013,5014,5015,5016,5017,5018,5019,5020"/>
+         </object>
+         <object class="org.eclipse.gmf.runtime.notation.Node" id="generated-compartments">
+            <method name="getType()" value="7001,7002,7003"/>
+         </object>
+         <context views="generated-diagram,generated-nodes,generated-links,generated-labels,generated-compartments"/>
+      </editpartProvider>
+   </extension>
+
+<extension point="org.eclipse.gmf.runtime.emf.ui.modelingAssistantProviders" id="modelassist-provider">
+      <?gmfgen generated="true"?>
+      <modelingAssistantProvider class="ComBE.diagram.providers.ComBEModelingAssistantProvider">
+         <Priority name="Lowest"/>
+         <object class="ComBE.diagram.edit.parts.SpecificationEditPart" id="Specification_1000"/>
+         <object class="ComBE.diagram.edit.parts.AlternativeBranchEditPart" id="AlternativeBranch_2001"/>
+         <object class="ComBE.diagram.edit.parts.ParallelBranchEditPart" id="ParallelBranch_2002"/>
+         <object class="ComBE.diagram.edit.parts.AtomicSequenceEditPart" id="AtomicSequence_2003"/>
+         <context elements="Specification_1000,AlternativeBranch_2001,ParallelBranch_2002,AtomicSequence_2003"/>
+      </modelingAssistantProvider>
+   </extension>
+
+<extension point="org.eclipse.gmf.runtime.common.ui.services.iconProviders" id="icon-provider">
+      <?gmfgen generated="true"?>
+      <IconProvider class="ComBE.diagram.providers.ComBEIconProvider">
+         <Priority name="Low"/>
+      </IconProvider>
+   </extension>
+
+<extension point="org.eclipse.gmf.runtime.common.ui.services.parserProviders" id="parser-provider">
+      <?gmfgen generated="true"?>
+      <ParserProvider class="ComBE.diagram.providers.ComBEParserProvider">
+         <Priority name="Lowest"/>
+      </ParserProvider>
+   </extension>
+
+<extension point="org.eclipse.gmf.runtime.emf.type.core.elementTypes" id="element-types">
+      <?gmfgen generated="true"?>
+      <metamodel nsURI="ComBE">
+         <metamodelType
+               id="org.behaviorengineering.combe.graphical.diagram.Specification_1000"
+               name="%metatype.name.Specification_1000"
+               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType"
+               eclass="Specification"
+               edithelper="ComBE.diagram.edit.helpers.SpecificationEditHelper">
+            <param name="semanticHint" value="1000"/>
+         </metamodelType>
+      </metamodel>
+      <metamodel nsURI="ComBE">
+         <metamodelType
+               id="org.behaviorengineering.combe.graphical.diagram.AlternativeBranch_2001"
+               name="%metatype.name.AlternativeBranch_2001"
+               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType"
+               eclass="AlternativeBranch"
+               edithelper="ComBE.diagram.edit.helpers.AlternativeBranchEditHelper">
+            <param name="semanticHint" value="2001"/>
+         </metamodelType>
+      </metamodel>
+      <metamodel nsURI="ComBE">
+         <metamodelType
+               id="org.behaviorengineering.combe.graphical.diagram.ParallelBranch_2002"
+               name="%metatype.name.ParallelBranch_2002"
+               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType"
+               eclass="ParallelBranch"
+               edithelper="ComBE.diagram.edit.helpers.ParallelBranchEditHelper">
+            <param name="semanticHint" value="2002"/>
+         </metamodelType>
+      </metamodel>
+      <metamodel nsURI="ComBE">
+         <metamodelType
+               id="org.behaviorengineering.combe.graphical.diagram.AtomicSequence_2003"
+               name="%metatype.name.AtomicSequence_2003"
+               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType"
+               eclass="AtomicSequence"
+               edithelper="ComBE.diagram.edit.helpers.AtomicSequenceEditHelper">
+            <param name="semanticHint" value="2003"/>
+         </metamodelType>
+      </metamodel>
+      <metamodel nsURI="ComBE">
+         <metamodelType
+               id="org.behaviorengineering.combe.graphical.diagram.StandardNode_3001"
+               name="%metatype.name.StandardNode_3001"
+               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType"
+               eclass="StandardNode"
+               edithelper="ComBE.diagram.edit.helpers.StandardNodeEditHelper">
+            <param name="semanticHint" value="3001"/>
+         </metamodelType>
+      </metamodel>
+      <metamodel nsURI="ComBE">
+         <metamodelType
+               id="org.behaviorengineering.combe.graphical.diagram.EmptyNode_3002"
+               name="%metatype.name.EmptyNode_3002"
+               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType"
+               eclass="EmptyNode"
+               edithelper="ComBE.diagram.edit.helpers.EmptyNodeEditHelper">
+            <param name="semanticHint" value="3002"/>
+         </metamodelType>
+      </metamodel>
+      <metamodel nsURI="ComBE">
+         <specializationType
+               id="org.behaviorengineering.combe.graphical.diagram.StandardNode_3003"
+               name="%metatype.name.StandardNode_3003"
+               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType">
+            <specializes id="org.behaviorengineering.combe.graphical.diagram.StandardNode_3001"/>
+            <param name="semanticHint" value="3003"/>
+         </specializationType>
+      </metamodel>
+      <metamodel nsURI="ComBE">
+         <specializationType
+               id="org.behaviorengineering.combe.graphical.diagram.EmptyNode_3004"
+               name="%metatype.name.EmptyNode_3004"
+               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType">
+            <specializes id="org.behaviorengineering.combe.graphical.diagram.EmptyNode_3002"/>
+            <param name="semanticHint" value="3004"/>
+         </specializationType>
+      </metamodel>
+      <metamodel nsURI="ComBE">
+         <specializationType
+               id="org.behaviorengineering.combe.graphical.diagram.StandardNode_3005"
+               name="%metatype.name.StandardNode_3005"
+               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType">
+            <specializes id="org.behaviorengineering.combe.graphical.diagram.StandardNode_3001"/>
+            <param name="semanticHint" value="3005"/>
+         </specializationType>
+      </metamodel>
+      <metamodel nsURI="ComBE">
+         <specializationType
+               id="org.behaviorengineering.combe.graphical.diagram.EmptyNode_3006"
+               name="%metatype.name.EmptyNode_3006"
+               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType">
+            <specializes id="org.behaviorengineering.combe.graphical.diagram.EmptyNode_3002"/>
+            <param name="semanticHint" value="3006"/>
+         </specializationType>
+      </metamodel>
+      <metamodel nsURI="ComBE">
+         <specializationType
+               id="org.behaviorengineering.combe.graphical.diagram.AlternativeBranchChildren_4001"
+               name="%metatype.name.AlternativeBranchChildren_4001"
+               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType">
+            <specializes id="org.eclipse.gmf.runtime.emf.type.core.null"/>
+            <param name="semanticHint" value="4001"/>
+         </specializationType>
+      </metamodel>
+      <metamodel nsURI="ComBE">
+         <specializationType
+               id="org.behaviorengineering.combe.graphical.diagram.ParallelBranchChildren_4002"
+               name="%metatype.name.ParallelBranchChildren_4002"
+               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType">
+            <specializes id="org.eclipse.gmf.runtime.emf.type.core.null"/>
+            <param name="semanticHint" value="4002"/>
+         </specializationType>
+      </metamodel>
+      <metamodel nsURI="ComBE">
+         <specializationType
+               id="org.behaviorengineering.combe.graphical.diagram.AtomicSequenceChild_4003"
+               name="%metatype.name.AtomicSequenceChild_4003"
+               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType">
+            <specializes id="org.eclipse.gmf.runtime.emf.type.core.null"/>
+            <param name="semanticHint" value="4003"/>
+         </specializationType>
+      </metamodel>
+   </extension>
+
+<extension point="org.eclipse.gmf.runtime.emf.type.core.elementTypeBindings" id="element-types-bindings">
+      <?gmfgen generated="true"?>
+      <clientContext id="org.behaviorengineering.combe.graphical.diagram.TypeContext">
+         <enablement>
+            <test
+               property="org.eclipse.gmf.runtime.emf.core.editingDomain"
+               value="org.behaviorengineering.combe.graphical.diagram.EditingDomain"/>
+         </enablement>
+      </clientContext> 
+      <binding context="org.behaviorengineering.combe.graphical.diagram.TypeContext">
+         <elementType ref="org.behaviorengineering.combe.graphical.diagram.Specification_1000"/>
+         <elementType ref="org.behaviorengineering.combe.graphical.diagram.AlternativeBranch_2001"/>
+         <elementType ref="org.behaviorengineering.combe.graphical.diagram.ParallelBranch_2002"/>
+         <elementType ref="org.behaviorengineering.combe.graphical.diagram.AtomicSequence_2003"/>
+         <elementType ref="org.behaviorengineering.combe.graphical.diagram.StandardNode_3001"/>
+         <elementType ref="org.behaviorengineering.combe.graphical.diagram.EmptyNode_3002"/>
+         <elementType ref="org.behaviorengineering.combe.graphical.diagram.StandardNode_3003"/>
+         <elementType ref="org.behaviorengineering.combe.graphical.diagram.EmptyNode_3004"/>
+         <elementType ref="org.behaviorengineering.combe.graphical.diagram.StandardNode_3005"/>
+         <elementType ref="org.behaviorengineering.combe.graphical.diagram.EmptyNode_3006"/>
+         <elementType ref="org.behaviorengineering.combe.graphical.diagram.AlternativeBranchChildren_4001"/>
+         <elementType ref="org.behaviorengineering.combe.graphical.diagram.ParallelBranchChildren_4002"/>
+         <elementType ref="org.behaviorengineering.combe.graphical.diagram.AtomicSequenceChild_4003"/>
+         <advice ref="org.eclipse.gmf.runtime.diagram.core.advice.notationDepdendents"/>
+      </binding>
+   </extension>
+
+<extension point="org.eclipse.core.expressions.propertyTesters" id="navigator-proptest.isURIEditorInput">
+      <?gmfgen generated="true"?>
+       <propertyTester
+           id="org.behaviorengineering.combe.graphical.diagram.URIEditorInputPropertyTester"
+           type="org.eclipse.emf.common.ui.URIEditorInput"
+           namespace="org.behaviorengineering.combe.graphical.diagram"
+           properties="isURIEditorInput"
+           class="ComBE.diagram.part.ComBEUriEditorInputTester">
+       </propertyTester>
+   </extension>
+
+<extension point="org.eclipse.ui.navigator.viewer" id="navigator-viewbinding">
+      <?gmfgen generated="true"?>
+      <viewerContentBinding viewerId="org.eclipse.ui.navigator.ProjectExplorer">
+         <includes>
+            <contentExtension pattern="org.behaviorengineering.combe.graphical.diagram.resourceContent"/>
+			<contentExtension pattern="org.behaviorengineering.combe.graphical.diagram.domainResourceContent"/>
+            <contentExtension pattern="org.behaviorengineering.combe.graphical.diagram.navigatorLinkHelper"/>
+         </includes>
+      </viewerContentBinding>
+      <viewerActionBinding viewerId="org.eclipse.ui.navigator.ProjectExplorer">
+         <includes>
+            <actionExtension pattern="org.behaviorengineering.combe.graphical.diagram.navigatorActionProvider"/>
+         </includes>
+      </viewerActionBinding>
+   </extension>
+
+<extension point="org.eclipse.ui.navigator.navigatorContent" id="navigator-content">
+      <?gmfgen generated="true"?>
+      <navigatorContent
+            id="org.behaviorengineering.combe.graphical.diagram.resourceContent" 
+            name="%navigatorContentName" 
+            priority="normal" 
+            contentProvider="ComBE.diagram.navigator.ComBENavigatorContentProvider" 
+            labelProvider="ComBE.diagram.navigator.ComBENavigatorLabelProvider"
+            icon="icons/obj16/ComBEDiagramFile.gif"
+            activeByDefault="true">
+         <triggerPoints>
+            <or>
+	           <and>
+    	          <instanceof value="org.eclipse.core.resources.IFile"/>
+        	      <test property="org.eclipse.core.resources.extension" value="combe_diagram"/>
+               </and>
+               <instanceof value="ComBE.diagram.navigator.ComBEAbstractNavigatorItem"/>
+            </or>
+         </triggerPoints>
+         <possibleChildren>
+            <or>
+         	   <instanceof value="ComBE.diagram.navigator.ComBEAbstractNavigatorItem"/>
+            </or>
+         </possibleChildren>
+         <commonSorter 
+               id="org.behaviorengineering.combe.graphical.diagram.navigatorSorter" 
+               class="ComBE.diagram.navigator.ComBENavigatorSorter">
+            <parentExpression>
+               <or>
+	              <and>
+    	             <instanceof value="org.eclipse.core.resources.IFile"/>
+        	         <test property="org.eclipse.core.resources.extension" value="combe_diagram"/>
+                  </and>
+                  <instanceof value="ComBE.diagram.navigator.ComBEAbstractNavigatorItem"/>
+               </or>
+            </parentExpression>
+         </commonSorter>
+      </navigatorContent>
+      <navigatorContent
+            id="org.behaviorengineering.combe.graphical.diagram.domainResourceContent" 
+            name="%domainNavigatorContentName" 
+            priority="normal" 
+            contentProvider="ComBE.diagram.navigator.ComBEDomainNavigatorContentProvider" 
+            labelProvider="ComBE.diagram.navigator.ComBEDomainNavigatorLabelProvider"
+            icon="icons/obj16/ComBEDiagramFile.gif"
+            activeByDefault="true">
+         <triggerPoints>
+            <or>
+	           <and>
+    	          <instanceof value="org.eclipse.core.resources.IFile"/>
+        	      <test property="org.eclipse.core.resources.extension" value="combe"/>
+               </and>
+               <instanceof value="ComBE.diagram.navigator.ComBEDomainNavigatorItem"/>
+            </or>
+         </triggerPoints>
+         <possibleChildren>
+            <instanceof value="ComBE.diagram.navigator.ComBEDomainNavigatorItem"/>
+         </possibleChildren>
+      </navigatorContent>
+      <actionProvider
+            id="org.behaviorengineering.combe.graphical.diagram.navigatorActionProvider"
+            class="ComBE.diagram.navigator.ComBENavigatorActionProvider">
+         <enablement>
+            <or>
+               <instanceof value="ComBE.diagram.navigator.ComBEAbstractNavigatorItem"/>
+            </or>
+         </enablement>
+      </actionProvider>
+   </extension>
+
+<extension point="org.eclipse.ui.navigator.linkHelper" id="navigator-linkhelper">
+      <?gmfgen generated="true"?>
+      <linkHelper
+            id="org.behaviorengineering.combe.graphical.diagram.navigatorLinkHelper"
+            class="ComBE.diagram.navigator.ComBENavigatorLinkHelper">
+         <editorInputEnablement>
+            <and>
+               <instanceof value="org.eclipse.emf.common.ui.URIEditorInput"/>
+               <test property="org.behaviorengineering.combe.graphical.diagram.isURIEditorInput"/>
+            </and>
+         </editorInputEnablement>
+         <selectionEnablement>
+            <instanceof value="ComBE.diagram.navigator.ComBEAbstractNavigatorItem"/>
+         </selectionEnablement>
+      </linkHelper>
+   </extension>
+
+<extension point="org.eclipse.ui.commands" id="update-cmd">
+      <?gmfgen generated="true"?>
+      <command
+         categoryId="org.eclipse.ui.category.edit"
+         defaultHandler="ComBE.diagram.part.ComBEDiagramUpdateCommand"
+         description="%update.diagram.description"
+         id="ComBE.diagram.updateDiagram"
+         name="%update.diagram.name"/>
+   </extension>
+
+<extension point="org.eclipse.ui.bindings" id="update-cmd-binding">
+      <?gmfgen generated="true"?>
+      <key 
+         commandId="ComBE.diagram.updateDiagram"
+         contextId="ComBE.diagram.ui.diagramContext"
+         schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
+         sequence="F5"/>
+   </extension>
+
+<extension point="org.eclipse.ui.menus" id="context-menus">
+      <?gmfgen generated="true"?>
+      <!-- menuContribution locationURI="menu:org.eclipse.ui.main.menu?after=">
+      </menuContribution>
+      <menuContribution locationURI="toolbar:org.eclipse.ui.main.toolbar?after=">
+      </menuContribution -->
+      <menuContribution locationURI="popup:org.eclipse.gmf.runtime.diagram.ui.DiagramEditorContextMenu">
+         <command commandId="org.behaviorengineering.combe.graphical.diagram.LoadResourceAction">
+            <visibleWhen>
+               <and>
+                  <with variable="activePartId"><equals value="ComBE.diagram.part.ComBEDiagramEditorID"/></with>
+                  <with variable="selection"><iterate ifEmpty="false"> 
+                     <instanceof value="ComBE.diagram.edit.parts.SpecificationEditPart"/>
+                  </iterate></with>
+               </and>
+            </visibleWhen>
+         </command>
+      </menuContribution>
+   </extension>
+
+<extension point="org.eclipse.ui.commands" id="menu-commands">
+      <?gmfgen generated="true"?>
+      <category id="ComBE.diagram.part.ComBEDiagramEditorID" name="%cmdcategory.name" description="%cmdcategory.desc"/>
+      <command id="org.behaviorengineering.combe.graphical.diagram.LoadResourceAction"
+         name="Load Resource"
+         categoryId="ComBE.diagram.part.ComBEDiagramEditorID"
+         defaultHandler="ComBE.diagram.part.LoadResourceAction"/>
+   </extension>
+
+<extension point="org.eclipse.ui.handlers" id="menu-handlers">
+      <?gmfgen generated="true"?>
+   </extension>
+
+ 
 </plugin>

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/customCode/ComBESelectionEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/customCode/ComBESelectionEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,19 @@
+package ComBE.diagram.customCode;
+
+import org.eclipse.draw2d.Figure;
+import org.eclipse.gef.editpolicies.SelectionEditPolicy;
+
+public class ComBESelectionEditPolicy extends SelectionEditPolicy {
+	
+	@Override
+	protected void hideSelection() {
+		Figure figure = (Figure) getHostFigure().getChildren().get(0);
+		figure.handleFocusLost(null);		
+	}
+
+	@Override
+	protected void showSelection() {
+		Figure figure = (Figure) getHostFigure().getChildren().get(0);
+		figure.handleFocusGained(null);
+	}
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/customCode/CustomPainting.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/customCode/CustomPainting.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/customCode/CustomPainting.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -15,19 +15,19 @@
 	 * Add symbols to BehaviorLabels, depending on the BehaviorType enumeration.
 	 * 
 	 * This is a bit of a hack and this functionality should actually be added to gmfmap (as label expression).
-	 * It should be possible to define this in OCL, but the method 'oclContainer()' is not yet supported which makes it hard.
+	 * It should be possible to define this in OCL, but the method 'oclContainer()' (which is needed) is not yet supported which makes it hard.
 	 * That's why I put it here.
 	 */
 	public static void setBehaviorLabel(WrappingLabel label, StandardNode node) {
 		if (node.getBehavior() == null) {
 			return;
 		}
-		
+
 		BehaviorSeq behaviorSeq = (BehaviorSeq) node.getBehavior().eContainer();
-		
+
 		String prefix = "";
 		String suffix = "";
-		
+
 		switch (behaviorSeq.getBehaviortype().getValue()) {
 		case BehaviorType.ASSERTION_VALUE:
 			prefix = "!";
@@ -68,41 +68,81 @@
 		default:
 			break;
 		}
-		
-		if (! (label.getText().startsWith(prefix) && label.getText().endsWith(suffix))) {
+
+		if (!(label.getText().startsWith(prefix) && label.getText().endsWith(suffix))) {
 			label.setText(prefix + "  " + label.getText() + "  " + suffix);
 		}
 	}
-		
+
 	/**
 	 * Change color of Nodes, depending on the TracibilityStatus enumeration.
 	 * 
 	 * Couldn't find a way to model this in gmfgraph. This may not be the nicest solution.
+	 * @param hasFocus 
 	 */
-	public static void setNodeColor(Figure figure, StandardNode node) {
-		Color color = null;
-		
+	public static void setNodeColor(Figure figure, StandardNode node, boolean hasFocus) {
+		int red = 179;
+		int green = 211;
+		int blue = 69;
+
 		switch (node.getTracibilitystatus().getValue()) {
 		case TracibilityStatus.DELETED_VALUE:
-			color = new Color(null, 221, 221, 221);
+			red = 221;
+			green = 221;
+			blue = 221;
 			break;
 		case TracibilityStatus.IMPLIED_VALUE:
-			color = new Color(null, 251, 245, 173);
+			red = 251;
+			green = 245;
+			blue = 173;
 			break;
 		case TracibilityStatus.MISSING_VALUE:
-			color = new Color(null, 247, 168, 170);
+			red = 247;
+			green = 168;
+			blue = 170;
 			break;
 		case TracibilityStatus.REFINEMENT_VALUE:
-			color = new Color(null, 255, 255, 255);
+			red = 255;
+			green = 255;
+			blue = 255;
 			break;
 		case TracibilityStatus.UPDATED_VALUE:
-			color = new Color(null, 69, 179, 211);
+			red = 69;
+			green = 179;
+			blue = 211;
 			break;
 		default:
-			color = new Color(null, 179, 211, 69);
 			break;
 		}
-		
-		figure.setBackgroundColor(color);
+
+		if (hasFocus) {
+			final int darkest = Math.min(red, Math.min(green, blue));
+			red = brighten(red, darkest);
+			green = brighten(green, darkest);
+			blue = brighten(blue, darkest);
+		}
+
+		figure.setBackgroundColor(new Color(null, red, green, blue));
+	}
+
+
+	private final static int colorDiff = 40;
+	
+	private static int brighten(int color, int darkest) {
+		if (255-darkest < colorDiff) {
+			if (color + darkest/2 <= 255) {
+				return color + darkest/2;
+			}
+			else {
+				return 255;
+			}
+		}
+		else if (color + colorDiff <= 255) {
+			return color + colorDiff;
+		}
+		else {
+			return 255;
+		}
 	}
+
 }

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AlternativeBranchChildrenCreateCommand.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AlternativeBranchChildrenCreateCommand.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,90 @@
+package ComBE.diagram.edit.commands;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest;
+
+/**
+ * @generated
+ */
+public class AlternativeBranchChildrenCreateCommand extends EditElementCommand {
+
+	/**
+	* @generated
+	*/
+	private final EObject source;
+
+	/**
+	* @generated
+	*/
+	private final EObject target;
+
+	/**
+	* @generated
+	*/
+	public AlternativeBranchChildrenCreateCommand(CreateRelationshipRequest request, EObject source, EObject target) {
+		super(request.getLabel(), null, request);
+		this.source = source;
+		this.target = target;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean canExecute() {
+		if (source == null && target == null) {
+			return false;
+		}
+		if (source != null && false == source instanceof ComBE.AlternativeBranch) {
+			return false;
+		}
+		if (target != null && false == target instanceof ComBE.BehaviorTree) {
+			return false;
+		}
+		if (getSource() == null) {
+			return true; // link creation is in progress; source is not defined yet
+		}
+		// target may be null here but it's possible to check constraint
+		return ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy.getLinkConstraints().canCreateAlternativeBranchChildren_4001(getSource(), getTarget());
+	}
+
+	/**
+	* @generated
+	*/
+	protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		if (!canExecute()) {
+			throw new ExecutionException("Invalid arguments in create link command"); //$NON-NLS-1$
+		}
+
+		if (getSource() != null && getTarget() != null) {
+			getSource().getChildren().add(getTarget());
+		}
+		return CommandResult.newOKCommandResult();
+
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setElementToEdit(EObject element) {
+		throw new UnsupportedOperationException();
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBE.AlternativeBranch getSource() {
+		return (ComBE.AlternativeBranch) source;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBE.BehaviorTree getTarget() {
+		return (ComBE.BehaviorTree) target;
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AlternativeBranchChildrenReorientCommand.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AlternativeBranchChildrenReorientCommand.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,145 @@
+package ComBE.diagram.edit.commands;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ReorientReferenceRelationshipRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest;
+
+/**
+ * @generated
+ */
+public class AlternativeBranchChildrenReorientCommand extends EditElementCommand {
+
+	/**
+	* @generated
+	*/
+	private final int reorientDirection;
+
+	/**
+	* @generated
+	*/
+	private final EObject referenceOwner;
+
+	/**
+	* @generated
+	*/
+	private final EObject oldEnd;
+
+	/**
+	* @generated
+	*/
+	private final EObject newEnd;
+
+	/**
+	* @generated
+	*/
+	public AlternativeBranchChildrenReorientCommand(ReorientReferenceRelationshipRequest request) {
+		super(request.getLabel(), null, request);
+		reorientDirection = request.getDirection();
+		referenceOwner = request.getReferenceOwner();
+		oldEnd = request.getOldRelationshipEnd();
+		newEnd = request.getNewRelationshipEnd();
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean canExecute() {
+		if (false == referenceOwner instanceof ComBE.AlternativeBranch) {
+			return false;
+		}
+		if (reorientDirection == ReorientRelationshipRequest.REORIENT_SOURCE) {
+			return canReorientSource();
+		}
+		if (reorientDirection == ReorientRelationshipRequest.REORIENT_TARGET) {
+			return canReorientTarget();
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean canReorientSource() {
+		if (!(oldEnd instanceof ComBE.BehaviorTree && newEnd instanceof ComBE.AlternativeBranch)) {
+			return false;
+		}
+		return ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy.getLinkConstraints().canExistAlternativeBranchChildren_4001(getNewSource(), getOldTarget());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean canReorientTarget() {
+		if (!(oldEnd instanceof ComBE.BehaviorTree && newEnd instanceof ComBE.BehaviorTree)) {
+			return false;
+		}
+		return ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy.getLinkConstraints().canExistAlternativeBranchChildren_4001(getOldSource(), getNewTarget());
+	}
+
+	/**
+	* @generated
+	*/
+	protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		if (!canExecute()) {
+			throw new ExecutionException("Invalid arguments in reorient link command"); //$NON-NLS-1$
+		}
+		if (reorientDirection == ReorientRelationshipRequest.REORIENT_SOURCE) {
+			return reorientSource();
+		}
+		if (reorientDirection == ReorientRelationshipRequest.REORIENT_TARGET) {
+			return reorientTarget();
+		}
+		throw new IllegalStateException();
+	}
+
+	/**
+	* @generated
+	*/
+	protected CommandResult reorientSource() throws ExecutionException {
+		getOldSource().getChildren().remove(getOldTarget());
+		getNewSource().getChildren().add(getOldTarget());
+		return CommandResult.newOKCommandResult(referenceOwner);
+	}
+
+	/**
+	* @generated
+	*/
+	protected CommandResult reorientTarget() throws ExecutionException {
+		getOldSource().getChildren().remove(getOldTarget());
+		getOldSource().getChildren().add(getNewTarget());
+		return CommandResult.newOKCommandResult(referenceOwner);
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBE.AlternativeBranch getOldSource() {
+		return (ComBE.AlternativeBranch) referenceOwner;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBE.AlternativeBranch getNewSource() {
+		return (ComBE.AlternativeBranch) newEnd;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBE.BehaviorTree getOldTarget() {
+		return (ComBE.BehaviorTree) oldEnd;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBE.BehaviorTree getNewTarget() {
+		return (ComBE.BehaviorTree) newEnd;
+	}
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AlternativeBranchCreateCommand.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AlternativeBranchCreateCommand.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AlternativeBranchCreateCommand.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -6,10 +6,14 @@
 import org.eclipse.emf.ecore.EObject;
 import org.eclipse.emf.ecore.resource.Resource;
 import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.common.core.command.ICommand;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
 import org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ConfigureRequest;
 import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
 import org.eclipse.gmf.runtime.emf.type.core.requests.IEditCommandRequest;
 
+import org.eclipse.gmf.runtime.notation.View;
 import ComBE.AlternativeBranch;
 
 /**
@@ -18,6 +22,32 @@
 public class AlternativeBranchCreateCommand extends EditElementCommand {
 
 	/**
+	* @generated
+	*/
+	public AlternativeBranchCreateCommand(CreateElementRequest req) {
+		super(req.getLabel(), null, req);
+	}
+
+	/**
+	* FIXME: replace with setElementToEdit()
+	* @generated
+	*/
+	protected EObject getElementToEdit() {
+		EObject container = ((CreateElementRequest) getRequest()).getContainer();
+		if (container instanceof View) {
+			container = ((View) container).getElement();
+		}
+		return container;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean canExecute() {
+		return true;
+	}
+
+	/**
 	* @generated NOT
 	*/
 	protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
@@ -36,4 +66,18 @@
 		((CreateElementRequest) getRequest()).setNewElement(newElement);
 		return CommandResult.newOKCommandResult(newElement);
 	}
+
+	/**
+	* @generated
+	*/
+	protected void doConfigure(ComBE.AlternativeBranch newElement, IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		IElementType elementType = ((CreateElementRequest) getRequest()).getElementType();
+		ConfigureRequest configureRequest = new ConfigureRequest(getEditingDomain(), newElement, elementType);
+		configureRequest.setClientContext(((CreateElementRequest) getRequest()).getClientContext());
+		configureRequest.addParameters(getRequest().getParameters());
+		ICommand configureCommand = elementType.getEditCommand(configureRequest);
+		if (configureCommand != null && configureCommand.canExecute()) {
+			configureCommand.execute(monitor, info);
+		}
+	}
 }

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AtomicSequenceChildCreateCommand.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AtomicSequenceChildCreateCommand.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,90 @@
+package ComBE.diagram.edit.commands;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest;
+
+/**
+ * @generated
+ */
+public class AtomicSequenceChildCreateCommand extends EditElementCommand {
+
+	/**
+	* @generated
+	*/
+	private final EObject source;
+
+	/**
+	* @generated
+	*/
+	private final EObject target;
+
+	/**
+	* @generated
+	*/
+	public AtomicSequenceChildCreateCommand(CreateRelationshipRequest request, EObject source, EObject target) {
+		super(request.getLabel(), null, request);
+		this.source = source;
+		this.target = target;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean canExecute() {
+		if (source == null && target == null) {
+			return false;
+		}
+		if (source != null && false == source instanceof ComBE.AtomicSequence) {
+			return false;
+		}
+		if (target != null && false == target instanceof ComBE.BehaviorTree) {
+			return false;
+		}
+		if (getSource() == null) {
+			return true; // link creation is in progress; source is not defined yet
+		}
+		// target may be null here but it's possible to check constraint
+		return ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy.getLinkConstraints().canCreateAtomicSequenceChild_4003(getSource(), getTarget());
+	}
+
+	/**
+	* @generated
+	*/
+	protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		if (!canExecute()) {
+			throw new ExecutionException("Invalid arguments in create link command"); //$NON-NLS-1$
+		}
+
+		if (getSource() != null && getTarget() != null) {
+			getSource().setChild(getTarget());
+		}
+		return CommandResult.newOKCommandResult();
+
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setElementToEdit(EObject element) {
+		throw new UnsupportedOperationException();
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBE.AtomicSequence getSource() {
+		return (ComBE.AtomicSequence) source;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBE.BehaviorTree getTarget() {
+		return (ComBE.BehaviorTree) target;
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AtomicSequenceChildReorientCommand.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AtomicSequenceChildReorientCommand.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,144 @@
+package ComBE.diagram.edit.commands;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ReorientReferenceRelationshipRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest;
+
+/**
+ * @generated
+ */
+public class AtomicSequenceChildReorientCommand extends EditElementCommand {
+
+	/**
+	* @generated
+	*/
+	private final int reorientDirection;
+
+	/**
+	* @generated
+	*/
+	private final EObject referenceOwner;
+
+	/**
+	* @generated
+	*/
+	private final EObject oldEnd;
+
+	/**
+	* @generated
+	*/
+	private final EObject newEnd;
+
+	/**
+	* @generated
+	*/
+	public AtomicSequenceChildReorientCommand(ReorientReferenceRelationshipRequest request) {
+		super(request.getLabel(), null, request);
+		reorientDirection = request.getDirection();
+		referenceOwner = request.getReferenceOwner();
+		oldEnd = request.getOldRelationshipEnd();
+		newEnd = request.getNewRelationshipEnd();
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean canExecute() {
+		if (false == referenceOwner instanceof ComBE.AtomicSequence) {
+			return false;
+		}
+		if (reorientDirection == ReorientRelationshipRequest.REORIENT_SOURCE) {
+			return canReorientSource();
+		}
+		if (reorientDirection == ReorientRelationshipRequest.REORIENT_TARGET) {
+			return canReorientTarget();
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean canReorientSource() {
+		if (!(oldEnd instanceof ComBE.BehaviorTree && newEnd instanceof ComBE.AtomicSequence)) {
+			return false;
+		}
+		return ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy.getLinkConstraints().canExistAtomicSequenceChild_4003(getNewSource(), getOldTarget());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean canReorientTarget() {
+		if (!(oldEnd instanceof ComBE.BehaviorTree && newEnd instanceof ComBE.BehaviorTree)) {
+			return false;
+		}
+		return ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy.getLinkConstraints().canExistAtomicSequenceChild_4003(getOldSource(), getNewTarget());
+	}
+
+	/**
+	* @generated
+	*/
+	protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		if (!canExecute()) {
+			throw new ExecutionException("Invalid arguments in reorient link command"); //$NON-NLS-1$
+		}
+		if (reorientDirection == ReorientRelationshipRequest.REORIENT_SOURCE) {
+			return reorientSource();
+		}
+		if (reorientDirection == ReorientRelationshipRequest.REORIENT_TARGET) {
+			return reorientTarget();
+		}
+		throw new IllegalStateException();
+	}
+
+	/**
+	* @generated
+	*/
+	protected CommandResult reorientSource() throws ExecutionException {
+		getOldSource().setChild(null);
+		getNewSource().setChild(getOldTarget());
+		return CommandResult.newOKCommandResult(referenceOwner);
+	}
+
+	/**
+	* @generated
+	*/
+	protected CommandResult reorientTarget() throws ExecutionException {
+		getOldSource().setChild(getNewTarget());
+		return CommandResult.newOKCommandResult(referenceOwner);
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBE.AtomicSequence getOldSource() {
+		return (ComBE.AtomicSequence) referenceOwner;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBE.AtomicSequence getNewSource() {
+		return (ComBE.AtomicSequence) newEnd;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBE.BehaviorTree getOldTarget() {
+		return (ComBE.BehaviorTree) oldEnd;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBE.BehaviorTree getNewTarget() {
+		return (ComBE.BehaviorTree) newEnd;
+	}
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AtomicSequenceCreateCommand.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AtomicSequenceCreateCommand.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/AtomicSequenceCreateCommand.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -6,17 +6,47 @@
 import org.eclipse.emf.ecore.EObject;
 import org.eclipse.emf.ecore.resource.Resource;
 import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.common.core.command.ICommand;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
 import org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ConfigureRequest;
 import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
 import org.eclipse.gmf.runtime.emf.type.core.requests.IEditCommandRequest;
 
+import org.eclipse.gmf.runtime.notation.View;
 import ComBE.AtomicSequence;
 
 /**
  * @generated
  */
 public class AtomicSequenceCreateCommand extends EditElementCommand {
-	
+
+	/**
+	* @generated
+	*/
+	public AtomicSequenceCreateCommand(CreateElementRequest req) {
+		super(req.getLabel(), null, req);
+	}
+
+	/**
+	* FIXME: replace with setElementToEdit()
+	* @generated
+	*/
+	protected EObject getElementToEdit() {
+		EObject container = ((CreateElementRequest) getRequest()).getContainer();
+		if (container instanceof View) {
+			container = ((View) container).getElement();
+		}
+		return container;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean canExecute() {
+		return true;
+	}
+
 	/**
 	* @generated NOT
 	*/
@@ -36,4 +66,18 @@
 		((CreateElementRequest) getRequest()).setNewElement(newElement);
 		return CommandResult.newOKCommandResult(newElement);
 	}
+
+	/**
+	* @generated
+	*/
+	protected void doConfigure(ComBE.AtomicSequence newElement, IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		IElementType elementType = ((CreateElementRequest) getRequest()).getElementType();
+		ConfigureRequest configureRequest = new ConfigureRequest(getEditingDomain(), newElement, elementType);
+		configureRequest.setClientContext(((CreateElementRequest) getRequest()).getClientContext());
+		configureRequest.addParameters(getRequest().getParameters());
+		ICommand configureCommand = elementType.getEditCommand(configureRequest);
+		if (configureCommand != null && configureCommand.canExecute()) {
+			configureCommand.execute(monitor, info);
+		}
+	}
 }

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/EmptyNode2CreateCommand.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/EmptyNode2CreateCommand.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,76 @@
+package ComBE.diagram.edit.commands;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.common.core.command.ICommand;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+import org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ConfigureRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class EmptyNode2CreateCommand extends EditElementCommand {
+
+	/**
+	* @generated
+	*/
+	public EmptyNode2CreateCommand(CreateElementRequest req) {
+		super(req.getLabel(), null, req);
+	}
+
+	/**
+	* FIXME: replace with setElementToEdit()
+	* @generated
+	*/
+	protected EObject getElementToEdit() {
+		EObject container = ((CreateElementRequest) getRequest()).getContainer();
+		if (container instanceof View) {
+			container = ((View) container).getElement();
+		}
+		return container;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean canExecute() {
+		return true;
+
+	}
+
+	/**
+	* @generated
+	*/
+	protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		ComBE.EmptyNode newElement = ComBE.ComBEFactory.eINSTANCE.createEmptyNode();
+
+		ComBE.BehaviorTree owner = (ComBE.BehaviorTree) getElementToEdit();
+		owner.getNodes().add(newElement);
+
+		doConfigure(newElement, monitor, info);
+
+		((CreateElementRequest) getRequest()).setNewElement(newElement);
+		return CommandResult.newOKCommandResult(newElement);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void doConfigure(ComBE.EmptyNode newElement, IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		IElementType elementType = ((CreateElementRequest) getRequest()).getElementType();
+		ConfigureRequest configureRequest = new ConfigureRequest(getEditingDomain(), newElement, elementType);
+		configureRequest.setClientContext(((CreateElementRequest) getRequest()).getClientContext());
+		configureRequest.addParameters(getRequest().getParameters());
+		ICommand configureCommand = elementType.getEditCommand(configureRequest);
+		if (configureCommand != null && configureCommand.canExecute()) {
+			configureCommand.execute(monitor, info);
+		}
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/EmptyNode3CreateCommand.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/EmptyNode3CreateCommand.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,76 @@
+package ComBE.diagram.edit.commands;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.common.core.command.ICommand;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+import org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ConfigureRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class EmptyNode3CreateCommand extends EditElementCommand {
+
+	/**
+	* @generated
+	*/
+	public EmptyNode3CreateCommand(CreateElementRequest req) {
+		super(req.getLabel(), null, req);
+	}
+
+	/**
+	* FIXME: replace with setElementToEdit()
+	* @generated
+	*/
+	protected EObject getElementToEdit() {
+		EObject container = ((CreateElementRequest) getRequest()).getContainer();
+		if (container instanceof View) {
+			container = ((View) container).getElement();
+		}
+		return container;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean canExecute() {
+		return true;
+
+	}
+
+	/**
+	* @generated
+	*/
+	protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		ComBE.EmptyNode newElement = ComBE.ComBEFactory.eINSTANCE.createEmptyNode();
+
+		ComBE.BehaviorTree owner = (ComBE.BehaviorTree) getElementToEdit();
+		owner.getNodes().add(newElement);
+
+		doConfigure(newElement, monitor, info);
+
+		((CreateElementRequest) getRequest()).setNewElement(newElement);
+		return CommandResult.newOKCommandResult(newElement);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void doConfigure(ComBE.EmptyNode newElement, IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		IElementType elementType = ((CreateElementRequest) getRequest()).getElementType();
+		ConfigureRequest configureRequest = new ConfigureRequest(getEditingDomain(), newElement, elementType);
+		configureRequest.setClientContext(((CreateElementRequest) getRequest()).getClientContext());
+		configureRequest.addParameters(getRequest().getParameters());
+		ICommand configureCommand = elementType.getEditCommand(configureRequest);
+		if (configureCommand != null && configureCommand.canExecute()) {
+			configureCommand.execute(monitor, info);
+		}
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/EmptyNodeCreateCommand.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/EmptyNodeCreateCommand.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,76 @@
+package ComBE.diagram.edit.commands;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.common.core.command.ICommand;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+import org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ConfigureRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class EmptyNodeCreateCommand extends EditElementCommand {
+
+	/**
+	* @generated
+	*/
+	public EmptyNodeCreateCommand(CreateElementRequest req) {
+		super(req.getLabel(), null, req);
+	}
+
+	/**
+	* FIXME: replace with setElementToEdit()
+	* @generated
+	*/
+	protected EObject getElementToEdit() {
+		EObject container = ((CreateElementRequest) getRequest()).getContainer();
+		if (container instanceof View) {
+			container = ((View) container).getElement();
+		}
+		return container;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean canExecute() {
+		return true;
+
+	}
+
+	/**
+	* @generated
+	*/
+	protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		ComBE.EmptyNode newElement = ComBE.ComBEFactory.eINSTANCE.createEmptyNode();
+
+		ComBE.BehaviorTree owner = (ComBE.BehaviorTree) getElementToEdit();
+		owner.getNodes().add(newElement);
+
+		doConfigure(newElement, monitor, info);
+
+		((CreateElementRequest) getRequest()).setNewElement(newElement);
+		return CommandResult.newOKCommandResult(newElement);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void doConfigure(ComBE.EmptyNode newElement, IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		IElementType elementType = ((CreateElementRequest) getRequest()).getElementType();
+		ConfigureRequest configureRequest = new ConfigureRequest(getEditingDomain(), newElement, elementType);
+		configureRequest.setClientContext(((CreateElementRequest) getRequest()).getClientContext());
+		configureRequest.addParameters(getRequest().getParameters());
+		ICommand configureCommand = elementType.getEditCommand(configureRequest);
+		if (configureCommand != null && configureCommand.canExecute()) {
+			configureCommand.execute(monitor, info);
+		}
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/ParallelBranchChildrenCreateCommand.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/ParallelBranchChildrenCreateCommand.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,90 @@
+package ComBE.diagram.edit.commands;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest;
+
+/**
+ * @generated
+ */
+public class ParallelBranchChildrenCreateCommand extends EditElementCommand {
+
+	/**
+	* @generated
+	*/
+	private final EObject source;
+
+	/**
+	* @generated
+	*/
+	private final EObject target;
+
+	/**
+	* @generated
+	*/
+	public ParallelBranchChildrenCreateCommand(CreateRelationshipRequest request, EObject source, EObject target) {
+		super(request.getLabel(), null, request);
+		this.source = source;
+		this.target = target;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean canExecute() {
+		if (source == null && target == null) {
+			return false;
+		}
+		if (source != null && false == source instanceof ComBE.ParallelBranch) {
+			return false;
+		}
+		if (target != null && false == target instanceof ComBE.BehaviorTree) {
+			return false;
+		}
+		if (getSource() == null) {
+			return true; // link creation is in progress; source is not defined yet
+		}
+		// target may be null here but it's possible to check constraint
+		return ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy.getLinkConstraints().canCreateParallelBranchChildren_4002(getSource(), getTarget());
+	}
+
+	/**
+	* @generated
+	*/
+	protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		if (!canExecute()) {
+			throw new ExecutionException("Invalid arguments in create link command"); //$NON-NLS-1$
+		}
+
+		if (getSource() != null && getTarget() != null) {
+			getSource().getChildren().add(getTarget());
+		}
+		return CommandResult.newOKCommandResult();
+
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setElementToEdit(EObject element) {
+		throw new UnsupportedOperationException();
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBE.ParallelBranch getSource() {
+		return (ComBE.ParallelBranch) source;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBE.BehaviorTree getTarget() {
+		return (ComBE.BehaviorTree) target;
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/ParallelBranchChildrenReorientCommand.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/ParallelBranchChildrenReorientCommand.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,145 @@
+package ComBE.diagram.edit.commands;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ReorientReferenceRelationshipRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest;
+
+/**
+ * @generated
+ */
+public class ParallelBranchChildrenReorientCommand extends EditElementCommand {
+
+	/**
+	* @generated
+	*/
+	private final int reorientDirection;
+
+	/**
+	* @generated
+	*/
+	private final EObject referenceOwner;
+
+	/**
+	* @generated
+	*/
+	private final EObject oldEnd;
+
+	/**
+	* @generated
+	*/
+	private final EObject newEnd;
+
+	/**
+	* @generated
+	*/
+	public ParallelBranchChildrenReorientCommand(ReorientReferenceRelationshipRequest request) {
+		super(request.getLabel(), null, request);
+		reorientDirection = request.getDirection();
+		referenceOwner = request.getReferenceOwner();
+		oldEnd = request.getOldRelationshipEnd();
+		newEnd = request.getNewRelationshipEnd();
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean canExecute() {
+		if (false == referenceOwner instanceof ComBE.ParallelBranch) {
+			return false;
+		}
+		if (reorientDirection == ReorientRelationshipRequest.REORIENT_SOURCE) {
+			return canReorientSource();
+		}
+		if (reorientDirection == ReorientRelationshipRequest.REORIENT_TARGET) {
+			return canReorientTarget();
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean canReorientSource() {
+		if (!(oldEnd instanceof ComBE.BehaviorTree && newEnd instanceof ComBE.ParallelBranch)) {
+			return false;
+		}
+		return ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy.getLinkConstraints().canExistParallelBranchChildren_4002(getNewSource(), getOldTarget());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean canReorientTarget() {
+		if (!(oldEnd instanceof ComBE.BehaviorTree && newEnd instanceof ComBE.BehaviorTree)) {
+			return false;
+		}
+		return ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy.getLinkConstraints().canExistParallelBranchChildren_4002(getOldSource(), getNewTarget());
+	}
+
+	/**
+	* @generated
+	*/
+	protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		if (!canExecute()) {
+			throw new ExecutionException("Invalid arguments in reorient link command"); //$NON-NLS-1$
+		}
+		if (reorientDirection == ReorientRelationshipRequest.REORIENT_SOURCE) {
+			return reorientSource();
+		}
+		if (reorientDirection == ReorientRelationshipRequest.REORIENT_TARGET) {
+			return reorientTarget();
+		}
+		throw new IllegalStateException();
+	}
+
+	/**
+	* @generated
+	*/
+	protected CommandResult reorientSource() throws ExecutionException {
+		getOldSource().getChildren().remove(getOldTarget());
+		getNewSource().getChildren().add(getOldTarget());
+		return CommandResult.newOKCommandResult(referenceOwner);
+	}
+
+	/**
+	* @generated
+	*/
+	protected CommandResult reorientTarget() throws ExecutionException {
+		getOldSource().getChildren().remove(getOldTarget());
+		getOldSource().getChildren().add(getNewTarget());
+		return CommandResult.newOKCommandResult(referenceOwner);
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBE.ParallelBranch getOldSource() {
+		return (ComBE.ParallelBranch) referenceOwner;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBE.ParallelBranch getNewSource() {
+		return (ComBE.ParallelBranch) newEnd;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBE.BehaviorTree getOldTarget() {
+		return (ComBE.BehaviorTree) oldEnd;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBE.BehaviorTree getNewTarget() {
+		return (ComBE.BehaviorTree) newEnd;
+	}
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/ParallelBranchCreateCommand.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/ParallelBranchCreateCommand.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/ParallelBranchCreateCommand.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -6,10 +6,14 @@
 import org.eclipse.emf.ecore.EObject;
 import org.eclipse.emf.ecore.resource.Resource;
 import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.common.core.command.ICommand;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
 import org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ConfigureRequest;
 import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
 import org.eclipse.gmf.runtime.emf.type.core.requests.IEditCommandRequest;
 
+import org.eclipse.gmf.runtime.notation.View;
 import ComBE.ParallelBranch;
 
 /**
@@ -18,6 +22,32 @@
 public class ParallelBranchCreateCommand extends EditElementCommand {
 
 	/**
+	* @generated
+	*/
+	public ParallelBranchCreateCommand(CreateElementRequest req) {
+		super(req.getLabel(), null, req);
+	}
+
+	/**
+	* FIXME: replace with setElementToEdit()
+	* @generated
+	*/
+	protected EObject getElementToEdit() {
+		EObject container = ((CreateElementRequest) getRequest()).getContainer();
+		if (container instanceof View) {
+			container = ((View) container).getElement();
+		}
+		return container;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean canExecute() {
+		return true;
+	}
+
+	/**
 	* @generated NOT
 	*/
 	protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
@@ -36,4 +66,18 @@
 		((CreateElementRequest) getRequest()).setNewElement(newElement);
 		return CommandResult.newOKCommandResult(newElement);
 	}
+
+	/**
+	* @generated
+	*/
+	protected void doConfigure(ComBE.ParallelBranch newElement, IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		IElementType elementType = ((CreateElementRequest) getRequest()).getElementType();
+		ConfigureRequest configureRequest = new ConfigureRequest(getEditingDomain(), newElement, elementType);
+		configureRequest.setClientContext(((CreateElementRequest) getRequest()).getClientContext());
+		configureRequest.addParameters(getRequest().getParameters());
+		ICommand configureCommand = elementType.getEditCommand(configureRequest);
+		if (configureCommand != null && configureCommand.canExecute()) {
+			configureCommand.execute(monitor, info);
+		}
+	}
 }

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/StandardNode2CreateCommand.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/StandardNode2CreateCommand.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,76 @@
+package ComBE.diagram.edit.commands;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.common.core.command.ICommand;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+import org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ConfigureRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class StandardNode2CreateCommand extends EditElementCommand {
+
+	/**
+	* @generated
+	*/
+	public StandardNode2CreateCommand(CreateElementRequest req) {
+		super(req.getLabel(), null, req);
+	}
+
+	/**
+	* FIXME: replace with setElementToEdit()
+	* @generated
+	*/
+	protected EObject getElementToEdit() {
+		EObject container = ((CreateElementRequest) getRequest()).getContainer();
+		if (container instanceof View) {
+			container = ((View) container).getElement();
+		}
+		return container;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean canExecute() {
+		return true;
+
+	}
+
+	/**
+	* @generated
+	*/
+	protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		ComBE.StandardNode newElement = ComBE.ComBEFactory.eINSTANCE.createStandardNode();
+
+		ComBE.BehaviorTree owner = (ComBE.BehaviorTree) getElementToEdit();
+		owner.getNodes().add(newElement);
+
+		doConfigure(newElement, monitor, info);
+
+		((CreateElementRequest) getRequest()).setNewElement(newElement);
+		return CommandResult.newOKCommandResult(newElement);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void doConfigure(ComBE.StandardNode newElement, IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		IElementType elementType = ((CreateElementRequest) getRequest()).getElementType();
+		ConfigureRequest configureRequest = new ConfigureRequest(getEditingDomain(), newElement, elementType);
+		configureRequest.setClientContext(((CreateElementRequest) getRequest()).getClientContext());
+		configureRequest.addParameters(getRequest().getParameters());
+		ICommand configureCommand = elementType.getEditCommand(configureRequest);
+		if (configureCommand != null && configureCommand.canExecute()) {
+			configureCommand.execute(monitor, info);
+		}
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/StandardNode3CreateCommand.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/StandardNode3CreateCommand.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,76 @@
+package ComBE.diagram.edit.commands;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.common.core.command.ICommand;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+import org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ConfigureRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class StandardNode3CreateCommand extends EditElementCommand {
+
+	/**
+	* @generated
+	*/
+	public StandardNode3CreateCommand(CreateElementRequest req) {
+		super(req.getLabel(), null, req);
+	}
+
+	/**
+	* FIXME: replace with setElementToEdit()
+	* @generated
+	*/
+	protected EObject getElementToEdit() {
+		EObject container = ((CreateElementRequest) getRequest()).getContainer();
+		if (container instanceof View) {
+			container = ((View) container).getElement();
+		}
+		return container;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean canExecute() {
+		return true;
+
+	}
+
+	/**
+	* @generated
+	*/
+	protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		ComBE.StandardNode newElement = ComBE.ComBEFactory.eINSTANCE.createStandardNode();
+
+		ComBE.BehaviorTree owner = (ComBE.BehaviorTree) getElementToEdit();
+		owner.getNodes().add(newElement);
+
+		doConfigure(newElement, monitor, info);
+
+		((CreateElementRequest) getRequest()).setNewElement(newElement);
+		return CommandResult.newOKCommandResult(newElement);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void doConfigure(ComBE.StandardNode newElement, IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		IElementType elementType = ((CreateElementRequest) getRequest()).getElementType();
+		ConfigureRequest configureRequest = new ConfigureRequest(getEditingDomain(), newElement, elementType);
+		configureRequest.setClientContext(((CreateElementRequest) getRequest()).getClientContext());
+		configureRequest.addParameters(getRequest().getParameters());
+		ICommand configureCommand = elementType.getEditCommand(configureRequest);
+		if (configureCommand != null && configureCommand.canExecute()) {
+			configureCommand.execute(monitor, info);
+		}
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/StandardNodeCreateCommand.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/commands/StandardNodeCreateCommand.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,76 @@
+package ComBE.diagram.edit.commands;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.common.core.command.ICommand;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+import org.eclipse.gmf.runtime.emf.type.core.commands.EditElementCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ConfigureRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class StandardNodeCreateCommand extends EditElementCommand {
+
+	/**
+	* @generated
+	*/
+	public StandardNodeCreateCommand(CreateElementRequest req) {
+		super(req.getLabel(), null, req);
+	}
+
+	/**
+	* FIXME: replace with setElementToEdit()
+	* @generated
+	*/
+	protected EObject getElementToEdit() {
+		EObject container = ((CreateElementRequest) getRequest()).getContainer();
+		if (container instanceof View) {
+			container = ((View) container).getElement();
+		}
+		return container;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean canExecute() {
+		return true;
+
+	}
+
+	/**
+	* @generated
+	*/
+	protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		ComBE.StandardNode newElement = ComBE.ComBEFactory.eINSTANCE.createStandardNode();
+
+		ComBE.BehaviorTree owner = (ComBE.BehaviorTree) getElementToEdit();
+		owner.getNodes().add(newElement);
+
+		doConfigure(newElement, monitor, info);
+
+		((CreateElementRequest) getRequest()).setNewElement(newElement);
+		return CommandResult.newOKCommandResult(newElement);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void doConfigure(ComBE.StandardNode newElement, IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+		IElementType elementType = ((CreateElementRequest) getRequest()).getElementType();
+		ConfigureRequest configureRequest = new ConfigureRequest(getEditingDomain(), newElement, elementType);
+		configureRequest.setClientContext(((CreateElementRequest) getRequest()).getClientContext());
+		configureRequest.addParameters(getRequest().getParameters());
+		ICommand configureCommand = elementType.getEditCommand(configureRequest);
+		if (configureCommand != null && configureCommand.canExecute()) {
+			configureCommand.execute(monitor, info);
+		}
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/AlternativeBranchEditHelper.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/AlternativeBranchEditHelper.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,7 @@
+package ComBE.diagram.edit.helpers;
+
+/**
+ * @generated
+ */
+public class AlternativeBranchEditHelper extends ComBE.diagram.edit.helpers.ComBEBaseEditHelper {
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/AtomicSequenceEditHelper.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/AtomicSequenceEditHelper.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,7 @@
+package ComBE.diagram.edit.helpers;
+
+/**
+ * @generated
+ */
+public class AtomicSequenceEditHelper extends ComBE.diagram.edit.helpers.ComBEBaseEditHelper {
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/ComBEBaseEditHelper.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/ComBEBaseEditHelper.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,86 @@
+package ComBE.diagram.edit.helpers;
+
+import org.eclipse.gmf.runtime.common.core.command.CompositeCommand;
+import org.eclipse.gmf.runtime.common.core.command.ICommand;
+import org.eclipse.gmf.runtime.emf.type.core.ElementTypeRegistry;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+import org.eclipse.gmf.runtime.emf.type.core.edithelper.AbstractEditHelper;
+import org.eclipse.gmf.runtime.emf.type.core.edithelper.IEditHelperAdvice;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.IEditCommandRequest;
+
+/**
+ * @generated
+ */
+public class ComBEBaseEditHelper extends AbstractEditHelper {
+
+	/**
+	* @generated
+	*/
+	public static final String EDIT_POLICY_COMMAND = "edit policy command"; //$NON-NLS-1$
+
+	/**
+	* @generated
+	*/
+	public static final String CONTEXT_ELEMENT_TYPE = "context element type"; //$NON-NLS-1$
+
+	/**
+	* @generated
+	*/
+	protected IEditHelperAdvice[] getEditHelperAdvice(IEditCommandRequest req) {
+		if (req.getParameter(CONTEXT_ELEMENT_TYPE) instanceof IElementType) {
+			return ElementTypeRegistry.getInstance().getEditHelperAdvice((IElementType) req.getParameter(CONTEXT_ELEMENT_TYPE));
+		}
+		return super.getEditHelperAdvice(req);
+	}
+
+	/**
+	* @generated
+	*/
+	protected ICommand getInsteadCommand(IEditCommandRequest req) {
+		ICommand epCommand = (ICommand) req.getParameter(EDIT_POLICY_COMMAND);
+		req.setParameter(EDIT_POLICY_COMMAND, null);
+		ICommand ehCommand = super.getInsteadCommand(req);
+		if (epCommand == null) {
+			return ehCommand;
+		}
+		if (ehCommand == null) {
+			return epCommand;
+		}
+		CompositeCommand command = new CompositeCommand(null);
+		command.add(epCommand);
+		command.add(ehCommand);
+		return command;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ICommand getCreateCommand(CreateElementRequest req) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ICommand getCreateRelationshipCommand(CreateRelationshipRequest req) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ICommand getDestroyElementCommand(DestroyElementRequest req) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ICommand getDestroyReferenceCommand(DestroyReferenceRequest req) {
+		return null;
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/EmptyNodeEditHelper.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/EmptyNodeEditHelper.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,7 @@
+package ComBE.diagram.edit.helpers;
+
+/**
+ * @generated
+ */
+public class EmptyNodeEditHelper extends ComBE.diagram.edit.helpers.ComBEBaseEditHelper {
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/ParallelBranchEditHelper.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/ParallelBranchEditHelper.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,7 @@
+package ComBE.diagram.edit.helpers;
+
+/**
+ * @generated
+ */
+public class ParallelBranchEditHelper extends ComBE.diagram.edit.helpers.ComBEBaseEditHelper {
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/SpecificationEditHelper.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/SpecificationEditHelper.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,7 @@
+package ComBE.diagram.edit.helpers;
+
+/**
+ * @generated
+ */
+public class SpecificationEditHelper extends ComBE.diagram.edit.helpers.ComBEBaseEditHelper {
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/StandardNodeEditHelper.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/helpers/StandardNodeEditHelper.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,7 @@
+package ComBE.diagram.edit.helpers;
+
+/**
+ * @generated
+ */
+public class StandardNodeEditHelper extends ComBE.diagram.edit.helpers.ComBEBaseEditHelper {
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AlternativeBranchAlternativeBranchNodesCompartmentEditPart.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AlternativeBranchAlternativeBranchNodesCompartmentEditPart.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AlternativeBranchAlternativeBranchNodesCompartmentEditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -5,7 +5,12 @@
 import org.eclipse.emf.common.notify.Notification;
 import org.eclipse.emf.ecore.EObject;
 import org.eclipse.gmf.runtime.diagram.ui.editparts.ListCompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CreationEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.DragDropEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
 import org.eclipse.gmf.runtime.diagram.ui.figures.ResizableCompartmentFigure;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout;
+import org.eclipse.gmf.runtime.notation.View;
 
 /**
  * @generated
@@ -13,12 +18,38 @@
 public class AlternativeBranchAlternativeBranchNodesCompartmentEditPart extends ListCompartmentEditPart {
 
 	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 7002;
+
+	/**
+	* @generated
+	*/
+	public AlternativeBranchAlternativeBranchNodesCompartmentEditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean hasModelChildrenChanged(Notification evt) {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	public String getCompartmentName() {
+		return ComBE.diagram.part.Messages.AlternativeBranchAlternativeBranchNodesCompartmentEditPart_title;
+	}
+
+	/**
 	* @generated NOT
 	*/
 	public IFigure createFigure() {
 		ResizableCompartmentFigure result = (ResizableCompartmentFigure) super.createFigure();
 		result.setTitleVisibility(false);
-		
+
 		// START non-generated code: remove standard {5,5,5,5} Insets of compartment
 		Insets insets = result.getContentPane().getInsets();
 		insets.top = 0;
@@ -26,7 +57,27 @@
 		insets.left = 0;
 		insets.right = 0;
 		// END non-generated code
-		
+
 		return result;
 	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new ComBE.diagram.edit.policies.AlternativeBranchAlternativeBranchNodesCompartmentItemSemanticEditPolicy());
+		installEditPolicy(EditPolicyRoles.CREATION_ROLE, new CreationEditPolicy());
+		installEditPolicy(EditPolicyRoles.DRAG_DROP_ROLE, new DragDropEditPolicy());
+		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new ComBE.diagram.edit.policies.AlternativeBranchAlternativeBranchNodesCompartmentCanonicalEditPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setRatio(Double ratio) {
+		if (getFigure().getParent().getLayoutManager() instanceof ConstrainedToolbarLayout) {
+			super.setRatio(ratio);
+		}
+	}
 }

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AlternativeBranchChildrenEditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AlternativeBranchChildrenEditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,82 @@
+package ComBE.diagram.edit.parts;
+
+import org.eclipse.draw2d.ColorConstants;
+import org.eclipse.draw2d.Connection;
+import org.eclipse.draw2d.PolylineDecoration;
+import org.eclipse.draw2d.RotatableDecoration;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ConnectionNodeEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITreeBranchEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class AlternativeBranchChildrenEditPart extends ConnectionNodeEditPart implements ITreeBranchEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 4001;
+
+	/**
+	* @generated
+	*/
+	public AlternativeBranchChildrenEditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new ComBE.diagram.edit.policies.AlternativeBranchChildrenItemSemanticEditPolicy());
+	}
+
+	/**
+	* Creates figure for this edit part.
+	* 
+	* Body of this method does not depend on settings in generation model
+	* so you may safely remove <i>generated</i> tag and modify it.
+	* 
+	* @generated
+	*/
+
+	protected Connection createConnectionFigure() {
+		return new ComBEConnectionFigure();
+	}
+
+	/**
+	* @generated
+	*/
+	public ComBEConnectionFigure getPrimaryShape() {
+		return (ComBEConnectionFigure) getFigure();
+	}
+
+	/**
+	 * @generated
+	 */
+	public class ComBEConnectionFigure extends PolylineConnectionEx {
+
+		/**
+		 * @generated
+		 */
+		public ComBEConnectionFigure() {
+			this.setForegroundColor(ColorConstants.black);
+
+			setTargetDecoration(createTargetDecoration());
+		}
+
+		/**
+		 * @generated
+		 */
+		private RotatableDecoration createTargetDecoration() {
+			PolylineDecoration df = new PolylineDecoration();
+			return df;
+		}
+
+	}
+
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AlternativeBranchEditPart.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AlternativeBranchEditPart.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AlternativeBranchEditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,9 +1,43 @@
 package ComBE.diagram.edit.parts;
 
+import java.util.ArrayList;
+import java.util.LinkedList;
+import java.util.List;
+import org.eclipse.draw2d.Border;
+import org.eclipse.draw2d.ColorConstants;
+import org.eclipse.draw2d.GridData;
+import org.eclipse.draw2d.GridLayout;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.PositionConstants;
+import org.eclipse.draw2d.RectangleFigure;
+import org.eclipse.draw2d.Shape;
+import org.eclipse.draw2d.StackLayout;
+import org.eclipse.draw2d.geometry.Dimension;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gef.editpolicies.LayoutEditPolicy;
+import org.eclipse.gef.editpolicies.NonResizableEditPolicy;
+import org.eclipse.gef.editpolicies.ResizableEditPolicy;
+import org.eclipse.gef.requests.CreateRequest;
+import org.eclipse.gmf.runtime.diagram.core.edithelpers.CreateElementRequestAdapter;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
 import org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CreationEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
+import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewAndElementRequest;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+import org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure;
 import org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure;
 import org.eclipse.gmf.runtime.notation.View;
 
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.Font;
+import org.eclipse.swt.widgets.Display;
 import ComBE.diagram.customCode.CustomCreateNodePlate;
 
 /**
@@ -12,9 +46,427 @@
 public class AlternativeBranchEditPart extends ShapeNodeEditPart {
 
 	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 2001;
+	/**
+	* @generated
+	*/
+	protected IFigure contentPane;
+	/**
+	* @generated
+	*/
+	protected IFigure primaryShape;
+
+	/**
+	* @generated
+	*/
+	public AlternativeBranchEditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		installEditPolicy(EditPolicyRoles.CREATION_ROLE, new CreationEditPolicy());
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new ComBE.diagram.edit.policies.AlternativeBranchItemSemanticEditPolicy());
+		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new ComBE.diagram.edit.policies.AlternativeBranchCanonicalEditPolicy());
+		installEditPolicy(EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
+		// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies
+		// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CONNECTION_HANDLES_ROLE);
+	}
+
+	/**
+	* @generated
+	*/
+	protected LayoutEditPolicy createLayoutEditPolicy() {
+		org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy lep = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy() {
+
+			protected EditPolicy createChildEditPolicy(EditPart child) {
+				EditPolicy result = child.getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+				if (result == null) {
+					result = new NonResizableEditPolicy();
+				}
+				return result;
+			}
+
+			protected Command getMoveChildrenCommand(Request request) {
+				return null;
+			}
+
+			protected Command getCreateCommand(CreateRequest request) {
+				return null;
+			}
+		};
+		return lep;
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createNodeShape() {
+		return primaryShape = new AlternativeBranchFigure();
+	}
+
+	/**
+	* @generated
+	*/
+	public AlternativeBranchFigure getPrimaryShape() {
+		return (AlternativeBranchFigure) primaryShape;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean addFixedChild(EditPart childEditPart) {
+		if (childEditPart instanceof ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart) {
+			IFigure pane = getPrimaryShape().getAlternativeBranchNodesCompartmentFigure();
+			setupContentPane(pane); // FIXME each comparment should handle his content pane in his own way 
+			pane.add(((ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart) childEditPart).getFigure());
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean removeFixedChild(EditPart childEditPart) {
+		if (childEditPart instanceof ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart) {
+			IFigure pane = getPrimaryShape().getAlternativeBranchNodesCompartmentFigure();
+			setupContentPane(pane); // FIXME each comparment should handle his content pane in his own way 
+			pane.remove(((ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart) childEditPart).getFigure());
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addChildVisual(EditPart childEditPart, int index) {
+		if (addFixedChild(childEditPart)) {
+			return;
+		}
+		super.addChildVisual(childEditPart, -1);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeChildVisual(EditPart childEditPart) {
+		if (removeFixedChild(childEditPart)) {
+			return;
+		}
+		super.removeChildVisual(childEditPart);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure getContentPaneFor(IGraphicalEditPart editPart) {
+		if (editPart instanceof ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart) {
+			return getPrimaryShape().getAlternativeBranchNodesCompartmentFigure();
+		}
+		return getContentPane();
+	}
+
+	/**
 	* @generated NOT
 	*/
 	protected NodeFigure createNodePlate() {
 		return CustomCreateNodePlate.createNodePlate();
 	}
+
+	/**
+	* @generated
+	*/
+	public EditPolicy getPrimaryDragEditPolicy() {
+		EditPolicy result = super.getPrimaryDragEditPolicy();
+		if (result instanceof ResizableEditPolicy) {
+			ResizableEditPolicy ep = (ResizableEditPolicy) result;
+			ep.setResizeDirections(PositionConstants.NONE);
+		}
+		return result;
+	}
+
+	/**
+	* Creates figure for this edit part.
+	* 
+	* Body of this method does not depend on settings in generation model
+	* so you may safely remove <i>generated</i> tag and modify it.
+	* 
+	* @generated
+	*/
+	protected NodeFigure createNodeFigure() {
+		NodeFigure figure = createNodePlate();
+		figure.setLayoutManager(new StackLayout());
+		IFigure shape = createNodeShape();
+		figure.add(shape);
+		contentPane = setupContentPane(shape);
+		return figure;
+	}
+
+	/**
+	* Default implementation treats passed figure as content pane.
+	* Respects layout one may have set for generated figure.
+	* @param nodeShape instance of generated figure class
+	* @generated
+	*/
+	protected IFigure setupContentPane(IFigure nodeShape) {
+		if (nodeShape.getLayoutManager() == null) {
+			ConstrainedToolbarLayout layout = new ConstrainedToolbarLayout();
+			layout.setSpacing(5);
+			nodeShape.setLayoutManager(layout);
+		}
+		return nodeShape; // use nodeShape itself as contentPane
+	}
+
+	/**
+	* @generated
+	*/
+	public IFigure getContentPane() {
+		if (contentPane != null) {
+			return contentPane;
+		}
+		return super.getContentPane();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setForegroundColor(Color color) {
+		if (primaryShape != null) {
+			primaryShape.setForegroundColor(color);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setBackgroundColor(Color color) {
+		if (primaryShape != null) {
+			primaryShape.setBackgroundColor(color);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLineWidth(int width) {
+		if (primaryShape instanceof Shape) {
+			((Shape) primaryShape).setLineWidth(width);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLineType(int style) {
+		if (primaryShape instanceof Shape) {
+			((Shape) primaryShape).setLineStyle(style);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public List<IElementType> getMARelTypesOnSource() {
+		ArrayList<IElementType> types = new ArrayList<IElementType>(1);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001);
+		return types;
+	}
+
+	/**
+	* @generated
+	*/
+	public List<IElementType> getMARelTypesOnSourceAndTarget(IGraphicalEditPart targetEditPart) {
+		LinkedList<IElementType> types = new LinkedList<IElementType>();
+		if (targetEditPart instanceof ComBE.diagram.edit.parts.AlternativeBranchEditPart) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001);
+		}
+		if (targetEditPart instanceof ComBE.diagram.edit.parts.ParallelBranchEditPart) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001);
+		}
+		if (targetEditPart instanceof ComBE.diagram.edit.parts.AtomicSequenceEditPart) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001);
+		}
+		return types;
+	}
+
+	/**
+	* @generated
+	*/
+	public List<IElementType> getMATypesForTarget(IElementType relationshipType) {
+		LinkedList<IElementType> types = new LinkedList<IElementType>();
+		if (relationshipType == ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranch_2001);
+			types.add(ComBE.diagram.providers.ComBEElementTypes.ParallelBranch_2002);
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AtomicSequence_2003);
+		}
+		return types;
+	}
+
+	/**
+	* @generated
+	*/
+	public List<IElementType> getMARelTypesOnTarget() {
+		ArrayList<IElementType> types = new ArrayList<IElementType>(3);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003);
+		return types;
+	}
+
+	/**
+	* @generated
+	*/
+	public List<IElementType> getMATypesForSource(IElementType relationshipType) {
+		LinkedList<IElementType> types = new LinkedList<IElementType>();
+		if (relationshipType == ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranch_2001);
+		} else if (relationshipType == ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.ParallelBranch_2002);
+		} else if (relationshipType == ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AtomicSequence_2003);
+		}
+		return types;
+	}
+
+	/**
+	* @generated
+	*/
+	public EditPart getTargetEditPart(Request request) {
+		if (request instanceof CreateViewAndElementRequest) {
+			CreateElementRequestAdapter adapter = ((CreateViewAndElementRequest) request).getViewAndElementDescriptor().getCreateElementRequestAdapter();
+			IElementType type = (IElementType) adapter.getAdapter(IElementType.class);
+			if (type == ComBE.diagram.providers.ComBEElementTypes.StandardNode_3001) {
+				return getChildBySemanticHint(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart.VISUAL_ID));
+			}
+			if (type == ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3002) {
+				return getChildBySemanticHint(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart.VISUAL_ID));
+			}
+		}
+		return super.getTargetEditPart(request);
+	}
+
+	/**
+	* @generated
+	*/
+	public class AlternativeBranchFigure extends RectangleFigure {
+
+		/**
+		 * @generated
+		 */
+		private RectangleFigure fAlternativeBranchNodesCompartmentFigure;
+
+		/**
+		 * @generated
+		 */
+		public AlternativeBranchFigure() {
+
+			GridLayout layoutThis = new GridLayout();
+			layoutThis.numColumns = 1;
+			layoutThis.makeColumnsEqualWidth = true;
+			layoutThis.horizontalSpacing = 0;
+			layoutThis.verticalSpacing = 0;
+			layoutThis.marginWidth = 0;
+			layoutThis.marginHeight = 8;
+			this.setLayoutManager(layoutThis);
+
+			this.setFill(false);
+			this.setOutline(false);
+			this.setLineWidth(0);
+			this.setMinimumSize(new Dimension(getMapMode().DPtoLP(202), getMapMode().DPtoLP(82)));
+			createContents();
+		}
+
+		/**
+		 * @generated
+		 */
+		private void createContents() {
+
+			fAlternativeBranchNodesCompartmentFigure = new RectangleFigure();
+			fAlternativeBranchNodesCompartmentFigure.setForegroundColor(ColorConstants.black);
+			fAlternativeBranchNodesCompartmentFigure.setBackgroundColor(ColorConstants.black);
+
+			GridData constraintFAlternativeBranchNodesCompartmentFigure = new GridData();
+			constraintFAlternativeBranchNodesCompartmentFigure.verticalAlignment = GridData.CENTER;
+			constraintFAlternativeBranchNodesCompartmentFigure.horizontalAlignment = GridData.CENTER;
+			constraintFAlternativeBranchNodesCompartmentFigure.horizontalIndent = 0;
+			constraintFAlternativeBranchNodesCompartmentFigure.horizontalSpan = 1;
+			constraintFAlternativeBranchNodesCompartmentFigure.verticalSpan = 1;
+			constraintFAlternativeBranchNodesCompartmentFigure.grabExcessHorizontalSpace = true;
+			constraintFAlternativeBranchNodesCompartmentFigure.grabExcessVerticalSpace = true;
+			this.add(fAlternativeBranchNodesCompartmentFigure, constraintFAlternativeBranchNodesCompartmentFigure);
+
+			RectangleFigure alternativeBranchBottomRectangle0 = new RectangleFigure();
+			alternativeBranchBottomRectangle0.setOutline(false);
+			alternativeBranchBottomRectangle0.setLineWidth(0);
+			alternativeBranchBottomRectangle0.setForegroundColor(ColorConstants.black);
+			alternativeBranchBottomRectangle0.setBackgroundColor(ALTERNATIVEBRANCHBOTTOMRECTANGLE0_BACK);
+
+			alternativeBranchBottomRectangle0.setFont(ALTERNATIVEBRANCHBOTTOMRECTANGLE0_FONT);
+
+			alternativeBranchBottomRectangle0.setPreferredSize(new Dimension(getMapMode().DPtoLP(182), getMapMode().DPtoLP(27)));
+			alternativeBranchBottomRectangle0.setBorder(createBorder0());
+
+			GridData constraintAlternativeBranchBottomRectangle0 = new GridData();
+			constraintAlternativeBranchBottomRectangle0.verticalAlignment = GridData.CENTER;
+			constraintAlternativeBranchBottomRectangle0.horizontalAlignment = GridData.CENTER;
+			constraintAlternativeBranchBottomRectangle0.horizontalIndent = 0;
+			constraintAlternativeBranchBottomRectangle0.horizontalSpan = 1;
+			constraintAlternativeBranchBottomRectangle0.verticalSpan = 1;
+			constraintAlternativeBranchBottomRectangle0.grabExcessHorizontalSpace = true;
+			constraintAlternativeBranchBottomRectangle0.grabExcessVerticalSpace = true;
+			this.add(alternativeBranchBottomRectangle0, constraintAlternativeBranchBottomRectangle0);
+
+			GridLayout layoutAlternativeBranchBottomRectangle0 = new GridLayout();
+			layoutAlternativeBranchBottomRectangle0.numColumns = 1;
+			layoutAlternativeBranchBottomRectangle0.makeColumnsEqualWidth = true;
+			alternativeBranchBottomRectangle0.setLayoutManager(layoutAlternativeBranchBottomRectangle0);
+
+			WrappingLabel alternativeBranchBottomLabel1 = new WrappingLabel();
+			alternativeBranchBottomLabel1.setText("[ ]");
+
+			GridData constraintAlternativeBranchBottomLabel1 = new GridData();
+			constraintAlternativeBranchBottomLabel1.verticalAlignment = GridData.CENTER;
+			constraintAlternativeBranchBottomLabel1.horizontalAlignment = GridData.CENTER;
+			constraintAlternativeBranchBottomLabel1.horizontalIndent = 0;
+			constraintAlternativeBranchBottomLabel1.horizontalSpan = 1;
+			constraintAlternativeBranchBottomLabel1.verticalSpan = 1;
+			constraintAlternativeBranchBottomLabel1.grabExcessHorizontalSpace = true;
+			constraintAlternativeBranchBottomLabel1.grabExcessVerticalSpace = true;
+			alternativeBranchBottomRectangle0.add(alternativeBranchBottomLabel1, constraintAlternativeBranchBottomLabel1);
+
+		}
+
+		/**
+		 * @generated
+		 */
+		private Border createBorder0() {
+			ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();
+
+			return result;
+		}
+
+		/**
+		 * @generated
+		 */
+		public RectangleFigure getAlternativeBranchNodesCompartmentFigure() {
+			return fAlternativeBranchNodesCompartmentFigure;
+		}
+
+	}
+
+	/**
+	* @generated
+	*/
+	static final Color ALTERNATIVEBRANCHBOTTOMRECTANGLE0_BACK = new Color(null, 179, 211, 69);
+	/**
+	* @generated
+	*/
+	static final Font ALTERNATIVEBRANCHBOTTOMRECTANGLE0_FONT = new Font(Display.getCurrent(), "ComBEFont", 7, SWT.BOLD);
 }

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AtomicSequenceAtomicSequenceNodesCompartmentEditPart.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AtomicSequenceAtomicSequenceNodesCompartmentEditPart.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AtomicSequenceAtomicSequenceNodesCompartmentEditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -5,7 +5,12 @@
 import org.eclipse.emf.common.notify.Notification;
 import org.eclipse.emf.ecore.EObject;
 import org.eclipse.gmf.runtime.diagram.ui.editparts.ListCompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CreationEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.DragDropEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
 import org.eclipse.gmf.runtime.diagram.ui.figures.ResizableCompartmentFigure;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout;
+import org.eclipse.gmf.runtime.notation.View;
 
 /**
  * @generated
@@ -13,12 +18,38 @@
 public class AtomicSequenceAtomicSequenceNodesCompartmentEditPart extends ListCompartmentEditPart {
 
 	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 7001;
+
+	/**
+	* @generated
+	*/
+	public AtomicSequenceAtomicSequenceNodesCompartmentEditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean hasModelChildrenChanged(Notification evt) {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	public String getCompartmentName() {
+		return ComBE.diagram.part.Messages.AtomicSequenceAtomicSequenceNodesCompartmentEditPart_title;
+	}
+
+	/**
 	* @generated NOT
 	*/
 	public IFigure createFigure() {
 		ResizableCompartmentFigure result = (ResizableCompartmentFigure) super.createFigure();
 		result.setTitleVisibility(false);
-		
+
 		// START non-generated code: remove standard {5,5,5,5} Insets of compartment
 		Insets insets = result.getContentPane().getInsets();
 		insets.top = 0;
@@ -26,7 +57,27 @@
 		insets.left = 0;
 		insets.right = 0;
 		// END non-generated code
-		
+
 		return result;
 	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new ComBE.diagram.edit.policies.AtomicSequenceAtomicSequenceNodesCompartmentItemSemanticEditPolicy());
+		installEditPolicy(EditPolicyRoles.CREATION_ROLE, new CreationEditPolicy());
+		installEditPolicy(EditPolicyRoles.DRAG_DROP_ROLE, new DragDropEditPolicy());
+		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new ComBE.diagram.edit.policies.AtomicSequenceAtomicSequenceNodesCompartmentCanonicalEditPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setRatio(Double ratio) {
+		if (getFigure().getParent().getLayoutManager() instanceof ConstrainedToolbarLayout) {
+			super.setRatio(ratio);
+		}
+	}
 }

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AtomicSequenceChildEditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AtomicSequenceChildEditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,82 @@
+package ComBE.diagram.edit.parts;
+
+import org.eclipse.draw2d.ColorConstants;
+import org.eclipse.draw2d.Connection;
+import org.eclipse.draw2d.PolylineDecoration;
+import org.eclipse.draw2d.RotatableDecoration;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ConnectionNodeEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITreeBranchEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class AtomicSequenceChildEditPart extends ConnectionNodeEditPart implements ITreeBranchEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 4003;
+
+	/**
+	* @generated
+	*/
+	public AtomicSequenceChildEditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new ComBE.diagram.edit.policies.AtomicSequenceChildItemSemanticEditPolicy());
+	}
+
+	/**
+	* Creates figure for this edit part.
+	* 
+	* Body of this method does not depend on settings in generation model
+	* so you may safely remove <i>generated</i> tag and modify it.
+	* 
+	* @generated
+	*/
+
+	protected Connection createConnectionFigure() {
+		return new ComBEConnectionFigure();
+	}
+
+	/**
+	* @generated
+	*/
+	public ComBEConnectionFigure getPrimaryShape() {
+		return (ComBEConnectionFigure) getFigure();
+	}
+
+	/**
+	 * @generated
+	 */
+	public class ComBEConnectionFigure extends PolylineConnectionEx {
+
+		/**
+		 * @generated
+		 */
+		public ComBEConnectionFigure() {
+			this.setForegroundColor(ColorConstants.black);
+
+			setTargetDecoration(createTargetDecoration());
+		}
+
+		/**
+		 * @generated
+		 */
+		private RotatableDecoration createTargetDecoration() {
+			PolylineDecoration df = new PolylineDecoration();
+			return df;
+		}
+
+	}
+
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AtomicSequenceEditPart.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AtomicSequenceEditPart.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/AtomicSequenceEditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,9 +1,38 @@
 package ComBE.diagram.edit.parts;
 
+import java.util.ArrayList;
+import java.util.LinkedList;
+import java.util.List;
+import org.eclipse.draw2d.ColorConstants;
+import org.eclipse.draw2d.GridData;
+import org.eclipse.draw2d.GridLayout;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.PositionConstants;
+import org.eclipse.draw2d.RectangleFigure;
+import org.eclipse.draw2d.Shape;
+import org.eclipse.draw2d.StackLayout;
+import org.eclipse.draw2d.geometry.Dimension;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gef.editpolicies.LayoutEditPolicy;
+import org.eclipse.gef.editpolicies.NonResizableEditPolicy;
+import org.eclipse.gef.editpolicies.ResizableEditPolicy;
+import org.eclipse.gef.requests.CreateRequest;
+import org.eclipse.gmf.runtime.diagram.core.edithelpers.CreateElementRequestAdapter;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
 import org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CreationEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
+import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewAndElementRequest;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+import org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure;
 import org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure;
 import org.eclipse.gmf.runtime.notation.View;
 
+import org.eclipse.swt.graphics.Color;
 import ComBE.diagram.customCode.CustomCreateNodePlate;
 
 /**
@@ -12,9 +41,371 @@
 public class AtomicSequenceEditPart extends ShapeNodeEditPart {
 
 	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 2003;
+	/**
+	* @generated
+	*/
+	protected IFigure contentPane;
+	/**
+	* @generated
+	*/
+	protected IFigure primaryShape;
+
+	/**
+	* @generated
+	*/
+	public AtomicSequenceEditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		installEditPolicy(EditPolicyRoles.CREATION_ROLE, new CreationEditPolicy());
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new ComBE.diagram.edit.policies.AtomicSequenceItemSemanticEditPolicy());
+		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new ComBE.diagram.edit.policies.AtomicSequenceCanonicalEditPolicy());
+		installEditPolicy(EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
+		// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies
+		// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CONNECTION_HANDLES_ROLE);
+	}
+
+	/**
+	* @generated
+	*/
+	protected LayoutEditPolicy createLayoutEditPolicy() {
+		org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy lep = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy() {
+
+			protected EditPolicy createChildEditPolicy(EditPart child) {
+				EditPolicy result = child.getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+				if (result == null) {
+					result = new NonResizableEditPolicy();
+				}
+				return result;
+			}
+
+			protected Command getMoveChildrenCommand(Request request) {
+				return null;
+			}
+
+			protected Command getCreateCommand(CreateRequest request) {
+				return null;
+			}
+		};
+		return lep;
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createNodeShape() {
+		return primaryShape = new AtomicSequenceFigure();
+	}
+
+	/**
+	* @generated
+	*/
+	public AtomicSequenceFigure getPrimaryShape() {
+		return (AtomicSequenceFigure) primaryShape;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean addFixedChild(EditPart childEditPart) {
+		if (childEditPart instanceof ComBE.diagram.edit.parts.ParallelBranchParallelBranchNodesCompartmentEditPart) {
+			IFigure pane = getPrimaryShape().getAtomicSequenceNodesCompartmentFigure();
+			setupContentPane(pane); // FIXME each comparment should handle his content pane in his own way 
+			pane.add(((ComBE.diagram.edit.parts.ParallelBranchParallelBranchNodesCompartmentEditPart) childEditPart).getFigure());
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean removeFixedChild(EditPart childEditPart) {
+		if (childEditPart instanceof ComBE.diagram.edit.parts.ParallelBranchParallelBranchNodesCompartmentEditPart) {
+			IFigure pane = getPrimaryShape().getAtomicSequenceNodesCompartmentFigure();
+			setupContentPane(pane); // FIXME each comparment should handle his content pane in his own way 
+			pane.remove(((ComBE.diagram.edit.parts.ParallelBranchParallelBranchNodesCompartmentEditPart) childEditPart).getFigure());
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addChildVisual(EditPart childEditPart, int index) {
+		if (addFixedChild(childEditPart)) {
+			return;
+		}
+		super.addChildVisual(childEditPart, -1);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeChildVisual(EditPart childEditPart) {
+		if (removeFixedChild(childEditPart)) {
+			return;
+		}
+		super.removeChildVisual(childEditPart);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure getContentPaneFor(IGraphicalEditPart editPart) {
+		if (editPart instanceof ComBE.diagram.edit.parts.ParallelBranchParallelBranchNodesCompartmentEditPart) {
+			return getPrimaryShape().getAtomicSequenceNodesCompartmentFigure();
+		}
+		return getContentPane();
+	}
+
+	/**
 	* @generated NOT
 	*/
 	protected NodeFigure createNodePlate() {
 		return CustomCreateNodePlate.createNodePlate();
 	}
+
+	/**
+	* @generated
+	*/
+	public EditPolicy getPrimaryDragEditPolicy() {
+		EditPolicy result = super.getPrimaryDragEditPolicy();
+		if (result instanceof ResizableEditPolicy) {
+			ResizableEditPolicy ep = (ResizableEditPolicy) result;
+			ep.setResizeDirections(PositionConstants.NONE);
+		}
+		return result;
+	}
+
+	/**
+	* Creates figure for this edit part.
+	* 
+	* Body of this method does not depend on settings in generation model
+	* so you may safely remove <i>generated</i> tag and modify it.
+	* 
+	* @generated
+	*/
+	protected NodeFigure createNodeFigure() {
+		NodeFigure figure = createNodePlate();
+		figure.setLayoutManager(new StackLayout());
+		IFigure shape = createNodeShape();
+		figure.add(shape);
+		contentPane = setupContentPane(shape);
+		return figure;
+	}
+
+	/**
+	* Default implementation treats passed figure as content pane.
+	* Respects layout one may have set for generated figure.
+	* @param nodeShape instance of generated figure class
+	* @generated
+	*/
+	protected IFigure setupContentPane(IFigure nodeShape) {
+		if (nodeShape.getLayoutManager() == null) {
+			ConstrainedToolbarLayout layout = new ConstrainedToolbarLayout();
+			layout.setSpacing(5);
+			nodeShape.setLayoutManager(layout);
+		}
+		return nodeShape; // use nodeShape itself as contentPane
+	}
+
+	/**
+	* @generated
+	*/
+	public IFigure getContentPane() {
+		if (contentPane != null) {
+			return contentPane;
+		}
+		return super.getContentPane();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setForegroundColor(Color color) {
+		if (primaryShape != null) {
+			primaryShape.setForegroundColor(color);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setBackgroundColor(Color color) {
+		if (primaryShape != null) {
+			primaryShape.setBackgroundColor(color);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLineWidth(int width) {
+		if (primaryShape instanceof Shape) {
+			((Shape) primaryShape).setLineWidth(width);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLineType(int style) {
+		if (primaryShape instanceof Shape) {
+			((Shape) primaryShape).setLineStyle(style);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public List<IElementType> getMARelTypesOnSource() {
+		ArrayList<IElementType> types = new ArrayList<IElementType>(1);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003);
+		return types;
+	}
+
+	/**
+	* @generated
+	*/
+	public List<IElementType> getMARelTypesOnSourceAndTarget(IGraphicalEditPart targetEditPart) {
+		LinkedList<IElementType> types = new LinkedList<IElementType>();
+		if (targetEditPart instanceof ComBE.diagram.edit.parts.AlternativeBranchEditPart) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003);
+		}
+		if (targetEditPart instanceof ComBE.diagram.edit.parts.ParallelBranchEditPart) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003);
+		}
+		if (targetEditPart instanceof ComBE.diagram.edit.parts.AtomicSequenceEditPart) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003);
+		}
+		return types;
+	}
+
+	/**
+	* @generated
+	*/
+	public List<IElementType> getMATypesForTarget(IElementType relationshipType) {
+		LinkedList<IElementType> types = new LinkedList<IElementType>();
+		if (relationshipType == ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranch_2001);
+			types.add(ComBE.diagram.providers.ComBEElementTypes.ParallelBranch_2002);
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AtomicSequence_2003);
+		}
+		return types;
+	}
+
+	/**
+	* @generated
+	*/
+	public List<IElementType> getMARelTypesOnTarget() {
+		ArrayList<IElementType> types = new ArrayList<IElementType>(3);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003);
+		return types;
+	}
+
+	/**
+	* @generated
+	*/
+	public List<IElementType> getMATypesForSource(IElementType relationshipType) {
+		LinkedList<IElementType> types = new LinkedList<IElementType>();
+		if (relationshipType == ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranch_2001);
+		} else if (relationshipType == ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.ParallelBranch_2002);
+		} else if (relationshipType == ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AtomicSequence_2003);
+		}
+		return types;
+	}
+
+	/**
+	* @generated
+	*/
+	public EditPart getTargetEditPart(Request request) {
+		if (request instanceof CreateViewAndElementRequest) {
+			CreateElementRequestAdapter adapter = ((CreateViewAndElementRequest) request).getViewAndElementDescriptor().getCreateElementRequestAdapter();
+			IElementType type = (IElementType) adapter.getAdapter(IElementType.class);
+			if (type == ComBE.diagram.providers.ComBEElementTypes.StandardNode_3005) {
+				return getChildBySemanticHint(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchParallelBranchNodesCompartmentEditPart.VISUAL_ID));
+			}
+			if (type == ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3006) {
+				return getChildBySemanticHint(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchParallelBranchNodesCompartmentEditPart.VISUAL_ID));
+			}
+		}
+		return super.getTargetEditPart(request);
+	}
+
+	/**
+	* @generated
+	*/
+	public class AtomicSequenceFigure extends RectangleFigure {
+
+		/**
+		 * @generated
+		 */
+		private RectangleFigure fAtomicSequenceNodesCompartmentFigure;
+
+		/**
+		 * @generated
+		 */
+		public AtomicSequenceFigure() {
+
+			GridLayout layoutThis = new GridLayout();
+			layoutThis.numColumns = 1;
+			layoutThis.makeColumnsEqualWidth = true;
+			layoutThis.horizontalSpacing = 0;
+			layoutThis.verticalSpacing = 0;
+			layoutThis.marginWidth = 0;
+			layoutThis.marginHeight = 8;
+			this.setLayoutManager(layoutThis);
+
+			this.setFill(false);
+			this.setOutline(false);
+			this.setLineWidth(0);
+			this.setMinimumSize(new Dimension(getMapMode().DPtoLP(202), getMapMode().DPtoLP(83)));
+			createContents();
+		}
+
+		/**
+		 * @generated
+		 */
+		private void createContents() {
+
+			fAtomicSequenceNodesCompartmentFigure = new RectangleFigure();
+			fAtomicSequenceNodesCompartmentFigure.setLineWidth(0);
+			fAtomicSequenceNodesCompartmentFigure.setForegroundColor(ColorConstants.black);
+			fAtomicSequenceNodesCompartmentFigure.setBackgroundColor(ColorConstants.black);
+
+			GridData constraintFAtomicSequenceNodesCompartmentFigure = new GridData();
+			constraintFAtomicSequenceNodesCompartmentFigure.verticalAlignment = GridData.CENTER;
+			constraintFAtomicSequenceNodesCompartmentFigure.horizontalAlignment = GridData.CENTER;
+			constraintFAtomicSequenceNodesCompartmentFigure.horizontalIndent = 0;
+			constraintFAtomicSequenceNodesCompartmentFigure.horizontalSpan = 1;
+			constraintFAtomicSequenceNodesCompartmentFigure.verticalSpan = 1;
+			constraintFAtomicSequenceNodesCompartmentFigure.grabExcessHorizontalSpace = true;
+			constraintFAtomicSequenceNodesCompartmentFigure.grabExcessVerticalSpace = true;
+			this.add(fAtomicSequenceNodesCompartmentFigure, constraintFAtomicSequenceNodesCompartmentFigure);
+
+		}
+
+		/**
+		 * @generated
+		 */
+		public RectangleFigure getAtomicSequenceNodesCompartmentFigure() {
+			return fAtomicSequenceNodesCompartmentFigure;
+		}
+
+	}
 }

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/ComBEEditPartFactory.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/ComBEEditPartFactory.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,259 @@
+package ComBE.diagram.edit.parts;
+
+import org.eclipse.draw2d.FigureUtilities;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Dimension;
+import org.eclipse.draw2d.geometry.Rectangle;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.EditPartFactory;
+import org.eclipse.gef.tools.CellEditorLocator;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.viewers.CellEditor;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.widgets.Text;
+
+/**
+ * @generated
+ */
+public class ComBEEditPartFactory implements EditPartFactory {
+
+	/**
+	* @generated
+	*/
+	public EditPart createEditPart(EditPart context, Object model) {
+		if (model instanceof View) {
+			View view = (View) model;
+			switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view)) {
+
+			case ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.SpecificationEditPart(view);
+
+			case ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.AlternativeBranchEditPart(view);
+
+			case ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.ParallelBranchEditPart(view);
+
+			case ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.AtomicSequenceEditPart(view);
+
+			case ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.StandardNodeEditPart(view);
+
+			case ComBE.diagram.edit.parts.WrappingLabelEditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.WrappingLabelEditPart(view);
+
+			case ComBE.diagram.edit.parts.WrappingLabel2EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.WrappingLabel2EditPart(view);
+
+			case ComBE.diagram.edit.parts.WrappingLabel3EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.WrappingLabel3EditPart(view);
+
+			case ComBE.diagram.edit.parts.StandardNodeTracibilitystatusEditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.StandardNodeTracibilitystatusEditPart(view);
+
+			case ComBE.diagram.edit.parts.StandardNodeOperatorEditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.StandardNodeOperatorEditPart(view);
+
+			case ComBE.diagram.edit.parts.StandardNodeLabelEditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.StandardNodeLabelEditPart(view);
+
+			case ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.EmptyNodeEditPart(view);
+
+			case ComBE.diagram.edit.parts.EmptyNodeLabel2EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.EmptyNodeLabel2EditPart(view);
+
+			case ComBE.diagram.edit.parts.EmptyNodeOperator2EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.EmptyNodeOperator2EditPart(view);
+
+			case ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.StandardNode2EditPart(view);
+
+			case ComBE.diagram.edit.parts.WrappingLabel4EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.WrappingLabel4EditPart(view);
+
+			case ComBE.diagram.edit.parts.WrappingLabel5EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.WrappingLabel5EditPart(view);
+
+			case ComBE.diagram.edit.parts.WrappingLabel6EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.WrappingLabel6EditPart(view);
+
+			case ComBE.diagram.edit.parts.StandardNodeTracibilitystatus2EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.StandardNodeTracibilitystatus2EditPart(view);
+
+			case ComBE.diagram.edit.parts.StandardNodeOperator2EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.StandardNodeOperator2EditPart(view);
+
+			case ComBE.diagram.edit.parts.StandardNodeLabel2EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.StandardNodeLabel2EditPart(view);
+
+			case ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.EmptyNode2EditPart(view);
+
+			case ComBE.diagram.edit.parts.EmptyNodeLabel3EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.EmptyNodeLabel3EditPart(view);
+
+			case ComBE.diagram.edit.parts.EmptyNodeOperator3EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.EmptyNodeOperator3EditPart(view);
+
+			case ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.StandardNode3EditPart(view);
+
+			case ComBE.diagram.edit.parts.WrappingLabel7EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.WrappingLabel7EditPart(view);
+
+			case ComBE.diagram.edit.parts.WrappingLabel8EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.WrappingLabel8EditPart(view);
+
+			case ComBE.diagram.edit.parts.WrappingLabel9EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.WrappingLabel9EditPart(view);
+
+			case ComBE.diagram.edit.parts.StandardNodeTracibilitystatus3EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.StandardNodeTracibilitystatus3EditPart(view);
+
+			case ComBE.diagram.edit.parts.StandardNodeOperator3EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.StandardNodeOperator3EditPart(view);
+
+			case ComBE.diagram.edit.parts.StandardNodeLabel3EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.StandardNodeLabel3EditPart(view);
+
+			case ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.EmptyNode3EditPart(view);
+
+			case ComBE.diagram.edit.parts.EmptyNodeLabelEditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.EmptyNodeLabelEditPart(view);
+
+			case ComBE.diagram.edit.parts.EmptyNodeOperatorEditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.EmptyNodeOperatorEditPart(view);
+
+			case ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart(view);
+
+			case ComBE.diagram.edit.parts.AlternativeBranchAlternativeBranchNodesCompartmentEditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.AlternativeBranchAlternativeBranchNodesCompartmentEditPart(view);
+
+			case ComBE.diagram.edit.parts.ParallelBranchParallelBranchNodesCompartmentEditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.ParallelBranchParallelBranchNodesCompartmentEditPart(view);
+
+			case ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart(view);
+
+			case ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart(view);
+
+			case ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID:
+				return new ComBE.diagram.edit.parts.AtomicSequenceChildEditPart(view);
+
+			}
+		}
+		return createUnrecognizedEditPart(context, model);
+	}
+
+	/**
+	* @generated
+	*/
+	private EditPart createUnrecognizedEditPart(EditPart context, Object model) {
+		// Handle creation of unrecognized child node EditParts here
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	public static CellEditorLocator getTextCellEditorLocator(ITextAwareEditPart source) {
+		if (source.getFigure() instanceof WrappingLabel)
+			return new TextCellEditorLocator((WrappingLabel) source.getFigure());
+		else {
+			return new LabelCellEditorLocator((Label) source.getFigure());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	static private class TextCellEditorLocator implements CellEditorLocator {
+
+		/**
+		* @generated
+		*/
+		private WrappingLabel wrapLabel;
+
+		/**
+		* @generated
+		*/
+		public TextCellEditorLocator(WrappingLabel wrapLabel) {
+			this.wrapLabel = wrapLabel;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getWrapLabel() {
+			return wrapLabel;
+		}
+
+		/**
+		* @generated
+		*/
+		public void relocate(CellEditor celleditor) {
+			Text text = (Text) celleditor.getControl();
+			Rectangle rect = getWrapLabel().getTextBounds().getCopy();
+			getWrapLabel().translateToAbsolute(rect);
+			if (!text.getFont().isDisposed()) {
+				if (getWrapLabel().isTextWrapOn() && getWrapLabel().getText().length() > 0) {
+					rect.setSize(new Dimension(text.computeSize(rect.width, SWT.DEFAULT)));
+				} else {
+					int avr = FigureUtilities.getFontMetrics(text.getFont()).getAverageCharWidth();
+					rect.setSize(new Dimension(text.computeSize(SWT.DEFAULT, SWT.DEFAULT)).expand(avr * 2, 0));
+				}
+			}
+			if (!rect.equals(new Rectangle(text.getBounds()))) {
+				text.setBounds(rect.x, rect.y, rect.width, rect.height);
+			}
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private static class LabelCellEditorLocator implements CellEditorLocator {
+
+		/**
+		* @generated
+		*/
+		private Label label;
+
+		/**
+		* @generated
+		*/
+		public LabelCellEditorLocator(Label label) {
+			this.label = label;
+		}
+
+		/**
+		* @generated
+		*/
+		public Label getLabel() {
+			return label;
+		}
+
+		/**
+		* @generated
+		*/
+		public void relocate(CellEditor celleditor) {
+			Text text = (Text) celleditor.getControl();
+			Rectangle rect = getLabel().getTextBounds().getCopy();
+			getLabel().translateToAbsolute(rect);
+			if (!text.getFont().isDisposed()) {
+				int avr = FigureUtilities.getFontMetrics(text.getFont()).getAverageCharWidth();
+				rect.setSize(new Dimension(text.computeSize(SWT.DEFAULT, SWT.DEFAULT)).expand(avr * 2, 0));
+			}
+			if (!rect.equals(new Rectangle(text.getBounds()))) {
+				text.setBounds(rect.x, rect.y, rect.width, rect.height);
+			}
+		}
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNode2EditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNode2EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,504 @@
+package ComBE.diagram.edit.parts;
+
+import org.eclipse.draw2d.Border;
+import org.eclipse.draw2d.BorderLayout;
+import org.eclipse.draw2d.ColorConstants;
+import org.eclipse.draw2d.GridData;
+import org.eclipse.draw2d.GridLayout;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.MarginBorder;
+import org.eclipse.draw2d.PositionConstants;
+import org.eclipse.draw2d.RectangleFigure;
+import org.eclipse.draw2d.Shape;
+import org.eclipse.draw2d.StackLayout;
+import org.eclipse.draw2d.geometry.Dimension;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gef.editpolicies.LayoutEditPolicy;
+import org.eclipse.gef.editpolicies.NonResizableEditPolicy;
+import org.eclipse.gef.editpolicies.ResizableEditPolicy;
+import org.eclipse.gef.requests.CreateRequest;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure;
+import org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.Font;
+import org.eclipse.swt.widgets.Display;
+
+/**
+ * @generated
+ */
+public class EmptyNode2EditPart extends ShapeNodeEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 3004;
+
+	/**
+	* @generated
+	*/
+	protected IFigure contentPane;
+
+	/**
+	* @generated
+	*/
+	protected IFigure primaryShape;
+
+	/**
+	* @generated
+	*/
+	public EmptyNode2EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new ComBE.diagram.edit.policies.EmptyNode2ItemSemanticEditPolicy());
+		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new ComBE.diagram.edit.policies.EmptyNode2CanonicalEditPolicy());
+		installEditPolicy(EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
+		// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies
+		// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CONNECTION_HANDLES_ROLE);
+	}
+
+	/**
+	* @generated
+	*/
+	protected LayoutEditPolicy createLayoutEditPolicy() {
+		org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy lep = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy() {
+
+			protected EditPolicy createChildEditPolicy(EditPart child) {
+				EditPolicy result = child.getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+				if (result == null) {
+					result = new NonResizableEditPolicy();
+				}
+				return result;
+			}
+
+			protected Command getMoveChildrenCommand(Request request) {
+				return null;
+			}
+
+			protected Command getCreateCommand(CreateRequest request) {
+				return null;
+			}
+		};
+		return lep;
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createNodeShape() {
+		return primaryShape = new EmptyNodeFigure();
+	}
+
+	/**
+	* @generated
+	*/
+	public EmptyNodeFigure getPrimaryShape() {
+		return (EmptyNodeFigure) primaryShape;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean addFixedChild(EditPart childEditPart) {
+		if (childEditPart instanceof ComBE.diagram.edit.parts.EmptyNodeLabel3EditPart) {
+			((ComBE.diagram.edit.parts.EmptyNodeLabel3EditPart) childEditPart).setLabel(getPrimaryShape().getFigureEmptyNodeLabelLabelFigure());
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.EmptyNodeOperator3EditPart) {
+			((ComBE.diagram.edit.parts.EmptyNodeOperator3EditPart) childEditPart).setLabel(getPrimaryShape().getFigureEmptyNodeOperatorLabelFigure());
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean removeFixedChild(EditPart childEditPart) {
+		if (childEditPart instanceof ComBE.diagram.edit.parts.EmptyNodeLabel3EditPart) {
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.EmptyNodeOperator3EditPart) {
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addChildVisual(EditPart childEditPart, int index) {
+		if (addFixedChild(childEditPart)) {
+			return;
+		}
+		super.addChildVisual(childEditPart, -1);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeChildVisual(EditPart childEditPart) {
+		if (removeFixedChild(childEditPart)) {
+			return;
+		}
+		super.removeChildVisual(childEditPart);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure getContentPaneFor(IGraphicalEditPart editPart) {
+		return getContentPane();
+	}
+
+	/**
+	* @generated
+	*/
+	protected NodeFigure createNodePlate() {
+		DefaultSizeNodeFigure result = new DefaultSizeNodeFigure(40, 40);
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public EditPolicy getPrimaryDragEditPolicy() {
+		EditPolicy result = super.getPrimaryDragEditPolicy();
+		if (result instanceof ResizableEditPolicy) {
+			ResizableEditPolicy ep = (ResizableEditPolicy) result;
+			ep.setResizeDirections(PositionConstants.NONE);
+		}
+		return result;
+	}
+
+	/**
+	* Creates figure for this edit part.
+	* 
+	* Body of this method does not depend on settings in generation model
+	* so you may safely remove <i>generated</i> tag and modify it.
+	* 
+	* @generated
+	*/
+	protected NodeFigure createNodeFigure() {
+		NodeFigure figure = createNodePlate();
+		figure.setLayoutManager(new StackLayout());
+		IFigure shape = createNodeShape();
+		figure.add(shape);
+		contentPane = setupContentPane(shape);
+		return figure;
+	}
+
+	/**
+	* Default implementation treats passed figure as content pane.
+	* Respects layout one may have set for generated figure.
+	* @param nodeShape instance of generated figure class
+	* @generated
+	*/
+	protected IFigure setupContentPane(IFigure nodeShape) {
+		if (nodeShape.getLayoutManager() == null) {
+			ConstrainedToolbarLayout layout = new ConstrainedToolbarLayout();
+			layout.setSpacing(5);
+			nodeShape.setLayoutManager(layout);
+		}
+		return nodeShape; // use nodeShape itself as contentPane
+	}
+
+	/**
+	* @generated
+	*/
+	public IFigure getContentPane() {
+		if (contentPane != null) {
+			return contentPane;
+		}
+		return super.getContentPane();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setForegroundColor(Color color) {
+		if (primaryShape != null) {
+			primaryShape.setForegroundColor(color);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setBackgroundColor(Color color) {
+		if (primaryShape != null) {
+			primaryShape.setBackgroundColor(color);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLineWidth(int width) {
+		if (primaryShape instanceof Shape) {
+			((Shape) primaryShape).setLineWidth(width);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLineType(int style) {
+		if (primaryShape instanceof Shape) {
+			((Shape) primaryShape).setLineStyle(style);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public EditPart getPrimaryChildEditPart() {
+		return getChildBySemanticHint(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeLabel3EditPart.VISUAL_ID));
+	}
+
+	/**
+	 * @generated
+	 */
+	public class EmptyNodeFigure extends RectangleFigure {
+
+		/**
+		 * @generated
+		 */
+		private WrappingLabel fFigureEmptyNodeLabelLabelFigure;
+		/**
+		 * @generated
+		 */
+		private WrappingLabel fFigureEmptyNodeOperatorLabelFigure;
+
+		/**
+		 * @generated
+		 */
+		public EmptyNodeFigure() {
+
+			GridLayout layoutThis = new GridLayout();
+			layoutThis.numColumns = 3;
+			layoutThis.makeColumnsEqualWidth = false;
+			layoutThis.horizontalSpacing = 0;
+			layoutThis.verticalSpacing = 0;
+			layoutThis.marginWidth = 0;
+			layoutThis.marginHeight = 0;
+			this.setLayoutManager(layoutThis);
+
+			this.setOutline(false);
+			this.setLineWidth(0);
+			this.setForegroundColor(ColorConstants.black);
+			this.setBackgroundColor(THIS_BACK);
+
+			this.setFont(THIS_FONT);
+
+			this.setBorder(createBorder0());
+			createContents();
+		}
+
+		/**
+		 * @generated
+		 */
+		private void createContents() {
+
+			RectangleFigure left0 = new RectangleFigure();
+			left0.setOutline(false);
+			left0.setLineWidth(0);
+			left0.setPreferredSize(new Dimension(getMapMode().DPtoLP(54), getMapMode().DPtoLP(60)));
+
+			GridData constraintLeft0 = new GridData();
+			constraintLeft0.verticalAlignment = GridData.CENTER;
+			constraintLeft0.horizontalAlignment = GridData.CENTER;
+			constraintLeft0.horizontalIndent = 0;
+			constraintLeft0.horizontalSpan = 1;
+			constraintLeft0.verticalSpan = 1;
+			constraintLeft0.grabExcessHorizontalSpace = true;
+			constraintLeft0.grabExcessVerticalSpace = true;
+			this.add(left0, constraintLeft0);
+
+			RectangleFigure line0 = new RectangleFigure();
+			line0.setOutline(false);
+			line0.setLineWidth(0);
+			line0.setBackgroundColor(ColorConstants.black);
+
+			GridData constraintLine0 = new GridData();
+			constraintLine0.verticalAlignment = GridData.CENTER;
+			constraintLine0.horizontalAlignment = GridData.CENTER;
+			constraintLine0.horizontalIndent = 0;
+			constraintLine0.horizontalSpan = 1;
+			constraintLine0.verticalSpan = 1;
+			constraintLine0.grabExcessHorizontalSpace = false;
+			constraintLine0.grabExcessVerticalSpace = false;
+			constraintLine0.widthHint = 1;
+			constraintLine0.heightHint = 60;
+			this.add(line0, constraintLine0);
+
+			RectangleFigure right0 = new RectangleFigure();
+			right0.setOutline(false);
+			right0.setLineWidth(0);
+			right0.setPreferredSize(new Dimension(getMapMode().DPtoLP(125), getMapMode().DPtoLP(60)));
+
+			GridData constraintRight0 = new GridData();
+			constraintRight0.verticalAlignment = GridData.CENTER;
+			constraintRight0.horizontalAlignment = GridData.CENTER;
+			constraintRight0.horizontalIndent = 0;
+			constraintRight0.horizontalSpan = 1;
+			constraintRight0.verticalSpan = 1;
+			constraintRight0.grabExcessHorizontalSpace = true;
+			constraintRight0.grabExcessVerticalSpace = true;
+			this.add(right0, constraintRight0);
+
+			GridLayout layoutRight0 = new GridLayout();
+			layoutRight0.numColumns = 2;
+			layoutRight0.makeColumnsEqualWidth = false;
+			layoutRight0.horizontalSpacing = 0;
+			layoutRight0.verticalSpacing = 0;
+			layoutRight0.marginWidth = 0;
+			layoutRight0.marginHeight = 0;
+			right0.setLayoutManager(layoutRight0);
+
+			RectangleFigure rightLeft1 = new RectangleFigure();
+			rightLeft1.setFill(false);
+			rightLeft1.setOutline(false);
+			rightLeft1.setLineWidth(0);
+
+			GridData constraintRightLeft1 = new GridData();
+			constraintRightLeft1.verticalAlignment = GridData.CENTER;
+			constraintRightLeft1.horizontalAlignment = GridData.CENTER;
+			constraintRightLeft1.horizontalIndent = 0;
+			constraintRightLeft1.horizontalSpan = 1;
+			constraintRightLeft1.verticalSpan = 1;
+			constraintRightLeft1.grabExcessHorizontalSpace = true;
+			constraintRightLeft1.grabExcessVerticalSpace = true;
+			right0.add(rightLeft1, constraintRightLeft1);
+
+			RectangleFigure rightRight1 = new RectangleFigure();
+			rightRight1.setFill(false);
+			rightRight1.setOutline(false);
+			rightRight1.setLineWidth(0);
+
+			rightRight1.setBorder(new MarginBorder(getMapMode().DPtoLP(1), getMapMode().DPtoLP(0), getMapMode().DPtoLP(20), getMapMode().DPtoLP(0)));
+
+			GridData constraintRightRight1 = new GridData();
+			constraintRightRight1.verticalAlignment = GridData.CENTER;
+			constraintRightRight1.horizontalAlignment = GridData.CENTER;
+			constraintRightRight1.horizontalIndent = 0;
+			constraintRightRight1.horizontalSpan = 1;
+			constraintRightRight1.verticalSpan = 1;
+			constraintRightRight1.grabExcessHorizontalSpace = true;
+			constraintRightRight1.grabExcessVerticalSpace = true;
+			right0.add(rightRight1, constraintRightRight1);
+
+			BorderLayout layoutRightRight1 = new BorderLayout();
+			rightRight1.setLayoutManager(layoutRightRight1);
+
+			RectangleFigure operatorRectangle2 = new RectangleFigure();
+			operatorRectangle2.setFill(false);
+			operatorRectangle2.setOutline(false);
+			operatorRectangle2.setLineWidth(0);
+
+			rightRight1.add(operatorRectangle2, BorderLayout.TOP);
+
+			GridLayout layoutOperatorRectangle2 = new GridLayout();
+			layoutOperatorRectangle2.numColumns = 1;
+			layoutOperatorRectangle2.makeColumnsEqualWidth = true;
+			layoutOperatorRectangle2.horizontalSpacing = 0;
+			layoutOperatorRectangle2.verticalSpacing = 0;
+			layoutOperatorRectangle2.marginWidth = 0;
+			layoutOperatorRectangle2.marginHeight = 0;
+			operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);
+
+			fFigureEmptyNodeOperatorLabelFigure = new WrappingLabel();
+			fFigureEmptyNodeOperatorLabelFigure.setText(" ");
+
+			GridData constraintFFigureEmptyNodeOperatorLabelFigure = new GridData();
+			constraintFFigureEmptyNodeOperatorLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureEmptyNodeOperatorLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureEmptyNodeOperatorLabelFigure.horizontalIndent = 0;
+			constraintFFigureEmptyNodeOperatorLabelFigure.horizontalSpan = 1;
+			constraintFFigureEmptyNodeOperatorLabelFigure.verticalSpan = 1;
+			constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessVerticalSpace = true;
+			operatorRectangle2.add(fFigureEmptyNodeOperatorLabelFigure, constraintFFigureEmptyNodeOperatorLabelFigure);
+
+			RectangleFigure labelRectangle2 = new RectangleFigure();
+			labelRectangle2.setFill(false);
+			labelRectangle2.setOutline(false);
+			labelRectangle2.setLineWidth(0);
+
+			rightRight1.add(labelRectangle2, BorderLayout.BOTTOM);
+
+			GridLayout layoutLabelRectangle2 = new GridLayout();
+			layoutLabelRectangle2.numColumns = 1;
+			layoutLabelRectangle2.makeColumnsEqualWidth = true;
+			layoutLabelRectangle2.horizontalSpacing = 0;
+			layoutLabelRectangle2.verticalSpacing = 0;
+			layoutLabelRectangle2.marginWidth = 0;
+			layoutLabelRectangle2.marginHeight = 0;
+			labelRectangle2.setLayoutManager(layoutLabelRectangle2);
+
+			fFigureEmptyNodeLabelLabelFigure = new WrappingLabel();
+			fFigureEmptyNodeLabelLabelFigure.setText(" ");
+
+			GridData constraintFFigureEmptyNodeLabelLabelFigure = new GridData();
+			constraintFFigureEmptyNodeLabelLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureEmptyNodeLabelLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureEmptyNodeLabelLabelFigure.horizontalIndent = 0;
+			constraintFFigureEmptyNodeLabelLabelFigure.horizontalSpan = 1;
+			constraintFFigureEmptyNodeLabelLabelFigure.verticalSpan = 1;
+			constraintFFigureEmptyNodeLabelLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureEmptyNodeLabelLabelFigure.grabExcessVerticalSpace = true;
+			labelRectangle2.add(fFigureEmptyNodeLabelLabelFigure, constraintFFigureEmptyNodeLabelLabelFigure);
+
+		}
+
+		/**
+		 * @generated
+		 */
+		private Border createBorder0() {
+			ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();
+
+			return result;
+		}
+
+		/**
+		 * @generated
+		 */
+		public WrappingLabel getFigureEmptyNodeLabelLabelFigure() {
+			return fFigureEmptyNodeLabelLabelFigure;
+		}
+
+		/**
+		 * @generated
+		 */
+		public WrappingLabel getFigureEmptyNodeOperatorLabelFigure() {
+			return fFigureEmptyNodeOperatorLabelFigure;
+		}
+
+	}
+
+	/**
+	 * @generated
+	 */
+	static final Color THIS_BACK = new Color(null, 179, 211, 69);
+
+	/**
+	 * @generated
+	 */
+	static final Font THIS_FONT = new Font(Display.getCurrent(), "ComBEFont", 6, SWT.BOLD);
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNode3EditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNode3EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,504 @@
+package ComBE.diagram.edit.parts;
+
+import org.eclipse.draw2d.Border;
+import org.eclipse.draw2d.BorderLayout;
+import org.eclipse.draw2d.ColorConstants;
+import org.eclipse.draw2d.GridData;
+import org.eclipse.draw2d.GridLayout;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.MarginBorder;
+import org.eclipse.draw2d.PositionConstants;
+import org.eclipse.draw2d.RectangleFigure;
+import org.eclipse.draw2d.Shape;
+import org.eclipse.draw2d.StackLayout;
+import org.eclipse.draw2d.geometry.Dimension;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gef.editpolicies.LayoutEditPolicy;
+import org.eclipse.gef.editpolicies.NonResizableEditPolicy;
+import org.eclipse.gef.editpolicies.ResizableEditPolicy;
+import org.eclipse.gef.requests.CreateRequest;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure;
+import org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.Font;
+import org.eclipse.swt.widgets.Display;
+
+/**
+ * @generated
+ */
+public class EmptyNode3EditPart extends ShapeNodeEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 3006;
+
+	/**
+	* @generated
+	*/
+	protected IFigure contentPane;
+
+	/**
+	* @generated
+	*/
+	protected IFigure primaryShape;
+
+	/**
+	* @generated
+	*/
+	public EmptyNode3EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new ComBE.diagram.edit.policies.EmptyNode3ItemSemanticEditPolicy());
+		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new ComBE.diagram.edit.policies.EmptyNode3CanonicalEditPolicy());
+		installEditPolicy(EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
+		// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies
+		// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CONNECTION_HANDLES_ROLE);
+	}
+
+	/**
+	* @generated
+	*/
+	protected LayoutEditPolicy createLayoutEditPolicy() {
+		org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy lep = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy() {
+
+			protected EditPolicy createChildEditPolicy(EditPart child) {
+				EditPolicy result = child.getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+				if (result == null) {
+					result = new NonResizableEditPolicy();
+				}
+				return result;
+			}
+
+			protected Command getMoveChildrenCommand(Request request) {
+				return null;
+			}
+
+			protected Command getCreateCommand(CreateRequest request) {
+				return null;
+			}
+		};
+		return lep;
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createNodeShape() {
+		return primaryShape = new EmptyNodeFigure();
+	}
+
+	/**
+	* @generated
+	*/
+	public EmptyNodeFigure getPrimaryShape() {
+		return (EmptyNodeFigure) primaryShape;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean addFixedChild(EditPart childEditPart) {
+		if (childEditPart instanceof ComBE.diagram.edit.parts.EmptyNodeLabelEditPart) {
+			((ComBE.diagram.edit.parts.EmptyNodeLabelEditPart) childEditPart).setLabel(getPrimaryShape().getFigureEmptyNodeLabelLabelFigure());
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.EmptyNodeOperatorEditPart) {
+			((ComBE.diagram.edit.parts.EmptyNodeOperatorEditPart) childEditPart).setLabel(getPrimaryShape().getFigureEmptyNodeOperatorLabelFigure());
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean removeFixedChild(EditPart childEditPart) {
+		if (childEditPart instanceof ComBE.diagram.edit.parts.EmptyNodeLabelEditPart) {
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.EmptyNodeOperatorEditPart) {
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addChildVisual(EditPart childEditPart, int index) {
+		if (addFixedChild(childEditPart)) {
+			return;
+		}
+		super.addChildVisual(childEditPart, -1);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeChildVisual(EditPart childEditPart) {
+		if (removeFixedChild(childEditPart)) {
+			return;
+		}
+		super.removeChildVisual(childEditPart);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure getContentPaneFor(IGraphicalEditPart editPart) {
+		return getContentPane();
+	}
+
+	/**
+	* @generated
+	*/
+	protected NodeFigure createNodePlate() {
+		DefaultSizeNodeFigure result = new DefaultSizeNodeFigure(40, 40);
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public EditPolicy getPrimaryDragEditPolicy() {
+		EditPolicy result = super.getPrimaryDragEditPolicy();
+		if (result instanceof ResizableEditPolicy) {
+			ResizableEditPolicy ep = (ResizableEditPolicy) result;
+			ep.setResizeDirections(PositionConstants.NONE);
+		}
+		return result;
+	}
+
+	/**
+	* Creates figure for this edit part.
+	* 
+	* Body of this method does not depend on settings in generation model
+	* so you may safely remove <i>generated</i> tag and modify it.
+	* 
+	* @generated
+	*/
+	protected NodeFigure createNodeFigure() {
+		NodeFigure figure = createNodePlate();
+		figure.setLayoutManager(new StackLayout());
+		IFigure shape = createNodeShape();
+		figure.add(shape);
+		contentPane = setupContentPane(shape);
+		return figure;
+	}
+
+	/**
+	* Default implementation treats passed figure as content pane.
+	* Respects layout one may have set for generated figure.
+	* @param nodeShape instance of generated figure class
+	* @generated
+	*/
+	protected IFigure setupContentPane(IFigure nodeShape) {
+		if (nodeShape.getLayoutManager() == null) {
+			ConstrainedToolbarLayout layout = new ConstrainedToolbarLayout();
+			layout.setSpacing(5);
+			nodeShape.setLayoutManager(layout);
+		}
+		return nodeShape; // use nodeShape itself as contentPane
+	}
+
+	/**
+	* @generated
+	*/
+	public IFigure getContentPane() {
+		if (contentPane != null) {
+			return contentPane;
+		}
+		return super.getContentPane();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setForegroundColor(Color color) {
+		if (primaryShape != null) {
+			primaryShape.setForegroundColor(color);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setBackgroundColor(Color color) {
+		if (primaryShape != null) {
+			primaryShape.setBackgroundColor(color);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLineWidth(int width) {
+		if (primaryShape instanceof Shape) {
+			((Shape) primaryShape).setLineWidth(width);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLineType(int style) {
+		if (primaryShape instanceof Shape) {
+			((Shape) primaryShape).setLineStyle(style);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public EditPart getPrimaryChildEditPart() {
+		return getChildBySemanticHint(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeLabelEditPart.VISUAL_ID));
+	}
+
+	/**
+	 * @generated
+	 */
+	public class EmptyNodeFigure extends RectangleFigure {
+
+		/**
+		 * @generated
+		 */
+		private WrappingLabel fFigureEmptyNodeLabelLabelFigure;
+		/**
+		 * @generated
+		 */
+		private WrappingLabel fFigureEmptyNodeOperatorLabelFigure;
+
+		/**
+		 * @generated
+		 */
+		public EmptyNodeFigure() {
+
+			GridLayout layoutThis = new GridLayout();
+			layoutThis.numColumns = 3;
+			layoutThis.makeColumnsEqualWidth = false;
+			layoutThis.horizontalSpacing = 0;
+			layoutThis.verticalSpacing = 0;
+			layoutThis.marginWidth = 0;
+			layoutThis.marginHeight = 0;
+			this.setLayoutManager(layoutThis);
+
+			this.setOutline(false);
+			this.setLineWidth(0);
+			this.setForegroundColor(ColorConstants.black);
+			this.setBackgroundColor(THIS_BACK);
+
+			this.setFont(THIS_FONT);
+
+			this.setBorder(createBorder0());
+			createContents();
+		}
+
+		/**
+		 * @generated
+		 */
+		private void createContents() {
+
+			RectangleFigure left0 = new RectangleFigure();
+			left0.setOutline(false);
+			left0.setLineWidth(0);
+			left0.setPreferredSize(new Dimension(getMapMode().DPtoLP(54), getMapMode().DPtoLP(60)));
+
+			GridData constraintLeft0 = new GridData();
+			constraintLeft0.verticalAlignment = GridData.CENTER;
+			constraintLeft0.horizontalAlignment = GridData.CENTER;
+			constraintLeft0.horizontalIndent = 0;
+			constraintLeft0.horizontalSpan = 1;
+			constraintLeft0.verticalSpan = 1;
+			constraintLeft0.grabExcessHorizontalSpace = true;
+			constraintLeft0.grabExcessVerticalSpace = true;
+			this.add(left0, constraintLeft0);
+
+			RectangleFigure line0 = new RectangleFigure();
+			line0.setOutline(false);
+			line0.setLineWidth(0);
+			line0.setBackgroundColor(ColorConstants.black);
+
+			GridData constraintLine0 = new GridData();
+			constraintLine0.verticalAlignment = GridData.CENTER;
+			constraintLine0.horizontalAlignment = GridData.CENTER;
+			constraintLine0.horizontalIndent = 0;
+			constraintLine0.horizontalSpan = 1;
+			constraintLine0.verticalSpan = 1;
+			constraintLine0.grabExcessHorizontalSpace = false;
+			constraintLine0.grabExcessVerticalSpace = false;
+			constraintLine0.widthHint = 1;
+			constraintLine0.heightHint = 60;
+			this.add(line0, constraintLine0);
+
+			RectangleFigure right0 = new RectangleFigure();
+			right0.setOutline(false);
+			right0.setLineWidth(0);
+			right0.setPreferredSize(new Dimension(getMapMode().DPtoLP(125), getMapMode().DPtoLP(60)));
+
+			GridData constraintRight0 = new GridData();
+			constraintRight0.verticalAlignment = GridData.CENTER;
+			constraintRight0.horizontalAlignment = GridData.CENTER;
+			constraintRight0.horizontalIndent = 0;
+			constraintRight0.horizontalSpan = 1;
+			constraintRight0.verticalSpan = 1;
+			constraintRight0.grabExcessHorizontalSpace = true;
+			constraintRight0.grabExcessVerticalSpace = true;
+			this.add(right0, constraintRight0);
+
+			GridLayout layoutRight0 = new GridLayout();
+			layoutRight0.numColumns = 2;
+			layoutRight0.makeColumnsEqualWidth = false;
+			layoutRight0.horizontalSpacing = 0;
+			layoutRight0.verticalSpacing = 0;
+			layoutRight0.marginWidth = 0;
+			layoutRight0.marginHeight = 0;
+			right0.setLayoutManager(layoutRight0);
+
+			RectangleFigure rightLeft1 = new RectangleFigure();
+			rightLeft1.setFill(false);
+			rightLeft1.setOutline(false);
+			rightLeft1.setLineWidth(0);
+
+			GridData constraintRightLeft1 = new GridData();
+			constraintRightLeft1.verticalAlignment = GridData.CENTER;
+			constraintRightLeft1.horizontalAlignment = GridData.CENTER;
+			constraintRightLeft1.horizontalIndent = 0;
+			constraintRightLeft1.horizontalSpan = 1;
+			constraintRightLeft1.verticalSpan = 1;
+			constraintRightLeft1.grabExcessHorizontalSpace = true;
+			constraintRightLeft1.grabExcessVerticalSpace = true;
+			right0.add(rightLeft1, constraintRightLeft1);
+
+			RectangleFigure rightRight1 = new RectangleFigure();
+			rightRight1.setFill(false);
+			rightRight1.setOutline(false);
+			rightRight1.setLineWidth(0);
+
+			rightRight1.setBorder(new MarginBorder(getMapMode().DPtoLP(1), getMapMode().DPtoLP(0), getMapMode().DPtoLP(20), getMapMode().DPtoLP(0)));
+
+			GridData constraintRightRight1 = new GridData();
+			constraintRightRight1.verticalAlignment = GridData.CENTER;
+			constraintRightRight1.horizontalAlignment = GridData.CENTER;
+			constraintRightRight1.horizontalIndent = 0;
+			constraintRightRight1.horizontalSpan = 1;
+			constraintRightRight1.verticalSpan = 1;
+			constraintRightRight1.grabExcessHorizontalSpace = true;
+			constraintRightRight1.grabExcessVerticalSpace = true;
+			right0.add(rightRight1, constraintRightRight1);
+
+			BorderLayout layoutRightRight1 = new BorderLayout();
+			rightRight1.setLayoutManager(layoutRightRight1);
+
+			RectangleFigure operatorRectangle2 = new RectangleFigure();
+			operatorRectangle2.setFill(false);
+			operatorRectangle2.setOutline(false);
+			operatorRectangle2.setLineWidth(0);
+
+			rightRight1.add(operatorRectangle2, BorderLayout.TOP);
+
+			GridLayout layoutOperatorRectangle2 = new GridLayout();
+			layoutOperatorRectangle2.numColumns = 1;
+			layoutOperatorRectangle2.makeColumnsEqualWidth = true;
+			layoutOperatorRectangle2.horizontalSpacing = 0;
+			layoutOperatorRectangle2.verticalSpacing = 0;
+			layoutOperatorRectangle2.marginWidth = 0;
+			layoutOperatorRectangle2.marginHeight = 0;
+			operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);
+
+			fFigureEmptyNodeOperatorLabelFigure = new WrappingLabel();
+			fFigureEmptyNodeOperatorLabelFigure.setText(" ");
+
+			GridData constraintFFigureEmptyNodeOperatorLabelFigure = new GridData();
+			constraintFFigureEmptyNodeOperatorLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureEmptyNodeOperatorLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureEmptyNodeOperatorLabelFigure.horizontalIndent = 0;
+			constraintFFigureEmptyNodeOperatorLabelFigure.horizontalSpan = 1;
+			constraintFFigureEmptyNodeOperatorLabelFigure.verticalSpan = 1;
+			constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessVerticalSpace = true;
+			operatorRectangle2.add(fFigureEmptyNodeOperatorLabelFigure, constraintFFigureEmptyNodeOperatorLabelFigure);
+
+			RectangleFigure labelRectangle2 = new RectangleFigure();
+			labelRectangle2.setFill(false);
+			labelRectangle2.setOutline(false);
+			labelRectangle2.setLineWidth(0);
+
+			rightRight1.add(labelRectangle2, BorderLayout.BOTTOM);
+
+			GridLayout layoutLabelRectangle2 = new GridLayout();
+			layoutLabelRectangle2.numColumns = 1;
+			layoutLabelRectangle2.makeColumnsEqualWidth = true;
+			layoutLabelRectangle2.horizontalSpacing = 0;
+			layoutLabelRectangle2.verticalSpacing = 0;
+			layoutLabelRectangle2.marginWidth = 0;
+			layoutLabelRectangle2.marginHeight = 0;
+			labelRectangle2.setLayoutManager(layoutLabelRectangle2);
+
+			fFigureEmptyNodeLabelLabelFigure = new WrappingLabel();
+			fFigureEmptyNodeLabelLabelFigure.setText(" ");
+
+			GridData constraintFFigureEmptyNodeLabelLabelFigure = new GridData();
+			constraintFFigureEmptyNodeLabelLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureEmptyNodeLabelLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureEmptyNodeLabelLabelFigure.horizontalIndent = 0;
+			constraintFFigureEmptyNodeLabelLabelFigure.horizontalSpan = 1;
+			constraintFFigureEmptyNodeLabelLabelFigure.verticalSpan = 1;
+			constraintFFigureEmptyNodeLabelLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureEmptyNodeLabelLabelFigure.grabExcessVerticalSpace = true;
+			labelRectangle2.add(fFigureEmptyNodeLabelLabelFigure, constraintFFigureEmptyNodeLabelLabelFigure);
+
+		}
+
+		/**
+		 * @generated
+		 */
+		private Border createBorder0() {
+			ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();
+
+			return result;
+		}
+
+		/**
+		 * @generated
+		 */
+		public WrappingLabel getFigureEmptyNodeLabelLabelFigure() {
+			return fFigureEmptyNodeLabelLabelFigure;
+		}
+
+		/**
+		 * @generated
+		 */
+		public WrappingLabel getFigureEmptyNodeOperatorLabelFigure() {
+			return fFigureEmptyNodeOperatorLabelFigure;
+		}
+
+	}
+
+	/**
+	 * @generated
+	 */
+	static final Color THIS_BACK = new Color(null, 179, 211, 69);
+
+	/**
+	 * @generated
+	 */
+	static final Font THIS_FONT = new Font(Display.getCurrent(), "ComBEFont", 6, SWT.BOLD);
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeEditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeEditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,504 @@
+package ComBE.diagram.edit.parts;
+
+import org.eclipse.draw2d.Border;
+import org.eclipse.draw2d.BorderLayout;
+import org.eclipse.draw2d.ColorConstants;
+import org.eclipse.draw2d.GridData;
+import org.eclipse.draw2d.GridLayout;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.MarginBorder;
+import org.eclipse.draw2d.PositionConstants;
+import org.eclipse.draw2d.RectangleFigure;
+import org.eclipse.draw2d.Shape;
+import org.eclipse.draw2d.StackLayout;
+import org.eclipse.draw2d.geometry.Dimension;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gef.editpolicies.LayoutEditPolicy;
+import org.eclipse.gef.editpolicies.NonResizableEditPolicy;
+import org.eclipse.gef.editpolicies.ResizableEditPolicy;
+import org.eclipse.gef.requests.CreateRequest;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure;
+import org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.Font;
+import org.eclipse.swt.widgets.Display;
+
+/**
+ * @generated
+ */
+public class EmptyNodeEditPart extends ShapeNodeEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 3002;
+
+	/**
+	* @generated
+	*/
+	protected IFigure contentPane;
+
+	/**
+	* @generated
+	*/
+	protected IFigure primaryShape;
+
+	/**
+	* @generated
+	*/
+	public EmptyNodeEditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new ComBE.diagram.edit.policies.EmptyNodeItemSemanticEditPolicy());
+		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new ComBE.diagram.edit.policies.EmptyNodeCanonicalEditPolicy());
+		installEditPolicy(EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
+		// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies
+		// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CONNECTION_HANDLES_ROLE);
+	}
+
+	/**
+	* @generated
+	*/
+	protected LayoutEditPolicy createLayoutEditPolicy() {
+		org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy lep = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy() {
+
+			protected EditPolicy createChildEditPolicy(EditPart child) {
+				EditPolicy result = child.getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+				if (result == null) {
+					result = new NonResizableEditPolicy();
+				}
+				return result;
+			}
+
+			protected Command getMoveChildrenCommand(Request request) {
+				return null;
+			}
+
+			protected Command getCreateCommand(CreateRequest request) {
+				return null;
+			}
+		};
+		return lep;
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createNodeShape() {
+		return primaryShape = new EmptyNodeFigure();
+	}
+
+	/**
+	* @generated
+	*/
+	public EmptyNodeFigure getPrimaryShape() {
+		return (EmptyNodeFigure) primaryShape;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean addFixedChild(EditPart childEditPart) {
+		if (childEditPart instanceof ComBE.diagram.edit.parts.EmptyNodeLabel2EditPart) {
+			((ComBE.diagram.edit.parts.EmptyNodeLabel2EditPart) childEditPart).setLabel(getPrimaryShape().getFigureEmptyNodeLabelLabelFigure());
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.EmptyNodeOperator2EditPart) {
+			((ComBE.diagram.edit.parts.EmptyNodeOperator2EditPart) childEditPart).setLabel(getPrimaryShape().getFigureEmptyNodeOperatorLabelFigure());
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean removeFixedChild(EditPart childEditPart) {
+		if (childEditPart instanceof ComBE.diagram.edit.parts.EmptyNodeLabel2EditPart) {
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.EmptyNodeOperator2EditPart) {
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addChildVisual(EditPart childEditPart, int index) {
+		if (addFixedChild(childEditPart)) {
+			return;
+		}
+		super.addChildVisual(childEditPart, -1);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeChildVisual(EditPart childEditPart) {
+		if (removeFixedChild(childEditPart)) {
+			return;
+		}
+		super.removeChildVisual(childEditPart);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure getContentPaneFor(IGraphicalEditPart editPart) {
+		return getContentPane();
+	}
+
+	/**
+	* @generated
+	*/
+	protected NodeFigure createNodePlate() {
+		DefaultSizeNodeFigure result = new DefaultSizeNodeFigure(40, 40);
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public EditPolicy getPrimaryDragEditPolicy() {
+		EditPolicy result = super.getPrimaryDragEditPolicy();
+		if (result instanceof ResizableEditPolicy) {
+			ResizableEditPolicy ep = (ResizableEditPolicy) result;
+			ep.setResizeDirections(PositionConstants.NONE);
+		}
+		return result;
+	}
+
+	/**
+	* Creates figure for this edit part.
+	* 
+	* Body of this method does not depend on settings in generation model
+	* so you may safely remove <i>generated</i> tag and modify it.
+	* 
+	* @generated
+	*/
+	protected NodeFigure createNodeFigure() {
+		NodeFigure figure = createNodePlate();
+		figure.setLayoutManager(new StackLayout());
+		IFigure shape = createNodeShape();
+		figure.add(shape);
+		contentPane = setupContentPane(shape);
+		return figure;
+	}
+
+	/**
+	* Default implementation treats passed figure as content pane.
+	* Respects layout one may have set for generated figure.
+	* @param nodeShape instance of generated figure class
+	* @generated
+	*/
+	protected IFigure setupContentPane(IFigure nodeShape) {
+		if (nodeShape.getLayoutManager() == null) {
+			ConstrainedToolbarLayout layout = new ConstrainedToolbarLayout();
+			layout.setSpacing(5);
+			nodeShape.setLayoutManager(layout);
+		}
+		return nodeShape; // use nodeShape itself as contentPane
+	}
+
+	/**
+	* @generated
+	*/
+	public IFigure getContentPane() {
+		if (contentPane != null) {
+			return contentPane;
+		}
+		return super.getContentPane();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setForegroundColor(Color color) {
+		if (primaryShape != null) {
+			primaryShape.setForegroundColor(color);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setBackgroundColor(Color color) {
+		if (primaryShape != null) {
+			primaryShape.setBackgroundColor(color);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLineWidth(int width) {
+		if (primaryShape instanceof Shape) {
+			((Shape) primaryShape).setLineWidth(width);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLineType(int style) {
+		if (primaryShape instanceof Shape) {
+			((Shape) primaryShape).setLineStyle(style);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public EditPart getPrimaryChildEditPart() {
+		return getChildBySemanticHint(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeLabel2EditPart.VISUAL_ID));
+	}
+
+	/**
+	 * @generated
+	 */
+	public class EmptyNodeFigure extends RectangleFigure {
+
+		/**
+		 * @generated
+		 */
+		private WrappingLabel fFigureEmptyNodeLabelLabelFigure;
+		/**
+		 * @generated
+		 */
+		private WrappingLabel fFigureEmptyNodeOperatorLabelFigure;
+
+		/**
+		 * @generated
+		 */
+		public EmptyNodeFigure() {
+
+			GridLayout layoutThis = new GridLayout();
+			layoutThis.numColumns = 3;
+			layoutThis.makeColumnsEqualWidth = false;
+			layoutThis.horizontalSpacing = 0;
+			layoutThis.verticalSpacing = 0;
+			layoutThis.marginWidth = 0;
+			layoutThis.marginHeight = 0;
+			this.setLayoutManager(layoutThis);
+
+			this.setOutline(false);
+			this.setLineWidth(0);
+			this.setForegroundColor(ColorConstants.black);
+			this.setBackgroundColor(THIS_BACK);
+
+			this.setFont(THIS_FONT);
+
+			this.setBorder(createBorder0());
+			createContents();
+		}
+
+		/**
+		 * @generated
+		 */
+		private void createContents() {
+
+			RectangleFigure left0 = new RectangleFigure();
+			left0.setOutline(false);
+			left0.setLineWidth(0);
+			left0.setPreferredSize(new Dimension(getMapMode().DPtoLP(54), getMapMode().DPtoLP(60)));
+
+			GridData constraintLeft0 = new GridData();
+			constraintLeft0.verticalAlignment = GridData.CENTER;
+			constraintLeft0.horizontalAlignment = GridData.CENTER;
+			constraintLeft0.horizontalIndent = 0;
+			constraintLeft0.horizontalSpan = 1;
+			constraintLeft0.verticalSpan = 1;
+			constraintLeft0.grabExcessHorizontalSpace = true;
+			constraintLeft0.grabExcessVerticalSpace = true;
+			this.add(left0, constraintLeft0);
+
+			RectangleFigure line0 = new RectangleFigure();
+			line0.setOutline(false);
+			line0.setLineWidth(0);
+			line0.setBackgroundColor(ColorConstants.black);
+
+			GridData constraintLine0 = new GridData();
+			constraintLine0.verticalAlignment = GridData.CENTER;
+			constraintLine0.horizontalAlignment = GridData.CENTER;
+			constraintLine0.horizontalIndent = 0;
+			constraintLine0.horizontalSpan = 1;
+			constraintLine0.verticalSpan = 1;
+			constraintLine0.grabExcessHorizontalSpace = false;
+			constraintLine0.grabExcessVerticalSpace = false;
+			constraintLine0.widthHint = 1;
+			constraintLine0.heightHint = 60;
+			this.add(line0, constraintLine0);
+
+			RectangleFigure right0 = new RectangleFigure();
+			right0.setOutline(false);
+			right0.setLineWidth(0);
+			right0.setPreferredSize(new Dimension(getMapMode().DPtoLP(125), getMapMode().DPtoLP(60)));
+
+			GridData constraintRight0 = new GridData();
+			constraintRight0.verticalAlignment = GridData.CENTER;
+			constraintRight0.horizontalAlignment = GridData.CENTER;
+			constraintRight0.horizontalIndent = 0;
+			constraintRight0.horizontalSpan = 1;
+			constraintRight0.verticalSpan = 1;
+			constraintRight0.grabExcessHorizontalSpace = true;
+			constraintRight0.grabExcessVerticalSpace = true;
+			this.add(right0, constraintRight0);
+
+			GridLayout layoutRight0 = new GridLayout();
+			layoutRight0.numColumns = 2;
+			layoutRight0.makeColumnsEqualWidth = false;
+			layoutRight0.horizontalSpacing = 0;
+			layoutRight0.verticalSpacing = 0;
+			layoutRight0.marginWidth = 0;
+			layoutRight0.marginHeight = 0;
+			right0.setLayoutManager(layoutRight0);
+
+			RectangleFigure rightLeft1 = new RectangleFigure();
+			rightLeft1.setFill(false);
+			rightLeft1.setOutline(false);
+			rightLeft1.setLineWidth(0);
+
+			GridData constraintRightLeft1 = new GridData();
+			constraintRightLeft1.verticalAlignment = GridData.CENTER;
+			constraintRightLeft1.horizontalAlignment = GridData.CENTER;
+			constraintRightLeft1.horizontalIndent = 0;
+			constraintRightLeft1.horizontalSpan = 1;
+			constraintRightLeft1.verticalSpan = 1;
+			constraintRightLeft1.grabExcessHorizontalSpace = true;
+			constraintRightLeft1.grabExcessVerticalSpace = true;
+			right0.add(rightLeft1, constraintRightLeft1);
+
+			RectangleFigure rightRight1 = new RectangleFigure();
+			rightRight1.setFill(false);
+			rightRight1.setOutline(false);
+			rightRight1.setLineWidth(0);
+
+			rightRight1.setBorder(new MarginBorder(getMapMode().DPtoLP(1), getMapMode().DPtoLP(0), getMapMode().DPtoLP(20), getMapMode().DPtoLP(0)));
+
+			GridData constraintRightRight1 = new GridData();
+			constraintRightRight1.verticalAlignment = GridData.CENTER;
+			constraintRightRight1.horizontalAlignment = GridData.CENTER;
+			constraintRightRight1.horizontalIndent = 0;
+			constraintRightRight1.horizontalSpan = 1;
+			constraintRightRight1.verticalSpan = 1;
+			constraintRightRight1.grabExcessHorizontalSpace = true;
+			constraintRightRight1.grabExcessVerticalSpace = true;
+			right0.add(rightRight1, constraintRightRight1);
+
+			BorderLayout layoutRightRight1 = new BorderLayout();
+			rightRight1.setLayoutManager(layoutRightRight1);
+
+			RectangleFigure operatorRectangle2 = new RectangleFigure();
+			operatorRectangle2.setFill(false);
+			operatorRectangle2.setOutline(false);
+			operatorRectangle2.setLineWidth(0);
+
+			rightRight1.add(operatorRectangle2, BorderLayout.TOP);
+
+			GridLayout layoutOperatorRectangle2 = new GridLayout();
+			layoutOperatorRectangle2.numColumns = 1;
+			layoutOperatorRectangle2.makeColumnsEqualWidth = true;
+			layoutOperatorRectangle2.horizontalSpacing = 0;
+			layoutOperatorRectangle2.verticalSpacing = 0;
+			layoutOperatorRectangle2.marginWidth = 0;
+			layoutOperatorRectangle2.marginHeight = 0;
+			operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);
+
+			fFigureEmptyNodeOperatorLabelFigure = new WrappingLabel();
+			fFigureEmptyNodeOperatorLabelFigure.setText(" ");
+
+			GridData constraintFFigureEmptyNodeOperatorLabelFigure = new GridData();
+			constraintFFigureEmptyNodeOperatorLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureEmptyNodeOperatorLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureEmptyNodeOperatorLabelFigure.horizontalIndent = 0;
+			constraintFFigureEmptyNodeOperatorLabelFigure.horizontalSpan = 1;
+			constraintFFigureEmptyNodeOperatorLabelFigure.verticalSpan = 1;
+			constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureEmptyNodeOperatorLabelFigure.grabExcessVerticalSpace = true;
+			operatorRectangle2.add(fFigureEmptyNodeOperatorLabelFigure, constraintFFigureEmptyNodeOperatorLabelFigure);
+
+			RectangleFigure labelRectangle2 = new RectangleFigure();
+			labelRectangle2.setFill(false);
+			labelRectangle2.setOutline(false);
+			labelRectangle2.setLineWidth(0);
+
+			rightRight1.add(labelRectangle2, BorderLayout.BOTTOM);
+
+			GridLayout layoutLabelRectangle2 = new GridLayout();
+			layoutLabelRectangle2.numColumns = 1;
+			layoutLabelRectangle2.makeColumnsEqualWidth = true;
+			layoutLabelRectangle2.horizontalSpacing = 0;
+			layoutLabelRectangle2.verticalSpacing = 0;
+			layoutLabelRectangle2.marginWidth = 0;
+			layoutLabelRectangle2.marginHeight = 0;
+			labelRectangle2.setLayoutManager(layoutLabelRectangle2);
+
+			fFigureEmptyNodeLabelLabelFigure = new WrappingLabel();
+			fFigureEmptyNodeLabelLabelFigure.setText(" ");
+
+			GridData constraintFFigureEmptyNodeLabelLabelFigure = new GridData();
+			constraintFFigureEmptyNodeLabelLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureEmptyNodeLabelLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureEmptyNodeLabelLabelFigure.horizontalIndent = 0;
+			constraintFFigureEmptyNodeLabelLabelFigure.horizontalSpan = 1;
+			constraintFFigureEmptyNodeLabelLabelFigure.verticalSpan = 1;
+			constraintFFigureEmptyNodeLabelLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureEmptyNodeLabelLabelFigure.grabExcessVerticalSpace = true;
+			labelRectangle2.add(fFigureEmptyNodeLabelLabelFigure, constraintFFigureEmptyNodeLabelLabelFigure);
+
+		}
+
+		/**
+		 * @generated
+		 */
+		private Border createBorder0() {
+			ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();
+
+			return result;
+		}
+
+		/**
+		 * @generated
+		 */
+		public WrappingLabel getFigureEmptyNodeLabelLabelFigure() {
+			return fFigureEmptyNodeLabelLabelFigure;
+		}
+
+		/**
+		 * @generated
+		 */
+		public WrappingLabel getFigureEmptyNodeOperatorLabelFigure() {
+			return fFigureEmptyNodeOperatorLabelFigure;
+		}
+
+	}
+
+	/**
+	 * @generated
+	 */
+	static final Color THIS_BACK = new Color(null, 179, 211, 69);
+
+	/**
+	 * @generated
+	 */
+	static final Font THIS_FONT = new Font(Display.getCurrent(), "ComBEFont", 6, SWT.BOLD);
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeLabel2EditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeLabel2EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,519 @@
+package ComBE.diagram.edit.parts;
+
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * @generated
+ */
+public class EmptyNodeLabel2EditPart extends CompartmentEditPart implements ITextAwareEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5021;
+
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+
+	/**
+	* @generated
+	*/
+	private IParser parser;
+
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public EmptyNodeLabel2EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelText() {
+		String text = null;
+		EObject parserElement = getParserElement();
+		if (parserElement != null && getParser() != null) {
+			text = getParser().getPrintString(new EObjectAdapter(parserElement), getParserOptions().intValue());
+		}
+		if (text == null || text.length() == 0) {
+			text = defaultText;
+		}
+		return text;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return getParser() != null;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3002, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeLabel2EditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeLabel3EditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeLabel3EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,519 @@
+package ComBE.diagram.edit.parts;
+
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * @generated
+ */
+public class EmptyNodeLabel3EditPart extends CompartmentEditPart implements ITextAwareEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5023;
+
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+
+	/**
+	* @generated
+	*/
+	private IParser parser;
+
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public EmptyNodeLabel3EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelText() {
+		String text = null;
+		EObject parserElement = getParserElement();
+		if (parserElement != null && getParser() != null) {
+			text = getParser().getPrintString(new EObjectAdapter(parserElement), getParserOptions().intValue());
+		}
+		if (text == null || text.length() == 0) {
+			text = defaultText;
+		}
+		return text;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return getParser() != null;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3004, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeLabel3EditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeLabelEditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeLabelEditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,519 @@
+package ComBE.diagram.edit.parts;
+
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * @generated
+ */
+public class EmptyNodeLabelEditPart extends CompartmentEditPart implements ITextAwareEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5019;
+
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+
+	/**
+	* @generated
+	*/
+	private IParser parser;
+
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public EmptyNodeLabelEditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelText() {
+		String text = null;
+		EObject parserElement = getParserElement();
+		if (parserElement != null && getParser() != null) {
+			text = getParser().getPrintString(new EObjectAdapter(parserElement), getParserOptions().intValue());
+		}
+		if (text == null || text.length() == 0) {
+			text = defaultText;
+		}
+		return text;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return getParser() != null;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3006, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeLabelEditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeOperator2EditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeOperator2EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,519 @@
+package ComBE.diagram.edit.parts;
+
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * @generated
+ */
+public class EmptyNodeOperator2EditPart extends CompartmentEditPart implements ITextAwareEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5022;
+
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+
+	/**
+	* @generated
+	*/
+	private IParser parser;
+
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public EmptyNodeOperator2EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelText() {
+		String text = null;
+		EObject parserElement = getParserElement();
+		if (parserElement != null && getParser() != null) {
+			text = getParser().getPrintString(new EObjectAdapter(parserElement), getParserOptions().intValue());
+		}
+		if (text == null || text.length() == 0) {
+			text = defaultText;
+		}
+		return text;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return getParser() != null;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3002, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeOperator2EditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeOperator3EditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeOperator3EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,519 @@
+package ComBE.diagram.edit.parts;
+
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * @generated
+ */
+public class EmptyNodeOperator3EditPart extends CompartmentEditPart implements ITextAwareEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5024;
+
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+
+	/**
+	* @generated
+	*/
+	private IParser parser;
+
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public EmptyNodeOperator3EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelText() {
+		String text = null;
+		EObject parserElement = getParserElement();
+		if (parserElement != null && getParser() != null) {
+			text = getParser().getPrintString(new EObjectAdapter(parserElement), getParserOptions().intValue());
+		}
+		if (text == null || text.length() == 0) {
+			text = defaultText;
+		}
+		return text;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return getParser() != null;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3004, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeOperator3EditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeOperatorEditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/EmptyNodeOperatorEditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,519 @@
+package ComBE.diagram.edit.parts;
+
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * @generated
+ */
+public class EmptyNodeOperatorEditPart extends CompartmentEditPart implements ITextAwareEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5020;
+
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+
+	/**
+	* @generated
+	*/
+	private IParser parser;
+
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public EmptyNodeOperatorEditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelText() {
+		String text = null;
+		EObject parserElement = getParserElement();
+		if (parserElement != null && getParser() != null) {
+			text = getParser().getPrintString(new EObjectAdapter(parserElement), getParserOptions().intValue());
+		}
+		if (text == null || text.length() == 0) {
+			text = defaultText;
+		}
+		return text;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return getParser() != null;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3006, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeOperatorEditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/ParallelBranchChildrenEditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/ParallelBranchChildrenEditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,82 @@
+package ComBE.diagram.edit.parts;
+
+import org.eclipse.draw2d.ColorConstants;
+import org.eclipse.draw2d.Connection;
+import org.eclipse.draw2d.PolylineDecoration;
+import org.eclipse.draw2d.RotatableDecoration;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ConnectionNodeEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITreeBranchEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class ParallelBranchChildrenEditPart extends ConnectionNodeEditPart implements ITreeBranchEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 4002;
+
+	/**
+	* @generated
+	*/
+	public ParallelBranchChildrenEditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new ComBE.diagram.edit.policies.ParallelBranchChildrenItemSemanticEditPolicy());
+	}
+
+	/**
+	* Creates figure for this edit part.
+	* 
+	* Body of this method does not depend on settings in generation model
+	* so you may safely remove <i>generated</i> tag and modify it.
+	* 
+	* @generated
+	*/
+
+	protected Connection createConnectionFigure() {
+		return new ComBEConnectionFigure();
+	}
+
+	/**
+	* @generated
+	*/
+	public ComBEConnectionFigure getPrimaryShape() {
+		return (ComBEConnectionFigure) getFigure();
+	}
+
+	/**
+	 * @generated
+	 */
+	public class ComBEConnectionFigure extends PolylineConnectionEx {
+
+		/**
+		 * @generated
+		 */
+		public ComBEConnectionFigure() {
+			this.setForegroundColor(ColorConstants.black);
+
+			setTargetDecoration(createTargetDecoration());
+		}
+
+		/**
+		 * @generated
+		 */
+		private RotatableDecoration createTargetDecoration() {
+			PolylineDecoration df = new PolylineDecoration();
+			return df;
+		}
+
+	}
+
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/ParallelBranchEditPart.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/ParallelBranchEditPart.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/ParallelBranchEditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,9 +1,38 @@
 package ComBE.diagram.edit.parts;
 
+import java.util.ArrayList;
+import java.util.LinkedList;
+import java.util.List;
+import org.eclipse.draw2d.ColorConstants;
+import org.eclipse.draw2d.GridData;
+import org.eclipse.draw2d.GridLayout;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.PositionConstants;
+import org.eclipse.draw2d.RectangleFigure;
+import org.eclipse.draw2d.Shape;
+import org.eclipse.draw2d.StackLayout;
+import org.eclipse.draw2d.geometry.Dimension;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gef.editpolicies.LayoutEditPolicy;
+import org.eclipse.gef.editpolicies.NonResizableEditPolicy;
+import org.eclipse.gef.editpolicies.ResizableEditPolicy;
+import org.eclipse.gef.requests.CreateRequest;
+import org.eclipse.gmf.runtime.diagram.core.edithelpers.CreateElementRequestAdapter;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
 import org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CreationEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
+import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewAndElementRequest;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+import org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure;
 import org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure;
 import org.eclipse.gmf.runtime.notation.View;
 
+import org.eclipse.swt.graphics.Color;
 import ComBE.diagram.customCode.CustomCreateNodePlate;
 
 /**
@@ -12,9 +41,370 @@
 public class ParallelBranchEditPart extends ShapeNodeEditPart {
 
 	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 2002;
+	/**
+	* @generated
+	*/
+	protected IFigure contentPane;
+	/**
+	* @generated
+	*/
+	protected IFigure primaryShape;
+
+	/**
+	* @generated
+	*/
+	public ParallelBranchEditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		installEditPolicy(EditPolicyRoles.CREATION_ROLE, new CreationEditPolicy());
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new ComBE.diagram.edit.policies.ParallelBranchItemSemanticEditPolicy());
+		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new ComBE.diagram.edit.policies.ParallelBranchCanonicalEditPolicy());
+		installEditPolicy(EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
+		// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies
+		// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CONNECTION_HANDLES_ROLE);
+	}
+
+	/**
+	* @generated
+	*/
+	protected LayoutEditPolicy createLayoutEditPolicy() {
+		org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy lep = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy() {
+
+			protected EditPolicy createChildEditPolicy(EditPart child) {
+				EditPolicy result = child.getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+				if (result == null) {
+					result = new NonResizableEditPolicy();
+				}
+				return result;
+			}
+
+			protected Command getMoveChildrenCommand(Request request) {
+				return null;
+			}
+
+			protected Command getCreateCommand(CreateRequest request) {
+				return null;
+			}
+		};
+		return lep;
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createNodeShape() {
+		return primaryShape = new ParallelBranchFigure();
+	}
+
+	/**
+	* @generated
+	*/
+	public ParallelBranchFigure getPrimaryShape() {
+		return (ParallelBranchFigure) primaryShape;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean addFixedChild(EditPart childEditPart) {
+		if (childEditPart instanceof ComBE.diagram.edit.parts.AlternativeBranchAlternativeBranchNodesCompartmentEditPart) {
+			IFigure pane = getPrimaryShape().getParallelBranchNodesCompartmentFigure();
+			setupContentPane(pane); // FIXME each comparment should handle his content pane in his own way 
+			pane.add(((ComBE.diagram.edit.parts.AlternativeBranchAlternativeBranchNodesCompartmentEditPart) childEditPart).getFigure());
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean removeFixedChild(EditPart childEditPart) {
+		if (childEditPart instanceof ComBE.diagram.edit.parts.AlternativeBranchAlternativeBranchNodesCompartmentEditPart) {
+			IFigure pane = getPrimaryShape().getParallelBranchNodesCompartmentFigure();
+			setupContentPane(pane); // FIXME each comparment should handle his content pane in his own way 
+			pane.remove(((ComBE.diagram.edit.parts.AlternativeBranchAlternativeBranchNodesCompartmentEditPart) childEditPart).getFigure());
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addChildVisual(EditPart childEditPart, int index) {
+		if (addFixedChild(childEditPart)) {
+			return;
+		}
+		super.addChildVisual(childEditPart, -1);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeChildVisual(EditPart childEditPart) {
+		if (removeFixedChild(childEditPart)) {
+			return;
+		}
+		super.removeChildVisual(childEditPart);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure getContentPaneFor(IGraphicalEditPart editPart) {
+		if (editPart instanceof ComBE.diagram.edit.parts.AlternativeBranchAlternativeBranchNodesCompartmentEditPart) {
+			return getPrimaryShape().getParallelBranchNodesCompartmentFigure();
+		}
+		return getContentPane();
+	}
+
+	/**
 	* @generated NOT
 	*/
 	protected NodeFigure createNodePlate() {
 		return CustomCreateNodePlate.createNodePlate();
 	}
+
+	/**
+	* @generated
+	*/
+	public EditPolicy getPrimaryDragEditPolicy() {
+		EditPolicy result = super.getPrimaryDragEditPolicy();
+		if (result instanceof ResizableEditPolicy) {
+			ResizableEditPolicy ep = (ResizableEditPolicy) result;
+			ep.setResizeDirections(PositionConstants.NONE);
+		}
+		return result;
+	}
+
+	/**
+	* Creates figure for this edit part.
+	* 
+	* Body of this method does not depend on settings in generation model
+	* so you may safely remove <i>generated</i> tag and modify it.
+	* 
+	* @generated
+	*/
+	protected NodeFigure createNodeFigure() {
+		NodeFigure figure = createNodePlate();
+		figure.setLayoutManager(new StackLayout());
+		IFigure shape = createNodeShape();
+		figure.add(shape);
+		contentPane = setupContentPane(shape);
+		return figure;
+	}
+
+	/**
+	* Default implementation treats passed figure as content pane.
+	* Respects layout one may have set for generated figure.
+	* @param nodeShape instance of generated figure class
+	* @generated
+	*/
+	protected IFigure setupContentPane(IFigure nodeShape) {
+		if (nodeShape.getLayoutManager() == null) {
+			ConstrainedToolbarLayout layout = new ConstrainedToolbarLayout();
+			layout.setSpacing(5);
+			nodeShape.setLayoutManager(layout);
+		}
+		return nodeShape; // use nodeShape itself as contentPane
+	}
+
+	/**
+	* @generated
+	*/
+	public IFigure getContentPane() {
+		if (contentPane != null) {
+			return contentPane;
+		}
+		return super.getContentPane();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setForegroundColor(Color color) {
+		if (primaryShape != null) {
+			primaryShape.setForegroundColor(color);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setBackgroundColor(Color color) {
+		if (primaryShape != null) {
+			primaryShape.setBackgroundColor(color);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLineWidth(int width) {
+		if (primaryShape instanceof Shape) {
+			((Shape) primaryShape).setLineWidth(width);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLineType(int style) {
+		if (primaryShape instanceof Shape) {
+			((Shape) primaryShape).setLineStyle(style);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public List<IElementType> getMARelTypesOnSource() {
+		ArrayList<IElementType> types = new ArrayList<IElementType>(1);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002);
+		return types;
+	}
+
+	/**
+	* @generated
+	*/
+	public List<IElementType> getMARelTypesOnSourceAndTarget(IGraphicalEditPart targetEditPart) {
+		LinkedList<IElementType> types = new LinkedList<IElementType>();
+		if (targetEditPart instanceof ComBE.diagram.edit.parts.AlternativeBranchEditPart) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002);
+		}
+		if (targetEditPart instanceof ComBE.diagram.edit.parts.ParallelBranchEditPart) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002);
+		}
+		if (targetEditPart instanceof ComBE.diagram.edit.parts.AtomicSequenceEditPart) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002);
+		}
+		return types;
+	}
+
+	/**
+	* @generated
+	*/
+	public List<IElementType> getMATypesForTarget(IElementType relationshipType) {
+		LinkedList<IElementType> types = new LinkedList<IElementType>();
+		if (relationshipType == ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranch_2001);
+			types.add(ComBE.diagram.providers.ComBEElementTypes.ParallelBranch_2002);
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AtomicSequence_2003);
+		}
+		return types;
+	}
+
+	/**
+	* @generated
+	*/
+	public List<IElementType> getMARelTypesOnTarget() {
+		ArrayList<IElementType> types = new ArrayList<IElementType>(3);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003);
+		return types;
+	}
+
+	/**
+	* @generated
+	*/
+	public List<IElementType> getMATypesForSource(IElementType relationshipType) {
+		LinkedList<IElementType> types = new LinkedList<IElementType>();
+		if (relationshipType == ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranch_2001);
+		} else if (relationshipType == ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.ParallelBranch_2002);
+		} else if (relationshipType == ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003) {
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AtomicSequence_2003);
+		}
+		return types;
+	}
+
+	/**
+	* @generated
+	*/
+	public EditPart getTargetEditPart(Request request) {
+		if (request instanceof CreateViewAndElementRequest) {
+			CreateElementRequestAdapter adapter = ((CreateViewAndElementRequest) request).getViewAndElementDescriptor().getCreateElementRequestAdapter();
+			IElementType type = (IElementType) adapter.getAdapter(IElementType.class);
+			if (type == ComBE.diagram.providers.ComBEElementTypes.StandardNode_3003) {
+				return getChildBySemanticHint(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchAlternativeBranchNodesCompartmentEditPart.VISUAL_ID));
+			}
+			if (type == ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3004) {
+				return getChildBySemanticHint(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchAlternativeBranchNodesCompartmentEditPart.VISUAL_ID));
+			}
+		}
+		return super.getTargetEditPart(request);
+	}
+
+	/**
+	* @generated
+	*/
+	public class ParallelBranchFigure extends RectangleFigure {
+
+		/**
+		 * @generated
+		 */
+		private RectangleFigure fParallelBranchNodesCompartmentFigure;
+
+		/**
+		 * @generated
+		 */
+		public ParallelBranchFigure() {
+
+			GridLayout layoutThis = new GridLayout();
+			layoutThis.numColumns = 1;
+			layoutThis.makeColumnsEqualWidth = true;
+			layoutThis.horizontalSpacing = 0;
+			layoutThis.verticalSpacing = 0;
+			layoutThis.marginWidth = 0;
+			layoutThis.marginHeight = 8;
+			this.setLayoutManager(layoutThis);
+
+			this.setFill(false);
+			this.setOutline(false);
+			this.setLineWidth(0);
+			this.setMinimumSize(new Dimension(getMapMode().DPtoLP(202), getMapMode().DPtoLP(82)));
+			createContents();
+		}
+
+		/**
+		 * @generated
+		 */
+		private void createContents() {
+
+			fParallelBranchNodesCompartmentFigure = new RectangleFigure();
+			fParallelBranchNodesCompartmentFigure.setForegroundColor(ColorConstants.black);
+			fParallelBranchNodesCompartmentFigure.setBackgroundColor(ColorConstants.black);
+
+			GridData constraintFParallelBranchNodesCompartmentFigure = new GridData();
+			constraintFParallelBranchNodesCompartmentFigure.verticalAlignment = GridData.CENTER;
+			constraintFParallelBranchNodesCompartmentFigure.horizontalAlignment = GridData.CENTER;
+			constraintFParallelBranchNodesCompartmentFigure.horizontalIndent = 0;
+			constraintFParallelBranchNodesCompartmentFigure.horizontalSpan = 1;
+			constraintFParallelBranchNodesCompartmentFigure.verticalSpan = 1;
+			constraintFParallelBranchNodesCompartmentFigure.grabExcessHorizontalSpace = true;
+			constraintFParallelBranchNodesCompartmentFigure.grabExcessVerticalSpace = true;
+			this.add(fParallelBranchNodesCompartmentFigure, constraintFParallelBranchNodesCompartmentFigure);
+
+		}
+
+		/**
+		 * @generated
+		 */
+		public RectangleFigure getParallelBranchNodesCompartmentFigure() {
+			return fParallelBranchNodesCompartmentFigure;
+		}
+
+	}
 }

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/ParallelBranchParallelBranchNodesCompartmentEditPart.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/ParallelBranchParallelBranchNodesCompartmentEditPart.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/ParallelBranchParallelBranchNodesCompartmentEditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -5,7 +5,12 @@
 import org.eclipse.emf.common.notify.Notification;
 import org.eclipse.emf.ecore.EObject;
 import org.eclipse.gmf.runtime.diagram.ui.editparts.ListCompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CreationEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.DragDropEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
 import org.eclipse.gmf.runtime.diagram.ui.figures.ResizableCompartmentFigure;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout;
+import org.eclipse.gmf.runtime.notation.View;
 
 /**
  * @generated
@@ -13,12 +18,38 @@
 public class ParallelBranchParallelBranchNodesCompartmentEditPart extends ListCompartmentEditPart {
 
 	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 7003;
+
+	/**
+	* @generated
+	*/
+	public ParallelBranchParallelBranchNodesCompartmentEditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean hasModelChildrenChanged(Notification evt) {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	public String getCompartmentName() {
+		return ComBE.diagram.part.Messages.ParallelBranchParallelBranchNodesCompartmentEditPart_title;
+	}
+
+	/**
 	* @generated NOT
 	*/
 	public IFigure createFigure() {
 		ResizableCompartmentFigure result = (ResizableCompartmentFigure) super.createFigure();
 		result.setTitleVisibility(false);
-		
+
 		// START non-generated code: remove standard {5,5,5,5} Insets of compartment
 		Insets insets = result.getContentPane().getInsets();
 		insets.top = 0;
@@ -26,7 +57,27 @@
 		insets.left = 0;
 		insets.right = 0;
 		// END non-generated code
-		
+
 		return result;
 	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new ComBE.diagram.edit.policies.ParallelBranchParallelBranchNodesCompartmentItemSemanticEditPolicy());
+		installEditPolicy(EditPolicyRoles.CREATION_ROLE, new CreationEditPolicy());
+		installEditPolicy(EditPolicyRoles.DRAG_DROP_ROLE, new DragDropEditPolicy());
+		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new ComBE.diagram.edit.policies.ParallelBranchParallelBranchNodesCompartmentCanonicalEditPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setRatio(Double ratio) {
+		if (getFigure().getParent().getLayoutManager() instanceof ConstrainedToolbarLayout) {
+			super.setRatio(ratio);
+		}
+	}
 }

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/SpecificationEditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/SpecificationEditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,77 @@
+package ComBE.diagram.edit.parts;
+
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.gef.GraphicalEditPart;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gef.editpolicies.NonResizableEditPolicy;
+import org.eclipse.gef.handles.MoveHandle;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class SpecificationEditPart extends DiagramEditPart {
+
+	/**
+	* @generated
+	*/
+	public final static String MODEL_ID = "ComBE"; //$NON-NLS-1$
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 1000;
+
+	/**
+	* @generated
+	*/
+	public SpecificationEditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new ComBE.diagram.edit.policies.SpecificationItemSemanticEditPolicy());
+		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new ComBE.diagram.edit.policies.SpecificationCanonicalEditPolicy());
+		// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.POPUPBAR_ROLE);
+	}
+
+	/**
+	* @generated
+	*/
+	/*package-local*/static class NodeLabelDragPolicy extends NonResizableEditPolicy {
+
+		/**
+		* @generated
+		*/
+		@SuppressWarnings("rawtypes")
+		protected List createSelectionHandles() {
+			MoveHandle h = new MoveHandle((GraphicalEditPart) getHost());
+			h.setBorder(null);
+			return Collections.singletonList(h);
+		}
+
+		/**
+		* @generated
+		*/
+		public Command getCommand(Request request) {
+			return null;
+		}
+
+		/**
+		* @generated
+		*/
+		public boolean understandsRequest(Request request) {
+			return false;
+		}
+	}
+
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNode2EditPart.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNode2EditPart.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNode2EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,8 +1,41 @@
 package ComBE.diagram.edit.parts;
 
+import org.eclipse.draw2d.Border;
+import org.eclipse.draw2d.BorderLayout;
+import org.eclipse.draw2d.ColorConstants;
 import org.eclipse.draw2d.Graphics;
 
+import org.eclipse.draw2d.FocusEvent;
+import org.eclipse.draw2d.GridData;
+import org.eclipse.draw2d.GridLayout;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.MarginBorder;
+import org.eclipse.draw2d.PositionConstants;
+import org.eclipse.draw2d.RectangleFigure;
+import org.eclipse.draw2d.Shape;
+import org.eclipse.draw2d.StackLayout;
+import org.eclipse.draw2d.geometry.Dimension;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gef.editpolicies.LayoutEditPolicy;
+import org.eclipse.gef.editpolicies.NonResizableEditPolicy;
+import org.eclipse.gef.editpolicies.ResizableEditPolicy;
+import org.eclipse.gef.requests.CreateRequest;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.Font;
+import org.eclipse.swt.widgets.Display;
 import ComBE.StandardNode;
+import ComBE.diagram.customCode.ComBESelectionEditPolicy;
 import ComBE.diagram.customCode.CustomPainting;
 
 /**
@@ -11,10 +44,22 @@
 public class StandardNode2EditPart extends ShapeNodeEditPart {
 
 	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 3003;
+	/**
+	* @generated
+	*/
+	protected IFigure contentPane;
+	/**
+	* @generated
+	*/
+	protected IFigure primaryShape;
+	/**
 	* @generated NOT
 	*/
 	private View view;
-	
+
 	/**
 	* @generated NOT
 	*/
@@ -24,17 +69,670 @@
 	}
 
 	/**
+	* @generated NOT
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new ComBE.diagram.edit.policies.StandardNode2ItemSemanticEditPolicy());
+		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new ComBE.diagram.edit.policies.StandardNode2CanonicalEditPolicy());
+		installEditPolicy(EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
+		// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies
+		// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CONNECTION_HANDLES_ROLE);
+
+		// BEGIN non-generated code
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBESelectionEditPolicy());
+		// END non-generated code
+	}
+
+	/**
+	* @generated
+	*/
+	protected LayoutEditPolicy createLayoutEditPolicy() {
+		org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy lep = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy() {
+
+			protected EditPolicy createChildEditPolicy(EditPart child) {
+				EditPolicy result = child.getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+				if (result == null) {
+					result = new NonResizableEditPolicy();
+				}
+				return result;
+			}
+
+			protected Command getMoveChildrenCommand(Request request) {
+				return null;
+			}
+
+			protected Command getCreateCommand(CreateRequest request) {
+				return null;
+			}
+		};
+		return lep;
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createNodeShape() {
+		return primaryShape = new NodeFigure();
+	}
+
+	/**
+	* @generated
+	*/
+	public NodeFigure getPrimaryShape() {
+		return (NodeFigure) primaryShape;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean addFixedChild(EditPart childEditPart) {
+		if (childEditPart instanceof ComBE.diagram.edit.parts.WrappingLabel4EditPart) {
+			((ComBE.diagram.edit.parts.WrappingLabel4EditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeRequirementLabelFigure());
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.WrappingLabel5EditPart) {
+			((ComBE.diagram.edit.parts.WrappingLabel5EditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeComponentLabelFigure());
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.WrappingLabel6EditPart) {
+			((ComBE.diagram.edit.parts.WrappingLabel6EditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeBehaviorLabelFigure());
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.StandardNodeTracibilitystatus2EditPart) {
+			((ComBE.diagram.edit.parts.StandardNodeTracibilitystatus2EditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeTracibilityStatusLabelFigure());
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.StandardNodeOperator2EditPart) {
+			((ComBE.diagram.edit.parts.StandardNodeOperator2EditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeOperatorLabelFigure());
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.StandardNodeLabel2EditPart) {
+			((ComBE.diagram.edit.parts.StandardNodeLabel2EditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeLabelLabelFigure());
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean removeFixedChild(EditPart childEditPart) {
+		if (childEditPart instanceof ComBE.diagram.edit.parts.WrappingLabel4EditPart) {
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.WrappingLabel5EditPart) {
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.WrappingLabel6EditPart) {
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.StandardNodeTracibilitystatus2EditPart) {
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.StandardNodeOperator2EditPart) {
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.StandardNodeLabel2EditPart) {
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addChildVisual(EditPart childEditPart, int index) {
+		if (addFixedChild(childEditPart)) {
+			return;
+		}
+		super.addChildVisual(childEditPart, -1);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeChildVisual(EditPart childEditPart) {
+		if (removeFixedChild(childEditPart)) {
+			return;
+		}
+		super.removeChildVisual(childEditPart);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure getContentPaneFor(IGraphicalEditPart editPart) {
+		return getContentPane();
+	}
+
+	/**
+	* @generated
+	*/
+	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodePlate() {
+		DefaultSizeNodeFigure result = new DefaultSizeNodeFigure(40, 40);
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public EditPolicy getPrimaryDragEditPolicy() {
+		EditPolicy result = super.getPrimaryDragEditPolicy();
+		if (result instanceof ResizableEditPolicy) {
+			ResizableEditPolicy ep = (ResizableEditPolicy) result;
+			ep.setResizeDirections(PositionConstants.NONE);
+		}
+		return result;
+	}
+
+	/**
+	* Creates figure for this edit part.
+	* 
+	* Body of this method does not depend on settings in generation model
+	* so you may safely remove <i>generated</i> tag and modify it.
+	* 
+	* @generated
+	*/
+	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodeFigure() {
+		org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure figure = createNodePlate();
+		figure.setLayoutManager(new StackLayout());
+		IFigure shape = createNodeShape();
+		figure.add(shape);
+		contentPane = setupContentPane(shape);
+		return figure;
+	}
+
+	/**
+	* Default implementation treats passed figure as content pane.
+	* Respects layout one may have set for generated figure.
+	* @param nodeShape instance of generated figure class
+	* @generated
+	*/
+	protected IFigure setupContentPane(IFigure nodeShape) {
+		if (nodeShape.getLayoutManager() == null) {
+			ConstrainedToolbarLayout layout = new ConstrainedToolbarLayout();
+			layout.setSpacing(5);
+			nodeShape.setLayoutManager(layout);
+		}
+		return nodeShape; // use nodeShape itself as contentPane
+	}
+
+	/**
+	* @generated
+	*/
+	public IFigure getContentPane() {
+		if (contentPane != null) {
+			return contentPane;
+		}
+		return super.getContentPane();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setForegroundColor(Color color) {
+		if (primaryShape != null) {
+			primaryShape.setForegroundColor(color);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setBackgroundColor(Color color) {
+		if (primaryShape != null) {
+			primaryShape.setBackgroundColor(color);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLineWidth(int width) {
+		if (primaryShape instanceof Shape) {
+			((Shape) primaryShape).setLineWidth(width);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLineType(int style) {
+		if (primaryShape instanceof Shape) {
+			((Shape) primaryShape).setLineStyle(style);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public EditPart getPrimaryChildEditPart() {
+		return getChildBySemanticHint(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel4EditPart.VISUAL_ID));
+	}
+
+	/**
 	 * @generated
 	 */
 	public class NodeFigure extends RectangleFigure {
 
 		/**
-		 * @generated NOT
-		 */
+		* @generated
+		*/
+		private WrappingLabel fFigureNodeRequirementLabelFigure;
+		/**
+		* @generated
+		*/
+		private WrappingLabel fFigureNodeTracibilityStatusLabelFigure;
+		/**
+		* @generated
+		*/
+		private WrappingLabel fFigureNodeComponentLabelFigure;
+		/**
+		* @generated
+		*/
+		private WrappingLabel fFigureNodeBehaviorLabelFigure;
+		/**
+		* @generated
+		*/
+		private WrappingLabel fFigureNodeOperatorLabelFigure;
+		/**
+		* @generated
+		*/
+		private WrappingLabel fFigureNodeLabelLabelFigure;
+
+		/**
+		* @generated
+		*/
+		public NodeFigure() {
+
+			GridLayout layoutThis = new GridLayout();
+			layoutThis.numColumns = 3;
+			layoutThis.makeColumnsEqualWidth = false;
+			layoutThis.horizontalSpacing = 0;
+			layoutThis.verticalSpacing = 0;
+			layoutThis.marginWidth = 0;
+			layoutThis.marginHeight = 0;
+			this.setLayoutManager(layoutThis);
+
+			this.setOutline(false);
+			this.setLineWidth(0);
+			this.setForegroundColor(ColorConstants.black);
+			this.setBackgroundColor(THIS_BACK);
+
+			this.setFont(THIS_FONT);
+
+			this.setBorder(createBorder0());
+			createContents();
+		}
+
+		/**
+		* @generated
+		*/
+		private void createContents() {
+
+			RectangleFigure left0 = new RectangleFigure();
+			left0.setOutline(false);
+			left0.setLineWidth(0);
+			left0.setPreferredSize(new Dimension(getMapMode().DPtoLP(54), getMapMode().DPtoLP(60)));
+
+			this.add(left0);
+
+			GridLayout layoutLeft0 = new GridLayout();
+			layoutLeft0.numColumns = 1;
+			layoutLeft0.makeColumnsEqualWidth = true;
+			layoutLeft0.horizontalSpacing = 0;
+			layoutLeft0.verticalSpacing = 0;
+			layoutLeft0.marginWidth = 0;
+			layoutLeft0.marginHeight = 0;
+			left0.setLayoutManager(layoutLeft0);
+
+			RectangleFigure leftLeft1 = new RectangleFigure();
+			leftLeft1.setFill(false);
+			leftLeft1.setOutline(false);
+			leftLeft1.setLineWidth(0);
+
+			leftLeft1.setBorder(new MarginBorder(getMapMode().DPtoLP(2), getMapMode().DPtoLP(0), getMapMode().DPtoLP(2), getMapMode().DPtoLP(0)));
+
+			GridData constraintLeftLeft1 = new GridData();
+			constraintLeftLeft1.verticalAlignment = GridData.CENTER;
+			constraintLeftLeft1.horizontalAlignment = GridData.CENTER;
+			constraintLeftLeft1.horizontalIndent = 0;
+			constraintLeftLeft1.horizontalSpan = 1;
+			constraintLeftLeft1.verticalSpan = 1;
+			constraintLeftLeft1.grabExcessHorizontalSpace = true;
+			constraintLeftLeft1.grabExcessVerticalSpace = true;
+			left0.add(leftLeft1, constraintLeftLeft1);
+
+			BorderLayout layoutLeftLeft1 = new BorderLayout();
+			leftLeft1.setLayoutManager(layoutLeftLeft1);
+
+			RectangleFigure requirementRectangle2 = new RectangleFigure();
+			requirementRectangle2.setFill(false);
+			requirementRectangle2.setOutline(false);
+			requirementRectangle2.setLineWidth(0);
+
+			leftLeft1.add(requirementRectangle2, BorderLayout.TOP);
+
+			GridLayout layoutRequirementRectangle2 = new GridLayout();
+			layoutRequirementRectangle2.numColumns = 1;
+			layoutRequirementRectangle2.makeColumnsEqualWidth = true;
+			requirementRectangle2.setLayoutManager(layoutRequirementRectangle2);
+
+			fFigureNodeRequirementLabelFigure = new WrappingLabel();
+			fFigureNodeRequirementLabelFigure.setText("");
+
+			GridData constraintFFigureNodeRequirementLabelFigure = new GridData();
+			constraintFFigureNodeRequirementLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureNodeRequirementLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureNodeRequirementLabelFigure.horizontalIndent = 0;
+			constraintFFigureNodeRequirementLabelFigure.horizontalSpan = 1;
+			constraintFFigureNodeRequirementLabelFigure.verticalSpan = 1;
+			constraintFFigureNodeRequirementLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureNodeRequirementLabelFigure.grabExcessVerticalSpace = true;
+			requirementRectangle2.add(fFigureNodeRequirementLabelFigure, constraintFFigureNodeRequirementLabelFigure);
+
+			RectangleFigure tracibilityStatusRectangle2 = new RectangleFigure();
+			tracibilityStatusRectangle2.setFill(false);
+			tracibilityStatusRectangle2.setOutline(false);
+			tracibilityStatusRectangle2.setLineWidth(0);
+
+			leftLeft1.add(tracibilityStatusRectangle2, BorderLayout.BOTTOM);
+
+			GridLayout layoutTracibilityStatusRectangle2 = new GridLayout();
+			layoutTracibilityStatusRectangle2.numColumns = 1;
+			layoutTracibilityStatusRectangle2.makeColumnsEqualWidth = true;
+			tracibilityStatusRectangle2.setLayoutManager(layoutTracibilityStatusRectangle2);
+
+			fFigureNodeTracibilityStatusLabelFigure = new WrappingLabel();
+			fFigureNodeTracibilityStatusLabelFigure.setText(" ");
+
+			GridData constraintFFigureNodeTracibilityStatusLabelFigure = new GridData();
+			constraintFFigureNodeTracibilityStatusLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureNodeTracibilityStatusLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureNodeTracibilityStatusLabelFigure.horizontalIndent = 0;
+			constraintFFigureNodeTracibilityStatusLabelFigure.horizontalSpan = 1;
+			constraintFFigureNodeTracibilityStatusLabelFigure.verticalSpan = 1;
+			constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessVerticalSpace = true;
+			tracibilityStatusRectangle2.add(fFigureNodeTracibilityStatusLabelFigure, constraintFFigureNodeTracibilityStatusLabelFigure);
+
+			RectangleFigure line0 = new RectangleFigure();
+			line0.setOutline(false);
+			line0.setLineWidth(0);
+			line0.setBackgroundColor(ColorConstants.black);
+
+			GridData constraintLine0 = new GridData();
+			constraintLine0.verticalAlignment = GridData.CENTER;
+			constraintLine0.horizontalAlignment = GridData.CENTER;
+			constraintLine0.horizontalIndent = 0;
+			constraintLine0.horizontalSpan = 1;
+			constraintLine0.verticalSpan = 1;
+			constraintLine0.grabExcessHorizontalSpace = false;
+			constraintLine0.grabExcessVerticalSpace = false;
+			constraintLine0.widthHint = 1;
+			constraintLine0.heightHint = 60;
+			this.add(line0, constraintLine0);
+
+			RectangleFigure right0 = new RectangleFigure();
+			right0.setOutline(false);
+			right0.setLineWidth(0);
+			right0.setPreferredSize(new Dimension(getMapMode().DPtoLP(125), getMapMode().DPtoLP(60)));
+
+			GridData constraintRight0 = new GridData();
+			constraintRight0.verticalAlignment = GridData.CENTER;
+			constraintRight0.horizontalAlignment = GridData.CENTER;
+			constraintRight0.horizontalIndent = 0;
+			constraintRight0.horizontalSpan = 1;
+			constraintRight0.verticalSpan = 1;
+			constraintRight0.grabExcessHorizontalSpace = true;
+			constraintRight0.grabExcessVerticalSpace = true;
+			this.add(right0, constraintRight0);
+
+			GridLayout layoutRight0 = new GridLayout();
+			layoutRight0.numColumns = 2;
+			layoutRight0.makeColumnsEqualWidth = false;
+			layoutRight0.horizontalSpacing = 0;
+			layoutRight0.verticalSpacing = 0;
+			layoutRight0.marginWidth = 0;
+			layoutRight0.marginHeight = 0;
+			right0.setLayoutManager(layoutRight0);
+
+			RectangleFigure rightLeft1 = new RectangleFigure();
+			rightLeft1.setFill(false);
+			rightLeft1.setOutline(false);
+			rightLeft1.setLineWidth(0);
+
+			rightLeft1.setBorder(new MarginBorder(getMapMode().DPtoLP(2), getMapMode().DPtoLP(0), getMapMode().DPtoLP(2), getMapMode().DPtoLP(0)));
+
+			GridData constraintRightLeft1 = new GridData();
+			constraintRightLeft1.verticalAlignment = GridData.CENTER;
+			constraintRightLeft1.horizontalAlignment = GridData.CENTER;
+			constraintRightLeft1.horizontalIndent = 0;
+			constraintRightLeft1.horizontalSpan = 1;
+			constraintRightLeft1.verticalSpan = 1;
+			constraintRightLeft1.grabExcessHorizontalSpace = true;
+			constraintRightLeft1.grabExcessVerticalSpace = true;
+			right0.add(rightLeft1, constraintRightLeft1);
+
+			BorderLayout layoutRightLeft1 = new BorderLayout();
+			rightLeft1.setLayoutManager(layoutRightLeft1);
+
+			RectangleFigure componentRectangle2 = new RectangleFigure();
+			componentRectangle2.setFill(false);
+			componentRectangle2.setOutline(false);
+			componentRectangle2.setLineWidth(0);
+
+			rightLeft1.add(componentRectangle2, BorderLayout.TOP);
+
+			GridLayout layoutComponentRectangle2 = new GridLayout();
+			layoutComponentRectangle2.numColumns = 1;
+			layoutComponentRectangle2.makeColumnsEqualWidth = true;
+			componentRectangle2.setLayoutManager(layoutComponentRectangle2);
+
+			fFigureNodeComponentLabelFigure = new WrappingLabel();
+			fFigureNodeComponentLabelFigure.setText("");
+
+			GridData constraintFFigureNodeComponentLabelFigure = new GridData();
+			constraintFFigureNodeComponentLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureNodeComponentLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureNodeComponentLabelFigure.horizontalIndent = 0;
+			constraintFFigureNodeComponentLabelFigure.horizontalSpan = 1;
+			constraintFFigureNodeComponentLabelFigure.verticalSpan = 1;
+			constraintFFigureNodeComponentLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureNodeComponentLabelFigure.grabExcessVerticalSpace = true;
+			componentRectangle2.add(fFigureNodeComponentLabelFigure, constraintFFigureNodeComponentLabelFigure);
+
+			RectangleFigure behaviorRectangle2 = new RectangleFigure();
+			behaviorRectangle2.setFill(false);
+			behaviorRectangle2.setOutline(false);
+			behaviorRectangle2.setLineWidth(0);
+
+			rightLeft1.add(behaviorRectangle2, BorderLayout.BOTTOM);
+
+			GridLayout layoutBehaviorRectangle2 = new GridLayout();
+			layoutBehaviorRectangle2.numColumns = 1;
+			layoutBehaviorRectangle2.makeColumnsEqualWidth = true;
+			behaviorRectangle2.setLayoutManager(layoutBehaviorRectangle2);
+
+			fFigureNodeBehaviorLabelFigure = new WrappingLabel();
+			fFigureNodeBehaviorLabelFigure.setText("");
+
+			GridData constraintFFigureNodeBehaviorLabelFigure = new GridData();
+			constraintFFigureNodeBehaviorLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureNodeBehaviorLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureNodeBehaviorLabelFigure.horizontalIndent = 0;
+			constraintFFigureNodeBehaviorLabelFigure.horizontalSpan = 1;
+			constraintFFigureNodeBehaviorLabelFigure.verticalSpan = 1;
+			constraintFFigureNodeBehaviorLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureNodeBehaviorLabelFigure.grabExcessVerticalSpace = true;
+			behaviorRectangle2.add(fFigureNodeBehaviorLabelFigure, constraintFFigureNodeBehaviorLabelFigure);
+
+			RectangleFigure rightRight1 = new RectangleFigure();
+			rightRight1.setFill(false);
+			rightRight1.setOutline(false);
+			rightRight1.setLineWidth(0);
+
+			rightRight1.setBorder(new MarginBorder(getMapMode().DPtoLP(1), getMapMode().DPtoLP(0), getMapMode().DPtoLP(20), getMapMode().DPtoLP(0)));
+
+			GridData constraintRightRight1 = new GridData();
+			constraintRightRight1.verticalAlignment = GridData.CENTER;
+			constraintRightRight1.horizontalAlignment = GridData.CENTER;
+			constraintRightRight1.horizontalIndent = 0;
+			constraintRightRight1.horizontalSpan = 1;
+			constraintRightRight1.verticalSpan = 1;
+			constraintRightRight1.grabExcessHorizontalSpace = true;
+			constraintRightRight1.grabExcessVerticalSpace = true;
+			right0.add(rightRight1, constraintRightRight1);
+
+			BorderLayout layoutRightRight1 = new BorderLayout();
+			rightRight1.setLayoutManager(layoutRightRight1);
+
+			RectangleFigure operatorRectangle2 = new RectangleFigure();
+			operatorRectangle2.setFill(false);
+			operatorRectangle2.setOutline(false);
+			operatorRectangle2.setLineWidth(0);
+
+			rightRight1.add(operatorRectangle2, BorderLayout.TOP);
+
+			GridLayout layoutOperatorRectangle2 = new GridLayout();
+			layoutOperatorRectangle2.numColumns = 1;
+			layoutOperatorRectangle2.makeColumnsEqualWidth = true;
+			layoutOperatorRectangle2.horizontalSpacing = 0;
+			layoutOperatorRectangle2.verticalSpacing = 0;
+			layoutOperatorRectangle2.marginWidth = 0;
+			layoutOperatorRectangle2.marginHeight = 0;
+			operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);
+
+			fFigureNodeOperatorLabelFigure = new WrappingLabel();
+			fFigureNodeOperatorLabelFigure.setText(" ");
+
+			GridData constraintFFigureNodeOperatorLabelFigure = new GridData();
+			constraintFFigureNodeOperatorLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureNodeOperatorLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureNodeOperatorLabelFigure.horizontalIndent = 0;
+			constraintFFigureNodeOperatorLabelFigure.horizontalSpan = 1;
+			constraintFFigureNodeOperatorLabelFigure.verticalSpan = 1;
+			constraintFFigureNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureNodeOperatorLabelFigure.grabExcessVerticalSpace = true;
+			operatorRectangle2.add(fFigureNodeOperatorLabelFigure, constraintFFigureNodeOperatorLabelFigure);
+
+			RectangleFigure labelRectangle2 = new RectangleFigure();
+			labelRectangle2.setFill(false);
+			labelRectangle2.setOutline(false);
+			labelRectangle2.setLineWidth(0);
+
+			rightRight1.add(labelRectangle2, BorderLayout.BOTTOM);
+
+			GridLayout layoutLabelRectangle2 = new GridLayout();
+			layoutLabelRectangle2.numColumns = 1;
+			layoutLabelRectangle2.makeColumnsEqualWidth = true;
+			layoutLabelRectangle2.horizontalSpacing = 0;
+			layoutLabelRectangle2.verticalSpacing = 0;
+			layoutLabelRectangle2.marginWidth = 0;
+			layoutLabelRectangle2.marginHeight = 0;
+			labelRectangle2.setLayoutManager(layoutLabelRectangle2);
+
+			fFigureNodeLabelLabelFigure = new WrappingLabel();
+			fFigureNodeLabelLabelFigure.setText(" ");
+
+			GridData constraintFFigureNodeLabelLabelFigure = new GridData();
+			constraintFFigureNodeLabelLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureNodeLabelLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureNodeLabelLabelFigure.horizontalIndent = 0;
+			constraintFFigureNodeLabelLabelFigure.horizontalSpan = 1;
+			constraintFFigureNodeLabelLabelFigure.verticalSpan = 1;
+			constraintFFigureNodeLabelLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureNodeLabelLabelFigure.grabExcessVerticalSpace = true;
+			labelRectangle2.add(fFigureNodeLabelLabelFigure, constraintFFigureNodeLabelLabelFigure);
+
+		}
+
+		/**
+		* @generated
+		*/
+		private Border createBorder0() {
+			ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();
+
+			return result;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getFigureNodeRequirementLabelFigure() {
+			return fFigureNodeRequirementLabelFigure;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getFigureNodeTracibilityStatusLabelFigure() {
+			return fFigureNodeTracibilityStatusLabelFigure;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getFigureNodeComponentLabelFigure() {
+			return fFigureNodeComponentLabelFigure;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getFigureNodeBehaviorLabelFigure() {
+			return fFigureNodeBehaviorLabelFigure;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getFigureNodeOperatorLabelFigure() {
+			return fFigureNodeOperatorLabelFigure;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getFigureNodeLabelLabelFigure() {
+			return fFigureNodeLabelLabelFigure;
+		}
+
+		/**
+			 * @generated NOT
+			 */
 		public void paint(Graphics graphics) {
-			CustomPainting.setNodeColor(this, (StandardNode) view.getElement());
-			CustomPainting.setBehaviorLabel(fFigureNodeBehaviorLabelFigure, (StandardNode) view.getElement());			
+			CustomPainting.setNodeColor(this, (StandardNode) view.getElement(), hasFocus);
+			CustomPainting.setBehaviorLabel(fFigureNodeBehaviorLabelFigure, (StandardNode) view.getElement());
 			super.paint(graphics);
 		}
+
+		private boolean hasFocus;
+
+		/**
+		 * @override
+		 */
+		public void handleFocusGained(FocusEvent event) {
+			hasFocus = true;
+			repaint();
+		}
+
+		/**
+		 * @override
+		 */
+		public void handleFocusLost(FocusEvent event) {
+			hasFocus = false;
+			repaint();
+		}
 	}
+
+	/**
+	* @generated
+	*/
+	static final Color THIS_BACK = new Color(null, 179, 211, 69);
+	/**
+	* @generated
+	*/
+	static final Font THIS_FONT = new Font(Display.getCurrent(), "ComBEFont", 6, SWT.BOLD);
 }

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNode3EditPart.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNode3EditPart.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNode3EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,8 +1,41 @@
 package ComBE.diagram.edit.parts;
 
+import org.eclipse.draw2d.Border;
+import org.eclipse.draw2d.BorderLayout;
+import org.eclipse.draw2d.ColorConstants;
 import org.eclipse.draw2d.Graphics;
 
+import org.eclipse.draw2d.FocusEvent;
+import org.eclipse.draw2d.GridData;
+import org.eclipse.draw2d.GridLayout;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.MarginBorder;
+import org.eclipse.draw2d.PositionConstants;
+import org.eclipse.draw2d.RectangleFigure;
+import org.eclipse.draw2d.Shape;
+import org.eclipse.draw2d.StackLayout;
+import org.eclipse.draw2d.geometry.Dimension;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gef.editpolicies.LayoutEditPolicy;
+import org.eclipse.gef.editpolicies.NonResizableEditPolicy;
+import org.eclipse.gef.editpolicies.ResizableEditPolicy;
+import org.eclipse.gef.requests.CreateRequest;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.Font;
+import org.eclipse.swt.widgets.Display;
 import ComBE.StandardNode;
+import ComBE.diagram.customCode.ComBESelectionEditPolicy;
 import ComBE.diagram.customCode.CustomPainting;
 
 /**
@@ -11,10 +44,22 @@
 public class StandardNode3EditPart extends ShapeNodeEditPart {
 
 	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 3005;
+	/**
+	* @generated
+	*/
+	protected IFigure contentPane;
+	/**
+	* @generated
+	*/
+	protected IFigure primaryShape;
+	/**
 	* @generated NOT
 	*/
 	private View view;
-	
+
 	/**
 	* @generated NOT
 	*/
@@ -24,17 +69,670 @@
 	}
 
 	/**
+	* @generated NOT
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new ComBE.diagram.edit.policies.StandardNode3ItemSemanticEditPolicy());
+		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new ComBE.diagram.edit.policies.StandardNode3CanonicalEditPolicy());
+		installEditPolicy(EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
+		// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies
+		// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CONNECTION_HANDLES_ROLE);
+
+		// BEGIN non-generated code
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBESelectionEditPolicy());
+		// END non-generated code
+	}
+
+	/**
+	* @generated
+	*/
+	protected LayoutEditPolicy createLayoutEditPolicy() {
+		org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy lep = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy() {
+
+			protected EditPolicy createChildEditPolicy(EditPart child) {
+				EditPolicy result = child.getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+				if (result == null) {
+					result = new NonResizableEditPolicy();
+				}
+				return result;
+			}
+
+			protected Command getMoveChildrenCommand(Request request) {
+				return null;
+			}
+
+			protected Command getCreateCommand(CreateRequest request) {
+				return null;
+			}
+		};
+		return lep;
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createNodeShape() {
+		return primaryShape = new NodeFigure();
+	}
+
+	/**
+	* @generated
+	*/
+	public NodeFigure getPrimaryShape() {
+		return (NodeFigure) primaryShape;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean addFixedChild(EditPart childEditPart) {
+		if (childEditPart instanceof ComBE.diagram.edit.parts.WrappingLabel7EditPart) {
+			((ComBE.diagram.edit.parts.WrappingLabel7EditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeRequirementLabelFigure());
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.WrappingLabel8EditPart) {
+			((ComBE.diagram.edit.parts.WrappingLabel8EditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeComponentLabelFigure());
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.WrappingLabel9EditPart) {
+			((ComBE.diagram.edit.parts.WrappingLabel9EditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeBehaviorLabelFigure());
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.StandardNodeTracibilitystatus3EditPart) {
+			((ComBE.diagram.edit.parts.StandardNodeTracibilitystatus3EditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeTracibilityStatusLabelFigure());
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.StandardNodeOperator3EditPart) {
+			((ComBE.diagram.edit.parts.StandardNodeOperator3EditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeOperatorLabelFigure());
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.StandardNodeLabel3EditPart) {
+			((ComBE.diagram.edit.parts.StandardNodeLabel3EditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeLabelLabelFigure());
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean removeFixedChild(EditPart childEditPart) {
+		if (childEditPart instanceof ComBE.diagram.edit.parts.WrappingLabel7EditPart) {
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.WrappingLabel8EditPart) {
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.WrappingLabel9EditPart) {
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.StandardNodeTracibilitystatus3EditPart) {
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.StandardNodeOperator3EditPart) {
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.StandardNodeLabel3EditPart) {
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addChildVisual(EditPart childEditPart, int index) {
+		if (addFixedChild(childEditPart)) {
+			return;
+		}
+		super.addChildVisual(childEditPart, -1);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeChildVisual(EditPart childEditPart) {
+		if (removeFixedChild(childEditPart)) {
+			return;
+		}
+		super.removeChildVisual(childEditPart);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure getContentPaneFor(IGraphicalEditPart editPart) {
+		return getContentPane();
+	}
+
+	/**
+	* @generated
+	*/
+	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodePlate() {
+		DefaultSizeNodeFigure result = new DefaultSizeNodeFigure(40, 40);
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public EditPolicy getPrimaryDragEditPolicy() {
+		EditPolicy result = super.getPrimaryDragEditPolicy();
+		if (result instanceof ResizableEditPolicy) {
+			ResizableEditPolicy ep = (ResizableEditPolicy) result;
+			ep.setResizeDirections(PositionConstants.NONE);
+		}
+		return result;
+	}
+
+	/**
+	* Creates figure for this edit part.
+	* 
+	* Body of this method does not depend on settings in generation model
+	* so you may safely remove <i>generated</i> tag and modify it.
+	* 
+	* @generated
+	*/
+	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodeFigure() {
+		org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure figure = createNodePlate();
+		figure.setLayoutManager(new StackLayout());
+		IFigure shape = createNodeShape();
+		figure.add(shape);
+		contentPane = setupContentPane(shape);
+		return figure;
+	}
+
+	/**
+	* Default implementation treats passed figure as content pane.
+	* Respects layout one may have set for generated figure.
+	* @param nodeShape instance of generated figure class
+	* @generated
+	*/
+	protected IFigure setupContentPane(IFigure nodeShape) {
+		if (nodeShape.getLayoutManager() == null) {
+			ConstrainedToolbarLayout layout = new ConstrainedToolbarLayout();
+			layout.setSpacing(5);
+			nodeShape.setLayoutManager(layout);
+		}
+		return nodeShape; // use nodeShape itself as contentPane
+	}
+
+	/**
+	* @generated
+	*/
+	public IFigure getContentPane() {
+		if (contentPane != null) {
+			return contentPane;
+		}
+		return super.getContentPane();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setForegroundColor(Color color) {
+		if (primaryShape != null) {
+			primaryShape.setForegroundColor(color);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setBackgroundColor(Color color) {
+		if (primaryShape != null) {
+			primaryShape.setBackgroundColor(color);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLineWidth(int width) {
+		if (primaryShape instanceof Shape) {
+			((Shape) primaryShape).setLineWidth(width);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLineType(int style) {
+		if (primaryShape instanceof Shape) {
+			((Shape) primaryShape).setLineStyle(style);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public EditPart getPrimaryChildEditPart() {
+		return getChildBySemanticHint(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel7EditPart.VISUAL_ID));
+	}
+
+	/**
 	 * @generated
 	 */
 	public class NodeFigure extends RectangleFigure {
 
 		/**
-		 * @generated NOT
-		 */
+		* @generated
+		*/
+		private WrappingLabel fFigureNodeRequirementLabelFigure;
+		/**
+		* @generated
+		*/
+		private WrappingLabel fFigureNodeTracibilityStatusLabelFigure;
+		/**
+		* @generated
+		*/
+		private WrappingLabel fFigureNodeComponentLabelFigure;
+		/**
+		* @generated
+		*/
+		private WrappingLabel fFigureNodeBehaviorLabelFigure;
+		/**
+		* @generated
+		*/
+		private WrappingLabel fFigureNodeOperatorLabelFigure;
+		/**
+		* @generated
+		*/
+		private WrappingLabel fFigureNodeLabelLabelFigure;
+
+		/**
+		* @generated
+		*/
+		public NodeFigure() {
+
+			GridLayout layoutThis = new GridLayout();
+			layoutThis.numColumns = 3;
+			layoutThis.makeColumnsEqualWidth = false;
+			layoutThis.horizontalSpacing = 0;
+			layoutThis.verticalSpacing = 0;
+			layoutThis.marginWidth = 0;
+			layoutThis.marginHeight = 0;
+			this.setLayoutManager(layoutThis);
+
+			this.setOutline(false);
+			this.setLineWidth(0);
+			this.setForegroundColor(ColorConstants.black);
+			this.setBackgroundColor(THIS_BACK);
+
+			this.setFont(THIS_FONT);
+
+			this.setBorder(createBorder0());
+			createContents();
+		}
+
+		/**
+		* @generated
+		*/
+		private void createContents() {
+
+			RectangleFigure left0 = new RectangleFigure();
+			left0.setOutline(false);
+			left0.setLineWidth(0);
+			left0.setPreferredSize(new Dimension(getMapMode().DPtoLP(54), getMapMode().DPtoLP(60)));
+
+			this.add(left0);
+
+			GridLayout layoutLeft0 = new GridLayout();
+			layoutLeft0.numColumns = 1;
+			layoutLeft0.makeColumnsEqualWidth = true;
+			layoutLeft0.horizontalSpacing = 0;
+			layoutLeft0.verticalSpacing = 0;
+			layoutLeft0.marginWidth = 0;
+			layoutLeft0.marginHeight = 0;
+			left0.setLayoutManager(layoutLeft0);
+
+			RectangleFigure leftLeft1 = new RectangleFigure();
+			leftLeft1.setFill(false);
+			leftLeft1.setOutline(false);
+			leftLeft1.setLineWidth(0);
+
+			leftLeft1.setBorder(new MarginBorder(getMapMode().DPtoLP(2), getMapMode().DPtoLP(0), getMapMode().DPtoLP(2), getMapMode().DPtoLP(0)));
+
+			GridData constraintLeftLeft1 = new GridData();
+			constraintLeftLeft1.verticalAlignment = GridData.CENTER;
+			constraintLeftLeft1.horizontalAlignment = GridData.CENTER;
+			constraintLeftLeft1.horizontalIndent = 0;
+			constraintLeftLeft1.horizontalSpan = 1;
+			constraintLeftLeft1.verticalSpan = 1;
+			constraintLeftLeft1.grabExcessHorizontalSpace = true;
+			constraintLeftLeft1.grabExcessVerticalSpace = true;
+			left0.add(leftLeft1, constraintLeftLeft1);
+
+			BorderLayout layoutLeftLeft1 = new BorderLayout();
+			leftLeft1.setLayoutManager(layoutLeftLeft1);
+
+			RectangleFigure requirementRectangle2 = new RectangleFigure();
+			requirementRectangle2.setFill(false);
+			requirementRectangle2.setOutline(false);
+			requirementRectangle2.setLineWidth(0);
+
+			leftLeft1.add(requirementRectangle2, BorderLayout.TOP);
+
+			GridLayout layoutRequirementRectangle2 = new GridLayout();
+			layoutRequirementRectangle2.numColumns = 1;
+			layoutRequirementRectangle2.makeColumnsEqualWidth = true;
+			requirementRectangle2.setLayoutManager(layoutRequirementRectangle2);
+
+			fFigureNodeRequirementLabelFigure = new WrappingLabel();
+			fFigureNodeRequirementLabelFigure.setText("");
+
+			GridData constraintFFigureNodeRequirementLabelFigure = new GridData();
+			constraintFFigureNodeRequirementLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureNodeRequirementLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureNodeRequirementLabelFigure.horizontalIndent = 0;
+			constraintFFigureNodeRequirementLabelFigure.horizontalSpan = 1;
+			constraintFFigureNodeRequirementLabelFigure.verticalSpan = 1;
+			constraintFFigureNodeRequirementLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureNodeRequirementLabelFigure.grabExcessVerticalSpace = true;
+			requirementRectangle2.add(fFigureNodeRequirementLabelFigure, constraintFFigureNodeRequirementLabelFigure);
+
+			RectangleFigure tracibilityStatusRectangle2 = new RectangleFigure();
+			tracibilityStatusRectangle2.setFill(false);
+			tracibilityStatusRectangle2.setOutline(false);
+			tracibilityStatusRectangle2.setLineWidth(0);
+
+			leftLeft1.add(tracibilityStatusRectangle2, BorderLayout.BOTTOM);
+
+			GridLayout layoutTracibilityStatusRectangle2 = new GridLayout();
+			layoutTracibilityStatusRectangle2.numColumns = 1;
+			layoutTracibilityStatusRectangle2.makeColumnsEqualWidth = true;
+			tracibilityStatusRectangle2.setLayoutManager(layoutTracibilityStatusRectangle2);
+
+			fFigureNodeTracibilityStatusLabelFigure = new WrappingLabel();
+			fFigureNodeTracibilityStatusLabelFigure.setText(" ");
+
+			GridData constraintFFigureNodeTracibilityStatusLabelFigure = new GridData();
+			constraintFFigureNodeTracibilityStatusLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureNodeTracibilityStatusLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureNodeTracibilityStatusLabelFigure.horizontalIndent = 0;
+			constraintFFigureNodeTracibilityStatusLabelFigure.horizontalSpan = 1;
+			constraintFFigureNodeTracibilityStatusLabelFigure.verticalSpan = 1;
+			constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessVerticalSpace = true;
+			tracibilityStatusRectangle2.add(fFigureNodeTracibilityStatusLabelFigure, constraintFFigureNodeTracibilityStatusLabelFigure);
+
+			RectangleFigure line0 = new RectangleFigure();
+			line0.setOutline(false);
+			line0.setLineWidth(0);
+			line0.setBackgroundColor(ColorConstants.black);
+
+			GridData constraintLine0 = new GridData();
+			constraintLine0.verticalAlignment = GridData.CENTER;
+			constraintLine0.horizontalAlignment = GridData.CENTER;
+			constraintLine0.horizontalIndent = 0;
+			constraintLine0.horizontalSpan = 1;
+			constraintLine0.verticalSpan = 1;
+			constraintLine0.grabExcessHorizontalSpace = false;
+			constraintLine0.grabExcessVerticalSpace = false;
+			constraintLine0.widthHint = 1;
+			constraintLine0.heightHint = 60;
+			this.add(line0, constraintLine0);
+
+			RectangleFigure right0 = new RectangleFigure();
+			right0.setOutline(false);
+			right0.setLineWidth(0);
+			right0.setPreferredSize(new Dimension(getMapMode().DPtoLP(125), getMapMode().DPtoLP(60)));
+
+			GridData constraintRight0 = new GridData();
+			constraintRight0.verticalAlignment = GridData.CENTER;
+			constraintRight0.horizontalAlignment = GridData.CENTER;
+			constraintRight0.horizontalIndent = 0;
+			constraintRight0.horizontalSpan = 1;
+			constraintRight0.verticalSpan = 1;
+			constraintRight0.grabExcessHorizontalSpace = true;
+			constraintRight0.grabExcessVerticalSpace = true;
+			this.add(right0, constraintRight0);
+
+			GridLayout layoutRight0 = new GridLayout();
+			layoutRight0.numColumns = 2;
+			layoutRight0.makeColumnsEqualWidth = false;
+			layoutRight0.horizontalSpacing = 0;
+			layoutRight0.verticalSpacing = 0;
+			layoutRight0.marginWidth = 0;
+			layoutRight0.marginHeight = 0;
+			right0.setLayoutManager(layoutRight0);
+
+			RectangleFigure rightLeft1 = new RectangleFigure();
+			rightLeft1.setFill(false);
+			rightLeft1.setOutline(false);
+			rightLeft1.setLineWidth(0);
+
+			rightLeft1.setBorder(new MarginBorder(getMapMode().DPtoLP(2), getMapMode().DPtoLP(0), getMapMode().DPtoLP(2), getMapMode().DPtoLP(0)));
+
+			GridData constraintRightLeft1 = new GridData();
+			constraintRightLeft1.verticalAlignment = GridData.CENTER;
+			constraintRightLeft1.horizontalAlignment = GridData.CENTER;
+			constraintRightLeft1.horizontalIndent = 0;
+			constraintRightLeft1.horizontalSpan = 1;
+			constraintRightLeft1.verticalSpan = 1;
+			constraintRightLeft1.grabExcessHorizontalSpace = true;
+			constraintRightLeft1.grabExcessVerticalSpace = true;
+			right0.add(rightLeft1, constraintRightLeft1);
+
+			BorderLayout layoutRightLeft1 = new BorderLayout();
+			rightLeft1.setLayoutManager(layoutRightLeft1);
+
+			RectangleFigure componentRectangle2 = new RectangleFigure();
+			componentRectangle2.setFill(false);
+			componentRectangle2.setOutline(false);
+			componentRectangle2.setLineWidth(0);
+
+			rightLeft1.add(componentRectangle2, BorderLayout.TOP);
+
+			GridLayout layoutComponentRectangle2 = new GridLayout();
+			layoutComponentRectangle2.numColumns = 1;
+			layoutComponentRectangle2.makeColumnsEqualWidth = true;
+			componentRectangle2.setLayoutManager(layoutComponentRectangle2);
+
+			fFigureNodeComponentLabelFigure = new WrappingLabel();
+			fFigureNodeComponentLabelFigure.setText("");
+
+			GridData constraintFFigureNodeComponentLabelFigure = new GridData();
+			constraintFFigureNodeComponentLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureNodeComponentLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureNodeComponentLabelFigure.horizontalIndent = 0;
+			constraintFFigureNodeComponentLabelFigure.horizontalSpan = 1;
+			constraintFFigureNodeComponentLabelFigure.verticalSpan = 1;
+			constraintFFigureNodeComponentLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureNodeComponentLabelFigure.grabExcessVerticalSpace = true;
+			componentRectangle2.add(fFigureNodeComponentLabelFigure, constraintFFigureNodeComponentLabelFigure);
+
+			RectangleFigure behaviorRectangle2 = new RectangleFigure();
+			behaviorRectangle2.setFill(false);
+			behaviorRectangle2.setOutline(false);
+			behaviorRectangle2.setLineWidth(0);
+
+			rightLeft1.add(behaviorRectangle2, BorderLayout.BOTTOM);
+
+			GridLayout layoutBehaviorRectangle2 = new GridLayout();
+			layoutBehaviorRectangle2.numColumns = 1;
+			layoutBehaviorRectangle2.makeColumnsEqualWidth = true;
+			behaviorRectangle2.setLayoutManager(layoutBehaviorRectangle2);
+
+			fFigureNodeBehaviorLabelFigure = new WrappingLabel();
+			fFigureNodeBehaviorLabelFigure.setText("");
+
+			GridData constraintFFigureNodeBehaviorLabelFigure = new GridData();
+			constraintFFigureNodeBehaviorLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureNodeBehaviorLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureNodeBehaviorLabelFigure.horizontalIndent = 0;
+			constraintFFigureNodeBehaviorLabelFigure.horizontalSpan = 1;
+			constraintFFigureNodeBehaviorLabelFigure.verticalSpan = 1;
+			constraintFFigureNodeBehaviorLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureNodeBehaviorLabelFigure.grabExcessVerticalSpace = true;
+			behaviorRectangle2.add(fFigureNodeBehaviorLabelFigure, constraintFFigureNodeBehaviorLabelFigure);
+
+			RectangleFigure rightRight1 = new RectangleFigure();
+			rightRight1.setFill(false);
+			rightRight1.setOutline(false);
+			rightRight1.setLineWidth(0);
+
+			rightRight1.setBorder(new MarginBorder(getMapMode().DPtoLP(1), getMapMode().DPtoLP(0), getMapMode().DPtoLP(20), getMapMode().DPtoLP(0)));
+
+			GridData constraintRightRight1 = new GridData();
+			constraintRightRight1.verticalAlignment = GridData.CENTER;
+			constraintRightRight1.horizontalAlignment = GridData.CENTER;
+			constraintRightRight1.horizontalIndent = 0;
+			constraintRightRight1.horizontalSpan = 1;
+			constraintRightRight1.verticalSpan = 1;
+			constraintRightRight1.grabExcessHorizontalSpace = true;
+			constraintRightRight1.grabExcessVerticalSpace = true;
+			right0.add(rightRight1, constraintRightRight1);
+
+			BorderLayout layoutRightRight1 = new BorderLayout();
+			rightRight1.setLayoutManager(layoutRightRight1);
+
+			RectangleFigure operatorRectangle2 = new RectangleFigure();
+			operatorRectangle2.setFill(false);
+			operatorRectangle2.setOutline(false);
+			operatorRectangle2.setLineWidth(0);
+
+			rightRight1.add(operatorRectangle2, BorderLayout.TOP);
+
+			GridLayout layoutOperatorRectangle2 = new GridLayout();
+			layoutOperatorRectangle2.numColumns = 1;
+			layoutOperatorRectangle2.makeColumnsEqualWidth = true;
+			layoutOperatorRectangle2.horizontalSpacing = 0;
+			layoutOperatorRectangle2.verticalSpacing = 0;
+			layoutOperatorRectangle2.marginWidth = 0;
+			layoutOperatorRectangle2.marginHeight = 0;
+			operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);
+
+			fFigureNodeOperatorLabelFigure = new WrappingLabel();
+			fFigureNodeOperatorLabelFigure.setText(" ");
+
+			GridData constraintFFigureNodeOperatorLabelFigure = new GridData();
+			constraintFFigureNodeOperatorLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureNodeOperatorLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureNodeOperatorLabelFigure.horizontalIndent = 0;
+			constraintFFigureNodeOperatorLabelFigure.horizontalSpan = 1;
+			constraintFFigureNodeOperatorLabelFigure.verticalSpan = 1;
+			constraintFFigureNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureNodeOperatorLabelFigure.grabExcessVerticalSpace = true;
+			operatorRectangle2.add(fFigureNodeOperatorLabelFigure, constraintFFigureNodeOperatorLabelFigure);
+
+			RectangleFigure labelRectangle2 = new RectangleFigure();
+			labelRectangle2.setFill(false);
+			labelRectangle2.setOutline(false);
+			labelRectangle2.setLineWidth(0);
+
+			rightRight1.add(labelRectangle2, BorderLayout.BOTTOM);
+
+			GridLayout layoutLabelRectangle2 = new GridLayout();
+			layoutLabelRectangle2.numColumns = 1;
+			layoutLabelRectangle2.makeColumnsEqualWidth = true;
+			layoutLabelRectangle2.horizontalSpacing = 0;
+			layoutLabelRectangle2.verticalSpacing = 0;
+			layoutLabelRectangle2.marginWidth = 0;
+			layoutLabelRectangle2.marginHeight = 0;
+			labelRectangle2.setLayoutManager(layoutLabelRectangle2);
+
+			fFigureNodeLabelLabelFigure = new WrappingLabel();
+			fFigureNodeLabelLabelFigure.setText(" ");
+
+			GridData constraintFFigureNodeLabelLabelFigure = new GridData();
+			constraintFFigureNodeLabelLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureNodeLabelLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureNodeLabelLabelFigure.horizontalIndent = 0;
+			constraintFFigureNodeLabelLabelFigure.horizontalSpan = 1;
+			constraintFFigureNodeLabelLabelFigure.verticalSpan = 1;
+			constraintFFigureNodeLabelLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureNodeLabelLabelFigure.grabExcessVerticalSpace = true;
+			labelRectangle2.add(fFigureNodeLabelLabelFigure, constraintFFigureNodeLabelLabelFigure);
+
+		}
+
+		/**
+		* @generated
+		*/
+		private Border createBorder0() {
+			ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();
+
+			return result;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getFigureNodeRequirementLabelFigure() {
+			return fFigureNodeRequirementLabelFigure;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getFigureNodeTracibilityStatusLabelFigure() {
+			return fFigureNodeTracibilityStatusLabelFigure;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getFigureNodeComponentLabelFigure() {
+			return fFigureNodeComponentLabelFigure;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getFigureNodeBehaviorLabelFigure() {
+			return fFigureNodeBehaviorLabelFigure;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getFigureNodeOperatorLabelFigure() {
+			return fFigureNodeOperatorLabelFigure;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getFigureNodeLabelLabelFigure() {
+			return fFigureNodeLabelLabelFigure;
+		}
+
+		/**
+			 * @generated NOT
+			 */
 		public void paint(Graphics graphics) {
-			CustomPainting.setNodeColor(this, (StandardNode) view.getElement());
-			CustomPainting.setBehaviorLabel(fFigureNodeBehaviorLabelFigure, (StandardNode) view.getElement());			
+			CustomPainting.setNodeColor(this, (StandardNode) view.getElement(), hasFocus);
+			CustomPainting.setBehaviorLabel(fFigureNodeBehaviorLabelFigure, (StandardNode) view.getElement());
 			super.paint(graphics);
 		}
+
+		private boolean hasFocus;
+
+		/**
+		 * @override
+		 */
+		public void handleFocusGained(FocusEvent event) {
+			hasFocus = true;
+			repaint();
+		}
+
+		/**
+		 * @override
+		 */
+		public void handleFocusLost(FocusEvent event) {
+			hasFocus = false;
+			repaint();
+		}
 	}
+
+	/**
+	* @generated
+	*/
+	static final Color THIS_BACK = new Color(null, 179, 211, 69);
+	/**
+	* @generated
+	*/
+	static final Font THIS_FONT = new Font(Display.getCurrent(), "ComBEFont", 6, SWT.BOLD);
 }

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeEditPart.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeEditPart.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeEditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,8 +1,44 @@
 package ComBE.diagram.edit.parts;
 
+import java.util.Iterator;
+
+import org.eclipse.draw2d.Border;
+import org.eclipse.draw2d.BorderLayout;
+import org.eclipse.draw2d.ColorConstants;
 import org.eclipse.draw2d.Graphics;
 
+import org.eclipse.draw2d.FocusEvent;
+import org.eclipse.draw2d.FocusListener;
+import org.eclipse.draw2d.GridData;
+import org.eclipse.draw2d.GridLayout;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.MarginBorder;
+import org.eclipse.draw2d.PositionConstants;
+import org.eclipse.draw2d.RectangleFigure;
+import org.eclipse.draw2d.Shape;
+import org.eclipse.draw2d.StackLayout;
+import org.eclipse.draw2d.geometry.Dimension;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gef.editpolicies.LayoutEditPolicy;
+import org.eclipse.gef.editpolicies.NonResizableEditPolicy;
+import org.eclipse.gef.editpolicies.ResizableEditPolicy;
+import org.eclipse.gef.requests.CreateRequest;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.Font;
+import org.eclipse.swt.widgets.Display;
 import ComBE.StandardNode;
+import ComBE.diagram.customCode.ComBESelectionEditPolicy;
 import ComBE.diagram.customCode.CustomPainting;
 
 /**
@@ -11,10 +47,22 @@
 public class StandardNodeEditPart extends ShapeNodeEditPart {
 
 	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 3001;
+	/**
+	* @generated
+	*/
+	protected IFigure contentPane;
+	/**
+	* @generated
+	*/
+	protected IFigure primaryShape;
+	/**
 	* @generated NOT
 	*/
 	private View view;
-	
+
 	/**
 	* @generated NOT
 	*/
@@ -24,17 +72,670 @@
 	}
 
 	/**
+	* @generated NOT
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new ComBE.diagram.edit.policies.StandardNodeItemSemanticEditPolicy());
+		installEditPolicy(EditPolicyRoles.CANONICAL_ROLE, new ComBE.diagram.edit.policies.StandardNodeCanonicalEditPolicy());
+		installEditPolicy(EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
+		// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies
+		// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CONNECTION_HANDLES_ROLE);
+
+		// BEGIN non-generated code
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBESelectionEditPolicy());
+		// END non-generated code
+	}
+
+	/**
+	* @generated
+	*/
+	protected LayoutEditPolicy createLayoutEditPolicy() {
+		org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy lep = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.LayoutEditPolicy() {
+
+			protected EditPolicy createChildEditPolicy(EditPart child) {
+				EditPolicy result = child.getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+				if (result == null) {
+					result = new NonResizableEditPolicy();
+				}
+				return result;
+			}
+
+			protected Command getMoveChildrenCommand(Request request) {
+				return null;
+			}
+
+			protected Command getCreateCommand(CreateRequest request) {
+				return null;
+			}
+		};
+		return lep;
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createNodeShape() {
+		return primaryShape = new NodeFigure();
+	}
+
+	/**
+	* @generated
+	*/
+	public NodeFigure getPrimaryShape() {
+		return (NodeFigure) primaryShape;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean addFixedChild(EditPart childEditPart) {
+		if (childEditPart instanceof ComBE.diagram.edit.parts.WrappingLabelEditPart) {
+			((ComBE.diagram.edit.parts.WrappingLabelEditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeRequirementLabelFigure());
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.WrappingLabel2EditPart) {
+			((ComBE.diagram.edit.parts.WrappingLabel2EditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeComponentLabelFigure());
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.WrappingLabel3EditPart) {
+			((ComBE.diagram.edit.parts.WrappingLabel3EditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeBehaviorLabelFigure());
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.StandardNodeTracibilitystatusEditPart) {
+			((ComBE.diagram.edit.parts.StandardNodeTracibilitystatusEditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeTracibilityStatusLabelFigure());
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.StandardNodeOperatorEditPart) {
+			((ComBE.diagram.edit.parts.StandardNodeOperatorEditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeOperatorLabelFigure());
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.StandardNodeLabelEditPart) {
+			((ComBE.diagram.edit.parts.StandardNodeLabelEditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeLabelLabelFigure());
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean removeFixedChild(EditPart childEditPart) {
+		if (childEditPart instanceof ComBE.diagram.edit.parts.WrappingLabelEditPart) {
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.WrappingLabel2EditPart) {
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.WrappingLabel3EditPart) {
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.StandardNodeTracibilitystatusEditPart) {
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.StandardNodeOperatorEditPart) {
+			return true;
+		}
+		if (childEditPart instanceof ComBE.diagram.edit.parts.StandardNodeLabelEditPart) {
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addChildVisual(EditPart childEditPart, int index) {
+		if (addFixedChild(childEditPart)) {
+			return;
+		}
+		super.addChildVisual(childEditPart, -1);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeChildVisual(EditPart childEditPart) {
+		if (removeFixedChild(childEditPart)) {
+			return;
+		}
+		super.removeChildVisual(childEditPart);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure getContentPaneFor(IGraphicalEditPart editPart) {
+		return getContentPane();
+	}
+
+	/**
+	* @generated
+	*/
+	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodePlate() {
+		DefaultSizeNodeFigure result = new DefaultSizeNodeFigure(40, 40);
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public EditPolicy getPrimaryDragEditPolicy() {
+		EditPolicy result = super.getPrimaryDragEditPolicy();
+		if (result instanceof ResizableEditPolicy) {
+			ResizableEditPolicy ep = (ResizableEditPolicy) result;
+			ep.setResizeDirections(PositionConstants.NONE);
+		}
+		return result;
+	}
+
+	/**
+	* Creates figure for this edit part.
+	* 
+	* Body of this method does not depend on settings in generation model
+	* so you may safely remove <i>generated</i> tag and modify it.
+	* 
+	* @generated
+	*/
+	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodeFigure() {
+		org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure figure = createNodePlate();
+		figure.setLayoutManager(new StackLayout());
+		IFigure shape = createNodeShape();
+		figure.add(shape);
+		contentPane = setupContentPane(shape);
+		return figure;
+	}
+
+	/**
+	* Default implementation treats passed figure as content pane.
+	* Respects layout one may have set for generated figure.
+	* @param nodeShape instance of generated figure class
+	* @generated
+	*/
+	protected IFigure setupContentPane(IFigure nodeShape) {
+		if (nodeShape.getLayoutManager() == null) {
+			ConstrainedToolbarLayout layout = new ConstrainedToolbarLayout();
+			layout.setSpacing(5);
+			nodeShape.setLayoutManager(layout);
+		}
+		return nodeShape; // use nodeShape itself as contentPane
+	}
+
+	/**
+	* @generated
+	*/
+	public IFigure getContentPane() {
+		if (contentPane != null) {
+			return contentPane;
+		}
+		return super.getContentPane();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setForegroundColor(Color color) {
+		if (primaryShape != null) {
+			primaryShape.setForegroundColor(color);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setBackgroundColor(Color color) {
+		if (primaryShape != null) {
+			primaryShape.setBackgroundColor(color);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLineWidth(int width) {
+		if (primaryShape instanceof Shape) {
+			((Shape) primaryShape).setLineWidth(width);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLineType(int style) {
+		if (primaryShape instanceof Shape) {
+			((Shape) primaryShape).setLineStyle(style);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public EditPart getPrimaryChildEditPart() {
+		return getChildBySemanticHint(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabelEditPart.VISUAL_ID));
+	}
+
+	/**
 	 * @generated
 	 */
 	public class NodeFigure extends RectangleFigure {
 
 		/**
-		 * @generated NOT
-		 */
+		* @generated
+		*/
+		private WrappingLabel fFigureNodeRequirementLabelFigure;
+		/**
+		* @generated
+		*/
+		private WrappingLabel fFigureNodeTracibilityStatusLabelFigure;
+		/**
+		* @generated
+		*/
+		private WrappingLabel fFigureNodeComponentLabelFigure;
+		/**
+		* @generated
+		*/
+		private WrappingLabel fFigureNodeBehaviorLabelFigure;
+		/**
+		* @generated
+		*/
+		private WrappingLabel fFigureNodeOperatorLabelFigure;
+		/**
+		* @generated
+		*/
+		private WrappingLabel fFigureNodeLabelLabelFigure;
+
+		/**
+		* @generated
+		*/
+		public NodeFigure() {
+
+			GridLayout layoutThis = new GridLayout();
+			layoutThis.numColumns = 3;
+			layoutThis.makeColumnsEqualWidth = false;
+			layoutThis.horizontalSpacing = 0;
+			layoutThis.verticalSpacing = 0;
+			layoutThis.marginWidth = 0;
+			layoutThis.marginHeight = 0;
+			this.setLayoutManager(layoutThis);
+
+			this.setOutline(false);
+			this.setLineWidth(0);
+			this.setForegroundColor(ColorConstants.black);
+			this.setBackgroundColor(THIS_BACK);
+
+			this.setFont(THIS_FONT);
+
+			this.setBorder(createBorder0());
+			createContents();
+		}
+
+		/**
+		* @generated
+		*/
+		private void createContents() {
+
+			RectangleFigure left0 = new RectangleFigure();
+			left0.setOutline(false);
+			left0.setLineWidth(0);
+			left0.setPreferredSize(new Dimension(getMapMode().DPtoLP(54), getMapMode().DPtoLP(60)));
+
+			this.add(left0);
+
+			GridLayout layoutLeft0 = new GridLayout();
+			layoutLeft0.numColumns = 1;
+			layoutLeft0.makeColumnsEqualWidth = true;
+			layoutLeft0.horizontalSpacing = 0;
+			layoutLeft0.verticalSpacing = 0;
+			layoutLeft0.marginWidth = 0;
+			layoutLeft0.marginHeight = 0;
+			left0.setLayoutManager(layoutLeft0);
+
+			RectangleFigure leftLeft1 = new RectangleFigure();
+			leftLeft1.setFill(false);
+			leftLeft1.setOutline(false);
+			leftLeft1.setLineWidth(0);
+
+			leftLeft1.setBorder(new MarginBorder(getMapMode().DPtoLP(2), getMapMode().DPtoLP(0), getMapMode().DPtoLP(2), getMapMode().DPtoLP(0)));
+
+			GridData constraintLeftLeft1 = new GridData();
+			constraintLeftLeft1.verticalAlignment = GridData.CENTER;
+			constraintLeftLeft1.horizontalAlignment = GridData.CENTER;
+			constraintLeftLeft1.horizontalIndent = 0;
+			constraintLeftLeft1.horizontalSpan = 1;
+			constraintLeftLeft1.verticalSpan = 1;
+			constraintLeftLeft1.grabExcessHorizontalSpace = true;
+			constraintLeftLeft1.grabExcessVerticalSpace = true;
+			left0.add(leftLeft1, constraintLeftLeft1);
+
+			BorderLayout layoutLeftLeft1 = new BorderLayout();
+			leftLeft1.setLayoutManager(layoutLeftLeft1);
+
+			RectangleFigure requirementRectangle2 = new RectangleFigure();
+			requirementRectangle2.setFill(false);
+			requirementRectangle2.setOutline(false);
+			requirementRectangle2.setLineWidth(0);
+
+			leftLeft1.add(requirementRectangle2, BorderLayout.TOP);
+
+			GridLayout layoutRequirementRectangle2 = new GridLayout();
+			layoutRequirementRectangle2.numColumns = 1;
+			layoutRequirementRectangle2.makeColumnsEqualWidth = true;
+			requirementRectangle2.setLayoutManager(layoutRequirementRectangle2);
+
+			fFigureNodeRequirementLabelFigure = new WrappingLabel();
+			fFigureNodeRequirementLabelFigure.setText("");
+
+			GridData constraintFFigureNodeRequirementLabelFigure = new GridData();
+			constraintFFigureNodeRequirementLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureNodeRequirementLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureNodeRequirementLabelFigure.horizontalIndent = 0;
+			constraintFFigureNodeRequirementLabelFigure.horizontalSpan = 1;
+			constraintFFigureNodeRequirementLabelFigure.verticalSpan = 1;
+			constraintFFigureNodeRequirementLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureNodeRequirementLabelFigure.grabExcessVerticalSpace = true;
+			requirementRectangle2.add(fFigureNodeRequirementLabelFigure, constraintFFigureNodeRequirementLabelFigure);
+
+			RectangleFigure tracibilityStatusRectangle2 = new RectangleFigure();
+			tracibilityStatusRectangle2.setFill(false);
+			tracibilityStatusRectangle2.setOutline(false);
+			tracibilityStatusRectangle2.setLineWidth(0);
+
+			leftLeft1.add(tracibilityStatusRectangle2, BorderLayout.BOTTOM);
+
+			GridLayout layoutTracibilityStatusRectangle2 = new GridLayout();
+			layoutTracibilityStatusRectangle2.numColumns = 1;
+			layoutTracibilityStatusRectangle2.makeColumnsEqualWidth = true;
+			tracibilityStatusRectangle2.setLayoutManager(layoutTracibilityStatusRectangle2);
+
+			fFigureNodeTracibilityStatusLabelFigure = new WrappingLabel();
+			fFigureNodeTracibilityStatusLabelFigure.setText(" ");
+
+			GridData constraintFFigureNodeTracibilityStatusLabelFigure = new GridData();
+			constraintFFigureNodeTracibilityStatusLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureNodeTracibilityStatusLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureNodeTracibilityStatusLabelFigure.horizontalIndent = 0;
+			constraintFFigureNodeTracibilityStatusLabelFigure.horizontalSpan = 1;
+			constraintFFigureNodeTracibilityStatusLabelFigure.verticalSpan = 1;
+			constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureNodeTracibilityStatusLabelFigure.grabExcessVerticalSpace = true;
+			tracibilityStatusRectangle2.add(fFigureNodeTracibilityStatusLabelFigure, constraintFFigureNodeTracibilityStatusLabelFigure);
+
+			RectangleFigure line0 = new RectangleFigure();
+			line0.setOutline(false);
+			line0.setLineWidth(0);
+			line0.setBackgroundColor(ColorConstants.black);
+
+			GridData constraintLine0 = new GridData();
+			constraintLine0.verticalAlignment = GridData.CENTER;
+			constraintLine0.horizontalAlignment = GridData.CENTER;
+			constraintLine0.horizontalIndent = 0;
+			constraintLine0.horizontalSpan = 1;
+			constraintLine0.verticalSpan = 1;
+			constraintLine0.grabExcessHorizontalSpace = false;
+			constraintLine0.grabExcessVerticalSpace = false;
+			constraintLine0.widthHint = 1;
+			constraintLine0.heightHint = 60;
+			this.add(line0, constraintLine0);
+
+			RectangleFigure right0 = new RectangleFigure();
+			right0.setOutline(false);
+			right0.setLineWidth(0);
+			right0.setPreferredSize(new Dimension(getMapMode().DPtoLP(125), getMapMode().DPtoLP(60)));
+
+			GridData constraintRight0 = new GridData();
+			constraintRight0.verticalAlignment = GridData.CENTER;
+			constraintRight0.horizontalAlignment = GridData.CENTER;
+			constraintRight0.horizontalIndent = 0;
+			constraintRight0.horizontalSpan = 1;
+			constraintRight0.verticalSpan = 1;
+			constraintRight0.grabExcessHorizontalSpace = true;
+			constraintRight0.grabExcessVerticalSpace = true;
+			this.add(right0, constraintRight0);
+
+			GridLayout layoutRight0 = new GridLayout();
+			layoutRight0.numColumns = 2;
+			layoutRight0.makeColumnsEqualWidth = false;
+			layoutRight0.horizontalSpacing = 0;
+			layoutRight0.verticalSpacing = 0;
+			layoutRight0.marginWidth = 0;
+			layoutRight0.marginHeight = 0;
+			right0.setLayoutManager(layoutRight0);
+
+			RectangleFigure rightLeft1 = new RectangleFigure();
+			rightLeft1.setFill(false);
+			rightLeft1.setOutline(false);
+			rightLeft1.setLineWidth(0);
+
+			rightLeft1.setBorder(new MarginBorder(getMapMode().DPtoLP(2), getMapMode().DPtoLP(0), getMapMode().DPtoLP(2), getMapMode().DPtoLP(0)));
+
+			GridData constraintRightLeft1 = new GridData();
+			constraintRightLeft1.verticalAlignment = GridData.CENTER;
+			constraintRightLeft1.horizontalAlignment = GridData.CENTER;
+			constraintRightLeft1.horizontalIndent = 0;
+			constraintRightLeft1.horizontalSpan = 1;
+			constraintRightLeft1.verticalSpan = 1;
+			constraintRightLeft1.grabExcessHorizontalSpace = true;
+			constraintRightLeft1.grabExcessVerticalSpace = true;
+			right0.add(rightLeft1, constraintRightLeft1);
+
+			BorderLayout layoutRightLeft1 = new BorderLayout();
+			rightLeft1.setLayoutManager(layoutRightLeft1);
+
+			RectangleFigure componentRectangle2 = new RectangleFigure();
+			componentRectangle2.setFill(false);
+			componentRectangle2.setOutline(false);
+			componentRectangle2.setLineWidth(0);
+
+			rightLeft1.add(componentRectangle2, BorderLayout.TOP);
+
+			GridLayout layoutComponentRectangle2 = new GridLayout();
+			layoutComponentRectangle2.numColumns = 1;
+			layoutComponentRectangle2.makeColumnsEqualWidth = true;
+			componentRectangle2.setLayoutManager(layoutComponentRectangle2);
+
+			fFigureNodeComponentLabelFigure = new WrappingLabel();
+			fFigureNodeComponentLabelFigure.setText("");
+
+			GridData constraintFFigureNodeComponentLabelFigure = new GridData();
+			constraintFFigureNodeComponentLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureNodeComponentLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureNodeComponentLabelFigure.horizontalIndent = 0;
+			constraintFFigureNodeComponentLabelFigure.horizontalSpan = 1;
+			constraintFFigureNodeComponentLabelFigure.verticalSpan = 1;
+			constraintFFigureNodeComponentLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureNodeComponentLabelFigure.grabExcessVerticalSpace = true;
+			componentRectangle2.add(fFigureNodeComponentLabelFigure, constraintFFigureNodeComponentLabelFigure);
+
+			RectangleFigure behaviorRectangle2 = new RectangleFigure();
+			behaviorRectangle2.setFill(false);
+			behaviorRectangle2.setOutline(false);
+			behaviorRectangle2.setLineWidth(0);
+
+			rightLeft1.add(behaviorRectangle2, BorderLayout.BOTTOM);
+
+			GridLayout layoutBehaviorRectangle2 = new GridLayout();
+			layoutBehaviorRectangle2.numColumns = 1;
+			layoutBehaviorRectangle2.makeColumnsEqualWidth = true;
+			behaviorRectangle2.setLayoutManager(layoutBehaviorRectangle2);
+
+			fFigureNodeBehaviorLabelFigure = new WrappingLabel();
+			fFigureNodeBehaviorLabelFigure.setText("");
+
+			GridData constraintFFigureNodeBehaviorLabelFigure = new GridData();
+			constraintFFigureNodeBehaviorLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureNodeBehaviorLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureNodeBehaviorLabelFigure.horizontalIndent = 0;
+			constraintFFigureNodeBehaviorLabelFigure.horizontalSpan = 1;
+			constraintFFigureNodeBehaviorLabelFigure.verticalSpan = 1;
+			constraintFFigureNodeBehaviorLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureNodeBehaviorLabelFigure.grabExcessVerticalSpace = true;
+			behaviorRectangle2.add(fFigureNodeBehaviorLabelFigure, constraintFFigureNodeBehaviorLabelFigure);
+
+			RectangleFigure rightRight1 = new RectangleFigure();
+			rightRight1.setFill(false);
+			rightRight1.setOutline(false);
+			rightRight1.setLineWidth(0);
+
+			rightRight1.setBorder(new MarginBorder(getMapMode().DPtoLP(1), getMapMode().DPtoLP(0), getMapMode().DPtoLP(20), getMapMode().DPtoLP(0)));
+
+			GridData constraintRightRight1 = new GridData();
+			constraintRightRight1.verticalAlignment = GridData.CENTER;
+			constraintRightRight1.horizontalAlignment = GridData.CENTER;
+			constraintRightRight1.horizontalIndent = 0;
+			constraintRightRight1.horizontalSpan = 1;
+			constraintRightRight1.verticalSpan = 1;
+			constraintRightRight1.grabExcessHorizontalSpace = true;
+			constraintRightRight1.grabExcessVerticalSpace = true;
+			right0.add(rightRight1, constraintRightRight1);
+
+			BorderLayout layoutRightRight1 = new BorderLayout();
+			rightRight1.setLayoutManager(layoutRightRight1);
+
+			RectangleFigure operatorRectangle2 = new RectangleFigure();
+			operatorRectangle2.setFill(false);
+			operatorRectangle2.setOutline(false);
+			operatorRectangle2.setLineWidth(0);
+
+			rightRight1.add(operatorRectangle2, BorderLayout.TOP);
+
+			GridLayout layoutOperatorRectangle2 = new GridLayout();
+			layoutOperatorRectangle2.numColumns = 1;
+			layoutOperatorRectangle2.makeColumnsEqualWidth = true;
+			layoutOperatorRectangle2.horizontalSpacing = 0;
+			layoutOperatorRectangle2.verticalSpacing = 0;
+			layoutOperatorRectangle2.marginWidth = 0;
+			layoutOperatorRectangle2.marginHeight = 0;
+			operatorRectangle2.setLayoutManager(layoutOperatorRectangle2);
+
+			fFigureNodeOperatorLabelFigure = new WrappingLabel();
+			fFigureNodeOperatorLabelFigure.setText(" ");
+
+			GridData constraintFFigureNodeOperatorLabelFigure = new GridData();
+			constraintFFigureNodeOperatorLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureNodeOperatorLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureNodeOperatorLabelFigure.horizontalIndent = 0;
+			constraintFFigureNodeOperatorLabelFigure.horizontalSpan = 1;
+			constraintFFigureNodeOperatorLabelFigure.verticalSpan = 1;
+			constraintFFigureNodeOperatorLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureNodeOperatorLabelFigure.grabExcessVerticalSpace = true;
+			operatorRectangle2.add(fFigureNodeOperatorLabelFigure, constraintFFigureNodeOperatorLabelFigure);
+
+			RectangleFigure labelRectangle2 = new RectangleFigure();
+			labelRectangle2.setFill(false);
+			labelRectangle2.setOutline(false);
+			labelRectangle2.setLineWidth(0);
+
+			rightRight1.add(labelRectangle2, BorderLayout.BOTTOM);
+
+			GridLayout layoutLabelRectangle2 = new GridLayout();
+			layoutLabelRectangle2.numColumns = 1;
+			layoutLabelRectangle2.makeColumnsEqualWidth = true;
+			layoutLabelRectangle2.horizontalSpacing = 0;
+			layoutLabelRectangle2.verticalSpacing = 0;
+			layoutLabelRectangle2.marginWidth = 0;
+			layoutLabelRectangle2.marginHeight = 0;
+			labelRectangle2.setLayoutManager(layoutLabelRectangle2);
+
+			fFigureNodeLabelLabelFigure = new WrappingLabel();
+			fFigureNodeLabelLabelFigure.setText(" ");
+
+			GridData constraintFFigureNodeLabelLabelFigure = new GridData();
+			constraintFFigureNodeLabelLabelFigure.verticalAlignment = GridData.CENTER;
+			constraintFFigureNodeLabelLabelFigure.horizontalAlignment = GridData.CENTER;
+			constraintFFigureNodeLabelLabelFigure.horizontalIndent = 0;
+			constraintFFigureNodeLabelLabelFigure.horizontalSpan = 1;
+			constraintFFigureNodeLabelLabelFigure.verticalSpan = 1;
+			constraintFFigureNodeLabelLabelFigure.grabExcessHorizontalSpace = true;
+			constraintFFigureNodeLabelLabelFigure.grabExcessVerticalSpace = true;
+			labelRectangle2.add(fFigureNodeLabelLabelFigure, constraintFFigureNodeLabelLabelFigure);
+
+		}
+
+		/**
+		* @generated
+		*/
+		private Border createBorder0() {
+			ComBE.diagram.customCode.CustomLineBorder result = new ComBE.diagram.customCode.CustomLineBorder();
+
+			return result;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getFigureNodeRequirementLabelFigure() {
+			return fFigureNodeRequirementLabelFigure;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getFigureNodeTracibilityStatusLabelFigure() {
+			return fFigureNodeTracibilityStatusLabelFigure;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getFigureNodeComponentLabelFigure() {
+			return fFigureNodeComponentLabelFigure;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getFigureNodeBehaviorLabelFigure() {
+			return fFigureNodeBehaviorLabelFigure;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getFigureNodeOperatorLabelFigure() {
+			return fFigureNodeOperatorLabelFigure;
+		}
+
+		/**
+		* @generated
+		*/
+		public WrappingLabel getFigureNodeLabelLabelFigure() {
+			return fFigureNodeLabelLabelFigure;
+		}
+
+		/**
+		`	* @generated NOT
+		*/
 		public void paint(Graphics graphics) {
-			CustomPainting.setNodeColor(this, (StandardNode) view.getElement());
-			CustomPainting.setBehaviorLabel(fFigureNodeBehaviorLabelFigure, (StandardNode) view.getElement());			
+			CustomPainting.setNodeColor(this, (StandardNode) view.getElement(), hasFocus);
+			CustomPainting.setBehaviorLabel(fFigureNodeBehaviorLabelFigure, (StandardNode) view.getElement());
 			super.paint(graphics);
 		}
+
+		private boolean hasFocus;
+
+		/**
+		 * @override
+		 */
+		public void handleFocusGained(FocusEvent event) {
+			hasFocus = true;
+			repaint();
+		}
+
+		/**
+		 * @override
+		 */
+		public void handleFocusLost(FocusEvent event) {
+			hasFocus = false;
+			repaint();
+		}
 	}
+
+	/**
+	* @generated
+	*/
+	static final Color THIS_BACK = new Color(null, 179, 211, 69);
+	/**
+	* @generated
+	*/
+	static final Font THIS_FONT = new Font(Display.getCurrent(), "ComBEFont", 6, SWT.BOLD);
 }

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeLabel2EditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeLabel2EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,519 @@
+package ComBE.diagram.edit.parts;
+
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * @generated
+ */
+public class StandardNodeLabel2EditPart extends CompartmentEditPart implements ITextAwareEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5012;
+
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+
+	/**
+	* @generated
+	*/
+	private IParser parser;
+
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public StandardNodeLabel2EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelText() {
+		String text = null;
+		EObject parserElement = getParserElement();
+		if (parserElement != null && getParser() != null) {
+			text = getParser().getPrintString(new EObjectAdapter(parserElement), getParserOptions().intValue());
+		}
+		if (text == null || text.length() == 0) {
+			text = defaultText;
+		}
+		return text;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return getParser() != null;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3003, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeLabel2EditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeLabel3EditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeLabel3EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,519 @@
+package ComBE.diagram.edit.parts;
+
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * @generated
+ */
+public class StandardNodeLabel3EditPart extends CompartmentEditPart implements ITextAwareEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5018;
+
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+
+	/**
+	* @generated
+	*/
+	private IParser parser;
+
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public StandardNodeLabel3EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelText() {
+		String text = null;
+		EObject parserElement = getParserElement();
+		if (parserElement != null && getParser() != null) {
+			text = getParser().getPrintString(new EObjectAdapter(parserElement), getParserOptions().intValue());
+		}
+		if (text == null || text.length() == 0) {
+			text = defaultText;
+		}
+		return text;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return getParser() != null;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3005, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeLabel3EditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeLabelEditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeLabelEditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,519 @@
+package ComBE.diagram.edit.parts;
+
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * @generated
+ */
+public class StandardNodeLabelEditPart extends CompartmentEditPart implements ITextAwareEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5006;
+
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+
+	/**
+	* @generated
+	*/
+	private IParser parser;
+
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public StandardNodeLabelEditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelText() {
+		String text = null;
+		EObject parserElement = getParserElement();
+		if (parserElement != null && getParser() != null) {
+			text = getParser().getPrintString(new EObjectAdapter(parserElement), getParserOptions().intValue());
+		}
+		if (text == null || text.length() == 0) {
+			text = defaultText;
+		}
+		return text;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return getParser() != null;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3001, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeLabelEditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeOperator2EditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeOperator2EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,519 @@
+package ComBE.diagram.edit.parts;
+
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * @generated
+ */
+public class StandardNodeOperator2EditPart extends CompartmentEditPart implements ITextAwareEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5011;
+
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+
+	/**
+	* @generated
+	*/
+	private IParser parser;
+
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public StandardNodeOperator2EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelText() {
+		String text = null;
+		EObject parserElement = getParserElement();
+		if (parserElement != null && getParser() != null) {
+			text = getParser().getPrintString(new EObjectAdapter(parserElement), getParserOptions().intValue());
+		}
+		if (text == null || text.length() == 0) {
+			text = defaultText;
+		}
+		return text;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return getParser() != null;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3003, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeOperator2EditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeOperator3EditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeOperator3EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,519 @@
+package ComBE.diagram.edit.parts;
+
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * @generated
+ */
+public class StandardNodeOperator3EditPart extends CompartmentEditPart implements ITextAwareEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5017;
+
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+
+	/**
+	* @generated
+	*/
+	private IParser parser;
+
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public StandardNodeOperator3EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelText() {
+		String text = null;
+		EObject parserElement = getParserElement();
+		if (parserElement != null && getParser() != null) {
+			text = getParser().getPrintString(new EObjectAdapter(parserElement), getParserOptions().intValue());
+		}
+		if (text == null || text.length() == 0) {
+			text = defaultText;
+		}
+		return text;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return getParser() != null;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3005, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeOperator3EditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeOperatorEditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeOperatorEditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,519 @@
+package ComBE.diagram.edit.parts;
+
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * @generated
+ */
+public class StandardNodeOperatorEditPart extends CompartmentEditPart implements ITextAwareEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5005;
+
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+
+	/**
+	* @generated
+	*/
+	private IParser parser;
+
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public StandardNodeOperatorEditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelText() {
+		String text = null;
+		EObject parserElement = getParserElement();
+		if (parserElement != null && getParser() != null) {
+			text = getParser().getPrintString(new EObjectAdapter(parserElement), getParserOptions().intValue());
+		}
+		if (text == null || text.length() == 0) {
+			text = defaultText;
+		}
+		return text;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return getParser() != null;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3001, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeOperatorEditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeTracibilitystatus2EditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeTracibilitystatus2EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,519 @@
+package ComBE.diagram.edit.parts;
+
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * @generated
+ */
+public class StandardNodeTracibilitystatus2EditPart extends CompartmentEditPart implements ITextAwareEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5010;
+
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+
+	/**
+	* @generated
+	*/
+	private IParser parser;
+
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public StandardNodeTracibilitystatus2EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelText() {
+		String text = null;
+		EObject parserElement = getParserElement();
+		if (parserElement != null && getParser() != null) {
+			text = getParser().getPrintString(new EObjectAdapter(parserElement), getParserOptions().intValue());
+		}
+		if (text == null || text.length() == 0) {
+			text = defaultText;
+		}
+		return text;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return getParser() != null;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3003, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeTracibilitystatus2EditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeTracibilitystatus3EditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeTracibilitystatus3EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,519 @@
+package ComBE.diagram.edit.parts;
+
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * @generated
+ */
+public class StandardNodeTracibilitystatus3EditPart extends CompartmentEditPart implements ITextAwareEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5016;
+
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+
+	/**
+	* @generated
+	*/
+	private IParser parser;
+
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public StandardNodeTracibilitystatus3EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelText() {
+		String text = null;
+		EObject parserElement = getParserElement();
+		if (parserElement != null && getParser() != null) {
+			text = getParser().getPrintString(new EObjectAdapter(parserElement), getParserOptions().intValue());
+		}
+		if (text == null || text.length() == 0) {
+			text = defaultText;
+		}
+		return text;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return getParser() != null;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3005, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeTracibilitystatus3EditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeTracibilitystatusEditPart.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/StandardNodeTracibilitystatusEditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,519 @@
+package ComBE.diagram.edit.parts;
+
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * @generated
+ */
+public class StandardNodeTracibilitystatusEditPart extends CompartmentEditPart implements ITextAwareEditPart {
+
+	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5004;
+
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+
+	/**
+	* @generated
+	*/
+	private IParser parser;
+
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public StandardNodeTracibilitystatusEditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelText() {
+		String text = null;
+		EObject parserElement = getParserElement();
+		if (parserElement != null && getParser() != null) {
+			text = getParser().getPrintString(new EObjectAdapter(parserElement), getParserOptions().intValue());
+		}
+		if (text == null || text.length() == 0) {
+			text = defaultText;
+		}
+		return text;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return getParser() != null;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3001, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeTracibilitystatusEditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
+
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel2EditPart.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel2EditPart.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel2EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,11 +1,171 @@
 package ComBE.diagram.edit.parts;
 
+import java.util.Collections;
+import java.util.List;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
 /**
  * @generated
  */
 public class WrappingLabel2EditPart extends CompartmentEditPart implements ITextAwareEditPart {
 
 	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5002;
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+	/**
+	* @generated
+	*/
+	private IParser parser;
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public WrappingLabel2EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
 	* @generated NOT
 	* Workaround for GMF/331875
 	*/
@@ -20,4 +180,335 @@
 		}
 		return text;
 	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3001, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel2EditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
 }
\ No newline at end of file

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel3EditPart.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel3EditPart.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel3EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,11 +1,171 @@
 package ComBE.diagram.edit.parts;
 
+import java.util.Collections;
+import java.util.List;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
 /**
  * @generated
  */
 public class WrappingLabel3EditPart extends CompartmentEditPart implements ITextAwareEditPart {
 
 	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5003;
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+	/**
+	* @generated
+	*/
+	private IParser parser;
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public WrappingLabel3EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
 	* @generated NOT
 	* Workaround for GMF/331875
 	*/
@@ -20,4 +180,335 @@
 		}
 		return text;
 	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3001, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel3EditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
 }
\ No newline at end of file

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel4EditPart.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel4EditPart.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel4EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,11 +1,171 @@
 package ComBE.diagram.edit.parts;
 
+import java.util.Collections;
+import java.util.List;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
 /**
  * @generated
  */
 public class WrappingLabel4EditPart extends CompartmentEditPart implements ITextAwareEditPart {
 
 	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5007;
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+	/**
+	* @generated
+	*/
+	private IParser parser;
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public WrappingLabel4EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
 	* @generated NOT
 	* Workaround for GMF/331875
 	*/
@@ -20,4 +180,335 @@
 		}
 		return text;
 	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3003, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel4EditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
 }
\ No newline at end of file

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel5EditPart.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel5EditPart.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel5EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,11 +1,171 @@
 package ComBE.diagram.edit.parts;
 
+import java.util.Collections;
+import java.util.List;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
 /**
  * @generated
  */
 public class WrappingLabel5EditPart extends CompartmentEditPart implements ITextAwareEditPart {
 
 	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5008;
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+	/**
+	* @generated
+	*/
+	private IParser parser;
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public WrappingLabel5EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
 	* @generated NOT
 	* Workaround for GMF/331875
 	*/
@@ -20,4 +180,335 @@
 		}
 		return text;
 	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3003, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel5EditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
 }
\ No newline at end of file

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel6EditPart.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel6EditPart.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel6EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,11 +1,171 @@
 package ComBE.diagram.edit.parts;
 
+import java.util.Collections;
+import java.util.List;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
 /**
  * @generated
  */
 public class WrappingLabel6EditPart extends CompartmentEditPart implements ITextAwareEditPart {
 
 	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5009;
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+	/**
+	* @generated
+	*/
+	private IParser parser;
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public WrappingLabel6EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
 	* @generated NOT
 	* Workaround for GMF/331875
 	*/
@@ -20,4 +180,335 @@
 		}
 		return text;
 	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3003, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel6EditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
 }
\ No newline at end of file

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel7EditPart.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel7EditPart.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel7EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,11 +1,171 @@
 package ComBE.diagram.edit.parts;
 
+import java.util.Collections;
+import java.util.List;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
 /**
  * @generated
  */
 public class WrappingLabel7EditPart extends CompartmentEditPart implements ITextAwareEditPart {
 
 	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5013;
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+	/**
+	* @generated
+	*/
+	private IParser parser;
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public WrappingLabel7EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
 	* @generated NOT
 	* Workaround for GMF/331875
 	*/
@@ -20,4 +180,335 @@
 		}
 		return text;
 	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3005, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel7EditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
 }
\ No newline at end of file

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel8EditPart.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel8EditPart.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel8EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,11 +1,171 @@
 package ComBE.diagram.edit.parts;
 
+import java.util.Collections;
+import java.util.List;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
 /**
  * @generated
  */
 public class WrappingLabel8EditPart extends CompartmentEditPart implements ITextAwareEditPart {
 
 	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5014;
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+	/**
+	* @generated
+	*/
+	private IParser parser;
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public WrappingLabel8EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
 	* @generated NOT
 	* Workaround for GMF/331875
 	*/
@@ -20,4 +180,335 @@
 		}
 		return text;
 	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3005, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel8EditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
 }
\ No newline at end of file

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel9EditPart.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel9EditPart.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabel9EditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,11 +1,171 @@
 package ComBE.diagram.edit.parts;
 
+import java.util.Collections;
+import java.util.List;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
 /**
  * @generated
  */
 public class WrappingLabel9EditPart extends CompartmentEditPart implements ITextAwareEditPart {
 
 	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5015;
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+	/**
+	* @generated
+	*/
+	private IParser parser;
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public WrappingLabel9EditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
 	* @generated NOT
 	* Workaround for GMF/331875
 	*/
@@ -20,4 +180,335 @@
 		}
 		return text;
 	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3005, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel9EditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
 }
\ No newline at end of file

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabelEditPart.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabelEditPart.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/parts/WrappingLabelEditPart.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,11 +1,171 @@
 package ComBE.diagram.edit.parts;
 
+import java.util.Collections;
+import java.util.List;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.geometry.Point;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.RunnableWithResult;
+import org.eclipse.gef.AccessibleEditPart;
+import org.eclipse.gef.EditPolicy;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.requests.DirectEditRequest;
+import org.eclipse.gef.tools.DirectEditManager;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.CompartmentEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramColorRegistry;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ISemanticParser;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.jface.viewers.ICellEditorValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.accessibility.AccessibleEvent;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.Image;
+
 /**
  * @generated
  */
 public class WrappingLabelEditPart extends CompartmentEditPart implements ITextAwareEditPart {
 
 	/**
+	* @generated
+	*/
+	public static final int VISUAL_ID = 5001;
+	/**
+	* @generated
+	*/
+	private DirectEditManager manager;
+	/**
+	* @generated
+	*/
+	private IParser parser;
+	/**
+	* @generated
+	*/
+	private List<?> parserElements;
+	/**
+	* @generated
+	*/
+	private String defaultText;
+
+	/**
+	* @generated
+	*/
+	public WrappingLabelEditPart(View view) {
+		super(view);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void createDefaultEditPolicies() {
+		super.createDefaultEditPolicies();
+		installEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE, new ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy());
+		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
+		installEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE, new ComBE.diagram.edit.parts.SpecificationEditPart.NodeLabelDragPolicy());
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getLabelTextHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getText();
+		} else {
+			return ((Label) figure).getText();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelTextHelper(IFigure figure, String text) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setText(text);
+		} else {
+			((Label) figure).setText(text);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIconHelper(IFigure figure) {
+		if (figure instanceof WrappingLabel) {
+			return ((WrappingLabel) figure).getIcon();
+		} else {
+			return ((Label) figure).getIcon();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setLabelIconHelper(IFigure figure, Image icon) {
+		if (figure instanceof WrappingLabel) {
+			((WrappingLabel) figure).setIcon(icon);
+		} else {
+			((Label) figure).setIcon(icon);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLabel(WrappingLabel figure) {
+		unregisterVisuals();
+		setFigure(figure);
+		defaultText = getLabelTextHelper(figure);
+		registerVisuals();
+		refreshVisuals();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getModelChildren() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public IGraphicalEditPart getChildBySemanticHint(String semanticHint) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject getParserElement() {
+		return resolveSemanticElement();
+	}
+
+	/**
+	* @generated
+	*/
+	protected Image getLabelIcon() {
+		return null;
+	}
+
+	/**
 	* @generated NOT
 	* Workaround for GMF/331875
 	*/
@@ -20,4 +180,335 @@
 		}
 		return text;
 	}
+
+	/**
+	* @generated
+	*/
+	public void setLabelText(String text) {
+		setLabelTextHelper(getFigure(), text);
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditText() {
+		if (getParserElement() == null || getParser() == null) {
+			return ""; //$NON-NLS-1$
+		}
+		return getParser().getEditString(new EObjectAdapter(getParserElement()), getParserOptions().intValue());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isEditable() {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICellEditorValidator getEditTextValidator() {
+		return new ICellEditorValidator() {
+
+			public String isValid(final Object value) {
+				if (value instanceof String) {
+					final EObject element = getParserElement();
+					final IParser parser = getParser();
+					try {
+						IParserEditStatus valid = (IParserEditStatus) getEditingDomain().runExclusive(new RunnableWithResult.Impl<IParserEditStatus>() {
+
+							public void run() {
+								setResult(parser.isValidEditString(new EObjectAdapter(element), (String) value));
+							}
+						});
+						return valid.getCode() == ParserEditStatus.EDITABLE ? null : valid.getMessage();
+					} catch (InterruptedException ie) {
+						ie.printStackTrace();
+					}
+				}
+
+				// shouldn't get here
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor() {
+		if (getParserElement() == null || getParser() == null) {
+			return null;
+		}
+		return getParser().getCompletionProcessor(new EObjectAdapter(getParserElement()));
+	}
+
+	/**
+	* @generated
+	*/
+	public ParserOptions getParserOptions() {
+		return ParserOptions.NONE;
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser() {
+		if (parser == null) {
+			parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3001, getParserElement(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabelEditPart.VISUAL_ID));
+		}
+		return parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected DirectEditManager getManager() {
+		if (manager == null) {
+			setManager(new TextDirectEditManager(this, TextDirectEditManager.getTextCellEditorClass(this), ComBE.diagram.edit.parts.ComBEEditPartFactory.getTextCellEditorLocator(this)));
+		}
+		return manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setManager(DirectEditManager manager) {
+		this.manager = manager;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit() {
+		getManager().show();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEdit(Point eventLocation) {
+		if (getManager().getClass() == TextDirectEditManager.class) {
+			((TextDirectEditManager) getManager()).show(eventLocation.getSWTPoint());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void performDirectEdit(char initialCharacter) {
+		if (getManager() instanceof TextDirectEditManager) {
+			((TextDirectEditManager) getManager()).show(initialCharacter);
+		} else {
+			performDirectEdit();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performDirectEditRequest(Request request) {
+		final Request theRequest = request;
+		try {
+			getEditingDomain().runExclusive(new Runnable() {
+
+				public void run() {
+					if (isActive() && isEditable()) {
+						if (theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR) instanceof Character) {
+							Character initialChar = (Character) theRequest.getExtendedData().get(RequestConstants.REQ_DIRECTEDIT_EXTENDEDDATA_INITIAL_CHAR);
+							performDirectEdit(initialChar.charValue());
+						} else if ((theRequest instanceof DirectEditRequest) && (getEditText().equals(getLabelText()))) {
+							DirectEditRequest editRequest = (DirectEditRequest) theRequest;
+							performDirectEdit(editRequest.getLocation());
+						} else {
+							performDirectEdit();
+						}
+					}
+				}
+			});
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshVisuals() {
+		super.refreshVisuals();
+		refreshLabel();
+		refreshFont();
+		refreshFontColor();
+		refreshUnderline();
+		refreshStrikeThrough();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshLabel() {
+		setLabelTextHelper(getFigure(), getLabelText());
+		setLabelIconHelper(getFigure(), getLabelIcon());
+		Object pdEditPolicy = getEditPolicy(EditPolicy.PRIMARY_DRAG_ROLE);
+		if (pdEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) pdEditPolicy).refreshFeedback();
+		}
+		Object sfEditPolicy = getEditPolicy(EditPolicy.SELECTION_FEEDBACK_ROLE);
+		if (sfEditPolicy instanceof ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) {
+			((ComBE.diagram.edit.policies.ComBETextSelectionEditPolicy) sfEditPolicy).refreshFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshUnderline() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextUnderline(style.isUnderline());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshStrikeThrough() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null && getFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getFigure()).setTextStrikeThrough(style.isStrikeThrough());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFont() {
+		FontStyle style = (FontStyle) getFontStyleOwnerView().getStyle(NotationPackage.eINSTANCE.getFontStyle());
+		if (style != null) {
+			FontData fontData = new FontData(style.getFontName(), style.getFontHeight(), (style.isBold() ? SWT.BOLD : SWT.NORMAL) | (style.isItalic() ? SWT.ITALIC : SWT.NORMAL));
+			setFont(fontData);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFontColor(Color color) {
+		getFigure().setForegroundColor(color);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addSemanticListeners() {
+		if (getParser() instanceof ISemanticParser) {
+			EObject element = resolveSemanticElement();
+			parserElements = ((ISemanticParser) getParser()).getSemanticElementsBeingParsed(element);
+			for (int i = 0; i < parserElements.size(); i++) {
+				addListenerFilter("SemanticModel" + i, this, (EObject) parserElements.get(i)); //$NON-NLS-1$
+			}
+		} else {
+			super.addSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeSemanticListeners() {
+		if (parserElements != null) {
+			for (int i = 0; i < parserElements.size(); i++) {
+				removeListenerFilter("SemanticModel" + i); //$NON-NLS-1$
+			}
+		} else {
+			super.removeSemanticListeners();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected AccessibleEditPart getAccessibleEditPart() {
+		if (accessibleEP == null) {
+			accessibleEP = new AccessibleGraphicalEditPart() {
+
+				public void getName(AccessibleEvent e) {
+					e.result = getLabelTextHelper(getFigure());
+				}
+			};
+		}
+		return accessibleEP;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getFontStyleOwnerView() {
+		return getPrimaryView();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void addNotationalListeners() {
+		super.addNotationalListeners();
+		addListenerFilter("PrimaryView", this, getPrimaryView()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void removeNotationalListeners() {
+		super.removeNotationalListeners();
+		removeListenerFilter("PrimaryView"); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleNotificationEvent(Notification event) {
+		Object feature = event.getFeature();
+		if (NotationPackage.eINSTANCE.getFontStyle_FontColor().equals(feature)) {
+			Integer c = (Integer) event.getNewValue();
+			setFontColor(DiagramColorRegistry.getInstance().getColor(c));
+		} else if (NotationPackage.eINSTANCE.getFontStyle_Underline().equals(feature)) {
+			refreshUnderline();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_StrikeThrough().equals(feature)) {
+			refreshStrikeThrough();
+		} else if (NotationPackage.eINSTANCE.getFontStyle_FontHeight().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_FontName().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Bold().equals(feature) || NotationPackage.eINSTANCE.getFontStyle_Italic().equals(feature)) {
+			refreshFont();
+		} else {
+			if (getParser() != null && getParser().isAffectingEvent(event, getParserOptions().intValue())) {
+				refreshLabel();
+			}
+			if (getParser() instanceof ISemanticParser) {
+				ISemanticParser modelParser = (ISemanticParser) getParser();
+				if (modelParser.areSemanticElementsAffected(null, event)) {
+					removeSemanticListeners();
+					if (resolveSemanticElement() != null) {
+						addSemanticListeners();
+					}
+					refreshLabel();
+				}
+			}
+		}
+		super.handleNotificationEvent(event);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFigure() {
+		// Parent should assign one using setLabel() method
+		return null;
+	}
 }
\ No newline at end of file

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AlternativeBranchAlternativeBranchNodesCompartmentCanonicalEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AlternativeBranchAlternativeBranchNodesCompartmentCanonicalEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,154 @@
+package ComBE.diagram.edit.policies;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.EStructuralFeature;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
+import org.eclipse.gmf.runtime.diagram.ui.commands.DeferredLayoutCommand;
+import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
+import org.eclipse.gmf.runtime.diagram.ui.commands.SetViewMutabilityCommand;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.notation.Node;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class AlternativeBranchAlternativeBranchNodesCompartmentCanonicalEditPolicy extends CanonicalEditPolicy {
+
+	/**
+	* @generated
+	*/
+	protected void refreshOnActivate() {
+		// Need to activate editpart children before invoking the canonical refresh for EditParts to add event listeners
+		List<?> c = getHost().getChildren();
+		for (int i = 0; i < c.size(); i++) {
+			((EditPart) c.get(i)).activate();
+		}
+		super.refreshOnActivate();
+	}
+
+	/**
+	* @generated
+	*/
+	protected EStructuralFeature getFeatureToSynchronize() {
+		return ComBE.ComBEPackage.eINSTANCE.getBehaviorTree_Nodes();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getSemanticChildrenList() {
+		View viewObject = (View) getHost().getModel();
+		LinkedList<EObject> result = new LinkedList<EObject>();
+		List<ComBE.diagram.part.ComBENodeDescriptor> childDescriptors = ComBE.diagram.part.ComBEDiagramUpdater.getParallelBranchParallelBranchNodesCompartment_7002SemanticChildren(viewObject);
+		for (ComBE.diagram.part.ComBENodeDescriptor d : childDescriptors) {
+			result.add(d.getModelElement());
+		}
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isOrphaned(Collection<EObject> semanticChildren, final View view) {
+		return isMyDiagramElement(view) && !semanticChildren.contains(view.getElement());
+	}
+
+	/**
+	* @generated
+	*/
+	private boolean isMyDiagramElement(View view) {
+		int visualID = ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view);
+		return visualID == ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID || visualID == ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshSemantic() {
+		if (resolveSemanticElement() == null) {
+			return;
+		}
+		LinkedList<IAdaptable> createdViews = new LinkedList<IAdaptable>();
+		List<ComBE.diagram.part.ComBENodeDescriptor> childDescriptors = ComBE.diagram.part.ComBEDiagramUpdater.getParallelBranchParallelBranchNodesCompartment_7002SemanticChildren((View) getHost().getModel());
+		LinkedList<View> orphaned = new LinkedList<View>();
+		// we care to check only views we recognize as ours
+		LinkedList<View> knownViewChildren = new LinkedList<View>();
+		for (View v : getViewChildren()) {
+			if (isMyDiagramElement(v)) {
+				knownViewChildren.add(v);
+			}
+		}
+		// alternative to #cleanCanonicalSemanticChildren(getViewChildren(), semanticChildren)
+		//
+		// iteration happens over list of desired semantic elements, trying to find best matching View, while original CEP
+		// iterates views, potentially losing view (size/bounds) information - i.e. if there are few views to reference same EObject, only last one 
+		// to answer isOrphaned == true will be used for the domain element representation, see #cleanCanonicalSemanticChildren()
+		for (Iterator<ComBE.diagram.part.ComBENodeDescriptor> descriptorsIterator = childDescriptors.iterator(); descriptorsIterator.hasNext();) {
+			ComBE.diagram.part.ComBENodeDescriptor next = descriptorsIterator.next();
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			LinkedList<View> perfectMatch = new LinkedList<View>(); // both semanticElement and hint match that of NodeDescriptor
+			for (View childView : getViewChildren()) {
+				EObject semanticElement = childView.getElement();
+				if (next.getModelElement().equals(semanticElement)) {
+					if (hint.equals(childView.getType())) {
+						perfectMatch.add(childView);
+						// actually, can stop iteration over view children here, but
+						// may want to use not the first view but last one as a 'real' match (the way original CEP does
+						// with its trick with viewToSemanticMap inside #cleanCanonicalSemanticChildren
+					}
+				}
+			}
+			if (perfectMatch.size() > 0) {
+				descriptorsIterator.remove(); // precise match found no need to create anything for the NodeDescriptor
+				// use only one view (first or last?), keep rest as orphaned for further consideration
+				knownViewChildren.remove(perfectMatch.getFirst());
+			}
+		}
+		// those left in knownViewChildren are subject to removal - they are our diagram elements we didn't find match to,
+		// or those we have potential matches to, and thus need to be recreated, preserving size/location information.
+		orphaned.addAll(knownViewChildren);
+		//
+		ArrayList<CreateViewRequest.ViewDescriptor> viewDescriptors = new ArrayList<CreateViewRequest.ViewDescriptor>(childDescriptors.size());
+		for (ComBE.diagram.part.ComBENodeDescriptor next : childDescriptors) {
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			IAdaptable elementAdapter = new CanonicalElementAdapter(next.getModelElement(), hint);
+			CreateViewRequest.ViewDescriptor descriptor = new CreateViewRequest.ViewDescriptor(elementAdapter, Node.class, hint, ViewUtil.APPEND, false, host().getDiagramPreferencesHint());
+			viewDescriptors.add(descriptor);
+		}
+
+		boolean changed = deleteViews(orphaned.iterator());
+		//
+		CreateViewRequest request = getCreateViewRequest(viewDescriptors);
+		Command cmd = getCreateViewCommand(request);
+		if (cmd != null && cmd.canExecute()) {
+			SetViewMutabilityCommand.makeMutable(new EObjectAdapter(host().getNotationView())).execute();
+			executeCommand(cmd);
+			@SuppressWarnings("unchecked")
+			List<IAdaptable> nl = (List<IAdaptable>) request.getNewObject();
+			createdViews.addAll(nl);
+		}
+		if (changed || createdViews.size() > 0) {
+			postProcessRefreshSemantic(createdViews);
+		}
+		if (createdViews.size() > 1) {
+			// perform a layout of the container
+			DeferredLayoutCommand layoutCmd = new DeferredLayoutCommand(host().getEditingDomain(), createdViews, host());
+			executeCommand(new ICommandProxy(layoutCmd));
+		}
+
+		makeViewsImmutable(createdViews);
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AlternativeBranchAlternativeBranchNodesCompartmentItemSemanticEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AlternativeBranchAlternativeBranchNodesCompartmentItemSemanticEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,31 @@
+package ComBE.diagram.edit.policies;
+
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
+
+/**
+* @generated
+*/
+public class AlternativeBranchAlternativeBranchNodesCompartmentItemSemanticEditPolicy extends ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy {
+
+	/**
+	* @generated
+	*/
+	public AlternativeBranchAlternativeBranchNodesCompartmentItemSemanticEditPolicy() {
+		super(ComBE.diagram.providers.ComBEElementTypes.ParallelBranch_2002);
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getCreateCommand(CreateElementRequest req) {
+		if (ComBE.diagram.providers.ComBEElementTypes.StandardNode_3003 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.StandardNode2CreateCommand(req));
+		}
+		if (ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3004 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.EmptyNode2CreateCommand(req));
+		}
+		return super.getCreateCommand(req);
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AlternativeBranchCanonicalEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AlternativeBranchCanonicalEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,140 @@
+package ComBE.diagram.edit.policies;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
+import org.eclipse.gmf.runtime.diagram.ui.commands.DeferredLayoutCommand;
+import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
+import org.eclipse.gmf.runtime.diagram.ui.commands.SetViewMutabilityCommand;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.notation.Node;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class AlternativeBranchCanonicalEditPolicy extends CanonicalEditPolicy {
+
+	/**
+	* @generated
+	*/
+	protected void refreshOnActivate() {
+		// Need to activate editpart children before invoking the canonical refresh for EditParts to add event listeners
+		List<?> c = getHost().getChildren();
+		for (int i = 0; i < c.size(); i++) {
+			((EditPart) c.get(i)).activate();
+		}
+		super.refreshOnActivate();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getSemanticChildrenList() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isOrphaned(Collection<EObject> semanticChildren, final View view) {
+		return isMyDiagramElement(view) && !semanticChildren.contains(view.getElement());
+	}
+
+	/**
+	* @generated
+	*/
+	private boolean isMyDiagramElement(View view) {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshSemantic() {
+		if (resolveSemanticElement() == null) {
+			return;
+		}
+		LinkedList<IAdaptable> createdViews = new LinkedList<IAdaptable>();
+		List<ComBE.diagram.part.ComBENodeDescriptor> childDescriptors = ComBE.diagram.part.ComBEDiagramUpdater.getAlternativeBranch_2001SemanticChildren((View) getHost().getModel());
+		LinkedList<View> orphaned = new LinkedList<View>();
+		// we care to check only views we recognize as ours
+		LinkedList<View> knownViewChildren = new LinkedList<View>();
+		for (View v : getViewChildren()) {
+			if (isMyDiagramElement(v)) {
+				knownViewChildren.add(v);
+			}
+		}
+		// alternative to #cleanCanonicalSemanticChildren(getViewChildren(), semanticChildren)
+		//
+		// iteration happens over list of desired semantic elements, trying to find best matching View, while original CEP
+		// iterates views, potentially losing view (size/bounds) information - i.e. if there are few views to reference same EObject, only last one 
+		// to answer isOrphaned == true will be used for the domain element representation, see #cleanCanonicalSemanticChildren()
+		for (Iterator<ComBE.diagram.part.ComBENodeDescriptor> descriptorsIterator = childDescriptors.iterator(); descriptorsIterator.hasNext();) {
+			ComBE.diagram.part.ComBENodeDescriptor next = descriptorsIterator.next();
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			LinkedList<View> perfectMatch = new LinkedList<View>(); // both semanticElement and hint match that of NodeDescriptor
+			for (View childView : getViewChildren()) {
+				EObject semanticElement = childView.getElement();
+				if (next.getModelElement().equals(semanticElement)) {
+					if (hint.equals(childView.getType())) {
+						perfectMatch.add(childView);
+						// actually, can stop iteration over view children here, but
+						// may want to use not the first view but last one as a 'real' match (the way original CEP does
+						// with its trick with viewToSemanticMap inside #cleanCanonicalSemanticChildren
+					}
+				}
+			}
+			if (perfectMatch.size() > 0) {
+				descriptorsIterator.remove(); // precise match found no need to create anything for the NodeDescriptor
+				// use only one view (first or last?), keep rest as orphaned for further consideration
+				knownViewChildren.remove(perfectMatch.getFirst());
+			}
+		}
+		// those left in knownViewChildren are subject to removal - they are our diagram elements we didn't find match to,
+		// or those we have potential matches to, and thus need to be recreated, preserving size/location information.
+		orphaned.addAll(knownViewChildren);
+		//
+		ArrayList<CreateViewRequest.ViewDescriptor> viewDescriptors = new ArrayList<CreateViewRequest.ViewDescriptor>(childDescriptors.size());
+		for (ComBE.diagram.part.ComBENodeDescriptor next : childDescriptors) {
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			IAdaptable elementAdapter = new CanonicalElementAdapter(next.getModelElement(), hint);
+			CreateViewRequest.ViewDescriptor descriptor = new CreateViewRequest.ViewDescriptor(elementAdapter, Node.class, hint, ViewUtil.APPEND, false, host().getDiagramPreferencesHint());
+			viewDescriptors.add(descriptor);
+		}
+
+		boolean changed = deleteViews(orphaned.iterator());
+		//
+		CreateViewRequest request = getCreateViewRequest(viewDescriptors);
+		Command cmd = getCreateViewCommand(request);
+		if (cmd != null && cmd.canExecute()) {
+			SetViewMutabilityCommand.makeMutable(new EObjectAdapter(host().getNotationView())).execute();
+			executeCommand(cmd);
+			@SuppressWarnings("unchecked")
+			List<IAdaptable> nl = (List<IAdaptable>) request.getNewObject();
+			createdViews.addAll(nl);
+		}
+		if (changed || createdViews.size() > 0) {
+			postProcessRefreshSemantic(createdViews);
+		}
+		if (createdViews.size() > 1) {
+			// perform a layout of the container
+			DeferredLayoutCommand layoutCmd = new DeferredLayoutCommand(host().getEditingDomain(), createdViews, host());
+			executeCommand(new ICommandProxy(layoutCmd));
+		}
+
+		makeViewsImmutable(createdViews);
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AlternativeBranchChildrenItemSemanticEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AlternativeBranchChildrenItemSemanticEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,42 @@
+package ComBE.diagram.edit.policies;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest;
+
+/**
+ * @generated
+ */
+public class AlternativeBranchChildrenItemSemanticEditPolicy extends ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy {
+
+	/**
+	* @generated
+	*/
+	public AlternativeBranchChildrenItemSemanticEditPolicy() {
+		super(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001);
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getDestroyReferenceCommand(DestroyReferenceRequest req) {
+		return getGEFWrapper(new DestroyReferenceCommand(req) {
+			protected CommandResult doExecuteWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
+				EObject referencedObject = getReferencedObject();
+				Resource resource = referencedObject.eResource();
+				CommandResult result = super.doExecuteWithResult(progressMonitor, info);
+				if (resource != null) {
+					resource.getContents().add(referencedObject);
+				}
+				return result;
+			}
+		});
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AlternativeBranchItemSemanticEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AlternativeBranchItemSemanticEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,215 @@
+package ComBE.diagram.edit.policies;
+
+import java.util.Iterator;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.EAnnotation;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.common.core.command.ICompositeCommand;
+import org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand;
+import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
+import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand;
+import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ReorientReferenceRelationshipRequest;
+import org.eclipse.gmf.runtime.notation.Edge;
+import org.eclipse.gmf.runtime.notation.Node;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class AlternativeBranchItemSemanticEditPolicy extends ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy {
+
+	/**
+	* @generated
+	*/
+	public AlternativeBranchItemSemanticEditPolicy() {
+		super(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranch_2001);
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getDestroyElementCommand(DestroyElementRequest req) {
+		View view = (View) getHost().getModel();
+		CompositeTransactionalCommand cmd = new CompositeTransactionalCommand(getEditingDomain(), null);
+		cmd.setTransactionNestingEnabled(false);
+		for (Iterator<?> it = view.getTargetEdges().iterator(); it.hasNext();) {
+			Edge incomingLink = (Edge) it.next();
+			if (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(incomingLink) == ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID) {
+				DestroyReferenceRequest r = new DestroyReferenceRequest(incomingLink.getSource().getElement(), null, incomingLink.getTarget().getElement(), false);
+				cmd.add(new DestroyReferenceCommand(r) {
+					protected CommandResult doExecuteWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
+						EObject referencedObject = getReferencedObject();
+						Resource resource = referencedObject.eResource();
+						CommandResult result = super.doExecuteWithResult(progressMonitor, info);
+						if (resource != null) {
+							resource.getContents().add(referencedObject);
+						}
+						return result;
+					}
+				});
+				cmd.add(new DeleteCommand(getEditingDomain(), incomingLink));
+				continue;
+			}
+			if (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(incomingLink) == ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID) {
+				DestroyReferenceRequest r = new DestroyReferenceRequest(incomingLink.getSource().getElement(), null, incomingLink.getTarget().getElement(), false);
+				cmd.add(new DestroyReferenceCommand(r) {
+					protected CommandResult doExecuteWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
+						EObject referencedObject = getReferencedObject();
+						Resource resource = referencedObject.eResource();
+						CommandResult result = super.doExecuteWithResult(progressMonitor, info);
+						if (resource != null) {
+							resource.getContents().add(referencedObject);
+						}
+						return result;
+					}
+				});
+				cmd.add(new DeleteCommand(getEditingDomain(), incomingLink));
+				continue;
+			}
+			if (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(incomingLink) == ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID) {
+				DestroyReferenceRequest r = new DestroyReferenceRequest(incomingLink.getSource().getElement(), null, incomingLink.getTarget().getElement(), false);
+				cmd.add(new DestroyReferenceCommand(r) {
+					protected CommandResult doExecuteWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
+						EObject referencedObject = getReferencedObject();
+						Resource resource = referencedObject.eResource();
+						CommandResult result = super.doExecuteWithResult(progressMonitor, info);
+						if (resource != null) {
+							resource.getContents().add(referencedObject);
+						}
+						return result;
+					}
+				});
+				cmd.add(new DeleteCommand(getEditingDomain(), incomingLink));
+				continue;
+			}
+		}
+		for (Iterator<?> it = view.getSourceEdges().iterator(); it.hasNext();) {
+			Edge outgoingLink = (Edge) it.next();
+			if (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(outgoingLink) == ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID) {
+				DestroyReferenceRequest r = new DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
+				cmd.add(new DestroyReferenceCommand(r) {
+					protected CommandResult doExecuteWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
+						EObject referencedObject = getReferencedObject();
+						Resource resource = referencedObject.eResource();
+						CommandResult result = super.doExecuteWithResult(progressMonitor, info);
+						if (resource != null) {
+							resource.getContents().add(referencedObject);
+						}
+						return result;
+					}
+				});
+				cmd.add(new DeleteCommand(getEditingDomain(), outgoingLink));
+				continue;
+			}
+		}
+		EAnnotation annotation = view.getEAnnotation("Shortcut"); //$NON-NLS-1$
+		if (annotation == null) {
+			// there are indirectly referenced children, need extra commands: false
+			addDestroyChildNodesCommand(cmd);
+			addDestroyShortcutsCommand(cmd, view);
+			// delete host element
+			cmd.add(new DestroyElementCommand(req));
+		} else {
+			cmd.add(new DeleteCommand(getEditingDomain(), view));
+		}
+		return getGEFWrapper(cmd.reduce());
+	}
+
+	/**
+	* @generated
+	*/
+	private void addDestroyChildNodesCommand(ICompositeCommand cmd) {
+		View view = (View) getHost().getModel();
+		for (Iterator<?> nit = view.getChildren().iterator(); nit.hasNext();) {
+			Node node = (Node) nit.next();
+			switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(node)) {
+			case ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart.VISUAL_ID:
+				for (Iterator<?> cit = node.getChildren().iterator(); cit.hasNext();) {
+					Node cnode = (Node) cit.next();
+					switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(cnode)) {
+					case ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID:
+						cmd.add(new DestroyElementCommand(new DestroyElementRequest(getEditingDomain(), cnode.getElement(), false))); // directlyOwned: true
+						// don't need explicit deletion of cnode as parent's view deletion would clean child views as well 
+						// cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), cnode));
+						break;
+					case ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID:
+						cmd.add(new DestroyElementCommand(new DestroyElementRequest(getEditingDomain(), cnode.getElement(), false))); // directlyOwned: true
+						// don't need explicit deletion of cnode as parent's view deletion would clean child views as well 
+						// cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), cnode));
+						break;
+					}
+				}
+				break;
+			}
+		}
+	}
+
+	/**
+	 * @generated
+	 */
+	protected Command getCreateRelationshipCommand(CreateRelationshipRequest req) {
+		Command command = req.getTarget() == null ? getStartCreateRelationshipCommand(req) : getCompleteCreateRelationshipCommand(req);
+		return command != null ? command : super.getCreateRelationshipCommand(req);
+	}
+
+	/**
+	 * @generated
+	 */
+	protected Command getStartCreateRelationshipCommand(CreateRelationshipRequest req) {
+		if (ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.AlternativeBranchChildrenCreateCommand(req, req.getSource(), req.getTarget()));
+		}
+		if (ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002 == req.getElementType()) {
+			return null;
+		}
+		if (ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003 == req.getElementType()) {
+			return null;
+		}
+		return null;
+	}
+
+	/**
+	 * @generated
+	 */
+	protected Command getCompleteCreateRelationshipCommand(CreateRelationshipRequest req) {
+		if (ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.AlternativeBranchChildrenCreateCommand(req, req.getSource(), req.getTarget()));
+		}
+		if (ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.ParallelBranchChildrenCreateCommand(req, req.getSource(), req.getTarget()));
+		}
+		if (ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.AtomicSequenceChildCreateCommand(req, req.getSource(), req.getTarget()));
+		}
+		return null;
+	}
+
+	/**
+	 * Returns command to reorient EReference based link. New link target or source
+	 * should be the domain model element associated with this node.
+	 * 
+	 * @generated
+	 */
+	protected Command getReorientReferenceRelationshipCommand(ReorientReferenceRelationshipRequest req) {
+		switch (getVisualID(req)) {
+		case ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID:
+			return getGEFWrapper(new ComBE.diagram.edit.commands.AlternativeBranchChildrenReorientCommand(req));
+		case ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID:
+			return getGEFWrapper(new ComBE.diagram.edit.commands.ParallelBranchChildrenReorientCommand(req));
+		case ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID:
+			return getGEFWrapper(new ComBE.diagram.edit.commands.AtomicSequenceChildReorientCommand(req));
+		}
+		return super.getReorientReferenceRelationshipCommand(req);
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AtomicSequenceAtomicSequenceNodesCompartmentCanonicalEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AtomicSequenceAtomicSequenceNodesCompartmentCanonicalEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,154 @@
+package ComBE.diagram.edit.policies;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.EStructuralFeature;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
+import org.eclipse.gmf.runtime.diagram.ui.commands.DeferredLayoutCommand;
+import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
+import org.eclipse.gmf.runtime.diagram.ui.commands.SetViewMutabilityCommand;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.notation.Node;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class AtomicSequenceAtomicSequenceNodesCompartmentCanonicalEditPolicy extends CanonicalEditPolicy {
+
+	/**
+	* @generated
+	*/
+	protected void refreshOnActivate() {
+		// Need to activate editpart children before invoking the canonical refresh for EditParts to add event listeners
+		List<?> c = getHost().getChildren();
+		for (int i = 0; i < c.size(); i++) {
+			((EditPart) c.get(i)).activate();
+		}
+		super.refreshOnActivate();
+	}
+
+	/**
+	* @generated
+	*/
+	protected EStructuralFeature getFeatureToSynchronize() {
+		return ComBE.ComBEPackage.eINSTANCE.getBehaviorTree_Nodes();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getSemanticChildrenList() {
+		View viewObject = (View) getHost().getModel();
+		LinkedList<EObject> result = new LinkedList<EObject>();
+		List<ComBE.diagram.part.ComBENodeDescriptor> childDescriptors = ComBE.diagram.part.ComBEDiagramUpdater.getAlternativeBranchAlternativeBranchNodesCompartment_7001SemanticChildren(viewObject);
+		for (ComBE.diagram.part.ComBENodeDescriptor d : childDescriptors) {
+			result.add(d.getModelElement());
+		}
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isOrphaned(Collection<EObject> semanticChildren, final View view) {
+		return isMyDiagramElement(view) && !semanticChildren.contains(view.getElement());
+	}
+
+	/**
+	* @generated
+	*/
+	private boolean isMyDiagramElement(View view) {
+		int visualID = ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view);
+		return visualID == ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID || visualID == ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshSemantic() {
+		if (resolveSemanticElement() == null) {
+			return;
+		}
+		LinkedList<IAdaptable> createdViews = new LinkedList<IAdaptable>();
+		List<ComBE.diagram.part.ComBENodeDescriptor> childDescriptors = ComBE.diagram.part.ComBEDiagramUpdater.getAlternativeBranchAlternativeBranchNodesCompartment_7001SemanticChildren((View) getHost().getModel());
+		LinkedList<View> orphaned = new LinkedList<View>();
+		// we care to check only views we recognize as ours
+		LinkedList<View> knownViewChildren = new LinkedList<View>();
+		for (View v : getViewChildren()) {
+			if (isMyDiagramElement(v)) {
+				knownViewChildren.add(v);
+			}
+		}
+		// alternative to #cleanCanonicalSemanticChildren(getViewChildren(), semanticChildren)
+		//
+		// iteration happens over list of desired semantic elements, trying to find best matching View, while original CEP
+		// iterates views, potentially losing view (size/bounds) information - i.e. if there are few views to reference same EObject, only last one 
+		// to answer isOrphaned == true will be used for the domain element representation, see #cleanCanonicalSemanticChildren()
+		for (Iterator<ComBE.diagram.part.ComBENodeDescriptor> descriptorsIterator = childDescriptors.iterator(); descriptorsIterator.hasNext();) {
+			ComBE.diagram.part.ComBENodeDescriptor next = descriptorsIterator.next();
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			LinkedList<View> perfectMatch = new LinkedList<View>(); // both semanticElement and hint match that of NodeDescriptor
+			for (View childView : getViewChildren()) {
+				EObject semanticElement = childView.getElement();
+				if (next.getModelElement().equals(semanticElement)) {
+					if (hint.equals(childView.getType())) {
+						perfectMatch.add(childView);
+						// actually, can stop iteration over view children here, but
+						// may want to use not the first view but last one as a 'real' match (the way original CEP does
+						// with its trick with viewToSemanticMap inside #cleanCanonicalSemanticChildren
+					}
+				}
+			}
+			if (perfectMatch.size() > 0) {
+				descriptorsIterator.remove(); // precise match found no need to create anything for the NodeDescriptor
+				// use only one view (first or last?), keep rest as orphaned for further consideration
+				knownViewChildren.remove(perfectMatch.getFirst());
+			}
+		}
+		// those left in knownViewChildren are subject to removal - they are our diagram elements we didn't find match to,
+		// or those we have potential matches to, and thus need to be recreated, preserving size/location information.
+		orphaned.addAll(knownViewChildren);
+		//
+		ArrayList<CreateViewRequest.ViewDescriptor> viewDescriptors = new ArrayList<CreateViewRequest.ViewDescriptor>(childDescriptors.size());
+		for (ComBE.diagram.part.ComBENodeDescriptor next : childDescriptors) {
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			IAdaptable elementAdapter = new CanonicalElementAdapter(next.getModelElement(), hint);
+			CreateViewRequest.ViewDescriptor descriptor = new CreateViewRequest.ViewDescriptor(elementAdapter, Node.class, hint, ViewUtil.APPEND, false, host().getDiagramPreferencesHint());
+			viewDescriptors.add(descriptor);
+		}
+
+		boolean changed = deleteViews(orphaned.iterator());
+		//
+		CreateViewRequest request = getCreateViewRequest(viewDescriptors);
+		Command cmd = getCreateViewCommand(request);
+		if (cmd != null && cmd.canExecute()) {
+			SetViewMutabilityCommand.makeMutable(new EObjectAdapter(host().getNotationView())).execute();
+			executeCommand(cmd);
+			@SuppressWarnings("unchecked")
+			List<IAdaptable> nl = (List<IAdaptable>) request.getNewObject();
+			createdViews.addAll(nl);
+		}
+		if (changed || createdViews.size() > 0) {
+			postProcessRefreshSemantic(createdViews);
+		}
+		if (createdViews.size() > 1) {
+			// perform a layout of the container
+			DeferredLayoutCommand layoutCmd = new DeferredLayoutCommand(host().getEditingDomain(), createdViews, host());
+			executeCommand(new ICommandProxy(layoutCmd));
+		}
+
+		makeViewsImmutable(createdViews);
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AtomicSequenceAtomicSequenceNodesCompartmentItemSemanticEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AtomicSequenceAtomicSequenceNodesCompartmentItemSemanticEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,31 @@
+package ComBE.diagram.edit.policies;
+
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
+
+/**
+* @generated
+*/
+public class AtomicSequenceAtomicSequenceNodesCompartmentItemSemanticEditPolicy extends ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy {
+
+	/**
+	* @generated
+	*/
+	public AtomicSequenceAtomicSequenceNodesCompartmentItemSemanticEditPolicy() {
+		super(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranch_2001);
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getCreateCommand(CreateElementRequest req) {
+		if (ComBE.diagram.providers.ComBEElementTypes.StandardNode_3001 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.StandardNodeCreateCommand(req));
+		}
+		if (ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3002 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.EmptyNodeCreateCommand(req));
+		}
+		return super.getCreateCommand(req);
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AtomicSequenceCanonicalEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AtomicSequenceCanonicalEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,140 @@
+package ComBE.diagram.edit.policies;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
+import org.eclipse.gmf.runtime.diagram.ui.commands.DeferredLayoutCommand;
+import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
+import org.eclipse.gmf.runtime.diagram.ui.commands.SetViewMutabilityCommand;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.notation.Node;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class AtomicSequenceCanonicalEditPolicy extends CanonicalEditPolicy {
+
+	/**
+	* @generated
+	*/
+	protected void refreshOnActivate() {
+		// Need to activate editpart children before invoking the canonical refresh for EditParts to add event listeners
+		List<?> c = getHost().getChildren();
+		for (int i = 0; i < c.size(); i++) {
+			((EditPart) c.get(i)).activate();
+		}
+		super.refreshOnActivate();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getSemanticChildrenList() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isOrphaned(Collection<EObject> semanticChildren, final View view) {
+		return isMyDiagramElement(view) && !semanticChildren.contains(view.getElement());
+	}
+
+	/**
+	* @generated
+	*/
+	private boolean isMyDiagramElement(View view) {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshSemantic() {
+		if (resolveSemanticElement() == null) {
+			return;
+		}
+		LinkedList<IAdaptable> createdViews = new LinkedList<IAdaptable>();
+		List<ComBE.diagram.part.ComBENodeDescriptor> childDescriptors = ComBE.diagram.part.ComBEDiagramUpdater.getAtomicSequence_2003SemanticChildren((View) getHost().getModel());
+		LinkedList<View> orphaned = new LinkedList<View>();
+		// we care to check only views we recognize as ours
+		LinkedList<View> knownViewChildren = new LinkedList<View>();
+		for (View v : getViewChildren()) {
+			if (isMyDiagramElement(v)) {
+				knownViewChildren.add(v);
+			}
+		}
+		// alternative to #cleanCanonicalSemanticChildren(getViewChildren(), semanticChildren)
+		//
+		// iteration happens over list of desired semantic elements, trying to find best matching View, while original CEP
+		// iterates views, potentially losing view (size/bounds) information - i.e. if there are few views to reference same EObject, only last one 
+		// to answer isOrphaned == true will be used for the domain element representation, see #cleanCanonicalSemanticChildren()
+		for (Iterator<ComBE.diagram.part.ComBENodeDescriptor> descriptorsIterator = childDescriptors.iterator(); descriptorsIterator.hasNext();) {
+			ComBE.diagram.part.ComBENodeDescriptor next = descriptorsIterator.next();
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			LinkedList<View> perfectMatch = new LinkedList<View>(); // both semanticElement and hint match that of NodeDescriptor
+			for (View childView : getViewChildren()) {
+				EObject semanticElement = childView.getElement();
+				if (next.getModelElement().equals(semanticElement)) {
+					if (hint.equals(childView.getType())) {
+						perfectMatch.add(childView);
+						// actually, can stop iteration over view children here, but
+						// may want to use not the first view but last one as a 'real' match (the way original CEP does
+						// with its trick with viewToSemanticMap inside #cleanCanonicalSemanticChildren
+					}
+				}
+			}
+			if (perfectMatch.size() > 0) {
+				descriptorsIterator.remove(); // precise match found no need to create anything for the NodeDescriptor
+				// use only one view (first or last?), keep rest as orphaned for further consideration
+				knownViewChildren.remove(perfectMatch.getFirst());
+			}
+		}
+		// those left in knownViewChildren are subject to removal - they are our diagram elements we didn't find match to,
+		// or those we have potential matches to, and thus need to be recreated, preserving size/location information.
+		orphaned.addAll(knownViewChildren);
+		//
+		ArrayList<CreateViewRequest.ViewDescriptor> viewDescriptors = new ArrayList<CreateViewRequest.ViewDescriptor>(childDescriptors.size());
+		for (ComBE.diagram.part.ComBENodeDescriptor next : childDescriptors) {
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			IAdaptable elementAdapter = new CanonicalElementAdapter(next.getModelElement(), hint);
+			CreateViewRequest.ViewDescriptor descriptor = new CreateViewRequest.ViewDescriptor(elementAdapter, Node.class, hint, ViewUtil.APPEND, false, host().getDiagramPreferencesHint());
+			viewDescriptors.add(descriptor);
+		}
+
+		boolean changed = deleteViews(orphaned.iterator());
+		//
+		CreateViewRequest request = getCreateViewRequest(viewDescriptors);
+		Command cmd = getCreateViewCommand(request);
+		if (cmd != null && cmd.canExecute()) {
+			SetViewMutabilityCommand.makeMutable(new EObjectAdapter(host().getNotationView())).execute();
+			executeCommand(cmd);
+			@SuppressWarnings("unchecked")
+			List<IAdaptable> nl = (List<IAdaptable>) request.getNewObject();
+			createdViews.addAll(nl);
+		}
+		if (changed || createdViews.size() > 0) {
+			postProcessRefreshSemantic(createdViews);
+		}
+		if (createdViews.size() > 1) {
+			// perform a layout of the container
+			DeferredLayoutCommand layoutCmd = new DeferredLayoutCommand(host().getEditingDomain(), createdViews, host());
+			executeCommand(new ICommandProxy(layoutCmd));
+		}
+
+		makeViewsImmutable(createdViews);
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AtomicSequenceChildItemSemanticEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AtomicSequenceChildItemSemanticEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,42 @@
+package ComBE.diagram.edit.policies;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest;
+
+/**
+ * @generated
+ */
+public class AtomicSequenceChildItemSemanticEditPolicy extends ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy {
+
+	/**
+	* @generated
+	*/
+	public AtomicSequenceChildItemSemanticEditPolicy() {
+		super(ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003);
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getDestroyReferenceCommand(DestroyReferenceRequest req) {
+		return getGEFWrapper(new DestroyReferenceCommand(req) {
+			protected CommandResult doExecuteWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
+				EObject referencedObject = getReferencedObject();
+				Resource resource = referencedObject.eResource();
+				CommandResult result = super.doExecuteWithResult(progressMonitor, info);
+				if (resource != null) {
+					resource.getContents().add(referencedObject);
+				}
+				return result;
+			}
+		});
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AtomicSequenceItemSemanticEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/AtomicSequenceItemSemanticEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,215 @@
+package ComBE.diagram.edit.policies;
+
+import java.util.Iterator;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.EAnnotation;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.common.core.command.ICompositeCommand;
+import org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand;
+import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
+import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand;
+import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ReorientReferenceRelationshipRequest;
+import org.eclipse.gmf.runtime.notation.Edge;
+import org.eclipse.gmf.runtime.notation.Node;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class AtomicSequenceItemSemanticEditPolicy extends ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy {
+
+	/**
+	* @generated
+	*/
+	public AtomicSequenceItemSemanticEditPolicy() {
+		super(ComBE.diagram.providers.ComBEElementTypes.AtomicSequence_2003);
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getDestroyElementCommand(DestroyElementRequest req) {
+		View view = (View) getHost().getModel();
+		CompositeTransactionalCommand cmd = new CompositeTransactionalCommand(getEditingDomain(), null);
+		cmd.setTransactionNestingEnabled(false);
+		for (Iterator<?> it = view.getTargetEdges().iterator(); it.hasNext();) {
+			Edge incomingLink = (Edge) it.next();
+			if (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(incomingLink) == ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID) {
+				DestroyReferenceRequest r = new DestroyReferenceRequest(incomingLink.getSource().getElement(), null, incomingLink.getTarget().getElement(), false);
+				cmd.add(new DestroyReferenceCommand(r) {
+					protected CommandResult doExecuteWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
+						EObject referencedObject = getReferencedObject();
+						Resource resource = referencedObject.eResource();
+						CommandResult result = super.doExecuteWithResult(progressMonitor, info);
+						if (resource != null) {
+							resource.getContents().add(referencedObject);
+						}
+						return result;
+					}
+				});
+				cmd.add(new DeleteCommand(getEditingDomain(), incomingLink));
+				continue;
+			}
+			if (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(incomingLink) == ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID) {
+				DestroyReferenceRequest r = new DestroyReferenceRequest(incomingLink.getSource().getElement(), null, incomingLink.getTarget().getElement(), false);
+				cmd.add(new DestroyReferenceCommand(r) {
+					protected CommandResult doExecuteWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
+						EObject referencedObject = getReferencedObject();
+						Resource resource = referencedObject.eResource();
+						CommandResult result = super.doExecuteWithResult(progressMonitor, info);
+						if (resource != null) {
+							resource.getContents().add(referencedObject);
+						}
+						return result;
+					}
+				});
+				cmd.add(new DeleteCommand(getEditingDomain(), incomingLink));
+				continue;
+			}
+			if (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(incomingLink) == ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID) {
+				DestroyReferenceRequest r = new DestroyReferenceRequest(incomingLink.getSource().getElement(), null, incomingLink.getTarget().getElement(), false);
+				cmd.add(new DestroyReferenceCommand(r) {
+					protected CommandResult doExecuteWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
+						EObject referencedObject = getReferencedObject();
+						Resource resource = referencedObject.eResource();
+						CommandResult result = super.doExecuteWithResult(progressMonitor, info);
+						if (resource != null) {
+							resource.getContents().add(referencedObject);
+						}
+						return result;
+					}
+				});
+				cmd.add(new DeleteCommand(getEditingDomain(), incomingLink));
+				continue;
+			}
+		}
+		for (Iterator<?> it = view.getSourceEdges().iterator(); it.hasNext();) {
+			Edge outgoingLink = (Edge) it.next();
+			if (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(outgoingLink) == ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID) {
+				DestroyReferenceRequest r = new DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
+				cmd.add(new DestroyReferenceCommand(r) {
+					protected CommandResult doExecuteWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
+						EObject referencedObject = getReferencedObject();
+						Resource resource = referencedObject.eResource();
+						CommandResult result = super.doExecuteWithResult(progressMonitor, info);
+						if (resource != null) {
+							resource.getContents().add(referencedObject);
+						}
+						return result;
+					}
+				});
+				cmd.add(new DeleteCommand(getEditingDomain(), outgoingLink));
+				continue;
+			}
+		}
+		EAnnotation annotation = view.getEAnnotation("Shortcut"); //$NON-NLS-1$
+		if (annotation == null) {
+			// there are indirectly referenced children, need extra commands: false
+			addDestroyChildNodesCommand(cmd);
+			addDestroyShortcutsCommand(cmd, view);
+			// delete host element
+			cmd.add(new DestroyElementCommand(req));
+		} else {
+			cmd.add(new DeleteCommand(getEditingDomain(), view));
+		}
+		return getGEFWrapper(cmd.reduce());
+	}
+
+	/**
+	* @generated
+	*/
+	private void addDestroyChildNodesCommand(ICompositeCommand cmd) {
+		View view = (View) getHost().getModel();
+		for (Iterator<?> nit = view.getChildren().iterator(); nit.hasNext();) {
+			Node node = (Node) nit.next();
+			switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(node)) {
+			case ComBE.diagram.edit.parts.ParallelBranchParallelBranchNodesCompartmentEditPart.VISUAL_ID:
+				for (Iterator<?> cit = node.getChildren().iterator(); cit.hasNext();) {
+					Node cnode = (Node) cit.next();
+					switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(cnode)) {
+					case ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID:
+						cmd.add(new DestroyElementCommand(new DestroyElementRequest(getEditingDomain(), cnode.getElement(), false))); // directlyOwned: true
+						// don't need explicit deletion of cnode as parent's view deletion would clean child views as well 
+						// cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), cnode));
+						break;
+					case ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID:
+						cmd.add(new DestroyElementCommand(new DestroyElementRequest(getEditingDomain(), cnode.getElement(), false))); // directlyOwned: true
+						// don't need explicit deletion of cnode as parent's view deletion would clean child views as well 
+						// cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), cnode));
+						break;
+					}
+				}
+				break;
+			}
+		}
+	}
+
+	/**
+	 * @generated
+	 */
+	protected Command getCreateRelationshipCommand(CreateRelationshipRequest req) {
+		Command command = req.getTarget() == null ? getStartCreateRelationshipCommand(req) : getCompleteCreateRelationshipCommand(req);
+		return command != null ? command : super.getCreateRelationshipCommand(req);
+	}
+
+	/**
+	 * @generated
+	 */
+	protected Command getStartCreateRelationshipCommand(CreateRelationshipRequest req) {
+		if (ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001 == req.getElementType()) {
+			return null;
+		}
+		if (ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002 == req.getElementType()) {
+			return null;
+		}
+		if (ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.AtomicSequenceChildCreateCommand(req, req.getSource(), req.getTarget()));
+		}
+		return null;
+	}
+
+	/**
+	 * @generated
+	 */
+	protected Command getCompleteCreateRelationshipCommand(CreateRelationshipRequest req) {
+		if (ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.AlternativeBranchChildrenCreateCommand(req, req.getSource(), req.getTarget()));
+		}
+		if (ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.ParallelBranchChildrenCreateCommand(req, req.getSource(), req.getTarget()));
+		}
+		if (ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.AtomicSequenceChildCreateCommand(req, req.getSource(), req.getTarget()));
+		}
+		return null;
+	}
+
+	/**
+	 * Returns command to reorient EReference based link. New link target or source
+	 * should be the domain model element associated with this node.
+	 * 
+	 * @generated
+	 */
+	protected Command getReorientReferenceRelationshipCommand(ReorientReferenceRelationshipRequest req) {
+		switch (getVisualID(req)) {
+		case ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID:
+			return getGEFWrapper(new ComBE.diagram.edit.commands.AlternativeBranchChildrenReorientCommand(req));
+		case ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID:
+			return getGEFWrapper(new ComBE.diagram.edit.commands.ParallelBranchChildrenReorientCommand(req));
+		case ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID:
+			return getGEFWrapper(new ComBE.diagram.edit.commands.AtomicSequenceChildReorientCommand(req));
+		}
+		return super.getReorientReferenceRelationshipCommand(req);
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ComBEBaseItemSemanticEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ComBEBaseItemSemanticEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,368 @@
+package ComBE.diagram.edit.policies;
+
+import java.util.Iterator;
+
+import org.eclipse.emf.transaction.TransactionalEditingDomain;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gef.commands.UnexecutableCommand;
+import org.eclipse.gef.requests.ReconnectRequest;
+import org.eclipse.gmf.runtime.common.core.command.ICommand;
+import org.eclipse.gmf.runtime.common.core.command.ICompositeCommand;
+import org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand;
+import org.eclipse.gmf.runtime.diagram.ui.commands.CommandProxy;
+import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.SemanticEditPolicy;
+import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ConfigureRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.DuplicateElementsRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.GetEditContextRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.IEditCommandRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.MoveRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ReorientReferenceRelationshipRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.SetRequest;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class ComBEBaseItemSemanticEditPolicy extends SemanticEditPolicy {
+
+	/**
+	* Extended request data key to hold editpart visual id.
+	* @generated
+	*/
+	public static final String VISUAL_ID_KEY = "visual_id"; //$NON-NLS-1$
+
+	/**
+	* @generated
+	*/
+	private final IElementType myElementType;
+
+	/**
+	* @generated
+	*/
+	protected ComBEBaseItemSemanticEditPolicy(IElementType elementType) {
+		myElementType = elementType;
+	}
+
+	/**
+	* Extended request data key to hold editpart visual id.
+	* Add visual id of edited editpart to extended data of the request
+	* so command switch can decide what kind of diagram element is being edited.
+	* It is done in those cases when it's not possible to deduce diagram
+	* element kind from domain element.
+	* 
+	* @generated
+	*/
+	public Command getCommand(Request request) {
+		if (request instanceof ReconnectRequest) {
+			Object view = ((ReconnectRequest) request).getConnectionEditPart().getModel();
+			if (view instanceof View) {
+				Integer id = new Integer(ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID((View) view));
+				request.getExtendedData().put(VISUAL_ID_KEY, id);
+			}
+		}
+		return super.getCommand(request);
+	}
+
+	/**
+	* Returns visual id from request parameters.
+	* @generated
+	*/
+	protected int getVisualID(IEditCommandRequest request) {
+		Object id = request.getParameter(VISUAL_ID_KEY);
+		return id instanceof Integer ? ((Integer) id).intValue() : -1;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getSemanticCommand(IEditCommandRequest request) {
+		IEditCommandRequest completedRequest = completeRequest(request);
+		Command semanticCommand = getSemanticCommandSwitch(completedRequest);
+		semanticCommand = getEditHelperCommand(completedRequest, semanticCommand);
+		if (completedRequest instanceof DestroyRequest) {
+			DestroyRequest destroyRequest = (DestroyRequest) completedRequest;
+			return shouldProceed(destroyRequest) ? addDeleteViewCommand(semanticCommand, destroyRequest) : null;
+		}
+		return semanticCommand;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command addDeleteViewCommand(Command mainCommand, DestroyRequest completedRequest) {
+		Command deleteViewCommand = getGEFWrapper(new DeleteCommand(getEditingDomain(), (View) getHost().getModel()));
+		return mainCommand == null ? deleteViewCommand : mainCommand.chain(deleteViewCommand);
+	}
+
+	/**
+	* @generated
+	*/
+	private Command getEditHelperCommand(IEditCommandRequest request, Command editPolicyCommand) {
+		if (editPolicyCommand != null) {
+			ICommand command = editPolicyCommand instanceof ICommandProxy ? ((ICommandProxy) editPolicyCommand).getICommand() : new CommandProxy(editPolicyCommand);
+			request.setParameter(ComBE.diagram.edit.helpers.ComBEBaseEditHelper.EDIT_POLICY_COMMAND, command);
+		}
+		IElementType requestContextElementType = getContextElementType(request);
+		request.setParameter(ComBE.diagram.edit.helpers.ComBEBaseEditHelper.CONTEXT_ELEMENT_TYPE, requestContextElementType);
+		ICommand command = requestContextElementType.getEditCommand(request);
+		request.setParameter(ComBE.diagram.edit.helpers.ComBEBaseEditHelper.EDIT_POLICY_COMMAND, null);
+		request.setParameter(ComBE.diagram.edit.helpers.ComBEBaseEditHelper.CONTEXT_ELEMENT_TYPE, null);
+		if (command != null) {
+			if (!(command instanceof CompositeTransactionalCommand)) {
+				command = new CompositeTransactionalCommand(getEditingDomain(), command.getLabel()).compose(command);
+			}
+			return new ICommandProxy(command);
+		}
+		return editPolicyCommand;
+	}
+
+	/**
+	* @generated
+	*/
+	private IElementType getContextElementType(IEditCommandRequest request) {
+		IElementType requestContextElementType = ComBE.diagram.providers.ComBEElementTypes.getElementType(getVisualID(request));
+		return requestContextElementType != null ? requestContextElementType : myElementType;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getSemanticCommandSwitch(IEditCommandRequest req) {
+		if (req instanceof CreateRelationshipRequest) {
+			return getCreateRelationshipCommand((CreateRelationshipRequest) req);
+		} else if (req instanceof CreateElementRequest) {
+			return getCreateCommand((CreateElementRequest) req);
+		} else if (req instanceof ConfigureRequest) {
+			return getConfigureCommand((ConfigureRequest) req);
+		} else if (req instanceof DestroyElementRequest) {
+			return getDestroyElementCommand((DestroyElementRequest) req);
+		} else if (req instanceof DestroyReferenceRequest) {
+			return getDestroyReferenceCommand((DestroyReferenceRequest) req);
+		} else if (req instanceof DuplicateElementsRequest) {
+			return getDuplicateCommand((DuplicateElementsRequest) req);
+		} else if (req instanceof GetEditContextRequest) {
+			return getEditContextCommand((GetEditContextRequest) req);
+		} else if (req instanceof MoveRequest) {
+			return getMoveCommand((MoveRequest) req);
+		} else if (req instanceof ReorientReferenceRelationshipRequest) {
+			return getReorientReferenceRelationshipCommand((ReorientReferenceRelationshipRequest) req);
+		} else if (req instanceof ReorientRelationshipRequest) {
+			return getReorientRelationshipCommand((ReorientRelationshipRequest) req);
+		} else if (req instanceof SetRequest) {
+			return getSetCommand((SetRequest) req);
+		}
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getConfigureCommand(ConfigureRequest req) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getCreateRelationshipCommand(CreateRelationshipRequest req) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getCreateCommand(CreateElementRequest req) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getSetCommand(SetRequest req) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getEditContextCommand(GetEditContextRequest req) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getDestroyElementCommand(DestroyElementRequest req) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getDestroyReferenceCommand(DestroyReferenceRequest req) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getDuplicateCommand(DuplicateElementsRequest req) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getMoveCommand(MoveRequest req) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getReorientReferenceRelationshipCommand(ReorientReferenceRelationshipRequest req) {
+		return UnexecutableCommand.INSTANCE;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getReorientRelationshipCommand(ReorientRelationshipRequest req) {
+		return UnexecutableCommand.INSTANCE;
+	}
+
+	/**
+	* @generated
+	*/
+	protected final Command getGEFWrapper(ICommand cmd) {
+		return new ICommandProxy(cmd);
+	}
+
+	/**
+	* Returns editing domain from the host edit part.
+	* @generated
+	*/
+	protected TransactionalEditingDomain getEditingDomain() {
+		return ((IGraphicalEditPart) getHost()).getEditingDomain();
+	}
+
+	/**
+	* Clean all shortcuts to the host element from the same diagram
+	* @generated
+	*/
+	protected void addDestroyShortcutsCommand(ICompositeCommand cmd, View view) {
+		assert view.getEAnnotation("Shortcut") == null; //$NON-NLS-1$
+		for (Iterator it = view.getDiagram().getChildren().iterator(); it.hasNext();) {
+			View nextView = (View) it.next();
+			if (nextView.getEAnnotation("Shortcut") == null || !nextView.isSetElement() || nextView.getElement() != view.getElement()) { //$NON-NLS-1$
+				continue;
+			}
+			cmd.add(new DeleteCommand(getEditingDomain(), nextView));
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public static LinkConstraints getLinkConstraints() {
+		LinkConstraints cached = ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getLinkConstraints();
+		if (cached == null) {
+			ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().setLinkConstraints(cached = new LinkConstraints());
+		}
+		return cached;
+	}
+
+	/**
+	 * @generated
+	 */
+	public static class LinkConstraints {
+
+		/**
+		* @generated
+		*/
+		LinkConstraints() {
+			// use static method #getLinkConstraints() to access instance
+		}
+
+		/**
+		 * @generated
+		 */
+		public boolean canCreateAlternativeBranchChildren_4001(ComBE.AlternativeBranch source, ComBE.BehaviorTree target) {
+			if (source != null) {
+				if (source.getChildren().contains(target)) {
+					return false;
+				}
+				if (source == target) {
+					return false;
+				}
+			}
+
+			return canExistAlternativeBranchChildren_4001(source, target);
+		}
+
+		/**
+		 * @generated
+		 */
+		public boolean canCreateParallelBranchChildren_4002(ComBE.ParallelBranch source, ComBE.BehaviorTree target) {
+			if (source != null) {
+				if (source.getChildren().contains(target)) {
+					return false;
+				}
+				if (source == target) {
+					return false;
+				}
+			}
+
+			return canExistParallelBranchChildren_4002(source, target);
+		}
+
+		/**
+		 * @generated
+		 */
+		public boolean canCreateAtomicSequenceChild_4003(ComBE.AtomicSequence source, ComBE.BehaviorTree target) {
+			if (source != null) {
+				if (source.getChild() != null) {
+					return false;
+				}
+				if (source == target) {
+					return false;
+				}
+			}
+
+			return canExistAtomicSequenceChild_4003(source, target);
+		}
+
+		/**
+		* @generated
+		*/
+		public boolean canExistAlternativeBranchChildren_4001(ComBE.AlternativeBranch source, ComBE.BehaviorTree target) {
+			return true;
+		}
+
+		/**
+		* @generated
+		*/
+		public boolean canExistParallelBranchChildren_4002(ComBE.ParallelBranch source, ComBE.BehaviorTree target) {
+			return true;
+		}
+
+		/**
+		* @generated
+		*/
+		public boolean canExistAtomicSequenceChild_4003(ComBE.AtomicSequence source, ComBE.BehaviorTree target) {
+			return true;
+		}
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ComBETextNonResizableEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ComBETextNonResizableEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,222 @@
+package ComBE.diagram.edit.policies;
+
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.draw2d.ColorConstants;
+import org.eclipse.draw2d.Figure;
+import org.eclipse.draw2d.FigureListener;
+import org.eclipse.draw2d.Graphics;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.RectangleFigure;
+import org.eclipse.draw2d.geometry.Rectangle;
+import org.eclipse.gef.GraphicalEditPart;
+import org.eclipse.gef.handles.MoveHandle;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.NonResizableEditPolicyEx;
+import org.eclipse.gmf.runtime.diagram.ui.tools.DragEditPartsTrackerEx;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+
+/**
+ * @generated
+ */
+public class ComBETextNonResizableEditPolicy extends NonResizableEditPolicyEx {
+
+	/**
+	* @generated
+	*/
+	private IFigure selectionFeedbackFigure;
+
+	/**
+	* @generated
+	*/
+	private IFigure focusFeedbackFigure;
+
+	/**
+	* @generated
+	*/
+	private FigureListener hostPositionListener;
+
+	/**
+	* @generated
+	*/
+	protected void showPrimarySelection() {
+		if (getHostFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getHostFigure()).setSelected(true);
+			((WrappingLabel) getHostFigure()).setFocus(true);
+		} else {
+			showSelection();
+			showFocus();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void showSelection() {
+		if (getHostFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getHostFigure()).setSelected(true);
+			((WrappingLabel) getHostFigure()).setFocus(false);
+		} else {
+			hideSelection();
+			addFeedback(selectionFeedbackFigure = createSelectionFeedbackFigure());
+			getHostFigure().addFigureListener(getHostPositionListener());
+			refreshSelectionFeedback();
+			hideFocus();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void hideSelection() {
+		if (getHostFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getHostFigure()).setSelected(false);
+			((WrappingLabel) getHostFigure()).setFocus(false);
+		} else {
+			if (selectionFeedbackFigure != null) {
+				removeFeedback(selectionFeedbackFigure);
+				getHostFigure().removeFigureListener(getHostPositionListener());
+				selectionFeedbackFigure = null;
+			}
+			hideFocus();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void showFocus() {
+		if (getHostFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getHostFigure()).setFocus(true);
+		} else {
+			hideFocus();
+			addFeedback(focusFeedbackFigure = createFocusFeedbackFigure());
+			refreshFocusFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void hideFocus() {
+		if (getHostFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getHostFigure()).setFocus(false);
+		} else {
+			if (focusFeedbackFigure != null) {
+				removeFeedback(focusFeedbackFigure);
+				focusFeedbackFigure = null;
+			}
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Rectangle getFeedbackBounds() {
+		Rectangle bounds;
+		if (getHostFigure() instanceof Label) {
+			bounds = ((Label) getHostFigure()).getTextBounds();
+			bounds.intersect(getHostFigure().getBounds());
+		} else {
+			bounds = getHostFigure().getBounds().getCopy();
+		}
+		getHostFigure().getParent().translateToAbsolute(bounds);
+		getFeedbackLayer().translateToRelative(bounds);
+		return bounds;
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createSelectionFeedbackFigure() {
+		if (getHostFigure() instanceof Label) {
+			Label feedbackFigure = new Label();
+			feedbackFigure.setOpaque(true);
+			feedbackFigure.setBackgroundColor(ColorConstants.menuBackgroundSelected);
+			feedbackFigure.setForegroundColor(ColorConstants.menuForegroundSelected);
+			return feedbackFigure;
+		} else {
+			RectangleFigure feedbackFigure = new RectangleFigure();
+			feedbackFigure.setFill(false);
+			return feedbackFigure;
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFocusFeedbackFigure() {
+		return new Figure() {
+
+			protected void paintFigure(Graphics graphics) {
+				graphics.drawFocus(getBounds().getResized(-1, -1));
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	protected void updateLabel(Label target) {
+		Label source = (Label) getHostFigure();
+		target.setText(source.getText());
+		target.setTextAlignment(source.getTextAlignment());
+		target.setFont(source.getFont());
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshSelectionFeedback() {
+		if (selectionFeedbackFigure != null) {
+			if (selectionFeedbackFigure instanceof Label) {
+				updateLabel((Label) selectionFeedbackFigure);
+				selectionFeedbackFigure.setBounds(getFeedbackBounds());
+			} else {
+				selectionFeedbackFigure.setBounds(getFeedbackBounds().expand(5, 5));
+			}
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFocusFeedback() {
+		if (focusFeedbackFigure != null) {
+			focusFeedbackFigure.setBounds(getFeedbackBounds());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void refreshFeedback() {
+		refreshSelectionFeedback();
+		refreshFocusFeedback();
+	}
+
+	/**
+	* @generated
+	*/
+	private FigureListener getHostPositionListener() {
+		if (hostPositionListener == null) {
+			hostPositionListener = new FigureListener() {
+				public void figureMoved(IFigure source) {
+					refreshFeedback();
+				}
+			};
+		}
+		return hostPositionListener;
+	}
+
+	/**
+	* @generated
+	*/
+	protected List createSelectionHandles() {
+		MoveHandle moveHandle = new MoveHandle((GraphicalEditPart) getHost());
+		moveHandle.setBorder(null);
+		moveHandle.setDragTracker(new DragEditPartsTrackerEx(getHost()));
+		return Collections.singletonList(moveHandle);
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ComBETextSelectionEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ComBETextSelectionEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,206 @@
+package ComBE.diagram.edit.policies;
+
+import org.eclipse.draw2d.ColorConstants;
+import org.eclipse.draw2d.Figure;
+import org.eclipse.draw2d.FigureListener;
+import org.eclipse.draw2d.Graphics;
+import org.eclipse.draw2d.IFigure;
+import org.eclipse.draw2d.Label;
+import org.eclipse.draw2d.RectangleFigure;
+import org.eclipse.draw2d.geometry.Rectangle;
+import org.eclipse.gef.editpolicies.SelectionEditPolicy;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel;
+
+/**
+ * @generated
+ */
+public class ComBETextSelectionEditPolicy extends SelectionEditPolicy {
+
+	/**
+	* @generated
+	*/
+	private IFigure selectionFeedbackFigure;
+
+	/**
+	* @generated
+	*/
+	private IFigure focusFeedbackFigure;
+
+	/**
+	* @generated
+	*/
+	private FigureListener hostPositionListener;
+
+	/**
+	* @generated
+	*/
+	protected void showPrimarySelection() {
+		if (getHostFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getHostFigure()).setSelected(true);
+			((WrappingLabel) getHostFigure()).setFocus(true);
+		} else {
+			showSelection();
+			showFocus();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void showSelection() {
+		if (getHostFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getHostFigure()).setSelected(true);
+			((WrappingLabel) getHostFigure()).setFocus(false);
+		} else {
+			hideSelection();
+			addFeedback(selectionFeedbackFigure = createSelectionFeedbackFigure());
+			getHostFigure().addFigureListener(getHostPositionListener());
+			refreshSelectionFeedback();
+			hideFocus();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void hideSelection() {
+		if (getHostFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getHostFigure()).setSelected(false);
+			((WrappingLabel) getHostFigure()).setFocus(false);
+		} else {
+			if (selectionFeedbackFigure != null) {
+				removeFeedback(selectionFeedbackFigure);
+				getHostFigure().removeFigureListener(getHostPositionListener());
+				selectionFeedbackFigure = null;
+			}
+			hideFocus();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void showFocus() {
+		if (getHostFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getHostFigure()).setFocus(true);
+		} else {
+			hideFocus();
+			addFeedback(focusFeedbackFigure = createFocusFeedbackFigure());
+			refreshFocusFeedback();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void hideFocus() {
+		if (getHostFigure() instanceof WrappingLabel) {
+			((WrappingLabel) getHostFigure()).setFocus(false);
+		} else {
+			if (focusFeedbackFigure != null) {
+				removeFeedback(focusFeedbackFigure);
+				focusFeedbackFigure = null;
+			}
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected Rectangle getFeedbackBounds() {
+		Rectangle bounds;
+		if (getHostFigure() instanceof Label) {
+			bounds = ((Label) getHostFigure()).getTextBounds();
+			bounds.intersect(getHostFigure().getBounds());
+		} else {
+			bounds = getHostFigure().getBounds().getCopy();
+		}
+		getHostFigure().getParent().translateToAbsolute(bounds);
+		getFeedbackLayer().translateToRelative(bounds);
+		return bounds;
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createSelectionFeedbackFigure() {
+		if (getHostFigure() instanceof Label) {
+			Label feedbackFigure = new Label();
+			feedbackFigure.setOpaque(true);
+			feedbackFigure.setBackgroundColor(ColorConstants.menuBackgroundSelected);
+			feedbackFigure.setForegroundColor(ColorConstants.menuForegroundSelected);
+			return feedbackFigure;
+		} else {
+			RectangleFigure feedbackFigure = new RectangleFigure();
+			feedbackFigure.setFill(false);
+			return feedbackFigure;
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected IFigure createFocusFeedbackFigure() {
+		return new Figure() {
+
+			protected void paintFigure(Graphics graphics) {
+				graphics.drawFocus(getBounds().getResized(-1, -1));
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	protected void updateLabel(Label target) {
+		Label source = (Label) getHostFigure();
+		target.setText(source.getText());
+		target.setTextAlignment(source.getTextAlignment());
+		target.setFont(source.getFont());
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshSelectionFeedback() {
+		if (selectionFeedbackFigure != null) {
+			if (selectionFeedbackFigure instanceof Label) {
+				updateLabel((Label) selectionFeedbackFigure);
+				selectionFeedbackFigure.setBounds(getFeedbackBounds());
+			} else {
+				selectionFeedbackFigure.setBounds(getFeedbackBounds().expand(5, 5));
+			}
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshFocusFeedback() {
+		if (focusFeedbackFigure != null) {
+			focusFeedbackFigure.setBounds(getFeedbackBounds());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void refreshFeedback() {
+		refreshSelectionFeedback();
+		refreshFocusFeedback();
+	}
+
+	/**
+	* @generated
+	*/
+	private FigureListener getHostPositionListener() {
+		if (hostPositionListener == null) {
+			hostPositionListener = new FigureListener() {
+				public void figureMoved(IFigure source) {
+					refreshFeedback();
+				}
+			};
+		}
+		return hostPositionListener;
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNode2CanonicalEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNode2CanonicalEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,140 @@
+package ComBE.diagram.edit.policies;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
+import org.eclipse.gmf.runtime.diagram.ui.commands.DeferredLayoutCommand;
+import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
+import org.eclipse.gmf.runtime.diagram.ui.commands.SetViewMutabilityCommand;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.notation.Node;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class EmptyNode2CanonicalEditPolicy extends CanonicalEditPolicy {
+
+	/**
+	* @generated
+	*/
+	protected void refreshOnActivate() {
+		// Need to activate editpart children before invoking the canonical refresh for EditParts to add event listeners
+		List<?> c = getHost().getChildren();
+		for (int i = 0; i < c.size(); i++) {
+			((EditPart) c.get(i)).activate();
+		}
+		super.refreshOnActivate();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getSemanticChildrenList() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isOrphaned(Collection<EObject> semanticChildren, final View view) {
+		return isMyDiagramElement(view) && !semanticChildren.contains(view.getElement());
+	}
+
+	/**
+	* @generated
+	*/
+	private boolean isMyDiagramElement(View view) {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshSemantic() {
+		if (resolveSemanticElement() == null) {
+			return;
+		}
+		LinkedList<IAdaptable> createdViews = new LinkedList<IAdaptable>();
+		List<ComBE.diagram.part.ComBENodeDescriptor> childDescriptors = ComBE.diagram.part.ComBEDiagramUpdater.getEmptyNode_3004SemanticChildren((View) getHost().getModel());
+		LinkedList<View> orphaned = new LinkedList<View>();
+		// we care to check only views we recognize as ours
+		LinkedList<View> knownViewChildren = new LinkedList<View>();
+		for (View v : getViewChildren()) {
+			if (isMyDiagramElement(v)) {
+				knownViewChildren.add(v);
+			}
+		}
+		// alternative to #cleanCanonicalSemanticChildren(getViewChildren(), semanticChildren)
+		//
+		// iteration happens over list of desired semantic elements, trying to find best matching View, while original CEP
+		// iterates views, potentially losing view (size/bounds) information - i.e. if there are few views to reference same EObject, only last one 
+		// to answer isOrphaned == true will be used for the domain element representation, see #cleanCanonicalSemanticChildren()
+		for (Iterator<ComBE.diagram.part.ComBENodeDescriptor> descriptorsIterator = childDescriptors.iterator(); descriptorsIterator.hasNext();) {
+			ComBE.diagram.part.ComBENodeDescriptor next = descriptorsIterator.next();
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			LinkedList<View> perfectMatch = new LinkedList<View>(); // both semanticElement and hint match that of NodeDescriptor
+			for (View childView : getViewChildren()) {
+				EObject semanticElement = childView.getElement();
+				if (next.getModelElement().equals(semanticElement)) {
+					if (hint.equals(childView.getType())) {
+						perfectMatch.add(childView);
+						// actually, can stop iteration over view children here, but
+						// may want to use not the first view but last one as a 'real' match (the way original CEP does
+						// with its trick with viewToSemanticMap inside #cleanCanonicalSemanticChildren
+					}
+				}
+			}
+			if (perfectMatch.size() > 0) {
+				descriptorsIterator.remove(); // precise match found no need to create anything for the NodeDescriptor
+				// use only one view (first or last?), keep rest as orphaned for further consideration
+				knownViewChildren.remove(perfectMatch.getFirst());
+			}
+		}
+		// those left in knownViewChildren are subject to removal - they are our diagram elements we didn't find match to,
+		// or those we have potential matches to, and thus need to be recreated, preserving size/location information.
+		orphaned.addAll(knownViewChildren);
+		//
+		ArrayList<CreateViewRequest.ViewDescriptor> viewDescriptors = new ArrayList<CreateViewRequest.ViewDescriptor>(childDescriptors.size());
+		for (ComBE.diagram.part.ComBENodeDescriptor next : childDescriptors) {
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			IAdaptable elementAdapter = new CanonicalElementAdapter(next.getModelElement(), hint);
+			CreateViewRequest.ViewDescriptor descriptor = new CreateViewRequest.ViewDescriptor(elementAdapter, Node.class, hint, ViewUtil.APPEND, false, host().getDiagramPreferencesHint());
+			viewDescriptors.add(descriptor);
+		}
+
+		boolean changed = deleteViews(orphaned.iterator());
+		//
+		CreateViewRequest request = getCreateViewRequest(viewDescriptors);
+		Command cmd = getCreateViewCommand(request);
+		if (cmd != null && cmd.canExecute()) {
+			SetViewMutabilityCommand.makeMutable(new EObjectAdapter(host().getNotationView())).execute();
+			executeCommand(cmd);
+			@SuppressWarnings("unchecked")
+			List<IAdaptable> nl = (List<IAdaptable>) request.getNewObject();
+			createdViews.addAll(nl);
+		}
+		if (changed || createdViews.size() > 0) {
+			postProcessRefreshSemantic(createdViews);
+		}
+		if (createdViews.size() > 1) {
+			// perform a layout of the container
+			DeferredLayoutCommand layoutCmd = new DeferredLayoutCommand(host().getEditingDomain(), createdViews, host());
+			executeCommand(new ICommandProxy(layoutCmd));
+		}
+
+		makeViewsImmutable(createdViews);
+	}
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNode2ItemSemanticEditPolicy.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNode2ItemSemanticEditPolicy.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNode2ItemSemanticEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,7 +1,12 @@
 package ComBE.diagram.edit.policies;
 
+import org.eclipse.emf.ecore.EAnnotation;
 import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand;
+import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
+import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand;
 import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest;
+import org.eclipse.gmf.runtime.notation.View;
 
 /**
  * @generated
@@ -9,6 +14,13 @@
 public class EmptyNode2ItemSemanticEditPolicy extends ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy {
 
 	/**
+	* @generated
+	*/
+	public EmptyNode2ItemSemanticEditPolicy() {
+		super(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3004);
+	}
+
+	/**
 	* @generated NOT
 	*/
 	protected Command getDestroyElementCommand(DestroyElementRequest req) {

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNode3CanonicalEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNode3CanonicalEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,140 @@
+package ComBE.diagram.edit.policies;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
+import org.eclipse.gmf.runtime.diagram.ui.commands.DeferredLayoutCommand;
+import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
+import org.eclipse.gmf.runtime.diagram.ui.commands.SetViewMutabilityCommand;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.notation.Node;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class EmptyNode3CanonicalEditPolicy extends CanonicalEditPolicy {
+
+	/**
+	* @generated
+	*/
+	protected void refreshOnActivate() {
+		// Need to activate editpart children before invoking the canonical refresh for EditParts to add event listeners
+		List<?> c = getHost().getChildren();
+		for (int i = 0; i < c.size(); i++) {
+			((EditPart) c.get(i)).activate();
+		}
+		super.refreshOnActivate();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getSemanticChildrenList() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isOrphaned(Collection<EObject> semanticChildren, final View view) {
+		return isMyDiagramElement(view) && !semanticChildren.contains(view.getElement());
+	}
+
+	/**
+	* @generated
+	*/
+	private boolean isMyDiagramElement(View view) {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshSemantic() {
+		if (resolveSemanticElement() == null) {
+			return;
+		}
+		LinkedList<IAdaptable> createdViews = new LinkedList<IAdaptable>();
+		List<ComBE.diagram.part.ComBENodeDescriptor> childDescriptors = ComBE.diagram.part.ComBEDiagramUpdater.getEmptyNode_3006SemanticChildren((View) getHost().getModel());
+		LinkedList<View> orphaned = new LinkedList<View>();
+		// we care to check only views we recognize as ours
+		LinkedList<View> knownViewChildren = new LinkedList<View>();
+		for (View v : getViewChildren()) {
+			if (isMyDiagramElement(v)) {
+				knownViewChildren.add(v);
+			}
+		}
+		// alternative to #cleanCanonicalSemanticChildren(getViewChildren(), semanticChildren)
+		//
+		// iteration happens over list of desired semantic elements, trying to find best matching View, while original CEP
+		// iterates views, potentially losing view (size/bounds) information - i.e. if there are few views to reference same EObject, only last one 
+		// to answer isOrphaned == true will be used for the domain element representation, see #cleanCanonicalSemanticChildren()
+		for (Iterator<ComBE.diagram.part.ComBENodeDescriptor> descriptorsIterator = childDescriptors.iterator(); descriptorsIterator.hasNext();) {
+			ComBE.diagram.part.ComBENodeDescriptor next = descriptorsIterator.next();
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			LinkedList<View> perfectMatch = new LinkedList<View>(); // both semanticElement and hint match that of NodeDescriptor
+			for (View childView : getViewChildren()) {
+				EObject semanticElement = childView.getElement();
+				if (next.getModelElement().equals(semanticElement)) {
+					if (hint.equals(childView.getType())) {
+						perfectMatch.add(childView);
+						// actually, can stop iteration over view children here, but
+						// may want to use not the first view but last one as a 'real' match (the way original CEP does
+						// with its trick with viewToSemanticMap inside #cleanCanonicalSemanticChildren
+					}
+				}
+			}
+			if (perfectMatch.size() > 0) {
+				descriptorsIterator.remove(); // precise match found no need to create anything for the NodeDescriptor
+				// use only one view (first or last?), keep rest as orphaned for further consideration
+				knownViewChildren.remove(perfectMatch.getFirst());
+			}
+		}
+		// those left in knownViewChildren are subject to removal - they are our diagram elements we didn't find match to,
+		// or those we have potential matches to, and thus need to be recreated, preserving size/location information.
+		orphaned.addAll(knownViewChildren);
+		//
+		ArrayList<CreateViewRequest.ViewDescriptor> viewDescriptors = new ArrayList<CreateViewRequest.ViewDescriptor>(childDescriptors.size());
+		for (ComBE.diagram.part.ComBENodeDescriptor next : childDescriptors) {
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			IAdaptable elementAdapter = new CanonicalElementAdapter(next.getModelElement(), hint);
+			CreateViewRequest.ViewDescriptor descriptor = new CreateViewRequest.ViewDescriptor(elementAdapter, Node.class, hint, ViewUtil.APPEND, false, host().getDiagramPreferencesHint());
+			viewDescriptors.add(descriptor);
+		}
+
+		boolean changed = deleteViews(orphaned.iterator());
+		//
+		CreateViewRequest request = getCreateViewRequest(viewDescriptors);
+		Command cmd = getCreateViewCommand(request);
+		if (cmd != null && cmd.canExecute()) {
+			SetViewMutabilityCommand.makeMutable(new EObjectAdapter(host().getNotationView())).execute();
+			executeCommand(cmd);
+			@SuppressWarnings("unchecked")
+			List<IAdaptable> nl = (List<IAdaptable>) request.getNewObject();
+			createdViews.addAll(nl);
+		}
+		if (changed || createdViews.size() > 0) {
+			postProcessRefreshSemantic(createdViews);
+		}
+		if (createdViews.size() > 1) {
+			// perform a layout of the container
+			DeferredLayoutCommand layoutCmd = new DeferredLayoutCommand(host().getEditingDomain(), createdViews, host());
+			executeCommand(new ICommandProxy(layoutCmd));
+		}
+
+		makeViewsImmutable(createdViews);
+	}
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNode3ItemSemanticEditPolicy.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNode3ItemSemanticEditPolicy.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNode3ItemSemanticEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,7 +1,12 @@
 package ComBE.diagram.edit.policies;
 
+import org.eclipse.emf.ecore.EAnnotation;
 import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand;
+import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
+import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand;
 import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest;
+import org.eclipse.gmf.runtime.notation.View;
 
 /**
  * @generated
@@ -9,6 +14,13 @@
 public class EmptyNode3ItemSemanticEditPolicy extends ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy {
 
 	/**
+	* @generated
+	*/
+	public EmptyNode3ItemSemanticEditPolicy() {
+		super(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3006);
+	}
+
+	/**
 	* @generated NOT
 	*/
 	protected Command getDestroyElementCommand(DestroyElementRequest req) {

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNodeCanonicalEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNodeCanonicalEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,140 @@
+package ComBE.diagram.edit.policies;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
+import org.eclipse.gmf.runtime.diagram.ui.commands.DeferredLayoutCommand;
+import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
+import org.eclipse.gmf.runtime.diagram.ui.commands.SetViewMutabilityCommand;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.notation.Node;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class EmptyNodeCanonicalEditPolicy extends CanonicalEditPolicy {
+
+	/**
+	* @generated
+	*/
+	protected void refreshOnActivate() {
+		// Need to activate editpart children before invoking the canonical refresh for EditParts to add event listeners
+		List<?> c = getHost().getChildren();
+		for (int i = 0; i < c.size(); i++) {
+			((EditPart) c.get(i)).activate();
+		}
+		super.refreshOnActivate();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getSemanticChildrenList() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isOrphaned(Collection<EObject> semanticChildren, final View view) {
+		return isMyDiagramElement(view) && !semanticChildren.contains(view.getElement());
+	}
+
+	/**
+	* @generated
+	*/
+	private boolean isMyDiagramElement(View view) {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshSemantic() {
+		if (resolveSemanticElement() == null) {
+			return;
+		}
+		LinkedList<IAdaptable> createdViews = new LinkedList<IAdaptable>();
+		List<ComBE.diagram.part.ComBENodeDescriptor> childDescriptors = ComBE.diagram.part.ComBEDiagramUpdater.getEmptyNode_3002SemanticChildren((View) getHost().getModel());
+		LinkedList<View> orphaned = new LinkedList<View>();
+		// we care to check only views we recognize as ours
+		LinkedList<View> knownViewChildren = new LinkedList<View>();
+		for (View v : getViewChildren()) {
+			if (isMyDiagramElement(v)) {
+				knownViewChildren.add(v);
+			}
+		}
+		// alternative to #cleanCanonicalSemanticChildren(getViewChildren(), semanticChildren)
+		//
+		// iteration happens over list of desired semantic elements, trying to find best matching View, while original CEP
+		// iterates views, potentially losing view (size/bounds) information - i.e. if there are few views to reference same EObject, only last one 
+		// to answer isOrphaned == true will be used for the domain element representation, see #cleanCanonicalSemanticChildren()
+		for (Iterator<ComBE.diagram.part.ComBENodeDescriptor> descriptorsIterator = childDescriptors.iterator(); descriptorsIterator.hasNext();) {
+			ComBE.diagram.part.ComBENodeDescriptor next = descriptorsIterator.next();
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			LinkedList<View> perfectMatch = new LinkedList<View>(); // both semanticElement and hint match that of NodeDescriptor
+			for (View childView : getViewChildren()) {
+				EObject semanticElement = childView.getElement();
+				if (next.getModelElement().equals(semanticElement)) {
+					if (hint.equals(childView.getType())) {
+						perfectMatch.add(childView);
+						// actually, can stop iteration over view children here, but
+						// may want to use not the first view but last one as a 'real' match (the way original CEP does
+						// with its trick with viewToSemanticMap inside #cleanCanonicalSemanticChildren
+					}
+				}
+			}
+			if (perfectMatch.size() > 0) {
+				descriptorsIterator.remove(); // precise match found no need to create anything for the NodeDescriptor
+				// use only one view (first or last?), keep rest as orphaned for further consideration
+				knownViewChildren.remove(perfectMatch.getFirst());
+			}
+		}
+		// those left in knownViewChildren are subject to removal - they are our diagram elements we didn't find match to,
+		// or those we have potential matches to, and thus need to be recreated, preserving size/location information.
+		orphaned.addAll(knownViewChildren);
+		//
+		ArrayList<CreateViewRequest.ViewDescriptor> viewDescriptors = new ArrayList<CreateViewRequest.ViewDescriptor>(childDescriptors.size());
+		for (ComBE.diagram.part.ComBENodeDescriptor next : childDescriptors) {
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			IAdaptable elementAdapter = new CanonicalElementAdapter(next.getModelElement(), hint);
+			CreateViewRequest.ViewDescriptor descriptor = new CreateViewRequest.ViewDescriptor(elementAdapter, Node.class, hint, ViewUtil.APPEND, false, host().getDiagramPreferencesHint());
+			viewDescriptors.add(descriptor);
+		}
+
+		boolean changed = deleteViews(orphaned.iterator());
+		//
+		CreateViewRequest request = getCreateViewRequest(viewDescriptors);
+		Command cmd = getCreateViewCommand(request);
+		if (cmd != null && cmd.canExecute()) {
+			SetViewMutabilityCommand.makeMutable(new EObjectAdapter(host().getNotationView())).execute();
+			executeCommand(cmd);
+			@SuppressWarnings("unchecked")
+			List<IAdaptable> nl = (List<IAdaptable>) request.getNewObject();
+			createdViews.addAll(nl);
+		}
+		if (changed || createdViews.size() > 0) {
+			postProcessRefreshSemantic(createdViews);
+		}
+		if (createdViews.size() > 1) {
+			// perform a layout of the container
+			DeferredLayoutCommand layoutCmd = new DeferredLayoutCommand(host().getEditingDomain(), createdViews, host());
+			executeCommand(new ICommandProxy(layoutCmd));
+		}
+
+		makeViewsImmutable(createdViews);
+	}
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNodeItemSemanticEditPolicy.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNodeItemSemanticEditPolicy.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/EmptyNodeItemSemanticEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,7 +1,12 @@
 package ComBE.diagram.edit.policies;
 
+import org.eclipse.emf.ecore.EAnnotation;
 import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand;
+import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
+import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand;
 import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest;
+import org.eclipse.gmf.runtime.notation.View;
 
 /**
  * @generated
@@ -9,6 +14,13 @@
 public class EmptyNodeItemSemanticEditPolicy extends ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy {
 
 	/**
+	* @generated
+	*/
+	public EmptyNodeItemSemanticEditPolicy() {
+		super(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3002);
+	}
+
+	/**
 	* @generated NOT
 	*/
 	protected Command getDestroyElementCommand(DestroyElementRequest req) {

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ParallelBranchCanonicalEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ParallelBranchCanonicalEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,140 @@
+package ComBE.diagram.edit.policies;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
+import org.eclipse.gmf.runtime.diagram.ui.commands.DeferredLayoutCommand;
+import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
+import org.eclipse.gmf.runtime.diagram.ui.commands.SetViewMutabilityCommand;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.notation.Node;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class ParallelBranchCanonicalEditPolicy extends CanonicalEditPolicy {
+
+	/**
+	* @generated
+	*/
+	protected void refreshOnActivate() {
+		// Need to activate editpart children before invoking the canonical refresh for EditParts to add event listeners
+		List<?> c = getHost().getChildren();
+		for (int i = 0; i < c.size(); i++) {
+			((EditPart) c.get(i)).activate();
+		}
+		super.refreshOnActivate();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getSemanticChildrenList() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isOrphaned(Collection<EObject> semanticChildren, final View view) {
+		return isMyDiagramElement(view) && !semanticChildren.contains(view.getElement());
+	}
+
+	/**
+	* @generated
+	*/
+	private boolean isMyDiagramElement(View view) {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshSemantic() {
+		if (resolveSemanticElement() == null) {
+			return;
+		}
+		LinkedList<IAdaptable> createdViews = new LinkedList<IAdaptable>();
+		List<ComBE.diagram.part.ComBENodeDescriptor> childDescriptors = ComBE.diagram.part.ComBEDiagramUpdater.getParallelBranch_2002SemanticChildren((View) getHost().getModel());
+		LinkedList<View> orphaned = new LinkedList<View>();
+		// we care to check only views we recognize as ours
+		LinkedList<View> knownViewChildren = new LinkedList<View>();
+		for (View v : getViewChildren()) {
+			if (isMyDiagramElement(v)) {
+				knownViewChildren.add(v);
+			}
+		}
+		// alternative to #cleanCanonicalSemanticChildren(getViewChildren(), semanticChildren)
+		//
+		// iteration happens over list of desired semantic elements, trying to find best matching View, while original CEP
+		// iterates views, potentially losing view (size/bounds) information - i.e. if there are few views to reference same EObject, only last one 
+		// to answer isOrphaned == true will be used for the domain element representation, see #cleanCanonicalSemanticChildren()
+		for (Iterator<ComBE.diagram.part.ComBENodeDescriptor> descriptorsIterator = childDescriptors.iterator(); descriptorsIterator.hasNext();) {
+			ComBE.diagram.part.ComBENodeDescriptor next = descriptorsIterator.next();
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			LinkedList<View> perfectMatch = new LinkedList<View>(); // both semanticElement and hint match that of NodeDescriptor
+			for (View childView : getViewChildren()) {
+				EObject semanticElement = childView.getElement();
+				if (next.getModelElement().equals(semanticElement)) {
+					if (hint.equals(childView.getType())) {
+						perfectMatch.add(childView);
+						// actually, can stop iteration over view children here, but
+						// may want to use not the first view but last one as a 'real' match (the way original CEP does
+						// with its trick with viewToSemanticMap inside #cleanCanonicalSemanticChildren
+					}
+				}
+			}
+			if (perfectMatch.size() > 0) {
+				descriptorsIterator.remove(); // precise match found no need to create anything for the NodeDescriptor
+				// use only one view (first or last?), keep rest as orphaned for further consideration
+				knownViewChildren.remove(perfectMatch.getFirst());
+			}
+		}
+		// those left in knownViewChildren are subject to removal - they are our diagram elements we didn't find match to,
+		// or those we have potential matches to, and thus need to be recreated, preserving size/location information.
+		orphaned.addAll(knownViewChildren);
+		//
+		ArrayList<CreateViewRequest.ViewDescriptor> viewDescriptors = new ArrayList<CreateViewRequest.ViewDescriptor>(childDescriptors.size());
+		for (ComBE.diagram.part.ComBENodeDescriptor next : childDescriptors) {
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			IAdaptable elementAdapter = new CanonicalElementAdapter(next.getModelElement(), hint);
+			CreateViewRequest.ViewDescriptor descriptor = new CreateViewRequest.ViewDescriptor(elementAdapter, Node.class, hint, ViewUtil.APPEND, false, host().getDiagramPreferencesHint());
+			viewDescriptors.add(descriptor);
+		}
+
+		boolean changed = deleteViews(orphaned.iterator());
+		//
+		CreateViewRequest request = getCreateViewRequest(viewDescriptors);
+		Command cmd = getCreateViewCommand(request);
+		if (cmd != null && cmd.canExecute()) {
+			SetViewMutabilityCommand.makeMutable(new EObjectAdapter(host().getNotationView())).execute();
+			executeCommand(cmd);
+			@SuppressWarnings("unchecked")
+			List<IAdaptable> nl = (List<IAdaptable>) request.getNewObject();
+			createdViews.addAll(nl);
+		}
+		if (changed || createdViews.size() > 0) {
+			postProcessRefreshSemantic(createdViews);
+		}
+		if (createdViews.size() > 1) {
+			// perform a layout of the container
+			DeferredLayoutCommand layoutCmd = new DeferredLayoutCommand(host().getEditingDomain(), createdViews, host());
+			executeCommand(new ICommandProxy(layoutCmd));
+		}
+
+		makeViewsImmutable(createdViews);
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ParallelBranchChildrenItemSemanticEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ParallelBranchChildrenItemSemanticEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,42 @@
+package ComBE.diagram.edit.policies;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest;
+
+/**
+ * @generated
+ */
+public class ParallelBranchChildrenItemSemanticEditPolicy extends ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy {
+
+	/**
+	* @generated
+	*/
+	public ParallelBranchChildrenItemSemanticEditPolicy() {
+		super(ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002);
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getDestroyReferenceCommand(DestroyReferenceRequest req) {
+		return getGEFWrapper(new DestroyReferenceCommand(req) {
+			protected CommandResult doExecuteWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
+				EObject referencedObject = getReferencedObject();
+				Resource resource = referencedObject.eResource();
+				CommandResult result = super.doExecuteWithResult(progressMonitor, info);
+				if (resource != null) {
+					resource.getContents().add(referencedObject);
+				}
+				return result;
+			}
+		});
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ParallelBranchItemSemanticEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ParallelBranchItemSemanticEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,215 @@
+package ComBE.diagram.edit.policies;
+
+import java.util.Iterator;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.EAnnotation;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.common.core.command.ICompositeCommand;
+import org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand;
+import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
+import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand;
+import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.ReorientReferenceRelationshipRequest;
+import org.eclipse.gmf.runtime.notation.Edge;
+import org.eclipse.gmf.runtime.notation.Node;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class ParallelBranchItemSemanticEditPolicy extends ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy {
+
+	/**
+	* @generated
+	*/
+	public ParallelBranchItemSemanticEditPolicy() {
+		super(ComBE.diagram.providers.ComBEElementTypes.ParallelBranch_2002);
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getDestroyElementCommand(DestroyElementRequest req) {
+		View view = (View) getHost().getModel();
+		CompositeTransactionalCommand cmd = new CompositeTransactionalCommand(getEditingDomain(), null);
+		cmd.setTransactionNestingEnabled(false);
+		for (Iterator<?> it = view.getTargetEdges().iterator(); it.hasNext();) {
+			Edge incomingLink = (Edge) it.next();
+			if (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(incomingLink) == ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID) {
+				DestroyReferenceRequest r = new DestroyReferenceRequest(incomingLink.getSource().getElement(), null, incomingLink.getTarget().getElement(), false);
+				cmd.add(new DestroyReferenceCommand(r) {
+					protected CommandResult doExecuteWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
+						EObject referencedObject = getReferencedObject();
+						Resource resource = referencedObject.eResource();
+						CommandResult result = super.doExecuteWithResult(progressMonitor, info);
+						if (resource != null) {
+							resource.getContents().add(referencedObject);
+						}
+						return result;
+					}
+				});
+				cmd.add(new DeleteCommand(getEditingDomain(), incomingLink));
+				continue;
+			}
+			if (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(incomingLink) == ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID) {
+				DestroyReferenceRequest r = new DestroyReferenceRequest(incomingLink.getSource().getElement(), null, incomingLink.getTarget().getElement(), false);
+				cmd.add(new DestroyReferenceCommand(r) {
+					protected CommandResult doExecuteWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
+						EObject referencedObject = getReferencedObject();
+						Resource resource = referencedObject.eResource();
+						CommandResult result = super.doExecuteWithResult(progressMonitor, info);
+						if (resource != null) {
+							resource.getContents().add(referencedObject);
+						}
+						return result;
+					}
+				});
+				cmd.add(new DeleteCommand(getEditingDomain(), incomingLink));
+				continue;
+			}
+			if (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(incomingLink) == ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID) {
+				DestroyReferenceRequest r = new DestroyReferenceRequest(incomingLink.getSource().getElement(), null, incomingLink.getTarget().getElement(), false);
+				cmd.add(new DestroyReferenceCommand(r) {
+					protected CommandResult doExecuteWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
+						EObject referencedObject = getReferencedObject();
+						Resource resource = referencedObject.eResource();
+						CommandResult result = super.doExecuteWithResult(progressMonitor, info);
+						if (resource != null) {
+							resource.getContents().add(referencedObject);
+						}
+						return result;
+					}
+				});
+				cmd.add(new DeleteCommand(getEditingDomain(), incomingLink));
+				continue;
+			}
+		}
+		for (Iterator<?> it = view.getSourceEdges().iterator(); it.hasNext();) {
+			Edge outgoingLink = (Edge) it.next();
+			if (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(outgoingLink) == ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID) {
+				DestroyReferenceRequest r = new DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
+				cmd.add(new DestroyReferenceCommand(r) {
+					protected CommandResult doExecuteWithResult(IProgressMonitor progressMonitor, IAdaptable info) throws ExecutionException {
+						EObject referencedObject = getReferencedObject();
+						Resource resource = referencedObject.eResource();
+						CommandResult result = super.doExecuteWithResult(progressMonitor, info);
+						if (resource != null) {
+							resource.getContents().add(referencedObject);
+						}
+						return result;
+					}
+				});
+				cmd.add(new DeleteCommand(getEditingDomain(), outgoingLink));
+				continue;
+			}
+		}
+		EAnnotation annotation = view.getEAnnotation("Shortcut"); //$NON-NLS-1$
+		if (annotation == null) {
+			// there are indirectly referenced children, need extra commands: false
+			addDestroyChildNodesCommand(cmd);
+			addDestroyShortcutsCommand(cmd, view);
+			// delete host element
+			cmd.add(new DestroyElementCommand(req));
+		} else {
+			cmd.add(new DeleteCommand(getEditingDomain(), view));
+		}
+		return getGEFWrapper(cmd.reduce());
+	}
+
+	/**
+	* @generated
+	*/
+	private void addDestroyChildNodesCommand(ICompositeCommand cmd) {
+		View view = (View) getHost().getModel();
+		for (Iterator<?> nit = view.getChildren().iterator(); nit.hasNext();) {
+			Node node = (Node) nit.next();
+			switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(node)) {
+			case ComBE.diagram.edit.parts.AlternativeBranchAlternativeBranchNodesCompartmentEditPart.VISUAL_ID:
+				for (Iterator<?> cit = node.getChildren().iterator(); cit.hasNext();) {
+					Node cnode = (Node) cit.next();
+					switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(cnode)) {
+					case ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID:
+						cmd.add(new DestroyElementCommand(new DestroyElementRequest(getEditingDomain(), cnode.getElement(), false))); // directlyOwned: true
+						// don't need explicit deletion of cnode as parent's view deletion would clean child views as well 
+						// cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), cnode));
+						break;
+					case ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID:
+						cmd.add(new DestroyElementCommand(new DestroyElementRequest(getEditingDomain(), cnode.getElement(), false))); // directlyOwned: true
+						// don't need explicit deletion of cnode as parent's view deletion would clean child views as well 
+						// cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), cnode));
+						break;
+					}
+				}
+				break;
+			}
+		}
+	}
+
+	/**
+	 * @generated
+	 */
+	protected Command getCreateRelationshipCommand(CreateRelationshipRequest req) {
+		Command command = req.getTarget() == null ? getStartCreateRelationshipCommand(req) : getCompleteCreateRelationshipCommand(req);
+		return command != null ? command : super.getCreateRelationshipCommand(req);
+	}
+
+	/**
+	 * @generated
+	 */
+	protected Command getStartCreateRelationshipCommand(CreateRelationshipRequest req) {
+		if (ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001 == req.getElementType()) {
+			return null;
+		}
+		if (ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.ParallelBranchChildrenCreateCommand(req, req.getSource(), req.getTarget()));
+		}
+		if (ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003 == req.getElementType()) {
+			return null;
+		}
+		return null;
+	}
+
+	/**
+	 * @generated
+	 */
+	protected Command getCompleteCreateRelationshipCommand(CreateRelationshipRequest req) {
+		if (ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.AlternativeBranchChildrenCreateCommand(req, req.getSource(), req.getTarget()));
+		}
+		if (ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.ParallelBranchChildrenCreateCommand(req, req.getSource(), req.getTarget()));
+		}
+		if (ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.AtomicSequenceChildCreateCommand(req, req.getSource(), req.getTarget()));
+		}
+		return null;
+	}
+
+	/**
+	 * Returns command to reorient EReference based link. New link target or source
+	 * should be the domain model element associated with this node.
+	 * 
+	 * @generated
+	 */
+	protected Command getReorientReferenceRelationshipCommand(ReorientReferenceRelationshipRequest req) {
+		switch (getVisualID(req)) {
+		case ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID:
+			return getGEFWrapper(new ComBE.diagram.edit.commands.AlternativeBranchChildrenReorientCommand(req));
+		case ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID:
+			return getGEFWrapper(new ComBE.diagram.edit.commands.ParallelBranchChildrenReorientCommand(req));
+		case ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID:
+			return getGEFWrapper(new ComBE.diagram.edit.commands.AtomicSequenceChildReorientCommand(req));
+		}
+		return super.getReorientReferenceRelationshipCommand(req);
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ParallelBranchParallelBranchNodesCompartmentCanonicalEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ParallelBranchParallelBranchNodesCompartmentCanonicalEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,154 @@
+package ComBE.diagram.edit.policies;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.EStructuralFeature;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
+import org.eclipse.gmf.runtime.diagram.ui.commands.DeferredLayoutCommand;
+import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
+import org.eclipse.gmf.runtime.diagram.ui.commands.SetViewMutabilityCommand;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.notation.Node;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class ParallelBranchParallelBranchNodesCompartmentCanonicalEditPolicy extends CanonicalEditPolicy {
+
+	/**
+	* @generated
+	*/
+	protected void refreshOnActivate() {
+		// Need to activate editpart children before invoking the canonical refresh for EditParts to add event listeners
+		List<?> c = getHost().getChildren();
+		for (int i = 0; i < c.size(); i++) {
+			((EditPart) c.get(i)).activate();
+		}
+		super.refreshOnActivate();
+	}
+
+	/**
+	* @generated
+	*/
+	protected EStructuralFeature getFeatureToSynchronize() {
+		return ComBE.ComBEPackage.eINSTANCE.getBehaviorTree_Nodes();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getSemanticChildrenList() {
+		View viewObject = (View) getHost().getModel();
+		LinkedList<EObject> result = new LinkedList<EObject>();
+		List<ComBE.diagram.part.ComBENodeDescriptor> childDescriptors = ComBE.diagram.part.ComBEDiagramUpdater.getAtomicSequenceAtomicSequenceNodesCompartment_7003SemanticChildren(viewObject);
+		for (ComBE.diagram.part.ComBENodeDescriptor d : childDescriptors) {
+			result.add(d.getModelElement());
+		}
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isOrphaned(Collection<EObject> semanticChildren, final View view) {
+		return isMyDiagramElement(view) && !semanticChildren.contains(view.getElement());
+	}
+
+	/**
+	* @generated
+	*/
+	private boolean isMyDiagramElement(View view) {
+		int visualID = ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view);
+		return visualID == ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID || visualID == ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshSemantic() {
+		if (resolveSemanticElement() == null) {
+			return;
+		}
+		LinkedList<IAdaptable> createdViews = new LinkedList<IAdaptable>();
+		List<ComBE.diagram.part.ComBENodeDescriptor> childDescriptors = ComBE.diagram.part.ComBEDiagramUpdater.getAtomicSequenceAtomicSequenceNodesCompartment_7003SemanticChildren((View) getHost().getModel());
+		LinkedList<View> orphaned = new LinkedList<View>();
+		// we care to check only views we recognize as ours
+		LinkedList<View> knownViewChildren = new LinkedList<View>();
+		for (View v : getViewChildren()) {
+			if (isMyDiagramElement(v)) {
+				knownViewChildren.add(v);
+			}
+		}
+		// alternative to #cleanCanonicalSemanticChildren(getViewChildren(), semanticChildren)
+		//
+		// iteration happens over list of desired semantic elements, trying to find best matching View, while original CEP
+		// iterates views, potentially losing view (size/bounds) information - i.e. if there are few views to reference same EObject, only last one 
+		// to answer isOrphaned == true will be used for the domain element representation, see #cleanCanonicalSemanticChildren()
+		for (Iterator<ComBE.diagram.part.ComBENodeDescriptor> descriptorsIterator = childDescriptors.iterator(); descriptorsIterator.hasNext();) {
+			ComBE.diagram.part.ComBENodeDescriptor next = descriptorsIterator.next();
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			LinkedList<View> perfectMatch = new LinkedList<View>(); // both semanticElement and hint match that of NodeDescriptor
+			for (View childView : getViewChildren()) {
+				EObject semanticElement = childView.getElement();
+				if (next.getModelElement().equals(semanticElement)) {
+					if (hint.equals(childView.getType())) {
+						perfectMatch.add(childView);
+						// actually, can stop iteration over view children here, but
+						// may want to use not the first view but last one as a 'real' match (the way original CEP does
+						// with its trick with viewToSemanticMap inside #cleanCanonicalSemanticChildren
+					}
+				}
+			}
+			if (perfectMatch.size() > 0) {
+				descriptorsIterator.remove(); // precise match found no need to create anything for the NodeDescriptor
+				// use only one view (first or last?), keep rest as orphaned for further consideration
+				knownViewChildren.remove(perfectMatch.getFirst());
+			}
+		}
+		// those left in knownViewChildren are subject to removal - they are our diagram elements we didn't find match to,
+		// or those we have potential matches to, and thus need to be recreated, preserving size/location information.
+		orphaned.addAll(knownViewChildren);
+		//
+		ArrayList<CreateViewRequest.ViewDescriptor> viewDescriptors = new ArrayList<CreateViewRequest.ViewDescriptor>(childDescriptors.size());
+		for (ComBE.diagram.part.ComBENodeDescriptor next : childDescriptors) {
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			IAdaptable elementAdapter = new CanonicalElementAdapter(next.getModelElement(), hint);
+			CreateViewRequest.ViewDescriptor descriptor = new CreateViewRequest.ViewDescriptor(elementAdapter, Node.class, hint, ViewUtil.APPEND, false, host().getDiagramPreferencesHint());
+			viewDescriptors.add(descriptor);
+		}
+
+		boolean changed = deleteViews(orphaned.iterator());
+		//
+		CreateViewRequest request = getCreateViewRequest(viewDescriptors);
+		Command cmd = getCreateViewCommand(request);
+		if (cmd != null && cmd.canExecute()) {
+			SetViewMutabilityCommand.makeMutable(new EObjectAdapter(host().getNotationView())).execute();
+			executeCommand(cmd);
+			@SuppressWarnings("unchecked")
+			List<IAdaptable> nl = (List<IAdaptable>) request.getNewObject();
+			createdViews.addAll(nl);
+		}
+		if (changed || createdViews.size() > 0) {
+			postProcessRefreshSemantic(createdViews);
+		}
+		if (createdViews.size() > 1) {
+			// perform a layout of the container
+			DeferredLayoutCommand layoutCmd = new DeferredLayoutCommand(host().getEditingDomain(), createdViews, host());
+			executeCommand(new ICommandProxy(layoutCmd));
+		}
+
+		makeViewsImmutable(createdViews);
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ParallelBranchParallelBranchNodesCompartmentItemSemanticEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/ParallelBranchParallelBranchNodesCompartmentItemSemanticEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,31 @@
+package ComBE.diagram.edit.policies;
+
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
+
+/**
+* @generated
+*/
+public class ParallelBranchParallelBranchNodesCompartmentItemSemanticEditPolicy extends ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy {
+
+	/**
+	* @generated
+	*/
+	public ParallelBranchParallelBranchNodesCompartmentItemSemanticEditPolicy() {
+		super(ComBE.diagram.providers.ComBEElementTypes.AtomicSequence_2003);
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getCreateCommand(CreateElementRequest req) {
+		if (ComBE.diagram.providers.ComBEElementTypes.StandardNode_3005 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.StandardNode3CreateCommand(req));
+		}
+		if (ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3006 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.EmptyNode3CreateCommand(req));
+		}
+		return super.getCreateCommand(req);
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/SpecificationCanonicalEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/SpecificationCanonicalEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,348 @@
+package ComBE.diagram.edit.policies;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Map;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
+import org.eclipse.gmf.runtime.diagram.ui.commands.DeferredLayoutCommand;
+import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
+import org.eclipse.gmf.runtime.diagram.ui.commands.SetViewMutabilityCommand;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.requests.CreateConnectionViewRequest;
+import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;
+import org.eclipse.gmf.runtime.diagram.ui.requests.RequestConstants;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.notation.Diagram;
+import org.eclipse.gmf.runtime.notation.Edge;
+import org.eclipse.gmf.runtime.notation.Node;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+* @generated
+*/
+public class SpecificationCanonicalEditPolicy extends CanonicalEditPolicy {
+
+	/**
+	* @generated
+	*/
+	protected void refreshOnActivate() {
+		// Need to activate editpart children before invoking the canonical refresh for EditParts to add event listeners
+		List<?> c = getHost().getChildren();
+		for (int i = 0; i < c.size(); i++) {
+			((EditPart) c.get(i)).activate();
+		}
+		super.refreshOnActivate();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getSemanticChildrenList() {
+		View viewObject = (View) getHost().getModel();
+		LinkedList<EObject> result = new LinkedList<EObject>();
+		List<ComBE.diagram.part.ComBENodeDescriptor> childDescriptors = ComBE.diagram.part.ComBEDiagramUpdater.getSpecification_1000SemanticChildren(viewObject);
+		for (ComBE.diagram.part.ComBENodeDescriptor d : childDescriptors) {
+			result.add(d.getModelElement());
+		}
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isOrphaned(Collection<EObject> semanticChildren, final View view) {
+		return isMyDiagramElement(view) && !semanticChildren.contains(view.getElement());
+	}
+
+	/**
+	* @generated
+	*/
+	private boolean isMyDiagramElement(View view) {
+		int visualID = ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view);
+		return visualID == ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID || visualID == ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID || visualID == ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshSemantic() {
+		if (resolveSemanticElement() == null) {
+			return;
+		}
+		LinkedList<IAdaptable> createdViews = new LinkedList<IAdaptable>();
+		List<ComBE.diagram.part.ComBENodeDescriptor> childDescriptors = ComBE.diagram.part.ComBEDiagramUpdater.getSpecification_1000SemanticChildren((View) getHost().getModel());
+		LinkedList<View> orphaned = new LinkedList<View>();
+		// we care to check only views we recognize as ours
+		LinkedList<View> knownViewChildren = new LinkedList<View>();
+		for (View v : getViewChildren()) {
+			if (isMyDiagramElement(v)) {
+				knownViewChildren.add(v);
+			}
+		}
+		// alternative to #cleanCanonicalSemanticChildren(getViewChildren(), semanticChildren)
+		//
+		// iteration happens over list of desired semantic elements, trying to find best matching View, while original CEP
+		// iterates views, potentially losing view (size/bounds) information - i.e. if there are few views to reference same EObject, only last one 
+		// to answer isOrphaned == true will be used for the domain element representation, see #cleanCanonicalSemanticChildren()
+		for (Iterator<ComBE.diagram.part.ComBENodeDescriptor> descriptorsIterator = childDescriptors.iterator(); descriptorsIterator.hasNext();) {
+			ComBE.diagram.part.ComBENodeDescriptor next = descriptorsIterator.next();
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			LinkedList<View> perfectMatch = new LinkedList<View>(); // both semanticElement and hint match that of NodeDescriptor
+			for (View childView : getViewChildren()) {
+				EObject semanticElement = childView.getElement();
+				if (next.getModelElement().equals(semanticElement)) {
+					if (hint.equals(childView.getType())) {
+						perfectMatch.add(childView);
+						// actually, can stop iteration over view children here, but
+						// may want to use not the first view but last one as a 'real' match (the way original CEP does
+						// with its trick with viewToSemanticMap inside #cleanCanonicalSemanticChildren
+					}
+				}
+			}
+			if (perfectMatch.size() > 0) {
+				descriptorsIterator.remove(); // precise match found no need to create anything for the NodeDescriptor
+				// use only one view (first or last?), keep rest as orphaned for further consideration
+				knownViewChildren.remove(perfectMatch.getFirst());
+			}
+		}
+		// those left in knownViewChildren are subject to removal - they are our diagram elements we didn't find match to,
+		// or those we have potential matches to, and thus need to be recreated, preserving size/location information.
+		orphaned.addAll(knownViewChildren);
+		//
+		ArrayList<CreateViewRequest.ViewDescriptor> viewDescriptors = new ArrayList<CreateViewRequest.ViewDescriptor>(childDescriptors.size());
+		for (ComBE.diagram.part.ComBENodeDescriptor next : childDescriptors) {
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			IAdaptable elementAdapter = new CanonicalElementAdapter(next.getModelElement(), hint);
+			CreateViewRequest.ViewDescriptor descriptor = new CreateViewRequest.ViewDescriptor(elementAdapter, Node.class, hint, ViewUtil.APPEND, false, host().getDiagramPreferencesHint());
+			viewDescriptors.add(descriptor);
+		}
+
+		boolean changed = deleteViews(orphaned.iterator());
+		//
+		CreateViewRequest request = getCreateViewRequest(viewDescriptors);
+		Command cmd = getCreateViewCommand(request);
+		if (cmd != null && cmd.canExecute()) {
+			SetViewMutabilityCommand.makeMutable(new EObjectAdapter(host().getNotationView())).execute();
+			executeCommand(cmd);
+			@SuppressWarnings("unchecked")
+			List<IAdaptable> nl = (List<IAdaptable>) request.getNewObject();
+			createdViews.addAll(nl);
+		}
+		if (changed || createdViews.size() > 0) {
+			postProcessRefreshSemantic(createdViews);
+		}
+
+		Collection<IAdaptable> createdConnectionViews = refreshConnections();
+
+		if (createdViews.size() > 1) {
+			// perform a layout of the container
+			DeferredLayoutCommand layoutCmd = new DeferredLayoutCommand(host().getEditingDomain(), createdViews, host());
+			executeCommand(new ICommandProxy(layoutCmd));
+		}
+
+		createdViews.addAll(createdConnectionViews);
+
+		makeViewsImmutable(createdViews);
+	}
+
+	/**
+	* @generated
+	*/
+	private Collection<IAdaptable> refreshConnections() {
+		Map<EObject, View> domain2NotationMap = new HashMap<EObject, View>();
+		Collection<ComBE.diagram.part.ComBELinkDescriptor> linkDescriptors = collectAllLinks(getDiagram(), domain2NotationMap);
+		Collection existingLinks = new LinkedList(getDiagram().getEdges());
+		for (Iterator linksIterator = existingLinks.iterator(); linksIterator.hasNext();) {
+			Edge nextDiagramLink = (Edge) linksIterator.next();
+			int diagramLinkVisualID = ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(nextDiagramLink);
+			if (diagramLinkVisualID == -1) {
+				if (nextDiagramLink.getSource() != null && nextDiagramLink.getTarget() != null) {
+					linksIterator.remove();
+				}
+				continue;
+			}
+			EObject diagramLinkObject = nextDiagramLink.getElement();
+			EObject diagramLinkSrc = nextDiagramLink.getSource().getElement();
+			EObject diagramLinkDst = nextDiagramLink.getTarget().getElement();
+			for (Iterator<ComBE.diagram.part.ComBELinkDescriptor> linkDescriptorsIterator = linkDescriptors.iterator(); linkDescriptorsIterator.hasNext();) {
+				ComBE.diagram.part.ComBELinkDescriptor nextLinkDescriptor = linkDescriptorsIterator.next();
+				if (diagramLinkObject == nextLinkDescriptor.getModelElement() && diagramLinkSrc == nextLinkDescriptor.getSource() && diagramLinkDst == nextLinkDescriptor.getDestination() && diagramLinkVisualID == nextLinkDescriptor.getVisualID()) {
+					linksIterator.remove();
+					linkDescriptorsIterator.remove();
+					break;
+				}
+			}
+		}
+		deleteViews(existingLinks.iterator());
+		return createConnections(linkDescriptors, domain2NotationMap);
+	}
+
+	/**
+	* @generated
+	*/
+	private Collection<ComBE.diagram.part.ComBELinkDescriptor> collectAllLinks(View view, Map<EObject, View> domain2NotationMap) {
+		if (!ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID.equals(ComBE.diagram.part.ComBEVisualIDRegistry.getModelID(view))) {
+			return Collections.emptyList();
+		}
+		LinkedList<ComBE.diagram.part.ComBELinkDescriptor> result = new LinkedList<ComBE.diagram.part.ComBELinkDescriptor>();
+		switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view)) {
+		case ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID: {
+			if (!domain2NotationMap.containsKey(view.getElement())) {
+				result.addAll(ComBE.diagram.part.ComBEDiagramUpdater.getSpecification_1000ContainedLinks(view));
+			}
+			if (!domain2NotationMap.containsKey(view.getElement()) || view.getEAnnotation("Shortcut") == null) { //$NON-NLS-1$
+				domain2NotationMap.put(view.getElement(), view);
+			}
+			break;
+		}
+		case ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID: {
+			if (!domain2NotationMap.containsKey(view.getElement())) {
+				result.addAll(ComBE.diagram.part.ComBEDiagramUpdater.getAlternativeBranch_2001ContainedLinks(view));
+			}
+			if (!domain2NotationMap.containsKey(view.getElement()) || view.getEAnnotation("Shortcut") == null) { //$NON-NLS-1$
+				domain2NotationMap.put(view.getElement(), view);
+			}
+			break;
+		}
+		case ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID: {
+			if (!domain2NotationMap.containsKey(view.getElement())) {
+				result.addAll(ComBE.diagram.part.ComBEDiagramUpdater.getParallelBranch_2002ContainedLinks(view));
+			}
+			if (!domain2NotationMap.containsKey(view.getElement()) || view.getEAnnotation("Shortcut") == null) { //$NON-NLS-1$
+				domain2NotationMap.put(view.getElement(), view);
+			}
+			break;
+		}
+		case ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID: {
+			if (!domain2NotationMap.containsKey(view.getElement())) {
+				result.addAll(ComBE.diagram.part.ComBEDiagramUpdater.getAtomicSequence_2003ContainedLinks(view));
+			}
+			if (!domain2NotationMap.containsKey(view.getElement()) || view.getEAnnotation("Shortcut") == null) { //$NON-NLS-1$
+				domain2NotationMap.put(view.getElement(), view);
+			}
+			break;
+		}
+		case ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID: {
+			if (!domain2NotationMap.containsKey(view.getElement())) {
+				result.addAll(ComBE.diagram.part.ComBEDiagramUpdater.getStandardNode_3001ContainedLinks(view));
+			}
+			if (!domain2NotationMap.containsKey(view.getElement()) || view.getEAnnotation("Shortcut") == null) { //$NON-NLS-1$
+				domain2NotationMap.put(view.getElement(), view);
+			}
+			break;
+		}
+		case ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID: {
+			if (!domain2NotationMap.containsKey(view.getElement())) {
+				result.addAll(ComBE.diagram.part.ComBEDiagramUpdater.getEmptyNode_3002ContainedLinks(view));
+			}
+			if (!domain2NotationMap.containsKey(view.getElement()) || view.getEAnnotation("Shortcut") == null) { //$NON-NLS-1$
+				domain2NotationMap.put(view.getElement(), view);
+			}
+			break;
+		}
+		case ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID: {
+			if (!domain2NotationMap.containsKey(view.getElement())) {
+				result.addAll(ComBE.diagram.part.ComBEDiagramUpdater.getStandardNode_3003ContainedLinks(view));
+			}
+			if (!domain2NotationMap.containsKey(view.getElement()) || view.getEAnnotation("Shortcut") == null) { //$NON-NLS-1$
+				domain2NotationMap.put(view.getElement(), view);
+			}
+			break;
+		}
+		case ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID: {
+			if (!domain2NotationMap.containsKey(view.getElement())) {
+				result.addAll(ComBE.diagram.part.ComBEDiagramUpdater.getEmptyNode_3004ContainedLinks(view));
+			}
+			if (!domain2NotationMap.containsKey(view.getElement()) || view.getEAnnotation("Shortcut") == null) { //$NON-NLS-1$
+				domain2NotationMap.put(view.getElement(), view);
+			}
+			break;
+		}
+		case ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID: {
+			if (!domain2NotationMap.containsKey(view.getElement())) {
+				result.addAll(ComBE.diagram.part.ComBEDiagramUpdater.getStandardNode_3005ContainedLinks(view));
+			}
+			if (!domain2NotationMap.containsKey(view.getElement()) || view.getEAnnotation("Shortcut") == null) { //$NON-NLS-1$
+				domain2NotationMap.put(view.getElement(), view);
+			}
+			break;
+		}
+		case ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID: {
+			if (!domain2NotationMap.containsKey(view.getElement())) {
+				result.addAll(ComBE.diagram.part.ComBEDiagramUpdater.getEmptyNode_3006ContainedLinks(view));
+			}
+			if (!domain2NotationMap.containsKey(view.getElement()) || view.getEAnnotation("Shortcut") == null) { //$NON-NLS-1$
+				domain2NotationMap.put(view.getElement(), view);
+			}
+			break;
+		}
+		}
+		for (Iterator children = view.getChildren().iterator(); children.hasNext();) {
+			result.addAll(collectAllLinks((View) children.next(), domain2NotationMap));
+		}
+		for (Iterator edges = view.getSourceEdges().iterator(); edges.hasNext();) {
+			result.addAll(collectAllLinks((View) edges.next(), domain2NotationMap));
+		}
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	private Collection<IAdaptable> createConnections(Collection<ComBE.diagram.part.ComBELinkDescriptor> linkDescriptors, Map<EObject, View> domain2NotationMap) {
+		LinkedList<IAdaptable> adapters = new LinkedList<IAdaptable>();
+		for (ComBE.diagram.part.ComBELinkDescriptor nextLinkDescriptor : linkDescriptors) {
+			EditPart sourceEditPart = getEditPart(nextLinkDescriptor.getSource(), domain2NotationMap);
+			EditPart targetEditPart = getEditPart(nextLinkDescriptor.getDestination(), domain2NotationMap);
+			if (sourceEditPart == null || targetEditPart == null) {
+				continue;
+			}
+			CreateConnectionViewRequest.ConnectionViewDescriptor descriptor = new CreateConnectionViewRequest.ConnectionViewDescriptor(nextLinkDescriptor.getSemanticAdapter(), ComBE.diagram.part.ComBEVisualIDRegistry.getType(nextLinkDescriptor.getVisualID()), ViewUtil.APPEND, false, ((IGraphicalEditPart) getHost()).getDiagramPreferencesHint());
+			CreateConnectionViewRequest ccr = new CreateConnectionViewRequest(descriptor);
+			ccr.setType(RequestConstants.REQ_CONNECTION_START);
+			ccr.setSourceEditPart(sourceEditPart);
+			sourceEditPart.getCommand(ccr);
+			ccr.setTargetEditPart(targetEditPart);
+			ccr.setType(RequestConstants.REQ_CONNECTION_END);
+			Command cmd = targetEditPart.getCommand(ccr);
+			if (cmd != null && cmd.canExecute()) {
+				executeCommand(cmd);
+				IAdaptable viewAdapter = (IAdaptable) ccr.getNewObject();
+				if (viewAdapter != null) {
+					adapters.add(viewAdapter);
+				}
+			}
+		}
+		return adapters;
+	}
+
+	/**
+	* @generated
+	*/
+	private EditPart getEditPart(EObject domainModelElement, Map<EObject, View> domain2NotationMap) {
+		View view = (View) domain2NotationMap.get(domainModelElement);
+		if (view != null) {
+			return (EditPart) getHost().getViewer().getEditPartRegistry().get(view);
+		}
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	private Diagram getDiagram() {
+		return ((View) getHost().getModel()).getDiagram();
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/SpecificationItemSemanticEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/SpecificationItemSemanticEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,60 @@
+package ComBE.diagram.edit.policies;
+
+import org.eclipse.emf.transaction.TransactionalEditingDomain;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.emf.commands.core.commands.DuplicateEObjectsCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
+import org.eclipse.gmf.runtime.emf.type.core.requests.DuplicateElementsRequest;
+
+/**
+* @generated
+*/
+public class SpecificationItemSemanticEditPolicy extends ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy {
+
+	/**
+	* @generated
+	*/
+	public SpecificationItemSemanticEditPolicy() {
+		super(ComBE.diagram.providers.ComBEElementTypes.Specification_1000);
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getCreateCommand(CreateElementRequest req) {
+		if (ComBE.diagram.providers.ComBEElementTypes.AlternativeBranch_2001 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.AlternativeBranchCreateCommand(req));
+		}
+		if (ComBE.diagram.providers.ComBEElementTypes.ParallelBranch_2002 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.ParallelBranchCreateCommand(req));
+		}
+		if (ComBE.diagram.providers.ComBEElementTypes.AtomicSequence_2003 == req.getElementType()) {
+			return getGEFWrapper(new ComBE.diagram.edit.commands.AtomicSequenceCreateCommand(req));
+		}
+		return super.getCreateCommand(req);
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getDuplicateCommand(DuplicateElementsRequest req) {
+		TransactionalEditingDomain editingDomain = ((IGraphicalEditPart) getHost()).getEditingDomain();
+		return getGEFWrapper(new DuplicateAnythingCommand(editingDomain, req));
+	}
+
+	/**
+	* @generated
+	*/
+	private static class DuplicateAnythingCommand extends DuplicateEObjectsCommand {
+
+		/**
+		* @generated
+		*/
+		public DuplicateAnythingCommand(TransactionalEditingDomain editingDomain, DuplicateElementsRequest req) {
+			super(editingDomain, req.getLabel(), req.getElementsToBeDuplicated(), req.getAllDuplicatedElementsMap());
+		}
+
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNode2CanonicalEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNode2CanonicalEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,140 @@
+package ComBE.diagram.edit.policies;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
+import org.eclipse.gmf.runtime.diagram.ui.commands.DeferredLayoutCommand;
+import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
+import org.eclipse.gmf.runtime.diagram.ui.commands.SetViewMutabilityCommand;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.notation.Node;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class StandardNode2CanonicalEditPolicy extends CanonicalEditPolicy {
+
+	/**
+	* @generated
+	*/
+	protected void refreshOnActivate() {
+		// Need to activate editpart children before invoking the canonical refresh for EditParts to add event listeners
+		List<?> c = getHost().getChildren();
+		for (int i = 0; i < c.size(); i++) {
+			((EditPart) c.get(i)).activate();
+		}
+		super.refreshOnActivate();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getSemanticChildrenList() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isOrphaned(Collection<EObject> semanticChildren, final View view) {
+		return isMyDiagramElement(view) && !semanticChildren.contains(view.getElement());
+	}
+
+	/**
+	* @generated
+	*/
+	private boolean isMyDiagramElement(View view) {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshSemantic() {
+		if (resolveSemanticElement() == null) {
+			return;
+		}
+		LinkedList<IAdaptable> createdViews = new LinkedList<IAdaptable>();
+		List<ComBE.diagram.part.ComBENodeDescriptor> childDescriptors = ComBE.diagram.part.ComBEDiagramUpdater.getStandardNode_3003SemanticChildren((View) getHost().getModel());
+		LinkedList<View> orphaned = new LinkedList<View>();
+		// we care to check only views we recognize as ours
+		LinkedList<View> knownViewChildren = new LinkedList<View>();
+		for (View v : getViewChildren()) {
+			if (isMyDiagramElement(v)) {
+				knownViewChildren.add(v);
+			}
+		}
+		// alternative to #cleanCanonicalSemanticChildren(getViewChildren(), semanticChildren)
+		//
+		// iteration happens over list of desired semantic elements, trying to find best matching View, while original CEP
+		// iterates views, potentially losing view (size/bounds) information - i.e. if there are few views to reference same EObject, only last one 
+		// to answer isOrphaned == true will be used for the domain element representation, see #cleanCanonicalSemanticChildren()
+		for (Iterator<ComBE.diagram.part.ComBENodeDescriptor> descriptorsIterator = childDescriptors.iterator(); descriptorsIterator.hasNext();) {
+			ComBE.diagram.part.ComBENodeDescriptor next = descriptorsIterator.next();
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			LinkedList<View> perfectMatch = new LinkedList<View>(); // both semanticElement and hint match that of NodeDescriptor
+			for (View childView : getViewChildren()) {
+				EObject semanticElement = childView.getElement();
+				if (next.getModelElement().equals(semanticElement)) {
+					if (hint.equals(childView.getType())) {
+						perfectMatch.add(childView);
+						// actually, can stop iteration over view children here, but
+						// may want to use not the first view but last one as a 'real' match (the way original CEP does
+						// with its trick with viewToSemanticMap inside #cleanCanonicalSemanticChildren
+					}
+				}
+			}
+			if (perfectMatch.size() > 0) {
+				descriptorsIterator.remove(); // precise match found no need to create anything for the NodeDescriptor
+				// use only one view (first or last?), keep rest as orphaned for further consideration
+				knownViewChildren.remove(perfectMatch.getFirst());
+			}
+		}
+		// those left in knownViewChildren are subject to removal - they are our diagram elements we didn't find match to,
+		// or those we have potential matches to, and thus need to be recreated, preserving size/location information.
+		orphaned.addAll(knownViewChildren);
+		//
+		ArrayList<CreateViewRequest.ViewDescriptor> viewDescriptors = new ArrayList<CreateViewRequest.ViewDescriptor>(childDescriptors.size());
+		for (ComBE.diagram.part.ComBENodeDescriptor next : childDescriptors) {
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			IAdaptable elementAdapter = new CanonicalElementAdapter(next.getModelElement(), hint);
+			CreateViewRequest.ViewDescriptor descriptor = new CreateViewRequest.ViewDescriptor(elementAdapter, Node.class, hint, ViewUtil.APPEND, false, host().getDiagramPreferencesHint());
+			viewDescriptors.add(descriptor);
+		}
+
+		boolean changed = deleteViews(orphaned.iterator());
+		//
+		CreateViewRequest request = getCreateViewRequest(viewDescriptors);
+		Command cmd = getCreateViewCommand(request);
+		if (cmd != null && cmd.canExecute()) {
+			SetViewMutabilityCommand.makeMutable(new EObjectAdapter(host().getNotationView())).execute();
+			executeCommand(cmd);
+			@SuppressWarnings("unchecked")
+			List<IAdaptable> nl = (List<IAdaptable>) request.getNewObject();
+			createdViews.addAll(nl);
+		}
+		if (changed || createdViews.size() > 0) {
+			postProcessRefreshSemantic(createdViews);
+		}
+		if (createdViews.size() > 1) {
+			// perform a layout of the container
+			DeferredLayoutCommand layoutCmd = new DeferredLayoutCommand(host().getEditingDomain(), createdViews, host());
+			executeCommand(new ICommandProxy(layoutCmd));
+		}
+
+		makeViewsImmutable(createdViews);
+	}
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNode2ItemSemanticEditPolicy.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNode2ItemSemanticEditPolicy.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNode2ItemSemanticEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,7 +1,12 @@
 package ComBE.diagram.edit.policies;
 
+import org.eclipse.emf.ecore.EAnnotation;
 import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand;
+import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
+import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand;
 import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest;
+import org.eclipse.gmf.runtime.notation.View;
 
 /**
  * @generated
@@ -9,6 +14,13 @@
 public class StandardNode2ItemSemanticEditPolicy extends ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy {
 
 	/**
+	* @generated
+	*/
+	public StandardNode2ItemSemanticEditPolicy() {
+		super(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3003);
+	}
+
+	/**
 	* @generated NOT
 	*/
 	protected Command getDestroyElementCommand(DestroyElementRequest req) {

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNode3CanonicalEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNode3CanonicalEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,140 @@
+package ComBE.diagram.edit.policies;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
+import org.eclipse.gmf.runtime.diagram.ui.commands.DeferredLayoutCommand;
+import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
+import org.eclipse.gmf.runtime.diagram.ui.commands.SetViewMutabilityCommand;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.notation.Node;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class StandardNode3CanonicalEditPolicy extends CanonicalEditPolicy {
+
+	/**
+	* @generated
+	*/
+	protected void refreshOnActivate() {
+		// Need to activate editpart children before invoking the canonical refresh for EditParts to add event listeners
+		List<?> c = getHost().getChildren();
+		for (int i = 0; i < c.size(); i++) {
+			((EditPart) c.get(i)).activate();
+		}
+		super.refreshOnActivate();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getSemanticChildrenList() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isOrphaned(Collection<EObject> semanticChildren, final View view) {
+		return isMyDiagramElement(view) && !semanticChildren.contains(view.getElement());
+	}
+
+	/**
+	* @generated
+	*/
+	private boolean isMyDiagramElement(View view) {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshSemantic() {
+		if (resolveSemanticElement() == null) {
+			return;
+		}
+		LinkedList<IAdaptable> createdViews = new LinkedList<IAdaptable>();
+		List<ComBE.diagram.part.ComBENodeDescriptor> childDescriptors = ComBE.diagram.part.ComBEDiagramUpdater.getStandardNode_3005SemanticChildren((View) getHost().getModel());
+		LinkedList<View> orphaned = new LinkedList<View>();
+		// we care to check only views we recognize as ours
+		LinkedList<View> knownViewChildren = new LinkedList<View>();
+		for (View v : getViewChildren()) {
+			if (isMyDiagramElement(v)) {
+				knownViewChildren.add(v);
+			}
+		}
+		// alternative to #cleanCanonicalSemanticChildren(getViewChildren(), semanticChildren)
+		//
+		// iteration happens over list of desired semantic elements, trying to find best matching View, while original CEP
+		// iterates views, potentially losing view (size/bounds) information - i.e. if there are few views to reference same EObject, only last one 
+		// to answer isOrphaned == true will be used for the domain element representation, see #cleanCanonicalSemanticChildren()
+		for (Iterator<ComBE.diagram.part.ComBENodeDescriptor> descriptorsIterator = childDescriptors.iterator(); descriptorsIterator.hasNext();) {
+			ComBE.diagram.part.ComBENodeDescriptor next = descriptorsIterator.next();
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			LinkedList<View> perfectMatch = new LinkedList<View>(); // both semanticElement and hint match that of NodeDescriptor
+			for (View childView : getViewChildren()) {
+				EObject semanticElement = childView.getElement();
+				if (next.getModelElement().equals(semanticElement)) {
+					if (hint.equals(childView.getType())) {
+						perfectMatch.add(childView);
+						// actually, can stop iteration over view children here, but
+						// may want to use not the first view but last one as a 'real' match (the way original CEP does
+						// with its trick with viewToSemanticMap inside #cleanCanonicalSemanticChildren
+					}
+				}
+			}
+			if (perfectMatch.size() > 0) {
+				descriptorsIterator.remove(); // precise match found no need to create anything for the NodeDescriptor
+				// use only one view (first or last?), keep rest as orphaned for further consideration
+				knownViewChildren.remove(perfectMatch.getFirst());
+			}
+		}
+		// those left in knownViewChildren are subject to removal - they are our diagram elements we didn't find match to,
+		// or those we have potential matches to, and thus need to be recreated, preserving size/location information.
+		orphaned.addAll(knownViewChildren);
+		//
+		ArrayList<CreateViewRequest.ViewDescriptor> viewDescriptors = new ArrayList<CreateViewRequest.ViewDescriptor>(childDescriptors.size());
+		for (ComBE.diagram.part.ComBENodeDescriptor next : childDescriptors) {
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			IAdaptable elementAdapter = new CanonicalElementAdapter(next.getModelElement(), hint);
+			CreateViewRequest.ViewDescriptor descriptor = new CreateViewRequest.ViewDescriptor(elementAdapter, Node.class, hint, ViewUtil.APPEND, false, host().getDiagramPreferencesHint());
+			viewDescriptors.add(descriptor);
+		}
+
+		boolean changed = deleteViews(orphaned.iterator());
+		//
+		CreateViewRequest request = getCreateViewRequest(viewDescriptors);
+		Command cmd = getCreateViewCommand(request);
+		if (cmd != null && cmd.canExecute()) {
+			SetViewMutabilityCommand.makeMutable(new EObjectAdapter(host().getNotationView())).execute();
+			executeCommand(cmd);
+			@SuppressWarnings("unchecked")
+			List<IAdaptable> nl = (List<IAdaptable>) request.getNewObject();
+			createdViews.addAll(nl);
+		}
+		if (changed || createdViews.size() > 0) {
+			postProcessRefreshSemantic(createdViews);
+		}
+		if (createdViews.size() > 1) {
+			// perform a layout of the container
+			DeferredLayoutCommand layoutCmd = new DeferredLayoutCommand(host().getEditingDomain(), createdViews, host());
+			executeCommand(new ICommandProxy(layoutCmd));
+		}
+
+		makeViewsImmutable(createdViews);
+	}
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNode3ItemSemanticEditPolicy.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNode3ItemSemanticEditPolicy.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNode3ItemSemanticEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,7 +1,12 @@
 package ComBE.diagram.edit.policies;
 
+import org.eclipse.emf.ecore.EAnnotation;
 import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand;
+import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
+import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand;
 import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest;
+import org.eclipse.gmf.runtime.notation.View;
 
 /**
  * @generated
@@ -9,6 +14,13 @@
 public class StandardNode3ItemSemanticEditPolicy extends ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy {
 
 	/**
+	* @generated
+	*/
+	public StandardNode3ItemSemanticEditPolicy() {
+		super(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3005);
+	}
+
+	/**
 	* @generated NOT
 	*/
 	protected Command getDestroyElementCommand(DestroyElementRequest req) {

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNodeCanonicalEditPolicy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNodeCanonicalEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,140 @@
+package ComBE.diagram.edit.policies;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
+import org.eclipse.gmf.runtime.diagram.ui.commands.DeferredLayoutCommand;
+import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
+import org.eclipse.gmf.runtime.diagram.ui.commands.SetViewMutabilityCommand;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalEditPolicy;
+import org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.notation.Node;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class StandardNodeCanonicalEditPolicy extends CanonicalEditPolicy {
+
+	/**
+	* @generated
+	*/
+	protected void refreshOnActivate() {
+		// Need to activate editpart children before invoking the canonical refresh for EditParts to add event listeners
+		List<?> c = getHost().getChildren();
+		for (int i = 0; i < c.size(); i++) {
+			((EditPart) c.get(i)).activate();
+		}
+		super.refreshOnActivate();
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected List getSemanticChildrenList() {
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isOrphaned(Collection<EObject> semanticChildren, final View view) {
+		return isMyDiagramElement(view) && !semanticChildren.contains(view.getElement());
+	}
+
+	/**
+	* @generated
+	*/
+	private boolean isMyDiagramElement(View view) {
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void refreshSemantic() {
+		if (resolveSemanticElement() == null) {
+			return;
+		}
+		LinkedList<IAdaptable> createdViews = new LinkedList<IAdaptable>();
+		List<ComBE.diagram.part.ComBENodeDescriptor> childDescriptors = ComBE.diagram.part.ComBEDiagramUpdater.getStandardNode_3001SemanticChildren((View) getHost().getModel());
+		LinkedList<View> orphaned = new LinkedList<View>();
+		// we care to check only views we recognize as ours
+		LinkedList<View> knownViewChildren = new LinkedList<View>();
+		for (View v : getViewChildren()) {
+			if (isMyDiagramElement(v)) {
+				knownViewChildren.add(v);
+			}
+		}
+		// alternative to #cleanCanonicalSemanticChildren(getViewChildren(), semanticChildren)
+		//
+		// iteration happens over list of desired semantic elements, trying to find best matching View, while original CEP
+		// iterates views, potentially losing view (size/bounds) information - i.e. if there are few views to reference same EObject, only last one 
+		// to answer isOrphaned == true will be used for the domain element representation, see #cleanCanonicalSemanticChildren()
+		for (Iterator<ComBE.diagram.part.ComBENodeDescriptor> descriptorsIterator = childDescriptors.iterator(); descriptorsIterator.hasNext();) {
+			ComBE.diagram.part.ComBENodeDescriptor next = descriptorsIterator.next();
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			LinkedList<View> perfectMatch = new LinkedList<View>(); // both semanticElement and hint match that of NodeDescriptor
+			for (View childView : getViewChildren()) {
+				EObject semanticElement = childView.getElement();
+				if (next.getModelElement().equals(semanticElement)) {
+					if (hint.equals(childView.getType())) {
+						perfectMatch.add(childView);
+						// actually, can stop iteration over view children here, but
+						// may want to use not the first view but last one as a 'real' match (the way original CEP does
+						// with its trick with viewToSemanticMap inside #cleanCanonicalSemanticChildren
+					}
+				}
+			}
+			if (perfectMatch.size() > 0) {
+				descriptorsIterator.remove(); // precise match found no need to create anything for the NodeDescriptor
+				// use only one view (first or last?), keep rest as orphaned for further consideration
+				knownViewChildren.remove(perfectMatch.getFirst());
+			}
+		}
+		// those left in knownViewChildren are subject to removal - they are our diagram elements we didn't find match to,
+		// or those we have potential matches to, and thus need to be recreated, preserving size/location information.
+		orphaned.addAll(knownViewChildren);
+		//
+		ArrayList<CreateViewRequest.ViewDescriptor> viewDescriptors = new ArrayList<CreateViewRequest.ViewDescriptor>(childDescriptors.size());
+		for (ComBE.diagram.part.ComBENodeDescriptor next : childDescriptors) {
+			String hint = ComBE.diagram.part.ComBEVisualIDRegistry.getType(next.getVisualID());
+			IAdaptable elementAdapter = new CanonicalElementAdapter(next.getModelElement(), hint);
+			CreateViewRequest.ViewDescriptor descriptor = new CreateViewRequest.ViewDescriptor(elementAdapter, Node.class, hint, ViewUtil.APPEND, false, host().getDiagramPreferencesHint());
+			viewDescriptors.add(descriptor);
+		}
+
+		boolean changed = deleteViews(orphaned.iterator());
+		//
+		CreateViewRequest request = getCreateViewRequest(viewDescriptors);
+		Command cmd = getCreateViewCommand(request);
+		if (cmd != null && cmd.canExecute()) {
+			SetViewMutabilityCommand.makeMutable(new EObjectAdapter(host().getNotationView())).execute();
+			executeCommand(cmd);
+			@SuppressWarnings("unchecked")
+			List<IAdaptable> nl = (List<IAdaptable>) request.getNewObject();
+			createdViews.addAll(nl);
+		}
+		if (changed || createdViews.size() > 0) {
+			postProcessRefreshSemantic(createdViews);
+		}
+		if (createdViews.size() > 1) {
+			// perform a layout of the container
+			DeferredLayoutCommand layoutCmd = new DeferredLayoutCommand(host().getEditingDomain(), createdViews, host());
+			executeCommand(new ICommandProxy(layoutCmd));
+		}
+
+		makeViewsImmutable(createdViews);
+	}
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNodeItemSemanticEditPolicy.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNodeItemSemanticEditPolicy.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/edit/policies/StandardNodeItemSemanticEditPolicy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,7 +1,12 @@
 package ComBE.diagram.edit.policies;
 
+import org.eclipse.emf.ecore.EAnnotation;
 import org.eclipse.gef.commands.Command;
+import org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand;
+import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
+import org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand;
 import org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest;
+import org.eclipse.gmf.runtime.notation.View;
 
 /**
  * @generated
@@ -9,6 +14,13 @@
 public class StandardNodeItemSemanticEditPolicy extends ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy {
 
 	/**
+	* @generated
+	*/
+	public StandardNodeItemSemanticEditPolicy() {
+		super(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3001);
+	}
+
+	/**
 	* @generated NOT
 	*/
 	protected Command getDestroyElementCommand(DestroyElementRequest req) {

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/expressions/ComBEAbstractExpression.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/expressions/ComBEAbstractExpression.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,149 @@
+package ComBE.diagram.expressions;
+
+import java.math.BigDecimal;
+import java.math.BigInteger;
+import java.util.Collections;
+import java.util.Map;
+
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.emf.ecore.EClassifier;
+import org.eclipse.emf.ecore.EDataType;
+import org.eclipse.emf.ecore.EEnum;
+import org.eclipse.emf.ecore.EEnumLiteral;
+import org.eclipse.emf.ecore.util.EcoreUtil;
+
+/**
+ * @generated
+ */
+public abstract class ComBEAbstractExpression {
+
+	/**
+	* @generated
+	*/
+	private IStatus status = Status.OK_STATUS;
+
+	/**
+	* @generated
+	*/
+	protected void setStatus(int severity, String message, Throwable throwable) {
+		String pluginID = ComBE.diagram.part.ComBEDiagramEditorPlugin.ID;
+		this.status = new Status(severity, pluginID, -1, (message != null) ? message : "", throwable); //$NON-NLS-1$
+		if (!this.status.isOK()) {
+			ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Expression problem:" + message + "body:" + body(), throwable); //$NON-NLS-1$ //$NON-NLS-2$
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public IStatus getStatus() {
+		return status;
+	}
+
+	/**
+	* @generated
+	*/
+	private final String myBody;
+
+	/**
+	* @generated
+	*/
+	public String body() {
+		return myBody;
+	}
+
+	/**
+	* @generated
+	*/
+	private final EClassifier myContext;
+
+	/**
+	* @generated
+	*/
+	public EClassifier context() {
+		return myContext;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComBEAbstractExpression(String body, EClassifier context) {
+		myBody = body;
+		myContext = context;
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	protected abstract Object doEvaluate(Object context, Map env);
+
+	/**
+	* @generated
+	*/
+	public Object evaluate(Object context) {
+		return evaluate(context, Collections.EMPTY_MAP);
+	}
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings("rawtypes")
+	public Object evaluate(Object context, Map env) {
+		if (context().isInstance(context)) {
+			try {
+				return doEvaluate(context, env);
+			} catch (Exception e) {
+				ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Expression evaluation failure: " + body(), e); //$NON-NLS-1$
+			}
+		}
+		return null;
+	}
+
+	/**
+	* Expression may return number value which is not directly compatible with feature type (e.g. Double when Integer is expected), or EEnumLiteral meta-object when literal instance is expected
+	* @generated
+	*/
+	public static Object performCast(Object value, EDataType targetType) {
+		if (targetType instanceof EEnum) {
+			if (value instanceof EEnumLiteral) {
+				EEnumLiteral literal = (EEnumLiteral) value;
+				return (literal.getInstance() != null) ? literal.getInstance() : literal;
+			}
+		}
+		if (false == value instanceof Number || targetType == null || targetType.getInstanceClass() == null) {
+			return value;
+		}
+		Class<?> targetClass = targetType.getInstanceClass();
+		Number num = (Number) value;
+		Class<?> valClass = value.getClass();
+		Class<?> targetWrapperClass = targetClass;
+		if (targetClass.isPrimitive()) {
+			targetWrapperClass = EcoreUtil.wrapperClassFor(targetClass);
+		}
+		if (valClass.equals(targetWrapperClass)) {
+			return value;
+		}
+		if (Number.class.isAssignableFrom(targetWrapperClass)) {
+			if (targetWrapperClass.equals(Byte.class))
+				return new Byte(num.byteValue());
+			if (targetWrapperClass.equals(Integer.class))
+				return new Integer(num.intValue());
+			if (targetWrapperClass.equals(Short.class))
+				return new Short(num.shortValue());
+			if (targetWrapperClass.equals(Long.class))
+				return new Long(num.longValue());
+			if (targetWrapperClass.equals(BigInteger.class))
+				return BigInteger.valueOf(num.longValue());
+			if (targetWrapperClass.equals(Float.class))
+				return new Float(num.floatValue());
+			if (targetWrapperClass.equals(Double.class))
+				return new Double(num.doubleValue());
+			if (targetWrapperClass.equals(BigDecimal.class))
+				return new BigDecimal(num.doubleValue());
+		}
+		return value;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/expressions/ComBEOCLFactory.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/expressions/ComBEOCLFactory.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,156 @@
+package ComBE.diagram.expressions;
+
+import java.util.Collections;
+import java.util.Map;
+
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.emf.ecore.EClassifier;
+import org.eclipse.emf.ecore.EParameter;
+import org.eclipse.emf.ecore.EcorePackage;
+import org.eclipse.ocl.Environment;
+import org.eclipse.ocl.EvaluationEnvironment;
+import org.eclipse.ocl.ParserException;
+import org.eclipse.ocl.ecore.EcoreFactory;
+import org.eclipse.ocl.ecore.OCLExpression;
+import org.eclipse.ocl.ecore.Variable;
+import org.eclipse.ocl.ecore.OCL.Helper;
+import org.eclipse.ocl.options.ParsingOptions;
+
+/**
+ * @generated
+ */
+public class ComBEOCLFactory {
+
+	/**
+	* @generated
+	*/
+	private final ComBE.diagram.expressions.ComBEAbstractExpression[] expressions;
+
+	/**
+	* @generated
+	*/
+	protected ComBEOCLFactory() {
+		this.expressions = new ComBE.diagram.expressions.ComBEAbstractExpression[9];
+	}
+
+	/**
+	* @generated
+	*/
+	public static ComBE.diagram.expressions.ComBEAbstractExpression getExpression(int index, EClassifier context, Map<String, EClassifier> environment) {
+		ComBEOCLFactory cached = ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getComBEOCLFactory();
+		if (cached == null) {
+			ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().setComBEOCLFactory(cached = new ComBEOCLFactory());
+		}
+		if (index < 0 || index >= cached.expressions.length) {
+			throw new IllegalArgumentException();
+		}
+		if (cached.expressions[index] == null) {
+			final String[] exprBodies = new String[] { "if requirement->isEmpty() then \'\' else requirement.label endif", //$NON-NLS-1$
+					"if component->isEmpty() then \'\' else component.label endif", //$NON-NLS-1$
+					"if behavior->isEmpty() then \'\' else behavior.label endif", //$NON-NLS-1$
+					"if requirement->isEmpty() then \'\' else requirement.label endif", //$NON-NLS-1$
+					"if component->isEmpty() then \'\' else component.label endif", //$NON-NLS-1$
+					"if behavior->isEmpty() then \'\' else behavior.label endif", //$NON-NLS-1$
+					"if requirement->isEmpty() then \'\' else requirement.label endif", //$NON-NLS-1$
+					"if component->isEmpty() then \'\' else component.label endif", //$NON-NLS-1$
+					"if behavior->isEmpty() then \'\' else behavior.label endif", //$NON-NLS-1$
+			};
+			cached.expressions[index] = getExpression(exprBodies[index], context, environment == null ? Collections.<String, EClassifier> emptyMap() : environment);
+		}
+		return cached.expressions[index];
+	}
+
+	/**
+	* This is factory method, callers are responsible to keep reference to the return value if they want to reuse parsed expression
+	* @generated
+	*/
+	public static ComBE.diagram.expressions.ComBEAbstractExpression getExpression(String body, EClassifier context, Map<String, EClassifier> environment) {
+		return new Expression(body, context, environment);
+	}
+
+	/**
+	* This method will become private in the next release
+	* @generated
+	*/
+	public static ComBE.diagram.expressions.ComBEAbstractExpression getExpression(String body, EClassifier context) {
+		return getExpression(body, context, Collections.<String, EClassifier> emptyMap());
+	}
+
+	/**
+	* @generated
+	*/
+	private static class Expression extends ComBE.diagram.expressions.ComBEAbstractExpression {
+
+		/**
+		* @generated
+		*/
+		private final org.eclipse.ocl.ecore.OCL oclInstance;
+
+		/**
+		* @generated
+		*/
+		private OCLExpression oclExpression;
+
+		/**
+		* @generated
+		*/
+		public Expression(String body, EClassifier context, Map<String, EClassifier> environment) {
+			super(body, context);
+			oclInstance = org.eclipse.ocl.ecore.OCL.newInstance();
+			initCustomEnv(oclInstance.getEnvironment(), environment);
+			Helper oclHelper = oclInstance.createOCLHelper();
+			oclHelper.setContext(context());
+			try {
+				oclExpression = oclHelper.createQuery(body());
+				setStatus(IStatus.OK, null, null);
+			} catch (ParserException e) {
+				setStatus(IStatus.ERROR, e.getMessage(), e);
+			}
+		}
+
+		/**
+		* @generated
+		*/
+		@SuppressWarnings("rawtypes")
+		protected Object doEvaluate(Object context, Map env) {
+			if (oclExpression == null) {
+				return null;
+			}
+			// on the first call, both evalEnvironment and extentMap are clear, for later we have finally, below.
+			EvaluationEnvironment<?, ?, ?, ?, ?> evalEnv = oclInstance.getEvaluationEnvironment();
+			// initialize environment
+			for (Object nextKey : env.keySet()) {
+				evalEnv.replace((String) nextKey, env.get(nextKey));
+			}
+			try {
+				Object result = oclInstance.evaluate(context, oclExpression);
+				return oclInstance.isInvalid(result) ? null : result;
+			} finally {
+				evalEnv.clear();
+				oclInstance.setExtentMap(null); // clear allInstances cache, and get the oclInstance ready for the next call
+			}
+		}
+
+		/**
+		* @generated
+		*/
+		private static void initCustomEnv(Environment<?, EClassifier, ?, ?, ?, EParameter, ?, ?, ?, ?, ?, ?> ecoreEnv, Map<String, EClassifier> environment) {
+			// Use EObject as implicit root class for any object, to allow eContainer() and other EObject operations from OCL expressions
+			ParsingOptions.setOption(ecoreEnv, ParsingOptions.implicitRootClass(ecoreEnv), EcorePackage.eINSTANCE.getEObject());
+			for (String varName : environment.keySet()) {
+				EClassifier varType = environment.get(varName);
+				ecoreEnv.addElement(varName, createVar(ecoreEnv, varName, varType), false);
+			}
+		}
+
+		/**
+		* @generated
+		*/
+		private static Variable createVar(Environment<?, EClassifier, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?> ecoreEnv, String name, EClassifier type) {
+			Variable var = EcoreFactory.eINSTANCE.createVariable();
+			var.setName(name);
+			var.setType(ecoreEnv.getUMLReflection().getOCLType(type));
+			return var;
+		}
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBEAbstractNavigatorItem.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBEAbstractNavigatorItem.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,57 @@
+package ComBE.diagram.navigator;
+
+import org.eclipse.core.runtime.IAdapterFactory;
+import org.eclipse.core.runtime.Platform;
+import org.eclipse.core.runtime.PlatformObject;
+import org.eclipse.ui.views.properties.tabbed.ITabbedPropertySheetPageContributor;
+
+/**
+* @generated
+*/
+public abstract class ComBEAbstractNavigatorItem extends PlatformObject {
+
+	/**
+	* @generated
+	*/
+	static {
+		final Class[] supportedTypes = new Class[] { ITabbedPropertySheetPageContributor.class };
+		final ITabbedPropertySheetPageContributor propertySheetPageContributor = new ITabbedPropertySheetPageContributor() {
+			public String getContributorId() {
+				return "org.behaviorengineering.combe.graphical.diagram"; //$NON-NLS-1$
+			}
+		};
+		Platform.getAdapterManager().registerAdapters(new IAdapterFactory() {
+
+			public Object getAdapter(Object adaptableObject, Class adapterType) {
+				if (adaptableObject instanceof ComBE.diagram.navigator.ComBEAbstractNavigatorItem && adapterType == ITabbedPropertySheetPageContributor.class) {
+					return propertySheetPageContributor;
+				}
+				return null;
+			}
+
+			public Class[] getAdapterList() {
+				return supportedTypes;
+			}
+		}, ComBE.diagram.navigator.ComBEAbstractNavigatorItem.class);
+	}
+
+	/**
+	* @generated
+	*/
+	private Object myParent;
+
+	/**
+	* @generated
+	*/
+	protected ComBEAbstractNavigatorItem(Object parent) {
+		myParent = parent;
+	}
+
+	/**
+	* @generated
+	*/
+	public Object getParent() {
+		return myParent;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBEDomainNavigatorContentProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBEDomainNavigatorContentProvider.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,213 @@
+package ComBE.diagram.navigator;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.HashMap;
+
+import org.eclipse.core.resources.IFile;
+import org.eclipse.emf.common.util.URI;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain;
+import org.eclipse.emf.edit.ui.provider.AdapterFactoryContentProvider;
+import org.eclipse.emf.transaction.TransactionalEditingDomain;
+import org.eclipse.emf.workspace.util.WorkspaceSynchronizer;
+import org.eclipse.gmf.runtime.emf.core.GMFEditingDomainFactory;
+import org.eclipse.jface.viewers.Viewer;
+import org.eclipse.ui.IMemento;
+import org.eclipse.ui.navigator.ICommonContentExtensionSite;
+import org.eclipse.ui.navigator.ICommonContentProvider;
+
+/**
+* @generated
+*/
+public class ComBEDomainNavigatorContentProvider implements ICommonContentProvider {
+
+	/**
+	* @generated
+	*/
+	private AdapterFactoryContentProvider myAdapterFctoryContentProvier;
+
+	/**
+	* @generated
+	*/
+	private static final Object[] EMPTY_ARRAY = new Object[0];
+
+	/**
+	* @generated
+	*/
+	private Viewer myViewer;
+
+	/**
+	* @generated
+	*/
+	private AdapterFactoryEditingDomain myEditingDomain;
+
+	/**
+	* @generated
+	*/
+	private WorkspaceSynchronizer myWorkspaceSynchronizer;
+
+	/**
+	* @generated
+	*/
+	private Runnable myViewerRefreshRunnable;
+
+	/**
+	* @generated
+	*/
+	public ComBEDomainNavigatorContentProvider() {
+		myAdapterFctoryContentProvier = new AdapterFactoryContentProvider(ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getItemProvidersAdapterFactory());
+		TransactionalEditingDomain editingDomain = GMFEditingDomainFactory.INSTANCE.createEditingDomain();
+		myEditingDomain = (AdapterFactoryEditingDomain) editingDomain;
+		myEditingDomain.setResourceToReadOnlyMap(new HashMap() {
+			public Object get(Object key) {
+				if (!containsKey(key)) {
+					put(key, Boolean.TRUE);
+				}
+				return super.get(key);
+			}
+		});
+		myViewerRefreshRunnable = new Runnable() {
+			public void run() {
+				if (myViewer != null) {
+					myViewer.refresh();
+				}
+			}
+		};
+		myWorkspaceSynchronizer = new WorkspaceSynchronizer(editingDomain, new WorkspaceSynchronizer.Delegate() {
+			public void dispose() {
+			}
+
+			public boolean handleResourceChanged(final Resource resource) {
+				unloadAllResources();
+				asyncRefresh();
+				return true;
+			}
+
+			public boolean handleResourceDeleted(Resource resource) {
+				unloadAllResources();
+				asyncRefresh();
+				return true;
+			}
+
+			public boolean handleResourceMoved(Resource resource, final URI newURI) {
+				unloadAllResources();
+				asyncRefresh();
+				return true;
+			}
+		});
+	}
+
+	/**
+	* @generated
+	*/
+	public void dispose() {
+		myWorkspaceSynchronizer.dispose();
+		myWorkspaceSynchronizer = null;
+		myViewerRefreshRunnable = null;
+		myViewer = null;
+		unloadAllResources();
+		((TransactionalEditingDomain) myEditingDomain).dispose();
+		myEditingDomain = null;
+	}
+
+	/**
+	* @generated
+	*/
+	public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {
+		myViewer = viewer;
+	}
+
+	/**
+	* @generated
+	*/
+	void unloadAllResources() {
+		for (Resource nextResource : myEditingDomain.getResourceSet().getResources()) {
+			nextResource.unload();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	void asyncRefresh() {
+		if (myViewer != null && !myViewer.getControl().isDisposed()) {
+			myViewer.getControl().getDisplay().asyncExec(myViewerRefreshRunnable);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public Object[] getElements(Object inputElement) {
+		return getChildren(inputElement);
+	}
+
+	/**
+	* @generated
+	*/
+	public void restoreState(IMemento aMemento) {
+	}
+
+	/**
+	 * @generated
+	 */
+	public void saveState(IMemento aMemento) {
+	}
+
+	/**
+	* @generated
+	*/
+	public void init(ICommonContentExtensionSite aConfig) {
+	}
+
+	/**
+	* @generated
+	*/
+	public Object[] getChildren(Object parentElement) {
+		if (parentElement instanceof IFile) {
+			IFile file = (IFile) parentElement;
+			URI fileURI = URI.createPlatformResourceURI(file.getFullPath().toString(), true);
+			Resource resource = myEditingDomain.getResourceSet().getResource(fileURI, true);
+			return wrapEObjects(myAdapterFctoryContentProvier.getChildren(resource), parentElement);
+		}
+
+		if (parentElement instanceof ComBE.diagram.navigator.ComBEDomainNavigatorItem) {
+			return wrapEObjects(myAdapterFctoryContentProvier.getChildren(((ComBE.diagram.navigator.ComBEDomainNavigatorItem) parentElement).getEObject()), parentElement);
+		}
+		return EMPTY_ARRAY;
+	}
+
+	/**
+	* @generated
+	*/
+	public Object[] wrapEObjects(Object[] objects, Object parentElement) {
+		Collection result = new ArrayList();
+		for (int i = 0; i < objects.length; i++) {
+			if (objects[i] instanceof EObject) {
+				result.add(new ComBE.diagram.navigator.ComBEDomainNavigatorItem((EObject) objects[i], parentElement, myAdapterFctoryContentProvier));
+			}
+		}
+		return result.toArray();
+	}
+
+	/**
+	* @generated
+	*/
+	public Object getParent(Object element) {
+		if (element instanceof ComBE.diagram.navigator.ComBEAbstractNavigatorItem) {
+			ComBE.diagram.navigator.ComBEAbstractNavigatorItem abstractNavigatorItem = (ComBE.diagram.navigator.ComBEAbstractNavigatorItem) element;
+			return abstractNavigatorItem.getParent();
+		}
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean hasChildren(Object element) {
+		return element instanceof IFile || getChildren(element).length > 0;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBEDomainNavigatorItem.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBEDomainNavigatorItem.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,106 @@
+package ComBE.diagram.navigator;
+
+import org.eclipse.core.runtime.IAdapterFactory;
+import org.eclipse.core.runtime.Platform;
+import org.eclipse.core.runtime.PlatformObject;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.util.EcoreUtil;
+import org.eclipse.ui.views.properties.IPropertySource;
+import org.eclipse.ui.views.properties.IPropertySourceProvider;
+
+/**
+* @generated
+*/
+public class ComBEDomainNavigatorItem extends PlatformObject {
+
+	/**
+	* @generated
+	*/
+	static {
+		final Class[] supportedTypes = new Class[] { EObject.class, IPropertySource.class };
+		Platform.getAdapterManager().registerAdapters(new IAdapterFactory() {
+
+			public Object getAdapter(Object adaptableObject, Class adapterType) {
+				if (adaptableObject instanceof ComBE.diagram.navigator.ComBEDomainNavigatorItem) {
+					ComBE.diagram.navigator.ComBEDomainNavigatorItem domainNavigatorItem = (ComBE.diagram.navigator.ComBEDomainNavigatorItem) adaptableObject;
+					EObject eObject = domainNavigatorItem.getEObject();
+					if (adapterType == EObject.class) {
+						return eObject;
+					}
+					if (adapterType == IPropertySource.class) {
+						return domainNavigatorItem.getPropertySourceProvider().getPropertySource(eObject);
+					}
+				}
+
+				return null;
+			}
+
+			public Class[] getAdapterList() {
+				return supportedTypes;
+			}
+		}, ComBE.diagram.navigator.ComBEDomainNavigatorItem.class);
+	}
+
+	/**
+	* @generated
+	*/
+	private Object myParent;
+
+	/**
+	* @generated
+	*/
+	private EObject myEObject;
+
+	/**
+	* @generated
+	*/
+	private IPropertySourceProvider myPropertySourceProvider;
+
+	/**
+	* @generated
+	*/
+	public ComBEDomainNavigatorItem(EObject eObject, Object parent, IPropertySourceProvider propertySourceProvider) {
+		myParent = parent;
+		myEObject = eObject;
+		myPropertySourceProvider = propertySourceProvider;
+	}
+
+	/**
+	* @generated
+	*/
+	public Object getParent() {
+		return myParent;
+	}
+
+	/**
+	* @generated
+	*/
+	public EObject getEObject() {
+		return myEObject;
+	}
+
+	/**
+	* @generated
+	*/
+	public IPropertySourceProvider getPropertySourceProvider() {
+		return myPropertySourceProvider;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean equals(Object obj) {
+		if (obj instanceof ComBE.diagram.navigator.ComBEDomainNavigatorItem) {
+			return EcoreUtil.getURI(getEObject()).equals(EcoreUtil.getURI(((ComBE.diagram.navigator.ComBEDomainNavigatorItem) obj).getEObject()));
+		}
+		return super.equals(obj);
+	}
+
+	/**
+	* @generated
+	*/
+	public int hashCode() {
+		return EcoreUtil.getURI(getEObject()).hashCode();
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBEDomainNavigatorLabelProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBEDomainNavigatorLabelProvider.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,93 @@
+package ComBE.diagram.navigator;
+
+import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
+import org.eclipse.jface.viewers.ILabelProviderListener;
+import org.eclipse.swt.graphics.Image;
+import org.eclipse.ui.IMemento;
+import org.eclipse.ui.navigator.ICommonContentExtensionSite;
+import org.eclipse.ui.navigator.ICommonLabelProvider;
+
+/**
+* @generated
+*/
+public class ComBEDomainNavigatorLabelProvider implements ICommonLabelProvider {
+
+	/**
+	* @generated
+	*/
+	private AdapterFactoryLabelProvider myAdapterFactoryLabelProvider = new AdapterFactoryLabelProvider(ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getItemProvidersAdapterFactory());
+
+	/**
+	* @generated
+	*/
+	public void init(ICommonContentExtensionSite aConfig) {
+	}
+
+	/**
+	* @generated
+	*/
+	public Image getImage(Object element) {
+		if (element instanceof ComBE.diagram.navigator.ComBEDomainNavigatorItem) {
+			return myAdapterFactoryLabelProvider.getImage(((ComBE.diagram.navigator.ComBEDomainNavigatorItem) element).getEObject());
+		}
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	public String getText(Object element) {
+		if (element instanceof ComBE.diagram.navigator.ComBEDomainNavigatorItem) {
+			return myAdapterFactoryLabelProvider.getText(((ComBE.diagram.navigator.ComBEDomainNavigatorItem) element).getEObject());
+		}
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	public void addListener(ILabelProviderListener listener) {
+		myAdapterFactoryLabelProvider.addListener(listener);
+	}
+
+	/**
+	* @generated
+	*/
+	public void dispose() {
+		myAdapterFactoryLabelProvider.dispose();
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean isLabelProperty(Object element, String property) {
+		return myAdapterFactoryLabelProvider.isLabelProperty(element, property);
+	}
+
+	/**
+	* @generated
+	*/
+	public void removeListener(ILabelProviderListener listener) {
+		myAdapterFactoryLabelProvider.removeListener(listener);
+	}
+
+	/**
+	* @generated
+	*/
+	public void restoreState(IMemento aMemento) {
+	}
+
+	/**
+	 * @generated
+	 */
+	public void saveState(IMemento aMemento) {
+	}
+
+	/**
+	* @generated
+	*/
+	public String getDescription(Object anElement) {
+		return null;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorActionProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorActionProvider.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,163 @@
+package ComBE.diagram.navigator;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.common.ui.URIEditorInput;
+import org.eclipse.emf.common.util.URI;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.emf.ecore.util.EcoreUtil;
+import org.eclipse.emf.workspace.util.WorkspaceSynchronizer;
+import org.eclipse.gmf.runtime.notation.Diagram;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.action.Action;
+import org.eclipse.jface.action.IMenuManager;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.ui.IActionBars;
+import org.eclipse.ui.IEditorInput;
+import org.eclipse.ui.IWorkbenchPage;
+import org.eclipse.ui.PartInitException;
+import org.eclipse.ui.navigator.CommonActionProvider;
+import org.eclipse.ui.navigator.ICommonActionConstants;
+import org.eclipse.ui.navigator.ICommonActionExtensionSite;
+import org.eclipse.ui.navigator.ICommonViewerWorkbenchSite;
+import org.eclipse.ui.part.FileEditorInput;
+
+/**
+* @generated
+*/
+public class ComBENavigatorActionProvider extends CommonActionProvider {
+
+	/**
+	* @generated
+	*/
+	private boolean myContribute;
+
+	/**
+	* @generated
+	*/
+	private OpenDiagramAction myOpenDiagramAction;
+
+	/**
+	* @generated
+	*/
+	public void init(ICommonActionExtensionSite aSite) {
+		super.init(aSite);
+		if (aSite.getViewSite() instanceof ICommonViewerWorkbenchSite) {
+			myContribute = true;
+			makeActions((ICommonViewerWorkbenchSite) aSite.getViewSite());
+		} else {
+			myContribute = false;
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private void makeActions(ICommonViewerWorkbenchSite viewerSite) {
+		myOpenDiagramAction = new OpenDiagramAction(viewerSite);
+	}
+
+	/**
+	* @generated
+	*/
+	public void fillActionBars(IActionBars actionBars) {
+		if (!myContribute) {
+			return;
+		}
+		IStructuredSelection selection = (IStructuredSelection) getContext().getSelection();
+		myOpenDiagramAction.selectionChanged(selection);
+		if (myOpenDiagramAction.isEnabled()) {
+			actionBars.setGlobalActionHandler(ICommonActionConstants.OPEN, myOpenDiagramAction);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void fillContextMenu(IMenuManager menu) {
+	}
+
+	/**
+	* @generated
+	*/
+	private static class OpenDiagramAction extends Action {
+
+		/**
+		* @generated
+		*/
+		private Diagram myDiagram;
+
+		/**
+		* @generated
+		*/
+		private ICommonViewerWorkbenchSite myViewerSite;
+
+		/**
+		* @generated
+		*/
+		public OpenDiagramAction(ICommonViewerWorkbenchSite viewerSite) {
+			super(ComBE.diagram.part.Messages.NavigatorActionProvider_OpenDiagramActionName);
+			myViewerSite = viewerSite;
+		}
+
+		/**
+		* @generated
+		*/
+		public final void selectionChanged(IStructuredSelection selection) {
+			myDiagram = null;
+			if (selection.size() == 1) {
+				Object selectedElement = selection.getFirstElement();
+				if (selectedElement instanceof ComBE.diagram.navigator.ComBENavigatorItem) {
+					selectedElement = ((ComBE.diagram.navigator.ComBENavigatorItem) selectedElement).getView();
+				} else if (selectedElement instanceof IAdaptable) {
+					selectedElement = ((IAdaptable) selectedElement).getAdapter(View.class);
+				}
+				if (selectedElement instanceof Diagram) {
+					Diagram diagram = (Diagram) selectedElement;
+					if (ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID.equals(ComBE.diagram.part.ComBEVisualIDRegistry.getModelID(diagram))) {
+						myDiagram = diagram;
+					}
+				}
+			}
+			setEnabled(myDiagram != null);
+		}
+
+		/**
+		* @generated
+		*/
+		public void run() {
+			if (myDiagram == null || myDiagram.eResource() == null) {
+				return;
+			}
+
+			IEditorInput editorInput = getEditorInput(myDiagram);
+			IWorkbenchPage page = myViewerSite.getPage();
+			try {
+				page.openEditor(editorInput, ComBE.diagram.part.ComBEDiagramEditor.ID);
+			} catch (PartInitException e) {
+				ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Exception while openning diagram", e); //$NON-NLS-1$
+			}
+		}
+
+		/**
+		* @generated
+		*/
+		private static IEditorInput getEditorInput(Diagram diagram) {
+			Resource diagramResource = diagram.eResource();
+			for (EObject nextEObject : diagramResource.getContents()) {
+				if (nextEObject == diagram) {
+					return new FileEditorInput(WorkspaceSynchronizer.getFile(diagramResource));
+				}
+				if (nextEObject instanceof Diagram) {
+					break;
+				}
+			}
+			URI uri = EcoreUtil.getURI(diagram);
+			String editorName = uri.lastSegment() + '#' + diagram.eResource().getContents().indexOf(diagram);
+			IEditorInput editorInput = new URIEditorInput(uri, editorName);
+			return editorInput;
+		}
+
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorContentProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorContentProvider.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,509 @@
+package ComBE.diagram.navigator;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.LinkedList;
+
+import org.eclipse.core.resources.IFile;
+import org.eclipse.emf.common.util.URI;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain;
+import org.eclipse.emf.transaction.TransactionalEditingDomain;
+import org.eclipse.emf.workspace.util.WorkspaceSynchronizer;
+import org.eclipse.gmf.runtime.emf.core.GMFEditingDomainFactory;
+import org.eclipse.gmf.runtime.notation.Diagram;
+import org.eclipse.gmf.runtime.notation.Edge;
+import org.eclipse.gmf.runtime.notation.Node;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.viewers.Viewer;
+import org.eclipse.ui.IMemento;
+import org.eclipse.ui.navigator.ICommonContentExtensionSite;
+import org.eclipse.ui.navigator.ICommonContentProvider;
+
+/**
+ * @generated
+ */
+public class ComBENavigatorContentProvider implements ICommonContentProvider {
+
+	/**
+	* @generated
+	*/
+	private static final Object[] EMPTY_ARRAY = new Object[0];
+
+	/**
+	* @generated
+	*/
+	private Viewer myViewer;
+
+	/**
+	* @generated
+	*/
+	private AdapterFactoryEditingDomain myEditingDomain;
+
+	/**
+	* @generated
+	*/
+	private WorkspaceSynchronizer myWorkspaceSynchronizer;
+
+	/**
+	* @generated
+	*/
+	private Runnable myViewerRefreshRunnable;
+
+	/**
+	* @generated
+	*/
+	@SuppressWarnings({ "unchecked", "serial", "rawtypes" })
+	public ComBENavigatorContentProvider() {
+		TransactionalEditingDomain editingDomain = GMFEditingDomainFactory.INSTANCE.createEditingDomain();
+		myEditingDomain = (AdapterFactoryEditingDomain) editingDomain;
+		myEditingDomain.setResourceToReadOnlyMap(new HashMap() {
+			public Object get(Object key) {
+				if (!containsKey(key)) {
+					put(key, Boolean.TRUE);
+				}
+				return super.get(key);
+			}
+		});
+		myViewerRefreshRunnable = new Runnable() {
+			public void run() {
+				if (myViewer != null) {
+					myViewer.refresh();
+				}
+			}
+		};
+		myWorkspaceSynchronizer = new WorkspaceSynchronizer(editingDomain, new WorkspaceSynchronizer.Delegate() {
+			public void dispose() {
+			}
+
+			public boolean handleResourceChanged(final Resource resource) {
+				unloadAllResources();
+				asyncRefresh();
+				return true;
+			}
+
+			public boolean handleResourceDeleted(Resource resource) {
+				unloadAllResources();
+				asyncRefresh();
+				return true;
+			}
+
+			public boolean handleResourceMoved(Resource resource, final URI newURI) {
+				unloadAllResources();
+				asyncRefresh();
+				return true;
+			}
+		});
+	}
+
+	/**
+	* @generated
+	*/
+	public void dispose() {
+		myWorkspaceSynchronizer.dispose();
+		myWorkspaceSynchronizer = null;
+		myViewerRefreshRunnable = null;
+		myViewer = null;
+		unloadAllResources();
+		((TransactionalEditingDomain) myEditingDomain).dispose();
+		myEditingDomain = null;
+	}
+
+	/**
+	* @generated
+	*/
+	public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {
+		myViewer = viewer;
+	}
+
+	/**
+	* @generated
+	*/
+	void unloadAllResources() {
+		for (Resource nextResource : myEditingDomain.getResourceSet().getResources()) {
+			nextResource.unload();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	void asyncRefresh() {
+		if (myViewer != null && !myViewer.getControl().isDisposed()) {
+			myViewer.getControl().getDisplay().asyncExec(myViewerRefreshRunnable);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public Object[] getElements(Object inputElement) {
+		return getChildren(inputElement);
+	}
+
+	/**
+	* @generated
+	*/
+	public void restoreState(IMemento aMemento) {
+	}
+
+	/**
+	 * @generated
+	 */
+	public void saveState(IMemento aMemento) {
+	}
+
+	/**
+	* @generated
+	*/
+	public void init(ICommonContentExtensionSite aConfig) {
+	}
+
+	/**
+	* @generated
+	*/
+	public Object[] getChildren(Object parentElement) {
+		if (parentElement instanceof IFile) {
+			IFile file = (IFile) parentElement;
+			URI fileURI = URI.createPlatformResourceURI(file.getFullPath().toString(), true);
+			Resource resource = myEditingDomain.getResourceSet().getResource(fileURI, true);
+			ArrayList<ComBE.diagram.navigator.ComBENavigatorItem> result = new ArrayList<ComBE.diagram.navigator.ComBENavigatorItem>();
+			ArrayList<View> topViews = new ArrayList<View>(resource.getContents().size());
+			for (EObject o : resource.getContents()) {
+				if (o instanceof View) {
+					topViews.add((View) o);
+				}
+			}
+			return result.toArray();
+		}
+
+		if (parentElement instanceof ComBE.diagram.navigator.ComBENavigatorGroup) {
+			ComBE.diagram.navigator.ComBENavigatorGroup group = (ComBE.diagram.navigator.ComBENavigatorGroup) parentElement;
+			return group.getChildren();
+		}
+
+		if (parentElement instanceof ComBE.diagram.navigator.ComBENavigatorItem) {
+			ComBE.diagram.navigator.ComBENavigatorItem navigatorItem = (ComBE.diagram.navigator.ComBENavigatorItem) parentElement;
+			if (navigatorItem.isLeaf() || !isOwnView(navigatorItem.getView())) {
+				return EMPTY_ARRAY;
+			}
+			return getViewChildren(navigatorItem.getView(), parentElement);
+		}
+
+		return EMPTY_ARRAY;
+	}
+
+	/**
+	* @generated
+	*/
+	private Object[] getViewChildren(View view, Object parentElement) {
+		switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view)) {
+
+		case ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID: {
+			LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem> result = new LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem>();
+			Node sv = (Node) view;
+			ComBE.diagram.navigator.ComBENavigatorGroup incominglinks = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_AtomicSequence_2003_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			ComBE.diagram.navigator.ComBENavigatorGroup outgoinglinks = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_AtomicSequence_2003_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			Collection<View> connectedViews;
+			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchParallelBranchNodesCompartmentEditPart.VISUAL_ID));
+			connectedViews = getChildrenByType(connectedViews, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID));
+			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
+			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchParallelBranchNodesCompartmentEditPart.VISUAL_ID));
+			connectedViews = getChildrenByType(connectedViews, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID));
+			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
+			connectedViews = getIncomingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID));
+			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
+			connectedViews = getIncomingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID));
+			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
+			connectedViews = getIncomingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID));
+			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
+			connectedViews = getOutgoingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID));
+			outgoinglinks.addChildren(createNavigatorItems(connectedViews, outgoinglinks, true));
+			if (!incominglinks.isEmpty()) {
+				result.add(incominglinks);
+			}
+			if (!outgoinglinks.isEmpty()) {
+				result.add(outgoinglinks);
+			}
+			return result.toArray();
+		}
+
+		case ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID: {
+			LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem> result = new LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem>();
+			Diagram sv = (Diagram) view;
+			ComBE.diagram.navigator.ComBENavigatorGroup links = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_Specification_1000_links, "icons/linksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			Collection<View> connectedViews;
+			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID));
+			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
+			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID));
+			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
+			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID));
+			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
+			connectedViews = getDiagramLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID));
+			links.addChildren(createNavigatorItems(connectedViews, links, false));
+			connectedViews = getDiagramLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID));
+			links.addChildren(createNavigatorItems(connectedViews, links, false));
+			connectedViews = getDiagramLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID));
+			links.addChildren(createNavigatorItems(connectedViews, links, false));
+			if (!links.isEmpty()) {
+				result.add(links);
+			}
+			return result.toArray();
+		}
+
+		case ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID: {
+			LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem> result = new LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem>();
+			Edge sv = (Edge) view;
+			ComBE.diagram.navigator.ComBENavigatorGroup target = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_AlternativeBranchChildren_4001_target, "icons/linkTargetNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			ComBE.diagram.navigator.ComBENavigatorGroup source = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_AlternativeBranchChildren_4001_source, "icons/linkSourceNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			Collection<View> connectedViews;
+			connectedViews = getLinksTargetByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID));
+			target.addChildren(createNavigatorItems(connectedViews, target, true));
+			connectedViews = getLinksTargetByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID));
+			target.addChildren(createNavigatorItems(connectedViews, target, true));
+			connectedViews = getLinksTargetByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID));
+			target.addChildren(createNavigatorItems(connectedViews, target, true));
+			connectedViews = getLinksSourceByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID));
+			source.addChildren(createNavigatorItems(connectedViews, source, true));
+			if (!target.isEmpty()) {
+				result.add(target);
+			}
+			if (!source.isEmpty()) {
+				result.add(source);
+			}
+			return result.toArray();
+		}
+
+		case ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID: {
+			LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem> result = new LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem>();
+			Node sv = (Node) view;
+			ComBE.diagram.navigator.ComBENavigatorGroup incominglinks = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_ParallelBranch_2002_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			ComBE.diagram.navigator.ComBENavigatorGroup outgoinglinks = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_ParallelBranch_2002_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			Collection<View> connectedViews;
+			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchAlternativeBranchNodesCompartmentEditPart.VISUAL_ID));
+			connectedViews = getChildrenByType(connectedViews, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID));
+			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
+			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchAlternativeBranchNodesCompartmentEditPart.VISUAL_ID));
+			connectedViews = getChildrenByType(connectedViews, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID));
+			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
+			connectedViews = getIncomingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID));
+			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
+			connectedViews = getIncomingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID));
+			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
+			connectedViews = getOutgoingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID));
+			outgoinglinks.addChildren(createNavigatorItems(connectedViews, outgoinglinks, true));
+			connectedViews = getIncomingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID));
+			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
+			if (!incominglinks.isEmpty()) {
+				result.add(incominglinks);
+			}
+			if (!outgoinglinks.isEmpty()) {
+				result.add(outgoinglinks);
+			}
+			return result.toArray();
+		}
+
+		case ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID: {
+			LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem> result = new LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem>();
+			Edge sv = (Edge) view;
+			ComBE.diagram.navigator.ComBENavigatorGroup target = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_AtomicSequenceChild_4003_target, "icons/linkTargetNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			ComBE.diagram.navigator.ComBENavigatorGroup source = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_AtomicSequenceChild_4003_source, "icons/linkSourceNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			Collection<View> connectedViews;
+			connectedViews = getLinksTargetByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID));
+			target.addChildren(createNavigatorItems(connectedViews, target, true));
+			connectedViews = getLinksTargetByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID));
+			target.addChildren(createNavigatorItems(connectedViews, target, true));
+			connectedViews = getLinksTargetByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID));
+			target.addChildren(createNavigatorItems(connectedViews, target, true));
+			connectedViews = getLinksSourceByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID));
+			source.addChildren(createNavigatorItems(connectedViews, source, true));
+			if (!target.isEmpty()) {
+				result.add(target);
+			}
+			if (!source.isEmpty()) {
+				result.add(source);
+			}
+			return result.toArray();
+		}
+
+		case ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID: {
+			LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem> result = new LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem>();
+			Node sv = (Node) view;
+			ComBE.diagram.navigator.ComBENavigatorGroup incominglinks = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_AlternativeBranch_2001_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			ComBE.diagram.navigator.ComBENavigatorGroup outgoinglinks = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_AlternativeBranch_2001_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			Collection<View> connectedViews;
+			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart.VISUAL_ID));
+			connectedViews = getChildrenByType(connectedViews, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID));
+			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
+			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart.VISUAL_ID));
+			connectedViews = getChildrenByType(connectedViews, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID));
+			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
+			connectedViews = getIncomingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID));
+			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
+			connectedViews = getOutgoingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID));
+			outgoinglinks.addChildren(createNavigatorItems(connectedViews, outgoinglinks, true));
+			connectedViews = getIncomingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID));
+			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
+			connectedViews = getIncomingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID));
+			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
+			if (!incominglinks.isEmpty()) {
+				result.add(incominglinks);
+			}
+			if (!outgoinglinks.isEmpty()) {
+				result.add(outgoinglinks);
+			}
+			return result.toArray();
+		}
+
+		case ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID: {
+			LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem> result = new LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem>();
+			Edge sv = (Edge) view;
+			ComBE.diagram.navigator.ComBENavigatorGroup target = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_ParallelBranchChildren_4002_target, "icons/linkTargetNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			ComBE.diagram.navigator.ComBENavigatorGroup source = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_ParallelBranchChildren_4002_source, "icons/linkSourceNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			Collection<View> connectedViews;
+			connectedViews = getLinksTargetByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID));
+			target.addChildren(createNavigatorItems(connectedViews, target, true));
+			connectedViews = getLinksTargetByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID));
+			target.addChildren(createNavigatorItems(connectedViews, target, true));
+			connectedViews = getLinksTargetByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID));
+			target.addChildren(createNavigatorItems(connectedViews, target, true));
+			connectedViews = getLinksSourceByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID));
+			source.addChildren(createNavigatorItems(connectedViews, source, true));
+			if (!target.isEmpty()) {
+				result.add(target);
+			}
+			if (!source.isEmpty()) {
+				result.add(source);
+			}
+			return result.toArray();
+		}
+		}
+		return EMPTY_ARRAY;
+	}
+
+	/**
+	* @generated
+	*/
+	private Collection<View> getLinksSourceByType(Collection<Edge> edges, String type) {
+		LinkedList<View> result = new LinkedList<View>();
+		for (Edge nextEdge : edges) {
+			View nextEdgeSource = nextEdge.getSource();
+			if (type.equals(nextEdgeSource.getType()) && isOwnView(nextEdgeSource)) {
+				result.add(nextEdgeSource);
+			}
+		}
+		return result;
+	}
+
+	/**
+	 * @generated
+	 */
+	private Collection<View> getLinksTargetByType(Collection<Edge> edges, String type) {
+		LinkedList<View> result = new LinkedList<View>();
+		for (Edge nextEdge : edges) {
+			View nextEdgeTarget = nextEdge.getTarget();
+			if (type.equals(nextEdgeTarget.getType()) && isOwnView(nextEdgeTarget)) {
+				result.add(nextEdgeTarget);
+			}
+		}
+		return result;
+	}
+
+	/**
+	 * @generated
+	 */
+	private Collection<View> getOutgoingLinksByType(Collection<? extends View> nodes, String type) {
+		LinkedList<View> result = new LinkedList<View>();
+		for (View nextNode : nodes) {
+			result.addAll(selectViewsByType(nextNode.getSourceEdges(), type));
+		}
+		return result;
+	}
+
+	/**
+	 * @generated
+	 */
+	private Collection<View> getIncomingLinksByType(Collection<? extends View> nodes, String type) {
+		LinkedList<View> result = new LinkedList<View>();
+		for (View nextNode : nodes) {
+			result.addAll(selectViewsByType(nextNode.getTargetEdges(), type));
+		}
+		return result;
+	}
+
+	/**
+	 * @generated
+	 */
+	private Collection<View> getChildrenByType(Collection<? extends View> nodes, String type) {
+		LinkedList<View> result = new LinkedList<View>();
+		for (View nextNode : nodes) {
+			result.addAll(selectViewsByType(nextNode.getChildren(), type));
+		}
+		return result;
+	}
+
+	/**
+	 * @generated
+	 */
+	private Collection<View> getDiagramLinksByType(Collection<Diagram> diagrams, String type) {
+		ArrayList<View> result = new ArrayList<View>();
+		for (Diagram nextDiagram : diagrams) {
+			result.addAll(selectViewsByType(nextDiagram.getEdges(), type));
+		}
+		return result;
+	}
+
+	// TODO refactor as static method
+	/**
+	 * @generated
+	 */
+	private Collection<View> selectViewsByType(Collection<View> views, String type) {
+		ArrayList<View> result = new ArrayList<View>();
+		for (View nextView : views) {
+			if (type.equals(nextView.getType()) && isOwnView(nextView)) {
+				result.add(nextView);
+			}
+		}
+		return result;
+	}
+
+	/**
+	 * @generated
+	 */
+	private boolean isOwnView(View view) {
+		return ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID.equals(ComBE.diagram.part.ComBEVisualIDRegistry.getModelID(view));
+	}
+
+	/**
+	 * @generated
+	 */
+	private Collection<ComBE.diagram.navigator.ComBENavigatorItem> createNavigatorItems(Collection<View> views, Object parent, boolean isLeafs) {
+		ArrayList<ComBE.diagram.navigator.ComBENavigatorItem> result = new ArrayList<ComBE.diagram.navigator.ComBENavigatorItem>(views.size());
+		for (View nextView : views) {
+			result.add(new ComBE.diagram.navigator.ComBENavigatorItem(nextView, parent, isLeafs));
+		}
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public Object getParent(Object element) {
+		if (element instanceof ComBE.diagram.navigator.ComBEAbstractNavigatorItem) {
+			ComBE.diagram.navigator.ComBEAbstractNavigatorItem abstractNavigatorItem = (ComBE.diagram.navigator.ComBEAbstractNavigatorItem) element;
+			return abstractNavigatorItem.getParent();
+		}
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean hasChildren(Object element) {
+		return element instanceof IFile || getChildren(element).length > 0;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorGroup.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorGroup.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,97 @@
+package ComBE.diagram.navigator;
+
+import java.util.Collection;
+import java.util.LinkedList;
+
+/**
+* @generated
+*/
+public class ComBENavigatorGroup extends ComBE.diagram.navigator.ComBEAbstractNavigatorItem {
+
+	/**
+	* @generated
+	*/
+	private String myGroupName;
+
+	/**
+	* @generated
+	*/
+	private String myIcon;
+
+	/**
+	* @generated
+	*/
+	private Collection myChildren = new LinkedList();
+
+	/**
+	* @generated
+	*/
+	ComBENavigatorGroup(String groupName, String icon, Object parent) {
+		super(parent);
+		myGroupName = groupName;
+		myIcon = icon;
+	}
+
+	/**
+	* @generated
+	*/
+	public String getGroupName() {
+		return myGroupName;
+	}
+
+	/**
+	* @generated
+	*/
+	public String getIcon() {
+		return myIcon;
+	}
+
+	/**
+	* @generated
+	*/
+	public Object[] getChildren() {
+		return myChildren.toArray();
+	}
+
+	/**
+	* @generated
+	*/
+	public void addChildren(Collection children) {
+		myChildren.addAll(children);
+	}
+
+	/**
+	* @generated
+	*/
+	public void addChild(Object child) {
+		myChildren.add(child);
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean isEmpty() {
+		return myChildren.size() == 0;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean equals(Object obj) {
+		if (obj instanceof ComBE.diagram.navigator.ComBENavigatorGroup) {
+			ComBE.diagram.navigator.ComBENavigatorGroup anotherGroup = (ComBE.diagram.navigator.ComBENavigatorGroup) obj;
+			if (getGroupName().equals(anotherGroup.getGroupName())) {
+				return getParent().equals(anotherGroup.getParent());
+			}
+		}
+		return super.equals(obj);
+	}
+
+	/**
+	* @generated
+	*/
+	public int hashCode() {
+		return getGroupName().hashCode();
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorItem.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorItem.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,84 @@
+package ComBE.diagram.navigator;
+
+import org.eclipse.core.runtime.IAdapterFactory;
+import org.eclipse.core.runtime.Platform;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.util.EcoreUtil;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+* @generated
+*/
+public class ComBENavigatorItem extends ComBE.diagram.navigator.ComBEAbstractNavigatorItem {
+
+	/**
+	* @generated
+	*/
+	static {
+		final Class[] supportedTypes = new Class[] { View.class, EObject.class };
+		Platform.getAdapterManager().registerAdapters(new IAdapterFactory() {
+
+			public Object getAdapter(Object adaptableObject, Class adapterType) {
+				if (adaptableObject instanceof ComBE.diagram.navigator.ComBENavigatorItem && (adapterType == View.class || adapterType == EObject.class)) {
+					return ((ComBE.diagram.navigator.ComBENavigatorItem) adaptableObject).getView();
+				}
+				return null;
+			}
+
+			public Class[] getAdapterList() {
+				return supportedTypes;
+			}
+		}, ComBE.diagram.navigator.ComBENavigatorItem.class);
+	}
+
+	/**
+	* @generated
+	*/
+	private View myView;
+
+	/**
+	* @generated
+	*/
+	private boolean myLeaf = false;
+
+	/**
+	* @generated
+	*/
+	public ComBENavigatorItem(View view, Object parent, boolean isLeaf) {
+		super(parent);
+		myView = view;
+		myLeaf = isLeaf;
+	}
+
+	/**
+	* @generated
+	*/
+	public View getView() {
+		return myView;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean isLeaf() {
+		return myLeaf;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean equals(Object obj) {
+		if (obj instanceof ComBE.diagram.navigator.ComBENavigatorItem) {
+			return EcoreUtil.getURI(getView()).equals(EcoreUtil.getURI(((ComBE.diagram.navigator.ComBENavigatorItem) obj).getView()));
+		}
+		return super.equals(obj);
+	}
+
+	/**
+	* @generated
+	*/
+	public int hashCode() {
+		return EcoreUtil.getURI(getView()).hashCode();
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorLabelProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorLabelProvider.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,348 @@
+package ComBE.diagram.navigator;
+
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.resource.ImageDescriptor;
+import org.eclipse.jface.resource.ImageRegistry;
+import org.eclipse.jface.viewers.ITreePathLabelProvider;
+import org.eclipse.jface.viewers.LabelProvider;
+import org.eclipse.jface.viewers.TreePath;
+import org.eclipse.jface.viewers.ViewerLabel;
+import org.eclipse.swt.graphics.Image;
+import org.eclipse.ui.IMemento;
+import org.eclipse.ui.navigator.ICommonContentExtensionSite;
+import org.eclipse.ui.navigator.ICommonLabelProvider;
+
+/**
+ * @generated
+ */
+public class ComBENavigatorLabelProvider extends LabelProvider implements ICommonLabelProvider, ITreePathLabelProvider {
+
+	/**
+	* @generated
+	*/
+	static {
+		ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getImageRegistry().put("Navigator?UnknownElement", ImageDescriptor.getMissingImageDescriptor()); //$NON-NLS-1$
+		ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getImageRegistry().put("Navigator?ImageNotFound", ImageDescriptor.getMissingImageDescriptor()); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	public void updateLabel(ViewerLabel label, TreePath elementPath) {
+		Object element = elementPath.getLastSegment();
+		if (element instanceof ComBE.diagram.navigator.ComBENavigatorItem && !isOwnView(((ComBE.diagram.navigator.ComBENavigatorItem) element).getView())) {
+			return;
+		}
+		label.setText(getText(element));
+		label.setImage(getImage(element));
+	}
+
+	/**
+	* @generated
+	*/
+	public Image getImage(Object element) {
+		if (element instanceof ComBE.diagram.navigator.ComBENavigatorGroup) {
+			ComBE.diagram.navigator.ComBENavigatorGroup group = (ComBE.diagram.navigator.ComBENavigatorGroup) element;
+			return ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getBundledImage(group.getIcon());
+		}
+
+		if (element instanceof ComBE.diagram.navigator.ComBENavigatorItem) {
+			ComBE.diagram.navigator.ComBENavigatorItem navigatorItem = (ComBE.diagram.navigator.ComBENavigatorItem) element;
+			if (!isOwnView(navigatorItem.getView())) {
+				return super.getImage(element);
+			}
+			return getImage(navigatorItem.getView());
+		}
+
+		return super.getImage(element);
+	}
+
+	/**
+	* @generated
+	*/
+	public Image getImage(View view) {
+		switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view)) {
+		case ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID:
+			return getImage("Navigator?Node?ComBE?StandardNode", ComBE.diagram.providers.ComBEElementTypes.StandardNode_3003); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID:
+			return getImage("Navigator?TopLevelNode?ComBE?AtomicSequence", ComBE.diagram.providers.ComBEElementTypes.AtomicSequence_2003); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID:
+			return getImage("Navigator?Diagram?ComBE?Specification", ComBE.diagram.providers.ComBEElementTypes.Specification_1000); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID:
+			return getImage("Navigator?Link?ComBE?AlternativeBranch?children", ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID:
+			return getImage("Navigator?Node?ComBE?StandardNode", ComBE.diagram.providers.ComBEElementTypes.StandardNode_3001); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID:
+			return getImage("Navigator?Node?ComBE?EmptyNode", ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3002); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID:
+			return getImage("Navigator?TopLevelNode?ComBE?ParallelBranch", ComBE.diagram.providers.ComBEElementTypes.ParallelBranch_2002); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID:
+			return getImage("Navigator?Node?ComBE?StandardNode", ComBE.diagram.providers.ComBEElementTypes.StandardNode_3005); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID:
+			return getImage("Navigator?Link?ComBE?AtomicSequence?child", ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID:
+			return getImage("Navigator?Node?ComBE?EmptyNode", ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3006); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID:
+			return getImage("Navigator?Node?ComBE?EmptyNode", ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3004); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID:
+			return getImage("Navigator?TopLevelNode?ComBE?AlternativeBranch", ComBE.diagram.providers.ComBEElementTypes.AlternativeBranch_2001); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID:
+			return getImage("Navigator?Link?ComBE?ParallelBranch?children", ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002); //$NON-NLS-1$
+		}
+		return getImage("Navigator?UnknownElement", null); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	private Image getImage(String key, IElementType elementType) {
+		ImageRegistry imageRegistry = ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getImageRegistry();
+		Image image = imageRegistry.get(key);
+		if (image == null && elementType != null && ComBE.diagram.providers.ComBEElementTypes.isKnownElementType(elementType)) {
+			image = ComBE.diagram.providers.ComBEElementTypes.getImage(elementType);
+			imageRegistry.put(key, image);
+		}
+
+		if (image == null) {
+			image = imageRegistry.get("Navigator?ImageNotFound"); //$NON-NLS-1$
+			imageRegistry.put(key, image);
+		}
+		return image;
+	}
+
+	/**
+	* @generated
+	*/
+	public String getText(Object element) {
+		if (element instanceof ComBE.diagram.navigator.ComBENavigatorGroup) {
+			ComBE.diagram.navigator.ComBENavigatorGroup group = (ComBE.diagram.navigator.ComBENavigatorGroup) element;
+			return group.getGroupName();
+		}
+
+		if (element instanceof ComBE.diagram.navigator.ComBENavigatorItem) {
+			ComBE.diagram.navigator.ComBENavigatorItem navigatorItem = (ComBE.diagram.navigator.ComBENavigatorItem) element;
+			if (!isOwnView(navigatorItem.getView())) {
+				return null;
+			}
+			return getText(navigatorItem.getView());
+		}
+
+		return super.getText(element);
+	}
+
+	/**
+	* @generated
+	*/
+	public String getText(View view) {
+		if (view.getElement() != null && view.getElement().eIsProxy()) {
+			return getUnresolvedDomainElementProxyText(view);
+		}
+		switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view)) {
+		case ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID:
+			return getStandardNode_3003Text(view);
+		case ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID:
+			return getAtomicSequence_2003Text(view);
+		case ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID:
+			return getSpecification_1000Text(view);
+		case ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID:
+			return getAlternativeBranchChildren_4001Text(view);
+		case ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID:
+			return getStandardNode_3001Text(view);
+		case ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID:
+			return getEmptyNode_3002Text(view);
+		case ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID:
+			return getParallelBranch_2002Text(view);
+		case ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID:
+			return getStandardNode_3005Text(view);
+		case ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID:
+			return getAtomicSequenceChild_4003Text(view);
+		case ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID:
+			return getEmptyNode_3006Text(view);
+		case ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID:
+			return getEmptyNode_3004Text(view);
+		case ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID:
+			return getAlternativeBranch_2001Text(view);
+		case ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID:
+			return getParallelBranchChildren_4002Text(view);
+		}
+		return getUnknownElementText(view);
+	}
+
+	/**
+	* @generated
+	*/
+	private String getStandardNode_3001Text(View view) {
+		IParser parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3001, view.getElement() != null ? view.getElement() : view, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabelEditPart.VISUAL_ID));
+		if (parser != null) {
+			return parser.getPrintString(new EObjectAdapter(view.getElement() != null ? view.getElement() : view), ParserOptions.NONE.intValue());
+		} else {
+			ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5001); //$NON-NLS-1$
+			return ""; //$NON-NLS-1$
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private String getSpecification_1000Text(View view) {
+		return ""; //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	private String getEmptyNode_3006Text(View view) {
+		IParser parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3006, view.getElement() != null ? view.getElement() : view, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeLabelEditPart.VISUAL_ID));
+		if (parser != null) {
+			return parser.getPrintString(new EObjectAdapter(view.getElement() != null ? view.getElement() : view), ParserOptions.NONE.intValue());
+		} else {
+			ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5019); //$NON-NLS-1$
+			return ""; //$NON-NLS-1$
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private String getEmptyNode_3004Text(View view) {
+		IParser parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3004, view.getElement() != null ? view.getElement() : view, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeLabel3EditPart.VISUAL_ID));
+		if (parser != null) {
+			return parser.getPrintString(new EObjectAdapter(view.getElement() != null ? view.getElement() : view), ParserOptions.NONE.intValue());
+		} else {
+			ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5023); //$NON-NLS-1$
+			return ""; //$NON-NLS-1$
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private String getAlternativeBranch_2001Text(View view) {
+		return ""; //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	private String getParallelBranchChildren_4002Text(View view) {
+		return ""; //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	private String getStandardNode_3005Text(View view) {
+		IParser parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3005, view.getElement() != null ? view.getElement() : view, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel7EditPart.VISUAL_ID));
+		if (parser != null) {
+			return parser.getPrintString(new EObjectAdapter(view.getElement() != null ? view.getElement() : view), ParserOptions.NONE.intValue());
+		} else {
+			ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5013); //$NON-NLS-1$
+			return ""; //$NON-NLS-1$
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private String getAtomicSequenceChild_4003Text(View view) {
+		return ""; //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	private String getStandardNode_3003Text(View view) {
+		IParser parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3003, view.getElement() != null ? view.getElement() : view, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel4EditPart.VISUAL_ID));
+		if (parser != null) {
+			return parser.getPrintString(new EObjectAdapter(view.getElement() != null ? view.getElement() : view), ParserOptions.NONE.intValue());
+		} else {
+			ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5007); //$NON-NLS-1$
+			return ""; //$NON-NLS-1$
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private String getAtomicSequence_2003Text(View view) {
+		return ""; //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	private String getAlternativeBranchChildren_4001Text(View view) {
+		return ""; //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	private String getEmptyNode_3002Text(View view) {
+		IParser parser = ComBE.diagram.providers.ComBEParserProvider.getParser(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3002, view.getElement() != null ? view.getElement() : view, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeLabel2EditPart.VISUAL_ID));
+		if (parser != null) {
+			return parser.getPrintString(new EObjectAdapter(view.getElement() != null ? view.getElement() : view), ParserOptions.NONE.intValue());
+		} else {
+			ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5021); //$NON-NLS-1$
+			return ""; //$NON-NLS-1$
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private String getParallelBranch_2002Text(View view) {
+		return ""; //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	private String getUnknownElementText(View view) {
+		return "<UnknownElement Visual_ID = " + view.getType() + ">"; //$NON-NLS-1$  //$NON-NLS-2$
+	}
+
+	/**
+	* @generated
+	*/
+	private String getUnresolvedDomainElementProxyText(View view) {
+		return "<Unresolved domain element Visual_ID = " + view.getType() + ">"; //$NON-NLS-1$  //$NON-NLS-2$
+	}
+
+	/**
+	* @generated
+	*/
+	public void init(ICommonContentExtensionSite aConfig) {
+	}
+
+	/**
+	* @generated
+	*/
+	public void restoreState(IMemento aMemento) {
+	}
+
+	/**
+	* @generated
+	*/
+	public void saveState(IMemento aMemento) {
+	}
+
+	/**
+	* @generated
+	*/
+	public String getDescription(Object anElement) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	private boolean isOwnView(View view) {
+		return ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID.equals(ComBE.diagram.part.ComBEVisualIDRegistry.getModelID(view));
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorLinkHelper.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorLinkHelper.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,114 @@
+package ComBE.diagram.navigator;
+
+import org.eclipse.core.resources.IFile;
+import org.eclipse.emf.common.ui.URIEditorInput;
+import org.eclipse.emf.common.util.URI;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.emf.ecore.resource.ResourceSet;
+import org.eclipse.emf.ecore.util.EcoreUtil;
+import org.eclipse.emf.workspace.util.WorkspaceSynchronizer;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.GraphicalViewer;
+import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
+import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument;
+import org.eclipse.gmf.runtime.notation.Diagram;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.jface.viewers.StructuredSelection;
+import org.eclipse.ui.IEditorInput;
+import org.eclipse.ui.IEditorPart;
+import org.eclipse.ui.IWorkbenchPage;
+import org.eclipse.ui.navigator.ILinkHelper;
+import org.eclipse.ui.part.FileEditorInput;
+
+/**
+* @generated
+*/
+public class ComBENavigatorLinkHelper implements ILinkHelper {
+
+	/**
+	* @generated
+	*/
+	private static IEditorInput getEditorInput(Diagram diagram) {
+		Resource diagramResource = diagram.eResource();
+		for (EObject nextEObject : diagramResource.getContents()) {
+			if (nextEObject == diagram) {
+				return new FileEditorInput(WorkspaceSynchronizer.getFile(diagramResource));
+			}
+			if (nextEObject instanceof Diagram) {
+				break;
+			}
+		}
+		URI uri = EcoreUtil.getURI(diagram);
+		String editorName = uri.lastSegment() + '#' + diagram.eResource().getContents().indexOf(diagram);
+		IEditorInput editorInput = new URIEditorInput(uri, editorName);
+		return editorInput;
+	}
+
+	/**
+	* @generated
+	*/
+	public IStructuredSelection findSelection(IEditorInput anInput) {
+		IDiagramDocument document = ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getDocumentProvider().getDiagramDocument(anInput);
+		if (document == null) {
+			return StructuredSelection.EMPTY;
+		}
+		Diagram diagram = document.getDiagram();
+		if (diagram == null || diagram.eResource() == null) {
+			return StructuredSelection.EMPTY;
+		}
+		IFile file = WorkspaceSynchronizer.getFile(diagram.eResource());
+		if (file != null) {
+			ComBE.diagram.navigator.ComBENavigatorItem item = new ComBE.diagram.navigator.ComBENavigatorItem(diagram, file, false);
+			return new StructuredSelection(item);
+		}
+		return StructuredSelection.EMPTY;
+	}
+
+	/**
+	* @generated
+	*/
+	public void activateEditor(IWorkbenchPage aPage, IStructuredSelection aSelection) {
+		if (aSelection == null || aSelection.isEmpty()) {
+			return;
+		}
+		if (false == aSelection.getFirstElement() instanceof ComBE.diagram.navigator.ComBEAbstractNavigatorItem) {
+			return;
+		}
+
+		ComBE.diagram.navigator.ComBEAbstractNavigatorItem abstractNavigatorItem = (ComBE.diagram.navigator.ComBEAbstractNavigatorItem) aSelection.getFirstElement();
+		View navigatorView = null;
+		if (abstractNavigatorItem instanceof ComBE.diagram.navigator.ComBENavigatorItem) {
+			navigatorView = ((ComBE.diagram.navigator.ComBENavigatorItem) abstractNavigatorItem).getView();
+		} else if (abstractNavigatorItem instanceof ComBE.diagram.navigator.ComBENavigatorGroup) {
+			ComBE.diagram.navigator.ComBENavigatorGroup navigatorGroup = (ComBE.diagram.navigator.ComBENavigatorGroup) abstractNavigatorItem;
+			if (navigatorGroup.getParent() instanceof ComBE.diagram.navigator.ComBENavigatorItem) {
+				navigatorView = ((ComBE.diagram.navigator.ComBENavigatorItem) navigatorGroup.getParent()).getView();
+			}
+		}
+		if (navigatorView == null) {
+			return;
+		}
+		IEditorInput editorInput = getEditorInput(navigatorView.getDiagram());
+		IEditorPart editor = aPage.findEditor(editorInput);
+		if (editor == null) {
+			return;
+		}
+		aPage.bringToTop(editor);
+		if (editor instanceof DiagramEditor) {
+			DiagramEditor diagramEditor = (DiagramEditor) editor;
+			ResourceSet diagramEditorResourceSet = diagramEditor.getEditingDomain().getResourceSet();
+			EObject selectedView = diagramEditorResourceSet.getEObject(EcoreUtil.getURI(navigatorView), true);
+			if (selectedView == null) {
+				return;
+			}
+			GraphicalViewer graphicalViewer = (GraphicalViewer) diagramEditor.getAdapter(GraphicalViewer.class);
+			EditPart selectedEditPart = (EditPart) graphicalViewer.getEditPartRegistry().get(selectedView);
+			if (selectedEditPart != null) {
+				graphicalViewer.select(selectedEditPart);
+			}
+		}
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorSorter.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorSorter.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,26 @@
+package ComBE.diagram.navigator;
+
+import org.eclipse.jface.viewers.ViewerSorter;
+
+/**
+* @generated
+*/
+public class ComBENavigatorSorter extends ViewerSorter {
+
+	/**
+	* @generated
+	*/
+	private static final int GROUP_CATEGORY = 7005;
+
+	/**
+	* @generated
+	*/
+	public int category(Object element) {
+		if (element instanceof ComBE.diagram.navigator.ComBENavigatorItem) {
+			ComBE.diagram.navigator.ComBENavigatorItem item = (ComBE.diagram.navigator.ComBENavigatorItem) element;
+			return ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(item.getView());
+		}
+		return GROUP_CATEGORY;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/parsers/AbstractParser.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/parsers/AbstractParser.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,416 @@
+package ComBE.diagram.parsers;
+
+import java.util.Arrays;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.ecore.EAttribute;
+import org.eclipse.emf.ecore.EClassifier;
+import org.eclipse.emf.ecore.EDataType;
+import org.eclipse.emf.ecore.EEnum;
+import org.eclipse.emf.ecore.EEnumLiteral;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.TransactionalEditingDomain;
+import org.eclipse.emf.transaction.util.TransactionUtil;
+import org.eclipse.gmf.runtime.common.core.command.ICommand;
+import org.eclipse.gmf.runtime.common.core.command.UnexecutableCommand;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
+import org.eclipse.gmf.runtime.emf.type.core.commands.SetValueCommand;
+import org.eclipse.gmf.runtime.emf.type.core.requests.SetRequest;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+import org.eclipse.osgi.util.NLS;
+
+/**
+ * @generated
+ */
+public abstract class AbstractParser implements IParser {
+
+	/**
+	* @generated
+	*/
+	protected final EAttribute[] features;
+
+	/**
+	* @generated
+	*/
+	protected final EAttribute[] editableFeatures;
+
+	/**
+	* @generated
+	*/
+	private String viewPattern;
+
+	/**
+	* @generated
+	*/
+	private String editorPattern;
+
+	/**
+	* @generated
+	*/
+	private String editPattern;
+
+	/**
+	* @generated
+	*/
+	public AbstractParser(EAttribute[] features) {
+		if (features == null || Arrays.asList(features).contains(null)) {
+			throw new IllegalArgumentException();
+		}
+		this.editableFeatures = this.features = features;
+	}
+
+	/**
+	* @generated
+	*/
+	public AbstractParser(EAttribute[] features, EAttribute[] editableFeatures) {
+		if (features == null || Arrays.asList(features).contains(null)) {
+			throw new IllegalArgumentException();
+		}
+		this.features = features;
+		if (editableFeatures == null || Arrays.asList(editableFeatures).contains(null)) {
+			throw new IllegalArgumentException();
+		}
+		this.editableFeatures = editableFeatures;
+	}
+
+	/**
+	* @generated
+	*/
+	public String getViewPattern() {
+		return viewPattern;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setViewPattern(String viewPattern) {
+		this.viewPattern = viewPattern;
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditorPattern() {
+		return editorPattern;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setEditorPattern(String editorPattern) {
+		this.editorPattern = editorPattern;
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditPattern() {
+		return editPattern;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setEditPattern(String editPattern) {
+		this.editPattern = editPattern;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean isAffectingEvent(Object event, int flags) {
+		if (event instanceof Notification) {
+			return isAffectingFeature(((Notification) event).getFeature());
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isAffectingFeature(Object feature) {
+		for (int i = 0; i < features.length; i++) {
+			if (features[i] == feature) {
+				return true;
+			}
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor(IAdaptable element) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Object[] getValues(EObject element) {
+		Object[] values = new Object[features.length];
+		for (int i = 0; i < features.length; i++) {
+			values[i] = getValue(element, features[i]);
+		}
+		return values;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Object[] getEditableValues(EObject element) {
+		Object[] values = new Object[editableFeatures.length];
+		for (int i = 0; i < editableFeatures.length; i++) {
+			values[i] = getValue(element, editableFeatures[i]);
+		}
+		return values;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Object getValue(EObject element, EAttribute feature) {
+		Object value = element.eGet(feature);
+		Class iClass = feature.getEAttributeType().getInstanceClass();
+		if (String.class.equals(iClass)) {
+			if (value == null) {
+				value = ""; //$NON-NLS-1$
+			}
+		}
+		return value;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ICommand getParseCommand(IAdaptable adapter, Object[] values, int flags) {
+		if (values == null || validateNewValues(values).getCode() != IParserEditStatus.EDITABLE) {
+			return UnexecutableCommand.INSTANCE;
+		}
+		EObject element = (EObject) adapter.getAdapter(EObject.class);
+		TransactionalEditingDomain editingDomain = TransactionUtil.getEditingDomain(element);
+		if (editingDomain == null) {
+			return UnexecutableCommand.INSTANCE;
+		}
+		CompositeTransactionalCommand command = new CompositeTransactionalCommand(editingDomain, "Set Values"); //$NON-NLS-1$
+		for (int i = 0; i < values.length; i++) {
+			command.compose(getModificationCommand(element, editableFeatures[i], values[i]));
+		}
+		return command;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ICommand getModificationCommand(EObject element, EAttribute feature, Object value) {
+		value = getValidNewValue(feature, value);
+		if (value instanceof InvalidValue) {
+			return UnexecutableCommand.INSTANCE;
+		}
+		SetRequest request = new SetRequest(element, feature, value);
+		return new SetValueCommand(request);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IParserEditStatus validateNewValues(Object[] values) {
+		if (values.length != editableFeatures.length) {
+			return ParserEditStatus.UNEDITABLE_STATUS;
+		}
+		for (int i = 0; i < values.length; i++) {
+			Object value = getValidNewValue(editableFeatures[i], values[i]);
+			if (value instanceof InvalidValue) {
+				return new ParserEditStatus(ComBE.diagram.part.ComBEDiagramEditorPlugin.ID, IParserEditStatus.UNEDITABLE, value.toString());
+			}
+		}
+		return ParserEditStatus.EDITABLE_STATUS;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Object getValidNewValue(EAttribute feature, Object value) {
+		EClassifier type = feature.getEType();
+		if (type instanceof EDataType) {
+			Class iClass = type.getInstanceClass();
+			if (Boolean.TYPE.equals(iClass)) {
+				if (value instanceof Boolean) {
+					// ok
+				} else if (value instanceof String) {
+					value = Boolean.valueOf((String) value);
+				} else {
+					value = new InvalidValue(NLS.bind(ComBE.diagram.part.Messages.AbstractParser_UnexpectedValueType, iClass.getName()));
+				}
+			} else if (Character.TYPE.equals(iClass)) {
+				if (value instanceof Character) {
+					// ok
+				} else if (value instanceof String) {
+					String s = (String) value;
+					if (s.length() == 0) {
+						value = null;
+					} else {
+						value = new Character(s.charAt(0));
+					}
+				} else {
+					value = new InvalidValue(NLS.bind(ComBE.diagram.part.Messages.AbstractParser_UnexpectedValueType, iClass.getName()));
+				}
+			} else if (Byte.TYPE.equals(iClass)) {
+				if (value instanceof Byte) {
+					// ok
+				} else if (value instanceof Number) {
+					value = new Byte(((Number) value).byteValue());
+				} else if (value instanceof String) {
+					String s = (String) value;
+					if (s.length() == 0) {
+						value = null;
+					} else {
+						try {
+							value = Byte.valueOf(s);
+						} catch (NumberFormatException nfe) {
+							value = new InvalidValue(NLS.bind(ComBE.diagram.part.Messages.AbstractParser_WrongStringConversion, iClass.getName()));
+						}
+					}
+				} else {
+					value = new InvalidValue(NLS.bind(ComBE.diagram.part.Messages.AbstractParser_UnexpectedValueType, iClass.getName()));
+				}
+			} else if (Short.TYPE.equals(iClass)) {
+				if (value instanceof Short) {
+					// ok
+				} else if (value instanceof Number) {
+					value = new Short(((Number) value).shortValue());
+				} else if (value instanceof String) {
+					String s = (String) value;
+					if (s.length() == 0) {
+						value = null;
+					} else {
+						try {
+							value = Short.valueOf(s);
+						} catch (NumberFormatException nfe) {
+							value = new InvalidValue(NLS.bind(ComBE.diagram.part.Messages.AbstractParser_WrongStringConversion, iClass.getName()));
+						}
+					}
+				} else {
+					value = new InvalidValue(NLS.bind(ComBE.diagram.part.Messages.AbstractParser_UnexpectedValueType, iClass.getName()));
+				}
+			} else if (Integer.TYPE.equals(iClass)) {
+				if (value instanceof Integer) {
+					// ok
+				} else if (value instanceof Number) {
+					value = new Integer(((Number) value).intValue());
+				} else if (value instanceof String) {
+					String s = (String) value;
+					if (s.length() == 0) {
+						value = null;
+					} else {
+						try {
+							value = Integer.valueOf(s);
+						} catch (NumberFormatException nfe) {
+							value = new InvalidValue(NLS.bind(ComBE.diagram.part.Messages.AbstractParser_WrongStringConversion, iClass.getName()));
+						}
+					}
+				} else {
+					value = new InvalidValue(NLS.bind(ComBE.diagram.part.Messages.AbstractParser_UnexpectedValueType, iClass.getName()));
+				}
+			} else if (Long.TYPE.equals(iClass)) {
+				if (value instanceof Long) {
+					// ok
+				} else if (value instanceof Number) {
+					value = new Long(((Number) value).longValue());
+				} else if (value instanceof String) {
+					String s = (String) value;
+					if (s.length() == 0) {
+						value = null;
+					} else {
+						try {
+							value = Long.valueOf(s);
+						} catch (NumberFormatException nfe) {
+							value = new InvalidValue(NLS.bind(ComBE.diagram.part.Messages.AbstractParser_WrongStringConversion, iClass.getName()));
+						}
+					}
+				} else {
+					value = new InvalidValue(NLS.bind(ComBE.diagram.part.Messages.AbstractParser_UnexpectedValueType, iClass.getName()));
+				}
+			} else if (Float.TYPE.equals(iClass)) {
+				if (value instanceof Float) {
+					// ok
+				} else if (value instanceof Number) {
+					value = new Float(((Number) value).floatValue());
+				} else if (value instanceof String) {
+					String s = (String) value;
+					if (s.length() == 0) {
+						value = null;
+					} else {
+						try {
+							value = Float.valueOf(s);
+						} catch (NumberFormatException nfe) {
+							value = new InvalidValue(NLS.bind(ComBE.diagram.part.Messages.AbstractParser_WrongStringConversion, iClass.getName()));
+						}
+					}
+				} else {
+					value = new InvalidValue(NLS.bind(ComBE.diagram.part.Messages.AbstractParser_UnexpectedValueType, iClass.getName()));
+				}
+			} else if (Double.TYPE.equals(iClass)) {
+				if (value instanceof Double) {
+					// ok
+				} else if (value instanceof Number) {
+					value = new Double(((Number) value).doubleValue());
+				} else if (value instanceof String) {
+					String s = (String) value;
+					if (s.length() == 0) {
+						value = null;
+					} else {
+						try {
+							value = Double.valueOf(s);
+						} catch (NumberFormatException nfe) {
+							value = new InvalidValue(NLS.bind(ComBE.diagram.part.Messages.AbstractParser_WrongStringConversion, iClass.getName()));
+						}
+					}
+				} else {
+					value = new InvalidValue(NLS.bind(ComBE.diagram.part.Messages.AbstractParser_UnexpectedValueType, iClass.getName()));
+				}
+			} else if (type instanceof EEnum) {
+				if (value instanceof String) {
+					EEnumLiteral literal = ((EEnum) type).getEEnumLiteralByLiteral((String) value);
+					if (literal == null) {
+						value = new InvalidValue(NLS.bind(ComBE.diagram.part.Messages.AbstractParser_UnknownLiteral, value));
+					} else {
+						value = literal.getInstance();
+					}
+				} else {
+					value = new InvalidValue(NLS.bind(ComBE.diagram.part.Messages.AbstractParser_UnexpectedValueType, String.class.getName()));
+				}
+			}
+		}
+		return value;
+	}
+
+	/**
+	* @generated
+	*/
+	protected class InvalidValue {
+
+		/**
+		* @generated
+		*/
+		private String description;
+
+		/**
+		* @generated
+		*/
+		public InvalidValue(String description) {
+			this.description = description;
+		}
+
+		/**
+		* @generated
+		*/
+		public String toString() {
+			return description;
+		}
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/parsers/MessageFormatParser.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/parsers/MessageFormatParser.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,187 @@
+package ComBE.diagram.parsers;
+
+import java.text.FieldPosition;
+import java.text.MessageFormat;
+import java.text.ParsePosition;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EAttribute;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gmf.runtime.common.core.command.ICommand;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.osgi.util.NLS;
+
+/**
+ * @generated
+ */
+public class MessageFormatParser extends ComBE.diagram.parsers.AbstractParser {
+
+	/**
+	* @generated
+	*/
+	private String defaultPattern;
+
+	/**
+	* @generated
+	*/
+	private String defaultEditablePattern;
+
+	/**
+	* @generated
+	*/
+	private MessageFormat viewProcessor;
+
+	/**
+	* @generated
+	*/
+	private MessageFormat editorProcessor;
+
+	/**
+	* @generated
+	*/
+	private MessageFormat editProcessor;
+
+	/**
+	* @generated
+	*/
+	public MessageFormatParser(EAttribute[] features) {
+		super(features);
+	}
+
+	/**
+	* @generated
+	*/
+	public MessageFormatParser(EAttribute[] features, EAttribute[] editableFeatures) {
+		super(features, editableFeatures);
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getDefaultPattern() {
+		if (defaultPattern == null) {
+			StringBuffer sb = new StringBuffer();
+			for (int i = 0; i < features.length; i++) {
+				if (i > 0) {
+					sb.append(' ');
+				}
+				sb.append('{');
+				sb.append(i);
+				sb.append('}');
+			}
+			defaultPattern = sb.toString();
+		}
+		return defaultPattern;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setViewPattern(String viewPattern) {
+		super.setViewPattern(viewPattern);
+		viewProcessor = null;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setEditorPattern(String editorPattern) {
+		super.setEditorPattern(editorPattern);
+		editorProcessor = null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected MessageFormat getViewProcessor() {
+		if (viewProcessor == null) {
+			viewProcessor = new MessageFormat(getViewPattern() == null ? getDefaultPattern() : getViewPattern());
+		}
+		return viewProcessor;
+	}
+
+	/**
+	* @generated
+	*/
+	protected MessageFormat getEditorProcessor() {
+		if (editorProcessor == null) {
+			editorProcessor = new MessageFormat(getEditorPattern() == null ? getDefaultEditablePattern() : getEditorPattern());
+		}
+		return editorProcessor;
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getDefaultEditablePattern() {
+		if (defaultEditablePattern == null) {
+			StringBuffer sb = new StringBuffer();
+			for (int i = 0; i < editableFeatures.length; i++) {
+				if (i > 0) {
+					sb.append(' ');
+				}
+				sb.append('{');
+				sb.append(i);
+				sb.append('}');
+			}
+			defaultEditablePattern = sb.toString();
+		}
+		return defaultEditablePattern;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setEditPattern(String editPattern) {
+		super.setEditPattern(editPattern);
+		editProcessor = null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected MessageFormat getEditProcessor() {
+		if (editProcessor == null) {
+			editProcessor = new MessageFormat(getEditPattern() == null ? getDefaultEditablePattern() : getEditPattern());
+		}
+		return editProcessor;
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditString(IAdaptable adapter, int flags) {
+		EObject element = (EObject) adapter.getAdapter(EObject.class);
+		return getEditorProcessor().format(getEditableValues(element), new StringBuffer(), new FieldPosition(0)).toString();
+	}
+
+	/**
+	* @generated
+	*/
+	public IParserEditStatus isValidEditString(IAdaptable adapter, String editString) {
+		ParsePosition pos = new ParsePosition(0);
+		Object[] values = getEditProcessor().parse(editString, pos);
+		if (values == null) {
+			return new ParserEditStatus(ComBE.diagram.part.ComBEDiagramEditorPlugin.ID, IParserEditStatus.UNEDITABLE, NLS.bind(ComBE.diagram.part.Messages.MessageFormatParser_InvalidInputError, new Integer(pos.getErrorIndex())));
+		}
+		return validateNewValues(values);
+	}
+
+	/**
+	* @generated
+	*/
+	public ICommand getParseCommand(IAdaptable adapter, String newString, int flags) {
+		Object[] values = getEditProcessor().parse(newString, new ParsePosition(0));
+		return getParseCommand(adapter, values, flags);
+	}
+
+	/**
+	* @generated
+	*/
+	public String getPrintString(IAdaptable adapter, int flags) {
+		EObject element = (EObject) adapter.getAdapter(EObject.class);
+		return getViewProcessor().format(getValues(element), new StringBuffer(), new FieldPosition(0)).toString();
+	}
+
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/parsers/StandardNodeLabelExpressionLabelParser.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/parsers/StandardNodeLabelExpressionLabelParser.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/parsers/StandardNodeLabelExpressionLabelParser.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,11 +1,70 @@
 package ComBE.diagram.parsers;
 
+import java.util.Collections;
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.resources.IFile;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.TransactionalEditingDomain;
+import org.eclipse.emf.transaction.util.TransactionUtil;
+import org.eclipse.emf.workspace.util.WorkspaceSynchronizer;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.common.core.command.ICommand;
+import org.eclipse.gmf.runtime.common.core.command.UnexecutableCommand;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserEditStatus;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserEditStatus;
+import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
+import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
+
 /**
  * @generated
  */
 public class StandardNodeLabelExpressionLabelParser implements IParser {
 
 	/**
+	* @generated
+	*/
+	public StandardNodeLabelExpressionLabelParser() {
+	}
+
+	/**
+	* @generated
+	*/
+	public String getEditString(IAdaptable element, int flags) {
+		return getPrintString(element, flags);
+	}
+
+	/**
+	* @generated
+	*/
+	public IParserEditStatus isValidEditString(IAdaptable element, String editString) {
+		return ParserEditStatus.EDITABLE_STATUS;
+	}
+
+	/**
+	* @generated
+	*/
+	public ICommand getParseCommand(IAdaptable element, final String newString, int flags) {
+		final EObject target = (EObject) element.getAdapter(EObject.class);
+		if (!validateValues(target, newString)) {
+			return UnexecutableCommand.INSTANCE;
+		}
+		TransactionalEditingDomain editingDomain = TransactionUtil.getEditingDomain(target);
+		if (editingDomain == null) {
+			return UnexecutableCommand.INSTANCE;
+		}
+		IFile affectedFile = WorkspaceSynchronizer.getFile(target.eResource());
+		return new AbstractTransactionalCommand(editingDomain, "Set Values", affectedFile == null ? null : Collections.singletonList(affectedFile)) { //$NON-NLS-1$ 
+			protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+				return new CommandResult(updateValues(target, newString));
+			}
+		};
+	}
+
+	/**
 	* @generated NOT
 	* Workaround for GMF/331875
 	*/
@@ -14,4 +73,37 @@
 		Object result = ComBE.diagram.expressions.ComBEOCLFactory.getExpression(flags, ComBE.ComBEPackage.eINSTANCE.getStandardNode(), null).evaluate(target);
 		return String.valueOf(result);
 	}
+
+	/**
+	* @generated
+	*/
+	public boolean isAffectingEvent(Object event, int flags) {
+		// XXX Any event is recognized as important, unless there's a way to extract this information from expression itself.
+		// TODO analyze expressions (e.g. using OCL parser) to find out structural features in use  
+		return true;
+	}
+
+	/**
+	* @generated
+	*/
+	public IContentAssistProcessor getCompletionProcessor(IAdaptable element) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	private boolean validateValues(EObject target, String newString) {
+		// TODO implement as needed
+		return true;
+	}
+
+	/**
+	* @generated
+	*/
+	private IStatus updateValues(EObject target, String newString) throws ExecutionException {
+		// TODO implement this method
+		// DO NOT FORGET to remove @generated tag or mark method @generated NOT
+		throw new ExecutionException("Please implement parsing and value modification");
+	}
 }
\ No newline at end of file

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBECreationWizard.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBECreationWizard.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,154 @@
+package ComBE.diagram.part;
+
+import java.lang.reflect.InvocationTargetException;
+
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.jface.dialogs.ErrorDialog;
+import org.eclipse.jface.operation.IRunnableWithProgress;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.jface.wizard.Wizard;
+import org.eclipse.ui.INewWizard;
+import org.eclipse.ui.IWorkbench;
+import org.eclipse.ui.PartInitException;
+import org.eclipse.ui.actions.WorkspaceModifyOperation;
+
+/**
+ * @generated
+ */
+public class ComBECreationWizard extends Wizard implements INewWizard {
+
+	/**
+	* @generated
+	*/
+	private IWorkbench workbench;
+
+	/**
+	* @generated
+	*/
+	protected IStructuredSelection selection;
+
+	/**
+	* @generated
+	*/
+	protected ComBE.diagram.part.ComBECreationWizardPage diagramModelFilePage;
+
+	/**
+	* @generated
+	*/
+	protected ComBE.diagram.part.ComBECreationWizardPage domainModelFilePage;
+
+	/**
+	* @generated
+	*/
+	protected Resource diagram;
+
+	/**
+	* @generated
+	*/
+	private boolean openNewlyCreatedDiagramEditor = true;
+
+	/**
+	* @generated
+	*/
+	public IWorkbench getWorkbench() {
+		return workbench;
+	}
+
+	/**
+	* @generated
+	*/
+	public IStructuredSelection getSelection() {
+		return selection;
+	}
+
+	/**
+	* @generated
+	*/
+	public final Resource getDiagram() {
+		return diagram;
+	}
+
+	/**
+	* @generated
+	*/
+	public final boolean isOpenNewlyCreatedDiagramEditor() {
+		return openNewlyCreatedDiagramEditor;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setOpenNewlyCreatedDiagramEditor(boolean openNewlyCreatedDiagramEditor) {
+		this.openNewlyCreatedDiagramEditor = openNewlyCreatedDiagramEditor;
+	}
+
+	/**
+	* @generated
+	*/
+	public void init(IWorkbench workbench, IStructuredSelection selection) {
+		this.workbench = workbench;
+		this.selection = selection;
+		setWindowTitle(ComBE.diagram.part.Messages.ComBECreationWizardTitle);
+		setDefaultPageImageDescriptor(ComBE.diagram.part.ComBEDiagramEditorPlugin.getBundledImageDescriptor("icons/wizban/NewComBEWizard.gif")); //$NON-NLS-1$
+		setNeedsProgressMonitor(true);
+	}
+
+	/**
+	* @generated
+	*/
+	public void addPages() {
+		diagramModelFilePage = new ComBE.diagram.part.ComBECreationWizardPage("DiagramModelFile", getSelection(), "combe_diagram"); //$NON-NLS-1$ //$NON-NLS-2$
+		diagramModelFilePage.setTitle(ComBE.diagram.part.Messages.ComBECreationWizard_DiagramModelFilePageTitle);
+		diagramModelFilePage.setDescription(ComBE.diagram.part.Messages.ComBECreationWizard_DiagramModelFilePageDescription);
+		addPage(diagramModelFilePage);
+
+		domainModelFilePage = new ComBE.diagram.part.ComBECreationWizardPage("DomainModelFile", getSelection(), "combe") { //$NON-NLS-1$ //$NON-NLS-2$
+
+			public void setVisible(boolean visible) {
+				if (visible) {
+					String fileName = diagramModelFilePage.getFileName();
+					fileName = fileName.substring(0, fileName.length() - ".combe_diagram".length()); //$NON-NLS-1$
+					setFileName(ComBE.diagram.part.ComBEDiagramEditorUtil.getUniqueFileName(getContainerFullPath(), fileName, "combe")); //$NON-NLS-1$
+				}
+				super.setVisible(visible);
+			}
+		};
+		domainModelFilePage.setTitle(ComBE.diagram.part.Messages.ComBECreationWizard_DomainModelFilePageTitle);
+		domainModelFilePage.setDescription(ComBE.diagram.part.Messages.ComBECreationWizard_DomainModelFilePageDescription);
+		addPage(domainModelFilePage);
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean performFinish() {
+		IRunnableWithProgress op = new WorkspaceModifyOperation(null) {
+
+			protected void execute(IProgressMonitor monitor) throws CoreException, InterruptedException {
+				diagram = ComBE.diagram.part.ComBEDiagramEditorUtil.createDiagram(diagramModelFilePage.getURI(), domainModelFilePage.getURI(), monitor);
+				if (isOpenNewlyCreatedDiagramEditor() && diagram != null) {
+					try {
+						ComBE.diagram.part.ComBEDiagramEditorUtil.openDiagram(diagram);
+					} catch (PartInitException e) {
+						ErrorDialog.openError(getContainer().getShell(), ComBE.diagram.part.Messages.ComBECreationWizardOpenEditorError, null, e.getStatus());
+					}
+				}
+			}
+		};
+		try {
+			getContainer().run(false, true, op);
+		} catch (InterruptedException e) {
+			return false;
+		} catch (InvocationTargetException e) {
+			if (e.getTargetException() instanceof CoreException) {
+				ErrorDialog.openError(getContainer().getShell(), ComBE.diagram.part.Messages.ComBECreationWizardCreationError, null, ((CoreException) e.getTargetException()).getStatus());
+			} else {
+				ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Error creating diagram", e.getTargetException()); //$NON-NLS-1$
+			}
+			return false;
+		}
+		return diagram != null;
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBECreationWizardPage.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBECreationWizardPage.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,83 @@
+package ComBE.diagram.part;
+
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.emf.common.util.URI;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.swt.widgets.Composite;
+import org.eclipse.ui.dialogs.WizardNewFileCreationPage;
+
+/**
+ * @generated
+ */
+public class ComBECreationWizardPage extends WizardNewFileCreationPage {
+
+	/**
+	* @generated
+	*/
+	private final String fileExtension;
+
+	/**
+	* @generated
+	*/
+	public ComBECreationWizardPage(String pageName, IStructuredSelection selection, String fileExtension) {
+		super(pageName, selection);
+		this.fileExtension = fileExtension;
+	}
+
+	/**
+	 * Override to create files with this extension.
+	 * 
+	 * @generated
+	 */
+	protected String getExtension() {
+		return fileExtension;
+	}
+
+	/**
+	* @generated
+	*/
+	public URI getURI() {
+		return URI.createPlatformResourceURI(getFilePath().toString(), false);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IPath getFilePath() {
+		IPath path = getContainerFullPath();
+		if (path == null) {
+			path = new Path(""); //$NON-NLS-1$
+		}
+		String fileName = getFileName();
+		if (fileName != null) {
+			path = path.append(fileName);
+		}
+		return path;
+	}
+
+	/**
+	* @generated
+	*/
+	public void createControl(Composite parent) {
+		super.createControl(parent);
+		setFileName(ComBE.diagram.part.ComBEDiagramEditorUtil.getUniqueFileName(getContainerFullPath(), getFileName(), getExtension()));
+		setPageComplete(validatePage());
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean validatePage() {
+		if (!super.validatePage()) {
+			return false;
+		}
+		String extension = getExtension();
+		if (extension != null && !getFilePath().toString().endsWith("." + extension)) {
+			setErrorMessage(NLS.bind(ComBE.diagram.part.Messages.ComBECreationWizardPageExtensionError, extension));
+			return false;
+		}
+		return true;
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramActionBarContributor.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramActionBarContributor.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,42 @@
+package ComBE.diagram.part;
+
+import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramActionBarContributor;
+import org.eclipse.gmf.runtime.diagram.ui.printing.render.actions.EnhancedPrintActionHelper;
+import org.eclipse.gmf.runtime.diagram.ui.printing.render.actions.RenderedPrintPreviewAction;
+import org.eclipse.jface.action.IAction;
+import org.eclipse.jface.action.IMenuManager;
+import org.eclipse.ui.IActionBars;
+import org.eclipse.ui.IWorkbenchActionConstants;
+import org.eclipse.ui.IWorkbenchPage;
+
+/**
+ * @generated
+ */
+public class ComBEDiagramActionBarContributor extends DiagramActionBarContributor {
+
+	/**
+	* @generated
+	*/
+	protected Class getEditorClass() {
+		return ComBE.diagram.part.ComBEDiagramEditor.class;
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getEditorId() {
+		return ComBE.diagram.part.ComBEDiagramEditor.ID;
+	}
+
+	/**
+	* @generated
+	*/
+	public void init(IActionBars bars, IWorkbenchPage page) {
+		super.init(bars, page);
+		// print preview
+		IMenuManager fileMenu = bars.getMenuManager().findMenuUsingPath(IWorkbenchActionConstants.M_FILE);
+		assert fileMenu != null;
+		IAction printPreviewAction = new RenderedPrintPreviewAction(new EnhancedPrintActionHelper());
+		fileMenu.insertBefore("print", printPreviewAction); //$NON-NLS-1$
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramEditor.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramEditor.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,269 @@
+package ComBE.diagram.part;
+
+import org.eclipse.core.resources.IFile;
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.core.resources.IWorkspaceRoot;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.emf.common.ui.URIEditorInput;
+import org.eclipse.emf.transaction.TransactionalEditingDomain;
+import org.eclipse.emf.workspace.util.WorkspaceSynchronizer;
+import org.eclipse.gef.palette.PaletteRoot;
+import org.eclipse.gmf.runtime.common.ui.services.marker.MarkerNavigationService;
+import org.eclipse.gmf.runtime.diagram.core.preferences.PreferencesHint;
+import org.eclipse.gmf.runtime.diagram.ui.actions.ActionIds;
+import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument;
+import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument;
+import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocumentProvider;
+import org.eclipse.gmf.runtime.diagram.ui.resources.editor.parts.DiagramDocumentEditor;
+import org.eclipse.gmf.runtime.notation.Diagram;
+import org.eclipse.jface.dialogs.ErrorDialog;
+import org.eclipse.jface.dialogs.IMessageProvider;
+import org.eclipse.jface.dialogs.MessageDialog;
+import org.eclipse.jface.viewers.ISelection;
+import org.eclipse.jface.viewers.StructuredSelection;
+import org.eclipse.jface.window.Window;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.swt.widgets.Shell;
+import org.eclipse.ui.IEditorInput;
+import org.eclipse.ui.IEditorMatchingStrategy;
+import org.eclipse.ui.IEditorReference;
+import org.eclipse.ui.IFileEditorInput;
+import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.dialogs.SaveAsDialog;
+import org.eclipse.ui.ide.IGotoMarker;
+import org.eclipse.ui.navigator.resources.ProjectExplorer;
+import org.eclipse.ui.part.FileEditorInput;
+import org.eclipse.ui.part.IShowInTargetList;
+import org.eclipse.ui.part.ShowInContext;
+
+/**
+* @generated
+*/
+public class ComBEDiagramEditor extends DiagramDocumentEditor implements IGotoMarker {
+
+	/**
+	* @generated
+	*/
+	public static final String ID = "ComBE.diagram.part.ComBEDiagramEditorID"; //$NON-NLS-1$
+
+	/**
+	* @generated
+	*/
+	public static final String CONTEXT_ID = "ComBE.diagram.ui.diagramContext"; //$NON-NLS-1$
+
+	/**
+	* @generated
+	*/
+	public ComBEDiagramEditor() {
+		super(true);
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getContextID() {
+		return CONTEXT_ID;
+	}
+
+	/**
+	* @generated
+	*/
+	protected PaletteRoot createPaletteRoot(PaletteRoot existingPaletteRoot) {
+		PaletteRoot root = super.createPaletteRoot(existingPaletteRoot);
+		new ComBE.diagram.part.ComBEPaletteFactory().fillPalette(root);
+		return root;
+	}
+
+	/**
+	* @generated
+	*/
+	protected PreferencesHint getPreferencesHint() {
+		return ComBE.diagram.part.ComBEDiagramEditorPlugin.DIAGRAM_PREFERENCES_HINT;
+	}
+
+	/**
+	* @generated
+	*/
+	public String getContributorId() {
+		return ComBE.diagram.part.ComBEDiagramEditorPlugin.ID;
+	}
+
+	/**
+	 * @generated
+	 */
+	@SuppressWarnings("rawtypes")
+	public Object getAdapter(Class type) {
+		if (type == IShowInTargetList.class) {
+			return new IShowInTargetList() {
+				public String[] getShowInTargetIds() {
+					return new String[] { ProjectExplorer.VIEW_ID };
+				}
+			};
+		}
+		return super.getAdapter(type);
+	}
+
+	/**
+	* @generated
+	*/
+	protected IDocumentProvider getDocumentProvider(IEditorInput input) {
+		if (input instanceof IFileEditorInput || input instanceof URIEditorInput) {
+			return ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getDocumentProvider();
+		}
+		return super.getDocumentProvider(input);
+	}
+
+	/**
+	* @generated
+	*/
+	public TransactionalEditingDomain getEditingDomain() {
+		IDocument document = getEditorInput() != null ? getDocumentProvider().getDocument(getEditorInput()) : null;
+		if (document instanceof IDiagramDocument) {
+			return ((IDiagramDocument) document).getEditingDomain();
+		}
+		return super.getEditingDomain();
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setDocumentProvider(IEditorInput input) {
+		if (input instanceof IFileEditorInput || input instanceof URIEditorInput) {
+			setDocumentProvider(ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getDocumentProvider());
+		} else {
+			super.setDocumentProvider(input);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void gotoMarker(IMarker marker) {
+		MarkerNavigationService.getInstance().gotoMarker(this, marker);
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean isSaveAsAllowed() {
+		return true;
+	}
+
+	/**
+	* @generated
+	*/
+	public void doSaveAs() {
+		performSaveAs(new NullProgressMonitor());
+	}
+
+	/**
+	* @generated
+	*/
+	protected void performSaveAs(IProgressMonitor progressMonitor) {
+		Shell shell = getSite().getShell();
+		IEditorInput input = getEditorInput();
+		SaveAsDialog dialog = new SaveAsDialog(shell);
+		IFile original = input instanceof IFileEditorInput ? ((IFileEditorInput) input).getFile() : null;
+		if (original != null) {
+			dialog.setOriginalFile(original);
+		}
+		dialog.create();
+		IDocumentProvider provider = getDocumentProvider();
+		if (provider == null) {
+			// editor has been programmatically closed while the dialog was open
+			return;
+		}
+		if (provider.isDeleted(input) && original != null) {
+			String message = NLS.bind(ComBE.diagram.part.Messages.ComBEDiagramEditor_SavingDeletedFile, original.getName());
+			dialog.setErrorMessage(null);
+			dialog.setMessage(message, IMessageProvider.WARNING);
+		}
+		if (dialog.open() == Window.CANCEL) {
+			if (progressMonitor != null) {
+				progressMonitor.setCanceled(true);
+			}
+			return;
+		}
+		IPath filePath = dialog.getResult();
+		if (filePath == null) {
+			if (progressMonitor != null) {
+				progressMonitor.setCanceled(true);
+			}
+			return;
+		}
+		IWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();
+		IFile file = workspaceRoot.getFile(filePath);
+		final IEditorInput newInput = new FileEditorInput(file);
+		// Check if the editor is already open
+		IEditorMatchingStrategy matchingStrategy = getEditorDescriptor().getEditorMatchingStrategy();
+		IEditorReference[] editorRefs = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getEditorReferences();
+		for (int i = 0; i < editorRefs.length; i++) {
+			if (matchingStrategy.matches(editorRefs[i], newInput)) {
+				MessageDialog.openWarning(shell, ComBE.diagram.part.Messages.ComBEDiagramEditor_SaveAsErrorTitle, ComBE.diagram.part.Messages.ComBEDiagramEditor_SaveAsErrorMessage);
+				return;
+			}
+		}
+		boolean success = false;
+		try {
+			provider.aboutToChange(newInput);
+			getDocumentProvider(newInput).saveDocument(progressMonitor, newInput, getDocumentProvider().getDocument(getEditorInput()), true);
+			success = true;
+		} catch (CoreException x) {
+			IStatus status = x.getStatus();
+			if (status == null || status.getSeverity() != IStatus.CANCEL) {
+				ErrorDialog.openError(shell, ComBE.diagram.part.Messages.ComBEDiagramEditor_SaveErrorTitle, ComBE.diagram.part.Messages.ComBEDiagramEditor_SaveErrorMessage, x.getStatus());
+			}
+		} finally {
+			provider.changed(newInput);
+			if (success) {
+				setInput(newInput);
+			}
+		}
+		if (progressMonitor != null) {
+			progressMonitor.setCanceled(!success);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public ShowInContext getShowInContext() {
+		return new ShowInContext(getEditorInput(), getNavigatorSelection());
+	}
+
+	/**
+	* @generated
+	*/
+	private ISelection getNavigatorSelection() {
+		IDiagramDocument document = getDiagramDocument();
+		if (document == null) {
+			return StructuredSelection.EMPTY;
+		}
+		Diagram diagram = document.getDiagram();
+		if (diagram == null || diagram.eResource() == null) {
+			return StructuredSelection.EMPTY;
+		}
+		IFile file = WorkspaceSynchronizer.getFile(diagram.eResource());
+		if (file != null) {
+			ComBE.diagram.navigator.ComBENavigatorItem item = new ComBE.diagram.navigator.ComBENavigatorItem(diagram, file, false);
+			return new StructuredSelection(item);
+		}
+		return StructuredSelection.EMPTY;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void configureGraphicalViewer() {
+		super.configureGraphicalViewer();
+		ComBE.diagram.part.DiagramEditorContextMenuProvider provider = new ComBE.diagram.part.DiagramEditorContextMenuProvider(this, getDiagramGraphicalViewer());
+		getDiagramGraphicalViewer().setContextMenu(provider);
+		getSite().registerContextMenu(ActionIds.DIAGRAM_EDITOR_CONTEXT_MENU, provider, getDiagramGraphicalViewer());
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramEditorPlugin.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramEditorPlugin.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,298 @@
+package ComBE.diagram.part;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.core.runtime.Platform;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
+import org.eclipse.emf.edit.provider.IItemLabelProvider;
+import org.eclipse.emf.edit.provider.ReflectiveItemProviderAdapterFactory;
+import org.eclipse.emf.edit.provider.resource.ResourceItemProviderAdapterFactory;
+import org.eclipse.emf.edit.ui.provider.ExtendedImageRegistry;
+import org.eclipse.gmf.runtime.diagram.core.preferences.PreferencesHint;
+import org.eclipse.jface.resource.ImageDescriptor;
+import org.eclipse.swt.graphics.Image;
+import org.eclipse.ui.plugin.AbstractUIPlugin;
+import org.osgi.framework.BundleContext;
+
+/**
+ * @generated
+ */
+public class ComBEDiagramEditorPlugin extends AbstractUIPlugin {
+
+	/**
+	* @generated
+	*/
+	public static final String ID = "org.behaviorengineering.combe.graphical.diagram"; //$NON-NLS-1$
+
+	/**
+	* @generated
+	*/
+	public static final PreferencesHint DIAGRAM_PREFERENCES_HINT = new PreferencesHint(ID);
+
+	/**
+	* @generated
+	*/
+	private static ComBEDiagramEditorPlugin instance;
+
+	/**
+	* @generated
+	*/
+	private ComposedAdapterFactory adapterFactory;
+
+	/**
+	* @generated
+	*/
+	private ComBE.diagram.part.ComBEDocumentProvider documentProvider;
+
+	/**
+	* @generated
+	*/
+	private ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy.LinkConstraints linkConstraints;
+
+	/**
+	* @generated
+	*/
+	private ComBE.diagram.providers.ElementInitializers initializers;
+
+	/**
+	* @generated
+	*/
+	private ComBE.diagram.expressions.ComBEOCLFactory oclFactory;
+
+	/**
+	* @generated
+	*/
+	public ComBEDiagramEditorPlugin() {
+	}
+
+	/**
+	* @generated
+	*/
+	public void start(BundleContext context) throws Exception {
+		super.start(context);
+		instance = this;
+		PreferencesHint.registerPreferenceStore(DIAGRAM_PREFERENCES_HINT, getPreferenceStore());
+		adapterFactory = createAdapterFactory();
+	}
+
+	/**
+	* @generated
+	*/
+	public void stop(BundleContext context) throws Exception {
+		adapterFactory.dispose();
+		adapterFactory = null;
+		linkConstraints = null;
+		initializers = null;
+		oclFactory = null;
+		instance = null;
+		super.stop(context);
+	}
+
+	/**
+	* @generated
+	*/
+	public static ComBEDiagramEditorPlugin getInstance() {
+		return instance;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ComposedAdapterFactory createAdapterFactory() {
+		ArrayList<AdapterFactory> factories = new ArrayList<AdapterFactory>();
+		fillItemProviderFactories(factories);
+		return new ComposedAdapterFactory(factories);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void fillItemProviderFactories(List<AdapterFactory> factories) {
+		factories.add(new ComBE.provider.ComBEItemProviderAdapterFactory());
+		factories.add(new ResourceItemProviderAdapterFactory());
+		factories.add(new ReflectiveItemProviderAdapterFactory());
+	}
+
+	/**
+	* @generated
+	*/
+	public AdapterFactory getItemProvidersAdapterFactory() {
+		return adapterFactory;
+	}
+
+	/**
+	* @generated
+	*/
+	public ImageDescriptor getItemImageDescriptor(Object item) {
+		IItemLabelProvider labelProvider = (IItemLabelProvider) adapterFactory.adapt(item, IItemLabelProvider.class);
+		if (labelProvider != null) {
+			return ExtendedImageRegistry.getInstance().getImageDescriptor(labelProvider.getImage(item));
+		}
+		return null;
+	}
+
+	/**
+	 * Returns an image descriptor for the image file at the given
+	 * plug-in relative path.
+	 *
+	 * @generated
+	 * @param path the path
+	 * @return the image descriptor
+	 */
+	public static ImageDescriptor getBundledImageDescriptor(String path) {
+		return AbstractUIPlugin.imageDescriptorFromPlugin(ID, path);
+	}
+
+	/**
+	 * Respects images residing in any plug-in. If path is relative,
+	 * then this bundle is looked up for the image, otherwise, for absolute 
+	 * path, first segment is taken as id of plug-in with image
+	 *
+	 * @generated
+	 * @param path the path to image, either absolute (with plug-in id as first segment), or relative for bundled images
+	 * @return the image descriptor
+	 */
+	public static ImageDescriptor findImageDescriptor(String path) {
+		final IPath p = new Path(path);
+		if (p.isAbsolute() && p.segmentCount() > 1) {
+			return AbstractUIPlugin.imageDescriptorFromPlugin(p.segment(0), p.removeFirstSegments(1).makeAbsolute().toString());
+		} else {
+			return getBundledImageDescriptor(p.makeAbsolute().toString());
+		}
+	}
+
+	/**
+	 * Returns an image for the image file at the given plug-in relative path.
+	 * Client do not need to dispose this image. Images will be disposed automatically.
+	 *
+	 * @generated
+	 * @param path the path
+	 * @return image instance
+	 */
+	public Image getBundledImage(String path) {
+		Image image = getImageRegistry().get(path);
+		if (image == null) {
+			getImageRegistry().put(path, getBundledImageDescriptor(path));
+			image = getImageRegistry().get(path);
+		}
+		return image;
+	}
+
+	/**
+	 * Returns string from plug-in's resource bundle
+	 *
+	 * @generated
+	 */
+	public static String getString(String key) {
+		return Platform.getResourceString(getInstance().getBundle(), "%" + key); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	public ComBE.diagram.part.ComBEDocumentProvider getDocumentProvider() {
+		if (documentProvider == null) {
+			documentProvider = new ComBE.diagram.part.ComBEDocumentProvider();
+		}
+		return documentProvider;
+	}
+
+	/**
+	* @generated
+	*/
+	public ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy.LinkConstraints getLinkConstraints() {
+		return linkConstraints;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setLinkConstraints(ComBE.diagram.edit.policies.ComBEBaseItemSemanticEditPolicy.LinkConstraints lc) {
+		this.linkConstraints = lc;
+	}
+
+	/**
+	* @generated
+	*/
+	public ComBE.diagram.providers.ElementInitializers getElementInitializers() {
+		return initializers;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setElementInitializers(ComBE.diagram.providers.ElementInitializers i) {
+		this.initializers = i;
+	}
+
+	/**
+	* @generated
+	*/
+	public ComBE.diagram.expressions.ComBEOCLFactory getComBEOCLFactory() {
+		return oclFactory;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setComBEOCLFactory(ComBE.diagram.expressions.ComBEOCLFactory f) {
+		this.oclFactory = f;
+	}
+
+	/**
+	* @generated
+	*/
+	public void logError(String error) {
+		logError(error, null);
+	}
+
+	/**
+	* @generated
+	*/
+	public void logError(String error, Throwable throwable) {
+		if (error == null && throwable != null) {
+			error = throwable.getMessage();
+		}
+		getLog().log(new Status(IStatus.ERROR, ComBEDiagramEditorPlugin.ID, IStatus.OK, error, throwable));
+		debug(error, throwable);
+	}
+
+	/**
+	* @generated
+	*/
+	public void logInfo(String message) {
+		logInfo(message, null);
+	}
+
+	/**
+	* @generated
+	*/
+	public void logInfo(String message, Throwable throwable) {
+		if (message == null && throwable != null) {
+			message = throwable.getMessage();
+		}
+		getLog().log(new Status(IStatus.INFO, ComBEDiagramEditorPlugin.ID, IStatus.OK, message, throwable));
+		debug(message, throwable);
+	}
+
+	/**
+	* @generated
+	*/
+	private void debug(String message, Throwable throwable) {
+		if (!isDebugging()) {
+			return;
+		}
+		if (message != null) {
+			System.err.println(message);
+		}
+		if (throwable != null) {
+			throwable.printStackTrace();
+		}
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramEditorUtil.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramEditorUtil.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,359 @@
+package ComBE.diagram.part;
+
+import java.io.IOException;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.commands.operations.OperationHistoryFactory;
+import org.eclipse.core.resources.IFile;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.core.runtime.SubProgressMonitor;
+import org.eclipse.emf.common.util.URI;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.emf.ecore.xmi.XMLResource;
+import org.eclipse.emf.transaction.TransactionalEditingDomain;
+import org.eclipse.emf.workspace.util.WorkspaceSynchronizer;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.diagram.core.services.ViewService;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IPrimaryEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.parts.IDiagramGraphicalViewer;
+import org.eclipse.gmf.runtime.diagram.ui.parts.IDiagramWorkbenchPart;
+import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
+import org.eclipse.gmf.runtime.emf.core.GMFEditingDomainFactory;
+import org.eclipse.gmf.runtime.emf.core.util.EMFCoreUtil;
+import org.eclipse.gmf.runtime.notation.Diagram;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.dialogs.IDialogSettings;
+import org.eclipse.jface.wizard.Wizard;
+import org.eclipse.jface.wizard.WizardDialog;
+import org.eclipse.swt.widgets.Shell;
+import org.eclipse.ui.IWorkbenchPage;
+import org.eclipse.ui.PartInitException;
+import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.part.FileEditorInput;
+
+/**
+ * @generated
+ */
+public class ComBEDiagramEditorUtil {
+
+	/**
+	* @generated
+	*/
+	public static Map<?, ?> getSaveOptions() {
+		HashMap<String, Object> saveOptions = new HashMap<String, Object>();
+		saveOptions.put(XMLResource.OPTION_ENCODING, "UTF-8"); //$NON-NLS-1$
+		saveOptions.put(Resource.OPTION_SAVE_ONLY_IF_CHANGED, Resource.OPTION_SAVE_ONLY_IF_CHANGED_MEMORY_BUFFER);
+		return saveOptions;
+	}
+
+	/**
+	* @generated
+	*/
+	public static boolean openDiagram(Resource diagram) throws PartInitException {
+		String path = diagram.getURI().toPlatformString(true);
+		IResource workspaceResource = ResourcesPlugin.getWorkspace().getRoot().findMember(new Path(path));
+		if (workspaceResource instanceof IFile) {
+			IWorkbenchPage page = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage();
+			return null != page.openEditor(new FileEditorInput((IFile) workspaceResource), ComBE.diagram.part.ComBEDiagramEditor.ID);
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	public static void setCharset(IFile file) {
+		if (file == null) {
+			return;
+		}
+		try {
+			file.setCharset("UTF-8", new NullProgressMonitor()); //$NON-NLS-1$
+		} catch (CoreException e) {
+			ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Unable to set charset for file " + file.getFullPath(), e); //$NON-NLS-1$
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public static String getUniqueFileName(IPath containerFullPath, String fileName, String extension) {
+		if (containerFullPath == null) {
+			containerFullPath = new Path(""); //$NON-NLS-1$
+		}
+		if (fileName == null || fileName.trim().length() == 0) {
+			fileName = "default"; //$NON-NLS-1$
+		}
+		IPath filePath = containerFullPath.append(fileName);
+		if (extension != null && !extension.equals(filePath.getFileExtension())) {
+			filePath = filePath.addFileExtension(extension);
+		}
+		extension = filePath.getFileExtension();
+		fileName = filePath.removeFileExtension().lastSegment();
+		int i = 1;
+		while (ResourcesPlugin.getWorkspace().getRoot().exists(filePath)) {
+			i++;
+			filePath = containerFullPath.append(fileName + i);
+			if (extension != null) {
+				filePath = filePath.addFileExtension(extension);
+			}
+		}
+		return filePath.lastSegment();
+	}
+
+	/**
+	 * Runs the wizard in a dialog.
+	 * 
+	 * @generated
+	 */
+	public static void runWizard(Shell shell, Wizard wizard, String settingsKey) {
+		IDialogSettings pluginDialogSettings = ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getDialogSettings();
+		IDialogSettings wizardDialogSettings = pluginDialogSettings.getSection(settingsKey);
+		if (wizardDialogSettings == null) {
+			wizardDialogSettings = pluginDialogSettings.addNewSection(settingsKey);
+		}
+		wizard.setDialogSettings(wizardDialogSettings);
+		WizardDialog dialog = new WizardDialog(shell, wizard);
+		dialog.create();
+		dialog.getShell().setSize(Math.max(500, dialog.getShell().getSize().x), 500);
+		dialog.open();
+	}
+
+	/**
+	* This method should be called within a workspace modify operation since it creates resources.
+	* @generated
+	*/
+	public static Resource createDiagram(URI diagramURI, URI modelURI, IProgressMonitor progressMonitor) {
+		TransactionalEditingDomain editingDomain = GMFEditingDomainFactory.INSTANCE.createEditingDomain();
+		progressMonitor.beginTask(ComBE.diagram.part.Messages.ComBEDiagramEditorUtil_CreateDiagramProgressTask, 3);
+		final Resource diagramResource = editingDomain.getResourceSet().createResource(diagramURI);
+		final Resource modelResource = editingDomain.getResourceSet().createResource(modelURI);
+		final String diagramName = diagramURI.lastSegment();
+		AbstractTransactionalCommand command = new AbstractTransactionalCommand(editingDomain, ComBE.diagram.part.Messages.ComBEDiagramEditorUtil_CreateDiagramCommandLabel, Collections.EMPTY_LIST) {
+			protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+				ComBE.Specification model = createInitialModel();
+				attachModelToResource(model, modelResource);
+
+				Diagram diagram = ViewService.createDiagram(model, ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID, ComBE.diagram.part.ComBEDiagramEditorPlugin.DIAGRAM_PREFERENCES_HINT);
+				if (diagram != null) {
+					diagramResource.getContents().add(diagram);
+					diagram.setName(diagramName);
+					diagram.setElement(model);
+				}
+
+				try {
+					modelResource.save(ComBE.diagram.part.ComBEDiagramEditorUtil.getSaveOptions());
+					diagramResource.save(ComBE.diagram.part.ComBEDiagramEditorUtil.getSaveOptions());
+				} catch (IOException e) {
+
+					ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Unable to store model and diagram resources", e); //$NON-NLS-1$
+				}
+				return CommandResult.newOKCommandResult();
+			}
+		};
+		try {
+			OperationHistoryFactory.getOperationHistory().execute(command, new SubProgressMonitor(progressMonitor, 1), null);
+		} catch (ExecutionException e) {
+			ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Unable to create model and diagram", e); //$NON-NLS-1$
+		}
+		setCharset(WorkspaceSynchronizer.getFile(modelResource));
+		setCharset(WorkspaceSynchronizer.getFile(diagramResource));
+		return diagramResource;
+	}
+
+	/**
+	* Create a new instance of domain element associated with canvas.
+	* <!-- begin-user-doc -->
+	* <!-- end-user-doc -->
+	* @generated
+	*/
+	private static ComBE.Specification createInitialModel() {
+		return ComBE.ComBEFactory.eINSTANCE.createSpecification();
+	}
+
+	/**
+	* Store model element in the resource.
+	* <!-- begin-user-doc -->
+	* <!-- end-user-doc -->
+	* @generated
+	*/
+	private static void attachModelToResource(ComBE.Specification model, Resource resource) {
+		resource.getContents().add(model);
+	}
+
+	/**
+	* @generated
+	*/
+	public static void selectElementsInDiagram(IDiagramWorkbenchPart diagramPart, List<EditPart> editParts) {
+		diagramPart.getDiagramGraphicalViewer().deselectAll();
+
+		EditPart firstPrimary = null;
+		for (EditPart nextPart : editParts) {
+			diagramPart.getDiagramGraphicalViewer().appendSelection(nextPart);
+			if (firstPrimary == null && nextPart instanceof IPrimaryEditPart) {
+				firstPrimary = nextPart;
+			}
+		}
+
+		if (!editParts.isEmpty()) {
+			diagramPart.getDiagramGraphicalViewer().reveal(firstPrimary != null ? firstPrimary : (EditPart) editParts.get(0));
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private static int findElementsInDiagramByID(DiagramEditPart diagramPart, EObject element, List<EditPart> editPartCollector) {
+		IDiagramGraphicalViewer viewer = (IDiagramGraphicalViewer) diagramPart.getViewer();
+		final int intialNumOfEditParts = editPartCollector.size();
+
+		if (element instanceof View) { // support notation element lookup
+			EditPart editPart = (EditPart) viewer.getEditPartRegistry().get(element);
+			if (editPart != null) {
+				editPartCollector.add(editPart);
+				return 1;
+			}
+		}
+
+		String elementID = EMFCoreUtil.getProxyID(element);
+		@SuppressWarnings("unchecked")
+		List<EditPart> associatedParts = viewer.findEditPartsForElement(elementID, IGraphicalEditPart.class);
+		// perform the possible hierarchy disjoint -> take the top-most parts only
+		for (EditPart nextPart : associatedParts) {
+			EditPart parentPart = nextPart.getParent();
+			while (parentPart != null && !associatedParts.contains(parentPart)) {
+				parentPart = parentPart.getParent();
+			}
+			if (parentPart == null) {
+				editPartCollector.add(nextPart);
+			}
+		}
+
+		if (intialNumOfEditParts == editPartCollector.size()) {
+			if (!associatedParts.isEmpty()) {
+				editPartCollector.add(associatedParts.get(0));
+			} else {
+				if (element.eContainer() != null) {
+					return findElementsInDiagramByID(diagramPart, element.eContainer(), editPartCollector);
+				}
+			}
+		}
+		return editPartCollector.size() - intialNumOfEditParts;
+	}
+
+	/**
+	* @generated
+	*/
+	public static View findView(DiagramEditPart diagramEditPart, EObject targetElement, LazyElement2ViewMap lazyElement2ViewMap) {
+		boolean hasStructuralURI = false;
+		if (targetElement.eResource() instanceof XMLResource) {
+			hasStructuralURI = ((XMLResource) targetElement.eResource()).getID(targetElement) == null;
+		}
+
+		View view = null;
+		LinkedList<EditPart> editPartHolder = new LinkedList<EditPart>();
+		if (hasStructuralURI && !lazyElement2ViewMap.getElement2ViewMap().isEmpty()) {
+			view = lazyElement2ViewMap.getElement2ViewMap().get(targetElement);
+		} else if (findElementsInDiagramByID(diagramEditPart, targetElement, editPartHolder) > 0) {
+			EditPart editPart = editPartHolder.get(0);
+			view = editPart.getModel() instanceof View ? (View) editPart.getModel() : null;
+		}
+
+		return (view == null) ? diagramEditPart.getDiagramView() : view;
+	}
+
+	/**
+	* XXX This is quite suspicious code (especially editPartTmpHolder) and likely to be removed soon
+	* @generated
+	*/
+	public static class LazyElement2ViewMap {
+		/**
+		* @generated
+		*/
+		private Map<EObject, View> element2ViewMap;
+
+		/**
+		* @generated
+		*/
+		private View scope;
+
+		/**
+		* @generated
+		*/
+		private Set<? extends EObject> elementSet;
+
+		/**
+		* @generated
+		*/
+		public LazyElement2ViewMap(View scope, Set<? extends EObject> elements) {
+			this.scope = scope;
+			this.elementSet = elements;
+		}
+
+		/**
+		* @generated
+		*/
+		public final Map<EObject, View> getElement2ViewMap() {
+			if (element2ViewMap == null) {
+				element2ViewMap = new HashMap<EObject, View>();
+				// map possible notation elements to itself as these can't be found by view.getElement()
+				for (EObject element : elementSet) {
+					if (element instanceof View) {
+						View view = (View) element;
+						if (view.getDiagram() == scope.getDiagram()) {
+							element2ViewMap.put(element, view); // take only those that part of our diagram
+						}
+					}
+				}
+
+				buildElement2ViewMap(scope, element2ViewMap, elementSet);
+			}
+			return element2ViewMap;
+		}
+
+		/**
+		* @generated
+		*/
+		private static boolean buildElement2ViewMap(View parentView, Map<EObject, View> element2ViewMap, Set<? extends EObject> elements) {
+			if (elements.size() == element2ViewMap.size()) {
+				return true;
+			}
+
+			if (parentView.isSetElement() && !element2ViewMap.containsKey(parentView.getElement()) && elements.contains(parentView.getElement())) {
+				element2ViewMap.put(parentView.getElement(), parentView);
+				if (elements.size() == element2ViewMap.size()) {
+					return true;
+				}
+			}
+			boolean complete = false;
+			for (Iterator<?> it = parentView.getChildren().iterator(); it.hasNext() && !complete;) {
+				complete = buildElement2ViewMap((View) it.next(), element2ViewMap, elements);
+			}
+			for (Iterator<?> it = parentView.getSourceEdges().iterator(); it.hasNext() && !complete;) {
+				complete = buildElement2ViewMap((View) it.next(), element2ViewMap, elements);
+			}
+			for (Iterator<?> it = parentView.getTargetEdges().iterator(); it.hasNext() && !complete;) {
+				complete = buildElement2ViewMap((View) it.next(), element2ViewMap, elements);
+			}
+			return complete;
+		}
+	} //LazyElement2ViewMap	
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramUpdateCommand.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramUpdateCommand.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,78 @@
+package ComBE.diagram.part;
+
+import java.util.Iterator;
+import java.util.List;
+
+import org.eclipse.core.commands.ExecutionEvent;
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.commands.IHandler;
+import org.eclipse.core.commands.IHandlerListener;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalEditPolicy;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.viewers.ISelection;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.ui.PlatformUI;
+
+/**
+* @generated
+*/
+public class ComBEDiagramUpdateCommand implements IHandler {
+
+	/**
+	* @generated
+	*/
+	public void addHandlerListener(IHandlerListener handlerListener) {
+	}
+
+	/**
+	* @generated
+	*/
+	public void dispose() {
+	}
+
+	/**
+	* @generated
+	*/
+	public Object execute(ExecutionEvent event) throws ExecutionException {
+		ISelection selection = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getSelectionService().getSelection();
+		if (selection instanceof IStructuredSelection) {
+			IStructuredSelection structuredSelection = (IStructuredSelection) selection;
+			if (structuredSelection.size() != 1) {
+				return null;
+			}
+			if (structuredSelection.getFirstElement() instanceof EditPart && ((EditPart) structuredSelection.getFirstElement()).getModel() instanceof View) {
+				EObject modelElement = ((View) ((EditPart) structuredSelection.getFirstElement()).getModel()).getElement();
+				List editPolicies = CanonicalEditPolicy.getRegisteredEditPolicies(modelElement);
+				for (Iterator it = editPolicies.iterator(); it.hasNext();) {
+					CanonicalEditPolicy nextEditPolicy = (CanonicalEditPolicy) it.next();
+					nextEditPolicy.refresh();
+				}
+
+			}
+		}
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean isEnabled() {
+		return true;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean isHandled() {
+		return true;
+	}
+
+	/**
+	* @generated
+	*/
+	public void removeHandlerListener(IHandlerListener handlerListener) {
+	}
+
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramUpdater.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramUpdater.java	Sat Jul 14 08:49:20 2012	(r25199)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDiagramUpdater.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -1,10 +1,554 @@
 package ComBE.diagram.part;
 
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Map;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.EStructuralFeature;
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.emf.ecore.util.EcoreUtil;
+import org.eclipse.gmf.runtime.notation.View;
+
 /**
 * @generated
 */
 public class ComBEDiagramUpdater {
 
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBENodeDescriptor> getSemanticChildren(View view) {
+		switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view)) {
+		case ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID:
+			return getSpecification_1000SemanticChildren(view);
+		case ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart.VISUAL_ID:
+			return getAlternativeBranchAlternativeBranchNodesCompartment_7001SemanticChildren(view);
+		case ComBE.diagram.edit.parts.AlternativeBranchAlternativeBranchNodesCompartmentEditPart.VISUAL_ID:
+			return getParallelBranchParallelBranchNodesCompartment_7002SemanticChildren(view);
+		case ComBE.diagram.edit.parts.ParallelBranchParallelBranchNodesCompartmentEditPart.VISUAL_ID:
+			return getAtomicSequenceAtomicSequenceNodesCompartment_7003SemanticChildren(view);
+		}
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBENodeDescriptor> getSpecification_1000SemanticChildren(View view) {
+		if (!view.isSetElement()) {
+			return Collections.emptyList();
+		}
+		ComBE.Specification modelElement = (ComBE.Specification) view.getElement();
+		LinkedList<ComBE.diagram.part.ComBENodeDescriptor> result = new LinkedList<ComBE.diagram.part.ComBENodeDescriptor>();
+		Resource resource = modelElement.eResource();
+		for (Iterator<EObject> it = getPhantomNodesIterator(resource); it.hasNext();) {
+			EObject childElement = it.next();
+			if (childElement == modelElement) {
+				continue;
+			}
+			if (ComBE.diagram.part.ComBEVisualIDRegistry.getNodeVisualID(view, childElement) == ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID) {
+				result.add(new ComBE.diagram.part.ComBENodeDescriptor(childElement, ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID));
+				continue;
+			}
+			if (ComBE.diagram.part.ComBEVisualIDRegistry.getNodeVisualID(view, childElement) == ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID) {
+				result.add(new ComBE.diagram.part.ComBENodeDescriptor(childElement, ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID));
+				continue;
+			}
+			if (ComBE.diagram.part.ComBEVisualIDRegistry.getNodeVisualID(view, childElement) == ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID) {
+				result.add(new ComBE.diagram.part.ComBENodeDescriptor(childElement, ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID));
+				continue;
+			}
+		}
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBENodeDescriptor> getAlternativeBranchAlternativeBranchNodesCompartment_7001SemanticChildren(View view) {
+		if (false == view.eContainer() instanceof View) {
+			return Collections.emptyList();
+		}
+		View containerView = (View) view.eContainer();
+		if (!containerView.isSetElement()) {
+			return Collections.emptyList();
+		}
+		ComBE.AlternativeBranch modelElement = (ComBE.AlternativeBranch) containerView.getElement();
+		LinkedList<ComBE.diagram.part.ComBENodeDescriptor> result = new LinkedList<ComBE.diagram.part.ComBENodeDescriptor>();
+		for (Iterator<?> it = modelElement.getNodes().iterator(); it.hasNext();) {
+			ComBE.Node childElement = (ComBE.Node) it.next();
+			int visualID = ComBE.diagram.part.ComBEVisualIDRegistry.getNodeVisualID(view, childElement);
+			if (visualID == ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID) {
+				result.add(new ComBE.diagram.part.ComBENodeDescriptor(childElement, visualID));
+				continue;
+			}
+			if (visualID == ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID) {
+				result.add(new ComBE.diagram.part.ComBENodeDescriptor(childElement, visualID));
+				continue;
+			}
+		}
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBENodeDescriptor> getParallelBranchParallelBranchNodesCompartment_7002SemanticChildren(View view) {
+		if (false == view.eContainer() instanceof View) {
+			return Collections.emptyList();
+		}
+		View containerView = (View) view.eContainer();
+		if (!containerView.isSetElement()) {
+			return Collections.emptyList();
+		}
+		ComBE.ParallelBranch modelElement = (ComBE.ParallelBranch) containerView.getElement();
+		LinkedList<ComBE.diagram.part.ComBENodeDescriptor> result = new LinkedList<ComBE.diagram.part.ComBENodeDescriptor>();
+		for (Iterator<?> it = modelElement.getNodes().iterator(); it.hasNext();) {
+			ComBE.Node childElement = (ComBE.Node) it.next();
+			int visualID = ComBE.diagram.part.ComBEVisualIDRegistry.getNodeVisualID(view, childElement);
+			if (visualID == ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID) {
+				result.add(new ComBE.diagram.part.ComBENodeDescriptor(childElement, visualID));
+				continue;
+			}
+			if (visualID == ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID) {
+				result.add(new ComBE.diagram.part.ComBENodeDescriptor(childElement, visualID));
+				continue;
+			}
+		}
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBENodeDescriptor> getAtomicSequenceAtomicSequenceNodesCompartment_7003SemanticChildren(View view) {
+		if (false == view.eContainer() instanceof View) {
+			return Collections.emptyList();
+		}
+		View containerView = (View) view.eContainer();
+		if (!containerView.isSetElement()) {
+			return Collections.emptyList();
+		}
+		ComBE.AtomicSequence modelElement = (ComBE.AtomicSequence) containerView.getElement();
+		LinkedList<ComBE.diagram.part.ComBENodeDescriptor> result = new LinkedList<ComBE.diagram.part.ComBENodeDescriptor>();
+		for (Iterator<?> it = modelElement.getNodes().iterator(); it.hasNext();) {
+			ComBE.Node childElement = (ComBE.Node) it.next();
+			int visualID = ComBE.diagram.part.ComBEVisualIDRegistry.getNodeVisualID(view, childElement);
+			if (visualID == ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID) {
+				result.add(new ComBE.diagram.part.ComBENodeDescriptor(childElement, visualID));
+				continue;
+			}
+			if (visualID == ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID) {
+				result.add(new ComBE.diagram.part.ComBENodeDescriptor(childElement, visualID));
+				continue;
+			}
+		}
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	private static Iterator<EObject> getPhantomNodesIterator(Resource resource) {
+		return resource.getAllContents();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getContainedLinks(View view) {
+		switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view)) {
+		case ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID:
+			return getSpecification_1000ContainedLinks(view);
+		case ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID:
+			return getAlternativeBranch_2001ContainedLinks(view);
+		case ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID:
+			return getParallelBranch_2002ContainedLinks(view);
+		case ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID:
+			return getAtomicSequence_2003ContainedLinks(view);
+		case ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID:
+			return getStandardNode_3001ContainedLinks(view);
+		case ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID:
+			return getEmptyNode_3002ContainedLinks(view);
+		case ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID:
+			return getStandardNode_3003ContainedLinks(view);
+		case ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID:
+			return getEmptyNode_3004ContainedLinks(view);
+		case ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID:
+			return getStandardNode_3005ContainedLinks(view);
+		case ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID:
+			return getEmptyNode_3006ContainedLinks(view);
+		}
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getIncomingLinks(View view) {
+		switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view)) {
+		case ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID:
+			return getAlternativeBranch_2001IncomingLinks(view);
+		case ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID:
+			return getParallelBranch_2002IncomingLinks(view);
+		case ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID:
+			return getAtomicSequence_2003IncomingLinks(view);
+		case ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID:
+			return getStandardNode_3001IncomingLinks(view);
+		case ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID:
+			return getEmptyNode_3002IncomingLinks(view);
+		case ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID:
+			return getStandardNode_3003IncomingLinks(view);
+		case ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID:
+			return getEmptyNode_3004IncomingLinks(view);
+		case ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID:
+			return getStandardNode_3005IncomingLinks(view);
+		case ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID:
+			return getEmptyNode_3006IncomingLinks(view);
+		}
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getOutgoingLinks(View view) {
+		switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view)) {
+		case ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID:
+			return getAlternativeBranch_2001OutgoingLinks(view);
+		case ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID:
+			return getParallelBranch_2002OutgoingLinks(view);
+		case ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID:
+			return getAtomicSequence_2003OutgoingLinks(view);
+		case ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID:
+			return getStandardNode_3001OutgoingLinks(view);
+		case ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID:
+			return getEmptyNode_3002OutgoingLinks(view);
+		case ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID:
+			return getStandardNode_3003OutgoingLinks(view);
+		case ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID:
+			return getEmptyNode_3004OutgoingLinks(view);
+		case ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID:
+			return getStandardNode_3005OutgoingLinks(view);
+		case ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID:
+			return getEmptyNode_3006OutgoingLinks(view);
+		}
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getSpecification_1000ContainedLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getAlternativeBranch_2001ContainedLinks(View view) {
+		ComBE.AlternativeBranch modelElement = (ComBE.AlternativeBranch) view.getElement();
+		LinkedList<ComBE.diagram.part.ComBELinkDescriptor> result = new LinkedList<ComBE.diagram.part.ComBELinkDescriptor>();
+		result.addAll(getOutgoingFeatureModelFacetLinks_AlternativeBranch_Children_4001(modelElement));
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getParallelBranch_2002ContainedLinks(View view) {
+		ComBE.ParallelBranch modelElement = (ComBE.ParallelBranch) view.getElement();
+		LinkedList<ComBE.diagram.part.ComBELinkDescriptor> result = new LinkedList<ComBE.diagram.part.ComBELinkDescriptor>();
+		result.addAll(getOutgoingFeatureModelFacetLinks_ParallelBranch_Children_4002(modelElement));
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getAtomicSequence_2003ContainedLinks(View view) {
+		ComBE.AtomicSequence modelElement = (ComBE.AtomicSequence) view.getElement();
+		LinkedList<ComBE.diagram.part.ComBELinkDescriptor> result = new LinkedList<ComBE.diagram.part.ComBELinkDescriptor>();
+		result.addAll(getOutgoingFeatureModelFacetLinks_AtomicSequence_Child_4003(modelElement));
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getStandardNode_3001ContainedLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getEmptyNode_3002ContainedLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getStandardNode_3003ContainedLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getEmptyNode_3004ContainedLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getStandardNode_3005ContainedLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getEmptyNode_3006ContainedLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getAlternativeBranch_2001IncomingLinks(View view) {
+		ComBE.AlternativeBranch modelElement = (ComBE.AlternativeBranch) view.getElement();
+		Map<EObject, Collection<EStructuralFeature.Setting>> crossReferences = EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
+		LinkedList<ComBE.diagram.part.ComBELinkDescriptor> result = new LinkedList<ComBE.diagram.part.ComBELinkDescriptor>();
+		result.addAll(getIncomingFeatureModelFacetLinks_AlternativeBranch_Children_4001(modelElement, crossReferences));
+		result.addAll(getIncomingFeatureModelFacetLinks_ParallelBranch_Children_4002(modelElement, crossReferences));
+		result.addAll(getIncomingFeatureModelFacetLinks_AtomicSequence_Child_4003(modelElement, crossReferences));
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getParallelBranch_2002IncomingLinks(View view) {
+		ComBE.ParallelBranch modelElement = (ComBE.ParallelBranch) view.getElement();
+		Map<EObject, Collection<EStructuralFeature.Setting>> crossReferences = EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
+		LinkedList<ComBE.diagram.part.ComBELinkDescriptor> result = new LinkedList<ComBE.diagram.part.ComBELinkDescriptor>();
+		result.addAll(getIncomingFeatureModelFacetLinks_AlternativeBranch_Children_4001(modelElement, crossReferences));
+		result.addAll(getIncomingFeatureModelFacetLinks_ParallelBranch_Children_4002(modelElement, crossReferences));
+		result.addAll(getIncomingFeatureModelFacetLinks_AtomicSequence_Child_4003(modelElement, crossReferences));
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getAtomicSequence_2003IncomingLinks(View view) {
+		ComBE.AtomicSequence modelElement = (ComBE.AtomicSequence) view.getElement();
+		Map<EObject, Collection<EStructuralFeature.Setting>> crossReferences = EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
+		LinkedList<ComBE.diagram.part.ComBELinkDescriptor> result = new LinkedList<ComBE.diagram.part.ComBELinkDescriptor>();
+		result.addAll(getIncomingFeatureModelFacetLinks_AlternativeBranch_Children_4001(modelElement, crossReferences));
+		result.addAll(getIncomingFeatureModelFacetLinks_ParallelBranch_Children_4002(modelElement, crossReferences));
+		result.addAll(getIncomingFeatureModelFacetLinks_AtomicSequence_Child_4003(modelElement, crossReferences));
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getStandardNode_3001IncomingLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getEmptyNode_3002IncomingLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getStandardNode_3003IncomingLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getEmptyNode_3004IncomingLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getStandardNode_3005IncomingLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getEmptyNode_3006IncomingLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getAlternativeBranch_2001OutgoingLinks(View view) {
+		ComBE.AlternativeBranch modelElement = (ComBE.AlternativeBranch) view.getElement();
+		LinkedList<ComBE.diagram.part.ComBELinkDescriptor> result = new LinkedList<ComBE.diagram.part.ComBELinkDescriptor>();
+		result.addAll(getOutgoingFeatureModelFacetLinks_AlternativeBranch_Children_4001(modelElement));
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getParallelBranch_2002OutgoingLinks(View view) {
+		ComBE.ParallelBranch modelElement = (ComBE.ParallelBranch) view.getElement();
+		LinkedList<ComBE.diagram.part.ComBELinkDescriptor> result = new LinkedList<ComBE.diagram.part.ComBELinkDescriptor>();
+		result.addAll(getOutgoingFeatureModelFacetLinks_ParallelBranch_Children_4002(modelElement));
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getAtomicSequence_2003OutgoingLinks(View view) {
+		ComBE.AtomicSequence modelElement = (ComBE.AtomicSequence) view.getElement();
+		LinkedList<ComBE.diagram.part.ComBELinkDescriptor> result = new LinkedList<ComBE.diagram.part.ComBELinkDescriptor>();
+		result.addAll(getOutgoingFeatureModelFacetLinks_AtomicSequence_Child_4003(modelElement));
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getStandardNode_3001OutgoingLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getEmptyNode_3002OutgoingLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getStandardNode_3003OutgoingLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getEmptyNode_3004OutgoingLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getStandardNode_3005OutgoingLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	public static List<ComBE.diagram.part.ComBELinkDescriptor> getEmptyNode_3006OutgoingLinks(View view) {
+		return Collections.emptyList();
+	}
+
+	/**
+	* @generated
+	*/
+	private static Collection<ComBE.diagram.part.ComBELinkDescriptor> getIncomingFeatureModelFacetLinks_AlternativeBranch_Children_4001(ComBE.BehaviorTree target, Map<EObject, Collection<EStructuralFeature.Setting>> crossReferences) {
+		LinkedList<ComBE.diagram.part.ComBELinkDescriptor> result = new LinkedList<ComBE.diagram.part.ComBELinkDescriptor>();
+		Collection<EStructuralFeature.Setting> settings = crossReferences.get(target);
+		for (EStructuralFeature.Setting setting : settings) {
+			if (setting.getEStructuralFeature() == ComBE.ComBEPackage.eINSTANCE.getAlternativeBranch_Children()) {
+				result.add(new ComBE.diagram.part.ComBELinkDescriptor(setting.getEObject(), target, ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001, ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID));
+			}
+		}
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	private static Collection<ComBE.diagram.part.ComBELinkDescriptor> getIncomingFeatureModelFacetLinks_ParallelBranch_Children_4002(ComBE.BehaviorTree target, Map<EObject, Collection<EStructuralFeature.Setting>> crossReferences) {
+		LinkedList<ComBE.diagram.part.ComBELinkDescriptor> result = new LinkedList<ComBE.diagram.part.ComBELinkDescriptor>();
+		Collection<EStructuralFeature.Setting> settings = crossReferences.get(target);
+		for (EStructuralFeature.Setting setting : settings) {
+			if (setting.getEStructuralFeature() == ComBE.ComBEPackage.eINSTANCE.getParallelBranch_Children()) {
+				result.add(new ComBE.diagram.part.ComBELinkDescriptor(setting.getEObject(), target, ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002, ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID));
+			}
+		}
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	private static Collection<ComBE.diagram.part.ComBELinkDescriptor> getIncomingFeatureModelFacetLinks_AtomicSequence_Child_4003(ComBE.BehaviorTree target, Map<EObject, Collection<EStructuralFeature.Setting>> crossReferences) {
+		LinkedList<ComBE.diagram.part.ComBELinkDescriptor> result = new LinkedList<ComBE.diagram.part.ComBELinkDescriptor>();
+		Collection<EStructuralFeature.Setting> settings = crossReferences.get(target);
+		for (EStructuralFeature.Setting setting : settings) {
+			if (setting.getEStructuralFeature() == ComBE.ComBEPackage.eINSTANCE.getAtomicSequence_Child()) {
+				result.add(new ComBE.diagram.part.ComBELinkDescriptor(setting.getEObject(), target, ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003, ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID));
+			}
+		}
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	private static Collection<ComBE.diagram.part.ComBELinkDescriptor> getOutgoingFeatureModelFacetLinks_AlternativeBranch_Children_4001(ComBE.AlternativeBranch source) {
+		LinkedList<ComBE.diagram.part.ComBELinkDescriptor> result = new LinkedList<ComBE.diagram.part.ComBELinkDescriptor>();
+		for (Iterator<?> destinations = source.getChildren().iterator(); destinations.hasNext();) {
+			ComBE.BehaviorTree destination = (ComBE.BehaviorTree) destinations.next();
+			result.add(new ComBE.diagram.part.ComBELinkDescriptor(source, destination, ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001, ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID));
+		}
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	private static Collection<ComBE.diagram.part.ComBELinkDescriptor> getOutgoingFeatureModelFacetLinks_ParallelBranch_Children_4002(ComBE.ParallelBranch source) {
+		LinkedList<ComBE.diagram.part.ComBELinkDescriptor> result = new LinkedList<ComBE.diagram.part.ComBELinkDescriptor>();
+		for (Iterator<?> destinations = source.getChildren().iterator(); destinations.hasNext();) {
+			ComBE.BehaviorTree destination = (ComBE.BehaviorTree) destinations.next();
+			result.add(new ComBE.diagram.part.ComBELinkDescriptor(source, destination, ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002, ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID));
+		}
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	private static Collection<ComBE.diagram.part.ComBELinkDescriptor> getOutgoingFeatureModelFacetLinks_AtomicSequence_Child_4003(ComBE.AtomicSequence source) {
+		LinkedList<ComBE.diagram.part.ComBELinkDescriptor> result = new LinkedList<ComBE.diagram.part.ComBELinkDescriptor>();
+		ComBE.BehaviorTree destination = source.getChild();
+		if (destination == null) {
+			return result;
+		}
+		result.add(new ComBE.diagram.part.ComBELinkDescriptor(source, destination, ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003, ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID));
+		return result;
+	}
 
 	/**
 	 * Workaround for GMF/352271

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDocumentProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEDocumentProvider.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,970 @@
+package ComBE.diagram.part;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Map;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.resources.IFile;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.resources.IResourceStatus;
+import org.eclipse.core.resources.IStorage;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.core.runtime.jobs.ISchedulingRule;
+import org.eclipse.core.runtime.jobs.MultiRule;
+import org.eclipse.emf.common.notify.Adapter;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.common.notify.Notifier;
+import org.eclipse.emf.common.ui.URIEditorInput;
+import org.eclipse.emf.common.util.URI;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.emf.ecore.resource.ResourceSet;
+import org.eclipse.emf.ecore.util.EContentAdapter;
+import org.eclipse.emf.ecore.util.EcoreUtil;
+import org.eclipse.emf.transaction.NotificationFilter;
+import org.eclipse.emf.transaction.TransactionalEditingDomain;
+import org.eclipse.emf.workspace.util.WorkspaceSynchronizer;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.diagram.core.DiagramEditingDomainFactory;
+import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.AbstractDocumentProvider;
+import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.DiagramDocument;
+import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument;
+import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocumentProvider;
+import org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument;
+import org.eclipse.gmf.runtime.diagram.ui.resources.editor.internal.EditorStatusCodes;
+import org.eclipse.gmf.runtime.diagram.ui.resources.editor.internal.util.DiagramIOUtil;
+import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
+import org.eclipse.gmf.runtime.emf.core.resources.GMFResourceFactory;
+import org.eclipse.gmf.runtime.notation.Diagram;
+import org.eclipse.jface.operation.IRunnableContext;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.swt.widgets.Display;
+import org.eclipse.ui.IEditorInput;
+import org.eclipse.ui.part.FileEditorInput;
+
+/**
+ * @generated
+ */
+public class ComBEDocumentProvider extends AbstractDocumentProvider implements IDiagramDocumentProvider {
+
+	/**
+	* @generated
+	*/
+	protected ElementInfo createElementInfo(Object element) throws CoreException {
+		if (false == element instanceof FileEditorInput && false == element instanceof URIEditorInput) {
+			throw new CoreException(new Status(IStatus.ERROR, ComBE.diagram.part.ComBEDiagramEditorPlugin.ID, 0, NLS.bind(ComBE.diagram.part.Messages.ComBEDocumentProvider_IncorrectInputError, new Object[] { element, "org.eclipse.ui.part.FileEditorInput", "org.eclipse.emf.common.ui.URIEditorInput" }), //$NON-NLS-1$ //$NON-NLS-2$ 
+					null));
+		}
+		IEditorInput editorInput = (IEditorInput) element;
+		IDiagramDocument document = (IDiagramDocument) createDocument(editorInput);
+
+		ResourceSetInfo info = new ResourceSetInfo(document, editorInput);
+		info.setModificationStamp(computeModificationStamp(info));
+		info.fStatus = null;
+		return info;
+	}
+
+	/**
+	* @generated
+	*/
+	protected IDocument createDocument(Object element) throws CoreException {
+		if (false == element instanceof FileEditorInput && false == element instanceof URIEditorInput) {
+			throw new CoreException(new Status(IStatus.ERROR, ComBE.diagram.part.ComBEDiagramEditorPlugin.ID, 0, NLS.bind(ComBE.diagram.part.Messages.ComBEDocumentProvider_IncorrectInputError, new Object[] { element, "org.eclipse.ui.part.FileEditorInput", "org.eclipse.emf.common.ui.URIEditorInput" }), //$NON-NLS-1$ //$NON-NLS-2$ 
+					null));
+		}
+		IDocument document = createEmptyDocument();
+		setDocumentContent(document, (IEditorInput) element);
+		setupDocument(element, document);
+		return document;
+	}
+
+	/**
+	* Sets up the given document as it would be provided for the given element. The
+	* content of the document is not changed. This default implementation is empty.
+	* Subclasses may reimplement.
+	* 
+	* @param element the blue-print element
+	* @param document the document to set up
+	* @generated
+	*/
+	protected void setupDocument(Object element, IDocument document) {
+		// for subclasses
+	}
+
+	/**
+	* @generated
+	*/
+	private long computeModificationStamp(ResourceSetInfo info) {
+		int result = 0;
+		for (Iterator<Resource> it = info.getLoadedResourcesIterator(); it.hasNext();) {
+			Resource nextResource = it.next();
+			IFile file = WorkspaceSynchronizer.getFile(nextResource);
+			if (file != null) {
+				if (file.getLocation() != null) {
+					result += file.getLocation().toFile().lastModified();
+				} else {
+					result += file.getModificationStamp();
+				}
+			}
+		}
+		return result;
+	}
+
+	/**
+	* @generated
+	*/
+	protected IDocument createEmptyDocument() {
+		DiagramDocument document = new DiagramDocument();
+		document.setEditingDomain(createEditingDomain());
+		return document;
+	}
+
+	/**
+	* @generated
+	*/
+	private TransactionalEditingDomain createEditingDomain() {
+		TransactionalEditingDomain editingDomain = DiagramEditingDomainFactory.getInstance().createEditingDomain();
+		editingDomain.setID("org.behaviorengineering.combe.graphical.diagram.EditingDomain"); //$NON-NLS-1$
+		final NotificationFilter diagramResourceModifiedFilter = NotificationFilter.createNotifierFilter(editingDomain.getResourceSet()).and(NotificationFilter.createEventTypeFilter(Notification.ADD)).and(NotificationFilter.createFeatureFilter(ResourceSet.class, ResourceSet.RESOURCE_SET__RESOURCES));
+		editingDomain.getResourceSet().eAdapters().add(new Adapter() {
+
+			private Notifier myTarger;
+
+			public Notifier getTarget() {
+				return myTarger;
+			}
+
+			public boolean isAdapterForType(Object type) {
+				return false;
+			}
+
+			public void notifyChanged(Notification notification) {
+				if (diagramResourceModifiedFilter.matches(notification)) {
+					Object value = notification.getNewValue();
+					if (value instanceof Resource) {
+						((Resource) value).setTrackingModification(true);
+					}
+				}
+			}
+
+			public void setTarget(Notifier newTarget) {
+				myTarger = newTarget;
+			}
+
+		});
+
+		return editingDomain;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setDocumentContent(IDocument document, IEditorInput element) throws CoreException {
+		IDiagramDocument diagramDocument = (IDiagramDocument) document;
+		TransactionalEditingDomain domain = diagramDocument.getEditingDomain();
+		if (element instanceof FileEditorInput) {
+			IStorage storage = ((FileEditorInput) element).getStorage();
+			Diagram diagram = DiagramIOUtil.load(domain, storage, true, getProgressMonitor());
+			document.setContent(diagram);
+		} else if (element instanceof URIEditorInput) {
+			URI uri = ((URIEditorInput) element).getURI();
+			Resource resource = null;
+			try {
+				resource = domain.getResourceSet().getResource(uri.trimFragment(), false);
+				if (resource == null) {
+					resource = domain.getResourceSet().createResource(uri.trimFragment());
+				}
+				if (!resource.isLoaded()) {
+					try {
+						Map options = new HashMap(GMFResourceFactory.getDefaultLoadOptions());
+						// @see 171060 
+						// options.put(org.eclipse.emf.ecore.xmi.XMLResource.OPTION_RECORD_UNKNOWN_FEATURE, Boolean.TRUE);
+						resource.load(options);
+					} catch (IOException e) {
+						resource.unload();
+						throw e;
+					}
+				}
+				if (uri.fragment() != null) {
+					EObject rootElement = resource.getEObject(uri.fragment());
+					if (rootElement instanceof Diagram) {
+						document.setContent((Diagram) rootElement);
+						return;
+					}
+				} else {
+					for (Iterator it = resource.getContents().iterator(); it.hasNext();) {
+						Object rootElement = it.next();
+						if (rootElement instanceof Diagram) {
+							document.setContent((Diagram) rootElement);
+							return;
+						}
+					}
+				}
+				throw new RuntimeException(ComBE.diagram.part.Messages.ComBEDocumentProvider_NoDiagramInResourceError);
+			} catch (Exception e) {
+				CoreException thrownExcp = null;
+				if (e instanceof CoreException) {
+					thrownExcp = (CoreException) e;
+				} else {
+					String msg = e.getLocalizedMessage();
+					thrownExcp = new CoreException(new Status(IStatus.ERROR, ComBE.diagram.part.ComBEDiagramEditorPlugin.ID, 0, msg != null ? msg : ComBE.diagram.part.Messages.ComBEDocumentProvider_DiagramLoadingError, e));
+				}
+				throw thrownExcp;
+			}
+		} else {
+			throw new CoreException(new Status(IStatus.ERROR, ComBE.diagram.part.ComBEDiagramEditorPlugin.ID, 0, NLS.bind(ComBE.diagram.part.Messages.ComBEDocumentProvider_IncorrectInputError, new Object[] { element, "org.eclipse.ui.part.FileEditorInput", "org.eclipse.emf.common.ui.URIEditorInput" }), //$NON-NLS-1$ //$NON-NLS-2$ 
+					null));
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public long getModificationStamp(Object element) {
+		ResourceSetInfo info = getResourceSetInfo(element);
+		if (info != null) {
+			return computeModificationStamp(info);
+		}
+		return super.getModificationStamp(element);
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean isDeleted(Object element) {
+		IDiagramDocument document = getDiagramDocument(element);
+		if (document != null) {
+			Resource diagramResource = document.getDiagram().eResource();
+			if (diagramResource != null) {
+				IFile file = WorkspaceSynchronizer.getFile(diagramResource);
+				return file == null || file.getLocation() == null || !file.getLocation().toFile().exists();
+			}
+		}
+		return super.isDeleted(element);
+	}
+
+	/**
+	* @generated
+	*/
+	public ResourceSetInfo getResourceSetInfo(Object editorInput) {
+		return (ResourceSetInfo) super.getElementInfo(editorInput);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void disposeElementInfo(Object element, ElementInfo info) {
+		if (info instanceof ResourceSetInfo) {
+			ResourceSetInfo resourceSetInfo = (ResourceSetInfo) info;
+			resourceSetInfo.dispose();
+		}
+		super.disposeElementInfo(element, info);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void doValidateState(Object element, Object computationContext) throws CoreException {
+		ResourceSetInfo info = getResourceSetInfo(element);
+		if (info != null) {
+			LinkedList<IFile> files2Validate = new LinkedList<IFile>();
+			for (Iterator<Resource> it = info.getLoadedResourcesIterator(); it.hasNext();) {
+				Resource nextResource = it.next();
+				IFile file = WorkspaceSynchronizer.getFile(nextResource);
+				if (file != null && file.isReadOnly()) {
+					files2Validate.add(file);
+				}
+			}
+			ResourcesPlugin.getWorkspace().validateEdit((IFile[]) files2Validate.toArray(new IFile[files2Validate.size()]), computationContext);
+		}
+
+		super.doValidateState(element, computationContext);
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean isReadOnly(Object element) {
+		ResourceSetInfo info = getResourceSetInfo(element);
+		if (info != null) {
+			if (info.isUpdateCache()) {
+				try {
+					updateCache(element);
+				} catch (CoreException ex) {
+					ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError(ComBE.diagram.part.Messages.ComBEDocumentProvider_isModifiable, ex);
+					// Error message to log was initially taken from org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide.internal.l10n.EditorMessages.StorageDocumentProvider_isModifiable
+				}
+			}
+			return info.isReadOnly();
+		}
+		return super.isReadOnly(element);
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean isModifiable(Object element) {
+		if (!isStateValidated(element)) {
+			if (element instanceof FileEditorInput || element instanceof URIEditorInput) {
+				return true;
+			}
+		}
+		ResourceSetInfo info = getResourceSetInfo(element);
+		if (info != null) {
+			if (info.isUpdateCache()) {
+				try {
+					updateCache(element);
+				} catch (CoreException ex) {
+					ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError(ComBE.diagram.part.Messages.ComBEDocumentProvider_isModifiable, ex);
+					// Error message to log was initially taken from org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide.internal.l10n.EditorMessages.StorageDocumentProvider_isModifiable
+				}
+			}
+			return info.isModifiable();
+		}
+		return super.isModifiable(element);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void updateCache(Object element) throws CoreException {
+		ResourceSetInfo info = getResourceSetInfo(element);
+		if (info != null) {
+			for (Iterator<Resource> it = info.getLoadedResourcesIterator(); it.hasNext();) {
+				Resource nextResource = it.next();
+				IFile file = WorkspaceSynchronizer.getFile(nextResource);
+				if (file != null && file.isReadOnly()) {
+					info.setReadOnly(true);
+					info.setModifiable(false);
+					return;
+				}
+			}
+			info.setReadOnly(false);
+			info.setModifiable(true);
+			return;
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void doUpdateStateCache(Object element) throws CoreException {
+		ResourceSetInfo info = getResourceSetInfo(element);
+		if (info != null) {
+			info.setUpdateCache(true);
+		}
+		super.doUpdateStateCache(element);
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean isSynchronized(Object element) {
+		ResourceSetInfo info = getResourceSetInfo(element);
+		if (info != null) {
+			return info.isSynchronized();
+		}
+		return super.isSynchronized(element);
+	}
+
+	/**
+	* @generated
+	*/
+	protected ISchedulingRule getResetRule(Object element) {
+		ResourceSetInfo info = getResourceSetInfo(element);
+		if (info != null) {
+			LinkedList<ISchedulingRule> rules = new LinkedList<ISchedulingRule>();
+			for (Iterator<Resource> it = info.getLoadedResourcesIterator(); it.hasNext();) {
+				Resource nextResource = it.next();
+				IFile file = WorkspaceSynchronizer.getFile(nextResource);
+				if (file != null) {
+					rules.add(ResourcesPlugin.getWorkspace().getRuleFactory().modifyRule(file));
+				}
+			}
+			return new MultiRule((ISchedulingRule[]) rules.toArray(new ISchedulingRule[rules.size()]));
+		}
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ISchedulingRule getSaveRule(Object element) {
+		ResourceSetInfo info = getResourceSetInfo(element);
+		if (info != null) {
+			LinkedList<ISchedulingRule> rules = new LinkedList<ISchedulingRule>();
+			for (Iterator<Resource> it = info.getLoadedResourcesIterator(); it.hasNext();) {
+				Resource nextResource = it.next();
+				IFile file = WorkspaceSynchronizer.getFile(nextResource);
+				if (file != null) {
+					rules.add(computeSchedulingRule(file));
+				}
+			}
+			return new MultiRule((ISchedulingRule[]) rules.toArray(new ISchedulingRule[rules.size()]));
+		}
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ISchedulingRule getSynchronizeRule(Object element) {
+		ResourceSetInfo info = getResourceSetInfo(element);
+		if (info != null) {
+			LinkedList<ISchedulingRule> rules = new LinkedList<ISchedulingRule>();
+			for (Iterator<Resource> it = info.getLoadedResourcesIterator(); it.hasNext();) {
+				Resource nextResource = it.next();
+				IFile file = WorkspaceSynchronizer.getFile(nextResource);
+				if (file != null) {
+					rules.add(ResourcesPlugin.getWorkspace().getRuleFactory().refreshRule(file));
+				}
+			}
+			return new MultiRule((ISchedulingRule[]) rules.toArray(new ISchedulingRule[rules.size()]));
+		}
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected ISchedulingRule getValidateStateRule(Object element) {
+		ResourceSetInfo info = getResourceSetInfo(element);
+		if (info != null) {
+			LinkedList<ISchedulingRule> files = new LinkedList<ISchedulingRule>();
+			for (Iterator<Resource> it = info.getLoadedResourcesIterator(); it.hasNext();) {
+				Resource nextResource = it.next();
+				IFile file = WorkspaceSynchronizer.getFile(nextResource);
+				if (file != null) {
+					files.add(file);
+				}
+			}
+			return ResourcesPlugin.getWorkspace().getRuleFactory().validateEditRule((IFile[]) files.toArray(new IFile[files.size()]));
+		}
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	private ISchedulingRule computeSchedulingRule(IResource toCreateOrModify) {
+		if (toCreateOrModify.exists())
+			return ResourcesPlugin.getWorkspace().getRuleFactory().modifyRule(toCreateOrModify);
+
+		IResource parent = toCreateOrModify;
+		do {
+			/*
+			 * XXX This is a workaround for
+			 * https://bugs.eclipse.org/bugs/show_bug.cgi?id=67601
+			 * IResourceRuleFactory.createRule should iterate the hierarchy
+			 * itself.
+			 */
+			toCreateOrModify = parent;
+			parent = toCreateOrModify.getParent();
+		} while (parent != null && !parent.exists());
+
+		return ResourcesPlugin.getWorkspace().getRuleFactory().createRule(toCreateOrModify);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void doSynchronize(Object element, IProgressMonitor monitor) throws CoreException {
+		ResourceSetInfo info = getResourceSetInfo(element);
+		if (info != null) {
+			for (Iterator<Resource> it = info.getLoadedResourcesIterator(); it.hasNext();) {
+				Resource nextResource = it.next();
+				handleElementChanged(info, nextResource, monitor);
+			}
+			return;
+		}
+		super.doSynchronize(element, monitor);
+	}
+
+	/**
+	* @generated
+	*/
+	protected void doSaveDocument(IProgressMonitor monitor, Object element, IDocument document, boolean overwrite) throws CoreException {
+		ResourceSetInfo info = getResourceSetInfo(element);
+		if (info != null) {
+			if (!overwrite && !info.isSynchronized()) {
+				throw new CoreException(new Status(IStatus.ERROR, ComBE.diagram.part.ComBEDiagramEditorPlugin.ID, IResourceStatus.OUT_OF_SYNC_LOCAL, ComBE.diagram.part.Messages.ComBEDocumentProvider_UnsynchronizedFileSaveError, null));
+			}
+			info.stopResourceListening();
+			fireElementStateChanging(element);
+			try {
+				monitor.beginTask(ComBE.diagram.part.Messages.ComBEDocumentProvider_SaveDiagramTask, info.getResourceSet().getResources().size() + 1); //"Saving diagram"
+				for (Iterator<Resource> it = info.getLoadedResourcesIterator(); it.hasNext();) {
+					Resource nextResource = it.next();
+					monitor.setTaskName(NLS.bind(ComBE.diagram.part.Messages.ComBEDocumentProvider_SaveNextResourceTask, nextResource.getURI()));
+					if (nextResource.isLoaded() && !info.getEditingDomain().isReadOnly(nextResource)) {
+						try {
+							nextResource.save(ComBE.diagram.part.ComBEDiagramEditorUtil.getSaveOptions());
+						} catch (IOException e) {
+							fireElementStateChangeFailed(element);
+							throw new CoreException(new Status(IStatus.ERROR, ComBE.diagram.part.ComBEDiagramEditorPlugin.ID, EditorStatusCodes.RESOURCE_FAILURE, e.getLocalizedMessage(), null));
+						}
+					}
+					monitor.worked(1);
+				}
+				monitor.done();
+				info.setModificationStamp(computeModificationStamp(info));
+			} catch (RuntimeException x) {
+				fireElementStateChangeFailed(element);
+				throw x;
+			} finally {
+				info.startResourceListening();
+			}
+		} else {
+			URI newResoruceURI;
+			List<IFile> affectedFiles = null;
+			if (element instanceof FileEditorInput) {
+				IFile newFile = ((FileEditorInput) element).getFile();
+				affectedFiles = Collections.singletonList(newFile);
+				newResoruceURI = URI.createPlatformResourceURI(newFile.getFullPath().toString(), true);
+			} else if (element instanceof URIEditorInput) {
+				newResoruceURI = ((URIEditorInput) element).getURI();
+			} else {
+				fireElementStateChangeFailed(element);
+				throw new CoreException(new Status(IStatus.ERROR, ComBE.diagram.part.ComBEDiagramEditorPlugin.ID, 0, NLS.bind(ComBE.diagram.part.Messages.ComBEDocumentProvider_IncorrectInputError, new Object[] { element, "org.eclipse.ui.part.FileEditorInput", "org.eclipse.emf.common.ui.URIEditorInput" }), //$NON-NLS-1$ //$NON-NLS-2$ 
+						null));
+			}
+			if (false == document instanceof IDiagramDocument) {
+				fireElementStateChangeFailed(element);
+				throw new CoreException(new Status(IStatus.ERROR, ComBE.diagram.part.ComBEDiagramEditorPlugin.ID, 0, "Incorrect document used: " + document + " instead of org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument", null)); //$NON-NLS-1$ //$NON-NLS-2$
+			}
+			IDiagramDocument diagramDocument = (IDiagramDocument) document;
+			final Resource newResource = diagramDocument.getEditingDomain().getResourceSet().createResource(newResoruceURI);
+			final Diagram diagramCopy = (Diagram) EcoreUtil.copy(diagramDocument.getDiagram());
+			try {
+				new AbstractTransactionalCommand(diagramDocument.getEditingDomain(), NLS.bind(ComBE.diagram.part.Messages.ComBEDocumentProvider_SaveAsOperation, diagramCopy.getName()), affectedFiles) {
+					protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+						newResource.getContents().add(diagramCopy);
+						return CommandResult.newOKCommandResult();
+					}
+				}.execute(monitor, null);
+				newResource.save(ComBE.diagram.part.ComBEDiagramEditorUtil.getSaveOptions());
+			} catch (ExecutionException e) {
+				fireElementStateChangeFailed(element);
+				throw new CoreException(new Status(IStatus.ERROR, ComBE.diagram.part.ComBEDiagramEditorPlugin.ID, 0, e.getLocalizedMessage(), null));
+			} catch (IOException e) {
+				fireElementStateChangeFailed(element);
+				throw new CoreException(new Status(IStatus.ERROR, ComBE.diagram.part.ComBEDiagramEditorPlugin.ID, 0, e.getLocalizedMessage(), null));
+			}
+			newResource.unload();
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleElementChanged(ResourceSetInfo info, Resource changedResource, IProgressMonitor monitor) {
+		IFile file = WorkspaceSynchronizer.getFile(changedResource);
+		if (file != null) {
+			try {
+				file.refreshLocal(IResource.DEPTH_INFINITE, monitor);
+			} catch (CoreException ex) {
+				ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError(ComBE.diagram.part.Messages.ComBEDocumentProvider_handleElementContentChanged, ex);
+				// Error message to log was initially taken from org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide.internal.l10n.EditorMessages.FileDocumentProvider_handleElementContentChanged
+			}
+		}
+		changedResource.unload();
+
+		fireElementContentAboutToBeReplaced(info.getEditorInput());
+		removeUnchangedElementListeners(info.getEditorInput(), info);
+		info.fStatus = null;
+		try {
+			setDocumentContent(info.fDocument, info.getEditorInput());
+		} catch (CoreException e) {
+			info.fStatus = e.getStatus();
+		}
+		if (!info.fCanBeSaved) {
+			info.setModificationStamp(computeModificationStamp(info));
+		}
+		addUnchangedElementListeners(info.getEditorInput(), info);
+		fireElementContentReplaced(info.getEditorInput());
+	}
+
+	/**
+	* @generated
+	*/
+	protected void handleElementMoved(IEditorInput input, URI uri) {
+		if (input instanceof FileEditorInput) {
+			IFile newFile = ResourcesPlugin.getWorkspace().getRoot().getFile(new Path(URI.decode(uri.path())).removeFirstSegments(1));
+			fireElementMoved(input, newFile == null ? null : new FileEditorInput(newFile));
+			return;
+		}
+		// TODO: append suffix to the URI! (use diagram as a parameter)
+		fireElementMoved(input, new URIEditorInput(uri));
+	}
+
+	/**
+	* @generated
+	*/
+	public IEditorInput createInputWithEditingDomain(IEditorInput editorInput, TransactionalEditingDomain domain) {
+		return editorInput;
+	}
+
+	/**
+	* @generated
+	*/
+	public IDiagramDocument getDiagramDocument(Object element) {
+		IDocument doc = getDocument(element);
+		if (doc instanceof IDiagramDocument) {
+			return (IDiagramDocument) doc;
+		}
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected IRunnableContext getOperationRunner(IProgressMonitor monitor) {
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected class ResourceSetInfo extends ElementInfo {
+
+		/**
+		* @generated
+		*/
+		private long myModificationStamp = IResource.NULL_STAMP;
+
+		/**
+		* @generated
+		*/
+		private WorkspaceSynchronizer mySynchronizer;
+
+		/**
+		* @generated
+		*/
+		private LinkedList<Resource> myUnSynchronizedResources = new LinkedList<Resource>();
+
+		/**
+		* @generated
+		*/
+		private IDiagramDocument myDocument;
+
+		/**
+		* @generated
+		*/
+		private IEditorInput myEditorInput;
+
+		/**
+		* @generated
+		*/
+		private boolean myUpdateCache = true;
+
+		/**
+		* @generated
+		*/
+		private boolean myModifiable = false;
+
+		/**
+		* @generated
+		*/
+		private boolean myReadOnly = true;
+
+		/**
+		* @generated
+		*/
+		private ResourceSetModificationListener myResourceSetListener;
+
+		/**
+		* @generated
+		*/
+		public ResourceSetInfo(IDiagramDocument document, IEditorInput editorInput) {
+			super(document);
+			myDocument = document;
+			myEditorInput = editorInput;
+			startResourceListening();
+			myResourceSetListener = new ResourceSetModificationListener(this);
+			getResourceSet().eAdapters().add(myResourceSetListener);
+		}
+
+		/**
+		* @generated
+		*/
+		public long getModificationStamp() {
+			return myModificationStamp;
+		}
+
+		/**
+		* @generated
+		*/
+		public void setModificationStamp(long modificationStamp) {
+			myModificationStamp = modificationStamp;
+		}
+
+		/**
+		* @generated
+		*/
+		public TransactionalEditingDomain getEditingDomain() {
+			return myDocument.getEditingDomain();
+		}
+
+		/**
+		* @generated
+		*/
+		public ResourceSet getResourceSet() {
+			return getEditingDomain().getResourceSet();
+		}
+
+		/**
+		* @generated
+		*/
+		public Iterator<Resource> getLoadedResourcesIterator() {
+			return new ArrayList<Resource>(getResourceSet().getResources()).iterator();
+		}
+
+		/**
+		* @generated
+		*/
+		public IEditorInput getEditorInput() {
+			return myEditorInput;
+		}
+
+		/**
+		* @generated
+		*/
+		public void dispose() {
+			stopResourceListening();
+			getResourceSet().eAdapters().remove(myResourceSetListener);
+			for (Iterator<Resource> it = getLoadedResourcesIterator(); it.hasNext();) {
+				Resource resource = it.next();
+				resource.unload();
+			}
+			getEditingDomain().dispose();
+		}
+
+		/**
+		* @generated
+		*/
+		public boolean isSynchronized() {
+			return myUnSynchronizedResources.size() == 0;
+		}
+
+		/**
+		* @generated
+		*/
+		public void setUnSynchronized(Resource resource) {
+			myUnSynchronizedResources.add(resource);
+		}
+
+		/**
+		* @generated
+		*/
+		public void setSynchronized(Resource resource) {
+			myUnSynchronizedResources.remove(resource);
+		}
+
+		/**
+		* @generated
+		*/
+		public final void stopResourceListening() {
+			mySynchronizer.dispose();
+			mySynchronizer = null;
+		}
+
+		/**
+		* @generated
+		*/
+		public final void startResourceListening() {
+			mySynchronizer = new WorkspaceSynchronizer(getEditingDomain(), new SynchronizerDelegate());
+		}
+
+		/**
+		* @generated
+		*/
+		public boolean isUpdateCache() {
+			return myUpdateCache;
+		}
+
+		/**
+		* @generated
+		*/
+		public void setUpdateCache(boolean update) {
+			myUpdateCache = update;
+		}
+
+		/**
+		* @generated
+		*/
+		public boolean isModifiable() {
+			return myModifiable;
+		}
+
+		/**
+		* @generated
+		*/
+		public void setModifiable(boolean modifiable) {
+			myModifiable = modifiable;
+		}
+
+		/**
+		* @generated
+		*/
+		public boolean isReadOnly() {
+			return myReadOnly;
+		}
+
+		/**
+		* @generated
+		*/
+		public void setReadOnly(boolean readOnly) {
+			myReadOnly = readOnly;
+		}
+
+		/**
+		* @generated
+		*/
+		private class SynchronizerDelegate implements WorkspaceSynchronizer.Delegate {
+
+			/**
+			* @generated
+			*/
+			public void dispose() {
+			}
+
+			/**
+			* @generated
+			*/
+			public boolean handleResourceChanged(final Resource resource) {
+				synchronized (ResourceSetInfo.this) {
+					if (ResourceSetInfo.this.fCanBeSaved) {
+						ResourceSetInfo.this.setUnSynchronized(resource);
+						return true;
+					}
+				}
+				Display.getDefault().asyncExec(new Runnable() {
+					public void run() {
+						handleElementChanged(ResourceSetInfo.this, resource, null);
+					}
+				});
+				return true;
+			}
+
+			/**
+			* @generated
+			*/
+			public boolean handleResourceDeleted(Resource resource) {
+				synchronized (ResourceSetInfo.this) {
+					if (ResourceSetInfo.this.fCanBeSaved) {
+						ResourceSetInfo.this.setUnSynchronized(resource);
+						return true;
+					}
+				}
+				Display.getDefault().asyncExec(new Runnable() {
+					public void run() {
+						fireElementDeleted(ResourceSetInfo.this.getEditorInput());
+					}
+				});
+				return true;
+			}
+
+			/**
+			* @generated
+			*/
+			public boolean handleResourceMoved(Resource resource, final URI newURI) {
+				synchronized (ResourceSetInfo.this) {
+					if (ResourceSetInfo.this.fCanBeSaved) {
+						ResourceSetInfo.this.setUnSynchronized(resource);
+						return true;
+					}
+				}
+				if (myDocument.getDiagram().eResource() == resource) {
+					Display.getDefault().asyncExec(new Runnable() {
+						public void run() {
+							handleElementMoved(ResourceSetInfo.this.getEditorInput(), newURI);
+						}
+					});
+				} else {
+					handleResourceDeleted(resource);
+				}
+				return true;
+			}
+
+		}
+
+	}
+
+	/**
+	* @generated
+	*/
+	private class ResourceSetModificationListener extends EContentAdapter {
+
+		/**
+		* @generated
+		*/
+		private NotificationFilter myModifiedFilter;
+
+		/**
+		* @generated
+		*/
+		private ResourceSetInfo myInfo;
+
+		/**
+		* @generated
+		*/
+		public ResourceSetModificationListener(ResourceSetInfo info) {
+			myInfo = info;
+			myModifiedFilter = NotificationFilter.createEventTypeFilter(Notification.SET).or(NotificationFilter.createEventTypeFilter(Notification.UNSET)).and(NotificationFilter.createFeatureFilter(Resource.class, Resource.RESOURCE__IS_MODIFIED));
+		}
+
+		/**
+		* @generated
+		*/
+		public void notifyChanged(Notification notification) {
+			if (notification.getNotifier() instanceof ResourceSet) {
+				super.notifyChanged(notification);
+			}
+			if (!notification.isTouch() && myModifiedFilter.matches(notification)) {
+				if (notification.getNotifier() instanceof Resource) {
+					Resource resource = (Resource) notification.getNotifier();
+					if (resource.isLoaded()) {
+						boolean modified = false;
+						for (Iterator/*<org.eclipse.emf.ecore.resource.Resource>*/it = myInfo.getLoadedResourcesIterator(); it.hasNext() && !modified;) {
+							Resource nextResource = (Resource) it.next();
+							if (nextResource.isLoaded()) {
+								modified = nextResource.isModified();
+							}
+						}
+						boolean dirtyStateChanged = false;
+						synchronized (myInfo) {
+							if (modified != myInfo.fCanBeSaved) {
+								myInfo.fCanBeSaved = modified;
+								dirtyStateChanged = true;
+							}
+							if (!resource.isModified()) {
+								myInfo.setSynchronized(resource);
+							}
+						}
+						if (dirtyStateChanged) {
+							fireElementDirtyStateChanged(myInfo.getEditorInput(), modified);
+
+							if (!modified) {
+								myInfo.setModificationStamp(computeModificationStamp(myInfo));
+							}
+						}
+					}
+				}
+			}
+		}
+
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEInitDiagramFileAction.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEInitDiagramFileAction.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,85 @@
+package ComBE.diagram.part;
+
+import org.eclipse.core.resources.IFile;
+import org.eclipse.emf.common.util.URI;
+import org.eclipse.emf.common.util.WrappedException;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.emf.ecore.resource.ResourceSet;
+import org.eclipse.emf.transaction.TransactionalEditingDomain;
+import org.eclipse.gmf.runtime.emf.core.GMFEditingDomainFactory;
+import org.eclipse.jface.action.IAction;
+import org.eclipse.jface.dialogs.MessageDialog;
+import org.eclipse.jface.viewers.ISelection;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.jface.wizard.Wizard;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.swt.widgets.Shell;
+import org.eclipse.ui.IObjectActionDelegate;
+import org.eclipse.ui.IWorkbenchPart;
+
+/**
+ * @generated
+ */
+public class ComBEInitDiagramFileAction implements IObjectActionDelegate {
+
+	/**
+	* @generated
+	*/
+	private IWorkbenchPart targetPart;
+
+	/**
+	* @generated
+	*/
+	private URI domainModelURI;
+
+	/**
+	* @generated
+	*/
+	public void setActivePart(IAction action, IWorkbenchPart targetPart) {
+		this.targetPart = targetPart;
+	}
+
+	/**
+	* @generated
+	*/
+	public void selectionChanged(IAction action, ISelection selection) {
+		domainModelURI = null;
+		action.setEnabled(false);
+		if (selection instanceof IStructuredSelection == false || selection.isEmpty()) {
+			return;
+		}
+		IFile file = (IFile) ((IStructuredSelection) selection).getFirstElement();
+		domainModelURI = URI.createPlatformResourceURI(file.getFullPath().toString(), true);
+		action.setEnabled(true);
+	}
+
+	/**
+	* @generated
+	*/
+	private Shell getShell() {
+		return targetPart.getSite().getShell();
+	}
+
+	/**
+	* @generated
+	*/
+	public void run(IAction action) {
+		TransactionalEditingDomain editingDomain = GMFEditingDomainFactory.INSTANCE.createEditingDomain();
+		ResourceSet resourceSet = editingDomain.getResourceSet();
+		EObject diagramRoot = null;
+		try {
+			Resource resource = resourceSet.getResource(domainModelURI, true);
+			diagramRoot = (EObject) resource.getContents().get(0);
+		} catch (WrappedException ex) {
+			ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Unable to load resource: " + domainModelURI, ex); //$NON-NLS-1$
+		}
+		if (diagramRoot == null) {
+			MessageDialog.openError(getShell(), ComBE.diagram.part.Messages.InitDiagramFile_ResourceErrorDialogTitle, ComBE.diagram.part.Messages.InitDiagramFile_ResourceErrorDialogMessage);
+			return;
+		}
+		Wizard wizard = new ComBE.diagram.part.ComBENewDiagramFileWizard(domainModelURI, diagramRoot, editingDomain);
+		wizard.setWindowTitle(NLS.bind(ComBE.diagram.part.Messages.InitDiagramFile_WizardTitle, ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID));
+		ComBE.diagram.part.ComBEDiagramEditorUtil.runWizard(getShell(), wizard, "InitDiagramFile"); //$NON-NLS-1$
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBELinkDescriptor.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBELinkDescriptor.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,90 @@
+package ComBE.diagram.part;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+
+/**
+* @generated
+*/
+public class ComBELinkDescriptor extends ComBE.diagram.part.ComBENodeDescriptor {
+
+	/**
+	* @generated
+	*/
+	private EObject mySource;
+
+	/**
+	* @generated
+	*/
+	private EObject myDestination;
+
+	/**
+	* @generated
+	*/
+	private IAdaptable mySemanticAdapter;
+
+	/**
+	* @generated
+	*/
+	private ComBELinkDescriptor(EObject source, EObject destination, EObject linkElement, int linkVID) {
+		super(linkElement, linkVID);
+		mySource = source;
+		myDestination = destination;
+	}
+
+	/**
+	* @generated
+	*/
+	public ComBELinkDescriptor(EObject source, EObject destination, IElementType elementType, int linkVID) {
+		this(source, destination, (EObject) null, linkVID);
+		final IElementType elementTypeCopy = elementType;
+		mySemanticAdapter = new IAdaptable() {
+			public Object getAdapter(Class adapter) {
+				if (IElementType.class.equals(adapter)) {
+					return elementTypeCopy;
+				}
+				return null;
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public ComBELinkDescriptor(EObject source, EObject destination, EObject linkElement, IElementType elementType, int linkVID) {
+		this(source, destination, linkElement, linkVID);
+		final IElementType elementTypeCopy = elementType;
+		mySemanticAdapter = new EObjectAdapter(linkElement) {
+			public Object getAdapter(Class adapter) {
+				if (IElementType.class.equals(adapter)) {
+					return elementTypeCopy;
+				}
+				return super.getAdapter(adapter);
+			}
+		};
+	}
+
+	/**
+	* @generated
+	*/
+	public EObject getSource() {
+		return mySource;
+	}
+
+	/**
+	* @generated
+	*/
+	public EObject getDestination() {
+		return myDestination;
+	}
+
+	/**
+	* @generated
+	*/
+	public IAdaptable getSemanticAdapter() {
+		return mySemanticAdapter;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEMatchingStrategy.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEMatchingStrategy.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,34 @@
+package ComBE.diagram.part;
+
+import org.eclipse.emf.common.ui.URIEditorInput;
+import org.eclipse.ui.IEditorInput;
+import org.eclipse.ui.IEditorMatchingStrategy;
+import org.eclipse.ui.IEditorReference;
+import org.eclipse.ui.PartInitException;
+
+/**
+* @generated
+*/
+public class ComBEMatchingStrategy implements IEditorMatchingStrategy {
+
+	/**
+	* @generated
+	*/
+	public boolean matches(IEditorReference editorRef, IEditorInput input) {
+		IEditorInput editorInput;
+		try {
+			editorInput = editorRef.getEditorInput();
+		} catch (PartInitException e) {
+			return false;
+		}
+
+		if (editorInput.equals(input)) {
+			return true;
+		}
+		if (editorInput instanceof URIEditorInput && input instanceof URIEditorInput) {
+			return ((URIEditorInput) editorInput).getURI().equals(((URIEditorInput) input).getURI());
+		}
+		return false;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBENewDiagramFileWizard.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBENewDiagramFileWizard.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,160 @@
+package ComBE.diagram.part;
+
+import java.io.IOException;
+import java.util.LinkedList;
+
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.core.commands.operations.OperationHistoryFactory;
+import org.eclipse.core.resources.IFile;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.emf.common.util.URI;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.emf.ecore.resource.ResourceSet;
+import org.eclipse.emf.transaction.TransactionalEditingDomain;
+import org.eclipse.gmf.runtime.common.core.command.CommandResult;
+import org.eclipse.gmf.runtime.diagram.core.services.ViewService;
+import org.eclipse.gmf.runtime.diagram.core.services.view.CreateDiagramViewOperation;
+import org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand;
+import org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter;
+import org.eclipse.gmf.runtime.notation.Diagram;
+import org.eclipse.jface.viewers.StructuredSelection;
+import org.eclipse.jface.wizard.Wizard;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.ui.PartInitException;
+import org.eclipse.ui.dialogs.WizardNewFileCreationPage;
+
+/**
+ * @generated
+ */
+public class ComBENewDiagramFileWizard extends Wizard {
+
+	/**
+	* @generated
+	*/
+	private WizardNewFileCreationPage myFileCreationPage;
+
+	/**
+	* @generated
+	*/
+	private ComBE.diagram.part.ModelElementSelectionPage diagramRootElementSelectionPage;
+
+	/**
+	* @generated
+	*/
+	private TransactionalEditingDomain myEditingDomain;
+
+	/**
+	* @generated
+	*/
+	public ComBENewDiagramFileWizard(URI domainModelURI, EObject diagramRoot, TransactionalEditingDomain editingDomain) {
+		assert domainModelURI != null : "Domain model uri must be specified"; //$NON-NLS-1$
+		assert diagramRoot != null : "Doagram root element must be specified"; //$NON-NLS-1$
+		assert editingDomain != null : "Editing domain must be specified"; //$NON-NLS-1$
+
+		myFileCreationPage = new WizardNewFileCreationPage(ComBE.diagram.part.Messages.ComBENewDiagramFileWizard_CreationPageName, StructuredSelection.EMPTY);
+		myFileCreationPage.setTitle(ComBE.diagram.part.Messages.ComBENewDiagramFileWizard_CreationPageTitle);
+		myFileCreationPage.setDescription(NLS.bind(ComBE.diagram.part.Messages.ComBENewDiagramFileWizard_CreationPageDescription, ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID));
+		IPath filePath;
+		String fileName = URI.decode(domainModelURI.trimFileExtension().lastSegment());
+		if (domainModelURI.isPlatformResource()) {
+			filePath = new Path(domainModelURI.trimSegments(1).toPlatformString(true));
+		} else if (domainModelURI.isFile()) {
+			filePath = new Path(domainModelURI.trimSegments(1).toFileString());
+		} else {
+			// TODO : use some default path
+			throw new IllegalArgumentException("Unsupported URI: " + domainModelURI); //$NON-NLS-1$
+		}
+		myFileCreationPage.setContainerFullPath(filePath);
+		myFileCreationPage.setFileName(ComBE.diagram.part.ComBEDiagramEditorUtil.getUniqueFileName(filePath, fileName, "combe_diagram")); //$NON-NLS-1$
+
+		diagramRootElementSelectionPage = new DiagramRootElementSelectionPage(ComBE.diagram.part.Messages.ComBENewDiagramFileWizard_RootSelectionPageName);
+		diagramRootElementSelectionPage.setTitle(ComBE.diagram.part.Messages.ComBENewDiagramFileWizard_RootSelectionPageTitle);
+		diagramRootElementSelectionPage.setDescription(ComBE.diagram.part.Messages.ComBENewDiagramFileWizard_RootSelectionPageDescription);
+		diagramRootElementSelectionPage.setModelElement(diagramRoot);
+
+		myEditingDomain = editingDomain;
+	}
+
+	/**
+	* @generated
+	*/
+	public void addPages() {
+		addPage(myFileCreationPage);
+		addPage(diagramRootElementSelectionPage);
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean performFinish() {
+		LinkedList<IFile> affectedFiles = new LinkedList<IFile>();
+		IFile diagramFile = myFileCreationPage.createNewFile();
+		ComBE.diagram.part.ComBEDiagramEditorUtil.setCharset(diagramFile);
+		affectedFiles.add(diagramFile);
+		URI diagramModelURI = URI.createPlatformResourceURI(diagramFile.getFullPath().toString(), true);
+		ResourceSet resourceSet = myEditingDomain.getResourceSet();
+		final Resource diagramResource = resourceSet.createResource(diagramModelURI);
+		AbstractTransactionalCommand command = new AbstractTransactionalCommand(myEditingDomain, ComBE.diagram.part.Messages.ComBENewDiagramFileWizard_InitDiagramCommand, affectedFiles) {
+
+			protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {
+				int diagramVID = ComBE.diagram.part.ComBEVisualIDRegistry.getDiagramVisualID(diagramRootElementSelectionPage.getModelElement());
+				if (diagramVID != ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID) {
+					return CommandResult.newErrorCommandResult(ComBE.diagram.part.Messages.ComBENewDiagramFileWizard_IncorrectRootError);
+				}
+				Diagram diagram = ViewService.createDiagram(diagramRootElementSelectionPage.getModelElement(), ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID, ComBE.diagram.part.ComBEDiagramEditorPlugin.DIAGRAM_PREFERENCES_HINT);
+				diagramResource.getContents().add(diagram);
+				return CommandResult.newOKCommandResult();
+			}
+		};
+		try {
+			OperationHistoryFactory.getOperationHistory().execute(command, new NullProgressMonitor(), null);
+			diagramResource.save(ComBE.diagram.part.ComBEDiagramEditorUtil.getSaveOptions());
+			ComBE.diagram.part.ComBEDiagramEditorUtil.openDiagram(diagramResource);
+		} catch (ExecutionException e) {
+			ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Unable to create model and diagram", e); //$NON-NLS-1$
+		} catch (IOException ex) {
+			ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Save operation failed for: " + diagramModelURI, ex); //$NON-NLS-1$
+		} catch (PartInitException ex) {
+			ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Unable to open editor", ex); //$NON-NLS-1$
+		}
+		return true;
+	}
+
+	/**
+	* @generated
+	*/
+	private static class DiagramRootElementSelectionPage extends ComBE.diagram.part.ModelElementSelectionPage {
+
+		/**
+		* @generated
+		*/
+		protected DiagramRootElementSelectionPage(String pageName) {
+			super(pageName);
+		}
+
+		/**
+		* @generated
+		*/
+		protected String getSelectionTitle() {
+			return ComBE.diagram.part.Messages.ComBENewDiagramFileWizard_RootSelectionPageSelectionTitle;
+		}
+
+		/**
+		* @generated
+		*/
+		protected boolean validatePage() {
+			if (selectedModelElement == null) {
+				setErrorMessage(ComBE.diagram.part.Messages.ComBENewDiagramFileWizard_RootSelectionPageNoSelectionMessage);
+				return false;
+			}
+			boolean result = ViewService.getInstance().provides(new CreateDiagramViewOperation(new EObjectAdapter(selectedModelElement), ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID, ComBE.diagram.part.ComBEDiagramEditorPlugin.DIAGRAM_PREFERENCES_HINT));
+			setErrorMessage(result ? null : ComBE.diagram.part.Messages.ComBENewDiagramFileWizard_RootSelectionPageInvalidSelectionMessage);
+			return result;
+		}
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBENodeDescriptor.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBENodeDescriptor.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,42 @@
+package ComBE.diagram.part;
+
+import org.eclipse.emf.ecore.EObject;
+
+/**
+* @generated
+*/
+public class ComBENodeDescriptor {
+
+	/**
+	* @generated
+	*/
+	private final EObject myModelElement;
+
+	/**
+	* @generated
+	*/
+	private final int myVisualID;
+
+	/**
+	* @generated
+	*/
+	public ComBENodeDescriptor(EObject modelElement, int visualID) {
+		myModelElement = modelElement;
+		myVisualID = visualID;
+	}
+
+	/**
+	* @generated
+	*/
+	public EObject getModelElement() {
+		return myModelElement;
+	}
+
+	/**
+	* @generated
+	*/
+	public int getVisualID() {
+		return myVisualID;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEPaletteFactory.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEPaletteFactory.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,178 @@
+package ComBE.diagram.part;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.gef.Tool;
+import org.eclipse.gef.palette.PaletteContainer;
+import org.eclipse.gef.palette.PaletteDrawer;
+import org.eclipse.gef.palette.PaletteGroup;
+import org.eclipse.gef.palette.PaletteRoot;
+import org.eclipse.gef.palette.ToolEntry;
+import org.eclipse.gmf.runtime.diagram.ui.tools.UnspecifiedTypeConnectionTool;
+import org.eclipse.gmf.runtime.diagram.ui.tools.UnspecifiedTypeCreationTool;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+
+/**
+ * @generated
+ */
+public class ComBEPaletteFactory {
+
+	/**
+	* @generated
+	*/
+	public void fillPalette(PaletteRoot paletteRoot) {
+		paletteRoot.add(createObjects1Group());
+		paletteRoot.add(createConnections2Group());
+	}
+
+	/**
+	* Creates "Objects" palette tool group
+	* @generated
+	*/
+	private PaletteContainer createObjects1Group() {
+		PaletteDrawer paletteContainer = new PaletteDrawer(ComBE.diagram.part.Messages.Objects1Group_title);
+		paletteContainer.setId("createObjects1Group"); //$NON-NLS-1$
+		paletteContainer.add(createNode1CreationTool());
+		paletteContainer.add(createAlternativeBranch2CreationTool());
+		paletteContainer.add(createParallelBranch3CreationTool());
+		paletteContainer.add(createEmptyNode4CreationTool());
+		return paletteContainer;
+	}
+
+	/**
+	* Creates "Connections" palette tool group
+	* @generated
+	*/
+	private PaletteContainer createConnections2Group() {
+		PaletteDrawer paletteContainer = new PaletteDrawer(ComBE.diagram.part.Messages.Connections2Group_title);
+		paletteContainer.setId("createConnections2Group"); //$NON-NLS-1$
+		paletteContainer.add(createConnection1CreationTool());
+		return paletteContainer;
+	}
+
+	/**
+	* @generated
+	*/
+	private ToolEntry createNode1CreationTool() {
+		ArrayList<IElementType> types = new ArrayList<IElementType>(4);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3001);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3003);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.AtomicSequence_2003);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3005);
+		NodeToolEntry entry = new NodeToolEntry(ComBE.diagram.part.Messages.Node1CreationTool_title, ComBE.diagram.part.Messages.Node1CreationTool_desc, types);
+		entry.setId("createNode1CreationTool"); //$NON-NLS-1$
+		entry.setSmallIcon(ComBE.diagram.providers.ComBEElementTypes.getImageDescriptor(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3001));
+		entry.setLargeIcon(entry.getSmallIcon());
+		return entry;
+	}
+
+	/**
+	* @generated
+	*/
+	private ToolEntry createAlternativeBranch2CreationTool() {
+		NodeToolEntry entry = new NodeToolEntry(ComBE.diagram.part.Messages.AlternativeBranch2CreationTool_title, ComBE.diagram.part.Messages.AlternativeBranch2CreationTool_desc, Collections.singletonList(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranch_2001));
+		entry.setId("createAlternativeBranch2CreationTool"); //$NON-NLS-1$
+		entry.setSmallIcon(ComBE.diagram.providers.ComBEElementTypes.getImageDescriptor(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranch_2001));
+		entry.setLargeIcon(entry.getSmallIcon());
+		return entry;
+	}
+
+	/**
+	* @generated
+	*/
+	private ToolEntry createParallelBranch3CreationTool() {
+		NodeToolEntry entry = new NodeToolEntry(ComBE.diagram.part.Messages.ParallelBranch3CreationTool_title, ComBE.diagram.part.Messages.ParallelBranch3CreationTool_desc, Collections.singletonList(ComBE.diagram.providers.ComBEElementTypes.ParallelBranch_2002));
+		entry.setId("createParallelBranch3CreationTool"); //$NON-NLS-1$
+		entry.setSmallIcon(ComBE.diagram.providers.ComBEElementTypes.getImageDescriptor(ComBE.diagram.providers.ComBEElementTypes.ParallelBranch_2002));
+		entry.setLargeIcon(entry.getSmallIcon());
+		return entry;
+	}
+
+	/**
+	* @generated
+	*/
+	private ToolEntry createEmptyNode4CreationTool() {
+		ArrayList<IElementType> types = new ArrayList<IElementType>(3);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3002);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3004);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3006);
+		NodeToolEntry entry = new NodeToolEntry(ComBE.diagram.part.Messages.EmptyNode4CreationTool_title, ComBE.diagram.part.Messages.EmptyNode4CreationTool_desc, types);
+		entry.setId("createEmptyNode4CreationTool"); //$NON-NLS-1$
+		entry.setSmallIcon(ComBE.diagram.providers.ComBEElementTypes.getImageDescriptor(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3002));
+		entry.setLargeIcon(entry.getSmallIcon());
+		return entry;
+	}
+
+	/**
+	* @generated
+	*/
+	private ToolEntry createConnection1CreationTool() {
+		ArrayList<IElementType> types = new ArrayList<IElementType>(3);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002);
+		types.add(ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003);
+		LinkToolEntry entry = new LinkToolEntry(ComBE.diagram.part.Messages.Connection1CreationTool_title, ComBE.diagram.part.Messages.Connection1CreationTool_desc, types);
+		entry.setId("createConnection1CreationTool"); //$NON-NLS-1$
+		entry.setSmallIcon(ComBE.diagram.providers.ComBEElementTypes.getImageDescriptor(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001));
+		entry.setLargeIcon(entry.getSmallIcon());
+		return entry;
+	}
+
+	/**
+	* @generated
+	*/
+	private static class NodeToolEntry extends ToolEntry {
+
+		/**
+		* @generated
+		*/
+		private final List<IElementType> elementTypes;
+
+		/**
+		* @generated
+		*/
+		private NodeToolEntry(String title, String description, List<IElementType> elementTypes) {
+			super(title, description, null, null);
+			this.elementTypes = elementTypes;
+		}
+
+		/**
+		* @generated
+		*/
+		public Tool createTool() {
+			Tool tool = new UnspecifiedTypeCreationTool(elementTypes);
+			tool.setProperties(getToolProperties());
+			return tool;
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private static class LinkToolEntry extends ToolEntry {
+
+		/**
+		* @generated
+		*/
+		private final List<IElementType> relationshipTypes;
+
+		/**
+		* @generated
+		*/
+		private LinkToolEntry(String title, String description, List<IElementType> relationshipTypes) {
+			super(title, description, null, null);
+			this.relationshipTypes = relationshipTypes;
+		}
+
+		/**
+		* @generated
+		*/
+		public Tool createTool() {
+			Tool tool = new UnspecifiedTypeConnectionTool(relationshipTypes);
+			tool.setProperties(getToolProperties());
+			return tool;
+		}
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEUriEditorInputTester.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEUriEditorInputTester.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,22 @@
+package ComBE.diagram.part;
+
+import org.eclipse.core.expressions.PropertyTester;
+import org.eclipse.emf.common.ui.URIEditorInput;
+
+/**
+* @generated
+*/
+public class ComBEUriEditorInputTester extends PropertyTester {
+
+	/**
+	* @generated
+	*/
+	public boolean test(Object receiver, String method, Object[] args, Object expectedValue) {
+		if (false == receiver instanceof URIEditorInput) {
+			return false;
+		}
+		URIEditorInput editorInput = (URIEditorInput) receiver;
+		return "combe_diagram".equals(editorInput.getURI().fileExtension()); //$NON-NLS-1$
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEVisualIDRegistry.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ComBEVisualIDRegistry.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,324 @@
+package ComBE.diagram.part;
+
+import org.eclipse.core.runtime.Platform;
+import org.eclipse.emf.ecore.EAnnotation;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gmf.runtime.notation.Diagram;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+* This registry is used to determine which type of visual object should be
+* created for the corresponding Diagram, Node, ChildNode or Link represented
+* by a domain model object.
+* 
+* @generated
+*/
+public class ComBEVisualIDRegistry {
+
+	/**
+	* @generated
+	*/
+	private static final String DEBUG_KEY = "org.behaviorengineering.combe.graphical.diagram/debug/visualID"; //$NON-NLS-1$
+
+	/**
+	* @generated
+	*/
+	public static int getVisualID(View view) {
+		if (view instanceof Diagram) {
+			if (ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID.equals(view.getType())) {
+				return ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID;
+			} else {
+				return -1;
+			}
+		}
+		return ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view.getType());
+	}
+
+	/**
+	* @generated
+	*/
+	public static String getModelID(View view) {
+		View diagram = view.getDiagram();
+		while (view != diagram) {
+			EAnnotation annotation = view.getEAnnotation("Shortcut"); //$NON-NLS-1$
+			if (annotation != null) {
+				return (String) annotation.getDetails().get("modelID"); //$NON-NLS-1$
+			}
+			view = (View) view.eContainer();
+		}
+		return diagram != null ? diagram.getType() : null;
+	}
+
+	/**
+	* @generated
+	*/
+	public static int getVisualID(String type) {
+		try {
+			return Integer.parseInt(type);
+		} catch (NumberFormatException e) {
+			if (Boolean.TRUE.toString().equalsIgnoreCase(Platform.getDebugOption(DEBUG_KEY))) {
+				ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Unable to parse view type as a visualID number: " + type);
+			}
+		}
+		return -1;
+	}
+
+	/**
+	* @generated
+	*/
+	public static String getType(int visualID) {
+		return Integer.toString(visualID);
+	}
+
+	/**
+	* @generated
+	*/
+	public static int getDiagramVisualID(EObject domainElement) {
+		if (domainElement == null) {
+			return -1;
+		}
+		if (ComBE.ComBEPackage.eINSTANCE.getSpecification().isSuperTypeOf(domainElement.eClass()) && isDiagram((ComBE.Specification) domainElement)) {
+			return ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID;
+		}
+		return -1;
+	}
+
+	/**
+	* @generated
+	*/
+	public static int getNodeVisualID(View containerView, EObject domainElement) {
+		if (domainElement == null) {
+			return -1;
+		}
+		String containerModelID = ComBE.diagram.part.ComBEVisualIDRegistry.getModelID(containerView);
+		if (!ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID.equals(containerModelID)) {
+			return -1;
+		}
+		int containerVisualID;
+		if (ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID.equals(containerModelID)) {
+			containerVisualID = ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(containerView);
+		} else {
+			if (containerView instanceof Diagram) {
+				containerVisualID = ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID;
+			} else {
+				return -1;
+			}
+		}
+		switch (containerVisualID) {
+		case ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID:
+			if (ComBE.ComBEPackage.eINSTANCE.getAlternativeBranch().isSuperTypeOf(domainElement.eClass())) {
+				return ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID;
+			}
+			if (ComBE.ComBEPackage.eINSTANCE.getParallelBranch().isSuperTypeOf(domainElement.eClass())) {
+				return ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID;
+			}
+			if (ComBE.ComBEPackage.eINSTANCE.getAtomicSequence().isSuperTypeOf(domainElement.eClass())) {
+				return ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID;
+			}
+			break;
+		case ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart.VISUAL_ID:
+			if (ComBE.ComBEPackage.eINSTANCE.getStandardNode().isSuperTypeOf(domainElement.eClass())) {
+				return ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID;
+			}
+			if (ComBE.ComBEPackage.eINSTANCE.getEmptyNode().isSuperTypeOf(domainElement.eClass())) {
+				return ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID;
+			}
+			break;
+		case ComBE.diagram.edit.parts.AlternativeBranchAlternativeBranchNodesCompartmentEditPart.VISUAL_ID:
+			if (ComBE.ComBEPackage.eINSTANCE.getStandardNode().isSuperTypeOf(domainElement.eClass())) {
+				return ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID;
+			}
+			if (ComBE.ComBEPackage.eINSTANCE.getEmptyNode().isSuperTypeOf(domainElement.eClass())) {
+				return ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID;
+			}
+			break;
+		case ComBE.diagram.edit.parts.ParallelBranchParallelBranchNodesCompartmentEditPart.VISUAL_ID:
+			if (ComBE.ComBEPackage.eINSTANCE.getStandardNode().isSuperTypeOf(domainElement.eClass())) {
+				return ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID;
+			}
+			if (ComBE.ComBEPackage.eINSTANCE.getEmptyNode().isSuperTypeOf(domainElement.eClass())) {
+				return ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID;
+			}
+			break;
+		}
+		return -1;
+	}
+
+	/**
+	* @generated
+	*/
+	public static boolean canCreateNode(View containerView, int nodeVisualID) {
+		String containerModelID = ComBE.diagram.part.ComBEVisualIDRegistry.getModelID(containerView);
+		if (!ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID.equals(containerModelID)) {
+			return false;
+		}
+		int containerVisualID;
+		if (ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID.equals(containerModelID)) {
+			containerVisualID = ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(containerView);
+		} else {
+			if (containerView instanceof Diagram) {
+				containerVisualID = ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID;
+			} else {
+				return false;
+			}
+		}
+		switch (containerVisualID) {
+		case ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID:
+			if (ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			break;
+		case ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID:
+			if (ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			break;
+		case ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID:
+			if (ComBE.diagram.edit.parts.AlternativeBranchAlternativeBranchNodesCompartmentEditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			break;
+		case ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID:
+			if (ComBE.diagram.edit.parts.ParallelBranchParallelBranchNodesCompartmentEditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			break;
+		case ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID:
+			if (ComBE.diagram.edit.parts.WrappingLabelEditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.WrappingLabel2EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.WrappingLabel3EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.StandardNodeTracibilitystatusEditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.StandardNodeOperatorEditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.StandardNodeLabelEditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			break;
+		case ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID:
+			if (ComBE.diagram.edit.parts.EmptyNodeLabel2EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.EmptyNodeOperator2EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			break;
+		case ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID:
+			if (ComBE.diagram.edit.parts.WrappingLabel4EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.WrappingLabel5EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.WrappingLabel6EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.StandardNodeTracibilitystatus2EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.StandardNodeOperator2EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.StandardNodeLabel2EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			break;
+		case ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID:
+			if (ComBE.diagram.edit.parts.EmptyNodeLabel3EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.EmptyNodeOperator3EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			break;
+		case ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID:
+			if (ComBE.diagram.edit.parts.WrappingLabel7EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.WrappingLabel8EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.WrappingLabel9EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.StandardNodeTracibilitystatus3EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.StandardNodeOperator3EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.StandardNodeLabel3EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			break;
+		case ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID:
+			if (ComBE.diagram.edit.parts.EmptyNodeLabelEditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.EmptyNodeOperatorEditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			break;
+		case ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart.VISUAL_ID:
+			if (ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			break;
+		case ComBE.diagram.edit.parts.AlternativeBranchAlternativeBranchNodesCompartmentEditPart.VISUAL_ID:
+			if (ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			break;
+		case ComBE.diagram.edit.parts.ParallelBranchParallelBranchNodesCompartmentEditPart.VISUAL_ID:
+			if (ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			if (ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID == nodeVisualID) {
+				return true;
+			}
+			break;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	public static int getLinkWithClassVisualID(EObject domainElement) {
+		if (domainElement == null) {
+			return -1;
+		}
+		return -1;
+	}
+
+	/**
+	* User can change implementation of this method to handle some specific
+	* situations not covered by default logic.
+	* 
+	* @generated
+	*/
+	private static boolean isDiagram(ComBE.Specification element) {
+		return true;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/DeleteElementAction.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/DeleteElementAction.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,83 @@
+package ComBE.diagram.part;
+
+import java.util.Iterator;
+import java.util.List;
+
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.Request;
+import org.eclipse.gef.commands.Command;
+import org.eclipse.gef.commands.UnexecutableCommand;
+import org.eclipse.gmf.runtime.diagram.ui.actions.AbstractDeleteFromAction;
+import org.eclipse.gmf.runtime.diagram.ui.actions.ActionIds;
+import org.eclipse.gmf.runtime.diagram.ui.commands.CommandProxy;
+import org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy;
+import org.eclipse.gmf.runtime.diagram.ui.l10n.DiagramUIMessages;
+import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
+import org.eclipse.ui.ISharedImages;
+import org.eclipse.ui.IWorkbenchPage;
+import org.eclipse.ui.IWorkbenchPart;
+import org.eclipse.ui.PlatformUI;
+
+/**
+ * @generated
+ */
+public class DeleteElementAction extends AbstractDeleteFromAction {
+
+	/**
+	* @generated
+	*/
+	public DeleteElementAction(IWorkbenchPart part) {
+		super(part);
+	}
+
+	/**
+	* @generated
+	*/
+	public DeleteElementAction(IWorkbenchPage workbenchPage) {
+		super(workbenchPage);
+	}
+
+	/**
+	* @generated
+	*/
+	public void init() {
+		super.init();
+		setId(ActionIds.ACTION_DELETE_FROM_MODEL);
+		setText(DiagramUIMessages.DiagramEditor_Delete_from_Model);
+		setToolTipText(DiagramUIMessages.DiagramEditor_Delete_from_ModelToolTip);
+		ISharedImages workbenchImages = PlatformUI.getWorkbench().getSharedImages();
+		setHoverImageDescriptor(workbenchImages.getImageDescriptor(ISharedImages.IMG_TOOL_DELETE));
+		setImageDescriptor(workbenchImages.getImageDescriptor(ISharedImages.IMG_TOOL_DELETE));
+		setDisabledImageDescriptor(workbenchImages.getImageDescriptor(ISharedImages.IMG_TOOL_DELETE_DISABLED));
+	}
+
+	/**
+	* @generated
+	*/
+	protected String getCommandLabel() {
+		return DiagramUIMessages.DiagramEditor_Delete_from_Model;
+	}
+
+	/**
+	* @generated
+	*/
+	protected Command getCommand(Request request) {
+		List operationSet = getOperationSet();
+		if (operationSet.isEmpty()) {
+			return UnexecutableCommand.INSTANCE;
+		}
+		Iterator editParts = operationSet.iterator();
+		CompositeTransactionalCommand command = new CompositeTransactionalCommand(getEditingDomain(), getCommandLabel());
+		while (editParts.hasNext()) {
+			EditPart editPart = (EditPart) editParts.next();
+			Command curCommand = editPart.getCommand(request);
+			if (curCommand != null) {
+				command.compose(new CommandProxy(curCommand));
+			}
+		}
+		if (command.isEmpty() || command.size() != operationSet.size()) {
+			return UnexecutableCommand.INSTANCE;
+		}
+		return new ICommandProxy(command);
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/DiagramEditorContextMenuProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/DiagramEditorContextMenuProvider.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,66 @@
+package ComBE.diagram.part;
+
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.transaction.util.TransactionUtil;
+import org.eclipse.gef.EditPartViewer;
+import org.eclipse.gmf.runtime.common.ui.services.action.contributionitem.ContributionItemService;
+import org.eclipse.gmf.runtime.diagram.ui.actions.ActionIds;
+import org.eclipse.gmf.runtime.diagram.ui.providers.DiagramContextMenuProvider;
+import org.eclipse.jface.action.IMenuManager;
+import org.eclipse.ui.IWorkbenchPart;
+
+/**
+ * @generated
+ */
+public class DiagramEditorContextMenuProvider extends DiagramContextMenuProvider {
+
+	/**
+	* @generated
+	*/
+	private IWorkbenchPart part;
+
+	/**
+	* @generated
+	*/
+	private ComBE.diagram.part.DeleteElementAction deleteAction;
+
+	/**
+	* @generated
+	*/
+	public DiagramEditorContextMenuProvider(IWorkbenchPart part, EditPartViewer viewer) {
+		super(part, viewer);
+		this.part = part;
+		deleteAction = new ComBE.diagram.part.DeleteElementAction(part);
+		deleteAction.init();
+	}
+
+	/**
+	* @generated
+	*/
+	public void dispose() {
+		if (deleteAction != null) {
+			deleteAction.dispose();
+			deleteAction = null;
+		}
+		super.dispose();
+	}
+
+	/**
+	* @generated
+	*/
+	public void buildContextMenu(final IMenuManager menu) {
+		getViewer().flush();
+		try {
+			TransactionUtil.getEditingDomain((EObject) getViewer().getContents().getModel()).runExclusive(new Runnable() {
+
+				public void run() {
+					ContributionItemService.getInstance().contributeToPopupMenu(DiagramEditorContextMenuProvider.this, part);
+					menu.remove(ActionIds.ACTION_DELETE_FROM_MODEL);
+					menu.appendToGroup("editGroup", deleteAction);
+				}
+			});
+		} catch (Exception e) {
+			ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().logError("Error building context menu", e);
+		}
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/LoadResourceAction.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/LoadResourceAction.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,29 @@
+package ComBE.diagram.part;
+
+import org.eclipse.core.commands.AbstractHandler;
+import org.eclipse.core.commands.ExecutionEvent;
+import org.eclipse.core.commands.ExecutionException;
+import org.eclipse.emf.transaction.TransactionalEditingDomain;
+import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
+import org.eclipse.swt.widgets.Shell;
+import org.eclipse.ui.IEditorPart;
+import org.eclipse.ui.handlers.HandlerUtil;
+
+/**
+ * @generated
+ */
+public class LoadResourceAction extends AbstractHandler {
+	/**
+	* @generated
+	*/
+	public Object execute(ExecutionEvent event) throws ExecutionException {
+		IEditorPart diagramEditor = HandlerUtil.getActiveEditorChecked(event);
+		Shell shell = diagramEditor.getEditorSite().getShell();
+		assert diagramEditor instanceof DiagramEditor;
+		TransactionalEditingDomain editingDomain = ((DiagramEditor) diagramEditor).getEditingDomain();
+		org.eclipse.emf.edit.ui.action.LoadResourceAction.LoadResourceDialog loadResourceDialog = new org.eclipse.emf.edit.ui.action.LoadResourceAction.LoadResourceDialog(shell, editingDomain);
+		loadResourceDialog.open();
+		return null;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/Messages.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/Messages.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,424 @@
+package ComBE.diagram.part;
+
+import org.eclipse.osgi.util.NLS;
+
+/**
+ * @generated
+ */
+public class Messages extends NLS {
+
+	/**
+	* @generated
+	*/
+	static {
+		NLS.initializeMessages("messages", Messages.class); //$NON-NLS-1$
+	}
+
+	/**
+	* @generated
+	*/
+	private Messages() {
+	}
+
+	/**
+	* @generated
+	*/
+	public static String ComBECreationWizardTitle;
+
+	/**
+	* @generated
+	*/
+	public static String ComBECreationWizard_DiagramModelFilePageTitle;
+
+	/**
+	* @generated
+	*/
+	public static String ComBECreationWizard_DiagramModelFilePageDescription;
+
+	/**
+	* @generated
+	*/
+	public static String ComBECreationWizard_DomainModelFilePageTitle;
+
+	/**
+	* @generated
+	*/
+	public static String ComBECreationWizard_DomainModelFilePageDescription;
+
+	/**
+	* @generated
+	*/
+	public static String ComBECreationWizardOpenEditorError;
+
+	/**
+	* @generated
+	*/
+	public static String ComBECreationWizardCreationError;
+
+	/**
+	* @generated
+	*/
+	public static String ComBECreationWizardPageExtensionError;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEDiagramEditorUtil_OpenModelResourceErrorDialogTitle;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEDiagramEditorUtil_OpenModelResourceErrorDialogMessage;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEDiagramEditorUtil_CreateDiagramProgressTask;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEDiagramEditorUtil_CreateDiagramCommandLabel;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEDocumentProvider_isModifiable;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEDocumentProvider_handleElementContentChanged;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEDocumentProvider_IncorrectInputError;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEDocumentProvider_NoDiagramInResourceError;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEDocumentProvider_DiagramLoadingError;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEDocumentProvider_UnsynchronizedFileSaveError;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEDocumentProvider_SaveDiagramTask;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEDocumentProvider_SaveNextResourceTask;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEDocumentProvider_SaveAsOperation;
+
+	/**
+	* @generated
+	*/
+	public static String InitDiagramFile_ResourceErrorDialogTitle;
+
+	/**
+	* @generated
+	*/
+	public static String InitDiagramFile_ResourceErrorDialogMessage;
+
+	/**
+	* @generated
+	*/
+	public static String InitDiagramFile_WizardTitle;
+
+	/**
+	* @generated
+	*/
+	public static String InitDiagramFile_OpenModelFileDialogTitle;
+
+	/**
+	* @generated
+	*/
+	public static String ComBENewDiagramFileWizard_CreationPageName;
+
+	/**
+	* @generated
+	*/
+	public static String ComBENewDiagramFileWizard_CreationPageTitle;
+
+	/**
+	* @generated
+	*/
+	public static String ComBENewDiagramFileWizard_CreationPageDescription;
+
+	/**
+	* @generated
+	*/
+	public static String ComBENewDiagramFileWizard_RootSelectionPageName;
+
+	/**
+	* @generated
+	*/
+	public static String ComBENewDiagramFileWizard_RootSelectionPageTitle;
+
+	/**
+	* @generated
+	*/
+	public static String ComBENewDiagramFileWizard_RootSelectionPageDescription;
+
+	/**
+	* @generated
+	*/
+	public static String ComBENewDiagramFileWizard_RootSelectionPageSelectionTitle;
+
+	/**
+	* @generated
+	*/
+	public static String ComBENewDiagramFileWizard_RootSelectionPageNoSelectionMessage;
+
+	/**
+	* @generated
+	*/
+	public static String ComBENewDiagramFileWizard_RootSelectionPageInvalidSelectionMessage;
+
+	/**
+	* @generated
+	*/
+	public static String ComBENewDiagramFileWizard_InitDiagramCommand;
+
+	/**
+	* @generated
+	*/
+	public static String ComBENewDiagramFileWizard_IncorrectRootError;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEDiagramEditor_SavingDeletedFile;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEDiagramEditor_SaveAsErrorTitle;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEDiagramEditor_SaveAsErrorMessage;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEDiagramEditor_SaveErrorTitle;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEDiagramEditor_SaveErrorMessage;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEElementChooserDialog_SelectModelElementTitle;
+
+	/**
+	* @generated
+	*/
+	public static String ModelElementSelectionPageMessage;
+
+	/**
+	* @generated
+	*/
+	public static String ValidateActionMessage;
+
+	/**
+	* @generated
+	*/
+	public static String Objects1Group_title;
+
+	/**
+	* @generated
+	*/
+	public static String Connections2Group_title;
+
+	/**
+	* @generated
+	*/
+	public static String Node1CreationTool_title;
+
+	/**
+	* @generated
+	*/
+	public static String Node1CreationTool_desc;
+
+	/**
+	* @generated
+	*/
+	public static String AlternativeBranch2CreationTool_title;
+
+	/**
+	* @generated
+	*/
+	public static String AlternativeBranch2CreationTool_desc;
+
+	/**
+	* @generated
+	*/
+	public static String ParallelBranch3CreationTool_title;
+
+	/**
+	* @generated
+	*/
+	public static String ParallelBranch3CreationTool_desc;
+
+	/**
+	* @generated
+	*/
+	public static String EmptyNode4CreationTool_title;
+
+	/**
+	* @generated
+	*/
+	public static String EmptyNode4CreationTool_desc;
+
+	/**
+	* @generated
+	*/
+	public static String Connection1CreationTool_title;
+
+	/**
+	* @generated
+	*/
+	public static String Connection1CreationTool_desc;
+
+	/**
+	* @generated
+	*/
+	public static String AtomicSequenceAtomicSequenceNodesCompartmentEditPart_title;
+
+	/**
+	* @generated
+	*/
+	public static String AlternativeBranchAlternativeBranchNodesCompartmentEditPart_title;
+
+	/**
+	* @generated
+	*/
+	public static String ParallelBranchParallelBranchNodesCompartmentEditPart_title;
+
+	/**
+	* @generated
+	*/
+	public static String CommandName_OpenDiagram;
+
+	/**
+	* @generated
+	*/
+	public static String NavigatorGroupName_Specification_1000_links;
+
+	/**
+	* @generated
+	*/
+	public static String NavigatorGroupName_AlternativeBranch_2001_incominglinks;
+
+	/**
+	* @generated
+	*/
+	public static String NavigatorGroupName_AlternativeBranch_2001_outgoinglinks;
+
+	/**
+	* @generated
+	*/
+	public static String NavigatorGroupName_ParallelBranchChildren_4002_target;
+
+	/**
+	* @generated
+	*/
+	public static String NavigatorGroupName_ParallelBranchChildren_4002_source;
+
+	/**
+	* @generated
+	*/
+	public static String NavigatorGroupName_AtomicSequenceChild_4003_target;
+
+	/**
+	* @generated
+	*/
+	public static String NavigatorGroupName_AtomicSequenceChild_4003_source;
+
+	/**
+	* @generated
+	*/
+	public static String NavigatorGroupName_AtomicSequence_2003_incominglinks;
+
+	/**
+	* @generated
+	*/
+	public static String NavigatorGroupName_AtomicSequence_2003_outgoinglinks;
+
+	/**
+	* @generated
+	*/
+	public static String NavigatorGroupName_AlternativeBranchChildren_4001_target;
+
+	/**
+	* @generated
+	*/
+	public static String NavigatorGroupName_AlternativeBranchChildren_4001_source;
+
+	/**
+	* @generated
+	*/
+	public static String NavigatorGroupName_ParallelBranch_2002_incominglinks;
+
+	/**
+	* @generated
+	*/
+	public static String NavigatorGroupName_ParallelBranch_2002_outgoinglinks;
+
+	/**
+	* @generated
+	*/
+	public static String NavigatorActionProvider_OpenDiagramActionName;
+
+	/**
+	* @generated
+	*/
+	public static String AbstractParser_UnexpectedValueType;
+
+	/**
+	* @generated
+	*/
+	public static String AbstractParser_WrongStringConversion;
+
+	/**
+	* @generated
+	*/
+	public static String AbstractParser_UnknownLiteral;
+
+	/**
+	* @generated
+	*/
+	public static String MessageFormatParser_InvalidInputError;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEModelingAssistantProviderTitle;
+
+	/**
+	* @generated
+	*/
+	public static String ComBEModelingAssistantProviderMessage;
+
+	//TODO: put accessor fields manually	
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ModelElementSelectionPage.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/part/ModelElementSelectionPage.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,138 @@
+package ComBE.diagram.part;
+
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.util.FeatureMap;
+import org.eclipse.emf.edit.provider.IWrapperItemProvider;
+import org.eclipse.emf.edit.ui.provider.AdapterFactoryContentProvider;
+import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
+import org.eclipse.jface.viewers.ISelectionChangedListener;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.jface.viewers.SelectionChangedEvent;
+import org.eclipse.jface.viewers.StructuredSelection;
+import org.eclipse.jface.viewers.TreeViewer;
+import org.eclipse.jface.wizard.WizardPage;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.layout.GridLayout;
+import org.eclipse.swt.widgets.Composite;
+import org.eclipse.swt.widgets.Label;
+
+/**
+ * Wizard page that allows to select element from model.
+ * @generated
+ */
+public class ModelElementSelectionPage extends WizardPage {
+	/**
+	* @generated
+	*/
+	protected EObject selectedModelElement;
+
+	/**
+	 * @generated
+	 */
+	private TreeViewer modelViewer;
+
+	/**
+	* @generated
+	*/
+	public ModelElementSelectionPage(String pageName) {
+		super(pageName);
+	}
+
+	/**
+	* @generated
+	*/
+	public EObject getModelElement() {
+		return selectedModelElement;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setModelElement(EObject modelElement) {
+		selectedModelElement = modelElement;
+		if (modelViewer != null) {
+			if (selectedModelElement != null) {
+				modelViewer.setInput(selectedModelElement.eResource());
+				modelViewer.setSelection(new StructuredSelection(selectedModelElement));
+			} else {
+				modelViewer.setInput(null);
+			}
+			setPageComplete(validatePage());
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	public void createControl(Composite parent) {
+		initializeDialogUnits(parent);
+
+		Composite plate = new Composite(parent, SWT.NONE);
+		plate.setLayoutData(new GridData(GridData.FILL_BOTH));
+		GridLayout layout = new GridLayout();
+		layout.marginWidth = 0;
+		plate.setLayout(layout);
+		setControl(plate);
+
+		Label label = new Label(plate, SWT.NONE);
+		label.setText(getSelectionTitle());
+		label.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING));
+
+		modelViewer = new TreeViewer(plate, SWT.SINGLE | SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER);
+		GridData layoutData = new GridData(GridData.FILL_BOTH);
+		layoutData.heightHint = 300;
+		layoutData.widthHint = 300;
+		modelViewer.getTree().setLayoutData(layoutData);
+		modelViewer.setContentProvider(new AdapterFactoryContentProvider(ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getItemProvidersAdapterFactory()));
+		modelViewer.setLabelProvider(new AdapterFactoryLabelProvider(ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getItemProvidersAdapterFactory()));
+		if (selectedModelElement != null) {
+			modelViewer.setInput(selectedModelElement.eResource());
+			modelViewer.setSelection(new StructuredSelection(selectedModelElement));
+		}
+		modelViewer.addSelectionChangedListener(new ISelectionChangedListener() {
+			public void selectionChanged(SelectionChangedEvent event) {
+				ModelElementSelectionPage.this.updateSelection((IStructuredSelection) event.getSelection());
+			}
+		});
+
+		setPageComplete(validatePage());
+	}
+
+	/**
+	* Override to provide custom model element description.
+	* @generated
+	*/
+	protected String getSelectionTitle() {
+		return ComBE.diagram.part.Messages.ModelElementSelectionPageMessage;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void updateSelection(IStructuredSelection selection) {
+		selectedModelElement = null;
+		if (selection.size() == 1) {
+			Object selectedElement = selection.getFirstElement();
+			if (selectedElement instanceof IWrapperItemProvider) {
+				selectedElement = ((IWrapperItemProvider) selectedElement).getValue();
+			}
+			if (selectedElement instanceof FeatureMap.Entry) {
+				selectedElement = ((FeatureMap.Entry) selectedElement).getValue();
+			}
+			if (selectedElement instanceof EObject) {
+				selectedModelElement = (EObject) selectedElement;
+			}
+		}
+		setPageComplete(validatePage());
+	}
+
+	/**
+	* Override to provide specific validation of the selected model element.
+	* @generated
+	*/
+	protected boolean validatePage() {
+		return true;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/DiagramAppearancePreferencePage.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/DiagramAppearancePreferencePage.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,16 @@
+package ComBE.diagram.preferences;
+
+import org.eclipse.gmf.runtime.diagram.ui.preferences.AppearancePreferencePage;
+
+/**
+ * @generated
+ */
+public class DiagramAppearancePreferencePage extends AppearancePreferencePage {
+
+	/**
+	* @generated
+	*/
+	public DiagramAppearancePreferencePage() {
+		setPreferenceStore(ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getPreferenceStore());
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/DiagramConnectionsPreferencePage.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/DiagramConnectionsPreferencePage.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,16 @@
+package ComBE.diagram.preferences;
+
+import org.eclipse.gmf.runtime.diagram.ui.preferences.ConnectionsPreferencePage;
+
+/**
+ * @generated
+ */
+public class DiagramConnectionsPreferencePage extends ConnectionsPreferencePage {
+
+	/**
+	* @generated
+	*/
+	public DiagramConnectionsPreferencePage() {
+		setPreferenceStore(ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getPreferenceStore());
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/DiagramGeneralPreferencePage.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/DiagramGeneralPreferencePage.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,16 @@
+package ComBE.diagram.preferences;
+
+import org.eclipse.gmf.runtime.diagram.ui.preferences.DiagramsPreferencePage;
+
+/**
+ * @generated
+ */
+public class DiagramGeneralPreferencePage extends DiagramsPreferencePage {
+
+	/**
+	* @generated
+	*/
+	public DiagramGeneralPreferencePage() {
+		setPreferenceStore(ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getPreferenceStore());
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/DiagramPreferenceInitializer.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/DiagramPreferenceInitializer.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,30 @@
+package ComBE.diagram.preferences;
+
+import org.eclipse.core.runtime.preferences.AbstractPreferenceInitializer;
+import org.eclipse.jface.preference.IPreferenceStore;
+
+/**
+ * @generated
+ */
+public class DiagramPreferenceInitializer extends AbstractPreferenceInitializer {
+
+	/**
+	* @generated
+	*/
+	public void initializeDefaultPreferences() {
+		IPreferenceStore store = getPreferenceStore();
+		ComBE.diagram.preferences.DiagramGeneralPreferencePage.initDefaults(store);
+		ComBE.diagram.preferences.DiagramAppearancePreferencePage.initDefaults(store);
+		ComBE.diagram.preferences.DiagramConnectionsPreferencePage.initDefaults(store);
+		ComBE.diagram.preferences.DiagramPrintingPreferencePage.initDefaults(store);
+		ComBE.diagram.preferences.DiagramRulersAndGridPreferencePage.initDefaults(store);
+
+	}
+
+	/**
+	* @generated
+	*/
+	protected IPreferenceStore getPreferenceStore() {
+		return ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getPreferenceStore();
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/DiagramPrintingPreferencePage.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/DiagramPrintingPreferencePage.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,16 @@
+package ComBE.diagram.preferences;
+
+import org.eclipse.gmf.runtime.diagram.ui.preferences.PrintingPreferencePage;
+
+/**
+ * @generated
+ */
+public class DiagramPrintingPreferencePage extends PrintingPreferencePage {
+
+	/**
+	* @generated
+	*/
+	public DiagramPrintingPreferencePage() {
+		setPreferenceStore(ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getPreferenceStore());
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/DiagramRulersAndGridPreferencePage.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/preferences/DiagramRulersAndGridPreferencePage.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,16 @@
+package ComBE.diagram.preferences;
+
+import org.eclipse.gmf.runtime.diagram.ui.preferences.RulerGridPreferencePage;
+
+/**
+ * @generated
+ */
+public class DiagramRulersAndGridPreferencePage extends RulerGridPreferencePage {
+
+	/**
+	* @generated
+	*/
+	public DiagramRulersAndGridPreferencePage() {
+		setPreferenceStore(ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getPreferenceStore());
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ComBEEditPartProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ComBEEditPartProvider.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,138 @@
+package ComBE.diagram.providers;
+
+import java.lang.ref.WeakReference;
+
+import org.eclipse.gef.EditPart;
+import org.eclipse.gef.EditPartFactory;
+import org.eclipse.gmf.runtime.common.core.service.IOperation;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.diagram.ui.services.editpart.AbstractEditPartProvider;
+import org.eclipse.gmf.runtime.diagram.ui.services.editpart.CreateGraphicEditPartOperation;
+import org.eclipse.gmf.runtime.diagram.ui.services.editpart.IEditPartOperation;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class ComBEEditPartProvider extends AbstractEditPartProvider {
+
+	/**
+	* @generated
+	*/
+	private EditPartFactory factory;
+
+	/**
+	* @generated
+	*/
+	private boolean allowCaching;
+
+	/**
+	* @generated
+	*/
+	private WeakReference cachedPart;
+
+	/**
+	* @generated
+	*/
+	private WeakReference cachedView;
+
+	/**
+	* @generated
+	*/
+	public ComBEEditPartProvider() {
+		setFactory(new ComBE.diagram.edit.parts.ComBEEditPartFactory());
+		setAllowCaching(true);
+	}
+
+	/**
+	* @generated
+	*/
+	public final EditPartFactory getFactory() {
+		return factory;
+	}
+
+	/**
+	* @generated
+	*/
+	protected void setFactory(EditPartFactory factory) {
+		this.factory = factory;
+	}
+
+	/**
+	* @generated
+	*/
+	public final boolean isAllowCaching() {
+		return allowCaching;
+	}
+
+	/**
+	* @generated
+	*/
+	protected synchronized void setAllowCaching(boolean allowCaching) {
+		this.allowCaching = allowCaching;
+		if (!allowCaching) {
+			cachedPart = null;
+			cachedView = null;
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	protected IGraphicalEditPart createEditPart(View view) {
+		EditPart part = factory.createEditPart(null, view);
+		if (part instanceof IGraphicalEditPart) {
+			return (IGraphicalEditPart) part;
+		}
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected IGraphicalEditPart getCachedPart(View view) {
+		if (cachedView != null && cachedView.get() == view) {
+			return (IGraphicalEditPart) cachedPart.get();
+		}
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	public synchronized IGraphicalEditPart createGraphicEditPart(View view) {
+		if (isAllowCaching()) {
+			IGraphicalEditPart part = getCachedPart(view);
+			cachedPart = null;
+			cachedView = null;
+			if (part != null) {
+				return part;
+			}
+		}
+		return createEditPart(view);
+	}
+
+	/**
+	* @generated
+	*/
+	public synchronized boolean provides(IOperation operation) {
+		if (operation instanceof CreateGraphicEditPartOperation) {
+			View view = ((IEditPartOperation) operation).getView();
+			if (!ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID.equals(ComBE.diagram.part.ComBEVisualIDRegistry.getModelID(view))) {
+				return false;
+			}
+			if (isAllowCaching() && getCachedPart(view) != null) {
+				return true;
+			}
+			IGraphicalEditPart part = createEditPart(view);
+			if (part != null) {
+				if (isAllowCaching()) {
+					cachedPart = new WeakReference(part);
+					cachedView = new WeakReference(view);
+				}
+				return true;
+			}
+		}
+		return false;
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ComBEElementTypes.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ComBEElementTypes.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,298 @@
+package ComBE.diagram.providers;
+
+import java.util.HashSet;
+import java.util.IdentityHashMap;
+import java.util.Map;
+import java.util.Set;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EClass;
+import org.eclipse.emf.ecore.EClassifier;
+import org.eclipse.emf.ecore.ENamedElement;
+import org.eclipse.emf.ecore.EStructuralFeature;
+import org.eclipse.gmf.runtime.emf.type.core.ElementTypeRegistry;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+import org.eclipse.jface.resource.ImageDescriptor;
+import org.eclipse.jface.resource.ImageRegistry;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * @generated
+ */
+public class ComBEElementTypes {
+
+	/**
+	* @generated
+	*/
+	private ComBEElementTypes() {
+	}
+
+	/**
+	* @generated
+	*/
+	private static Map<IElementType, ENamedElement> elements;
+
+	/**
+	* @generated
+	*/
+	private static ImageRegistry imageRegistry;
+
+	/**
+	* @generated
+	*/
+	private static Set<IElementType> KNOWN_ELEMENT_TYPES;
+
+	/**
+	* @generated
+	*/
+	public static final IElementType Specification_1000 = getElementType("org.behaviorengineering.combe.graphical.diagram.Specification_1000"); //$NON-NLS-1$
+	/**
+	* @generated
+	*/
+	public static final IElementType AlternativeBranch_2001 = getElementType("org.behaviorengineering.combe.graphical.diagram.AlternativeBranch_2001"); //$NON-NLS-1$
+	/**
+	* @generated
+	*/
+	public static final IElementType ParallelBranch_2002 = getElementType("org.behaviorengineering.combe.graphical.diagram.ParallelBranch_2002"); //$NON-NLS-1$
+	/**
+	* @generated
+	*/
+	public static final IElementType AtomicSequence_2003 = getElementType("org.behaviorengineering.combe.graphical.diagram.AtomicSequence_2003"); //$NON-NLS-1$
+	/**
+	* @generated
+	*/
+	public static final IElementType StandardNode_3001 = getElementType("org.behaviorengineering.combe.graphical.diagram.StandardNode_3001"); //$NON-NLS-1$
+	/**
+	* @generated
+	*/
+	public static final IElementType EmptyNode_3002 = getElementType("org.behaviorengineering.combe.graphical.diagram.EmptyNode_3002"); //$NON-NLS-1$
+	/**
+	* @generated
+	*/
+	public static final IElementType StandardNode_3003 = getElementType("org.behaviorengineering.combe.graphical.diagram.StandardNode_3003"); //$NON-NLS-1$
+	/**
+	* @generated
+	*/
+	public static final IElementType EmptyNode_3004 = getElementType("org.behaviorengineering.combe.graphical.diagram.EmptyNode_3004"); //$NON-NLS-1$
+	/**
+	* @generated
+	*/
+	public static final IElementType StandardNode_3005 = getElementType("org.behaviorengineering.combe.graphical.diagram.StandardNode_3005"); //$NON-NLS-1$
+	/**
+	* @generated
+	*/
+	public static final IElementType EmptyNode_3006 = getElementType("org.behaviorengineering.combe.graphical.diagram.EmptyNode_3006"); //$NON-NLS-1$
+	/**
+	* @generated
+	*/
+	public static final IElementType AlternativeBranchChildren_4001 = getElementType("org.behaviorengineering.combe.graphical.diagram.AlternativeBranchChildren_4001"); //$NON-NLS-1$
+	/**
+	* @generated
+	*/
+	public static final IElementType ParallelBranchChildren_4002 = getElementType("org.behaviorengineering.combe.graphical.diagram.ParallelBranchChildren_4002"); //$NON-NLS-1$
+	/**
+	* @generated
+	*/
+	public static final IElementType AtomicSequenceChild_4003 = getElementType("org.behaviorengineering.combe.graphical.diagram.AtomicSequenceChild_4003"); //$NON-NLS-1$
+
+	/**
+	* @generated
+	*/
+	private static ImageRegistry getImageRegistry() {
+		if (imageRegistry == null) {
+			imageRegistry = new ImageRegistry();
+		}
+		return imageRegistry;
+	}
+
+	/**
+	* @generated
+	*/
+	private static String getImageRegistryKey(ENamedElement element) {
+		return element.getName();
+	}
+
+	/**
+	* @generated
+	*/
+	private static ImageDescriptor getProvidedImageDescriptor(ENamedElement element) {
+		if (element instanceof EStructuralFeature) {
+			EStructuralFeature feature = ((EStructuralFeature) element);
+			EClass eContainingClass = feature.getEContainingClass();
+			EClassifier eType = feature.getEType();
+			if (eContainingClass != null && !eContainingClass.isAbstract()) {
+				element = eContainingClass;
+			} else if (eType instanceof EClass && !((EClass) eType).isAbstract()) {
+				element = eType;
+			}
+		}
+		if (element instanceof EClass) {
+			EClass eClass = (EClass) element;
+			if (!eClass.isAbstract()) {
+				return ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getItemImageDescriptor(eClass.getEPackage().getEFactoryInstance().create(eClass));
+			}
+		}
+		// TODO : support structural features
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	public static ImageDescriptor getImageDescriptor(ENamedElement element) {
+		String key = getImageRegistryKey(element);
+		ImageDescriptor imageDescriptor = getImageRegistry().getDescriptor(key);
+		if (imageDescriptor == null) {
+			imageDescriptor = getProvidedImageDescriptor(element);
+			if (imageDescriptor == null) {
+				imageDescriptor = ImageDescriptor.getMissingImageDescriptor();
+			}
+			getImageRegistry().put(key, imageDescriptor);
+		}
+		return imageDescriptor;
+	}
+
+	/**
+	* @generated
+	*/
+	public static Image getImage(ENamedElement element) {
+		String key = getImageRegistryKey(element);
+		Image image = getImageRegistry().get(key);
+		if (image == null) {
+			ImageDescriptor imageDescriptor = getProvidedImageDescriptor(element);
+			if (imageDescriptor == null) {
+				imageDescriptor = ImageDescriptor.getMissingImageDescriptor();
+			}
+			getImageRegistry().put(key, imageDescriptor);
+			image = getImageRegistry().get(key);
+		}
+		return image;
+	}
+
+	/**
+	* @generated
+	*/
+	public static ImageDescriptor getImageDescriptor(IAdaptable hint) {
+		ENamedElement element = getElement(hint);
+		if (element == null) {
+			return null;
+		}
+		return getImageDescriptor(element);
+	}
+
+	/**
+	* @generated
+	*/
+	public static Image getImage(IAdaptable hint) {
+		ENamedElement element = getElement(hint);
+		if (element == null) {
+			return null;
+		}
+		return getImage(element);
+	}
+
+	/**
+	* Returns 'type' of the ecore object associated with the hint.
+	* 
+	* @generated
+	*/
+	public static ENamedElement getElement(IAdaptable hint) {
+		Object type = hint.getAdapter(IElementType.class);
+		if (elements == null) {
+			elements = new IdentityHashMap<IElementType, ENamedElement>();
+
+			elements.put(Specification_1000, ComBE.ComBEPackage.eINSTANCE.getSpecification());
+
+			elements.put(AlternativeBranch_2001, ComBE.ComBEPackage.eINSTANCE.getAlternativeBranch());
+
+			elements.put(ParallelBranch_2002, ComBE.ComBEPackage.eINSTANCE.getParallelBranch());
+
+			elements.put(AtomicSequence_2003, ComBE.ComBEPackage.eINSTANCE.getAtomicSequence());
+
+			elements.put(StandardNode_3001, ComBE.ComBEPackage.eINSTANCE.getStandardNode());
+
+			elements.put(EmptyNode_3002, ComBE.ComBEPackage.eINSTANCE.getEmptyNode());
+
+			elements.put(StandardNode_3003, ComBE.ComBEPackage.eINSTANCE.getStandardNode());
+
+			elements.put(EmptyNode_3004, ComBE.ComBEPackage.eINSTANCE.getEmptyNode());
+
+			elements.put(StandardNode_3005, ComBE.ComBEPackage.eINSTANCE.getStandardNode());
+
+			elements.put(EmptyNode_3006, ComBE.ComBEPackage.eINSTANCE.getEmptyNode());
+
+			elements.put(AlternativeBranchChildren_4001, ComBE.ComBEPackage.eINSTANCE.getAlternativeBranch_Children());
+
+			elements.put(ParallelBranchChildren_4002, ComBE.ComBEPackage.eINSTANCE.getParallelBranch_Children());
+
+			elements.put(AtomicSequenceChild_4003, ComBE.ComBEPackage.eINSTANCE.getAtomicSequence_Child());
+		}
+		return (ENamedElement) elements.get(type);
+	}
+
+	/**
+	* @generated
+	*/
+	private static IElementType getElementType(String id) {
+		return ElementTypeRegistry.getInstance().getType(id);
+	}
+
+	/**
+	* @generated
+	*/
+	public static boolean isKnownElementType(IElementType elementType) {
+		if (KNOWN_ELEMENT_TYPES == null) {
+			KNOWN_ELEMENT_TYPES = new HashSet<IElementType>();
+			KNOWN_ELEMENT_TYPES.add(Specification_1000);
+			KNOWN_ELEMENT_TYPES.add(AlternativeBranch_2001);
+			KNOWN_ELEMENT_TYPES.add(ParallelBranch_2002);
+			KNOWN_ELEMENT_TYPES.add(AtomicSequence_2003);
+			KNOWN_ELEMENT_TYPES.add(StandardNode_3001);
+			KNOWN_ELEMENT_TYPES.add(EmptyNode_3002);
+			KNOWN_ELEMENT_TYPES.add(StandardNode_3003);
+			KNOWN_ELEMENT_TYPES.add(EmptyNode_3004);
+			KNOWN_ELEMENT_TYPES.add(StandardNode_3005);
+			KNOWN_ELEMENT_TYPES.add(EmptyNode_3006);
+			KNOWN_ELEMENT_TYPES.add(AlternativeBranchChildren_4001);
+			KNOWN_ELEMENT_TYPES.add(ParallelBranchChildren_4002);
+			KNOWN_ELEMENT_TYPES.add(AtomicSequenceChild_4003);
+		}
+		return KNOWN_ELEMENT_TYPES.contains(elementType);
+	}
+
+	/**
+	* @generated
+	*/
+	public static IElementType getElementType(int visualID) {
+		switch (visualID) {
+		case ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID:
+			return Specification_1000;
+		case ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID:
+			return AlternativeBranch_2001;
+		case ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID:
+			return ParallelBranch_2002;
+		case ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID:
+			return AtomicSequence_2003;
+		case ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID:
+			return StandardNode_3001;
+		case ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID:
+			return EmptyNode_3002;
+		case ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID:
+			return StandardNode_3003;
+		case ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID:
+			return EmptyNode_3004;
+		case ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID:
+			return StandardNode_3005;
+		case ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID:
+			return EmptyNode_3006;
+		case ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID:
+			return AlternativeBranchChildren_4001;
+		case ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID:
+			return ParallelBranchChildren_4002;
+		case ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID:
+			return AtomicSequenceChild_4003;
+		}
+		return null;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ComBEIconProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ComBEIconProvider.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,31 @@
+package ComBE.diagram.providers;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.gmf.runtime.common.core.service.AbstractProvider;
+import org.eclipse.gmf.runtime.common.core.service.IOperation;
+import org.eclipse.gmf.runtime.common.ui.services.icon.GetIconOperation;
+import org.eclipse.gmf.runtime.common.ui.services.icon.IIconProvider;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * @generated
+ */
+public class ComBEIconProvider extends AbstractProvider implements IIconProvider {
+
+	/**
+	* @generated
+	*/
+	public Image getIcon(IAdaptable hint, int flags) {
+		return ComBE.diagram.providers.ComBEElementTypes.getImage(hint);
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean provides(IOperation operation) {
+		if (operation instanceof GetIconOperation) {
+			return ((GetIconOperation) operation).execute(this) != null;
+		}
+		return false;
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ComBEModelingAssistantProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ComBEModelingAssistantProvider.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,212 @@
+package ComBE.diagram.providers;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.List;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
+import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
+import org.eclipse.gmf.runtime.emf.type.core.ElementTypeRegistry;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+import org.eclipse.gmf.runtime.emf.ui.services.modelingassistant.ModelingAssistantProvider;
+import org.eclipse.gmf.runtime.notation.Diagram;
+import org.eclipse.jface.viewers.ILabelProvider;
+import org.eclipse.jface.window.Window;
+import org.eclipse.swt.widgets.Display;
+import org.eclipse.swt.widgets.Shell;
+import org.eclipse.ui.dialogs.ElementListSelectionDialog;
+
+/**
+ * @generated
+ */
+public class ComBEModelingAssistantProvider extends ModelingAssistantProvider {
+
+	/**
+	* @generated
+	*/
+	public List getTypesForPopupBar(IAdaptable host) {
+		IGraphicalEditPart editPart = (IGraphicalEditPart) host.getAdapter(IGraphicalEditPart.class);
+		if (editPart instanceof ComBE.diagram.edit.parts.SpecificationEditPart) {
+			ArrayList<IElementType> types = new ArrayList<IElementType>(3);
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AlternativeBranch_2001);
+			types.add(ComBE.diagram.providers.ComBEElementTypes.ParallelBranch_2002);
+			types.add(ComBE.diagram.providers.ComBEElementTypes.AtomicSequence_2003);
+			return types;
+		}
+		if (editPart instanceof ComBE.diagram.edit.parts.AlternativeBranchEditPart) {
+			ArrayList<IElementType> types = new ArrayList<IElementType>(2);
+			types.add(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3001);
+			types.add(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3002);
+			return types;
+		}
+		if (editPart instanceof ComBE.diagram.edit.parts.ParallelBranchEditPart) {
+			ArrayList<IElementType> types = new ArrayList<IElementType>(2);
+			types.add(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3003);
+			types.add(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3004);
+			return types;
+		}
+		if (editPart instanceof ComBE.diagram.edit.parts.AtomicSequenceEditPart) {
+			ArrayList<IElementType> types = new ArrayList<IElementType>(2);
+			types.add(ComBE.diagram.providers.ComBEElementTypes.StandardNode_3005);
+			types.add(ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3006);
+			return types;
+		}
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public List getRelTypesOnSource(IAdaptable source) {
+		IGraphicalEditPart sourceEditPart = (IGraphicalEditPart) source.getAdapter(IGraphicalEditPart.class);
+		if (sourceEditPart instanceof ComBE.diagram.edit.parts.AlternativeBranchEditPart) {
+			return ((ComBE.diagram.edit.parts.AlternativeBranchEditPart) sourceEditPart).getMARelTypesOnSource();
+		}
+		if (sourceEditPart instanceof ComBE.diagram.edit.parts.ParallelBranchEditPart) {
+			return ((ComBE.diagram.edit.parts.ParallelBranchEditPart) sourceEditPart).getMARelTypesOnSource();
+		}
+		if (sourceEditPart instanceof ComBE.diagram.edit.parts.AtomicSequenceEditPart) {
+			return ((ComBE.diagram.edit.parts.AtomicSequenceEditPart) sourceEditPart).getMARelTypesOnSource();
+		}
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public List getRelTypesOnTarget(IAdaptable target) {
+		IGraphicalEditPart targetEditPart = (IGraphicalEditPart) target.getAdapter(IGraphicalEditPart.class);
+		if (targetEditPart instanceof ComBE.diagram.edit.parts.AlternativeBranchEditPart) {
+			return ((ComBE.diagram.edit.parts.AlternativeBranchEditPart) targetEditPart).getMARelTypesOnTarget();
+		}
+		if (targetEditPart instanceof ComBE.diagram.edit.parts.ParallelBranchEditPart) {
+			return ((ComBE.diagram.edit.parts.ParallelBranchEditPart) targetEditPart).getMARelTypesOnTarget();
+		}
+		if (targetEditPart instanceof ComBE.diagram.edit.parts.AtomicSequenceEditPart) {
+			return ((ComBE.diagram.edit.parts.AtomicSequenceEditPart) targetEditPart).getMARelTypesOnTarget();
+		}
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public List getRelTypesOnSourceAndTarget(IAdaptable source, IAdaptable target) {
+		IGraphicalEditPart sourceEditPart = (IGraphicalEditPart) source.getAdapter(IGraphicalEditPart.class);
+		IGraphicalEditPart targetEditPart = (IGraphicalEditPart) target.getAdapter(IGraphicalEditPart.class);
+		if (sourceEditPart instanceof ComBE.diagram.edit.parts.AlternativeBranchEditPart) {
+			return ((ComBE.diagram.edit.parts.AlternativeBranchEditPart) sourceEditPart).getMARelTypesOnSourceAndTarget(targetEditPart);
+		}
+		if (sourceEditPart instanceof ComBE.diagram.edit.parts.ParallelBranchEditPart) {
+			return ((ComBE.diagram.edit.parts.ParallelBranchEditPart) sourceEditPart).getMARelTypesOnSourceAndTarget(targetEditPart);
+		}
+		if (sourceEditPart instanceof ComBE.diagram.edit.parts.AtomicSequenceEditPart) {
+			return ((ComBE.diagram.edit.parts.AtomicSequenceEditPart) sourceEditPart).getMARelTypesOnSourceAndTarget(targetEditPart);
+		}
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public List getTypesForSource(IAdaptable target, IElementType relationshipType) {
+		IGraphicalEditPart targetEditPart = (IGraphicalEditPart) target.getAdapter(IGraphicalEditPart.class);
+		if (targetEditPart instanceof ComBE.diagram.edit.parts.AlternativeBranchEditPart) {
+			return ((ComBE.diagram.edit.parts.AlternativeBranchEditPart) targetEditPart).getMATypesForSource(relationshipType);
+		}
+		if (targetEditPart instanceof ComBE.diagram.edit.parts.ParallelBranchEditPart) {
+			return ((ComBE.diagram.edit.parts.ParallelBranchEditPart) targetEditPart).getMATypesForSource(relationshipType);
+		}
+		if (targetEditPart instanceof ComBE.diagram.edit.parts.AtomicSequenceEditPart) {
+			return ((ComBE.diagram.edit.parts.AtomicSequenceEditPart) targetEditPart).getMATypesForSource(relationshipType);
+		}
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public List getTypesForTarget(IAdaptable source, IElementType relationshipType) {
+		IGraphicalEditPart sourceEditPart = (IGraphicalEditPart) source.getAdapter(IGraphicalEditPart.class);
+		if (sourceEditPart instanceof ComBE.diagram.edit.parts.AlternativeBranchEditPart) {
+			return ((ComBE.diagram.edit.parts.AlternativeBranchEditPart) sourceEditPart).getMATypesForTarget(relationshipType);
+		}
+		if (sourceEditPart instanceof ComBE.diagram.edit.parts.ParallelBranchEditPart) {
+			return ((ComBE.diagram.edit.parts.ParallelBranchEditPart) sourceEditPart).getMATypesForTarget(relationshipType);
+		}
+		if (sourceEditPart instanceof ComBE.diagram.edit.parts.AtomicSequenceEditPart) {
+			return ((ComBE.diagram.edit.parts.AtomicSequenceEditPart) sourceEditPart).getMATypesForTarget(relationshipType);
+		}
+		return Collections.EMPTY_LIST;
+	}
+
+	/**
+	* @generated
+	*/
+	public EObject selectExistingElementForSource(IAdaptable target, IElementType relationshipType) {
+		return selectExistingElement(target, getTypesForSource(target, relationshipType));
+	}
+
+	/**
+	* @generated
+	*/
+	public EObject selectExistingElementForTarget(IAdaptable source, IElementType relationshipType) {
+		return selectExistingElement(source, getTypesForTarget(source, relationshipType));
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject selectExistingElement(IAdaptable host, Collection types) {
+		if (types.isEmpty()) {
+			return null;
+		}
+		IGraphicalEditPart editPart = (IGraphicalEditPart) host.getAdapter(IGraphicalEditPart.class);
+		if (editPart == null) {
+			return null;
+		}
+		Diagram diagram = (Diagram) editPart.getRoot().getContents().getModel();
+		HashSet<EObject> elements = new HashSet<EObject>();
+		for (Iterator<EObject> it = diagram.getElement().eAllContents(); it.hasNext();) {
+			EObject element = it.next();
+			if (isApplicableElement(element, types)) {
+				elements.add(element);
+			}
+		}
+		if (elements.isEmpty()) {
+			return null;
+		}
+		return selectElement((EObject[]) elements.toArray(new EObject[elements.size()]));
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean isApplicableElement(EObject element, Collection types) {
+		IElementType type = ElementTypeRegistry.getInstance().getElementType(element);
+		return types.contains(type);
+	}
+
+	/**
+	* @generated
+	*/
+	protected EObject selectElement(EObject[] elements) {
+		Shell shell = Display.getCurrent().getActiveShell();
+		ILabelProvider labelProvider = new AdapterFactoryLabelProvider(ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getItemProvidersAdapterFactory());
+		ElementListSelectionDialog dialog = new ElementListSelectionDialog(shell, labelProvider);
+		dialog.setMessage(ComBE.diagram.part.Messages.ComBEModelingAssistantProviderMessage);
+		dialog.setTitle(ComBE.diagram.part.Messages.ComBEModelingAssistantProviderTitle);
+		dialog.setMultipleSelection(false);
+		dialog.setElements(elements);
+		EObject selected = null;
+		if (dialog.open() == Window.OK) {
+			selected = (EObject) dialog.getFirstResult();
+		}
+		return selected;
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ComBEParserProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ComBEParserProvider.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,535 @@
+package ComBE.diagram.providers;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EAttribute;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gmf.runtime.common.core.service.AbstractProvider;
+import org.eclipse.gmf.runtime.common.core.service.IOperation;
+import org.eclipse.gmf.runtime.common.ui.services.parser.GetParserOperation;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
+import org.eclipse.gmf.runtime.common.ui.services.parser.IParserProvider;
+import org.eclipse.gmf.runtime.common.ui.services.parser.ParserService;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+import org.eclipse.gmf.runtime.emf.ui.services.parser.ParserHintAdapter;
+import org.eclipse.gmf.runtime.notation.View;
+
+/**
+ * @generated
+ */
+public class ComBEParserProvider extends AbstractProvider implements IParserProvider {
+
+	/**
+	* @generated
+	*/
+	private ComBE.diagram.parsers.StandardNodeLabelExpressionLabelParser standardNodeLabel_5001Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getStandardNodeLabel_5001Parser() {
+		if (standardNodeLabel_5001Parser == null) {
+			standardNodeLabel_5001Parser = new ComBE.diagram.parsers.StandardNodeLabelExpressionLabelParser();
+		}
+		return standardNodeLabel_5001Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private ComBE.diagram.parsers.StandardNodeLabelExpressionLabelParser standardNodeLabel_5002Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getStandardNodeLabel_5002Parser() {
+		if (standardNodeLabel_5002Parser == null) {
+			standardNodeLabel_5002Parser = new ComBE.diagram.parsers.StandardNodeLabelExpressionLabelParser();
+		}
+		return standardNodeLabel_5002Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private ComBE.diagram.parsers.StandardNodeLabelExpressionLabelParser standardNodeLabel_5003Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getStandardNodeLabel_5003Parser() {
+		if (standardNodeLabel_5003Parser == null) {
+			standardNodeLabel_5003Parser = new ComBE.diagram.parsers.StandardNodeLabelExpressionLabelParser();
+		}
+		return standardNodeLabel_5003Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private IParser standardNodeTracibilitystatus_5004Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getStandardNodeTracibilitystatus_5004Parser() {
+		if (standardNodeTracibilitystatus_5004Parser == null) {
+			EAttribute[] features = new EAttribute[] { ComBE.ComBEPackage.eINSTANCE.getStandardNode_Tracibilitystatus() };
+			ComBE.diagram.parsers.MessageFormatParser parser = new ComBE.diagram.parsers.MessageFormatParser(features);
+			standardNodeTracibilitystatus_5004Parser = parser;
+		}
+		return standardNodeTracibilitystatus_5004Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private IParser standardNodeOperator_5005Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getStandardNodeOperator_5005Parser() {
+		if (standardNodeOperator_5005Parser == null) {
+			EAttribute[] features = new EAttribute[] { ComBE.ComBEPackage.eINSTANCE.getNode_Operator() };
+			ComBE.diagram.parsers.MessageFormatParser parser = new ComBE.diagram.parsers.MessageFormatParser(features);
+			standardNodeOperator_5005Parser = parser;
+		}
+		return standardNodeOperator_5005Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private IParser standardNodeLabel_5006Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getStandardNodeLabel_5006Parser() {
+		if (standardNodeLabel_5006Parser == null) {
+			EAttribute[] features = new EAttribute[] { ComBE.ComBEPackage.eINSTANCE.getNode_Label() };
+			ComBE.diagram.parsers.MessageFormatParser parser = new ComBE.diagram.parsers.MessageFormatParser(features);
+			standardNodeLabel_5006Parser = parser;
+		}
+		return standardNodeLabel_5006Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private IParser emptyNodeLabel_5021Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getEmptyNodeLabel_5021Parser() {
+		if (emptyNodeLabel_5021Parser == null) {
+			EAttribute[] features = new EAttribute[] { ComBE.ComBEPackage.eINSTANCE.getNode_Label() };
+			ComBE.diagram.parsers.MessageFormatParser parser = new ComBE.diagram.parsers.MessageFormatParser(features);
+			emptyNodeLabel_5021Parser = parser;
+		}
+		return emptyNodeLabel_5021Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private IParser emptyNodeOperator_5022Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getEmptyNodeOperator_5022Parser() {
+		if (emptyNodeOperator_5022Parser == null) {
+			EAttribute[] features = new EAttribute[] { ComBE.ComBEPackage.eINSTANCE.getNode_Operator() };
+			ComBE.diagram.parsers.MessageFormatParser parser = new ComBE.diagram.parsers.MessageFormatParser(features);
+			emptyNodeOperator_5022Parser = parser;
+		}
+		return emptyNodeOperator_5022Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private ComBE.diagram.parsers.StandardNodeLabelExpressionLabelParser standardNodeLabel_5007Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getStandardNodeLabel_5007Parser() {
+		if (standardNodeLabel_5007Parser == null) {
+			standardNodeLabel_5007Parser = new ComBE.diagram.parsers.StandardNodeLabelExpressionLabelParser();
+		}
+		return standardNodeLabel_5007Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private ComBE.diagram.parsers.StandardNodeLabelExpressionLabelParser standardNodeLabel_5008Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getStandardNodeLabel_5008Parser() {
+		if (standardNodeLabel_5008Parser == null) {
+			standardNodeLabel_5008Parser = new ComBE.diagram.parsers.StandardNodeLabelExpressionLabelParser();
+		}
+		return standardNodeLabel_5008Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private ComBE.diagram.parsers.StandardNodeLabelExpressionLabelParser standardNodeLabel_5009Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getStandardNodeLabel_5009Parser() {
+		if (standardNodeLabel_5009Parser == null) {
+			standardNodeLabel_5009Parser = new ComBE.diagram.parsers.StandardNodeLabelExpressionLabelParser();
+		}
+		return standardNodeLabel_5009Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private IParser standardNodeTracibilitystatus_5010Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getStandardNodeTracibilitystatus_5010Parser() {
+		if (standardNodeTracibilitystatus_5010Parser == null) {
+			EAttribute[] features = new EAttribute[] { ComBE.ComBEPackage.eINSTANCE.getStandardNode_Tracibilitystatus() };
+			ComBE.diagram.parsers.MessageFormatParser parser = new ComBE.diagram.parsers.MessageFormatParser(features);
+			standardNodeTracibilitystatus_5010Parser = parser;
+		}
+		return standardNodeTracibilitystatus_5010Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private IParser standardNodeOperator_5011Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getStandardNodeOperator_5011Parser() {
+		if (standardNodeOperator_5011Parser == null) {
+			EAttribute[] features = new EAttribute[] { ComBE.ComBEPackage.eINSTANCE.getNode_Operator() };
+			ComBE.diagram.parsers.MessageFormatParser parser = new ComBE.diagram.parsers.MessageFormatParser(features);
+			standardNodeOperator_5011Parser = parser;
+		}
+		return standardNodeOperator_5011Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private IParser standardNodeLabel_5012Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getStandardNodeLabel_5012Parser() {
+		if (standardNodeLabel_5012Parser == null) {
+			EAttribute[] features = new EAttribute[] { ComBE.ComBEPackage.eINSTANCE.getNode_Label() };
+			ComBE.diagram.parsers.MessageFormatParser parser = new ComBE.diagram.parsers.MessageFormatParser(features);
+			standardNodeLabel_5012Parser = parser;
+		}
+		return standardNodeLabel_5012Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private IParser emptyNodeLabel_5023Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getEmptyNodeLabel_5023Parser() {
+		if (emptyNodeLabel_5023Parser == null) {
+			EAttribute[] features = new EAttribute[] { ComBE.ComBEPackage.eINSTANCE.getNode_Label() };
+			ComBE.diagram.parsers.MessageFormatParser parser = new ComBE.diagram.parsers.MessageFormatParser(features);
+			emptyNodeLabel_5023Parser = parser;
+		}
+		return emptyNodeLabel_5023Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private IParser emptyNodeOperator_5024Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getEmptyNodeOperator_5024Parser() {
+		if (emptyNodeOperator_5024Parser == null) {
+			EAttribute[] features = new EAttribute[] { ComBE.ComBEPackage.eINSTANCE.getNode_Operator() };
+			ComBE.diagram.parsers.MessageFormatParser parser = new ComBE.diagram.parsers.MessageFormatParser(features);
+			emptyNodeOperator_5024Parser = parser;
+		}
+		return emptyNodeOperator_5024Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private ComBE.diagram.parsers.StandardNodeLabelExpressionLabelParser standardNodeLabel_5013Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getStandardNodeLabel_5013Parser() {
+		if (standardNodeLabel_5013Parser == null) {
+			standardNodeLabel_5013Parser = new ComBE.diagram.parsers.StandardNodeLabelExpressionLabelParser();
+		}
+		return standardNodeLabel_5013Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private ComBE.diagram.parsers.StandardNodeLabelExpressionLabelParser standardNodeLabel_5014Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getStandardNodeLabel_5014Parser() {
+		if (standardNodeLabel_5014Parser == null) {
+			standardNodeLabel_5014Parser = new ComBE.diagram.parsers.StandardNodeLabelExpressionLabelParser();
+		}
+		return standardNodeLabel_5014Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private ComBE.diagram.parsers.StandardNodeLabelExpressionLabelParser standardNodeLabel_5015Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getStandardNodeLabel_5015Parser() {
+		if (standardNodeLabel_5015Parser == null) {
+			standardNodeLabel_5015Parser = new ComBE.diagram.parsers.StandardNodeLabelExpressionLabelParser();
+		}
+		return standardNodeLabel_5015Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private IParser standardNodeTracibilitystatus_5016Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getStandardNodeTracibilitystatus_5016Parser() {
+		if (standardNodeTracibilitystatus_5016Parser == null) {
+			EAttribute[] features = new EAttribute[] { ComBE.ComBEPackage.eINSTANCE.getStandardNode_Tracibilitystatus() };
+			ComBE.diagram.parsers.MessageFormatParser parser = new ComBE.diagram.parsers.MessageFormatParser(features);
+			standardNodeTracibilitystatus_5016Parser = parser;
+		}
+		return standardNodeTracibilitystatus_5016Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private IParser standardNodeOperator_5017Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getStandardNodeOperator_5017Parser() {
+		if (standardNodeOperator_5017Parser == null) {
+			EAttribute[] features = new EAttribute[] { ComBE.ComBEPackage.eINSTANCE.getNode_Operator() };
+			ComBE.diagram.parsers.MessageFormatParser parser = new ComBE.diagram.parsers.MessageFormatParser(features);
+			standardNodeOperator_5017Parser = parser;
+		}
+		return standardNodeOperator_5017Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private IParser standardNodeLabel_5018Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getStandardNodeLabel_5018Parser() {
+		if (standardNodeLabel_5018Parser == null) {
+			EAttribute[] features = new EAttribute[] { ComBE.ComBEPackage.eINSTANCE.getNode_Label() };
+			ComBE.diagram.parsers.MessageFormatParser parser = new ComBE.diagram.parsers.MessageFormatParser(features);
+			standardNodeLabel_5018Parser = parser;
+		}
+		return standardNodeLabel_5018Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private IParser emptyNodeLabel_5019Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getEmptyNodeLabel_5019Parser() {
+		if (emptyNodeLabel_5019Parser == null) {
+			EAttribute[] features = new EAttribute[] { ComBE.ComBEPackage.eINSTANCE.getNode_Label() };
+			ComBE.diagram.parsers.MessageFormatParser parser = new ComBE.diagram.parsers.MessageFormatParser(features);
+			emptyNodeLabel_5019Parser = parser;
+		}
+		return emptyNodeLabel_5019Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	private IParser emptyNodeOperator_5020Parser;
+
+	/**
+	* @generated
+	*/
+	private IParser getEmptyNodeOperator_5020Parser() {
+		if (emptyNodeOperator_5020Parser == null) {
+			EAttribute[] features = new EAttribute[] { ComBE.ComBEPackage.eINSTANCE.getNode_Operator() };
+			ComBE.diagram.parsers.MessageFormatParser parser = new ComBE.diagram.parsers.MessageFormatParser(features);
+			emptyNodeOperator_5020Parser = parser;
+		}
+		return emptyNodeOperator_5020Parser;
+	}
+
+	/**
+	* @generated
+	*/
+	protected IParser getParser(int visualID) {
+		switch (visualID) {
+		case ComBE.diagram.edit.parts.WrappingLabelEditPart.VISUAL_ID:
+			return getStandardNodeLabel_5001Parser();
+		case ComBE.diagram.edit.parts.WrappingLabel2EditPart.VISUAL_ID:
+			return getStandardNodeLabel_5002Parser();
+		case ComBE.diagram.edit.parts.WrappingLabel3EditPart.VISUAL_ID:
+			return getStandardNodeLabel_5003Parser();
+		case ComBE.diagram.edit.parts.StandardNodeTracibilitystatusEditPart.VISUAL_ID:
+			return getStandardNodeTracibilitystatus_5004Parser();
+		case ComBE.diagram.edit.parts.StandardNodeOperatorEditPart.VISUAL_ID:
+			return getStandardNodeOperator_5005Parser();
+		case ComBE.diagram.edit.parts.StandardNodeLabelEditPart.VISUAL_ID:
+			return getStandardNodeLabel_5006Parser();
+		case ComBE.diagram.edit.parts.EmptyNodeLabel2EditPart.VISUAL_ID:
+			return getEmptyNodeLabel_5021Parser();
+		case ComBE.diagram.edit.parts.EmptyNodeOperator2EditPart.VISUAL_ID:
+			return getEmptyNodeOperator_5022Parser();
+		case ComBE.diagram.edit.parts.WrappingLabel4EditPart.VISUAL_ID:
+			return getStandardNodeLabel_5007Parser();
+		case ComBE.diagram.edit.parts.WrappingLabel5EditPart.VISUAL_ID:
+			return getStandardNodeLabel_5008Parser();
+		case ComBE.diagram.edit.parts.WrappingLabel6EditPart.VISUAL_ID:
+			return getStandardNodeLabel_5009Parser();
+		case ComBE.diagram.edit.parts.StandardNodeTracibilitystatus2EditPart.VISUAL_ID:
+			return getStandardNodeTracibilitystatus_5010Parser();
+		case ComBE.diagram.edit.parts.StandardNodeOperator2EditPart.VISUAL_ID:
+			return getStandardNodeOperator_5011Parser();
+		case ComBE.diagram.edit.parts.StandardNodeLabel2EditPart.VISUAL_ID:
+			return getStandardNodeLabel_5012Parser();
+		case ComBE.diagram.edit.parts.EmptyNodeLabel3EditPart.VISUAL_ID:
+			return getEmptyNodeLabel_5023Parser();
+		case ComBE.diagram.edit.parts.EmptyNodeOperator3EditPart.VISUAL_ID:
+			return getEmptyNodeOperator_5024Parser();
+		case ComBE.diagram.edit.parts.WrappingLabel7EditPart.VISUAL_ID:
+			return getStandardNodeLabel_5013Parser();
+		case ComBE.diagram.edit.parts.WrappingLabel8EditPart.VISUAL_ID:
+			return getStandardNodeLabel_5014Parser();
+		case ComBE.diagram.edit.parts.WrappingLabel9EditPart.VISUAL_ID:
+			return getStandardNodeLabel_5015Parser();
+		case ComBE.diagram.edit.parts.StandardNodeTracibilitystatus3EditPart.VISUAL_ID:
+			return getStandardNodeTracibilitystatus_5016Parser();
+		case ComBE.diagram.edit.parts.StandardNodeOperator3EditPart.VISUAL_ID:
+			return getStandardNodeOperator_5017Parser();
+		case ComBE.diagram.edit.parts.StandardNodeLabel3EditPart.VISUAL_ID:
+			return getStandardNodeLabel_5018Parser();
+		case ComBE.diagram.edit.parts.EmptyNodeLabelEditPart.VISUAL_ID:
+			return getEmptyNodeLabel_5019Parser();
+		case ComBE.diagram.edit.parts.EmptyNodeOperatorEditPart.VISUAL_ID:
+			return getEmptyNodeOperator_5020Parser();
+		}
+		return null;
+	}
+
+	/**
+	* Utility method that consults ParserService
+	* @generated
+	*/
+	public static IParser getParser(IElementType type, EObject object, String parserHint) {
+		return ParserService.getInstance().getParser(new HintAdapter(type, object, parserHint));
+	}
+
+	/**
+	* @generated
+	*/
+	public IParser getParser(IAdaptable hint) {
+		String vid = (String) hint.getAdapter(String.class);
+		if (vid != null) {
+			return getParser(ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(vid));
+		}
+		View view = (View) hint.getAdapter(View.class);
+		if (view != null) {
+			return getParser(ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view));
+		}
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	public boolean provides(IOperation operation) {
+		if (operation instanceof GetParserOperation) {
+			IAdaptable hint = ((GetParserOperation) operation).getHint();
+			if (ComBE.diagram.providers.ComBEElementTypes.getElement(hint) == null) {
+				return false;
+			}
+			return getParser(hint) != null;
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	private static class HintAdapter extends ParserHintAdapter {
+
+		/**
+		* @generated
+		*/
+		private final IElementType elementType;
+
+		/**
+		* @generated
+		*/
+		public HintAdapter(IElementType type, EObject object, String parserHint) {
+			super(object, parserHint);
+			assert type != null;
+			elementType = type;
+		}
+
+		/**
+		* @generated
+		*/
+		public Object getAdapter(Class adapter) {
+			if (IElementType.class.equals(adapter)) {
+				return elementType;
+			}
+			return super.getAdapter(adapter);
+		}
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ComBEViewProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ComBEViewProvider.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,616 @@
+package ComBE.diagram.providers;
+
+import java.util.ArrayList;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.ecore.EAnnotation;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.EcoreFactory;
+import org.eclipse.emf.transaction.util.TransactionUtil;
+import org.eclipse.gmf.runtime.common.core.service.AbstractProvider;
+import org.eclipse.gmf.runtime.common.core.service.IOperation;
+import org.eclipse.gmf.runtime.diagram.core.preferences.PreferencesHint;
+import org.eclipse.gmf.runtime.diagram.core.providers.IViewProvider;
+import org.eclipse.gmf.runtime.diagram.core.services.view.CreateDiagramViewOperation;
+import org.eclipse.gmf.runtime.diagram.core.services.view.CreateEdgeViewOperation;
+import org.eclipse.gmf.runtime.diagram.core.services.view.CreateNodeViewOperation;
+import org.eclipse.gmf.runtime.diagram.core.services.view.CreateViewForKindOperation;
+import org.eclipse.gmf.runtime.diagram.core.services.view.CreateViewOperation;
+import org.eclipse.gmf.runtime.diagram.core.util.ViewUtil;
+import org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants;
+import org.eclipse.gmf.runtime.draw2d.ui.figures.FigureUtilities;
+import org.eclipse.gmf.runtime.emf.core.util.EMFCoreUtil;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+import org.eclipse.gmf.runtime.emf.type.core.IHintedType;
+import org.eclipse.gmf.runtime.notation.Connector;
+import org.eclipse.gmf.runtime.notation.DecorationNode;
+import org.eclipse.gmf.runtime.notation.Diagram;
+import org.eclipse.gmf.runtime.notation.Edge;
+import org.eclipse.gmf.runtime.notation.FontStyle;
+import org.eclipse.gmf.runtime.notation.MeasurementUnit;
+import org.eclipse.gmf.runtime.notation.Node;
+import org.eclipse.gmf.runtime.notation.NotationFactory;
+import org.eclipse.gmf.runtime.notation.NotationPackage;
+import org.eclipse.gmf.runtime.notation.RelativeBendpoints;
+import org.eclipse.gmf.runtime.notation.Routing;
+import org.eclipse.gmf.runtime.notation.Shape;
+import org.eclipse.gmf.runtime.notation.TitleStyle;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.gmf.runtime.notation.datatype.RelativeBendpoint;
+import org.eclipse.jface.preference.IPreferenceStore;
+import org.eclipse.jface.preference.PreferenceConverter;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.graphics.FontData;
+
+/**
+ * @generated
+ */
+public class ComBEViewProvider extends AbstractProvider implements IViewProvider {
+
+	/**
+	* @generated
+	*/
+	public final boolean provides(IOperation operation) {
+		if (operation instanceof CreateViewForKindOperation) {
+			return provides((CreateViewForKindOperation) operation);
+		}
+		assert operation instanceof CreateViewOperation;
+		if (operation instanceof CreateDiagramViewOperation) {
+			return provides((CreateDiagramViewOperation) operation);
+		} else if (operation instanceof CreateEdgeViewOperation) {
+			return provides((CreateEdgeViewOperation) operation);
+		} else if (operation instanceof CreateNodeViewOperation) {
+			return provides((CreateNodeViewOperation) operation);
+		}
+		return false;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean provides(CreateViewForKindOperation op) {
+		/*
+		 if (op.getViewKind() == Node.class)
+		 return getNodeViewClass(op.getSemanticAdapter(), op.getContainerView(), op.getSemanticHint()) != null;
+		 if (op.getViewKind() == Edge.class)
+		 return getEdgeViewClass(op.getSemanticAdapter(), op.getContainerView(), op.getSemanticHint()) != null;
+		 */
+		return true;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean provides(CreateDiagramViewOperation op) {
+		return ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID.equals(op.getSemanticHint()) && ComBE.diagram.part.ComBEVisualIDRegistry.getDiagramVisualID(getSemanticElement(op.getSemanticAdapter())) != -1;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean provides(CreateNodeViewOperation op) {
+		if (op.getContainerView() == null) {
+			return false;
+		}
+		IElementType elementType = getSemanticElementType(op.getSemanticAdapter());
+		EObject domainElement = getSemanticElement(op.getSemanticAdapter());
+		int visualID;
+		if (op.getSemanticHint() == null) {
+			// Semantic hint is not specified. Can be a result of call from CanonicalEditPolicy.
+			// In this situation there should be NO elementType, visualID will be determined
+			// by VisualIDRegistry.getNodeVisualID() for domainElement.
+			if (elementType != null || domainElement == null) {
+				return false;
+			}
+			visualID = ComBE.diagram.part.ComBEVisualIDRegistry.getNodeVisualID(op.getContainerView(), domainElement);
+		} else {
+			visualID = ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(op.getSemanticHint());
+			if (elementType != null) {
+				if (!ComBE.diagram.providers.ComBEElementTypes.isKnownElementType(elementType) || (!(elementType instanceof IHintedType))) {
+					return false; // foreign element type
+				}
+				String elementTypeHint = ((IHintedType) elementType).getSemanticHint();
+				if (!op.getSemanticHint().equals(elementTypeHint)) {
+					return false; // if semantic hint is specified it should be the same as in element type
+				}
+				if (domainElement != null && visualID != ComBE.diagram.part.ComBEVisualIDRegistry.getNodeVisualID(op.getContainerView(), domainElement)) {
+					return false; // visual id for node EClass should match visual id from element type
+				}
+			} else {
+				if (!ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID.equals(ComBE.diagram.part.ComBEVisualIDRegistry.getModelID(op.getContainerView()))) {
+					return false; // foreign diagram
+				}
+				switch (visualID) {
+				case ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID:
+				case ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID:
+				case ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID:
+				case ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID:
+				case ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID:
+				case ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID:
+				case ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID:
+				case ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID:
+				case ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID:
+					if (domainElement == null || visualID != ComBE.diagram.part.ComBEVisualIDRegistry.getNodeVisualID(op.getContainerView(), domainElement)) {
+						return false; // visual id in semantic hint should match visual id for domain element
+					}
+					break;
+				default:
+					return false;
+				}
+			}
+		}
+		return ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID == visualID || ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID == visualID || ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID == visualID || ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID == visualID || ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID == visualID || ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID == visualID || ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID == visualID || ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID == visualID || ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID == visualID;
+	}
+
+	/**
+	* @generated
+	*/
+	protected boolean provides(CreateEdgeViewOperation op) {
+		IElementType elementType = getSemanticElementType(op.getSemanticAdapter());
+		if (!ComBE.diagram.providers.ComBEElementTypes.isKnownElementType(elementType) || (!(elementType instanceof IHintedType))) {
+			return false; // foreign element type
+		}
+		String elementTypeHint = ((IHintedType) elementType).getSemanticHint();
+		if (elementTypeHint == null || (op.getSemanticHint() != null && !elementTypeHint.equals(op.getSemanticHint()))) {
+			return false; // our hint is visual id and must be specified, and it should be the same as in element type
+		}
+		int visualID = ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(elementTypeHint);
+		EObject domainElement = getSemanticElement(op.getSemanticAdapter());
+		if (domainElement != null && visualID != ComBE.diagram.part.ComBEVisualIDRegistry.getLinkWithClassVisualID(domainElement)) {
+			return false; // visual id for link EClass should match visual id from element type
+		}
+		return true;
+	}
+
+	/**
+	* @generated
+	*/
+	public Diagram createDiagram(IAdaptable semanticAdapter, String diagramKind, PreferencesHint preferencesHint) {
+		Diagram diagram = NotationFactory.eINSTANCE.createDiagram();
+		diagram.getStyles().add(NotationFactory.eINSTANCE.createDiagramStyle());
+		diagram.setType(ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID);
+		diagram.setElement(getSemanticElement(semanticAdapter));
+		diagram.setMeasurementUnit(MeasurementUnit.PIXEL_LITERAL);
+		return diagram;
+	}
+
+	/**
+	* @generated
+	*/
+	public Node createNode(IAdaptable semanticAdapter, View containerView, String semanticHint, int index, boolean persisted, PreferencesHint preferencesHint) {
+		final EObject domainElement = getSemanticElement(semanticAdapter);
+		final int visualID;
+		if (semanticHint == null) {
+			visualID = ComBE.diagram.part.ComBEVisualIDRegistry.getNodeVisualID(containerView, domainElement);
+		} else {
+			visualID = ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(semanticHint);
+		}
+		switch (visualID) {
+		case ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID:
+			return createAlternativeBranch_2001(domainElement, containerView, index, persisted, preferencesHint);
+		case ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID:
+			return createParallelBranch_2002(domainElement, containerView, index, persisted, preferencesHint);
+		case ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID:
+			return createAtomicSequence_2003(domainElement, containerView, index, persisted, preferencesHint);
+		case ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID:
+			return createStandardNode_3001(domainElement, containerView, index, persisted, preferencesHint);
+		case ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID:
+			return createEmptyNode_3002(domainElement, containerView, index, persisted, preferencesHint);
+		case ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID:
+			return createStandardNode_3003(domainElement, containerView, index, persisted, preferencesHint);
+		case ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID:
+			return createEmptyNode_3004(domainElement, containerView, index, persisted, preferencesHint);
+		case ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID:
+			return createStandardNode_3005(domainElement, containerView, index, persisted, preferencesHint);
+		case ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID:
+			return createEmptyNode_3006(domainElement, containerView, index, persisted, preferencesHint);
+		}
+		// can't happen, provided #provides(CreateNodeViewOperation) is correct
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	public Edge createEdge(IAdaptable semanticAdapter, View containerView, String semanticHint, int index, boolean persisted, PreferencesHint preferencesHint) {
+		IElementType elementType = getSemanticElementType(semanticAdapter);
+		String elementTypeHint = ((IHintedType) elementType).getSemanticHint();
+		switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(elementTypeHint)) {
+		case ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID:
+			return createAlternativeBranchChildren_4001(containerView, index, persisted, preferencesHint);
+		case ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID:
+			return createParallelBranchChildren_4002(containerView, index, persisted, preferencesHint);
+		case ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID:
+			return createAtomicSequenceChild_4003(containerView, index, persisted, preferencesHint);
+		}
+		// can never happen, provided #provides(CreateEdgeViewOperation) is correct
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	public Node createAlternativeBranch_2001(EObject domainElement, View containerView, int index, boolean persisted, PreferencesHint preferencesHint) {
+		Shape node = NotationFactory.eINSTANCE.createShape();
+		node.setLayoutConstraint(NotationFactory.eINSTANCE.createBounds());
+		node.setType(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID));
+		ViewUtil.insertChildView(containerView, node, index, persisted);
+		node.setElement(domainElement);
+		stampShortcut(containerView, node);
+		// initializeFromPreferences 
+		final IPreferenceStore prefStore = (IPreferenceStore) preferencesHint.getPreferenceStore();
+
+		org.eclipse.swt.graphics.RGB lineRGB = PreferenceConverter.getColor(prefStore, IPreferenceConstants.PREF_LINE_COLOR);
+		ViewUtil.setStructuralFeatureValue(node, NotationPackage.eINSTANCE.getLineStyle_LineColor(), FigureUtilities.RGBToInteger(lineRGB));
+		FontStyle nodeFontStyle = (FontStyle) node.getStyle(NotationPackage.Literals.FONT_STYLE);
+		if (nodeFontStyle != null) {
+			FontData fontData = PreferenceConverter.getFontData(prefStore, IPreferenceConstants.PREF_DEFAULT_FONT);
+			nodeFontStyle.setFontName(fontData.getName());
+			nodeFontStyle.setFontHeight(fontData.getHeight());
+			nodeFontStyle.setBold((fontData.getStyle() & SWT.BOLD) != 0);
+			nodeFontStyle.setItalic((fontData.getStyle() & SWT.ITALIC) != 0);
+			org.eclipse.swt.graphics.RGB fontRGB = PreferenceConverter.getColor(prefStore, IPreferenceConstants.PREF_FONT_COLOR);
+			nodeFontStyle.setFontColor(FigureUtilities.RGBToInteger(fontRGB).intValue());
+		}
+		org.eclipse.swt.graphics.RGB fillRGB = PreferenceConverter.getColor(prefStore, IPreferenceConstants.PREF_FILL_COLOR);
+		ViewUtil.setStructuralFeatureValue(node, NotationPackage.eINSTANCE.getFillStyle_FillColor(), FigureUtilities.RGBToInteger(fillRGB));
+		createCompartment(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart.VISUAL_ID), false, false, true, true);
+		return node;
+	}
+
+	/**
+	* @generated
+	*/
+	public Node createParallelBranch_2002(EObject domainElement, View containerView, int index, boolean persisted, PreferencesHint preferencesHint) {
+		Shape node = NotationFactory.eINSTANCE.createShape();
+		node.setLayoutConstraint(NotationFactory.eINSTANCE.createBounds());
+		node.setType(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID));
+		ViewUtil.insertChildView(containerView, node, index, persisted);
+		node.setElement(domainElement);
+		stampShortcut(containerView, node);
+		// initializeFromPreferences 
+		final IPreferenceStore prefStore = (IPreferenceStore) preferencesHint.getPreferenceStore();
+
+		org.eclipse.swt.graphics.RGB lineRGB = PreferenceConverter.getColor(prefStore, IPreferenceConstants.PREF_LINE_COLOR);
+		ViewUtil.setStructuralFeatureValue(node, NotationPackage.eINSTANCE.getLineStyle_LineColor(), FigureUtilities.RGBToInteger(lineRGB));
+		FontStyle nodeFontStyle = (FontStyle) node.getStyle(NotationPackage.Literals.FONT_STYLE);
+		if (nodeFontStyle != null) {
+			FontData fontData = PreferenceConverter.getFontData(prefStore, IPreferenceConstants.PREF_DEFAULT_FONT);
+			nodeFontStyle.setFontName(fontData.getName());
+			nodeFontStyle.setFontHeight(fontData.getHeight());
+			nodeFontStyle.setBold((fontData.getStyle() & SWT.BOLD) != 0);
+			nodeFontStyle.setItalic((fontData.getStyle() & SWT.ITALIC) != 0);
+			org.eclipse.swt.graphics.RGB fontRGB = PreferenceConverter.getColor(prefStore, IPreferenceConstants.PREF_FONT_COLOR);
+			nodeFontStyle.setFontColor(FigureUtilities.RGBToInteger(fontRGB).intValue());
+		}
+		org.eclipse.swt.graphics.RGB fillRGB = PreferenceConverter.getColor(prefStore, IPreferenceConstants.PREF_FILL_COLOR);
+		ViewUtil.setStructuralFeatureValue(node, NotationPackage.eINSTANCE.getFillStyle_FillColor(), FigureUtilities.RGBToInteger(fillRGB));
+		createCompartment(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchAlternativeBranchNodesCompartmentEditPart.VISUAL_ID), false, false, true, true);
+		return node;
+	}
+
+	/**
+	* @generated
+	*/
+	public Node createAtomicSequence_2003(EObject domainElement, View containerView, int index, boolean persisted, PreferencesHint preferencesHint) {
+		Shape node = NotationFactory.eINSTANCE.createShape();
+		node.setLayoutConstraint(NotationFactory.eINSTANCE.createBounds());
+		node.setType(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID));
+		ViewUtil.insertChildView(containerView, node, index, persisted);
+		node.setElement(domainElement);
+		stampShortcut(containerView, node);
+		// initializeFromPreferences 
+		final IPreferenceStore prefStore = (IPreferenceStore) preferencesHint.getPreferenceStore();
+
+		org.eclipse.swt.graphics.RGB lineRGB = PreferenceConverter.getColor(prefStore, IPreferenceConstants.PREF_LINE_COLOR);
+		ViewUtil.setStructuralFeatureValue(node, NotationPackage.eINSTANCE.getLineStyle_LineColor(), FigureUtilities.RGBToInteger(lineRGB));
+		FontStyle nodeFontStyle = (FontStyle) node.getStyle(NotationPackage.Literals.FONT_STYLE);
+		if (nodeFontStyle != null) {
+			FontData fontData = PreferenceConverter.getFontData(prefStore, IPreferenceConstants.PREF_DEFAULT_FONT);
+			nodeFontStyle.setFontName(fontData.getName());
+			nodeFontStyle.setFontHeight(fontData.getHeight());
+			nodeFontStyle.setBold((fontData.getStyle() & SWT.BOLD) != 0);
+			nodeFontStyle.setItalic((fontData.getStyle() & SWT.ITALIC) != 0);
+			org.eclipse.swt.graphics.RGB fontRGB = PreferenceConverter.getColor(prefStore, IPreferenceConstants.PREF_FONT_COLOR);
+			nodeFontStyle.setFontColor(FigureUtilities.RGBToInteger(fontRGB).intValue());
+		}
+		org.eclipse.swt.graphics.RGB fillRGB = PreferenceConverter.getColor(prefStore, IPreferenceConstants.PREF_FILL_COLOR);
+		ViewUtil.setStructuralFeatureValue(node, NotationPackage.eINSTANCE.getFillStyle_FillColor(), FigureUtilities.RGBToInteger(fillRGB));
+		createCompartment(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchParallelBranchNodesCompartmentEditPart.VISUAL_ID), false, false, true, true);
+		return node;
+	}
+
+	/**
+	* @generated
+	*/
+	public Node createStandardNode_3001(EObject domainElement, View containerView, int index, boolean persisted, PreferencesHint preferencesHint) {
+		Node node = NotationFactory.eINSTANCE.createNode();
+		node.getStyles().add(NotationFactory.eINSTANCE.createDescriptionStyle());
+		node.setLayoutConstraint(NotationFactory.eINSTANCE.createBounds());
+		node.setType(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID));
+		ViewUtil.insertChildView(containerView, node, index, persisted);
+		node.setElement(domainElement);
+		// initializeFromPreferences 
+		final IPreferenceStore prefStore = (IPreferenceStore) preferencesHint.getPreferenceStore();
+		Node label5001 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabelEditPart.VISUAL_ID));
+		Node label5002 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel2EditPart.VISUAL_ID));
+		Node label5003 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel3EditPart.VISUAL_ID));
+		Node label5004 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeTracibilitystatusEditPart.VISUAL_ID));
+		Node label5005 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeOperatorEditPart.VISUAL_ID));
+		Node label5006 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeLabelEditPart.VISUAL_ID));
+		return node;
+	}
+
+	/**
+	* @generated
+	*/
+	public Node createEmptyNode_3002(EObject domainElement, View containerView, int index, boolean persisted, PreferencesHint preferencesHint) {
+		Node node = NotationFactory.eINSTANCE.createNode();
+		node.getStyles().add(NotationFactory.eINSTANCE.createDescriptionStyle());
+		node.setLayoutConstraint(NotationFactory.eINSTANCE.createBounds());
+		node.setType(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID));
+		ViewUtil.insertChildView(containerView, node, index, persisted);
+		node.setElement(domainElement);
+		// initializeFromPreferences 
+		final IPreferenceStore prefStore = (IPreferenceStore) preferencesHint.getPreferenceStore();
+		Node label5021 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeLabel2EditPart.VISUAL_ID));
+		Node label5022 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeOperator2EditPart.VISUAL_ID));
+		return node;
+	}
+
+	/**
+	* @generated
+	*/
+	public Node createStandardNode_3003(EObject domainElement, View containerView, int index, boolean persisted, PreferencesHint preferencesHint) {
+		Node node = NotationFactory.eINSTANCE.createNode();
+		node.getStyles().add(NotationFactory.eINSTANCE.createDescriptionStyle());
+		node.setLayoutConstraint(NotationFactory.eINSTANCE.createBounds());
+		node.setType(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID));
+		ViewUtil.insertChildView(containerView, node, index, persisted);
+		node.setElement(domainElement);
+		// initializeFromPreferences 
+		final IPreferenceStore prefStore = (IPreferenceStore) preferencesHint.getPreferenceStore();
+		Node label5007 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel4EditPart.VISUAL_ID));
+		Node label5008 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel5EditPart.VISUAL_ID));
+		Node label5009 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel6EditPart.VISUAL_ID));
+		Node label5010 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeTracibilitystatus2EditPart.VISUAL_ID));
+		Node label5011 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeOperator2EditPart.VISUAL_ID));
+		Node label5012 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeLabel2EditPart.VISUAL_ID));
+		return node;
+	}
+
+	/**
+	* @generated
+	*/
+	public Node createEmptyNode_3004(EObject domainElement, View containerView, int index, boolean persisted, PreferencesHint preferencesHint) {
+		Node node = NotationFactory.eINSTANCE.createNode();
+		node.getStyles().add(NotationFactory.eINSTANCE.createDescriptionStyle());
+		node.setLayoutConstraint(NotationFactory.eINSTANCE.createBounds());
+		node.setType(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID));
+		ViewUtil.insertChildView(containerView, node, index, persisted);
+		node.setElement(domainElement);
+		// initializeFromPreferences 
+		final IPreferenceStore prefStore = (IPreferenceStore) preferencesHint.getPreferenceStore();
+		Node label5023 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeLabel3EditPart.VISUAL_ID));
+		Node label5024 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeOperator3EditPart.VISUAL_ID));
+		return node;
+	}
+
+	/**
+	* @generated
+	*/
+	public Node createStandardNode_3005(EObject domainElement, View containerView, int index, boolean persisted, PreferencesHint preferencesHint) {
+		Node node = NotationFactory.eINSTANCE.createNode();
+		node.getStyles().add(NotationFactory.eINSTANCE.createDescriptionStyle());
+		node.setLayoutConstraint(NotationFactory.eINSTANCE.createBounds());
+		node.setType(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID));
+		ViewUtil.insertChildView(containerView, node, index, persisted);
+		node.setElement(domainElement);
+		// initializeFromPreferences 
+		final IPreferenceStore prefStore = (IPreferenceStore) preferencesHint.getPreferenceStore();
+		Node label5013 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel7EditPart.VISUAL_ID));
+		Node label5014 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel8EditPart.VISUAL_ID));
+		Node label5015 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.WrappingLabel9EditPart.VISUAL_ID));
+		Node label5016 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeTracibilitystatus3EditPart.VISUAL_ID));
+		Node label5017 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeOperator3EditPart.VISUAL_ID));
+		Node label5018 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeLabel3EditPart.VISUAL_ID));
+		return node;
+	}
+
+	/**
+	* @generated
+	*/
+	public Node createEmptyNode_3006(EObject domainElement, View containerView, int index, boolean persisted, PreferencesHint preferencesHint) {
+		Node node = NotationFactory.eINSTANCE.createNode();
+		node.getStyles().add(NotationFactory.eINSTANCE.createDescriptionStyle());
+		node.setLayoutConstraint(NotationFactory.eINSTANCE.createBounds());
+		node.setType(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID));
+		ViewUtil.insertChildView(containerView, node, index, persisted);
+		node.setElement(domainElement);
+		// initializeFromPreferences 
+		final IPreferenceStore prefStore = (IPreferenceStore) preferencesHint.getPreferenceStore();
+		Node label5019 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeLabelEditPart.VISUAL_ID));
+		Node label5020 = createLabel(node, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeOperatorEditPart.VISUAL_ID));
+		return node;
+	}
+
+	/**
+	* @generated
+	*/
+	public Edge createAlternativeBranchChildren_4001(View containerView, int index, boolean persisted, PreferencesHint preferencesHint) {
+		Edge edge = NotationFactory.eINSTANCE.createEdge();
+		edge.getStyles().add(NotationFactory.eINSTANCE.createRoutingStyle());
+		edge.getStyles().add(NotationFactory.eINSTANCE.createFontStyle());
+		RelativeBendpoints bendpoints = NotationFactory.eINSTANCE.createRelativeBendpoints();
+		ArrayList<RelativeBendpoint> points = new ArrayList<RelativeBendpoint>(2);
+		points.add(new RelativeBendpoint());
+		points.add(new RelativeBendpoint());
+		bendpoints.setPoints(points);
+		edge.setBendpoints(bendpoints);
+		ViewUtil.insertChildView(containerView, edge, index, persisted);
+		edge.setType(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID));
+		edge.setElement(null);
+		// initializePreferences
+		final IPreferenceStore prefStore = (IPreferenceStore) preferencesHint.getPreferenceStore();
+		FontStyle edgeFontStyle = (FontStyle) edge.getStyle(NotationPackage.Literals.FONT_STYLE);
+		if (edgeFontStyle != null) {
+			FontData fontData = PreferenceConverter.getFontData(prefStore, IPreferenceConstants.PREF_DEFAULT_FONT);
+			edgeFontStyle.setFontName(fontData.getName());
+			edgeFontStyle.setFontHeight(fontData.getHeight());
+			edgeFontStyle.setBold((fontData.getStyle() & SWT.BOLD) != 0);
+			edgeFontStyle.setItalic((fontData.getStyle() & SWT.ITALIC) != 0);
+			org.eclipse.swt.graphics.RGB fontRGB = PreferenceConverter.getColor(prefStore, IPreferenceConstants.PREF_FONT_COLOR);
+			edgeFontStyle.setFontColor(FigureUtilities.RGBToInteger(fontRGB).intValue());
+		}
+		Routing routing = Routing.get(prefStore.getInt(IPreferenceConstants.PREF_LINE_STYLE));
+		if (routing != null) {
+			ViewUtil.setStructuralFeatureValue(edge, NotationPackage.eINSTANCE.getRoutingStyle_Routing(), routing);
+		}
+		return edge;
+	}
+
+	/**
+	* @generated
+	*/
+	public Edge createParallelBranchChildren_4002(View containerView, int index, boolean persisted, PreferencesHint preferencesHint) {
+		Edge edge = NotationFactory.eINSTANCE.createEdge();
+		edge.getStyles().add(NotationFactory.eINSTANCE.createRoutingStyle());
+		edge.getStyles().add(NotationFactory.eINSTANCE.createFontStyle());
+		RelativeBendpoints bendpoints = NotationFactory.eINSTANCE.createRelativeBendpoints();
+		ArrayList<RelativeBendpoint> points = new ArrayList<RelativeBendpoint>(2);
+		points.add(new RelativeBendpoint());
+		points.add(new RelativeBendpoint());
+		bendpoints.setPoints(points);
+		edge.setBendpoints(bendpoints);
+		ViewUtil.insertChildView(containerView, edge, index, persisted);
+		edge.setType(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID));
+		edge.setElement(null);
+		// initializePreferences
+		final IPreferenceStore prefStore = (IPreferenceStore) preferencesHint.getPreferenceStore();
+		FontStyle edgeFontStyle = (FontStyle) edge.getStyle(NotationPackage.Literals.FONT_STYLE);
+		if (edgeFontStyle != null) {
+			FontData fontData = PreferenceConverter.getFontData(prefStore, IPreferenceConstants.PREF_DEFAULT_FONT);
+			edgeFontStyle.setFontName(fontData.getName());
+			edgeFontStyle.setFontHeight(fontData.getHeight());
+			edgeFontStyle.setBold((fontData.getStyle() & SWT.BOLD) != 0);
+			edgeFontStyle.setItalic((fontData.getStyle() & SWT.ITALIC) != 0);
+			org.eclipse.swt.graphics.RGB fontRGB = PreferenceConverter.getColor(prefStore, IPreferenceConstants.PREF_FONT_COLOR);
+			edgeFontStyle.setFontColor(FigureUtilities.RGBToInteger(fontRGB).intValue());
+		}
+		Routing routing = Routing.get(prefStore.getInt(IPreferenceConstants.PREF_LINE_STYLE));
+		if (routing != null) {
+			ViewUtil.setStructuralFeatureValue(edge, NotationPackage.eINSTANCE.getRoutingStyle_Routing(), routing);
+		}
+		return edge;
+	}
+
+	/**
+	* @generated
+	*/
+	public Edge createAtomicSequenceChild_4003(View containerView, int index, boolean persisted, PreferencesHint preferencesHint) {
+		Edge edge = NotationFactory.eINSTANCE.createEdge();
+		edge.getStyles().add(NotationFactory.eINSTANCE.createRoutingStyle());
+		edge.getStyles().add(NotationFactory.eINSTANCE.createFontStyle());
+		RelativeBendpoints bendpoints = NotationFactory.eINSTANCE.createRelativeBendpoints();
+		ArrayList<RelativeBendpoint> points = new ArrayList<RelativeBendpoint>(2);
+		points.add(new RelativeBendpoint());
+		points.add(new RelativeBendpoint());
+		bendpoints.setPoints(points);
+		edge.setBendpoints(bendpoints);
+		ViewUtil.insertChildView(containerView, edge, index, persisted);
+		edge.setType(ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID));
+		edge.setElement(null);
+		// initializePreferences
+		final IPreferenceStore prefStore = (IPreferenceStore) preferencesHint.getPreferenceStore();
+		FontStyle edgeFontStyle = (FontStyle) edge.getStyle(NotationPackage.Literals.FONT_STYLE);
+		if (edgeFontStyle != null) {
+			FontData fontData = PreferenceConverter.getFontData(prefStore, IPreferenceConstants.PREF_DEFAULT_FONT);
+			edgeFontStyle.setFontName(fontData.getName());
+			edgeFontStyle.setFontHeight(fontData.getHeight());
+			edgeFontStyle.setBold((fontData.getStyle() & SWT.BOLD) != 0);
+			edgeFontStyle.setItalic((fontData.getStyle() & SWT.ITALIC) != 0);
+			org.eclipse.swt.graphics.RGB fontRGB = PreferenceConverter.getColor(prefStore, IPreferenceConstants.PREF_FONT_COLOR);
+			edgeFontStyle.setFontColor(FigureUtilities.RGBToInteger(fontRGB).intValue());
+		}
+		Routing routing = Routing.get(prefStore.getInt(IPreferenceConstants.PREF_LINE_STYLE));
+		if (routing != null) {
+			ViewUtil.setStructuralFeatureValue(edge, NotationPackage.eINSTANCE.getRoutingStyle_Routing(), routing);
+		}
+		return edge;
+	}
+
+	/**
+	* @generated
+	*/
+	private void stampShortcut(View containerView, Node target) {
+		if (!ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID.equals(ComBE.diagram.part.ComBEVisualIDRegistry.getModelID(containerView))) {
+			EAnnotation shortcutAnnotation = EcoreFactory.eINSTANCE.createEAnnotation();
+			shortcutAnnotation.setSource("Shortcut"); //$NON-NLS-1$
+			shortcutAnnotation.getDetails().put("modelID", ComBE.diagram.edit.parts.SpecificationEditPart.MODEL_ID); //$NON-NLS-1$
+			target.getEAnnotations().add(shortcutAnnotation);
+		}
+	}
+
+	/**
+	* @generated
+	*/
+	private Node createLabel(View owner, String hint) {
+		DecorationNode rv = NotationFactory.eINSTANCE.createDecorationNode();
+		rv.setType(hint);
+		ViewUtil.insertChildView(owner, rv, ViewUtil.APPEND, true);
+		return rv;
+	}
+
+	/**
+	* @generated
+	*/
+	private Node createCompartment(View owner, String hint, boolean canCollapse, boolean hasTitle, boolean canSort, boolean canFilter) {
+		//SemanticListCompartment rv = NotationFactory.eINSTANCE.createSemanticListCompartment();
+		//rv.setShowTitle(showTitle);
+		//rv.setCollapsed(isCollapsed);
+		Node rv;
+		if (canCollapse) {
+			rv = NotationFactory.eINSTANCE.createBasicCompartment();
+		} else {
+			rv = NotationFactory.eINSTANCE.createDecorationNode();
+		}
+		if (hasTitle) {
+			TitleStyle ts = NotationFactory.eINSTANCE.createTitleStyle();
+			ts.setShowTitle(true);
+			rv.getStyles().add(ts);
+		}
+		if (canSort) {
+			rv.getStyles().add(NotationFactory.eINSTANCE.createSortingStyle());
+		}
+		if (canFilter) {
+			rv.getStyles().add(NotationFactory.eINSTANCE.createFilteringStyle());
+		}
+		rv.setType(hint);
+		ViewUtil.insertChildView(owner, rv, ViewUtil.APPEND, true);
+		return rv;
+	}
+
+	/**
+	* @generated
+	*/
+	private EObject getSemanticElement(IAdaptable semanticAdapter) {
+		if (semanticAdapter == null) {
+			return null;
+		}
+		EObject eObject = (EObject) semanticAdapter.getAdapter(EObject.class);
+		if (eObject != null) {
+			return EMFCoreUtil.resolve(TransactionUtil.getEditingDomain(eObject), eObject);
+		}
+		return null;
+	}
+
+	/**
+	 * @generated
+	 */
+	private IElementType getSemanticElementType(IAdaptable semanticAdapter) {
+		if (semanticAdapter == null) {
+			return null;
+		}
+		return (IElementType) semanticAdapter.getAdapter(IElementType.class);
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ElementInitializers.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/providers/ElementInitializers.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,22 @@
+package ComBE.diagram.providers;
+
+/**
+ * @generated
+ */
+public class ElementInitializers {
+
+	protected ElementInitializers() {
+		// use #getInstance to access cached instance
+	}
+
+	/**
+	* @generated
+	*/
+	public static ElementInitializers getInstance() {
+		ElementInitializers cached = ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().getElementInitializers();
+		if (cached == null) {
+			ComBE.diagram.part.ComBEDiagramEditorPlugin.getInstance().setElementInitializers(cached = new ElementInitializers());
+		}
+		return cached;
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/sheet/ComBEPropertySection.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/sheet/ComBEPropertySection.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,109 @@
+package ComBE.diagram.sheet;
+
+import java.util.ArrayList;
+import java.util.Iterator;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain;
+import org.eclipse.emf.edit.provider.IItemPropertySource;
+import org.eclipse.emf.edit.ui.provider.PropertySource;
+import org.eclipse.emf.transaction.TransactionalEditingDomain;
+import org.eclipse.emf.transaction.util.TransactionUtil;
+import org.eclipse.gef.EditPart;
+import org.eclipse.gmf.runtime.diagram.ui.properties.sections.AdvancedPropertySection;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.viewers.ISelection;
+import org.eclipse.jface.viewers.StructuredSelection;
+import org.eclipse.ui.IWorkbenchPart;
+import org.eclipse.ui.views.properties.IPropertySource;
+import org.eclipse.ui.views.properties.IPropertySourceProvider;
+
+/**
+ * @generated
+ */
+public class ComBEPropertySection extends AdvancedPropertySection implements IPropertySourceProvider {
+
+	/**
+	* @generated
+	*/
+	public IPropertySource getPropertySource(Object object) {
+		if (object instanceof IPropertySource) {
+			return (IPropertySource) object;
+		}
+		AdapterFactory af = getAdapterFactory(object);
+		if (af != null) {
+			IItemPropertySource ips = (IItemPropertySource) af.adapt(object, IItemPropertySource.class);
+			if (ips != null) {
+				return new PropertySource(object, ips);
+			}
+		}
+		if (object instanceof IAdaptable) {
+			return (IPropertySource) ((IAdaptable) object).getAdapter(IPropertySource.class);
+		}
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	protected IPropertySourceProvider getPropertySourceProvider() {
+		return this;
+	}
+
+	/**
+	* Modify/unwrap selection.
+	* @generated
+	*/
+	protected Object transformSelection(Object selected) {
+
+		if (selected instanceof EditPart) {
+			Object model = ((EditPart) selected).getModel();
+			return model instanceof View ? ((View) model).getElement() : null;
+		}
+		if (selected instanceof View) {
+			return ((View) selected).getElement();
+		}
+		if (selected instanceof IAdaptable) {
+			View view = (View) ((IAdaptable) selected).getAdapter(View.class);
+			if (view != null) {
+				return view.getElement();
+			}
+		}
+		return selected;
+	}
+
+	/**
+	* @generated
+	*/
+	public void setInput(IWorkbenchPart part, ISelection selection) {
+		if (selection.isEmpty() || false == selection instanceof StructuredSelection) {
+			super.setInput(part, selection);
+			return;
+		}
+		final StructuredSelection structuredSelection = ((StructuredSelection) selection);
+		ArrayList transformedSelection = new ArrayList(structuredSelection.size());
+		for (Iterator it = structuredSelection.iterator(); it.hasNext();) {
+			Object r = transformSelection(it.next());
+			if (r != null) {
+				transformedSelection.add(r);
+			}
+		}
+		super.setInput(part, new StructuredSelection(transformedSelection));
+	}
+
+	/**
+	* @generated
+	*/
+	protected AdapterFactory getAdapterFactory(Object object) {
+		if (getEditingDomain() instanceof AdapterFactoryEditingDomain) {
+			return ((AdapterFactoryEditingDomain) getEditingDomain()).getAdapterFactory();
+		}
+		TransactionalEditingDomain editingDomain = TransactionUtil.getEditingDomain(object);
+		if (editingDomain != null) {
+			return ((AdapterFactoryEditingDomain) editingDomain).getAdapterFactory();
+		}
+		return null;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/sheet/ComBESheetLabelProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/sheet/ComBESheetLabelProvider.java	Mon Jul 16 01:38:25 2012	(r25200)
@@ -0,0 +1,75 @@
+package ComBE.diagram.sheet;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.gmf.runtime.emf.type.core.IElementType;
+import org.eclipse.gmf.runtime.notation.View;
+import org.eclipse.jface.viewers.BaseLabelProvider;
+import org.eclipse.jface.viewers.ILabelProvider;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * @generated
+ */
+public class ComBESheetLabelProvider extends BaseLabelProvider implements ILabelProvider {
+
+	/**
+	* @generated
+	*/
+	public String getText(Object element) {
+		element = unwrap(element);
+		if (element instanceof ComBE.diagram.navigator.ComBENavigatorGroup) {
+			return ((ComBE.diagram.navigator.ComBENavigatorGroup) element).getGroupName();
+		}
+		IElementType etype = getElementType(getView(element));
+		return etype == null ? "" : etype.getDisplayName();
+	}
+
+	/**
+	* @generated
+	*/
+	public Image getImage(Object element) {
+		IElementType etype = getElementType(getView(unwrap(element)));
+		return etype == null ? null : ComBE.diagram.providers.ComBEElementTypes.getImage(etype);
+	}
+
+	/**
+	* @generated
+	*/
+	private Object unwrap(Object element) {
+		if (element instanceof IStructuredSelection) {
+			return ((IStructuredSelection) element).getFirstElement();
+		}
+		return element;
+	}
+
+	/**
+	* @generated
+	*/
+	private View getView(Object element) {
+		if (element instanceof View) {
+			return (View) element;
+		}
+		if (element instanceof IAdaptable) {
+			return (View) ((IAdaptable) element).getAdapter(View.class);
+		}
+		return null;
+	}
+
+	/**
+	* @generated
+	*/
+	private IElementType getElementType(View view) {
+		// For intermediate views climb up the containment hierarchy to find the one associated with an element type.
+		while (view != null) {
+			int vid = ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view);
+			IElementType etype = ComBE.diagram.providers.ComBEElementTypes.getElementType(vid);
+			if (etype != null) {
+				return etype;
+			}
+			view = view.eContainer() instanceof View ? (View) view.eContainer() : null;
+		}
+		return null;
+	}
+
+}

From oskarvanrest at gmail.com  Mon Jul 16 03:41:34 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 16 Jul 2012 01:41:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25201 - in
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit:
	. META-INF icons icons/full icons/full/ctool16
	icons/full/obj16 src/ComB...
Message-ID: <20120716014134.247EA7F804E@mx1.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 16 01:41:33 2012
New Revision: 25201
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25201&sc=1

Log:
Added generated resources to SVN.

Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/.classpath
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/.project
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/META-INF/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/META-INF/MANIFEST.MF
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/build.properties
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateAlternativeBranch_children_AlternativeBranch.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateAlternativeBranch_children_AtomicSequence.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateAlternativeBranch_children_ParallelBranch.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateAtomicSequence_child_AlternativeBranch.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateAtomicSequence_child_AtomicSequence.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateAtomicSequence_child_ParallelBranch.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateBehaviorSeq_behavior_Behavior.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateBehaviorTree_nodes_EmptyNode.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateBehaviorTree_nodes_StandardNode.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateComponent_behaviorseqs_BehaviorSeq.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateParallelBranch_children_AlternativeBranch.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateParallelBranch_children_AtomicSequence.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateParallelBranch_children_ParallelBranch.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateRoot_behaviortree_AlternativeBranch.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateRoot_behaviortree_AtomicSequence.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateRoot_behaviortree_ParallelBranch.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateSpecification_components_StandardComponent.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateSpecification_components_SystemComponent.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateSpecification_requirements_Requirement.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateSpecification_root_Root.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/AlternativeBranch.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/AtomicSequence.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/Behavior.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/BehaviorSeq.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/BehaviorTree.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/Component.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/EmptyNode.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/Node.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/ParallelBranch.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/Requirement.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/Root.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/Specification.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/StandardComponent.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/StandardNode.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/SystemComponent.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/plugin.properties
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/plugin.xml
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/pom.xml
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/AlternativeBranchItemProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/AtomicSequenceItemProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/BehaviorItemProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/BehaviorSeqItemProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/BehaviorTreeItemProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/ComBEEditPlugin.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/ComBEItemProviderAdapterFactory.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/ComponentItemProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/EmptyNodeItemProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/NodeItemProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/ParallelBranchItemProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/RequirementItemProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/RootItemProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/SpecificationItemProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/StandardComponentItemProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/SystemComponentItemProvider.java
Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/StandardNodeItemProvider.java

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/.classpath
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/.classpath	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/.project
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/.project	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>org.behaviorengineering.combe.graphical.edit</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.pde.PluginNature</nature>
+	</natures>
+</projectDescription>

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/META-INF/MANIFEST.MF
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/META-INF/MANIFEST.MF	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,15 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: %pluginName
+Bundle-SymbolicName: org.behaviorengineering.combe.graphical.edit;singleton:=true
+Bundle-Version: 1.0.0.qualifier
+Bundle-ClassPath: .
+Bundle-Activator: ComBE.provider.ComBEEditPlugin$Implementation
+Bundle-Vendor: %providerName
+Bundle-Localization: plugin
+Bundle-RequiredExecutionEnvironment: JavaSE-1.6
+Export-Package: ComBE.provider
+Require-Bundle: org.eclipse.core.runtime,
+ org.behaviorengineering.combe.graphical;visibility:=reexport,
+ org.eclipse.emf.edit;visibility:=reexport
+Bundle-ActivationPolicy: lazy

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/build.properties	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,14 @@
+
+# <copyright>
+# </copyright>
+#
+# $Id$
+
+bin.includes = .,\
+               icons/,\
+               META-INF/,\
+               plugin.xml,\
+               plugin.properties
+jars.compile.order = .
+source.. = src/
+output.. = bin/

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateAlternativeBranch_children_AlternativeBranch.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateAlternativeBranch_children_AtomicSequence.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateAlternativeBranch_children_ParallelBranch.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateAtomicSequence_child_AlternativeBranch.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateAtomicSequence_child_AtomicSequence.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateAtomicSequence_child_ParallelBranch.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateBehaviorSeq_behavior_Behavior.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateBehaviorTree_nodes_EmptyNode.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateBehaviorTree_nodes_StandardNode.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateComponent_behaviorseqs_BehaviorSeq.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateParallelBranch_children_AlternativeBranch.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateParallelBranch_children_AtomicSequence.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateParallelBranch_children_ParallelBranch.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateRoot_behaviortree_AlternativeBranch.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateRoot_behaviortree_AtomicSequence.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateRoot_behaviortree_ParallelBranch.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateSpecification_components_StandardComponent.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateSpecification_components_SystemComponent.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateSpecification_requirements_Requirement.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/ctool16/CreateSpecification_root_Root.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/AlternativeBranch.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/AtomicSequence.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/Behavior.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/BehaviorSeq.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/BehaviorTree.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/Component.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/EmptyNode.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/Node.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/ParallelBranch.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/Requirement.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/Root.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/Specification.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/StandardComponent.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/StandardNode.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/icons/full/obj16/SystemComponent.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/plugin.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/plugin.properties	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,87 @@
+
+# <copyright>
+# </copyright>
+#
+# $Id$
+
+pluginName = ComBE Edit Support
+providerName = www.example.org
+
+_UI_CreateChild_text = {0}
+_UI_CreateChild_text2 = {1} {0}
+_UI_CreateChild_text3 = {1}
+_UI_CreateChild_tooltip = Create New {0} Under {1} Feature
+_UI_CreateChild_description = Create a new child of type {0} for the {1} feature of the selected {2}.
+_UI_CreateSibling_description = Create a new sibling of type {0} for the selected {2}, under the {1} feature of their parent.
+
+_UI_PropertyDescriptor_description = The {0} of the {1}
+
+_UI_Specification_type = Specification
+_UI_Requirement_type = Requirement
+_UI_BehaviorSeq_type = Behavior Seq
+_UI_Behavior_type = Behavior
+_UI_Root_type = Root
+_UI_Component_type = Component
+_UI_StandardComponent_type = Standard Component
+_UI_SystemComponent_type = System Component
+_UI_BehaviorTree_type = Behavior Tree
+_UI_AtomicSequence_type = Atomic Sequence
+_UI_AlternativeBranch_type = Alternative Branch
+_UI_ParallelBranch_type = Parallel Branch
+_UI_Node_type = Node
+_UI_StandardNode_type = Standard Node
+_UI_EmptyNode_type = Empty Node
+_UI_Unknown_type = Object
+
+_UI_Unknown_datatype= Value
+
+_UI_Specification_requirements_feature = Requirements
+_UI_Specification_components_feature = Components
+_UI_Specification_root_feature = Root
+_UI_Requirement_id_feature = Id
+_UI_Requirement_label_feature = Label
+_UI_BehaviorSeq_behaviortype_feature = Behaviortype
+_UI_BehaviorSeq_behavior_feature = Behavior
+_UI_Behavior_int_feature = Int
+_UI_Behavior_label_feature = Label
+_UI_Root_behaviortree_feature = Behaviortree
+_UI_Component_id_feature = Id
+_UI_Component_label_feature = Label
+_UI_Component_behaviorseqs_feature = Behaviorseqs
+_UI_BehaviorTree_nodes_feature = Nodes
+_UI_AtomicSequence_child_feature = Child
+_UI_AlternativeBranch_children_feature = Children
+_UI_ParallelBranch_children_feature = Children
+_UI_Node_label_feature = Label
+_UI_Node_operator_feature = Operator
+_UI_StandardNode_requirement_feature = Requirement
+_UI_StandardNode_tracibilitystatus_feature = Tracibilitystatus
+_UI_StandardNode_component_feature = Component
+_UI_StandardNode_behavior_feature = Behavior
+_UI_Unknown_feature = Unspecified
+
+_UI_BehaviorType_StateRealisation_literal = #S
+_UI_BehaviorType_Selection_literal = #L
+_UI_BehaviorType_Event_literal = #E
+_UI_BehaviorType_Guard_literal = #G
+_UI_BehaviorType_IIEvent_literal = #II
+_UI_BehaviorType_IOEvent_literal = #IO
+_UI_BehaviorType_EIEvent_literal = #EI
+_UI_BehaviorType_EOEvent_literal = #EO
+_UI_BehaviorType_Assertion_literal = #A
+_UI_TracibilityStatus_None_literal = 
+_UI_TracibilityStatus_Implied_literal = +
+_UI_TracibilityStatus_Missing_literal = -
+_UI_TracibilityStatus_Updated_literal = ++
+_UI_TracibilityStatus_Deleted_literal = --
+_UI_TracibilityStatus_Refinement_literal = +-
+_UI_Operator_None_literal = 
+_UI_Operator_BranchKill_literal = --
+_UI_Operator_Conjunction_literal = &
+_UI_Operator_Disjunction_literal = |
+_UI_Operator_May_literal = %
+_UI_Operator_Reference_literal = =>
+_UI_Operator_Reversion_literal = ^
+_UI_Operator_StartNew_literal = ^^
+_UI_Operator_Synchronisation_literal = =
+_UI_Operator_XOR_literal = XOR

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/plugin.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/plugin.xml	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<?eclipse version="3.0"?>
+
+<!--
+ <copyright>
+ </copyright>
+
+ $Id$
+-->
+
+<plugin>
+
+   <extension point="org.eclipse.emf.edit.itemProviderAdapterFactories">
+      <factory
+            uri="ComBE"
+            class="ComBE.provider.ComBEItemProviderAdapterFactory"
+            supportedTypes=
+              "org.eclipse.emf.edit.provider.IEditingDomainItemProvider
+               org.eclipse.emf.edit.provider.IStructuredItemContentProvider
+               org.eclipse.emf.edit.provider.ITreeItemContentProvider
+               org.eclipse.emf.edit.provider.IItemLabelProvider
+               org.eclipse.emf.edit.provider.IItemPropertySource"/>
+   </extension>
+
+</plugin>

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/pom.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/pom.xml	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
+	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+	<modelVersion>4.0.0</modelVersion>
+	<parent>
+		<artifactId>org.behaviorengineering.combe.parent</artifactId>
+		<groupId>org.be.textbe</groupId>
+		<version>1.0.0-SNAPSHOT</version>
+		<relativePath>../org.behaviorengineering.combe.parent</relativePath>
+	</parent>
+	<artifactId>org.behaviorengineering.combe.graphical.edit</artifactId>
+	<packaging>eclipse-plugin</packaging>
+</project>
\ No newline at end of file

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/AlternativeBranchItemProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/AlternativeBranchItemProvider.java	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,167 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.provider;
+
+
+import ComBE.AlternativeBranch;
+import ComBE.ComBEFactory;
+import ComBE.ComBEPackage;
+
+import java.util.Collection;
+import java.util.List;
+
+import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.common.notify.Notification;
+
+import org.eclipse.emf.ecore.EStructuralFeature;
+
+import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
+import org.eclipse.emf.edit.provider.IItemLabelProvider;
+import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.IItemPropertySource;
+import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
+import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
+import org.eclipse.emf.edit.provider.ViewerNotification;
+
+/**
+ * This is the item provider adapter for a {@link ComBE.AlternativeBranch} object.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class AlternativeBranchItemProvider
+	extends BehaviorTreeItemProvider
+	implements
+		IEditingDomainItemProvider,
+		IStructuredItemContentProvider,
+		ITreeItemContentProvider,
+		IItemLabelProvider,
+		IItemPropertySource {
+	/**
+	 * This constructs an instance from a factory and a notifier.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public AlternativeBranchItemProvider(AdapterFactory adapterFactory) {
+		super(adapterFactory);
+	}
+
+	/**
+	 * This returns the property descriptors for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
+		if (itemPropertyDescriptors == null) {
+			super.getPropertyDescriptors(object);
+
+		}
+		return itemPropertyDescriptors;
+	}
+
+	/**
+	 * This specifies how to implement {@link #getChildren} and is used to deduce an appropriate feature for an
+	 * {@link org.eclipse.emf.edit.command.AddCommand}, {@link org.eclipse.emf.edit.command.RemoveCommand} or
+	 * {@link org.eclipse.emf.edit.command.MoveCommand} in {@link #createCommand}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
+		if (childrenFeatures == null) {
+			super.getChildrenFeatures(object);
+			childrenFeatures.add(ComBEPackage.Literals.ALTERNATIVE_BRANCH__CHILDREN);
+		}
+		return childrenFeatures;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EStructuralFeature getChildFeature(Object object, Object child) {
+		// Check the type of the specified child object and return the proper feature to use for
+		// adding (see {@link AddCommand}) it as a child.
+
+		return super.getChildFeature(object, child);
+	}
+
+	/**
+	 * This returns AlternativeBranch.gif.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object getImage(Object object) {
+		return overlayImage(object, getResourceLocator().getImage("full/obj16/AlternativeBranch"));
+	}
+
+	/**
+	 * This returns the label text for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String getText(Object object) {
+		return getString("_UI_AlternativeBranch_type");
+	}
+
+	/**
+	 * This handles model notifications by calling {@link #updateChildren} to update any cached
+	 * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void notifyChanged(Notification notification) {
+		updateChildren(notification);
+
+		switch (notification.getFeatureID(AlternativeBranch.class)) {
+			case ComBEPackage.ALTERNATIVE_BRANCH__CHILDREN:
+				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
+				return;
+		}
+		super.notifyChanged(notification);
+	}
+
+	/**
+	 * This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
+	 * that can be created under this object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
+		super.collectNewChildDescriptors(newChildDescriptors, object);
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.ALTERNATIVE_BRANCH__CHILDREN,
+				 ComBEFactory.eINSTANCE.createAtomicSequence()));
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.ALTERNATIVE_BRANCH__CHILDREN,
+				 ComBEFactory.eINSTANCE.createAlternativeBranch()));
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.ALTERNATIVE_BRANCH__CHILDREN,
+				 ComBEFactory.eINSTANCE.createParallelBranch()));
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/AtomicSequenceItemProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/AtomicSequenceItemProvider.java	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,167 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.provider;
+
+
+import ComBE.AtomicSequence;
+import ComBE.ComBEFactory;
+import ComBE.ComBEPackage;
+
+import java.util.Collection;
+import java.util.List;
+
+import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.common.notify.Notification;
+
+import org.eclipse.emf.ecore.EStructuralFeature;
+
+import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
+import org.eclipse.emf.edit.provider.IItemLabelProvider;
+import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.IItemPropertySource;
+import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
+import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
+import org.eclipse.emf.edit.provider.ViewerNotification;
+
+/**
+ * This is the item provider adapter for a {@link ComBE.AtomicSequence} object.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class AtomicSequenceItemProvider
+	extends BehaviorTreeItemProvider
+	implements
+		IEditingDomainItemProvider,
+		IStructuredItemContentProvider,
+		ITreeItemContentProvider,
+		IItemLabelProvider,
+		IItemPropertySource {
+	/**
+	 * This constructs an instance from a factory and a notifier.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public AtomicSequenceItemProvider(AdapterFactory adapterFactory) {
+		super(adapterFactory);
+	}
+
+	/**
+	 * This returns the property descriptors for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
+		if (itemPropertyDescriptors == null) {
+			super.getPropertyDescriptors(object);
+
+		}
+		return itemPropertyDescriptors;
+	}
+
+	/**
+	 * This specifies how to implement {@link #getChildren} and is used to deduce an appropriate feature for an
+	 * {@link org.eclipse.emf.edit.command.AddCommand}, {@link org.eclipse.emf.edit.command.RemoveCommand} or
+	 * {@link org.eclipse.emf.edit.command.MoveCommand} in {@link #createCommand}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
+		if (childrenFeatures == null) {
+			super.getChildrenFeatures(object);
+			childrenFeatures.add(ComBEPackage.Literals.ATOMIC_SEQUENCE__CHILD);
+		}
+		return childrenFeatures;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EStructuralFeature getChildFeature(Object object, Object child) {
+		// Check the type of the specified child object and return the proper feature to use for
+		// adding (see {@link AddCommand}) it as a child.
+
+		return super.getChildFeature(object, child);
+	}
+
+	/**
+	 * This returns AtomicSequence.gif.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object getImage(Object object) {
+		return overlayImage(object, getResourceLocator().getImage("full/obj16/AtomicSequence"));
+	}
+
+	/**
+	 * This returns the label text for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String getText(Object object) {
+		return getString("_UI_AtomicSequence_type");
+	}
+
+	/**
+	 * This handles model notifications by calling {@link #updateChildren} to update any cached
+	 * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void notifyChanged(Notification notification) {
+		updateChildren(notification);
+
+		switch (notification.getFeatureID(AtomicSequence.class)) {
+			case ComBEPackage.ATOMIC_SEQUENCE__CHILD:
+				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
+				return;
+		}
+		super.notifyChanged(notification);
+	}
+
+	/**
+	 * This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
+	 * that can be created under this object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
+		super.collectNewChildDescriptors(newChildDescriptors, object);
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.ATOMIC_SEQUENCE__CHILD,
+				 ComBEFactory.eINSTANCE.createAtomicSequence()));
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.ATOMIC_SEQUENCE__CHILD,
+				 ComBEFactory.eINSTANCE.createAlternativeBranch()));
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.ATOMIC_SEQUENCE__CHILD,
+				 ComBEFactory.eINSTANCE.createParallelBranch()));
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/BehaviorItemProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/BehaviorItemProvider.java	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,183 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.provider;
+
+
+import ComBE.Behavior;
+import ComBE.ComBEPackage;
+
+import java.util.Collection;
+import java.util.List;
+
+import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.common.notify.Notification;
+
+import org.eclipse.emf.common.util.ResourceLocator;
+
+import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
+import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
+import org.eclipse.emf.edit.provider.IItemLabelProvider;
+import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.IItemPropertySource;
+import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
+import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
+import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.ItemProviderAdapter;
+import org.eclipse.emf.edit.provider.ViewerNotification;
+
+/**
+ * This is the item provider adapter for a {@link ComBE.Behavior} object.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class BehaviorItemProvider
+	extends ItemProviderAdapter
+	implements
+		IEditingDomainItemProvider,
+		IStructuredItemContentProvider,
+		ITreeItemContentProvider,
+		IItemLabelProvider,
+		IItemPropertySource {
+	/**
+	 * This constructs an instance from a factory and a notifier.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public BehaviorItemProvider(AdapterFactory adapterFactory) {
+		super(adapterFactory);
+	}
+
+	/**
+	 * This returns the property descriptors for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
+		if (itemPropertyDescriptors == null) {
+			super.getPropertyDescriptors(object);
+
+			addIntPropertyDescriptor(object);
+			addLabelPropertyDescriptor(object);
+		}
+		return itemPropertyDescriptors;
+	}
+
+	/**
+	 * This adds a property descriptor for the Int feature.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void addIntPropertyDescriptor(Object object) {
+		itemPropertyDescriptors.add
+			(createItemPropertyDescriptor
+				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
+				 getResourceLocator(),
+				 getString("_UI_Behavior_int_feature"),
+				 getString("_UI_PropertyDescriptor_description", "_UI_Behavior_int_feature", "_UI_Behavior_type"),
+				 ComBEPackage.Literals.BEHAVIOR__INT,
+				 true,
+				 false,
+				 false,
+				 ItemPropertyDescriptor.INTEGRAL_VALUE_IMAGE,
+				 null,
+				 null));
+	}
+
+	/**
+	 * This adds a property descriptor for the Label feature.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void addLabelPropertyDescriptor(Object object) {
+		itemPropertyDescriptors.add
+			(createItemPropertyDescriptor
+				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
+				 getResourceLocator(),
+				 getString("_UI_Behavior_label_feature"),
+				 getString("_UI_PropertyDescriptor_description", "_UI_Behavior_label_feature", "_UI_Behavior_type"),
+				 ComBEPackage.Literals.BEHAVIOR__LABEL,
+				 true,
+				 false,
+				 false,
+				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
+				 null,
+				 null));
+	}
+
+	/**
+	 * This returns Behavior.gif.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object getImage(Object object) {
+		return overlayImage(object, getResourceLocator().getImage("full/obj16/Behavior"));
+	}
+
+	/**
+	 * This returns the label text for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String getText(Object object) {
+		Behavior behavior = (Behavior)object;
+		return getString("_UI_Behavior_type") + " " + behavior.getInt();
+	}
+
+	/**
+	 * This handles model notifications by calling {@link #updateChildren} to update any cached
+	 * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void notifyChanged(Notification notification) {
+		updateChildren(notification);
+
+		switch (notification.getFeatureID(Behavior.class)) {
+			case ComBEPackage.BEHAVIOR__INT:
+			case ComBEPackage.BEHAVIOR__LABEL:
+				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
+				return;
+		}
+		super.notifyChanged(notification);
+	}
+
+	/**
+	 * This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
+	 * that can be created under this object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
+		super.collectNewChildDescriptors(newChildDescriptors, object);
+	}
+
+	/**
+	 * Return the resource locator for this item provider's resources.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public ResourceLocator getResourceLocator() {
+		return ComBEEditPlugin.INSTANCE;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/BehaviorSeqItemProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/BehaviorSeqItemProvider.java	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,204 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.provider;
+
+
+import ComBE.BehaviorSeq;
+import ComBE.BehaviorType;
+import ComBE.ComBEFactory;
+import ComBE.ComBEPackage;
+
+import java.util.Collection;
+import java.util.List;
+
+import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.common.notify.Notification;
+
+import org.eclipse.emf.common.util.ResourceLocator;
+
+import org.eclipse.emf.ecore.EStructuralFeature;
+
+import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
+import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
+import org.eclipse.emf.edit.provider.IItemLabelProvider;
+import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.IItemPropertySource;
+import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
+import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
+import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.ItemProviderAdapter;
+import org.eclipse.emf.edit.provider.ViewerNotification;
+
+/**
+ * This is the item provider adapter for a {@link ComBE.BehaviorSeq} object.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class BehaviorSeqItemProvider
+	extends ItemProviderAdapter
+	implements
+		IEditingDomainItemProvider,
+		IStructuredItemContentProvider,
+		ITreeItemContentProvider,
+		IItemLabelProvider,
+		IItemPropertySource {
+	/**
+	 * This constructs an instance from a factory and a notifier.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public BehaviorSeqItemProvider(AdapterFactory adapterFactory) {
+		super(adapterFactory);
+	}
+
+	/**
+	 * This returns the property descriptors for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
+		if (itemPropertyDescriptors == null) {
+			super.getPropertyDescriptors(object);
+
+			addBehaviortypePropertyDescriptor(object);
+		}
+		return itemPropertyDescriptors;
+	}
+
+	/**
+	 * This adds a property descriptor for the Behaviortype feature.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void addBehaviortypePropertyDescriptor(Object object) {
+		itemPropertyDescriptors.add
+			(createItemPropertyDescriptor
+				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
+				 getResourceLocator(),
+				 getString("_UI_BehaviorSeq_behaviortype_feature"),
+				 getString("_UI_PropertyDescriptor_description", "_UI_BehaviorSeq_behaviortype_feature", "_UI_BehaviorSeq_type"),
+				 ComBEPackage.Literals.BEHAVIOR_SEQ__BEHAVIORTYPE,
+				 true,
+				 false,
+				 false,
+				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
+				 null,
+				 null));
+	}
+
+	/**
+	 * This specifies how to implement {@link #getChildren} and is used to deduce an appropriate feature for an
+	 * {@link org.eclipse.emf.edit.command.AddCommand}, {@link org.eclipse.emf.edit.command.RemoveCommand} or
+	 * {@link org.eclipse.emf.edit.command.MoveCommand} in {@link #createCommand}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
+		if (childrenFeatures == null) {
+			super.getChildrenFeatures(object);
+			childrenFeatures.add(ComBEPackage.Literals.BEHAVIOR_SEQ__BEHAVIOR);
+		}
+		return childrenFeatures;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EStructuralFeature getChildFeature(Object object, Object child) {
+		// Check the type of the specified child object and return the proper feature to use for
+		// adding (see {@link AddCommand}) it as a child.
+
+		return super.getChildFeature(object, child);
+	}
+
+	/**
+	 * This returns BehaviorSeq.gif.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object getImage(Object object) {
+		return overlayImage(object, getResourceLocator().getImage("full/obj16/BehaviorSeq"));
+	}
+
+	/**
+	 * This returns the label text for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String getText(Object object) {
+		BehaviorType labelValue = ((BehaviorSeq)object).getBehaviortype();
+		String label = labelValue == null ? null : labelValue.toString();
+		return label == null || label.length() == 0 ?
+			getString("_UI_BehaviorSeq_type") :
+			getString("_UI_BehaviorSeq_type") + " " + label;
+	}
+
+	/**
+	 * This handles model notifications by calling {@link #updateChildren} to update any cached
+	 * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void notifyChanged(Notification notification) {
+		updateChildren(notification);
+
+		switch (notification.getFeatureID(BehaviorSeq.class)) {
+			case ComBEPackage.BEHAVIOR_SEQ__BEHAVIORTYPE:
+				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
+				return;
+			case ComBEPackage.BEHAVIOR_SEQ__BEHAVIOR:
+				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
+				return;
+		}
+		super.notifyChanged(notification);
+	}
+
+	/**
+	 * This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
+	 * that can be created under this object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
+		super.collectNewChildDescriptors(newChildDescriptors, object);
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.BEHAVIOR_SEQ__BEHAVIOR,
+				 ComBEFactory.eINSTANCE.createBehavior()));
+	}
+
+	/**
+	 * Return the resource locator for this item provider's resources.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public ResourceLocator getResourceLocator() {
+		return ComBEEditPlugin.INSTANCE;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/BehaviorTreeItemProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/BehaviorTreeItemProvider.java	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,176 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.provider;
+
+
+import ComBE.BehaviorTree;
+import ComBE.ComBEFactory;
+import ComBE.ComBEPackage;
+
+import java.util.Collection;
+import java.util.List;
+
+import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.common.notify.Notification;
+
+import org.eclipse.emf.common.util.ResourceLocator;
+
+import org.eclipse.emf.ecore.EStructuralFeature;
+
+import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
+import org.eclipse.emf.edit.provider.IItemLabelProvider;
+import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.IItemPropertySource;
+import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
+import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
+import org.eclipse.emf.edit.provider.ItemProviderAdapter;
+import org.eclipse.emf.edit.provider.ViewerNotification;
+
+/**
+ * This is the item provider adapter for a {@link ComBE.BehaviorTree} object.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class BehaviorTreeItemProvider
+	extends ItemProviderAdapter
+	implements
+		IEditingDomainItemProvider,
+		IStructuredItemContentProvider,
+		ITreeItemContentProvider,
+		IItemLabelProvider,
+		IItemPropertySource {
+	/**
+	 * This constructs an instance from a factory and a notifier.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public BehaviorTreeItemProvider(AdapterFactory adapterFactory) {
+		super(adapterFactory);
+	}
+
+	/**
+	 * This returns the property descriptors for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
+		if (itemPropertyDescriptors == null) {
+			super.getPropertyDescriptors(object);
+
+		}
+		return itemPropertyDescriptors;
+	}
+
+	/**
+	 * This specifies how to implement {@link #getChildren} and is used to deduce an appropriate feature for an
+	 * {@link org.eclipse.emf.edit.command.AddCommand}, {@link org.eclipse.emf.edit.command.RemoveCommand} or
+	 * {@link org.eclipse.emf.edit.command.MoveCommand} in {@link #createCommand}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
+		if (childrenFeatures == null) {
+			super.getChildrenFeatures(object);
+			childrenFeatures.add(ComBEPackage.Literals.BEHAVIOR_TREE__NODES);
+		}
+		return childrenFeatures;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EStructuralFeature getChildFeature(Object object, Object child) {
+		// Check the type of the specified child object and return the proper feature to use for
+		// adding (see {@link AddCommand}) it as a child.
+
+		return super.getChildFeature(object, child);
+	}
+
+	/**
+	 * This returns BehaviorTree.gif.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object getImage(Object object) {
+		return overlayImage(object, getResourceLocator().getImage("full/obj16/BehaviorTree"));
+	}
+
+	/**
+	 * This returns the label text for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String getText(Object object) {
+		return getString("_UI_BehaviorTree_type");
+	}
+
+	/**
+	 * This handles model notifications by calling {@link #updateChildren} to update any cached
+	 * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void notifyChanged(Notification notification) {
+		updateChildren(notification);
+
+		switch (notification.getFeatureID(BehaviorTree.class)) {
+			case ComBEPackage.BEHAVIOR_TREE__NODES:
+				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
+				return;
+		}
+		super.notifyChanged(notification);
+	}
+
+	/**
+	 * This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
+	 * that can be created under this object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
+		super.collectNewChildDescriptors(newChildDescriptors, object);
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.BEHAVIOR_TREE__NODES,
+				 ComBEFactory.eINSTANCE.createStandardNode()));
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.BEHAVIOR_TREE__NODES,
+				 ComBEFactory.eINSTANCE.createEmptyNode()));
+	}
+
+	/**
+	 * Return the resource locator for this item provider's resources.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public ResourceLocator getResourceLocator() {
+		return ComBEEditPlugin.INSTANCE;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/ComBEEditPlugin.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/ComBEEditPlugin.java	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,93 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.provider;
+
+import org.eclipse.emf.common.EMFPlugin;
+
+import org.eclipse.emf.common.util.ResourceLocator;
+
+/**
+ * This is the central singleton for the ComBE edit plugin.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public final class ComBEEditPlugin extends EMFPlugin {
+	/**
+	 * Keep track of the singleton.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static final ComBEEditPlugin INSTANCE = new ComBEEditPlugin();
+
+	/**
+	 * Keep track of the singleton.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private static Implementation plugin;
+
+	/**
+	 * Create the instance.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ComBEEditPlugin() {
+		super
+		  (new ResourceLocator [] {
+		   });
+	}
+
+	/**
+	 * Returns the singleton instance of the Eclipse plugin.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the singleton instance.
+	 * @generated
+	 */
+	@Override
+	public ResourceLocator getPluginResourceLocator() {
+		return plugin;
+	}
+
+	/**
+	 * Returns the singleton instance of the Eclipse plugin.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the singleton instance.
+	 * @generated
+	 */
+	public static Implementation getPlugin() {
+		return plugin;
+	}
+
+	/**
+	 * The actual implementation of the Eclipse <b>Plugin</b>.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static class Implementation extends EclipsePlugin {
+		/**
+		 * Creates an instance.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		public Implementation() {
+			super();
+
+			// Remember the static instance.
+			//
+			plugin = this;
+		}
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/ComBEItemProviderAdapterFactory.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/ComBEItemProviderAdapterFactory.java	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,467 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.provider;
+
+import ComBE.util.ComBEAdapterFactory;
+
+import java.util.ArrayList;
+import java.util.Collection;
+
+import org.eclipse.emf.common.notify.Adapter;
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.common.notify.Notifier;
+
+import org.eclipse.emf.edit.provider.ChangeNotifier;
+import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
+import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
+import org.eclipse.emf.edit.provider.IChangeNotifier;
+import org.eclipse.emf.edit.provider.IDisposable;
+import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
+import org.eclipse.emf.edit.provider.IItemLabelProvider;
+import org.eclipse.emf.edit.provider.IItemPropertySource;
+import org.eclipse.emf.edit.provider.INotifyChangedListener;
+import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
+import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
+
+/**
+ * This is the factory that is used to provide the interfaces needed to support Viewers.
+ * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
+ * The adapters also support Eclipse property sheets.
+ * Note that most of the adapters are shared among multiple instances.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class ComBEItemProviderAdapterFactory extends ComBEAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
+	/**
+	 * This keeps track of the root adapter factory that delegates to this adapter factory.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected ComposedAdapterFactory parentAdapterFactory;
+
+	/**
+	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected IChangeNotifier changeNotifier = new ChangeNotifier();
+
+	/**
+	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Collection<Object> supportedTypes = new ArrayList<Object>();
+
+	/**
+	 * This constructs an instance.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ComBEItemProviderAdapterFactory() {
+		supportedTypes.add(IEditingDomainItemProvider.class);
+		supportedTypes.add(IStructuredItemContentProvider.class);
+		supportedTypes.add(ITreeItemContentProvider.class);
+		supportedTypes.add(IItemLabelProvider.class);
+		supportedTypes.add(IItemPropertySource.class);
+	}
+
+	/**
+	 * This keeps track of the one adapter used for all {@link ComBE.Specification} instances.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected SpecificationItemProvider specificationItemProvider;
+
+	/**
+	 * This creates an adapter for a {@link ComBE.Specification}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Adapter createSpecificationAdapter() {
+		if (specificationItemProvider == null) {
+			specificationItemProvider = new SpecificationItemProvider(this);
+		}
+
+		return specificationItemProvider;
+	}
+
+	/**
+	 * This keeps track of the one adapter used for all {@link ComBE.Requirement} instances.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected RequirementItemProvider requirementItemProvider;
+
+	/**
+	 * This creates an adapter for a {@link ComBE.Requirement}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Adapter createRequirementAdapter() {
+		if (requirementItemProvider == null) {
+			requirementItemProvider = new RequirementItemProvider(this);
+		}
+
+		return requirementItemProvider;
+	}
+
+	/**
+	 * This keeps track of the one adapter used for all {@link ComBE.BehaviorSeq} instances.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected BehaviorSeqItemProvider behaviorSeqItemProvider;
+
+	/**
+	 * This creates an adapter for a {@link ComBE.BehaviorSeq}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Adapter createBehaviorSeqAdapter() {
+		if (behaviorSeqItemProvider == null) {
+			behaviorSeqItemProvider = new BehaviorSeqItemProvider(this);
+		}
+
+		return behaviorSeqItemProvider;
+	}
+
+	/**
+	 * This keeps track of the one adapter used for all {@link ComBE.Behavior} instances.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected BehaviorItemProvider behaviorItemProvider;
+
+	/**
+	 * This creates an adapter for a {@link ComBE.Behavior}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Adapter createBehaviorAdapter() {
+		if (behaviorItemProvider == null) {
+			behaviorItemProvider = new BehaviorItemProvider(this);
+		}
+
+		return behaviorItemProvider;
+	}
+
+	/**
+	 * This keeps track of the one adapter used for all {@link ComBE.Root} instances.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected RootItemProvider rootItemProvider;
+
+	/**
+	 * This creates an adapter for a {@link ComBE.Root}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Adapter createRootAdapter() {
+		if (rootItemProvider == null) {
+			rootItemProvider = new RootItemProvider(this);
+		}
+
+		return rootItemProvider;
+	}
+
+	/**
+	 * This keeps track of the one adapter used for all {@link ComBE.StandardComponent} instances.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected StandardComponentItemProvider standardComponentItemProvider;
+
+	/**
+	 * This creates an adapter for a {@link ComBE.StandardComponent}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Adapter createStandardComponentAdapter() {
+		if (standardComponentItemProvider == null) {
+			standardComponentItemProvider = new StandardComponentItemProvider(this);
+		}
+
+		return standardComponentItemProvider;
+	}
+
+	/**
+	 * This keeps track of the one adapter used for all {@link ComBE.SystemComponent} instances.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected SystemComponentItemProvider systemComponentItemProvider;
+
+	/**
+	 * This creates an adapter for a {@link ComBE.SystemComponent}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Adapter createSystemComponentAdapter() {
+		if (systemComponentItemProvider == null) {
+			systemComponentItemProvider = new SystemComponentItemProvider(this);
+		}
+
+		return systemComponentItemProvider;
+	}
+
+	/**
+	 * This keeps track of the one adapter used for all {@link ComBE.AtomicSequence} instances.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected AtomicSequenceItemProvider atomicSequenceItemProvider;
+
+	/**
+	 * This creates an adapter for a {@link ComBE.AtomicSequence}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Adapter createAtomicSequenceAdapter() {
+		if (atomicSequenceItemProvider == null) {
+			atomicSequenceItemProvider = new AtomicSequenceItemProvider(this);
+		}
+
+		return atomicSequenceItemProvider;
+	}
+
+	/**
+	 * This keeps track of the one adapter used for all {@link ComBE.AlternativeBranch} instances.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected AlternativeBranchItemProvider alternativeBranchItemProvider;
+
+	/**
+	 * This creates an adapter for a {@link ComBE.AlternativeBranch}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Adapter createAlternativeBranchAdapter() {
+		if (alternativeBranchItemProvider == null) {
+			alternativeBranchItemProvider = new AlternativeBranchItemProvider(this);
+		}
+
+		return alternativeBranchItemProvider;
+	}
+
+	/**
+	 * This keeps track of the one adapter used for all {@link ComBE.ParallelBranch} instances.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected ParallelBranchItemProvider parallelBranchItemProvider;
+
+	/**
+	 * This creates an adapter for a {@link ComBE.ParallelBranch}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Adapter createParallelBranchAdapter() {
+		if (parallelBranchItemProvider == null) {
+			parallelBranchItemProvider = new ParallelBranchItemProvider(this);
+		}
+
+		return parallelBranchItemProvider;
+	}
+
+	/**
+	 * This keeps track of the one adapter used for all {@link ComBE.StandardNode} instances.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected StandardNodeItemProvider standardNodeItemProvider;
+
+	/**
+	 * This creates an adapter for a {@link ComBE.StandardNode}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Adapter createStandardNodeAdapter() {
+		if (standardNodeItemProvider == null) {
+			standardNodeItemProvider = new StandardNodeItemProvider(this);
+		}
+
+		return standardNodeItemProvider;
+	}
+
+	/**
+	 * This keeps track of the one adapter used for all {@link ComBE.EmptyNode} instances.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected EmptyNodeItemProvider emptyNodeItemProvider;
+
+	/**
+	 * This creates an adapter for a {@link ComBE.EmptyNode}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Adapter createEmptyNodeAdapter() {
+		if (emptyNodeItemProvider == null) {
+			emptyNodeItemProvider = new EmptyNodeItemProvider(this);
+		}
+
+		return emptyNodeItemProvider;
+	}
+
+	/**
+	 * This returns the root adapter factory that contains this factory.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ComposeableAdapterFactory getRootAdapterFactory() {
+		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
+	}
+
+	/**
+	 * This sets the composed adapter factory that contains this factory.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
+		this.parentAdapterFactory = parentAdapterFactory;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public boolean isFactoryForType(Object type) {
+		return supportedTypes.contains(type) || super.isFactoryForType(type);
+	}
+
+	/**
+	 * This implementation substitutes the factory itself as the key for the adapter.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Adapter adapt(Notifier notifier, Object type) {
+		return super.adapt(notifier, this);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object adapt(Object object, Object type) {
+		if (isFactoryForType(type)) {
+			Object adapter = super.adapt(object, type);
+			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
+				return adapter;
+			}
+		}
+
+		return null;
+	}
+
+	/**
+	 * This adds a listener.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void addListener(INotifyChangedListener notifyChangedListener) {
+		changeNotifier.addListener(notifyChangedListener);
+	}
+
+	/**
+	 * This removes a listener.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void removeListener(INotifyChangedListener notifyChangedListener) {
+		changeNotifier.removeListener(notifyChangedListener);
+	}
+
+	/**
+	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void fireNotifyChanged(Notification notification) {
+		changeNotifier.fireNotifyChanged(notification);
+
+		if (parentAdapterFactory != null) {
+			parentAdapterFactory.fireNotifyChanged(notification);
+		}
+	}
+
+	/**
+	 * This disposes all of the item providers created by this factory. 
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void dispose() {
+		if (specificationItemProvider != null) specificationItemProvider.dispose();
+		if (requirementItemProvider != null) requirementItemProvider.dispose();
+		if (behaviorSeqItemProvider != null) behaviorSeqItemProvider.dispose();
+		if (behaviorItemProvider != null) behaviorItemProvider.dispose();
+		if (rootItemProvider != null) rootItemProvider.dispose();
+		if (standardComponentItemProvider != null) standardComponentItemProvider.dispose();
+		if (systemComponentItemProvider != null) systemComponentItemProvider.dispose();
+		if (atomicSequenceItemProvider != null) atomicSequenceItemProvider.dispose();
+		if (alternativeBranchItemProvider != null) alternativeBranchItemProvider.dispose();
+		if (parallelBranchItemProvider != null) parallelBranchItemProvider.dispose();
+		if (standardNodeItemProvider != null) standardNodeItemProvider.dispose();
+		if (emptyNodeItemProvider != null) emptyNodeItemProvider.dispose();
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/ComponentItemProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/ComponentItemProvider.java	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,226 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.provider;
+
+
+import ComBE.ComBEFactory;
+import ComBE.ComBEPackage;
+import ComBE.Component;
+
+import java.util.Collection;
+import java.util.List;
+
+import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.common.notify.Notification;
+
+import org.eclipse.emf.common.util.ResourceLocator;
+
+import org.eclipse.emf.ecore.EStructuralFeature;
+
+import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
+import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
+import org.eclipse.emf.edit.provider.IItemLabelProvider;
+import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.IItemPropertySource;
+import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
+import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
+import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.ItemProviderAdapter;
+import org.eclipse.emf.edit.provider.ViewerNotification;
+
+/**
+ * This is the item provider adapter for a {@link ComBE.Component} object.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class ComponentItemProvider
+	extends ItemProviderAdapter
+	implements
+		IEditingDomainItemProvider,
+		IStructuredItemContentProvider,
+		ITreeItemContentProvider,
+		IItemLabelProvider,
+		IItemPropertySource {
+	/**
+	 * This constructs an instance from a factory and a notifier.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ComponentItemProvider(AdapterFactory adapterFactory) {
+		super(adapterFactory);
+	}
+
+	/**
+	 * This returns the property descriptors for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
+		if (itemPropertyDescriptors == null) {
+			super.getPropertyDescriptors(object);
+
+			addIdPropertyDescriptor(object);
+			addLabelPropertyDescriptor(object);
+		}
+		return itemPropertyDescriptors;
+	}
+
+	/**
+	 * This adds a property descriptor for the Id feature.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void addIdPropertyDescriptor(Object object) {
+		itemPropertyDescriptors.add
+			(createItemPropertyDescriptor
+				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
+				 getResourceLocator(),
+				 getString("_UI_Component_id_feature"),
+				 getString("_UI_PropertyDescriptor_description", "_UI_Component_id_feature", "_UI_Component_type"),
+				 ComBEPackage.Literals.COMPONENT__ID,
+				 true,
+				 false,
+				 false,
+				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
+				 null,
+				 null));
+	}
+
+	/**
+	 * This adds a property descriptor for the Label feature.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void addLabelPropertyDescriptor(Object object) {
+		itemPropertyDescriptors.add
+			(createItemPropertyDescriptor
+				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
+				 getResourceLocator(),
+				 getString("_UI_Component_label_feature"),
+				 getString("_UI_PropertyDescriptor_description", "_UI_Component_label_feature", "_UI_Component_type"),
+				 ComBEPackage.Literals.COMPONENT__LABEL,
+				 true,
+				 false,
+				 false,
+				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
+				 null,
+				 null));
+	}
+
+	/**
+	 * This specifies how to implement {@link #getChildren} and is used to deduce an appropriate feature for an
+	 * {@link org.eclipse.emf.edit.command.AddCommand}, {@link org.eclipse.emf.edit.command.RemoveCommand} or
+	 * {@link org.eclipse.emf.edit.command.MoveCommand} in {@link #createCommand}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
+		if (childrenFeatures == null) {
+			super.getChildrenFeatures(object);
+			childrenFeatures.add(ComBEPackage.Literals.COMPONENT__BEHAVIORSEQS);
+		}
+		return childrenFeatures;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EStructuralFeature getChildFeature(Object object, Object child) {
+		// Check the type of the specified child object and return the proper feature to use for
+		// adding (see {@link AddCommand}) it as a child.
+
+		return super.getChildFeature(object, child);
+	}
+
+	/**
+	 * This returns Component.gif.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object getImage(Object object) {
+		return overlayImage(object, getResourceLocator().getImage("full/obj16/Component"));
+	}
+
+	/**
+	 * This returns the label text for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String getText(Object object) {
+		String label = ((Component)object).getId();
+		return label == null || label.length() == 0 ?
+			getString("_UI_Component_type") :
+			getString("_UI_Component_type") + " " + label;
+	}
+
+	/**
+	 * This handles model notifications by calling {@link #updateChildren} to update any cached
+	 * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void notifyChanged(Notification notification) {
+		updateChildren(notification);
+
+		switch (notification.getFeatureID(Component.class)) {
+			case ComBEPackage.COMPONENT__ID:
+			case ComBEPackage.COMPONENT__LABEL:
+				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
+				return;
+			case ComBEPackage.COMPONENT__BEHAVIORSEQS:
+				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
+				return;
+		}
+		super.notifyChanged(notification);
+	}
+
+	/**
+	 * This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
+	 * that can be created under this object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
+		super.collectNewChildDescriptors(newChildDescriptors, object);
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.COMPONENT__BEHAVIORSEQS,
+				 ComBEFactory.eINSTANCE.createBehaviorSeq()));
+	}
+
+	/**
+	 * Return the resource locator for this item provider's resources.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public ResourceLocator getResourceLocator() {
+		return ComBEEditPlugin.INSTANCE;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/EmptyNodeItemProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/EmptyNodeItemProvider.java	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,114 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.provider;
+
+
+import ComBE.EmptyNode;
+
+import java.util.Collection;
+import java.util.List;
+
+import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.common.notify.Notification;
+
+import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
+import org.eclipse.emf.edit.provider.IItemLabelProvider;
+import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.IItemPropertySource;
+import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
+import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
+
+/**
+ * This is the item provider adapter for a {@link ComBE.EmptyNode} object.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class EmptyNodeItemProvider
+	extends NodeItemProvider
+	implements
+		IEditingDomainItemProvider,
+		IStructuredItemContentProvider,
+		ITreeItemContentProvider,
+		IItemLabelProvider,
+		IItemPropertySource {
+	/**
+	 * This constructs an instance from a factory and a notifier.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EmptyNodeItemProvider(AdapterFactory adapterFactory) {
+		super(adapterFactory);
+	}
+
+	/**
+	 * This returns the property descriptors for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
+		if (itemPropertyDescriptors == null) {
+			super.getPropertyDescriptors(object);
+
+		}
+		return itemPropertyDescriptors;
+	}
+
+	/**
+	 * This returns EmptyNode.gif.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object getImage(Object object) {
+		return overlayImage(object, getResourceLocator().getImage("full/obj16/EmptyNode"));
+	}
+
+	/**
+	 * This returns the label text for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String getText(Object object) {
+		String label = ((EmptyNode)object).getLabel();
+		return label == null || label.length() == 0 ?
+			getString("_UI_EmptyNode_type") :
+			getString("_UI_EmptyNode_type") + " " + label;
+	}
+
+	/**
+	 * This handles model notifications by calling {@link #updateChildren} to update any cached
+	 * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void notifyChanged(Notification notification) {
+		updateChildren(notification);
+		super.notifyChanged(notification);
+	}
+
+	/**
+	 * This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
+	 * that can be created under this object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
+		super.collectNewChildDescriptors(newChildDescriptors, object);
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/NodeItemProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/NodeItemProvider.java	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,185 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.provider;
+
+
+import ComBE.ComBEPackage;
+import ComBE.Node;
+
+import java.util.Collection;
+import java.util.List;
+
+import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.common.notify.Notification;
+
+import org.eclipse.emf.common.util.ResourceLocator;
+
+import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
+import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
+import org.eclipse.emf.edit.provider.IItemLabelProvider;
+import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.IItemPropertySource;
+import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
+import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
+import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.ItemProviderAdapter;
+import org.eclipse.emf.edit.provider.ViewerNotification;
+
+/**
+ * This is the item provider adapter for a {@link ComBE.Node} object.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class NodeItemProvider
+	extends ItemProviderAdapter
+	implements
+		IEditingDomainItemProvider,
+		IStructuredItemContentProvider,
+		ITreeItemContentProvider,
+		IItemLabelProvider,
+		IItemPropertySource {
+	/**
+	 * This constructs an instance from a factory and a notifier.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public NodeItemProvider(AdapterFactory adapterFactory) {
+		super(adapterFactory);
+	}
+
+	/**
+	 * This returns the property descriptors for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
+		if (itemPropertyDescriptors == null) {
+			super.getPropertyDescriptors(object);
+
+			addLabelPropertyDescriptor(object);
+			addOperatorPropertyDescriptor(object);
+		}
+		return itemPropertyDescriptors;
+	}
+
+	/**
+	 * This adds a property descriptor for the Label feature.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void addLabelPropertyDescriptor(Object object) {
+		itemPropertyDescriptors.add
+			(createItemPropertyDescriptor
+				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
+				 getResourceLocator(),
+				 getString("_UI_Node_label_feature"),
+				 getString("_UI_PropertyDescriptor_description", "_UI_Node_label_feature", "_UI_Node_type"),
+				 ComBEPackage.Literals.NODE__LABEL,
+				 true,
+				 false,
+				 false,
+				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
+				 null,
+				 null));
+	}
+
+	/**
+	 * This adds a property descriptor for the Operator feature.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void addOperatorPropertyDescriptor(Object object) {
+		itemPropertyDescriptors.add
+			(createItemPropertyDescriptor
+				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
+				 getResourceLocator(),
+				 getString("_UI_Node_operator_feature"),
+				 getString("_UI_PropertyDescriptor_description", "_UI_Node_operator_feature", "_UI_Node_type"),
+				 ComBEPackage.Literals.NODE__OPERATOR,
+				 true,
+				 false,
+				 false,
+				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
+				 null,
+				 null));
+	}
+
+	/**
+	 * This returns Node.gif.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object getImage(Object object) {
+		return overlayImage(object, getResourceLocator().getImage("full/obj16/Node"));
+	}
+
+	/**
+	 * This returns the label text for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String getText(Object object) {
+		String label = ((Node)object).getLabel();
+		return label == null || label.length() == 0 ?
+			getString("_UI_Node_type") :
+			getString("_UI_Node_type") + " " + label;
+	}
+
+	/**
+	 * This handles model notifications by calling {@link #updateChildren} to update any cached
+	 * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void notifyChanged(Notification notification) {
+		updateChildren(notification);
+
+		switch (notification.getFeatureID(Node.class)) {
+			case ComBEPackage.NODE__LABEL:
+			case ComBEPackage.NODE__OPERATOR:
+				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
+				return;
+		}
+		super.notifyChanged(notification);
+	}
+
+	/**
+	 * This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
+	 * that can be created under this object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
+		super.collectNewChildDescriptors(newChildDescriptors, object);
+	}
+
+	/**
+	 * Return the resource locator for this item provider's resources.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public ResourceLocator getResourceLocator() {
+		return ComBEEditPlugin.INSTANCE;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/ParallelBranchItemProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/ParallelBranchItemProvider.java	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,167 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.provider;
+
+
+import ComBE.ComBEFactory;
+import ComBE.ComBEPackage;
+import ComBE.ParallelBranch;
+
+import java.util.Collection;
+import java.util.List;
+
+import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.common.notify.Notification;
+
+import org.eclipse.emf.ecore.EStructuralFeature;
+
+import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
+import org.eclipse.emf.edit.provider.IItemLabelProvider;
+import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.IItemPropertySource;
+import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
+import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
+import org.eclipse.emf.edit.provider.ViewerNotification;
+
+/**
+ * This is the item provider adapter for a {@link ComBE.ParallelBranch} object.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class ParallelBranchItemProvider
+	extends BehaviorTreeItemProvider
+	implements
+		IEditingDomainItemProvider,
+		IStructuredItemContentProvider,
+		ITreeItemContentProvider,
+		IItemLabelProvider,
+		IItemPropertySource {
+	/**
+	 * This constructs an instance from a factory and a notifier.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ParallelBranchItemProvider(AdapterFactory adapterFactory) {
+		super(adapterFactory);
+	}
+
+	/**
+	 * This returns the property descriptors for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
+		if (itemPropertyDescriptors == null) {
+			super.getPropertyDescriptors(object);
+
+		}
+		return itemPropertyDescriptors;
+	}
+
+	/**
+	 * This specifies how to implement {@link #getChildren} and is used to deduce an appropriate feature for an
+	 * {@link org.eclipse.emf.edit.command.AddCommand}, {@link org.eclipse.emf.edit.command.RemoveCommand} or
+	 * {@link org.eclipse.emf.edit.command.MoveCommand} in {@link #createCommand}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
+		if (childrenFeatures == null) {
+			super.getChildrenFeatures(object);
+			childrenFeatures.add(ComBEPackage.Literals.PARALLEL_BRANCH__CHILDREN);
+		}
+		return childrenFeatures;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EStructuralFeature getChildFeature(Object object, Object child) {
+		// Check the type of the specified child object and return the proper feature to use for
+		// adding (see {@link AddCommand}) it as a child.
+
+		return super.getChildFeature(object, child);
+	}
+
+	/**
+	 * This returns ParallelBranch.gif.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object getImage(Object object) {
+		return overlayImage(object, getResourceLocator().getImage("full/obj16/ParallelBranch"));
+	}
+
+	/**
+	 * This returns the label text for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String getText(Object object) {
+		return getString("_UI_ParallelBranch_type");
+	}
+
+	/**
+	 * This handles model notifications by calling {@link #updateChildren} to update any cached
+	 * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void notifyChanged(Notification notification) {
+		updateChildren(notification);
+
+		switch (notification.getFeatureID(ParallelBranch.class)) {
+			case ComBEPackage.PARALLEL_BRANCH__CHILDREN:
+				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
+				return;
+		}
+		super.notifyChanged(notification);
+	}
+
+	/**
+	 * This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
+	 * that can be created under this object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
+		super.collectNewChildDescriptors(newChildDescriptors, object);
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.PARALLEL_BRANCH__CHILDREN,
+				 ComBEFactory.eINSTANCE.createAtomicSequence()));
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.PARALLEL_BRANCH__CHILDREN,
+				 ComBEFactory.eINSTANCE.createAlternativeBranch()));
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.PARALLEL_BRANCH__CHILDREN,
+				 ComBEFactory.eINSTANCE.createParallelBranch()));
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/RequirementItemProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/RequirementItemProvider.java	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,185 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.provider;
+
+
+import ComBE.ComBEPackage;
+import ComBE.Requirement;
+
+import java.util.Collection;
+import java.util.List;
+
+import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.common.notify.Notification;
+
+import org.eclipse.emf.common.util.ResourceLocator;
+
+import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
+import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
+import org.eclipse.emf.edit.provider.IItemLabelProvider;
+import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.IItemPropertySource;
+import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
+import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
+import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.ItemProviderAdapter;
+import org.eclipse.emf.edit.provider.ViewerNotification;
+
+/**
+ * This is the item provider adapter for a {@link ComBE.Requirement} object.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class RequirementItemProvider
+	extends ItemProviderAdapter
+	implements
+		IEditingDomainItemProvider,
+		IStructuredItemContentProvider,
+		ITreeItemContentProvider,
+		IItemLabelProvider,
+		IItemPropertySource {
+	/**
+	 * This constructs an instance from a factory and a notifier.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public RequirementItemProvider(AdapterFactory adapterFactory) {
+		super(adapterFactory);
+	}
+
+	/**
+	 * This returns the property descriptors for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
+		if (itemPropertyDescriptors == null) {
+			super.getPropertyDescriptors(object);
+
+			addIdPropertyDescriptor(object);
+			addLabelPropertyDescriptor(object);
+		}
+		return itemPropertyDescriptors;
+	}
+
+	/**
+	 * This adds a property descriptor for the Id feature.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void addIdPropertyDescriptor(Object object) {
+		itemPropertyDescriptors.add
+			(createItemPropertyDescriptor
+				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
+				 getResourceLocator(),
+				 getString("_UI_Requirement_id_feature"),
+				 getString("_UI_PropertyDescriptor_description", "_UI_Requirement_id_feature", "_UI_Requirement_type"),
+				 ComBEPackage.Literals.REQUIREMENT__ID,
+				 true,
+				 false,
+				 false,
+				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
+				 null,
+				 null));
+	}
+
+	/**
+	 * This adds a property descriptor for the Label feature.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void addLabelPropertyDescriptor(Object object) {
+		itemPropertyDescriptors.add
+			(createItemPropertyDescriptor
+				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
+				 getResourceLocator(),
+				 getString("_UI_Requirement_label_feature"),
+				 getString("_UI_PropertyDescriptor_description", "_UI_Requirement_label_feature", "_UI_Requirement_type"),
+				 ComBEPackage.Literals.REQUIREMENT__LABEL,
+				 true,
+				 false,
+				 false,
+				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
+				 null,
+				 null));
+	}
+
+	/**
+	 * This returns Requirement.gif.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object getImage(Object object) {
+		return overlayImage(object, getResourceLocator().getImage("full/obj16/Requirement"));
+	}
+
+	/**
+	 * This returns the label text for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String getText(Object object) {
+		String label = ((Requirement)object).getId();
+		return label == null || label.length() == 0 ?
+			getString("_UI_Requirement_type") :
+			getString("_UI_Requirement_type") + " " + label;
+	}
+
+	/**
+	 * This handles model notifications by calling {@link #updateChildren} to update any cached
+	 * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void notifyChanged(Notification notification) {
+		updateChildren(notification);
+
+		switch (notification.getFeatureID(Requirement.class)) {
+			case ComBEPackage.REQUIREMENT__ID:
+			case ComBEPackage.REQUIREMENT__LABEL:
+				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
+				return;
+		}
+		super.notifyChanged(notification);
+	}
+
+	/**
+	 * This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
+	 * that can be created under this object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
+		super.collectNewChildDescriptors(newChildDescriptors, object);
+	}
+
+	/**
+	 * Return the resource locator for this item provider's resources.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public ResourceLocator getResourceLocator() {
+		return ComBEEditPlugin.INSTANCE;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/RootItemProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/RootItemProvider.java	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,181 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.provider;
+
+
+import ComBE.ComBEFactory;
+import ComBE.ComBEPackage;
+import ComBE.Root;
+
+import java.util.Collection;
+import java.util.List;
+
+import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.common.notify.Notification;
+
+import org.eclipse.emf.common.util.ResourceLocator;
+
+import org.eclipse.emf.ecore.EStructuralFeature;
+
+import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
+import org.eclipse.emf.edit.provider.IItemLabelProvider;
+import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.IItemPropertySource;
+import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
+import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
+import org.eclipse.emf.edit.provider.ItemProviderAdapter;
+import org.eclipse.emf.edit.provider.ViewerNotification;
+
+/**
+ * This is the item provider adapter for a {@link ComBE.Root} object.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class RootItemProvider
+	extends ItemProviderAdapter
+	implements
+		IEditingDomainItemProvider,
+		IStructuredItemContentProvider,
+		ITreeItemContentProvider,
+		IItemLabelProvider,
+		IItemPropertySource {
+	/**
+	 * This constructs an instance from a factory and a notifier.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public RootItemProvider(AdapterFactory adapterFactory) {
+		super(adapterFactory);
+	}
+
+	/**
+	 * This returns the property descriptors for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
+		if (itemPropertyDescriptors == null) {
+			super.getPropertyDescriptors(object);
+
+		}
+		return itemPropertyDescriptors;
+	}
+
+	/**
+	 * This specifies how to implement {@link #getChildren} and is used to deduce an appropriate feature for an
+	 * {@link org.eclipse.emf.edit.command.AddCommand}, {@link org.eclipse.emf.edit.command.RemoveCommand} or
+	 * {@link org.eclipse.emf.edit.command.MoveCommand} in {@link #createCommand}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
+		if (childrenFeatures == null) {
+			super.getChildrenFeatures(object);
+			childrenFeatures.add(ComBEPackage.Literals.ROOT__BEHAVIORTREE);
+		}
+		return childrenFeatures;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EStructuralFeature getChildFeature(Object object, Object child) {
+		// Check the type of the specified child object and return the proper feature to use for
+		// adding (see {@link AddCommand}) it as a child.
+
+		return super.getChildFeature(object, child);
+	}
+
+	/**
+	 * This returns Root.gif.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object getImage(Object object) {
+		return overlayImage(object, getResourceLocator().getImage("full/obj16/Root"));
+	}
+
+	/**
+	 * This returns the label text for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String getText(Object object) {
+		return getString("_UI_Root_type");
+	}
+
+	/**
+	 * This handles model notifications by calling {@link #updateChildren} to update any cached
+	 * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void notifyChanged(Notification notification) {
+		updateChildren(notification);
+
+		switch (notification.getFeatureID(Root.class)) {
+			case ComBEPackage.ROOT__BEHAVIORTREE:
+				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
+				return;
+		}
+		super.notifyChanged(notification);
+	}
+
+	/**
+	 * This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
+	 * that can be created under this object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
+		super.collectNewChildDescriptors(newChildDescriptors, object);
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.ROOT__BEHAVIORTREE,
+				 ComBEFactory.eINSTANCE.createAtomicSequence()));
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.ROOT__BEHAVIORTREE,
+				 ComBEFactory.eINSTANCE.createAlternativeBranch()));
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.ROOT__BEHAVIORTREE,
+				 ComBEFactory.eINSTANCE.createParallelBranch()));
+	}
+
+	/**
+	 * Return the resource locator for this item provider's resources.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public ResourceLocator getResourceLocator() {
+		return ComBEEditPlugin.INSTANCE;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/SpecificationItemProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/SpecificationItemProvider.java	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,190 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.provider;
+
+
+import ComBE.ComBEFactory;
+import ComBE.ComBEPackage;
+import ComBE.Specification;
+
+import java.util.Collection;
+import java.util.List;
+
+import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.common.notify.Notification;
+
+import org.eclipse.emf.common.util.ResourceLocator;
+
+import org.eclipse.emf.ecore.EStructuralFeature;
+
+import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
+import org.eclipse.emf.edit.provider.IItemLabelProvider;
+import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.IItemPropertySource;
+import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
+import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
+import org.eclipse.emf.edit.provider.ItemProviderAdapter;
+import org.eclipse.emf.edit.provider.ViewerNotification;
+
+/**
+ * This is the item provider adapter for a {@link ComBE.Specification} object.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class SpecificationItemProvider
+	extends ItemProviderAdapter
+	implements
+		IEditingDomainItemProvider,
+		IStructuredItemContentProvider,
+		ITreeItemContentProvider,
+		IItemLabelProvider,
+		IItemPropertySource {
+	/**
+	 * This constructs an instance from a factory and a notifier.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public SpecificationItemProvider(AdapterFactory adapterFactory) {
+		super(adapterFactory);
+	}
+
+	/**
+	 * This returns the property descriptors for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
+		if (itemPropertyDescriptors == null) {
+			super.getPropertyDescriptors(object);
+
+		}
+		return itemPropertyDescriptors;
+	}
+
+	/**
+	 * This specifies how to implement {@link #getChildren} and is used to deduce an appropriate feature for an
+	 * {@link org.eclipse.emf.edit.command.AddCommand}, {@link org.eclipse.emf.edit.command.RemoveCommand} or
+	 * {@link org.eclipse.emf.edit.command.MoveCommand} in {@link #createCommand}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
+		if (childrenFeatures == null) {
+			super.getChildrenFeatures(object);
+			childrenFeatures.add(ComBEPackage.Literals.SPECIFICATION__REQUIREMENTS);
+			childrenFeatures.add(ComBEPackage.Literals.SPECIFICATION__COMPONENTS);
+			childrenFeatures.add(ComBEPackage.Literals.SPECIFICATION__ROOT);
+		}
+		return childrenFeatures;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EStructuralFeature getChildFeature(Object object, Object child) {
+		// Check the type of the specified child object and return the proper feature to use for
+		// adding (see {@link AddCommand}) it as a child.
+
+		return super.getChildFeature(object, child);
+	}
+
+	/**
+	 * This returns Specification.gif.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object getImage(Object object) {
+		return overlayImage(object, getResourceLocator().getImage("full/obj16/Specification"));
+	}
+
+	/**
+	 * This returns the label text for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String getText(Object object) {
+		return getString("_UI_Specification_type");
+	}
+
+	/**
+	 * This handles model notifications by calling {@link #updateChildren} to update any cached
+	 * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void notifyChanged(Notification notification) {
+		updateChildren(notification);
+
+		switch (notification.getFeatureID(Specification.class)) {
+			case ComBEPackage.SPECIFICATION__REQUIREMENTS:
+			case ComBEPackage.SPECIFICATION__COMPONENTS:
+			case ComBEPackage.SPECIFICATION__ROOT:
+				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
+				return;
+		}
+		super.notifyChanged(notification);
+	}
+
+	/**
+	 * This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
+	 * that can be created under this object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
+		super.collectNewChildDescriptors(newChildDescriptors, object);
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.SPECIFICATION__REQUIREMENTS,
+				 ComBEFactory.eINSTANCE.createRequirement()));
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.SPECIFICATION__COMPONENTS,
+				 ComBEFactory.eINSTANCE.createStandardComponent()));
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.SPECIFICATION__COMPONENTS,
+				 ComBEFactory.eINSTANCE.createSystemComponent()));
+
+		newChildDescriptors.add
+			(createChildParameter
+				(ComBEPackage.Literals.SPECIFICATION__ROOT,
+				 ComBEFactory.eINSTANCE.createRoot()));
+	}
+
+	/**
+	 * Return the resource locator for this item provider's resources.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public ResourceLocator getResourceLocator() {
+		return ComBEEditPlugin.INSTANCE;
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/StandardComponentItemProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/StandardComponentItemProvider.java	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,114 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.provider;
+
+
+import ComBE.StandardComponent;
+
+import java.util.Collection;
+import java.util.List;
+
+import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.common.notify.Notification;
+
+import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
+import org.eclipse.emf.edit.provider.IItemLabelProvider;
+import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.IItemPropertySource;
+import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
+import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
+
+/**
+ * This is the item provider adapter for a {@link ComBE.StandardComponent} object.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class StandardComponentItemProvider
+	extends ComponentItemProvider
+	implements
+		IEditingDomainItemProvider,
+		IStructuredItemContentProvider,
+		ITreeItemContentProvider,
+		IItemLabelProvider,
+		IItemPropertySource {
+	/**
+	 * This constructs an instance from a factory and a notifier.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public StandardComponentItemProvider(AdapterFactory adapterFactory) {
+		super(adapterFactory);
+	}
+
+	/**
+	 * This returns the property descriptors for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
+		if (itemPropertyDescriptors == null) {
+			super.getPropertyDescriptors(object);
+
+		}
+		return itemPropertyDescriptors;
+	}
+
+	/**
+	 * This returns StandardComponent.gif.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object getImage(Object object) {
+		return overlayImage(object, getResourceLocator().getImage("full/obj16/StandardComponent"));
+	}
+
+	/**
+	 * This returns the label text for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String getText(Object object) {
+		String label = ((StandardComponent)object).getId();
+		return label == null || label.length() == 0 ?
+			getString("_UI_StandardComponent_type") :
+			getString("_UI_StandardComponent_type") + " " + label;
+	}
+
+	/**
+	 * This handles model notifications by calling {@link #updateChildren} to update any cached
+	 * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void notifyChanged(Notification notification) {
+		updateChildren(notification);
+		super.notifyChanged(notification);
+	}
+
+	/**
+	 * This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
+	 * that can be created under this object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
+		super.collectNewChildDescriptors(newChildDescriptors, object);
+	}
+
+}

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/StandardNodeItemProvider.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/StandardNodeItemProvider.java	Mon Jul 16 01:38:25 2012	(r25200)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/StandardNodeItemProvider.java	Mon Jul 16 01:41:33 2012	(r25201)
@@ -1,19 +1,23 @@
 package ComBE.provider;
 
 import java.util.Collection;
+import java.util.List;
 import java.util.Collections;
 
 import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.common.notify.Notification;
 import org.eclipse.emf.common.util.BasicEList;
 import org.eclipse.emf.common.util.EList;
 import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
 import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
 import org.eclipse.emf.edit.provider.IItemLabelProvider;
+import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
 import org.eclipse.emf.edit.provider.IItemPropertySource;
 import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
 import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
 import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
 
+import org.eclipse.emf.edit.provider.ViewerNotification;
 import ComBE.Behavior;
 import ComBE.BehaviorSeq;
 import ComBE.ComBEPackage;
@@ -28,6 +32,101 @@
 public class StandardNodeItemProvider extends NodeItemProvider implements IEditingDomainItemProvider, IStructuredItemContentProvider, ITreeItemContentProvider, IItemLabelProvider, IItemPropertySource {
 
 	/**
+	 * This constructs an instance from a factory and a notifier.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public StandardNodeItemProvider(AdapterFactory adapterFactory) {
+		super(adapterFactory);
+	}
+
+	/**
+	 * This returns the property descriptors for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
+		if (itemPropertyDescriptors == null) {
+			super.getPropertyDescriptors(object);
+
+			addRequirementPropertyDescriptor(object);
+			addTracibilitystatusPropertyDescriptor(object);
+			addComponentPropertyDescriptor(object);
+			addBehaviorPropertyDescriptor(object);
+		}
+		return itemPropertyDescriptors;
+	}
+
+	/**
+	 * This adds a property descriptor for the Requirement feature.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void addRequirementPropertyDescriptor(Object object) {
+		itemPropertyDescriptors.add
+			(createItemPropertyDescriptor
+				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
+				 getResourceLocator(),
+				 getString("_UI_StandardNode_requirement_feature"),
+				 getString("_UI_PropertyDescriptor_description", "_UI_StandardNode_requirement_feature", "_UI_StandardNode_type"),
+				 ComBEPackage.Literals.STANDARD_NODE__REQUIREMENT,
+				 true,
+				 false,
+				 true,
+				 null,
+				 null,
+				 null));
+	}
+
+	/**
+	 * This adds a property descriptor for the Tracibilitystatus feature.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void addTracibilitystatusPropertyDescriptor(Object object) {
+		itemPropertyDescriptors.add
+			(createItemPropertyDescriptor
+				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
+				 getResourceLocator(),
+				 getString("_UI_StandardNode_tracibilitystatus_feature"),
+				 getString("_UI_PropertyDescriptor_description", "_UI_StandardNode_tracibilitystatus_feature", "_UI_StandardNode_type"),
+				 ComBEPackage.Literals.STANDARD_NODE__TRACIBILITYSTATUS,
+				 true,
+				 false,
+				 false,
+				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
+				 null,
+				 null));
+	}
+
+	/**
+	 * This adds a property descriptor for the Component feature.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void addComponentPropertyDescriptor(Object object) {
+		itemPropertyDescriptors.add
+			(createItemPropertyDescriptor
+				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
+				 getResourceLocator(),
+				 getString("_UI_StandardNode_component_feature"),
+				 getString("_UI_PropertyDescriptor_description", "_UI_StandardNode_component_feature", "_UI_StandardNode_type"),
+				 ComBEPackage.Literals.STANDARD_NODE__COMPONENT,
+				 true,
+				 false,
+				 true,
+				 null,
+				 null,
+				 null));
+	}
+
+	/**
 	 * @generated NOT: filter the set of Behavior a user can select in the properties view of a StandardNode. Only Behavior that is contained within the node's current Component will show up.
 	 */
 	protected void addBehaviorPropertyDescriptor(Object object) {
@@ -52,4 +151,60 @@
 			}
 		});
 	}
+
+	/**
+	 * This returns StandardNode.gif.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object getImage(Object object) {
+		return overlayImage(object, getResourceLocator().getImage("full/obj16/StandardNode"));
+	}
+
+	/**
+	 * This returns the label text for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String getText(Object object) {
+		String label = ((StandardNode)object).getLabel();
+		return label == null || label.length() == 0 ?
+			getString("_UI_StandardNode_type") :
+			getString("_UI_StandardNode_type") + " " + label;
+	}
+
+	/**
+	 * This handles model notifications by calling {@link #updateChildren} to update any cached
+	 * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void notifyChanged(Notification notification) {
+		updateChildren(notification);
+
+		switch (notification.getFeatureID(StandardNode.class)) {
+			case ComBEPackage.STANDARD_NODE__TRACIBILITYSTATUS:
+				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
+				return;
+		}
+		super.notifyChanged(notification);
+	}
+
+	/**
+	 * This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
+	 * that can be created under this object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
+		super.collectNewChildDescriptors(newChildDescriptors, object);
+	}
 }

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/SystemComponentItemProvider.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.edit/src/ComBE/provider/SystemComponentItemProvider.java	Mon Jul 16 01:41:33 2012	(r25201)
@@ -0,0 +1,114 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.provider;
+
+
+import ComBE.SystemComponent;
+
+import java.util.Collection;
+import java.util.List;
+
+import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.common.notify.Notification;
+
+import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
+import org.eclipse.emf.edit.provider.IItemLabelProvider;
+import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
+import org.eclipse.emf.edit.provider.IItemPropertySource;
+import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
+import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
+
+/**
+ * This is the item provider adapter for a {@link ComBE.SystemComponent} object.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class SystemComponentItemProvider
+	extends ComponentItemProvider
+	implements
+		IEditingDomainItemProvider,
+		IStructuredItemContentProvider,
+		ITreeItemContentProvider,
+		IItemLabelProvider,
+		IItemPropertySource {
+	/**
+	 * This constructs an instance from a factory and a notifier.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public SystemComponentItemProvider(AdapterFactory adapterFactory) {
+		super(adapterFactory);
+	}
+
+	/**
+	 * This returns the property descriptors for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
+		if (itemPropertyDescriptors == null) {
+			super.getPropertyDescriptors(object);
+
+		}
+		return itemPropertyDescriptors;
+	}
+
+	/**
+	 * This returns SystemComponent.gif.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object getImage(Object object) {
+		return overlayImage(object, getResourceLocator().getImage("full/obj16/SystemComponent"));
+	}
+
+	/**
+	 * This returns the label text for the adapted class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String getText(Object object) {
+		String label = ((SystemComponent)object).getId();
+		return label == null || label.length() == 0 ?
+			getString("_UI_SystemComponent_type") :
+			getString("_UI_SystemComponent_type") + " " + label;
+	}
+
+	/**
+	 * This handles model notifications by calling {@link #updateChildren} to update any cached
+	 * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void notifyChanged(Notification notification) {
+		updateChildren(notification);
+		super.notifyChanged(notification);
+	}
+
+	/**
+	 * This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
+	 * that can be created under this object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
+		super.collectNewChildDescriptors(newChildDescriptors, object);
+	}
+
+}

From oskarvanrest at gmail.com  Mon Jul 16 03:43:04 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 16 Jul 2012 01:43:04 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25202 - in
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical:
	. .settings src/ComBE src/ComBE/impl src/ComBE/util
Message-ID: <20120716014304.B8C0ACC0E3@mx4.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 16 01:43:04 2012
New Revision: 25202
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25202&sc=1

Log:
Added generated resources to SVN.

Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.settings/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.settings/org.eclipse.core.resources.prefs
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.settings/org.eclipse.gmf.bridge.ui.dashboard.prefs
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.settings/org.eclipse.jdt.core.prefs
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.settings/org.eclipse.m2e.core.prefs
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/AlternativeBranch.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/AtomicSequence.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Behavior.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/BehaviorSeq.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/BehaviorTree.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/BehaviorType.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/ComBEFactory.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/ComBEPackage.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Component.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/EmptyNode.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Node.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Operator.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/ParallelBranch.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Requirement.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Root.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Specification.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/StandardComponent.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/StandardNode.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/SystemComponent.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/TracibilityStatus.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/AlternativeBranchImpl.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/AtomicSequenceImpl.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/BehaviorImpl.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/BehaviorSeqImpl.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/BehaviorTreeImpl.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/ComBEFactoryImpl.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/ComBEPackageImpl.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/ComponentImpl.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/EmptyNodeImpl.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/NodeImpl.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/ParallelBranchImpl.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/RequirementImpl.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/RootImpl.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/SpecificationImpl.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/StandardComponentImpl.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/SystemComponentImpl.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/util/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/util/ComBEAdapterFactory.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/util/ComBESwitch.java
Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.classpath
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.project
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/StandardNodeImpl.java

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.classpath
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.classpath	Mon Jul 16 01:41:33 2012	(r25201)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.classpath	Mon Jul 16 01:43:04 2012	(r25202)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <classpath>
-	<classpathentry kind="src" path="src"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
-	<classpathentry kind="output" path="bin"/>
+	<classpathentry kind="src" path="src/"/>
+	<classpathentry kind="output" path="target/classes"/>
 </classpath>

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.project
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.project	Mon Jul 16 01:41:33 2012	(r25201)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.project	Mon Jul 16 01:43:04 2012	(r25202)
@@ -20,8 +20,14 @@
 			<arguments>
 			</arguments>
 		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.m2e.core.maven2Builder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
 	</buildSpec>
 	<natures>
+		<nature>org.eclipse.m2e.core.maven2Nature</nature>
 		<nature>org.eclipse.jdt.core.javanature</nature>
 		<nature>org.eclipse.pde.PluginNature</nature>
 	</natures>

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.settings/org.eclipse.core.resources.prefs
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.settings/org.eclipse.core.resources.prefs	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,2 @@
+eclipse.preferences.version=1
+encoding/<project>=UTF-8

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.settings/org.eclipse.gmf.bridge.ui.dashboard.prefs
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.settings/org.eclipse.gmf.bridge.ui.dashboard.prefs	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,7 @@
+eclipse.preferences.version=1
+gmf_dashboard/domainGenerationModel=platform\:/resource/org.behaviorengineering.combe.graphical/model/ComBE.genmodel
+gmf_dashboard/domainModel=platform\:/resource/org.behaviorengineering.combe.graphical/model/ComBE.ecore
+gmf_dashboard/generationModel=platform\:/resource/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen
+gmf_dashboard/graphicalDefinitionModel=platform\:/resource/org.behaviorengineering.combe.graphical/model/ComBE.gmfgraph
+gmf_dashboard/mappingModel=platform\:/resource/org.behaviorengineering.combe.graphical/model/ComBE.gmfmap
+gmf_dashboard/toolingDefinitionModel=platform\:/resource/org.behaviorengineering.combe.graphical/model/ComBE.gmftool

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.settings/org.eclipse.jdt.core.prefs
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.settings/org.eclipse.jdt.core.prefs	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,7 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
+org.eclipse.jdt.core.compiler.compliance=1.6
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.6

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.settings/org.eclipse.m2e.core.prefs
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/.settings/org.eclipse.m2e.core.prefs	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,4 @@
+activeProfiles=
+eclipse.preferences.version=1
+resolveWorkspaceProjects=true
+version=1

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/AlternativeBranch.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/AlternativeBranch.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,44 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+import org.eclipse.emf.common.util.EList;
+
+/**
+ * <!-- begin-user-doc -->
+ * A representation of the model object '<em><b>Alternative Branch</b></em>'.
+ * <!-- end-user-doc -->
+ *
+ * <p>
+ * The following features are supported:
+ * <ul>
+ *   <li>{@link ComBE.AlternativeBranch#getChildren <em>Children</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @see ComBE.ComBEPackage#getAlternativeBranch()
+ * @model annotation="StrategoTerm.index 0='nodes' 1='children'"
+ * @generated
+ */
+public interface AlternativeBranch extends BehaviorTree {
+	/**
+	 * Returns the value of the '<em><b>Children</b></em>' containment reference list.
+	 * The list contents are of type {@link ComBE.BehaviorTree}.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Children</em>' containment reference list isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Children</em>' containment reference list.
+	 * @see ComBE.ComBEPackage#getAlternativeBranch_Children()
+	 * @model containment="true"
+	 * @generated
+	 */
+	EList<BehaviorTree> getChildren();
+
+} // AlternativeBranch

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/AtomicSequence.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/AtomicSequence.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,53 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+
+/**
+ * <!-- begin-user-doc -->
+ * A representation of the model object '<em><b>Atomic Sequence</b></em>'.
+ * <!-- end-user-doc -->
+ *
+ * <p>
+ * The following features are supported:
+ * <ul>
+ *   <li>{@link ComBE.AtomicSequence#getChild <em>Child</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @see ComBE.ComBEPackage#getAtomicSequence()
+ * @model annotation="StrategoTerm.index 0='nodes' 1='child'"
+ * @generated
+ */
+public interface AtomicSequence extends BehaviorTree {
+	/**
+	 * Returns the value of the '<em><b>Child</b></em>' containment reference.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Child</em>' containment reference isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Child</em>' containment reference.
+	 * @see #setChild(BehaviorTree)
+	 * @see ComBE.ComBEPackage#getAtomicSequence_Child()
+	 * @model containment="true"
+	 * @generated
+	 */
+	BehaviorTree getChild();
+
+	/**
+	 * Sets the value of the '{@link ComBE.AtomicSequence#getChild <em>Child</em>}' containment reference.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @param value the new value of the '<em>Child</em>' containment reference.
+	 * @see #getChild()
+	 * @generated
+	 */
+	void setChild(BehaviorTree value);
+
+} // AtomicSequence

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Behavior.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Behavior.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,81 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+import org.eclipse.emf.ecore.EObject;
+
+/**
+ * <!-- begin-user-doc -->
+ * A representation of the model object '<em><b>Behavior</b></em>'.
+ * <!-- end-user-doc -->
+ *
+ * <p>
+ * The following features are supported:
+ * <ul>
+ *   <li>{@link ComBE.Behavior#getInt <em>Int</em>}</li>
+ *   <li>{@link ComBE.Behavior#getLabel <em>Label</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @see ComBE.ComBEPackage#getBehavior()
+ * @model annotation="StrategoTerm.index 0='int' 1='label'"
+ * @generated
+ */
+public interface Behavior extends EObject {
+	/**
+	 * Returns the value of the '<em><b>Int</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Int</em>' attribute isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Int</em>' attribute.
+	 * @see #setInt(int)
+	 * @see ComBE.ComBEPackage#getBehavior_Int()
+	 * @model id="true" required="true"
+	 * @generated
+	 */
+	int getInt();
+
+	/**
+	 * Sets the value of the '{@link ComBE.Behavior#getInt <em>Int</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @param value the new value of the '<em>Int</em>' attribute.
+	 * @see #getInt()
+	 * @generated
+	 */
+	void setInt(int value);
+
+	/**
+	 * Returns the value of the '<em><b>Label</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Label</em>' attribute isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Label</em>' attribute.
+	 * @see #setLabel(String)
+	 * @see ComBE.ComBEPackage#getBehavior_Label()
+	 * @model required="true"
+	 * @generated
+	 */
+	String getLabel();
+
+	/**
+	 * Sets the value of the '{@link ComBE.Behavior#getLabel <em>Label</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @param value the new value of the '<em>Label</em>' attribute.
+	 * @see #getLabel()
+	 * @generated
+	 */
+	void setLabel(String value);
+
+} // Behavior

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/BehaviorSeq.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/BehaviorSeq.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,76 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+import org.eclipse.emf.common.util.EList;
+
+import org.eclipse.emf.ecore.EObject;
+
+/**
+ * <!-- begin-user-doc -->
+ * A representation of the model object '<em><b>Behavior Seq</b></em>'.
+ * <!-- end-user-doc -->
+ *
+ * <p>
+ * The following features are supported:
+ * <ul>
+ *   <li>{@link ComBE.BehaviorSeq#getBehaviortype <em>Behaviortype</em>}</li>
+ *   <li>{@link ComBE.BehaviorSeq#getBehavior <em>Behavior</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @see ComBE.ComBEPackage#getBehaviorSeq()
+ * @model annotation="StrategoTerm.index 0='behaviortype' 1='behavior'"
+ * @generated
+ */
+public interface BehaviorSeq extends EObject {
+	/**
+	 * Returns the value of the '<em><b>Behaviortype</b></em>' attribute.
+	 * The literals are from the enumeration {@link ComBE.BehaviorType}.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Behaviortype</em>' attribute isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Behaviortype</em>' attribute.
+	 * @see ComBE.BehaviorType
+	 * @see #setBehaviortype(BehaviorType)
+	 * @see ComBE.ComBEPackage#getBehaviorSeq_Behaviortype()
+	 * @model required="true"
+	 * @generated
+	 */
+	BehaviorType getBehaviortype();
+
+	/**
+	 * Sets the value of the '{@link ComBE.BehaviorSeq#getBehaviortype <em>Behaviortype</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @param value the new value of the '<em>Behaviortype</em>' attribute.
+	 * @see ComBE.BehaviorType
+	 * @see #getBehaviortype()
+	 * @generated
+	 */
+	void setBehaviortype(BehaviorType value);
+
+	/**
+	 * Returns the value of the '<em><b>Behavior</b></em>' containment reference list.
+	 * The list contents are of type {@link ComBE.Behavior}.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Behavior</em>' containment reference list isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Behavior</em>' containment reference list.
+	 * @see ComBE.ComBEPackage#getBehaviorSeq_Behavior()
+	 * @model containment="true"
+	 * @generated
+	 */
+	EList<Behavior> getBehavior();
+
+} // BehaviorSeq

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/BehaviorTree.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/BehaviorTree.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,46 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+import org.eclipse.emf.common.util.EList;
+
+import org.eclipse.emf.ecore.EObject;
+
+/**
+ * <!-- begin-user-doc -->
+ * A representation of the model object '<em><b>Behavior Tree</b></em>'.
+ * <!-- end-user-doc -->
+ *
+ * <p>
+ * The following features are supported:
+ * <ul>
+ *   <li>{@link ComBE.BehaviorTree#getNodes <em>Nodes</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @see ComBE.ComBEPackage#getBehaviorTree()
+ * @model abstract="true"
+ * @generated
+ */
+public interface BehaviorTree extends EObject {
+	/**
+	 * Returns the value of the '<em><b>Nodes</b></em>' containment reference list.
+	 * The list contents are of type {@link ComBE.Node}.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Nodes</em>' containment reference list isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Nodes</em>' containment reference list.
+	 * @see ComBE.ComBEPackage#getBehaviorTree_Nodes()
+	 * @model containment="true" required="true"
+	 * @generated
+	 */
+	EList<Node> getNodes();
+
+} // BehaviorTree

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/BehaviorType.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/BehaviorType.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,401 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.emf.common.util.Enumerator;
+
+/**
+ * <!-- begin-user-doc -->
+ * A representation of the literals of the enumeration '<em><b>Behavior Type</b></em>',
+ * and utility methods for working with them.
+ * <!-- end-user-doc -->
+ * @see ComBE.ComBEPackage#getBehaviorType()
+ * @model
+ * @generated
+ */
+public enum BehaviorType implements Enumerator {
+	/**
+	 * The '<em><b>State Realisation</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #STATE_REALISATION_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	STATE_REALISATION(0, "StateRealisation", "#S"),
+
+	/**
+	 * The '<em><b>Selection</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #SELECTION_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	SELECTION(1, "Selection", "#L"),
+
+	/**
+	 * The '<em><b>Event</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #EVENT_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	EVENT(2, "Event", "#E"),
+
+	/**
+	 * The '<em><b>Guard</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #GUARD_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	GUARD(3, "Guard", "#G"),
+
+	/**
+	 * The '<em><b>II Event</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #II_EVENT_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	II_EVENT(4, "IIEvent", "#II"),
+
+	/**
+	 * The '<em><b>IO Event</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #IO_EVENT_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	IO_EVENT(5, "IOEvent", "#IO"),
+
+	/**
+	 * The '<em><b>EI Event</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #EI_EVENT_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	EI_EVENT(6, "EIEvent", "#EI"),
+
+	/**
+	 * The '<em><b>EO Event</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #EO_EVENT_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	EO_EVENT(7, "EOEvent", "#EO"),
+
+	/**
+	 * The '<em><b>Assertion</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #ASSERTION_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	ASSERTION(8, "Assertion", "#A");
+
+	/**
+	 * The '<em><b>State Realisation</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>State Realisation</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #STATE_REALISATION
+	 * @model name="StateRealisation" literal="#S"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int STATE_REALISATION_VALUE = 0;
+
+	/**
+	 * The '<em><b>Selection</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>Selection</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #SELECTION
+	 * @model name="Selection" literal="#L"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int SELECTION_VALUE = 1;
+
+	/**
+	 * The '<em><b>Event</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>Event</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #EVENT
+	 * @model name="Event" literal="#E"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int EVENT_VALUE = 2;
+
+	/**
+	 * The '<em><b>Guard</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>Guard</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #GUARD
+	 * @model name="Guard" literal="#G"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int GUARD_VALUE = 3;
+
+	/**
+	 * The '<em><b>II Event</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>II Event</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #II_EVENT
+	 * @model name="IIEvent" literal="#II"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int II_EVENT_VALUE = 4;
+
+	/**
+	 * The '<em><b>IO Event</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>IO Event</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #IO_EVENT
+	 * @model name="IOEvent" literal="#IO"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int IO_EVENT_VALUE = 5;
+
+	/**
+	 * The '<em><b>EI Event</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>EI Event</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #EI_EVENT
+	 * @model name="EIEvent" literal="#EI"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int EI_EVENT_VALUE = 6;
+
+	/**
+	 * The '<em><b>EO Event</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>EO Event</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #EO_EVENT
+	 * @model name="EOEvent" literal="#EO"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int EO_EVENT_VALUE = 7;
+
+	/**
+	 * The '<em><b>Assertion</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>Assertion</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #ASSERTION
+	 * @model name="Assertion" literal="#A"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int ASSERTION_VALUE = 8;
+
+	/**
+	 * An array of all the '<em><b>Behavior Type</b></em>' enumerators.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private static final BehaviorType[] VALUES_ARRAY =
+		new BehaviorType[] {
+			STATE_REALISATION,
+			SELECTION,
+			EVENT,
+			GUARD,
+			II_EVENT,
+			IO_EVENT,
+			EI_EVENT,
+			EO_EVENT,
+			ASSERTION,
+		};
+
+	/**
+	 * A public read-only list of all the '<em><b>Behavior Type</b></em>' enumerators.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static final List<BehaviorType> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));
+
+	/**
+	 * Returns the '<em><b>Behavior Type</b></em>' literal with the specified literal value.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static BehaviorType get(String literal) {
+		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
+			BehaviorType result = VALUES_ARRAY[i];
+			if (result.toString().equals(literal)) {
+				return result;
+			}
+		}
+		return null;
+	}
+
+	/**
+	 * Returns the '<em><b>Behavior Type</b></em>' literal with the specified name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static BehaviorType getByName(String name) {
+		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
+			BehaviorType result = VALUES_ARRAY[i];
+			if (result.getName().equals(name)) {
+				return result;
+			}
+		}
+		return null;
+	}
+
+	/**
+	 * Returns the '<em><b>Behavior Type</b></em>' literal with the specified integer value.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static BehaviorType get(int value) {
+		switch (value) {
+			case STATE_REALISATION_VALUE: return STATE_REALISATION;
+			case SELECTION_VALUE: return SELECTION;
+			case EVENT_VALUE: return EVENT;
+			case GUARD_VALUE: return GUARD;
+			case II_EVENT_VALUE: return II_EVENT;
+			case IO_EVENT_VALUE: return IO_EVENT;
+			case EI_EVENT_VALUE: return EI_EVENT;
+			case EO_EVENT_VALUE: return EO_EVENT;
+			case ASSERTION_VALUE: return ASSERTION;
+		}
+		return null;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private final int value;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private final String name;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private final String literal;
+
+	/**
+	 * Only this class can construct instances.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private BehaviorType(int value, String name, String literal) {
+		this.value = value;
+		this.name = name;
+		this.literal = literal;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public int getValue() {
+	  return value;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public String getName() {
+	  return name;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public String getLiteral() {
+	  return literal;
+	}
+
+	/**
+	 * Returns the literal value of the enumerator, which is its string representation.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String toString() {
+		return literal;
+	}
+	
+} //BehaviorType

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/ComBEFactory.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/ComBEFactory.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,145 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+import org.eclipse.emf.ecore.EFactory;
+
+/**
+ * <!-- begin-user-doc -->
+ * The <b>Factory</b> for the model.
+ * It provides a create method for each non-abstract class of the model.
+ * <!-- end-user-doc -->
+ * @see ComBE.ComBEPackage
+ * @generated
+ */
+public interface ComBEFactory extends EFactory {
+	/**
+	 * The singleton instance of the factory.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	ComBEFactory eINSTANCE = ComBE.impl.ComBEFactoryImpl.init();
+
+	/**
+	 * Returns a new object of class '<em>Specification</em>'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return a new object of class '<em>Specification</em>'.
+	 * @generated
+	 */
+	Specification createSpecification();
+
+	/**
+	 * Returns a new object of class '<em>Requirement</em>'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return a new object of class '<em>Requirement</em>'.
+	 * @generated
+	 */
+	Requirement createRequirement();
+
+	/**
+	 * Returns a new object of class '<em>Behavior Seq</em>'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return a new object of class '<em>Behavior Seq</em>'.
+	 * @generated
+	 */
+	BehaviorSeq createBehaviorSeq();
+
+	/**
+	 * Returns a new object of class '<em>Behavior</em>'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return a new object of class '<em>Behavior</em>'.
+	 * @generated
+	 */
+	Behavior createBehavior();
+
+	/**
+	 * Returns a new object of class '<em>Root</em>'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return a new object of class '<em>Root</em>'.
+	 * @generated
+	 */
+	Root createRoot();
+
+	/**
+	 * Returns a new object of class '<em>Standard Component</em>'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return a new object of class '<em>Standard Component</em>'.
+	 * @generated
+	 */
+	StandardComponent createStandardComponent();
+
+	/**
+	 * Returns a new object of class '<em>System Component</em>'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return a new object of class '<em>System Component</em>'.
+	 * @generated
+	 */
+	SystemComponent createSystemComponent();
+
+	/**
+	 * Returns a new object of class '<em>Atomic Sequence</em>'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return a new object of class '<em>Atomic Sequence</em>'.
+	 * @generated
+	 */
+	AtomicSequence createAtomicSequence();
+
+	/**
+	 * Returns a new object of class '<em>Alternative Branch</em>'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return a new object of class '<em>Alternative Branch</em>'.
+	 * @generated
+	 */
+	AlternativeBranch createAlternativeBranch();
+
+	/**
+	 * Returns a new object of class '<em>Parallel Branch</em>'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return a new object of class '<em>Parallel Branch</em>'.
+	 * @generated
+	 */
+	ParallelBranch createParallelBranch();
+
+	/**
+	 * Returns a new object of class '<em>Standard Node</em>'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return a new object of class '<em>Standard Node</em>'.
+	 * @generated
+	 */
+	StandardNode createStandardNode();
+
+	/**
+	 * Returns a new object of class '<em>Empty Node</em>'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return a new object of class '<em>Empty Node</em>'.
+	 * @generated
+	 */
+	EmptyNode createEmptyNode();
+
+	/**
+	 * Returns the package supported by this factory.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the package supported by this factory.
+	 * @generated
+	 */
+	ComBEPackage getComBEPackage();
+
+} //ComBEFactory

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/ComBEPackage.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/ComBEPackage.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,1524 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+import org.eclipse.emf.ecore.EAttribute;
+import org.eclipse.emf.ecore.EClass;
+import org.eclipse.emf.ecore.EEnum;
+import org.eclipse.emf.ecore.EPackage;
+import org.eclipse.emf.ecore.EReference;
+
+/**
+ * <!-- begin-user-doc -->
+ * The <b>Package</b> for the model.
+ * It contains accessors for the meta objects to represent
+ * <ul>
+ *   <li>each class,</li>
+ *   <li>each feature of each class,</li>
+ *   <li>each enum,</li>
+ *   <li>and each data type</li>
+ * </ul>
+ * <!-- end-user-doc -->
+ * @see ComBE.ComBEFactory
+ * @model kind="package"
+ * @generated
+ */
+public interface ComBEPackage extends EPackage {
+	/**
+	 * The package name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	String eNAME = "ComBE";
+
+	/**
+	 * The package namespace URI.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	String eNS_URI = "ComBE";
+
+	/**
+	 * The package namespace name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	String eNS_PREFIX = "ComBE";
+
+	/**
+	 * The singleton instance of the package.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	ComBEPackage eINSTANCE = ComBE.impl.ComBEPackageImpl.init();
+
+	/**
+	 * The meta object id for the '{@link ComBE.impl.SpecificationImpl <em>Specification</em>}' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see ComBE.impl.SpecificationImpl
+	 * @see ComBE.impl.ComBEPackageImpl#getSpecification()
+	 * @generated
+	 */
+	int SPECIFICATION = 0;
+
+	/**
+	 * The feature id for the '<em><b>Requirements</b></em>' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int SPECIFICATION__REQUIREMENTS = 0;
+
+	/**
+	 * The feature id for the '<em><b>Components</b></em>' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int SPECIFICATION__COMPONENTS = 1;
+
+	/**
+	 * The feature id for the '<em><b>Root</b></em>' containment reference.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int SPECIFICATION__ROOT = 2;
+
+	/**
+	 * The number of structural features of the '<em>Specification</em>' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int SPECIFICATION_FEATURE_COUNT = 3;
+
+	/**
+	 * The meta object id for the '{@link ComBE.impl.RequirementImpl <em>Requirement</em>}' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see ComBE.impl.RequirementImpl
+	 * @see ComBE.impl.ComBEPackageImpl#getRequirement()
+	 * @generated
+	 */
+	int REQUIREMENT = 1;
+
+	/**
+	 * The feature id for the '<em><b>Id</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int REQUIREMENT__ID = 0;
+
+	/**
+	 * The feature id for the '<em><b>Label</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int REQUIREMENT__LABEL = 1;
+
+	/**
+	 * The number of structural features of the '<em>Requirement</em>' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int REQUIREMENT_FEATURE_COUNT = 2;
+
+	/**
+	 * The meta object id for the '{@link ComBE.impl.BehaviorSeqImpl <em>Behavior Seq</em>}' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see ComBE.impl.BehaviorSeqImpl
+	 * @see ComBE.impl.ComBEPackageImpl#getBehaviorSeq()
+	 * @generated
+	 */
+	int BEHAVIOR_SEQ = 2;
+
+	/**
+	 * The feature id for the '<em><b>Behaviortype</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int BEHAVIOR_SEQ__BEHAVIORTYPE = 0;
+
+	/**
+	 * The feature id for the '<em><b>Behavior</b></em>' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int BEHAVIOR_SEQ__BEHAVIOR = 1;
+
+	/**
+	 * The number of structural features of the '<em>Behavior Seq</em>' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int BEHAVIOR_SEQ_FEATURE_COUNT = 2;
+
+	/**
+	 * The meta object id for the '{@link ComBE.impl.BehaviorImpl <em>Behavior</em>}' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see ComBE.impl.BehaviorImpl
+	 * @see ComBE.impl.ComBEPackageImpl#getBehavior()
+	 * @generated
+	 */
+	int BEHAVIOR = 3;
+
+	/**
+	 * The feature id for the '<em><b>Int</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int BEHAVIOR__INT = 0;
+
+	/**
+	 * The feature id for the '<em><b>Label</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int BEHAVIOR__LABEL = 1;
+
+	/**
+	 * The number of structural features of the '<em>Behavior</em>' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int BEHAVIOR_FEATURE_COUNT = 2;
+
+	/**
+	 * The meta object id for the '{@link ComBE.impl.RootImpl <em>Root</em>}' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see ComBE.impl.RootImpl
+	 * @see ComBE.impl.ComBEPackageImpl#getRoot()
+	 * @generated
+	 */
+	int ROOT = 4;
+
+	/**
+	 * The feature id for the '<em><b>Behaviortree</b></em>' containment reference.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int ROOT__BEHAVIORTREE = 0;
+
+	/**
+	 * The number of structural features of the '<em>Root</em>' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int ROOT_FEATURE_COUNT = 1;
+
+	/**
+	 * The meta object id for the '{@link ComBE.impl.ComponentImpl <em>Component</em>}' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see ComBE.impl.ComponentImpl
+	 * @see ComBE.impl.ComBEPackageImpl#getComponent()
+	 * @generated
+	 */
+	int COMPONENT = 5;
+
+	/**
+	 * The feature id for the '<em><b>Id</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int COMPONENT__ID = 0;
+
+	/**
+	 * The feature id for the '<em><b>Label</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int COMPONENT__LABEL = 1;
+
+	/**
+	 * The feature id for the '<em><b>Behaviorseqs</b></em>' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int COMPONENT__BEHAVIORSEQS = 2;
+
+	/**
+	 * The number of structural features of the '<em>Component</em>' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int COMPONENT_FEATURE_COUNT = 3;
+
+	/**
+	 * The meta object id for the '{@link ComBE.impl.StandardComponentImpl <em>Standard Component</em>}' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see ComBE.impl.StandardComponentImpl
+	 * @see ComBE.impl.ComBEPackageImpl#getStandardComponent()
+	 * @generated
+	 */
+	int STANDARD_COMPONENT = 6;
+
+	/**
+	 * The feature id for the '<em><b>Id</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int STANDARD_COMPONENT__ID = COMPONENT__ID;
+
+	/**
+	 * The feature id for the '<em><b>Label</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int STANDARD_COMPONENT__LABEL = COMPONENT__LABEL;
+
+	/**
+	 * The feature id for the '<em><b>Behaviorseqs</b></em>' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int STANDARD_COMPONENT__BEHAVIORSEQS = COMPONENT__BEHAVIORSEQS;
+
+	/**
+	 * The number of structural features of the '<em>Standard Component</em>' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int STANDARD_COMPONENT_FEATURE_COUNT = COMPONENT_FEATURE_COUNT + 0;
+
+	/**
+	 * The meta object id for the '{@link ComBE.impl.SystemComponentImpl <em>System Component</em>}' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see ComBE.impl.SystemComponentImpl
+	 * @see ComBE.impl.ComBEPackageImpl#getSystemComponent()
+	 * @generated
+	 */
+	int SYSTEM_COMPONENT = 7;
+
+	/**
+	 * The feature id for the '<em><b>Id</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int SYSTEM_COMPONENT__ID = COMPONENT__ID;
+
+	/**
+	 * The feature id for the '<em><b>Label</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int SYSTEM_COMPONENT__LABEL = COMPONENT__LABEL;
+
+	/**
+	 * The feature id for the '<em><b>Behaviorseqs</b></em>' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int SYSTEM_COMPONENT__BEHAVIORSEQS = COMPONENT__BEHAVIORSEQS;
+
+	/**
+	 * The number of structural features of the '<em>System Component</em>' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int SYSTEM_COMPONENT_FEATURE_COUNT = COMPONENT_FEATURE_COUNT + 0;
+
+	/**
+	 * The meta object id for the '{@link ComBE.impl.BehaviorTreeImpl <em>Behavior Tree</em>}' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see ComBE.impl.BehaviorTreeImpl
+	 * @see ComBE.impl.ComBEPackageImpl#getBehaviorTree()
+	 * @generated
+	 */
+	int BEHAVIOR_TREE = 8;
+
+	/**
+	 * The feature id for the '<em><b>Nodes</b></em>' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int BEHAVIOR_TREE__NODES = 0;
+
+	/**
+	 * The number of structural features of the '<em>Behavior Tree</em>' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int BEHAVIOR_TREE_FEATURE_COUNT = 1;
+
+	/**
+	 * The meta object id for the '{@link ComBE.impl.AtomicSequenceImpl <em>Atomic Sequence</em>}' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see ComBE.impl.AtomicSequenceImpl
+	 * @see ComBE.impl.ComBEPackageImpl#getAtomicSequence()
+	 * @generated
+	 */
+	int ATOMIC_SEQUENCE = 9;
+
+	/**
+	 * The feature id for the '<em><b>Nodes</b></em>' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int ATOMIC_SEQUENCE__NODES = BEHAVIOR_TREE__NODES;
+
+	/**
+	 * The feature id for the '<em><b>Child</b></em>' containment reference.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int ATOMIC_SEQUENCE__CHILD = BEHAVIOR_TREE_FEATURE_COUNT + 0;
+
+	/**
+	 * The number of structural features of the '<em>Atomic Sequence</em>' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int ATOMIC_SEQUENCE_FEATURE_COUNT = BEHAVIOR_TREE_FEATURE_COUNT + 1;
+
+	/**
+	 * The meta object id for the '{@link ComBE.impl.AlternativeBranchImpl <em>Alternative Branch</em>}' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see ComBE.impl.AlternativeBranchImpl
+	 * @see ComBE.impl.ComBEPackageImpl#getAlternativeBranch()
+	 * @generated
+	 */
+	int ALTERNATIVE_BRANCH = 10;
+
+	/**
+	 * The feature id for the '<em><b>Nodes</b></em>' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int ALTERNATIVE_BRANCH__NODES = BEHAVIOR_TREE__NODES;
+
+	/**
+	 * The feature id for the '<em><b>Children</b></em>' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int ALTERNATIVE_BRANCH__CHILDREN = BEHAVIOR_TREE_FEATURE_COUNT + 0;
+
+	/**
+	 * The number of structural features of the '<em>Alternative Branch</em>' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int ALTERNATIVE_BRANCH_FEATURE_COUNT = BEHAVIOR_TREE_FEATURE_COUNT + 1;
+
+	/**
+	 * The meta object id for the '{@link ComBE.impl.ParallelBranchImpl <em>Parallel Branch</em>}' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see ComBE.impl.ParallelBranchImpl
+	 * @see ComBE.impl.ComBEPackageImpl#getParallelBranch()
+	 * @generated
+	 */
+	int PARALLEL_BRANCH = 11;
+
+	/**
+	 * The feature id for the '<em><b>Nodes</b></em>' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int PARALLEL_BRANCH__NODES = BEHAVIOR_TREE__NODES;
+
+	/**
+	 * The feature id for the '<em><b>Children</b></em>' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int PARALLEL_BRANCH__CHILDREN = BEHAVIOR_TREE_FEATURE_COUNT + 0;
+
+	/**
+	 * The number of structural features of the '<em>Parallel Branch</em>' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int PARALLEL_BRANCH_FEATURE_COUNT = BEHAVIOR_TREE_FEATURE_COUNT + 1;
+
+	/**
+	 * The meta object id for the '{@link ComBE.impl.NodeImpl <em>Node</em>}' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see ComBE.impl.NodeImpl
+	 * @see ComBE.impl.ComBEPackageImpl#getNode()
+	 * @generated
+	 */
+	int NODE = 12;
+
+	/**
+	 * The feature id for the '<em><b>Label</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int NODE__LABEL = 0;
+
+	/**
+	 * The feature id for the '<em><b>Operator</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int NODE__OPERATOR = 1;
+
+	/**
+	 * The number of structural features of the '<em>Node</em>' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int NODE_FEATURE_COUNT = 2;
+
+	/**
+	 * The meta object id for the '{@link ComBE.impl.StandardNodeImpl <em>Standard Node</em>}' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see ComBE.impl.StandardNodeImpl
+	 * @see ComBE.impl.ComBEPackageImpl#getStandardNode()
+	 * @generated
+	 */
+	int STANDARD_NODE = 13;
+
+	/**
+	 * The feature id for the '<em><b>Label</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int STANDARD_NODE__LABEL = NODE__LABEL;
+
+	/**
+	 * The feature id for the '<em><b>Operator</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int STANDARD_NODE__OPERATOR = NODE__OPERATOR;
+
+	/**
+	 * The feature id for the '<em><b>Requirement</b></em>' reference.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int STANDARD_NODE__REQUIREMENT = NODE_FEATURE_COUNT + 0;
+
+	/**
+	 * The feature id for the '<em><b>Tracibilitystatus</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int STANDARD_NODE__TRACIBILITYSTATUS = NODE_FEATURE_COUNT + 1;
+
+	/**
+	 * The feature id for the '<em><b>Component</b></em>' reference.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int STANDARD_NODE__COMPONENT = NODE_FEATURE_COUNT + 2;
+
+	/**
+	 * The feature id for the '<em><b>Behavior</b></em>' reference.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int STANDARD_NODE__BEHAVIOR = NODE_FEATURE_COUNT + 3;
+
+	/**
+	 * The number of structural features of the '<em>Standard Node</em>' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int STANDARD_NODE_FEATURE_COUNT = NODE_FEATURE_COUNT + 4;
+
+	/**
+	 * The meta object id for the '{@link ComBE.impl.EmptyNodeImpl <em>Empty Node</em>}' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see ComBE.impl.EmptyNodeImpl
+	 * @see ComBE.impl.ComBEPackageImpl#getEmptyNode()
+	 * @generated
+	 */
+	int EMPTY_NODE = 14;
+
+	/**
+	 * The feature id for the '<em><b>Label</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int EMPTY_NODE__LABEL = NODE__LABEL;
+
+	/**
+	 * The feature id for the '<em><b>Operator</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int EMPTY_NODE__OPERATOR = NODE__OPERATOR;
+
+	/**
+	 * The number of structural features of the '<em>Empty Node</em>' class.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 * @ordered
+	 */
+	int EMPTY_NODE_FEATURE_COUNT = NODE_FEATURE_COUNT + 0;
+
+	/**
+	 * The meta object id for the '{@link ComBE.BehaviorType <em>Behavior Type</em>}' enum.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see ComBE.BehaviorType
+	 * @see ComBE.impl.ComBEPackageImpl#getBehaviorType()
+	 * @generated
+	 */
+	int BEHAVIOR_TYPE = 15;
+
+	/**
+	 * The meta object id for the '{@link ComBE.TracibilityStatus <em>Tracibility Status</em>}' enum.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see ComBE.TracibilityStatus
+	 * @see ComBE.impl.ComBEPackageImpl#getTracibilityStatus()
+	 * @generated
+	 */
+	int TRACIBILITY_STATUS = 16;
+
+	/**
+	 * The meta object id for the '{@link ComBE.Operator <em>Operator</em>}' enum.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see ComBE.Operator
+	 * @see ComBE.impl.ComBEPackageImpl#getOperator()
+	 * @generated
+	 */
+	int OPERATOR = 17;
+
+
+	/**
+	 * Returns the meta object for class '{@link ComBE.Specification <em>Specification</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for class '<em>Specification</em>'.
+	 * @see ComBE.Specification
+	 * @generated
+	 */
+	EClass getSpecification();
+
+	/**
+	 * Returns the meta object for the containment reference list '{@link ComBE.Specification#getRequirements <em>Requirements</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the containment reference list '<em>Requirements</em>'.
+	 * @see ComBE.Specification#getRequirements()
+	 * @see #getSpecification()
+	 * @generated
+	 */
+	EReference getSpecification_Requirements();
+
+	/**
+	 * Returns the meta object for the containment reference list '{@link ComBE.Specification#getComponents <em>Components</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the containment reference list '<em>Components</em>'.
+	 * @see ComBE.Specification#getComponents()
+	 * @see #getSpecification()
+	 * @generated
+	 */
+	EReference getSpecification_Components();
+
+	/**
+	 * Returns the meta object for the containment reference '{@link ComBE.Specification#getRoot <em>Root</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the containment reference '<em>Root</em>'.
+	 * @see ComBE.Specification#getRoot()
+	 * @see #getSpecification()
+	 * @generated
+	 */
+	EReference getSpecification_Root();
+
+	/**
+	 * Returns the meta object for class '{@link ComBE.Requirement <em>Requirement</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for class '<em>Requirement</em>'.
+	 * @see ComBE.Requirement
+	 * @generated
+	 */
+	EClass getRequirement();
+
+	/**
+	 * Returns the meta object for the attribute '{@link ComBE.Requirement#getId <em>Id</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the attribute '<em>Id</em>'.
+	 * @see ComBE.Requirement#getId()
+	 * @see #getRequirement()
+	 * @generated
+	 */
+	EAttribute getRequirement_Id();
+
+	/**
+	 * Returns the meta object for the attribute '{@link ComBE.Requirement#getLabel <em>Label</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the attribute '<em>Label</em>'.
+	 * @see ComBE.Requirement#getLabel()
+	 * @see #getRequirement()
+	 * @generated
+	 */
+	EAttribute getRequirement_Label();
+
+	/**
+	 * Returns the meta object for class '{@link ComBE.BehaviorSeq <em>Behavior Seq</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for class '<em>Behavior Seq</em>'.
+	 * @see ComBE.BehaviorSeq
+	 * @generated
+	 */
+	EClass getBehaviorSeq();
+
+	/**
+	 * Returns the meta object for the attribute '{@link ComBE.BehaviorSeq#getBehaviortype <em>Behaviortype</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the attribute '<em>Behaviortype</em>'.
+	 * @see ComBE.BehaviorSeq#getBehaviortype()
+	 * @see #getBehaviorSeq()
+	 * @generated
+	 */
+	EAttribute getBehaviorSeq_Behaviortype();
+
+	/**
+	 * Returns the meta object for the containment reference list '{@link ComBE.BehaviorSeq#getBehavior <em>Behavior</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the containment reference list '<em>Behavior</em>'.
+	 * @see ComBE.BehaviorSeq#getBehavior()
+	 * @see #getBehaviorSeq()
+	 * @generated
+	 */
+	EReference getBehaviorSeq_Behavior();
+
+	/**
+	 * Returns the meta object for class '{@link ComBE.Behavior <em>Behavior</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for class '<em>Behavior</em>'.
+	 * @see ComBE.Behavior
+	 * @generated
+	 */
+	EClass getBehavior();
+
+	/**
+	 * Returns the meta object for the attribute '{@link ComBE.Behavior#getInt <em>Int</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the attribute '<em>Int</em>'.
+	 * @see ComBE.Behavior#getInt()
+	 * @see #getBehavior()
+	 * @generated
+	 */
+	EAttribute getBehavior_Int();
+
+	/**
+	 * Returns the meta object for the attribute '{@link ComBE.Behavior#getLabel <em>Label</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the attribute '<em>Label</em>'.
+	 * @see ComBE.Behavior#getLabel()
+	 * @see #getBehavior()
+	 * @generated
+	 */
+	EAttribute getBehavior_Label();
+
+	/**
+	 * Returns the meta object for class '{@link ComBE.Root <em>Root</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for class '<em>Root</em>'.
+	 * @see ComBE.Root
+	 * @generated
+	 */
+	EClass getRoot();
+
+	/**
+	 * Returns the meta object for the containment reference '{@link ComBE.Root#getBehaviortree <em>Behaviortree</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the containment reference '<em>Behaviortree</em>'.
+	 * @see ComBE.Root#getBehaviortree()
+	 * @see #getRoot()
+	 * @generated
+	 */
+	EReference getRoot_Behaviortree();
+
+	/**
+	 * Returns the meta object for class '{@link ComBE.Component <em>Component</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for class '<em>Component</em>'.
+	 * @see ComBE.Component
+	 * @generated
+	 */
+	EClass getComponent();
+
+	/**
+	 * Returns the meta object for the attribute '{@link ComBE.Component#getId <em>Id</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the attribute '<em>Id</em>'.
+	 * @see ComBE.Component#getId()
+	 * @see #getComponent()
+	 * @generated
+	 */
+	EAttribute getComponent_Id();
+
+	/**
+	 * Returns the meta object for the attribute '{@link ComBE.Component#getLabel <em>Label</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the attribute '<em>Label</em>'.
+	 * @see ComBE.Component#getLabel()
+	 * @see #getComponent()
+	 * @generated
+	 */
+	EAttribute getComponent_Label();
+
+	/**
+	 * Returns the meta object for the containment reference list '{@link ComBE.Component#getBehaviorseqs <em>Behaviorseqs</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the containment reference list '<em>Behaviorseqs</em>'.
+	 * @see ComBE.Component#getBehaviorseqs()
+	 * @see #getComponent()
+	 * @generated
+	 */
+	EReference getComponent_Behaviorseqs();
+
+	/**
+	 * Returns the meta object for class '{@link ComBE.StandardComponent <em>Standard Component</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for class '<em>Standard Component</em>'.
+	 * @see ComBE.StandardComponent
+	 * @generated
+	 */
+	EClass getStandardComponent();
+
+	/**
+	 * Returns the meta object for class '{@link ComBE.SystemComponent <em>System Component</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for class '<em>System Component</em>'.
+	 * @see ComBE.SystemComponent
+	 * @generated
+	 */
+	EClass getSystemComponent();
+
+	/**
+	 * Returns the meta object for class '{@link ComBE.BehaviorTree <em>Behavior Tree</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for class '<em>Behavior Tree</em>'.
+	 * @see ComBE.BehaviorTree
+	 * @generated
+	 */
+	EClass getBehaviorTree();
+
+	/**
+	 * Returns the meta object for the containment reference list '{@link ComBE.BehaviorTree#getNodes <em>Nodes</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the containment reference list '<em>Nodes</em>'.
+	 * @see ComBE.BehaviorTree#getNodes()
+	 * @see #getBehaviorTree()
+	 * @generated
+	 */
+	EReference getBehaviorTree_Nodes();
+
+	/**
+	 * Returns the meta object for class '{@link ComBE.AtomicSequence <em>Atomic Sequence</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for class '<em>Atomic Sequence</em>'.
+	 * @see ComBE.AtomicSequence
+	 * @generated
+	 */
+	EClass getAtomicSequence();
+
+	/**
+	 * Returns the meta object for the containment reference '{@link ComBE.AtomicSequence#getChild <em>Child</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the containment reference '<em>Child</em>'.
+	 * @see ComBE.AtomicSequence#getChild()
+	 * @see #getAtomicSequence()
+	 * @generated
+	 */
+	EReference getAtomicSequence_Child();
+
+	/**
+	 * Returns the meta object for class '{@link ComBE.AlternativeBranch <em>Alternative Branch</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for class '<em>Alternative Branch</em>'.
+	 * @see ComBE.AlternativeBranch
+	 * @generated
+	 */
+	EClass getAlternativeBranch();
+
+	/**
+	 * Returns the meta object for the containment reference list '{@link ComBE.AlternativeBranch#getChildren <em>Children</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the containment reference list '<em>Children</em>'.
+	 * @see ComBE.AlternativeBranch#getChildren()
+	 * @see #getAlternativeBranch()
+	 * @generated
+	 */
+	EReference getAlternativeBranch_Children();
+
+	/**
+	 * Returns the meta object for class '{@link ComBE.ParallelBranch <em>Parallel Branch</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for class '<em>Parallel Branch</em>'.
+	 * @see ComBE.ParallelBranch
+	 * @generated
+	 */
+	EClass getParallelBranch();
+
+	/**
+	 * Returns the meta object for the containment reference list '{@link ComBE.ParallelBranch#getChildren <em>Children</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the containment reference list '<em>Children</em>'.
+	 * @see ComBE.ParallelBranch#getChildren()
+	 * @see #getParallelBranch()
+	 * @generated
+	 */
+	EReference getParallelBranch_Children();
+
+	/**
+	 * Returns the meta object for class '{@link ComBE.Node <em>Node</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for class '<em>Node</em>'.
+	 * @see ComBE.Node
+	 * @generated
+	 */
+	EClass getNode();
+
+	/**
+	 * Returns the meta object for the attribute '{@link ComBE.Node#getLabel <em>Label</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the attribute '<em>Label</em>'.
+	 * @see ComBE.Node#getLabel()
+	 * @see #getNode()
+	 * @generated
+	 */
+	EAttribute getNode_Label();
+
+	/**
+	 * Returns the meta object for the attribute '{@link ComBE.Node#getOperator <em>Operator</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the attribute '<em>Operator</em>'.
+	 * @see ComBE.Node#getOperator()
+	 * @see #getNode()
+	 * @generated
+	 */
+	EAttribute getNode_Operator();
+
+	/**
+	 * Returns the meta object for class '{@link ComBE.StandardNode <em>Standard Node</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for class '<em>Standard Node</em>'.
+	 * @see ComBE.StandardNode
+	 * @generated
+	 */
+	EClass getStandardNode();
+
+	/**
+	 * Returns the meta object for the reference '{@link ComBE.StandardNode#getRequirement <em>Requirement</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the reference '<em>Requirement</em>'.
+	 * @see ComBE.StandardNode#getRequirement()
+	 * @see #getStandardNode()
+	 * @generated
+	 */
+	EReference getStandardNode_Requirement();
+
+	/**
+	 * Returns the meta object for the attribute '{@link ComBE.StandardNode#getTracibilitystatus <em>Tracibilitystatus</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the attribute '<em>Tracibilitystatus</em>'.
+	 * @see ComBE.StandardNode#getTracibilitystatus()
+	 * @see #getStandardNode()
+	 * @generated
+	 */
+	EAttribute getStandardNode_Tracibilitystatus();
+
+	/**
+	 * Returns the meta object for the reference '{@link ComBE.StandardNode#getComponent <em>Component</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the reference '<em>Component</em>'.
+	 * @see ComBE.StandardNode#getComponent()
+	 * @see #getStandardNode()
+	 * @generated
+	 */
+	EReference getStandardNode_Component();
+
+	/**
+	 * Returns the meta object for the reference '{@link ComBE.StandardNode#getBehavior <em>Behavior</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for the reference '<em>Behavior</em>'.
+	 * @see ComBE.StandardNode#getBehavior()
+	 * @see #getStandardNode()
+	 * @generated
+	 */
+	EReference getStandardNode_Behavior();
+
+	/**
+	 * Returns the meta object for class '{@link ComBE.EmptyNode <em>Empty Node</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for class '<em>Empty Node</em>'.
+	 * @see ComBE.EmptyNode
+	 * @generated
+	 */
+	EClass getEmptyNode();
+
+	/**
+	 * Returns the meta object for enum '{@link ComBE.BehaviorType <em>Behavior Type</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for enum '<em>Behavior Type</em>'.
+	 * @see ComBE.BehaviorType
+	 * @generated
+	 */
+	EEnum getBehaviorType();
+
+	/**
+	 * Returns the meta object for enum '{@link ComBE.TracibilityStatus <em>Tracibility Status</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for enum '<em>Tracibility Status</em>'.
+	 * @see ComBE.TracibilityStatus
+	 * @generated
+	 */
+	EEnum getTracibilityStatus();
+
+	/**
+	 * Returns the meta object for enum '{@link ComBE.Operator <em>Operator</em>}'.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the meta object for enum '<em>Operator</em>'.
+	 * @see ComBE.Operator
+	 * @generated
+	 */
+	EEnum getOperator();
+
+	/**
+	 * Returns the factory that creates the instances of the model.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the factory that creates the instances of the model.
+	 * @generated
+	 */
+	ComBEFactory getComBEFactory();
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * Defines literals for the meta objects that represent
+	 * <ul>
+	 *   <li>each class,</li>
+	 *   <li>each feature of each class,</li>
+	 *   <li>each enum,</li>
+	 *   <li>and each data type</li>
+	 * </ul>
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	interface Literals {
+		/**
+		 * The meta object literal for the '{@link ComBE.impl.SpecificationImpl <em>Specification</em>}' class.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @see ComBE.impl.SpecificationImpl
+		 * @see ComBE.impl.ComBEPackageImpl#getSpecification()
+		 * @generated
+		 */
+		EClass SPECIFICATION = eINSTANCE.getSpecification();
+
+		/**
+		 * The meta object literal for the '<em><b>Requirements</b></em>' containment reference list feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EReference SPECIFICATION__REQUIREMENTS = eINSTANCE.getSpecification_Requirements();
+
+		/**
+		 * The meta object literal for the '<em><b>Components</b></em>' containment reference list feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EReference SPECIFICATION__COMPONENTS = eINSTANCE.getSpecification_Components();
+
+		/**
+		 * The meta object literal for the '<em><b>Root</b></em>' containment reference feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EReference SPECIFICATION__ROOT = eINSTANCE.getSpecification_Root();
+
+		/**
+		 * The meta object literal for the '{@link ComBE.impl.RequirementImpl <em>Requirement</em>}' class.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @see ComBE.impl.RequirementImpl
+		 * @see ComBE.impl.ComBEPackageImpl#getRequirement()
+		 * @generated
+		 */
+		EClass REQUIREMENT = eINSTANCE.getRequirement();
+
+		/**
+		 * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EAttribute REQUIREMENT__ID = eINSTANCE.getRequirement_Id();
+
+		/**
+		 * The meta object literal for the '<em><b>Label</b></em>' attribute feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EAttribute REQUIREMENT__LABEL = eINSTANCE.getRequirement_Label();
+
+		/**
+		 * The meta object literal for the '{@link ComBE.impl.BehaviorSeqImpl <em>Behavior Seq</em>}' class.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @see ComBE.impl.BehaviorSeqImpl
+		 * @see ComBE.impl.ComBEPackageImpl#getBehaviorSeq()
+		 * @generated
+		 */
+		EClass BEHAVIOR_SEQ = eINSTANCE.getBehaviorSeq();
+
+		/**
+		 * The meta object literal for the '<em><b>Behaviortype</b></em>' attribute feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EAttribute BEHAVIOR_SEQ__BEHAVIORTYPE = eINSTANCE.getBehaviorSeq_Behaviortype();
+
+		/**
+		 * The meta object literal for the '<em><b>Behavior</b></em>' containment reference list feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EReference BEHAVIOR_SEQ__BEHAVIOR = eINSTANCE.getBehaviorSeq_Behavior();
+
+		/**
+		 * The meta object literal for the '{@link ComBE.impl.BehaviorImpl <em>Behavior</em>}' class.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @see ComBE.impl.BehaviorImpl
+		 * @see ComBE.impl.ComBEPackageImpl#getBehavior()
+		 * @generated
+		 */
+		EClass BEHAVIOR = eINSTANCE.getBehavior();
+
+		/**
+		 * The meta object literal for the '<em><b>Int</b></em>' attribute feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EAttribute BEHAVIOR__INT = eINSTANCE.getBehavior_Int();
+
+		/**
+		 * The meta object literal for the '<em><b>Label</b></em>' attribute feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EAttribute BEHAVIOR__LABEL = eINSTANCE.getBehavior_Label();
+
+		/**
+		 * The meta object literal for the '{@link ComBE.impl.RootImpl <em>Root</em>}' class.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @see ComBE.impl.RootImpl
+		 * @see ComBE.impl.ComBEPackageImpl#getRoot()
+		 * @generated
+		 */
+		EClass ROOT = eINSTANCE.getRoot();
+
+		/**
+		 * The meta object literal for the '<em><b>Behaviortree</b></em>' containment reference feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EReference ROOT__BEHAVIORTREE = eINSTANCE.getRoot_Behaviortree();
+
+		/**
+		 * The meta object literal for the '{@link ComBE.impl.ComponentImpl <em>Component</em>}' class.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @see ComBE.impl.ComponentImpl
+		 * @see ComBE.impl.ComBEPackageImpl#getComponent()
+		 * @generated
+		 */
+		EClass COMPONENT = eINSTANCE.getComponent();
+
+		/**
+		 * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EAttribute COMPONENT__ID = eINSTANCE.getComponent_Id();
+
+		/**
+		 * The meta object literal for the '<em><b>Label</b></em>' attribute feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EAttribute COMPONENT__LABEL = eINSTANCE.getComponent_Label();
+
+		/**
+		 * The meta object literal for the '<em><b>Behaviorseqs</b></em>' containment reference list feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EReference COMPONENT__BEHAVIORSEQS = eINSTANCE.getComponent_Behaviorseqs();
+
+		/**
+		 * The meta object literal for the '{@link ComBE.impl.StandardComponentImpl <em>Standard Component</em>}' class.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @see ComBE.impl.StandardComponentImpl
+		 * @see ComBE.impl.ComBEPackageImpl#getStandardComponent()
+		 * @generated
+		 */
+		EClass STANDARD_COMPONENT = eINSTANCE.getStandardComponent();
+
+		/**
+		 * The meta object literal for the '{@link ComBE.impl.SystemComponentImpl <em>System Component</em>}' class.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @see ComBE.impl.SystemComponentImpl
+		 * @see ComBE.impl.ComBEPackageImpl#getSystemComponent()
+		 * @generated
+		 */
+		EClass SYSTEM_COMPONENT = eINSTANCE.getSystemComponent();
+
+		/**
+		 * The meta object literal for the '{@link ComBE.impl.BehaviorTreeImpl <em>Behavior Tree</em>}' class.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @see ComBE.impl.BehaviorTreeImpl
+		 * @see ComBE.impl.ComBEPackageImpl#getBehaviorTree()
+		 * @generated
+		 */
+		EClass BEHAVIOR_TREE = eINSTANCE.getBehaviorTree();
+
+		/**
+		 * The meta object literal for the '<em><b>Nodes</b></em>' containment reference list feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EReference BEHAVIOR_TREE__NODES = eINSTANCE.getBehaviorTree_Nodes();
+
+		/**
+		 * The meta object literal for the '{@link ComBE.impl.AtomicSequenceImpl <em>Atomic Sequence</em>}' class.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @see ComBE.impl.AtomicSequenceImpl
+		 * @see ComBE.impl.ComBEPackageImpl#getAtomicSequence()
+		 * @generated
+		 */
+		EClass ATOMIC_SEQUENCE = eINSTANCE.getAtomicSequence();
+
+		/**
+		 * The meta object literal for the '<em><b>Child</b></em>' containment reference feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EReference ATOMIC_SEQUENCE__CHILD = eINSTANCE.getAtomicSequence_Child();
+
+		/**
+		 * The meta object literal for the '{@link ComBE.impl.AlternativeBranchImpl <em>Alternative Branch</em>}' class.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @see ComBE.impl.AlternativeBranchImpl
+		 * @see ComBE.impl.ComBEPackageImpl#getAlternativeBranch()
+		 * @generated
+		 */
+		EClass ALTERNATIVE_BRANCH = eINSTANCE.getAlternativeBranch();
+
+		/**
+		 * The meta object literal for the '<em><b>Children</b></em>' containment reference list feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EReference ALTERNATIVE_BRANCH__CHILDREN = eINSTANCE.getAlternativeBranch_Children();
+
+		/**
+		 * The meta object literal for the '{@link ComBE.impl.ParallelBranchImpl <em>Parallel Branch</em>}' class.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @see ComBE.impl.ParallelBranchImpl
+		 * @see ComBE.impl.ComBEPackageImpl#getParallelBranch()
+		 * @generated
+		 */
+		EClass PARALLEL_BRANCH = eINSTANCE.getParallelBranch();
+
+		/**
+		 * The meta object literal for the '<em><b>Children</b></em>' containment reference list feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EReference PARALLEL_BRANCH__CHILDREN = eINSTANCE.getParallelBranch_Children();
+
+		/**
+		 * The meta object literal for the '{@link ComBE.impl.NodeImpl <em>Node</em>}' class.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @see ComBE.impl.NodeImpl
+		 * @see ComBE.impl.ComBEPackageImpl#getNode()
+		 * @generated
+		 */
+		EClass NODE = eINSTANCE.getNode();
+
+		/**
+		 * The meta object literal for the '<em><b>Label</b></em>' attribute feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EAttribute NODE__LABEL = eINSTANCE.getNode_Label();
+
+		/**
+		 * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EAttribute NODE__OPERATOR = eINSTANCE.getNode_Operator();
+
+		/**
+		 * The meta object literal for the '{@link ComBE.impl.StandardNodeImpl <em>Standard Node</em>}' class.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @see ComBE.impl.StandardNodeImpl
+		 * @see ComBE.impl.ComBEPackageImpl#getStandardNode()
+		 * @generated
+		 */
+		EClass STANDARD_NODE = eINSTANCE.getStandardNode();
+
+		/**
+		 * The meta object literal for the '<em><b>Requirement</b></em>' reference feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EReference STANDARD_NODE__REQUIREMENT = eINSTANCE.getStandardNode_Requirement();
+
+		/**
+		 * The meta object literal for the '<em><b>Tracibilitystatus</b></em>' attribute feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EAttribute STANDARD_NODE__TRACIBILITYSTATUS = eINSTANCE.getStandardNode_Tracibilitystatus();
+
+		/**
+		 * The meta object literal for the '<em><b>Component</b></em>' reference feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EReference STANDARD_NODE__COMPONENT = eINSTANCE.getStandardNode_Component();
+
+		/**
+		 * The meta object literal for the '<em><b>Behavior</b></em>' reference feature.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		EReference STANDARD_NODE__BEHAVIOR = eINSTANCE.getStandardNode_Behavior();
+
+		/**
+		 * The meta object literal for the '{@link ComBE.impl.EmptyNodeImpl <em>Empty Node</em>}' class.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @see ComBE.impl.EmptyNodeImpl
+		 * @see ComBE.impl.ComBEPackageImpl#getEmptyNode()
+		 * @generated
+		 */
+		EClass EMPTY_NODE = eINSTANCE.getEmptyNode();
+
+		/**
+		 * The meta object literal for the '{@link ComBE.BehaviorType <em>Behavior Type</em>}' enum.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @see ComBE.BehaviorType
+		 * @see ComBE.impl.ComBEPackageImpl#getBehaviorType()
+		 * @generated
+		 */
+		EEnum BEHAVIOR_TYPE = eINSTANCE.getBehaviorType();
+
+		/**
+		 * The meta object literal for the '{@link ComBE.TracibilityStatus <em>Tracibility Status</em>}' enum.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @see ComBE.TracibilityStatus
+		 * @see ComBE.impl.ComBEPackageImpl#getTracibilityStatus()
+		 * @generated
+		 */
+		EEnum TRACIBILITY_STATUS = eINSTANCE.getTracibilityStatus();
+
+		/**
+		 * The meta object literal for the '{@link ComBE.Operator <em>Operator</em>}' enum.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @see ComBE.Operator
+		 * @see ComBE.impl.ComBEPackageImpl#getOperator()
+		 * @generated
+		 */
+		EEnum OPERATOR = eINSTANCE.getOperator();
+
+	}
+
+} //ComBEPackage

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Component.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Component.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,100 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+import org.eclipse.emf.common.util.EList;
+
+import org.eclipse.emf.ecore.EObject;
+
+/**
+ * <!-- begin-user-doc -->
+ * A representation of the model object '<em><b>Component</b></em>'.
+ * <!-- end-user-doc -->
+ *
+ * <p>
+ * The following features are supported:
+ * <ul>
+ *   <li>{@link ComBE.Component#getId <em>Id</em>}</li>
+ *   <li>{@link ComBE.Component#getLabel <em>Label</em>}</li>
+ *   <li>{@link ComBE.Component#getBehaviorseqs <em>Behaviorseqs</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @see ComBE.ComBEPackage#getComponent()
+ * @model abstract="true"
+ * @generated
+ */
+public interface Component extends EObject {
+	/**
+	 * Returns the value of the '<em><b>Id</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Id</em>' attribute isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Id</em>' attribute.
+	 * @see #setId(String)
+	 * @see ComBE.ComBEPackage#getComponent_Id()
+	 * @model id="true" required="true"
+	 * @generated
+	 */
+	String getId();
+
+	/**
+	 * Sets the value of the '{@link ComBE.Component#getId <em>Id</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @param value the new value of the '<em>Id</em>' attribute.
+	 * @see #getId()
+	 * @generated
+	 */
+	void setId(String value);
+
+	/**
+	 * Returns the value of the '<em><b>Label</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Label</em>' attribute isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Label</em>' attribute.
+	 * @see #setLabel(String)
+	 * @see ComBE.ComBEPackage#getComponent_Label()
+	 * @model required="true"
+	 * @generated
+	 */
+	String getLabel();
+
+	/**
+	 * Sets the value of the '{@link ComBE.Component#getLabel <em>Label</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @param value the new value of the '<em>Label</em>' attribute.
+	 * @see #getLabel()
+	 * @generated
+	 */
+	void setLabel(String value);
+
+	/**
+	 * Returns the value of the '<em><b>Behaviorseqs</b></em>' containment reference list.
+	 * The list contents are of type {@link ComBE.BehaviorSeq}.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Behaviorseqs</em>' containment reference list isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Behaviorseqs</em>' containment reference list.
+	 * @see ComBE.ComBEPackage#getComponent_Behaviorseqs()
+	 * @model containment="true"
+	 * @generated
+	 */
+	EList<BehaviorSeq> getBehaviorseqs();
+
+} // Component

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/EmptyNode.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/EmptyNode.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,21 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+
+/**
+ * <!-- begin-user-doc -->
+ * A representation of the model object '<em><b>Empty Node</b></em>'.
+ * <!-- end-user-doc -->
+ *
+ *
+ * @see ComBE.ComBEPackage#getEmptyNode()
+ * @model annotation="StrategoTerm.index 0='label' 1='operator'"
+ * @generated
+ */
+public interface EmptyNode extends Node {
+} // EmptyNode

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Node.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Node.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,84 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+import org.eclipse.emf.ecore.EObject;
+
+/**
+ * <!-- begin-user-doc -->
+ * A representation of the model object '<em><b>Node</b></em>'.
+ * <!-- end-user-doc -->
+ *
+ * <p>
+ * The following features are supported:
+ * <ul>
+ *   <li>{@link ComBE.Node#getLabel <em>Label</em>}</li>
+ *   <li>{@link ComBE.Node#getOperator <em>Operator</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @see ComBE.ComBEPackage#getNode()
+ * @model abstract="true"
+ * @generated
+ */
+public interface Node extends EObject {
+	/**
+	 * Returns the value of the '<em><b>Label</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Label</em>' attribute isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Label</em>' attribute.
+	 * @see #setLabel(String)
+	 * @see ComBE.ComBEPackage#getNode_Label()
+	 * @model
+	 * @generated
+	 */
+	String getLabel();
+
+	/**
+	 * Sets the value of the '{@link ComBE.Node#getLabel <em>Label</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @param value the new value of the '<em>Label</em>' attribute.
+	 * @see #getLabel()
+	 * @generated
+	 */
+	void setLabel(String value);
+
+	/**
+	 * Returns the value of the '<em><b>Operator</b></em>' attribute.
+	 * The literals are from the enumeration {@link ComBE.Operator}.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Operator</em>' attribute isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Operator</em>' attribute.
+	 * @see ComBE.Operator
+	 * @see #setOperator(Operator)
+	 * @see ComBE.ComBEPackage#getNode_Operator()
+	 * @model required="true"
+	 * @generated
+	 */
+	Operator getOperator();
+
+	/**
+	 * Sets the value of the '{@link ComBE.Node#getOperator <em>Operator</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @param value the new value of the '<em>Operator</em>' attribute.
+	 * @see ComBE.Operator
+	 * @see #getOperator()
+	 * @generated
+	 */
+	void setOperator(Operator value);
+
+} // Node

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Operator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Operator.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,428 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.emf.common.util.Enumerator;
+
+/**
+ * <!-- begin-user-doc -->
+ * A representation of the literals of the enumeration '<em><b>Operator</b></em>',
+ * and utility methods for working with them.
+ * <!-- end-user-doc -->
+ * @see ComBE.ComBEPackage#getOperator()
+ * @model
+ * @generated
+ */
+public enum Operator implements Enumerator {
+	/**
+	 * The '<em><b>None</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #NONE_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	NONE(0, "None", ""),
+
+	/**
+	 * The '<em><b>Branch Kill</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #BRANCH_KILL_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	BRANCH_KILL(1, "BranchKill", "--"),
+
+	/**
+	 * The '<em><b>Conjunction</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #CONJUNCTION_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	CONJUNCTION(2, "Conjunction", "&"),
+
+	/**
+	 * The '<em><b>Disjunction</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #DISJUNCTION_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	DISJUNCTION(3, "Disjunction", "|"),
+
+	/**
+	 * The '<em><b>May</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #MAY_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	MAY(4, "May", "%"),
+
+	/**
+	 * The '<em><b>Reference</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #REFERENCE_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	REFERENCE(5, "Reference", "=>"),
+
+	/**
+	 * The '<em><b>Reversion</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #REVERSION_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	REVERSION(6, "Reversion", "^"),
+
+	/**
+	 * The '<em><b>Start New</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #START_NEW_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	START_NEW(7, "StartNew", "^^"),
+
+	/**
+	 * The '<em><b>Synchronisation</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #SYNCHRONISATION_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	SYNCHRONISATION(8, "Synchronisation", "="),
+
+	/**
+	 * The '<em><b>XOR</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #XOR_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	XOR(9, "XOR", "XOR");
+
+	/**
+	 * The '<em><b>None</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>None</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #NONE
+	 * @model name="None" literal=""
+	 * @generated
+	 * @ordered
+	 */
+	public static final int NONE_VALUE = 0;
+
+	/**
+	 * The '<em><b>Branch Kill</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>Branch Kill</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #BRANCH_KILL
+	 * @model name="BranchKill" literal="--"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int BRANCH_KILL_VALUE = 1;
+
+	/**
+	 * The '<em><b>Conjunction</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>Conjunction</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #CONJUNCTION
+	 * @model name="Conjunction" literal="&"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int CONJUNCTION_VALUE = 2;
+
+	/**
+	 * The '<em><b>Disjunction</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>Disjunction</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #DISJUNCTION
+	 * @model name="Disjunction" literal="|"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int DISJUNCTION_VALUE = 3;
+
+	/**
+	 * The '<em><b>May</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>May</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #MAY
+	 * @model name="May" literal="%"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int MAY_VALUE = 4;
+
+	/**
+	 * The '<em><b>Reference</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>Reference</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #REFERENCE
+	 * @model name="Reference" literal="=>"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int REFERENCE_VALUE = 5;
+
+	/**
+	 * The '<em><b>Reversion</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>Reversion</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #REVERSION
+	 * @model name="Reversion" literal="^"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int REVERSION_VALUE = 6;
+
+	/**
+	 * The '<em><b>Start New</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>Start New</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #START_NEW
+	 * @model name="StartNew" literal="^^"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int START_NEW_VALUE = 7;
+
+	/**
+	 * The '<em><b>Synchronisation</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>Synchronisation</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #SYNCHRONISATION
+	 * @model name="Synchronisation" literal="="
+	 * @generated
+	 * @ordered
+	 */
+	public static final int SYNCHRONISATION_VALUE = 8;
+
+	/**
+	 * The '<em><b>XOR</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>XOR</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #XOR
+	 * @model
+	 * @generated
+	 * @ordered
+	 */
+	public static final int XOR_VALUE = 9;
+
+	/**
+	 * An array of all the '<em><b>Operator</b></em>' enumerators.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private static final Operator[] VALUES_ARRAY =
+		new Operator[] {
+			NONE,
+			BRANCH_KILL,
+			CONJUNCTION,
+			DISJUNCTION,
+			MAY,
+			REFERENCE,
+			REVERSION,
+			START_NEW,
+			SYNCHRONISATION,
+			XOR,
+		};
+
+	/**
+	 * A public read-only list of all the '<em><b>Operator</b></em>' enumerators.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static final List<Operator> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));
+
+	/**
+	 * Returns the '<em><b>Operator</b></em>' literal with the specified literal value.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static Operator get(String literal) {
+		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
+			Operator result = VALUES_ARRAY[i];
+			if (result.toString().equals(literal)) {
+				return result;
+			}
+		}
+		return null;
+	}
+
+	/**
+	 * Returns the '<em><b>Operator</b></em>' literal with the specified name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static Operator getByName(String name) {
+		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
+			Operator result = VALUES_ARRAY[i];
+			if (result.getName().equals(name)) {
+				return result;
+			}
+		}
+		return null;
+	}
+
+	/**
+	 * Returns the '<em><b>Operator</b></em>' literal with the specified integer value.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static Operator get(int value) {
+		switch (value) {
+			case NONE_VALUE: return NONE;
+			case BRANCH_KILL_VALUE: return BRANCH_KILL;
+			case CONJUNCTION_VALUE: return CONJUNCTION;
+			case DISJUNCTION_VALUE: return DISJUNCTION;
+			case MAY_VALUE: return MAY;
+			case REFERENCE_VALUE: return REFERENCE;
+			case REVERSION_VALUE: return REVERSION;
+			case START_NEW_VALUE: return START_NEW;
+			case SYNCHRONISATION_VALUE: return SYNCHRONISATION;
+			case XOR_VALUE: return XOR;
+		}
+		return null;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private final int value;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private final String name;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private final String literal;
+
+	/**
+	 * Only this class can construct instances.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private Operator(int value, String name, String literal) {
+		this.value = value;
+		this.name = name;
+		this.literal = literal;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public int getValue() {
+	  return value;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public String getName() {
+	  return name;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public String getLiteral() {
+	  return literal;
+	}
+
+	/**
+	 * Returns the literal value of the enumerator, which is its string representation.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String toString() {
+		return literal;
+	}
+	
+} //Operator

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/ParallelBranch.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/ParallelBranch.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,44 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+import org.eclipse.emf.common.util.EList;
+
+/**
+ * <!-- begin-user-doc -->
+ * A representation of the model object '<em><b>Parallel Branch</b></em>'.
+ * <!-- end-user-doc -->
+ *
+ * <p>
+ * The following features are supported:
+ * <ul>
+ *   <li>{@link ComBE.ParallelBranch#getChildren <em>Children</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @see ComBE.ComBEPackage#getParallelBranch()
+ * @model annotation="StrategoTerm.index 0='nodes' 1='children'"
+ * @generated
+ */
+public interface ParallelBranch extends BehaviorTree {
+	/**
+	 * Returns the value of the '<em><b>Children</b></em>' containment reference list.
+	 * The list contents are of type {@link ComBE.BehaviorTree}.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Children</em>' containment reference list isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Children</em>' containment reference list.
+	 * @see ComBE.ComBEPackage#getParallelBranch_Children()
+	 * @model containment="true"
+	 * @generated
+	 */
+	EList<BehaviorTree> getChildren();
+
+} // ParallelBranch

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Requirement.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Requirement.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,81 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+import org.eclipse.emf.ecore.EObject;
+
+/**
+ * <!-- begin-user-doc -->
+ * A representation of the model object '<em><b>Requirement</b></em>'.
+ * <!-- end-user-doc -->
+ *
+ * <p>
+ * The following features are supported:
+ * <ul>
+ *   <li>{@link ComBE.Requirement#getId <em>Id</em>}</li>
+ *   <li>{@link ComBE.Requirement#getLabel <em>Label</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @see ComBE.ComBEPackage#getRequirement()
+ * @model annotation="StrategoTerm.index 0='id' 1='label'"
+ * @generated
+ */
+public interface Requirement extends EObject {
+	/**
+	 * Returns the value of the '<em><b>Id</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Id</em>' attribute isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Id</em>' attribute.
+	 * @see #setId(String)
+	 * @see ComBE.ComBEPackage#getRequirement_Id()
+	 * @model id="true" required="true"
+	 * @generated
+	 */
+	String getId();
+
+	/**
+	 * Sets the value of the '{@link ComBE.Requirement#getId <em>Id</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @param value the new value of the '<em>Id</em>' attribute.
+	 * @see #getId()
+	 * @generated
+	 */
+	void setId(String value);
+
+	/**
+	 * Returns the value of the '<em><b>Label</b></em>' attribute.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Label</em>' attribute isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Label</em>' attribute.
+	 * @see #setLabel(String)
+	 * @see ComBE.ComBEPackage#getRequirement_Label()
+	 * @model required="true"
+	 * @generated
+	 */
+	String getLabel();
+
+	/**
+	 * Sets the value of the '{@link ComBE.Requirement#getLabel <em>Label</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @param value the new value of the '<em>Label</em>' attribute.
+	 * @see #getLabel()
+	 * @generated
+	 */
+	void setLabel(String value);
+
+} // Requirement

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Root.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Root.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,54 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+import org.eclipse.emf.ecore.EObject;
+
+/**
+ * <!-- begin-user-doc -->
+ * A representation of the model object '<em><b>Root</b></em>'.
+ * <!-- end-user-doc -->
+ *
+ * <p>
+ * The following features are supported:
+ * <ul>
+ *   <li>{@link ComBE.Root#getBehaviortree <em>Behaviortree</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @see ComBE.ComBEPackage#getRoot()
+ * @model annotation="StrategoTerm.index 0='behaviortree'"
+ * @generated
+ */
+public interface Root extends EObject {
+	/**
+	 * Returns the value of the '<em><b>Behaviortree</b></em>' containment reference.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Behaviortree</em>' containment reference isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Behaviortree</em>' containment reference.
+	 * @see #setBehaviortree(BehaviorTree)
+	 * @see ComBE.ComBEPackage#getRoot_Behaviortree()
+	 * @model containment="true" required="true"
+	 * @generated
+	 */
+	BehaviorTree getBehaviortree();
+
+	/**
+	 * Sets the value of the '{@link ComBE.Root#getBehaviortree <em>Behaviortree</em>}' containment reference.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @param value the new value of the '<em>Behaviortree</em>' containment reference.
+	 * @see #getBehaviortree()
+	 * @generated
+	 */
+	void setBehaviortree(BehaviorTree value);
+
+} // Root

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Specification.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/Specification.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,90 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+import org.eclipse.emf.common.util.EList;
+
+import org.eclipse.emf.ecore.EObject;
+
+/**
+ * <!-- begin-user-doc -->
+ * A representation of the model object '<em><b>Specification</b></em>'.
+ * <!-- end-user-doc -->
+ *
+ * <p>
+ * The following features are supported:
+ * <ul>
+ *   <li>{@link ComBE.Specification#getRequirements <em>Requirements</em>}</li>
+ *   <li>{@link ComBE.Specification#getComponents <em>Components</em>}</li>
+ *   <li>{@link ComBE.Specification#getRoot <em>Root</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @see ComBE.ComBEPackage#getSpecification()
+ * @model annotation="StrategoTerm.index 0='requirements' 1='components' 2='root'"
+ * @generated
+ */
+public interface Specification extends EObject {
+	/**
+	 * Returns the value of the '<em><b>Requirements</b></em>' containment reference list.
+	 * The list contents are of type {@link ComBE.Requirement}.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Requirements</em>' containment reference list isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Requirements</em>' containment reference list.
+	 * @see ComBE.ComBEPackage#getSpecification_Requirements()
+	 * @model containment="true"
+	 * @generated
+	 */
+	EList<Requirement> getRequirements();
+
+	/**
+	 * Returns the value of the '<em><b>Components</b></em>' containment reference list.
+	 * The list contents are of type {@link ComBE.Component}.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Components</em>' containment reference list isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Components</em>' containment reference list.
+	 * @see ComBE.ComBEPackage#getSpecification_Components()
+	 * @model containment="true"
+	 * @generated
+	 */
+	EList<Component> getComponents();
+
+	/**
+	 * Returns the value of the '<em><b>Root</b></em>' containment reference.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Root</em>' containment reference isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Root</em>' containment reference.
+	 * @see #setRoot(Root)
+	 * @see ComBE.ComBEPackage#getSpecification_Root()
+	 * @model containment="true"
+	 * @generated
+	 */
+	Root getRoot();
+
+	/**
+	 * Sets the value of the '{@link ComBE.Specification#getRoot <em>Root</em>}' containment reference.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @param value the new value of the '<em>Root</em>' containment reference.
+	 * @see #getRoot()
+	 * @generated
+	 */
+	void setRoot(Root value);
+
+} // Specification

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/StandardComponent.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/StandardComponent.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,21 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+
+/**
+ * <!-- begin-user-doc -->
+ * A representation of the model object '<em><b>Standard Component</b></em>'.
+ * <!-- end-user-doc -->
+ *
+ *
+ * @see ComBE.ComBEPackage#getStandardComponent()
+ * @model annotation="StrategoTerm.index 0='id' 1='label' 2='behaviorseqs'"
+ * @generated
+ */
+public interface StandardComponent extends Component {
+} // StandardComponent

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/StandardNode.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/StandardNode.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,137 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+
+/**
+ * <!-- begin-user-doc -->
+ * A representation of the model object '<em><b>Standard Node</b></em>'.
+ * <!-- end-user-doc -->
+ *
+ * <p>
+ * The following features are supported:
+ * <ul>
+ *   <li>{@link ComBE.StandardNode#getRequirement <em>Requirement</em>}</li>
+ *   <li>{@link ComBE.StandardNode#getTracibilitystatus <em>Tracibilitystatus</em>}</li>
+ *   <li>{@link ComBE.StandardNode#getComponent <em>Component</em>}</li>
+ *   <li>{@link ComBE.StandardNode#getBehavior <em>Behavior</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @see ComBE.ComBEPackage#getStandardNode()
+ * @model annotation="StrategoTerm.index 0='requirement' 1='tracibilitystatus' 2='component' 3='behavior' 4='label' 5='operator'"
+ * @generated
+ */
+public interface StandardNode extends Node {
+	/**
+	 * Returns the value of the '<em><b>Requirement</b></em>' reference.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Requirement</em>' reference isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Requirement</em>' reference.
+	 * @see #setRequirement(Requirement)
+	 * @see ComBE.ComBEPackage#getStandardNode_Requirement()
+	 * @model required="true"
+	 * @generated
+	 */
+	Requirement getRequirement();
+
+	/**
+	 * Sets the value of the '{@link ComBE.StandardNode#getRequirement <em>Requirement</em>}' reference.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @param value the new value of the '<em>Requirement</em>' reference.
+	 * @see #getRequirement()
+	 * @generated
+	 */
+	void setRequirement(Requirement value);
+
+	/**
+	 * Returns the value of the '<em><b>Tracibilitystatus</b></em>' attribute.
+	 * The literals are from the enumeration {@link ComBE.TracibilityStatus}.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Tracibilitystatus</em>' attribute isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Tracibilitystatus</em>' attribute.
+	 * @see ComBE.TracibilityStatus
+	 * @see #setTracibilitystatus(TracibilityStatus)
+	 * @see ComBE.ComBEPackage#getStandardNode_Tracibilitystatus()
+	 * @model required="true"
+	 * @generated
+	 */
+	TracibilityStatus getTracibilitystatus();
+
+	/**
+	 * Sets the value of the '{@link ComBE.StandardNode#getTracibilitystatus <em>Tracibilitystatus</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @param value the new value of the '<em>Tracibilitystatus</em>' attribute.
+	 * @see ComBE.TracibilityStatus
+	 * @see #getTracibilitystatus()
+	 * @generated
+	 */
+	void setTracibilitystatus(TracibilityStatus value);
+
+	/**
+	 * Returns the value of the '<em><b>Component</b></em>' reference.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Component</em>' reference isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Component</em>' reference.
+	 * @see #setComponent(Component)
+	 * @see ComBE.ComBEPackage#getStandardNode_Component()
+	 * @model required="true"
+	 * @generated
+	 */
+	Component getComponent();
+
+	/**
+	 * Sets the value of the '{@link ComBE.StandardNode#getComponent <em>Component</em>}' reference.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @param value the new value of the '<em>Component</em>' reference.
+	 * @see #getComponent()
+	 * @generated
+	 */
+	void setComponent(Component value);
+
+	/**
+	 * Returns the value of the '<em><b>Behavior</b></em>' reference.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of the '<em>Behavior</em>' reference isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @return the value of the '<em>Behavior</em>' reference.
+	 * @see #setBehavior(Behavior)
+	 * @see ComBE.ComBEPackage#getStandardNode_Behavior()
+	 * @model required="true"
+	 * @generated
+	 */
+	Behavior getBehavior();
+
+	/**
+	 * Sets the value of the '{@link ComBE.StandardNode#getBehavior <em>Behavior</em>}' reference.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @param value the new value of the '<em>Behavior</em>' reference.
+	 * @see #getBehavior()
+	 * @generated
+	 */
+	void setBehavior(Behavior value);
+
+} // StandardNode

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/SystemComponent.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/SystemComponent.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,21 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+
+/**
+ * <!-- begin-user-doc -->
+ * A representation of the model object '<em><b>System Component</b></em>'.
+ * <!-- end-user-doc -->
+ *
+ *
+ * @see ComBE.ComBEPackage#getSystemComponent()
+ * @model annotation="StrategoTerm.index 0='id' 1='label' 2='behaviorseqs'"
+ * @generated
+ */
+public interface SystemComponent extends Component {
+} // SystemComponent

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/TracibilityStatus.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/TracibilityStatus.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,320 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE;
+
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.List;
+
+import org.eclipse.emf.common.util.Enumerator;
+
+/**
+ * <!-- begin-user-doc -->
+ * A representation of the literals of the enumeration '<em><b>Tracibility Status</b></em>',
+ * and utility methods for working with them.
+ * <!-- end-user-doc -->
+ * @see ComBE.ComBEPackage#getTracibilityStatus()
+ * @model
+ * @generated
+ */
+public enum TracibilityStatus implements Enumerator {
+	/**
+	 * The '<em><b>None</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #NONE_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	NONE(0, "None", ""),
+
+	/**
+	 * The '<em><b>Implied</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #IMPLIED_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	IMPLIED(1, "Implied", "+"),
+
+	/**
+	 * The '<em><b>Missing</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #MISSING_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	MISSING(2, "Missing", "-"),
+
+	/**
+	 * The '<em><b>Updated</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #UPDATED_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	UPDATED(3, "Updated", "++"),
+
+	/**
+	 * The '<em><b>Deleted</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #DELETED_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	DELETED(4, "Deleted", "--"),
+
+	/**
+	 * The '<em><b>Refinement</b></em>' literal object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #REFINEMENT_VALUE
+	 * @generated
+	 * @ordered
+	 */
+	REFINEMENT(5, "Refinement", "+-");
+
+	/**
+	 * The '<em><b>None</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>None</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #NONE
+	 * @model name="None" literal=""
+	 * @generated
+	 * @ordered
+	 */
+	public static final int NONE_VALUE = 0;
+
+	/**
+	 * The '<em><b>Implied</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>Implied</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #IMPLIED
+	 * @model name="Implied" literal="+"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int IMPLIED_VALUE = 1;
+
+	/**
+	 * The '<em><b>Missing</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>Missing</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #MISSING
+	 * @model name="Missing" literal="-"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int MISSING_VALUE = 2;
+
+	/**
+	 * The '<em><b>Updated</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>Updated</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #UPDATED
+	 * @model name="Updated" literal="++"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int UPDATED_VALUE = 3;
+
+	/**
+	 * The '<em><b>Deleted</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>Deleted</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #DELETED
+	 * @model name="Deleted" literal="--"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int DELETED_VALUE = 4;
+
+	/**
+	 * The '<em><b>Refinement</b></em>' literal value.
+	 * <!-- begin-user-doc -->
+	 * <p>
+	 * If the meaning of '<em><b>Refinement</b></em>' literal object isn't clear,
+	 * there really should be more of a description here...
+	 * </p>
+	 * <!-- end-user-doc -->
+	 * @see #REFINEMENT
+	 * @model name="Refinement" literal="+-"
+	 * @generated
+	 * @ordered
+	 */
+	public static final int REFINEMENT_VALUE = 5;
+
+	/**
+	 * An array of all the '<em><b>Tracibility Status</b></em>' enumerators.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private static final TracibilityStatus[] VALUES_ARRAY =
+		new TracibilityStatus[] {
+			NONE,
+			IMPLIED,
+			MISSING,
+			UPDATED,
+			DELETED,
+			REFINEMENT,
+		};
+
+	/**
+	 * A public read-only list of all the '<em><b>Tracibility Status</b></em>' enumerators.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static final List<TracibilityStatus> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));
+
+	/**
+	 * Returns the '<em><b>Tracibility Status</b></em>' literal with the specified literal value.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static TracibilityStatus get(String literal) {
+		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
+			TracibilityStatus result = VALUES_ARRAY[i];
+			if (result.toString().equals(literal)) {
+				return result;
+			}
+		}
+		return null;
+	}
+
+	/**
+	 * Returns the '<em><b>Tracibility Status</b></em>' literal with the specified name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static TracibilityStatus getByName(String name) {
+		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
+			TracibilityStatus result = VALUES_ARRAY[i];
+			if (result.getName().equals(name)) {
+				return result;
+			}
+		}
+		return null;
+	}
+
+	/**
+	 * Returns the '<em><b>Tracibility Status</b></em>' literal with the specified integer value.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static TracibilityStatus get(int value) {
+		switch (value) {
+			case NONE_VALUE: return NONE;
+			case IMPLIED_VALUE: return IMPLIED;
+			case MISSING_VALUE: return MISSING;
+			case UPDATED_VALUE: return UPDATED;
+			case DELETED_VALUE: return DELETED;
+			case REFINEMENT_VALUE: return REFINEMENT;
+		}
+		return null;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private final int value;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private final String name;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private final String literal;
+
+	/**
+	 * Only this class can construct instances.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private TracibilityStatus(int value, String name, String literal) {
+		this.value = value;
+		this.name = name;
+		this.literal = literal;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public int getValue() {
+	  return value;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public String getName() {
+	  return name;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public String getLiteral() {
+	  return literal;
+	}
+
+	/**
+	 * Returns the literal value of the enumerator, which is its string representation.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String toString() {
+		return literal;
+	}
+	
+} //TracibilityStatus

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/AlternativeBranchImpl.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/AlternativeBranchImpl.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,154 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.impl;
+
+import ComBE.AlternativeBranch;
+import ComBE.BehaviorTree;
+import ComBE.ComBEPackage;
+
+import java.util.Collection;
+
+import org.eclipse.emf.common.notify.NotificationChain;
+
+import org.eclipse.emf.common.util.EList;
+
+import org.eclipse.emf.ecore.EClass;
+import org.eclipse.emf.ecore.InternalEObject;
+
+import org.eclipse.emf.ecore.util.EObjectContainmentEList;
+import org.eclipse.emf.ecore.util.InternalEList;
+
+/**
+ * <!-- begin-user-doc -->
+ * An implementation of the model object '<em><b>Alternative Branch</b></em>'.
+ * <!-- end-user-doc -->
+ * <p>
+ * The following features are implemented:
+ * <ul>
+ *   <li>{@link ComBE.impl.AlternativeBranchImpl#getChildren <em>Children</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @generated
+ */
+public class AlternativeBranchImpl extends BehaviorTreeImpl implements AlternativeBranch {
+	/**
+	 * The cached value of the '{@link #getChildren() <em>Children</em>}' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getChildren()
+	 * @generated
+	 * @ordered
+	 */
+	protected EList<BehaviorTree> children;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected AlternativeBranchImpl() {
+		super();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EClass eStaticClass() {
+		return ComBEPackage.Literals.ALTERNATIVE_BRANCH;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EList<BehaviorTree> getChildren() {
+		if (children == null) {
+			children = new EObjectContainmentEList<BehaviorTree>(BehaviorTree.class, this, ComBEPackage.ALTERNATIVE_BRANCH__CHILDREN);
+		}
+		return children;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
+		switch (featureID) {
+			case ComBEPackage.ALTERNATIVE_BRANCH__CHILDREN:
+				return ((InternalEList<?>)getChildren()).basicRemove(otherEnd, msgs);
+		}
+		return super.eInverseRemove(otherEnd, featureID, msgs);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object eGet(int featureID, boolean resolve, boolean coreType) {
+		switch (featureID) {
+			case ComBEPackage.ALTERNATIVE_BRANCH__CHILDREN:
+				return getChildren();
+		}
+		return super.eGet(featureID, resolve, coreType);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@SuppressWarnings("unchecked")
+	@Override
+	public void eSet(int featureID, Object newValue) {
+		switch (featureID) {
+			case ComBEPackage.ALTERNATIVE_BRANCH__CHILDREN:
+				getChildren().clear();
+				getChildren().addAll((Collection<? extends BehaviorTree>)newValue);
+				return;
+		}
+		super.eSet(featureID, newValue);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void eUnset(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.ALTERNATIVE_BRANCH__CHILDREN:
+				getChildren().clear();
+				return;
+		}
+		super.eUnset(featureID);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public boolean eIsSet(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.ALTERNATIVE_BRANCH__CHILDREN:
+				return children != null && !children.isEmpty();
+		}
+		return super.eIsSet(featureID);
+	}
+
+} //AlternativeBranchImpl

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/AtomicSequenceImpl.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/AtomicSequenceImpl.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,179 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.impl;
+
+import ComBE.AtomicSequence;
+import ComBE.BehaviorTree;
+import ComBE.ComBEPackage;
+
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.common.notify.NotificationChain;
+
+import org.eclipse.emf.ecore.EClass;
+import org.eclipse.emf.ecore.InternalEObject;
+
+import org.eclipse.emf.ecore.impl.ENotificationImpl;
+
+/**
+ * <!-- begin-user-doc -->
+ * An implementation of the model object '<em><b>Atomic Sequence</b></em>'.
+ * <!-- end-user-doc -->
+ * <p>
+ * The following features are implemented:
+ * <ul>
+ *   <li>{@link ComBE.impl.AtomicSequenceImpl#getChild <em>Child</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @generated
+ */
+public class AtomicSequenceImpl extends BehaviorTreeImpl implements AtomicSequence {
+	/**
+	 * The cached value of the '{@link #getChild() <em>Child</em>}' containment reference.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getChild()
+	 * @generated
+	 * @ordered
+	 */
+	protected BehaviorTree child;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected AtomicSequenceImpl() {
+		super();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EClass eStaticClass() {
+		return ComBEPackage.Literals.ATOMIC_SEQUENCE;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public BehaviorTree getChild() {
+		return child;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public NotificationChain basicSetChild(BehaviorTree newChild, NotificationChain msgs) {
+		BehaviorTree oldChild = child;
+		child = newChild;
+		if (eNotificationRequired()) {
+			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComBEPackage.ATOMIC_SEQUENCE__CHILD, oldChild, newChild);
+			if (msgs == null) msgs = notification; else msgs.add(notification);
+		}
+		return msgs;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setChild(BehaviorTree newChild) {
+		if (newChild != child) {
+			NotificationChain msgs = null;
+			if (child != null)
+				msgs = ((InternalEObject)child).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComBEPackage.ATOMIC_SEQUENCE__CHILD, null, msgs);
+			if (newChild != null)
+				msgs = ((InternalEObject)newChild).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComBEPackage.ATOMIC_SEQUENCE__CHILD, null, msgs);
+			msgs = basicSetChild(newChild, msgs);
+			if (msgs != null) msgs.dispatch();
+		}
+		else if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, ComBEPackage.ATOMIC_SEQUENCE__CHILD, newChild, newChild));
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
+		switch (featureID) {
+			case ComBEPackage.ATOMIC_SEQUENCE__CHILD:
+				return basicSetChild(null, msgs);
+		}
+		return super.eInverseRemove(otherEnd, featureID, msgs);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object eGet(int featureID, boolean resolve, boolean coreType) {
+		switch (featureID) {
+			case ComBEPackage.ATOMIC_SEQUENCE__CHILD:
+				return getChild();
+		}
+		return super.eGet(featureID, resolve, coreType);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void eSet(int featureID, Object newValue) {
+		switch (featureID) {
+			case ComBEPackage.ATOMIC_SEQUENCE__CHILD:
+				setChild((BehaviorTree)newValue);
+				return;
+		}
+		super.eSet(featureID, newValue);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void eUnset(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.ATOMIC_SEQUENCE__CHILD:
+				setChild((BehaviorTree)null);
+				return;
+		}
+		super.eUnset(featureID);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public boolean eIsSet(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.ATOMIC_SEQUENCE__CHILD:
+				return child != null;
+		}
+		return super.eIsSet(featureID);
+	}
+
+} //AtomicSequenceImpl

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/BehaviorImpl.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/BehaviorImpl.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,221 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.impl;
+
+import ComBE.Behavior;
+import ComBE.ComBEPackage;
+
+import org.eclipse.emf.common.notify.Notification;
+
+import org.eclipse.emf.ecore.EClass;
+
+import org.eclipse.emf.ecore.impl.ENotificationImpl;
+import org.eclipse.emf.ecore.impl.EObjectImpl;
+
+/**
+ * <!-- begin-user-doc -->
+ * An implementation of the model object '<em><b>Behavior</b></em>'.
+ * <!-- end-user-doc -->
+ * <p>
+ * The following features are implemented:
+ * <ul>
+ *   <li>{@link ComBE.impl.BehaviorImpl#getInt <em>Int</em>}</li>
+ *   <li>{@link ComBE.impl.BehaviorImpl#getLabel <em>Label</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @generated
+ */
+public class BehaviorImpl extends EObjectImpl implements Behavior {
+	/**
+	 * The default value of the '{@link #getInt() <em>Int</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getInt()
+	 * @generated
+	 * @ordered
+	 */
+	protected static final int INT_EDEFAULT = 0;
+
+	/**
+	 * The cached value of the '{@link #getInt() <em>Int</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getInt()
+	 * @generated
+	 * @ordered
+	 */
+	protected int int_ = INT_EDEFAULT;
+
+	/**
+	 * The default value of the '{@link #getLabel() <em>Label</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getLabel()
+	 * @generated
+	 * @ordered
+	 */
+	protected static final String LABEL_EDEFAULT = null;
+
+	/**
+	 * The cached value of the '{@link #getLabel() <em>Label</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getLabel()
+	 * @generated
+	 * @ordered
+	 */
+	protected String label = LABEL_EDEFAULT;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected BehaviorImpl() {
+		super();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EClass eStaticClass() {
+		return ComBEPackage.Literals.BEHAVIOR;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public int getInt() {
+		return int_;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setInt(int newInt) {
+		int oldInt = int_;
+		int_ = newInt;
+		if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, ComBEPackage.BEHAVIOR__INT, oldInt, int_));
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public String getLabel() {
+		return label;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setLabel(String newLabel) {
+		String oldLabel = label;
+		label = newLabel;
+		if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, ComBEPackage.BEHAVIOR__LABEL, oldLabel, label));
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object eGet(int featureID, boolean resolve, boolean coreType) {
+		switch (featureID) {
+			case ComBEPackage.BEHAVIOR__INT:
+				return getInt();
+			case ComBEPackage.BEHAVIOR__LABEL:
+				return getLabel();
+		}
+		return super.eGet(featureID, resolve, coreType);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void eSet(int featureID, Object newValue) {
+		switch (featureID) {
+			case ComBEPackage.BEHAVIOR__INT:
+				setInt((Integer)newValue);
+				return;
+			case ComBEPackage.BEHAVIOR__LABEL:
+				setLabel((String)newValue);
+				return;
+		}
+		super.eSet(featureID, newValue);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void eUnset(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.BEHAVIOR__INT:
+				setInt(INT_EDEFAULT);
+				return;
+			case ComBEPackage.BEHAVIOR__LABEL:
+				setLabel(LABEL_EDEFAULT);
+				return;
+		}
+		super.eUnset(featureID);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public boolean eIsSet(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.BEHAVIOR__INT:
+				return int_ != INT_EDEFAULT;
+			case ComBEPackage.BEHAVIOR__LABEL:
+				return LABEL_EDEFAULT == null ? label != null : !LABEL_EDEFAULT.equals(label);
+		}
+		return super.eIsSet(featureID);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String toString() {
+		if (eIsProxy()) return super.toString();
+
+		StringBuffer result = new StringBuffer(super.toString());
+		result.append(" (int: ");
+		result.append(int_);
+		result.append(", label: ");
+		result.append(label);
+		result.append(')');
+		return result.toString();
+	}
+
+} //BehaviorImpl

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/BehaviorSeqImpl.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/BehaviorSeqImpl.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,227 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.impl;
+
+import ComBE.Behavior;
+import ComBE.BehaviorSeq;
+import ComBE.BehaviorType;
+import ComBE.ComBEPackage;
+
+import java.util.Collection;
+
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.common.notify.NotificationChain;
+
+import org.eclipse.emf.common.util.EList;
+
+import org.eclipse.emf.ecore.EClass;
+import org.eclipse.emf.ecore.InternalEObject;
+
+import org.eclipse.emf.ecore.impl.ENotificationImpl;
+import org.eclipse.emf.ecore.impl.EObjectImpl;
+
+import org.eclipse.emf.ecore.util.EObjectContainmentEList;
+import org.eclipse.emf.ecore.util.InternalEList;
+
+/**
+ * <!-- begin-user-doc -->
+ * An implementation of the model object '<em><b>Behavior Seq</b></em>'.
+ * <!-- end-user-doc -->
+ * <p>
+ * The following features are implemented:
+ * <ul>
+ *   <li>{@link ComBE.impl.BehaviorSeqImpl#getBehaviortype <em>Behaviortype</em>}</li>
+ *   <li>{@link ComBE.impl.BehaviorSeqImpl#getBehavior <em>Behavior</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @generated
+ */
+public class BehaviorSeqImpl extends EObjectImpl implements BehaviorSeq {
+	/**
+	 * The default value of the '{@link #getBehaviortype() <em>Behaviortype</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getBehaviortype()
+	 * @generated
+	 * @ordered
+	 */
+	protected static final BehaviorType BEHAVIORTYPE_EDEFAULT = BehaviorType.STATE_REALISATION;
+
+	/**
+	 * The cached value of the '{@link #getBehaviortype() <em>Behaviortype</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getBehaviortype()
+	 * @generated
+	 * @ordered
+	 */
+	protected BehaviorType behaviortype = BEHAVIORTYPE_EDEFAULT;
+
+	/**
+	 * The cached value of the '{@link #getBehavior() <em>Behavior</em>}' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getBehavior()
+	 * @generated
+	 * @ordered
+	 */
+	protected EList<Behavior> behavior;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected BehaviorSeqImpl() {
+		super();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EClass eStaticClass() {
+		return ComBEPackage.Literals.BEHAVIOR_SEQ;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public BehaviorType getBehaviortype() {
+		return behaviortype;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setBehaviortype(BehaviorType newBehaviortype) {
+		BehaviorType oldBehaviortype = behaviortype;
+		behaviortype = newBehaviortype == null ? BEHAVIORTYPE_EDEFAULT : newBehaviortype;
+		if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, ComBEPackage.BEHAVIOR_SEQ__BEHAVIORTYPE, oldBehaviortype, behaviortype));
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EList<Behavior> getBehavior() {
+		if (behavior == null) {
+			behavior = new EObjectContainmentEList<Behavior>(Behavior.class, this, ComBEPackage.BEHAVIOR_SEQ__BEHAVIOR);
+		}
+		return behavior;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
+		switch (featureID) {
+			case ComBEPackage.BEHAVIOR_SEQ__BEHAVIOR:
+				return ((InternalEList<?>)getBehavior()).basicRemove(otherEnd, msgs);
+		}
+		return super.eInverseRemove(otherEnd, featureID, msgs);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object eGet(int featureID, boolean resolve, boolean coreType) {
+		switch (featureID) {
+			case ComBEPackage.BEHAVIOR_SEQ__BEHAVIORTYPE:
+				return getBehaviortype();
+			case ComBEPackage.BEHAVIOR_SEQ__BEHAVIOR:
+				return getBehavior();
+		}
+		return super.eGet(featureID, resolve, coreType);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@SuppressWarnings("unchecked")
+	@Override
+	public void eSet(int featureID, Object newValue) {
+		switch (featureID) {
+			case ComBEPackage.BEHAVIOR_SEQ__BEHAVIORTYPE:
+				setBehaviortype((BehaviorType)newValue);
+				return;
+			case ComBEPackage.BEHAVIOR_SEQ__BEHAVIOR:
+				getBehavior().clear();
+				getBehavior().addAll((Collection<? extends Behavior>)newValue);
+				return;
+		}
+		super.eSet(featureID, newValue);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void eUnset(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.BEHAVIOR_SEQ__BEHAVIORTYPE:
+				setBehaviortype(BEHAVIORTYPE_EDEFAULT);
+				return;
+			case ComBEPackage.BEHAVIOR_SEQ__BEHAVIOR:
+				getBehavior().clear();
+				return;
+		}
+		super.eUnset(featureID);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public boolean eIsSet(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.BEHAVIOR_SEQ__BEHAVIORTYPE:
+				return behaviortype != BEHAVIORTYPE_EDEFAULT;
+			case ComBEPackage.BEHAVIOR_SEQ__BEHAVIOR:
+				return behavior != null && !behavior.isEmpty();
+		}
+		return super.eIsSet(featureID);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String toString() {
+		if (eIsProxy()) return super.toString();
+
+		StringBuffer result = new StringBuffer(super.toString());
+		result.append(" (behaviortype: ");
+		result.append(behaviortype);
+		result.append(')');
+		return result.toString();
+	}
+
+} //BehaviorSeqImpl

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/BehaviorTreeImpl.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/BehaviorTreeImpl.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,156 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.impl;
+
+import ComBE.BehaviorTree;
+import ComBE.ComBEPackage;
+import ComBE.Node;
+
+import java.util.Collection;
+
+import org.eclipse.emf.common.notify.NotificationChain;
+
+import org.eclipse.emf.common.util.EList;
+
+import org.eclipse.emf.ecore.EClass;
+import org.eclipse.emf.ecore.InternalEObject;
+
+import org.eclipse.emf.ecore.impl.EObjectImpl;
+
+import org.eclipse.emf.ecore.util.EObjectContainmentEList;
+import org.eclipse.emf.ecore.util.InternalEList;
+
+/**
+ * <!-- begin-user-doc -->
+ * An implementation of the model object '<em><b>Behavior Tree</b></em>'.
+ * <!-- end-user-doc -->
+ * <p>
+ * The following features are implemented:
+ * <ul>
+ *   <li>{@link ComBE.impl.BehaviorTreeImpl#getNodes <em>Nodes</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @generated
+ */
+public abstract class BehaviorTreeImpl extends EObjectImpl implements BehaviorTree {
+	/**
+	 * The cached value of the '{@link #getNodes() <em>Nodes</em>}' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getNodes()
+	 * @generated
+	 * @ordered
+	 */
+	protected EList<Node> nodes;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected BehaviorTreeImpl() {
+		super();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EClass eStaticClass() {
+		return ComBEPackage.Literals.BEHAVIOR_TREE;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EList<Node> getNodes() {
+		if (nodes == null) {
+			nodes = new EObjectContainmentEList<Node>(Node.class, this, ComBEPackage.BEHAVIOR_TREE__NODES);
+		}
+		return nodes;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
+		switch (featureID) {
+			case ComBEPackage.BEHAVIOR_TREE__NODES:
+				return ((InternalEList<?>)getNodes()).basicRemove(otherEnd, msgs);
+		}
+		return super.eInverseRemove(otherEnd, featureID, msgs);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object eGet(int featureID, boolean resolve, boolean coreType) {
+		switch (featureID) {
+			case ComBEPackage.BEHAVIOR_TREE__NODES:
+				return getNodes();
+		}
+		return super.eGet(featureID, resolve, coreType);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@SuppressWarnings("unchecked")
+	@Override
+	public void eSet(int featureID, Object newValue) {
+		switch (featureID) {
+			case ComBEPackage.BEHAVIOR_TREE__NODES:
+				getNodes().clear();
+				getNodes().addAll((Collection<? extends Node>)newValue);
+				return;
+		}
+		super.eSet(featureID, newValue);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void eUnset(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.BEHAVIOR_TREE__NODES:
+				getNodes().clear();
+				return;
+		}
+		super.eUnset(featureID);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public boolean eIsSet(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.BEHAVIOR_TREE__NODES:
+				return nodes != null && !nodes.isEmpty();
+		}
+		return super.eIsSet(featureID);
+	}
+
+} //BehaviorTreeImpl

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/ComBEFactoryImpl.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/ComBEFactoryImpl.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,319 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.impl;
+
+import ComBE.*;
+
+import org.eclipse.emf.ecore.EClass;
+import org.eclipse.emf.ecore.EDataType;
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.EPackage;
+
+import org.eclipse.emf.ecore.impl.EFactoryImpl;
+
+import org.eclipse.emf.ecore.plugin.EcorePlugin;
+
+/**
+ * <!-- begin-user-doc -->
+ * An implementation of the model <b>Factory</b>.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class ComBEFactoryImpl extends EFactoryImpl implements ComBEFactory {
+	/**
+	 * Creates the default factory implementation.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static ComBEFactory init() {
+		try {
+			ComBEFactory theComBEFactory = (ComBEFactory)EPackage.Registry.INSTANCE.getEFactory("ComBE"); 
+			if (theComBEFactory != null) {
+				return theComBEFactory;
+			}
+		}
+		catch (Exception exception) {
+			EcorePlugin.INSTANCE.log(exception);
+		}
+		return new ComBEFactoryImpl();
+	}
+
+	/**
+	 * Creates an instance of the factory.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ComBEFactoryImpl() {
+		super();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public EObject create(EClass eClass) {
+		switch (eClass.getClassifierID()) {
+			case ComBEPackage.SPECIFICATION: return createSpecification();
+			case ComBEPackage.REQUIREMENT: return createRequirement();
+			case ComBEPackage.BEHAVIOR_SEQ: return createBehaviorSeq();
+			case ComBEPackage.BEHAVIOR: return createBehavior();
+			case ComBEPackage.ROOT: return createRoot();
+			case ComBEPackage.STANDARD_COMPONENT: return createStandardComponent();
+			case ComBEPackage.SYSTEM_COMPONENT: return createSystemComponent();
+			case ComBEPackage.ATOMIC_SEQUENCE: return createAtomicSequence();
+			case ComBEPackage.ALTERNATIVE_BRANCH: return createAlternativeBranch();
+			case ComBEPackage.PARALLEL_BRANCH: return createParallelBranch();
+			case ComBEPackage.STANDARD_NODE: return createStandardNode();
+			case ComBEPackage.EMPTY_NODE: return createEmptyNode();
+			default:
+				throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
+		}
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object createFromString(EDataType eDataType, String initialValue) {
+		switch (eDataType.getClassifierID()) {
+			case ComBEPackage.BEHAVIOR_TYPE:
+				return createBehaviorTypeFromString(eDataType, initialValue);
+			case ComBEPackage.TRACIBILITY_STATUS:
+				return createTracibilityStatusFromString(eDataType, initialValue);
+			case ComBEPackage.OPERATOR:
+				return createOperatorFromString(eDataType, initialValue);
+			default:
+				throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
+		}
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String convertToString(EDataType eDataType, Object instanceValue) {
+		switch (eDataType.getClassifierID()) {
+			case ComBEPackage.BEHAVIOR_TYPE:
+				return convertBehaviorTypeToString(eDataType, instanceValue);
+			case ComBEPackage.TRACIBILITY_STATUS:
+				return convertTracibilityStatusToString(eDataType, instanceValue);
+			case ComBEPackage.OPERATOR:
+				return convertOperatorToString(eDataType, instanceValue);
+			default:
+				throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
+		}
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public Specification createSpecification() {
+		SpecificationImpl specification = new SpecificationImpl();
+		return specification;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public Requirement createRequirement() {
+		RequirementImpl requirement = new RequirementImpl();
+		return requirement;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public BehaviorSeq createBehaviorSeq() {
+		BehaviorSeqImpl behaviorSeq = new BehaviorSeqImpl();
+		return behaviorSeq;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public Behavior createBehavior() {
+		BehaviorImpl behavior = new BehaviorImpl();
+		return behavior;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public Root createRoot() {
+		RootImpl root = new RootImpl();
+		return root;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public StandardComponent createStandardComponent() {
+		StandardComponentImpl standardComponent = new StandardComponentImpl();
+		return standardComponent;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public SystemComponent createSystemComponent() {
+		SystemComponentImpl systemComponent = new SystemComponentImpl();
+		return systemComponent;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public AtomicSequence createAtomicSequence() {
+		AtomicSequenceImpl atomicSequence = new AtomicSequenceImpl();
+		return atomicSequence;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public AlternativeBranch createAlternativeBranch() {
+		AlternativeBranchImpl alternativeBranch = new AlternativeBranchImpl();
+		return alternativeBranch;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ParallelBranch createParallelBranch() {
+		ParallelBranchImpl parallelBranch = new ParallelBranchImpl();
+		return parallelBranch;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public StandardNode createStandardNode() {
+		StandardNodeImpl standardNode = new StandardNodeImpl();
+		return standardNode;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EmptyNode createEmptyNode() {
+		EmptyNodeImpl emptyNode = new EmptyNodeImpl();
+		return emptyNode;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public BehaviorType createBehaviorTypeFromString(EDataType eDataType, String initialValue) {
+		BehaviorType result = BehaviorType.get(initialValue);
+		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
+		return result;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public String convertBehaviorTypeToString(EDataType eDataType, Object instanceValue) {
+		return instanceValue == null ? null : instanceValue.toString();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public TracibilityStatus createTracibilityStatusFromString(EDataType eDataType, String initialValue) {
+		TracibilityStatus result = TracibilityStatus.get(initialValue);
+		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
+		return result;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public String convertTracibilityStatusToString(EDataType eDataType, Object instanceValue) {
+		return instanceValue == null ? null : instanceValue.toString();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public Operator createOperatorFromString(EDataType eDataType, String initialValue) {
+		Operator result = Operator.get(initialValue);
+		if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
+		return result;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public String convertOperatorToString(EDataType eDataType, Object instanceValue) {
+		return instanceValue == null ? null : instanceValue.toString();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ComBEPackage getComBEPackage() {
+		return (ComBEPackage)getEPackage();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @deprecated
+	 * @generated
+	 */
+	@Deprecated
+	public static ComBEPackage getPackage() {
+		return ComBEPackage.eINSTANCE;
+	}
+
+} //ComBEFactoryImpl

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/ComBEPackageImpl.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/ComBEPackageImpl.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,918 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.impl;
+
+import ComBE.AlternativeBranch;
+import ComBE.AtomicSequence;
+import ComBE.Behavior;
+import ComBE.BehaviorSeq;
+import ComBE.BehaviorTree;
+import ComBE.BehaviorType;
+import ComBE.ComBEFactory;
+import ComBE.ComBEPackage;
+import ComBE.Component;
+import ComBE.EmptyNode;
+import ComBE.Node;
+import ComBE.Operator;
+import ComBE.ParallelBranch;
+import ComBE.Requirement;
+import ComBE.Root;
+import ComBE.Specification;
+import ComBE.StandardComponent;
+import ComBE.StandardNode;
+import ComBE.SystemComponent;
+import ComBE.TracibilityStatus;
+
+import org.eclipse.emf.ecore.EAttribute;
+import org.eclipse.emf.ecore.EClass;
+import org.eclipse.emf.ecore.EEnum;
+import org.eclipse.emf.ecore.EPackage;
+import org.eclipse.emf.ecore.EReference;
+
+import org.eclipse.emf.ecore.impl.EPackageImpl;
+
+/**
+ * <!-- begin-user-doc -->
+ * An implementation of the model <b>Package</b>.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class ComBEPackageImpl extends EPackageImpl implements ComBEPackage {
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private EClass specificationEClass = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private EClass requirementEClass = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private EClass behaviorSeqEClass = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private EClass behaviorEClass = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private EClass rootEClass = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private EClass componentEClass = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private EClass standardComponentEClass = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private EClass systemComponentEClass = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private EClass behaviorTreeEClass = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private EClass atomicSequenceEClass = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private EClass alternativeBranchEClass = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private EClass parallelBranchEClass = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private EClass nodeEClass = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private EClass standardNodeEClass = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private EClass emptyNodeEClass = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private EEnum behaviorTypeEEnum = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private EEnum tracibilityStatusEEnum = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private EEnum operatorEEnum = null;
+
+	/**
+	 * Creates an instance of the model <b>Package</b>, registered with
+	 * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
+	 * package URI value.
+	 * <p>Note: the correct way to create the package is via the static
+	 * factory method {@link #init init()}, which also performs
+	 * initialization of the package, or returns the registered package,
+	 * if one already exists.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see org.eclipse.emf.ecore.EPackage.Registry
+	 * @see ComBE.ComBEPackage#eNS_URI
+	 * @see #init()
+	 * @generated
+	 */
+	private ComBEPackageImpl() {
+		super(eNS_URI, ComBEFactory.eINSTANCE);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private static boolean isInited = false;
+
+	/**
+	 * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
+	 * 
+	 * <p>This method is used to initialize {@link ComBEPackage#eINSTANCE} when that field is accessed.
+	 * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #eNS_URI
+	 * @see #createPackageContents()
+	 * @see #initializePackageContents()
+	 * @generated
+	 */
+	public static ComBEPackage init() {
+		if (isInited) return (ComBEPackage)EPackage.Registry.INSTANCE.getEPackage(ComBEPackage.eNS_URI);
+
+		// Obtain or create and register package
+		ComBEPackageImpl theComBEPackage = (ComBEPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof ComBEPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new ComBEPackageImpl());
+
+		isInited = true;
+
+		// Create package meta-data objects
+		theComBEPackage.createPackageContents();
+
+		// Initialize created meta-data
+		theComBEPackage.initializePackageContents();
+
+		// Mark meta-data to indicate it can't be changed
+		theComBEPackage.freeze();
+
+  
+		// Update the registry and return the package
+		EPackage.Registry.INSTANCE.put(ComBEPackage.eNS_URI, theComBEPackage);
+		return theComBEPackage;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EClass getSpecification() {
+		return specificationEClass;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EReference getSpecification_Requirements() {
+		return (EReference)specificationEClass.getEStructuralFeatures().get(0);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EReference getSpecification_Components() {
+		return (EReference)specificationEClass.getEStructuralFeatures().get(1);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EReference getSpecification_Root() {
+		return (EReference)specificationEClass.getEStructuralFeatures().get(2);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EClass getRequirement() {
+		return requirementEClass;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EAttribute getRequirement_Id() {
+		return (EAttribute)requirementEClass.getEStructuralFeatures().get(0);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EAttribute getRequirement_Label() {
+		return (EAttribute)requirementEClass.getEStructuralFeatures().get(1);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EClass getBehaviorSeq() {
+		return behaviorSeqEClass;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EAttribute getBehaviorSeq_Behaviortype() {
+		return (EAttribute)behaviorSeqEClass.getEStructuralFeatures().get(0);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EReference getBehaviorSeq_Behavior() {
+		return (EReference)behaviorSeqEClass.getEStructuralFeatures().get(1);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EClass getBehavior() {
+		return behaviorEClass;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EAttribute getBehavior_Int() {
+		return (EAttribute)behaviorEClass.getEStructuralFeatures().get(0);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EAttribute getBehavior_Label() {
+		return (EAttribute)behaviorEClass.getEStructuralFeatures().get(1);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EClass getRoot() {
+		return rootEClass;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EReference getRoot_Behaviortree() {
+		return (EReference)rootEClass.getEStructuralFeatures().get(0);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EClass getComponent() {
+		return componentEClass;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EAttribute getComponent_Id() {
+		return (EAttribute)componentEClass.getEStructuralFeatures().get(0);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EAttribute getComponent_Label() {
+		return (EAttribute)componentEClass.getEStructuralFeatures().get(1);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EReference getComponent_Behaviorseqs() {
+		return (EReference)componentEClass.getEStructuralFeatures().get(2);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EClass getStandardComponent() {
+		return standardComponentEClass;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EClass getSystemComponent() {
+		return systemComponentEClass;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EClass getBehaviorTree() {
+		return behaviorTreeEClass;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EReference getBehaviorTree_Nodes() {
+		return (EReference)behaviorTreeEClass.getEStructuralFeatures().get(0);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EClass getAtomicSequence() {
+		return atomicSequenceEClass;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EReference getAtomicSequence_Child() {
+		return (EReference)atomicSequenceEClass.getEStructuralFeatures().get(0);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EClass getAlternativeBranch() {
+		return alternativeBranchEClass;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EReference getAlternativeBranch_Children() {
+		return (EReference)alternativeBranchEClass.getEStructuralFeatures().get(0);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EClass getParallelBranch() {
+		return parallelBranchEClass;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EReference getParallelBranch_Children() {
+		return (EReference)parallelBranchEClass.getEStructuralFeatures().get(0);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EClass getNode() {
+		return nodeEClass;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EAttribute getNode_Label() {
+		return (EAttribute)nodeEClass.getEStructuralFeatures().get(0);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EAttribute getNode_Operator() {
+		return (EAttribute)nodeEClass.getEStructuralFeatures().get(1);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EClass getStandardNode() {
+		return standardNodeEClass;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EReference getStandardNode_Requirement() {
+		return (EReference)standardNodeEClass.getEStructuralFeatures().get(0);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EAttribute getStandardNode_Tracibilitystatus() {
+		return (EAttribute)standardNodeEClass.getEStructuralFeatures().get(1);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EReference getStandardNode_Component() {
+		return (EReference)standardNodeEClass.getEStructuralFeatures().get(2);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EReference getStandardNode_Behavior() {
+		return (EReference)standardNodeEClass.getEStructuralFeatures().get(3);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EClass getEmptyNode() {
+		return emptyNodeEClass;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EEnum getBehaviorType() {
+		return behaviorTypeEEnum;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EEnum getTracibilityStatus() {
+		return tracibilityStatusEEnum;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EEnum getOperator() {
+		return operatorEEnum;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ComBEFactory getComBEFactory() {
+		return (ComBEFactory)getEFactoryInstance();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private boolean isCreated = false;
+
+	/**
+	 * Creates the meta-model objects for the package.  This method is
+	 * guarded to have no affect on any invocation but its first.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void createPackageContents() {
+		if (isCreated) return;
+		isCreated = true;
+
+		// Create classes and their features
+		specificationEClass = createEClass(SPECIFICATION);
+		createEReference(specificationEClass, SPECIFICATION__REQUIREMENTS);
+		createEReference(specificationEClass, SPECIFICATION__COMPONENTS);
+		createEReference(specificationEClass, SPECIFICATION__ROOT);
+
+		requirementEClass = createEClass(REQUIREMENT);
+		createEAttribute(requirementEClass, REQUIREMENT__ID);
+		createEAttribute(requirementEClass, REQUIREMENT__LABEL);
+
+		behaviorSeqEClass = createEClass(BEHAVIOR_SEQ);
+		createEAttribute(behaviorSeqEClass, BEHAVIOR_SEQ__BEHAVIORTYPE);
+		createEReference(behaviorSeqEClass, BEHAVIOR_SEQ__BEHAVIOR);
+
+		behaviorEClass = createEClass(BEHAVIOR);
+		createEAttribute(behaviorEClass, BEHAVIOR__INT);
+		createEAttribute(behaviorEClass, BEHAVIOR__LABEL);
+
+		rootEClass = createEClass(ROOT);
+		createEReference(rootEClass, ROOT__BEHAVIORTREE);
+
+		componentEClass = createEClass(COMPONENT);
+		createEAttribute(componentEClass, COMPONENT__ID);
+		createEAttribute(componentEClass, COMPONENT__LABEL);
+		createEReference(componentEClass, COMPONENT__BEHAVIORSEQS);
+
+		standardComponentEClass = createEClass(STANDARD_COMPONENT);
+
+		systemComponentEClass = createEClass(SYSTEM_COMPONENT);
+
+		behaviorTreeEClass = createEClass(BEHAVIOR_TREE);
+		createEReference(behaviorTreeEClass, BEHAVIOR_TREE__NODES);
+
+		atomicSequenceEClass = createEClass(ATOMIC_SEQUENCE);
+		createEReference(atomicSequenceEClass, ATOMIC_SEQUENCE__CHILD);
+
+		alternativeBranchEClass = createEClass(ALTERNATIVE_BRANCH);
+		createEReference(alternativeBranchEClass, ALTERNATIVE_BRANCH__CHILDREN);
+
+		parallelBranchEClass = createEClass(PARALLEL_BRANCH);
+		createEReference(parallelBranchEClass, PARALLEL_BRANCH__CHILDREN);
+
+		nodeEClass = createEClass(NODE);
+		createEAttribute(nodeEClass, NODE__LABEL);
+		createEAttribute(nodeEClass, NODE__OPERATOR);
+
+		standardNodeEClass = createEClass(STANDARD_NODE);
+		createEReference(standardNodeEClass, STANDARD_NODE__REQUIREMENT);
+		createEAttribute(standardNodeEClass, STANDARD_NODE__TRACIBILITYSTATUS);
+		createEReference(standardNodeEClass, STANDARD_NODE__COMPONENT);
+		createEReference(standardNodeEClass, STANDARD_NODE__BEHAVIOR);
+
+		emptyNodeEClass = createEClass(EMPTY_NODE);
+
+		// Create enums
+		behaviorTypeEEnum = createEEnum(BEHAVIOR_TYPE);
+		tracibilityStatusEEnum = createEEnum(TRACIBILITY_STATUS);
+		operatorEEnum = createEEnum(OPERATOR);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private boolean isInitialized = false;
+
+	/**
+	 * Complete the initialization of the package and its meta-model.  This
+	 * method is guarded to have no affect on any invocation but its first.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void initializePackageContents() {
+		if (isInitialized) return;
+		isInitialized = true;
+
+		// Initialize package
+		setName(eNAME);
+		setNsPrefix(eNS_PREFIX);
+		setNsURI(eNS_URI);
+
+		// Create type parameters
+
+		// Set bounds for type parameters
+
+		// Add supertypes to classes
+		standardComponentEClass.getESuperTypes().add(this.getComponent());
+		systemComponentEClass.getESuperTypes().add(this.getComponent());
+		atomicSequenceEClass.getESuperTypes().add(this.getBehaviorTree());
+		alternativeBranchEClass.getESuperTypes().add(this.getBehaviorTree());
+		parallelBranchEClass.getESuperTypes().add(this.getBehaviorTree());
+		standardNodeEClass.getESuperTypes().add(this.getNode());
+		emptyNodeEClass.getESuperTypes().add(this.getNode());
+
+		// Initialize classes and features; add operations and parameters
+		initEClass(specificationEClass, Specification.class, "Specification", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
+		initEReference(getSpecification_Requirements(), this.getRequirement(), null, "requirements", null, 0, -1, Specification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+		initEReference(getSpecification_Components(), this.getComponent(), null, "components", null, 0, -1, Specification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+		initEReference(getSpecification_Root(), this.getRoot(), null, "root", null, 0, 1, Specification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+
+		initEClass(requirementEClass, Requirement.class, "Requirement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
+		initEAttribute(getRequirement_Id(), ecorePackage.getEString(), "id", null, 1, 1, Requirement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+		initEAttribute(getRequirement_Label(), ecorePackage.getEString(), "label", null, 1, 1, Requirement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+
+		initEClass(behaviorSeqEClass, BehaviorSeq.class, "BehaviorSeq", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
+		initEAttribute(getBehaviorSeq_Behaviortype(), this.getBehaviorType(), "behaviortype", null, 1, 1, BehaviorSeq.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+		initEReference(getBehaviorSeq_Behavior(), this.getBehavior(), null, "behavior", null, 0, -1, BehaviorSeq.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+
+		initEClass(behaviorEClass, Behavior.class, "Behavior", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
+		initEAttribute(getBehavior_Int(), ecorePackage.getEInt(), "int", null, 1, 1, Behavior.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+		initEAttribute(getBehavior_Label(), ecorePackage.getEString(), "label", null, 1, 1, Behavior.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+
+		initEClass(rootEClass, Root.class, "Root", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
+		initEReference(getRoot_Behaviortree(), this.getBehaviorTree(), null, "behaviortree", null, 1, 1, Root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+
+		initEClass(componentEClass, Component.class, "Component", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
+		initEAttribute(getComponent_Id(), ecorePackage.getEString(), "id", null, 1, 1, Component.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+		initEAttribute(getComponent_Label(), ecorePackage.getEString(), "label", null, 1, 1, Component.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+		initEReference(getComponent_Behaviorseqs(), this.getBehaviorSeq(), null, "behaviorseqs", null, 0, -1, Component.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+
+		initEClass(standardComponentEClass, StandardComponent.class, "StandardComponent", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
+
+		initEClass(systemComponentEClass, SystemComponent.class, "SystemComponent", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
+
+		initEClass(behaviorTreeEClass, BehaviorTree.class, "BehaviorTree", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
+		initEReference(getBehaviorTree_Nodes(), this.getNode(), null, "nodes", null, 1, -1, BehaviorTree.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+
+		initEClass(atomicSequenceEClass, AtomicSequence.class, "AtomicSequence", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
+		initEReference(getAtomicSequence_Child(), this.getBehaviorTree(), null, "child", null, 0, 1, AtomicSequence.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+
+		initEClass(alternativeBranchEClass, AlternativeBranch.class, "AlternativeBranch", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
+		initEReference(getAlternativeBranch_Children(), this.getBehaviorTree(), null, "children", null, 0, -1, AlternativeBranch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+
+		initEClass(parallelBranchEClass, ParallelBranch.class, "ParallelBranch", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
+		initEReference(getParallelBranch_Children(), this.getBehaviorTree(), null, "children", null, 0, -1, ParallelBranch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+
+		initEClass(nodeEClass, Node.class, "Node", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
+		initEAttribute(getNode_Label(), ecorePackage.getEString(), "label", null, 0, 1, Node.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+		initEAttribute(getNode_Operator(), this.getOperator(), "operator", null, 1, 1, Node.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+
+		initEClass(standardNodeEClass, StandardNode.class, "StandardNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
+		initEReference(getStandardNode_Requirement(), this.getRequirement(), null, "requirement", null, 1, 1, StandardNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+		initEAttribute(getStandardNode_Tracibilitystatus(), this.getTracibilityStatus(), "tracibilitystatus", null, 1, 1, StandardNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+		initEReference(getStandardNode_Component(), this.getComponent(), null, "component", null, 1, 1, StandardNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+		initEReference(getStandardNode_Behavior(), this.getBehavior(), null, "behavior", null, 1, 1, StandardNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
+
+		initEClass(emptyNodeEClass, EmptyNode.class, "EmptyNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
+
+		// Initialize enums and add enum literals
+		initEEnum(behaviorTypeEEnum, BehaviorType.class, "BehaviorType");
+		addEEnumLiteral(behaviorTypeEEnum, BehaviorType.STATE_REALISATION);
+		addEEnumLiteral(behaviorTypeEEnum, BehaviorType.SELECTION);
+		addEEnumLiteral(behaviorTypeEEnum, BehaviorType.EVENT);
+		addEEnumLiteral(behaviorTypeEEnum, BehaviorType.GUARD);
+		addEEnumLiteral(behaviorTypeEEnum, BehaviorType.II_EVENT);
+		addEEnumLiteral(behaviorTypeEEnum, BehaviorType.IO_EVENT);
+		addEEnumLiteral(behaviorTypeEEnum, BehaviorType.EI_EVENT);
+		addEEnumLiteral(behaviorTypeEEnum, BehaviorType.EO_EVENT);
+		addEEnumLiteral(behaviorTypeEEnum, BehaviorType.ASSERTION);
+
+		initEEnum(tracibilityStatusEEnum, TracibilityStatus.class, "TracibilityStatus");
+		addEEnumLiteral(tracibilityStatusEEnum, TracibilityStatus.NONE);
+		addEEnumLiteral(tracibilityStatusEEnum, TracibilityStatus.IMPLIED);
+		addEEnumLiteral(tracibilityStatusEEnum, TracibilityStatus.MISSING);
+		addEEnumLiteral(tracibilityStatusEEnum, TracibilityStatus.UPDATED);
+		addEEnumLiteral(tracibilityStatusEEnum, TracibilityStatus.DELETED);
+		addEEnumLiteral(tracibilityStatusEEnum, TracibilityStatus.REFINEMENT);
+
+		initEEnum(operatorEEnum, Operator.class, "Operator");
+		addEEnumLiteral(operatorEEnum, Operator.NONE);
+		addEEnumLiteral(operatorEEnum, Operator.BRANCH_KILL);
+		addEEnumLiteral(operatorEEnum, Operator.CONJUNCTION);
+		addEEnumLiteral(operatorEEnum, Operator.DISJUNCTION);
+		addEEnumLiteral(operatorEEnum, Operator.MAY);
+		addEEnumLiteral(operatorEEnum, Operator.REFERENCE);
+		addEEnumLiteral(operatorEEnum, Operator.REVERSION);
+		addEEnumLiteral(operatorEEnum, Operator.START_NEW);
+		addEEnumLiteral(operatorEEnum, Operator.SYNCHRONISATION);
+		addEEnumLiteral(operatorEEnum, Operator.XOR);
+
+		// Create resource
+		createResource(eNS_URI);
+
+		// Create annotations
+		// StrategoTerm.index
+		createStrategoTermAnnotations();
+	}
+
+	/**
+	 * Initializes the annotations for <b>StrategoTerm.index</b>.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void createStrategoTermAnnotations() {
+		String source = "StrategoTerm.index";		
+		addAnnotation
+		  (specificationEClass, 
+		   source, 
+		   new String[] {
+			 "0", "requirements",
+			 "1", "components",
+			 "2", "root"
+		   });		
+		addAnnotation
+		  (requirementEClass, 
+		   source, 
+		   new String[] {
+			 "0", "id",
+			 "1", "label"
+		   });		
+		addAnnotation
+		  (behaviorSeqEClass, 
+		   source, 
+		   new String[] {
+			 "0", "behaviortype",
+			 "1", "behavior"
+		   });		
+		addAnnotation
+		  (behaviorEClass, 
+		   source, 
+		   new String[] {
+			 "0", "int",
+			 "1", "label"
+		   });		
+		addAnnotation
+		  (rootEClass, 
+		   source, 
+		   new String[] {
+			 "0", "behaviortree"
+		   });		
+		addAnnotation
+		  (standardComponentEClass, 
+		   source, 
+		   new String[] {
+			 "0", "id",
+			 "1", "label",
+			 "2", "behaviorseqs"
+		   });		
+		addAnnotation
+		  (systemComponentEClass, 
+		   source, 
+		   new String[] {
+			 "0", "id",
+			 "1", "label",
+			 "2", "behaviorseqs"
+		   });		
+		addAnnotation
+		  (atomicSequenceEClass, 
+		   source, 
+		   new String[] {
+			 "0", "nodes",
+			 "1", "child"
+		   });		
+		addAnnotation
+		  (alternativeBranchEClass, 
+		   source, 
+		   new String[] {
+			 "0", "nodes",
+			 "1", "children"
+		   });		
+		addAnnotation
+		  (parallelBranchEClass, 
+		   source, 
+		   new String[] {
+			 "0", "nodes",
+			 "1", "children"
+		   });		
+		addAnnotation
+		  (standardNodeEClass, 
+		   source, 
+		   new String[] {
+			 "0", "requirement",
+			 "1", "tracibilitystatus",
+			 "2", "component",
+			 "3", "behavior",
+			 "4", "label",
+			 "5", "operator"
+		   });		
+		addAnnotation
+		  (emptyNodeEClass, 
+		   source, 
+		   new String[] {
+			 "0", "label",
+			 "1", "operator"
+		   });
+	}
+
+} //ComBEPackageImpl

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/ComponentImpl.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/ComponentImpl.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,280 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.impl;
+
+import ComBE.BehaviorSeq;
+import ComBE.ComBEPackage;
+import ComBE.Component;
+
+import java.util.Collection;
+
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.common.notify.NotificationChain;
+
+import org.eclipse.emf.common.util.EList;
+
+import org.eclipse.emf.ecore.EClass;
+import org.eclipse.emf.ecore.InternalEObject;
+
+import org.eclipse.emf.ecore.impl.ENotificationImpl;
+import org.eclipse.emf.ecore.impl.EObjectImpl;
+
+import org.eclipse.emf.ecore.util.EObjectContainmentEList;
+import org.eclipse.emf.ecore.util.InternalEList;
+
+/**
+ * <!-- begin-user-doc -->
+ * An implementation of the model object '<em><b>Component</b></em>'.
+ * <!-- end-user-doc -->
+ * <p>
+ * The following features are implemented:
+ * <ul>
+ *   <li>{@link ComBE.impl.ComponentImpl#getId <em>Id</em>}</li>
+ *   <li>{@link ComBE.impl.ComponentImpl#getLabel <em>Label</em>}</li>
+ *   <li>{@link ComBE.impl.ComponentImpl#getBehaviorseqs <em>Behaviorseqs</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @generated
+ */
+public abstract class ComponentImpl extends EObjectImpl implements Component {
+	/**
+	 * The default value of the '{@link #getId() <em>Id</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getId()
+	 * @generated
+	 * @ordered
+	 */
+	protected static final String ID_EDEFAULT = null;
+
+	/**
+	 * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getId()
+	 * @generated
+	 * @ordered
+	 */
+	protected String id = ID_EDEFAULT;
+
+	/**
+	 * The default value of the '{@link #getLabel() <em>Label</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getLabel()
+	 * @generated
+	 * @ordered
+	 */
+	protected static final String LABEL_EDEFAULT = null;
+
+	/**
+	 * The cached value of the '{@link #getLabel() <em>Label</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getLabel()
+	 * @generated
+	 * @ordered
+	 */
+	protected String label = LABEL_EDEFAULT;
+
+	/**
+	 * The cached value of the '{@link #getBehaviorseqs() <em>Behaviorseqs</em>}' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getBehaviorseqs()
+	 * @generated
+	 * @ordered
+	 */
+	protected EList<BehaviorSeq> behaviorseqs;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected ComponentImpl() {
+		super();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EClass eStaticClass() {
+		return ComBEPackage.Literals.COMPONENT;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public String getId() {
+		return id;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setId(String newId) {
+		String oldId = id;
+		id = newId;
+		if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, ComBEPackage.COMPONENT__ID, oldId, id));
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public String getLabel() {
+		return label;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setLabel(String newLabel) {
+		String oldLabel = label;
+		label = newLabel;
+		if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, ComBEPackage.COMPONENT__LABEL, oldLabel, label));
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EList<BehaviorSeq> getBehaviorseqs() {
+		if (behaviorseqs == null) {
+			behaviorseqs = new EObjectContainmentEList<BehaviorSeq>(BehaviorSeq.class, this, ComBEPackage.COMPONENT__BEHAVIORSEQS);
+		}
+		return behaviorseqs;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
+		switch (featureID) {
+			case ComBEPackage.COMPONENT__BEHAVIORSEQS:
+				return ((InternalEList<?>)getBehaviorseqs()).basicRemove(otherEnd, msgs);
+		}
+		return super.eInverseRemove(otherEnd, featureID, msgs);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object eGet(int featureID, boolean resolve, boolean coreType) {
+		switch (featureID) {
+			case ComBEPackage.COMPONENT__ID:
+				return getId();
+			case ComBEPackage.COMPONENT__LABEL:
+				return getLabel();
+			case ComBEPackage.COMPONENT__BEHAVIORSEQS:
+				return getBehaviorseqs();
+		}
+		return super.eGet(featureID, resolve, coreType);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@SuppressWarnings("unchecked")
+	@Override
+	public void eSet(int featureID, Object newValue) {
+		switch (featureID) {
+			case ComBEPackage.COMPONENT__ID:
+				setId((String)newValue);
+				return;
+			case ComBEPackage.COMPONENT__LABEL:
+				setLabel((String)newValue);
+				return;
+			case ComBEPackage.COMPONENT__BEHAVIORSEQS:
+				getBehaviorseqs().clear();
+				getBehaviorseqs().addAll((Collection<? extends BehaviorSeq>)newValue);
+				return;
+		}
+		super.eSet(featureID, newValue);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void eUnset(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.COMPONENT__ID:
+				setId(ID_EDEFAULT);
+				return;
+			case ComBEPackage.COMPONENT__LABEL:
+				setLabel(LABEL_EDEFAULT);
+				return;
+			case ComBEPackage.COMPONENT__BEHAVIORSEQS:
+				getBehaviorseqs().clear();
+				return;
+		}
+		super.eUnset(featureID);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public boolean eIsSet(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.COMPONENT__ID:
+				return ID_EDEFAULT == null ? id != null : !ID_EDEFAULT.equals(id);
+			case ComBEPackage.COMPONENT__LABEL:
+				return LABEL_EDEFAULT == null ? label != null : !LABEL_EDEFAULT.equals(label);
+			case ComBEPackage.COMPONENT__BEHAVIORSEQS:
+				return behaviorseqs != null && !behaviorseqs.isEmpty();
+		}
+		return super.eIsSet(featureID);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String toString() {
+		if (eIsProxy()) return super.toString();
+
+		StringBuffer result = new StringBuffer(super.toString());
+		result.append(" (id: ");
+		result.append(id);
+		result.append(", label: ");
+		result.append(label);
+		result.append(')');
+		return result.toString();
+	}
+
+} //ComponentImpl

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/EmptyNodeImpl.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/EmptyNodeImpl.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,43 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.impl;
+
+import ComBE.ComBEPackage;
+import ComBE.EmptyNode;
+
+import org.eclipse.emf.ecore.EClass;
+
+/**
+ * <!-- begin-user-doc -->
+ * An implementation of the model object '<em><b>Empty Node</b></em>'.
+ * <!-- end-user-doc -->
+ * <p>
+ * </p>
+ *
+ * @generated
+ */
+public class EmptyNodeImpl extends NodeImpl implements EmptyNode {
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected EmptyNodeImpl() {
+		super();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EClass eStaticClass() {
+		return ComBEPackage.Literals.EMPTY_NODE;
+	}
+
+} //EmptyNodeImpl

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/NodeImpl.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/NodeImpl.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,222 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.impl;
+
+import ComBE.ComBEPackage;
+import ComBE.Node;
+import ComBE.Operator;
+
+import org.eclipse.emf.common.notify.Notification;
+
+import org.eclipse.emf.ecore.EClass;
+
+import org.eclipse.emf.ecore.impl.ENotificationImpl;
+import org.eclipse.emf.ecore.impl.EObjectImpl;
+
+/**
+ * <!-- begin-user-doc -->
+ * An implementation of the model object '<em><b>Node</b></em>'.
+ * <!-- end-user-doc -->
+ * <p>
+ * The following features are implemented:
+ * <ul>
+ *   <li>{@link ComBE.impl.NodeImpl#getLabel <em>Label</em>}</li>
+ *   <li>{@link ComBE.impl.NodeImpl#getOperator <em>Operator</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @generated
+ */
+public abstract class NodeImpl extends EObjectImpl implements Node {
+	/**
+	 * The default value of the '{@link #getLabel() <em>Label</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getLabel()
+	 * @generated
+	 * @ordered
+	 */
+	protected static final String LABEL_EDEFAULT = null;
+
+	/**
+	 * The cached value of the '{@link #getLabel() <em>Label</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getLabel()
+	 * @generated
+	 * @ordered
+	 */
+	protected String label = LABEL_EDEFAULT;
+
+	/**
+	 * The default value of the '{@link #getOperator() <em>Operator</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getOperator()
+	 * @generated
+	 * @ordered
+	 */
+	protected static final Operator OPERATOR_EDEFAULT = Operator.NONE;
+
+	/**
+	 * The cached value of the '{@link #getOperator() <em>Operator</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getOperator()
+	 * @generated
+	 * @ordered
+	 */
+	protected Operator operator = OPERATOR_EDEFAULT;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected NodeImpl() {
+		super();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EClass eStaticClass() {
+		return ComBEPackage.Literals.NODE;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public String getLabel() {
+		return label;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setLabel(String newLabel) {
+		String oldLabel = label;
+		label = newLabel;
+		if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, ComBEPackage.NODE__LABEL, oldLabel, label));
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public Operator getOperator() {
+		return operator;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setOperator(Operator newOperator) {
+		Operator oldOperator = operator;
+		operator = newOperator == null ? OPERATOR_EDEFAULT : newOperator;
+		if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, ComBEPackage.NODE__OPERATOR, oldOperator, operator));
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object eGet(int featureID, boolean resolve, boolean coreType) {
+		switch (featureID) {
+			case ComBEPackage.NODE__LABEL:
+				return getLabel();
+			case ComBEPackage.NODE__OPERATOR:
+				return getOperator();
+		}
+		return super.eGet(featureID, resolve, coreType);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void eSet(int featureID, Object newValue) {
+		switch (featureID) {
+			case ComBEPackage.NODE__LABEL:
+				setLabel((String)newValue);
+				return;
+			case ComBEPackage.NODE__OPERATOR:
+				setOperator((Operator)newValue);
+				return;
+		}
+		super.eSet(featureID, newValue);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void eUnset(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.NODE__LABEL:
+				setLabel(LABEL_EDEFAULT);
+				return;
+			case ComBEPackage.NODE__OPERATOR:
+				setOperator(OPERATOR_EDEFAULT);
+				return;
+		}
+		super.eUnset(featureID);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public boolean eIsSet(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.NODE__LABEL:
+				return LABEL_EDEFAULT == null ? label != null : !LABEL_EDEFAULT.equals(label);
+			case ComBEPackage.NODE__OPERATOR:
+				return operator != OPERATOR_EDEFAULT;
+		}
+		return super.eIsSet(featureID);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String toString() {
+		if (eIsProxy()) return super.toString();
+
+		StringBuffer result = new StringBuffer(super.toString());
+		result.append(" (label: ");
+		result.append(label);
+		result.append(", operator: ");
+		result.append(operator);
+		result.append(')');
+		return result.toString();
+	}
+
+} //NodeImpl

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/ParallelBranchImpl.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/ParallelBranchImpl.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,154 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.impl;
+
+import ComBE.BehaviorTree;
+import ComBE.ComBEPackage;
+import ComBE.ParallelBranch;
+
+import java.util.Collection;
+
+import org.eclipse.emf.common.notify.NotificationChain;
+
+import org.eclipse.emf.common.util.EList;
+
+import org.eclipse.emf.ecore.EClass;
+import org.eclipse.emf.ecore.InternalEObject;
+
+import org.eclipse.emf.ecore.util.EObjectContainmentEList;
+import org.eclipse.emf.ecore.util.InternalEList;
+
+/**
+ * <!-- begin-user-doc -->
+ * An implementation of the model object '<em><b>Parallel Branch</b></em>'.
+ * <!-- end-user-doc -->
+ * <p>
+ * The following features are implemented:
+ * <ul>
+ *   <li>{@link ComBE.impl.ParallelBranchImpl#getChildren <em>Children</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @generated
+ */
+public class ParallelBranchImpl extends BehaviorTreeImpl implements ParallelBranch {
+	/**
+	 * The cached value of the '{@link #getChildren() <em>Children</em>}' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getChildren()
+	 * @generated
+	 * @ordered
+	 */
+	protected EList<BehaviorTree> children;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected ParallelBranchImpl() {
+		super();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EClass eStaticClass() {
+		return ComBEPackage.Literals.PARALLEL_BRANCH;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EList<BehaviorTree> getChildren() {
+		if (children == null) {
+			children = new EObjectContainmentEList<BehaviorTree>(BehaviorTree.class, this, ComBEPackage.PARALLEL_BRANCH__CHILDREN);
+		}
+		return children;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
+		switch (featureID) {
+			case ComBEPackage.PARALLEL_BRANCH__CHILDREN:
+				return ((InternalEList<?>)getChildren()).basicRemove(otherEnd, msgs);
+		}
+		return super.eInverseRemove(otherEnd, featureID, msgs);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object eGet(int featureID, boolean resolve, boolean coreType) {
+		switch (featureID) {
+			case ComBEPackage.PARALLEL_BRANCH__CHILDREN:
+				return getChildren();
+		}
+		return super.eGet(featureID, resolve, coreType);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@SuppressWarnings("unchecked")
+	@Override
+	public void eSet(int featureID, Object newValue) {
+		switch (featureID) {
+			case ComBEPackage.PARALLEL_BRANCH__CHILDREN:
+				getChildren().clear();
+				getChildren().addAll((Collection<? extends BehaviorTree>)newValue);
+				return;
+		}
+		super.eSet(featureID, newValue);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void eUnset(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.PARALLEL_BRANCH__CHILDREN:
+				getChildren().clear();
+				return;
+		}
+		super.eUnset(featureID);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public boolean eIsSet(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.PARALLEL_BRANCH__CHILDREN:
+				return children != null && !children.isEmpty();
+		}
+		return super.eIsSet(featureID);
+	}
+
+} //ParallelBranchImpl

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/RequirementImpl.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/RequirementImpl.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,221 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.impl;
+
+import ComBE.ComBEPackage;
+import ComBE.Requirement;
+
+import org.eclipse.emf.common.notify.Notification;
+
+import org.eclipse.emf.ecore.EClass;
+
+import org.eclipse.emf.ecore.impl.ENotificationImpl;
+import org.eclipse.emf.ecore.impl.EObjectImpl;
+
+/**
+ * <!-- begin-user-doc -->
+ * An implementation of the model object '<em><b>Requirement</b></em>'.
+ * <!-- end-user-doc -->
+ * <p>
+ * The following features are implemented:
+ * <ul>
+ *   <li>{@link ComBE.impl.RequirementImpl#getId <em>Id</em>}</li>
+ *   <li>{@link ComBE.impl.RequirementImpl#getLabel <em>Label</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @generated
+ */
+public class RequirementImpl extends EObjectImpl implements Requirement {
+	/**
+	 * The default value of the '{@link #getId() <em>Id</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getId()
+	 * @generated
+	 * @ordered
+	 */
+	protected static final String ID_EDEFAULT = null;
+
+	/**
+	 * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getId()
+	 * @generated
+	 * @ordered
+	 */
+	protected String id = ID_EDEFAULT;
+
+	/**
+	 * The default value of the '{@link #getLabel() <em>Label</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getLabel()
+	 * @generated
+	 * @ordered
+	 */
+	protected static final String LABEL_EDEFAULT = null;
+
+	/**
+	 * The cached value of the '{@link #getLabel() <em>Label</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getLabel()
+	 * @generated
+	 * @ordered
+	 */
+	protected String label = LABEL_EDEFAULT;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected RequirementImpl() {
+		super();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EClass eStaticClass() {
+		return ComBEPackage.Literals.REQUIREMENT;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public String getId() {
+		return id;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setId(String newId) {
+		String oldId = id;
+		id = newId;
+		if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, ComBEPackage.REQUIREMENT__ID, oldId, id));
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public String getLabel() {
+		return label;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setLabel(String newLabel) {
+		String oldLabel = label;
+		label = newLabel;
+		if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, ComBEPackage.REQUIREMENT__LABEL, oldLabel, label));
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object eGet(int featureID, boolean resolve, boolean coreType) {
+		switch (featureID) {
+			case ComBEPackage.REQUIREMENT__ID:
+				return getId();
+			case ComBEPackage.REQUIREMENT__LABEL:
+				return getLabel();
+		}
+		return super.eGet(featureID, resolve, coreType);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void eSet(int featureID, Object newValue) {
+		switch (featureID) {
+			case ComBEPackage.REQUIREMENT__ID:
+				setId((String)newValue);
+				return;
+			case ComBEPackage.REQUIREMENT__LABEL:
+				setLabel((String)newValue);
+				return;
+		}
+		super.eSet(featureID, newValue);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void eUnset(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.REQUIREMENT__ID:
+				setId(ID_EDEFAULT);
+				return;
+			case ComBEPackage.REQUIREMENT__LABEL:
+				setLabel(LABEL_EDEFAULT);
+				return;
+		}
+		super.eUnset(featureID);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public boolean eIsSet(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.REQUIREMENT__ID:
+				return ID_EDEFAULT == null ? id != null : !ID_EDEFAULT.equals(id);
+			case ComBEPackage.REQUIREMENT__LABEL:
+				return LABEL_EDEFAULT == null ? label != null : !LABEL_EDEFAULT.equals(label);
+		}
+		return super.eIsSet(featureID);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String toString() {
+		if (eIsProxy()) return super.toString();
+
+		StringBuffer result = new StringBuffer(super.toString());
+		result.append(" (id: ");
+		result.append(id);
+		result.append(", label: ");
+		result.append(label);
+		result.append(')');
+		return result.toString();
+	}
+
+} //RequirementImpl

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/RootImpl.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/RootImpl.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,180 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.impl;
+
+import ComBE.BehaviorTree;
+import ComBE.ComBEPackage;
+import ComBE.Root;
+
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.common.notify.NotificationChain;
+
+import org.eclipse.emf.ecore.EClass;
+import org.eclipse.emf.ecore.InternalEObject;
+
+import org.eclipse.emf.ecore.impl.ENotificationImpl;
+import org.eclipse.emf.ecore.impl.EObjectImpl;
+
+/**
+ * <!-- begin-user-doc -->
+ * An implementation of the model object '<em><b>Root</b></em>'.
+ * <!-- end-user-doc -->
+ * <p>
+ * The following features are implemented:
+ * <ul>
+ *   <li>{@link ComBE.impl.RootImpl#getBehaviortree <em>Behaviortree</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @generated
+ */
+public class RootImpl extends EObjectImpl implements Root {
+	/**
+	 * The cached value of the '{@link #getBehaviortree() <em>Behaviortree</em>}' containment reference.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getBehaviortree()
+	 * @generated
+	 * @ordered
+	 */
+	protected BehaviorTree behaviortree;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected RootImpl() {
+		super();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EClass eStaticClass() {
+		return ComBEPackage.Literals.ROOT;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public BehaviorTree getBehaviortree() {
+		return behaviortree;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public NotificationChain basicSetBehaviortree(BehaviorTree newBehaviortree, NotificationChain msgs) {
+		BehaviorTree oldBehaviortree = behaviortree;
+		behaviortree = newBehaviortree;
+		if (eNotificationRequired()) {
+			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComBEPackage.ROOT__BEHAVIORTREE, oldBehaviortree, newBehaviortree);
+			if (msgs == null) msgs = notification; else msgs.add(notification);
+		}
+		return msgs;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setBehaviortree(BehaviorTree newBehaviortree) {
+		if (newBehaviortree != behaviortree) {
+			NotificationChain msgs = null;
+			if (behaviortree != null)
+				msgs = ((InternalEObject)behaviortree).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComBEPackage.ROOT__BEHAVIORTREE, null, msgs);
+			if (newBehaviortree != null)
+				msgs = ((InternalEObject)newBehaviortree).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComBEPackage.ROOT__BEHAVIORTREE, null, msgs);
+			msgs = basicSetBehaviortree(newBehaviortree, msgs);
+			if (msgs != null) msgs.dispatch();
+		}
+		else if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, ComBEPackage.ROOT__BEHAVIORTREE, newBehaviortree, newBehaviortree));
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
+		switch (featureID) {
+			case ComBEPackage.ROOT__BEHAVIORTREE:
+				return basicSetBehaviortree(null, msgs);
+		}
+		return super.eInverseRemove(otherEnd, featureID, msgs);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object eGet(int featureID, boolean resolve, boolean coreType) {
+		switch (featureID) {
+			case ComBEPackage.ROOT__BEHAVIORTREE:
+				return getBehaviortree();
+		}
+		return super.eGet(featureID, resolve, coreType);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void eSet(int featureID, Object newValue) {
+		switch (featureID) {
+			case ComBEPackage.ROOT__BEHAVIORTREE:
+				setBehaviortree((BehaviorTree)newValue);
+				return;
+		}
+		super.eSet(featureID, newValue);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void eUnset(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.ROOT__BEHAVIORTREE:
+				setBehaviortree((BehaviorTree)null);
+				return;
+		}
+		super.eUnset(featureID);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public boolean eIsSet(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.ROOT__BEHAVIORTREE:
+				return behaviortree != null;
+		}
+		return super.eIsSet(featureID);
+	}
+
+} //RootImpl

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/SpecificationImpl.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/SpecificationImpl.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,262 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.impl;
+
+import ComBE.ComBEPackage;
+import ComBE.Component;
+import ComBE.Requirement;
+import ComBE.Root;
+import ComBE.Specification;
+
+import java.util.Collection;
+
+import org.eclipse.emf.common.notify.Notification;
+import org.eclipse.emf.common.notify.NotificationChain;
+
+import org.eclipse.emf.common.util.EList;
+
+import org.eclipse.emf.ecore.EClass;
+import org.eclipse.emf.ecore.InternalEObject;
+
+import org.eclipse.emf.ecore.impl.ENotificationImpl;
+import org.eclipse.emf.ecore.impl.EObjectImpl;
+
+import org.eclipse.emf.ecore.util.EObjectContainmentEList;
+import org.eclipse.emf.ecore.util.InternalEList;
+
+/**
+ * <!-- begin-user-doc -->
+ * An implementation of the model object '<em><b>Specification</b></em>'.
+ * <!-- end-user-doc -->
+ * <p>
+ * The following features are implemented:
+ * <ul>
+ *   <li>{@link ComBE.impl.SpecificationImpl#getRequirements <em>Requirements</em>}</li>
+ *   <li>{@link ComBE.impl.SpecificationImpl#getComponents <em>Components</em>}</li>
+ *   <li>{@link ComBE.impl.SpecificationImpl#getRoot <em>Root</em>}</li>
+ * </ul>
+ * </p>
+ *
+ * @generated
+ */
+public class SpecificationImpl extends EObjectImpl implements Specification {
+	/**
+	 * The cached value of the '{@link #getRequirements() <em>Requirements</em>}' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getRequirements()
+	 * @generated
+	 * @ordered
+	 */
+	protected EList<Requirement> requirements;
+
+	/**
+	 * The cached value of the '{@link #getComponents() <em>Components</em>}' containment reference list.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getComponents()
+	 * @generated
+	 * @ordered
+	 */
+	protected EList<Component> components;
+
+	/**
+	 * The cached value of the '{@link #getRoot() <em>Root</em>}' containment reference.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getRoot()
+	 * @generated
+	 * @ordered
+	 */
+	protected Root root;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected SpecificationImpl() {
+		super();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EClass eStaticClass() {
+		return ComBEPackage.Literals.SPECIFICATION;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EList<Requirement> getRequirements() {
+		if (requirements == null) {
+			requirements = new EObjectContainmentEList<Requirement>(Requirement.class, this, ComBEPackage.SPECIFICATION__REQUIREMENTS);
+		}
+		return requirements;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EList<Component> getComponents() {
+		if (components == null) {
+			components = new EObjectContainmentEList<Component>(Component.class, this, ComBEPackage.SPECIFICATION__COMPONENTS);
+		}
+		return components;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public Root getRoot() {
+		return root;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public NotificationChain basicSetRoot(Root newRoot, NotificationChain msgs) {
+		Root oldRoot = root;
+		root = newRoot;
+		if (eNotificationRequired()) {
+			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComBEPackage.SPECIFICATION__ROOT, oldRoot, newRoot);
+			if (msgs == null) msgs = notification; else msgs.add(notification);
+		}
+		return msgs;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setRoot(Root newRoot) {
+		if (newRoot != root) {
+			NotificationChain msgs = null;
+			if (root != null)
+				msgs = ((InternalEObject)root).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComBEPackage.SPECIFICATION__ROOT, null, msgs);
+			if (newRoot != null)
+				msgs = ((InternalEObject)newRoot).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComBEPackage.SPECIFICATION__ROOT, null, msgs);
+			msgs = basicSetRoot(newRoot, msgs);
+			if (msgs != null) msgs.dispatch();
+		}
+		else if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, ComBEPackage.SPECIFICATION__ROOT, newRoot, newRoot));
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
+		switch (featureID) {
+			case ComBEPackage.SPECIFICATION__REQUIREMENTS:
+				return ((InternalEList<?>)getRequirements()).basicRemove(otherEnd, msgs);
+			case ComBEPackage.SPECIFICATION__COMPONENTS:
+				return ((InternalEList<?>)getComponents()).basicRemove(otherEnd, msgs);
+			case ComBEPackage.SPECIFICATION__ROOT:
+				return basicSetRoot(null, msgs);
+		}
+		return super.eInverseRemove(otherEnd, featureID, msgs);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object eGet(int featureID, boolean resolve, boolean coreType) {
+		switch (featureID) {
+			case ComBEPackage.SPECIFICATION__REQUIREMENTS:
+				return getRequirements();
+			case ComBEPackage.SPECIFICATION__COMPONENTS:
+				return getComponents();
+			case ComBEPackage.SPECIFICATION__ROOT:
+				return getRoot();
+		}
+		return super.eGet(featureID, resolve, coreType);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@SuppressWarnings("unchecked")
+	@Override
+	public void eSet(int featureID, Object newValue) {
+		switch (featureID) {
+			case ComBEPackage.SPECIFICATION__REQUIREMENTS:
+				getRequirements().clear();
+				getRequirements().addAll((Collection<? extends Requirement>)newValue);
+				return;
+			case ComBEPackage.SPECIFICATION__COMPONENTS:
+				getComponents().clear();
+				getComponents().addAll((Collection<? extends Component>)newValue);
+				return;
+			case ComBEPackage.SPECIFICATION__ROOT:
+				setRoot((Root)newValue);
+				return;
+		}
+		super.eSet(featureID, newValue);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void eUnset(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.SPECIFICATION__REQUIREMENTS:
+				getRequirements().clear();
+				return;
+			case ComBEPackage.SPECIFICATION__COMPONENTS:
+				getComponents().clear();
+				return;
+			case ComBEPackage.SPECIFICATION__ROOT:
+				setRoot((Root)null);
+				return;
+		}
+		super.eUnset(featureID);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public boolean eIsSet(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.SPECIFICATION__REQUIREMENTS:
+				return requirements != null && !requirements.isEmpty();
+			case ComBEPackage.SPECIFICATION__COMPONENTS:
+				return components != null && !components.isEmpty();
+			case ComBEPackage.SPECIFICATION__ROOT:
+				return root != null;
+		}
+		return super.eIsSet(featureID);
+	}
+
+} //SpecificationImpl

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/StandardComponentImpl.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/StandardComponentImpl.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,43 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.impl;
+
+import ComBE.ComBEPackage;
+import ComBE.StandardComponent;
+
+import org.eclipse.emf.ecore.EClass;
+
+/**
+ * <!-- begin-user-doc -->
+ * An implementation of the model object '<em><b>Standard Component</b></em>'.
+ * <!-- end-user-doc -->
+ * <p>
+ * </p>
+ *
+ * @generated
+ */
+public class StandardComponentImpl extends ComponentImpl implements StandardComponent {
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected StandardComponentImpl() {
+		super();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EClass eStaticClass() {
+		return ComBEPackage.Literals.STANDARD_COMPONENT;
+	}
+
+} //StandardComponentImpl

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/StandardNodeImpl.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/StandardNodeImpl.java	Mon Jul 16 01:41:33 2012	(r25201)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/StandardNodeImpl.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -32,8 +32,6 @@
  *   <li>{@link ComBE.impl.StandardNodeImpl#getTracibilitystatus <em>Tracibilitystatus</em>}</li>
  *   <li>{@link ComBE.impl.StandardNodeImpl#getComponent <em>Component</em>}</li>
  *   <li>{@link ComBE.impl.StandardNodeImpl#getBehavior <em>Behavior</em>}</li>
- *   <li>{@link ComBE.impl.StandardNodeImpl#getLabel <em>Label</em>}</li>
- *   <li>{@link ComBE.impl.StandardNodeImpl#getOperator <em>Operator</em>}</li>
  * </ul>
  * </p>
  *
@@ -42,6 +40,229 @@
 public class StandardNodeImpl extends NodeImpl implements StandardNode {
 
 	/**
+	 * The cached value of the '{@link #getRequirement() <em>Requirement</em>}' reference.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getRequirement()
+	 * @generated
+	 * @ordered
+	 */
+	protected Requirement requirement;
+	/**
+	 * The default value of the '{@link #getTracibilitystatus() <em>Tracibilitystatus</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getTracibilitystatus()
+	 * @generated
+	 * @ordered
+	 */
+	protected static final TracibilityStatus TRACIBILITYSTATUS_EDEFAULT = TracibilityStatus.NONE;
+	/**
+	 * The cached value of the '{@link #getTracibilitystatus() <em>Tracibilitystatus</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getTracibilitystatus()
+	 * @generated
+	 * @ordered
+	 */
+	protected TracibilityStatus tracibilitystatus = TRACIBILITYSTATUS_EDEFAULT;
+	/**
+	 * The cached value of the '{@link #getComponent() <em>Component</em>}' reference.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getComponent()
+	 * @generated
+	 * @ordered
+	 */
+	protected Component component;
+	/**
+	 * The cached value of the '{@link #getBehavior() <em>Behavior</em>}' reference.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getBehavior()
+	 * @generated
+	 * @ordered
+	 */
+	protected Behavior behavior;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected StandardNodeImpl() {
+		super();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EClass eStaticClass() {
+		return ComBEPackage.Literals.STANDARD_NODE;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public Requirement getRequirement() {
+		if (requirement != null && requirement.eIsProxy()) {
+			InternalEObject oldRequirement = (InternalEObject)requirement;
+			requirement = (Requirement)eResolveProxy(oldRequirement);
+			if (requirement != oldRequirement) {
+				if (eNotificationRequired())
+					eNotify(new ENotificationImpl(this, Notification.RESOLVE, ComBEPackage.STANDARD_NODE__REQUIREMENT, oldRequirement, requirement));
+			}
+		}
+		return requirement;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public Requirement basicGetRequirement() {
+		return requirement;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setRequirement(Requirement newRequirement) {
+		Requirement oldRequirement = requirement;
+		requirement = newRequirement;
+		if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, ComBEPackage.STANDARD_NODE__REQUIREMENT, oldRequirement, requirement));
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public TracibilityStatus getTracibilitystatus() {
+		return tracibilitystatus;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setTracibilitystatus(TracibilityStatus newTracibilitystatus) {
+		TracibilityStatus oldTracibilitystatus = tracibilitystatus;
+		tracibilitystatus = newTracibilitystatus == null ? TRACIBILITYSTATUS_EDEFAULT : newTracibilitystatus;
+		if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, ComBEPackage.STANDARD_NODE__TRACIBILITYSTATUS, oldTracibilitystatus, tracibilitystatus));
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public Component getComponent() {
+		if (component != null && component.eIsProxy()) {
+			InternalEObject oldComponent = (InternalEObject)component;
+			component = (Component)eResolveProxy(oldComponent);
+			if (component != oldComponent) {
+				if (eNotificationRequired())
+					eNotify(new ENotificationImpl(this, Notification.RESOLVE, ComBEPackage.STANDARD_NODE__COMPONENT, oldComponent, component));
+			}
+		}
+		return component;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public Component basicGetComponent() {
+		return component;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setComponent(Component newComponent) {
+		Component oldComponent = component;
+		component = newComponent;
+		if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, ComBEPackage.STANDARD_NODE__COMPONENT, oldComponent, component));
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public Behavior getBehavior() {
+		if (behavior != null && behavior.eIsProxy()) {
+			InternalEObject oldBehavior = (InternalEObject)behavior;
+			behavior = (Behavior)eResolveProxy(oldBehavior);
+			if (behavior != oldBehavior) {
+				if (eNotificationRequired())
+					eNotify(new ENotificationImpl(this, Notification.RESOLVE, ComBEPackage.STANDARD_NODE__BEHAVIOR, oldBehavior, behavior));
+			}
+		}
+		return behavior;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public Behavior basicGetBehavior() {
+		return behavior;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setBehavior(Behavior newBehavior) {
+		Behavior oldBehavior = behavior;
+		behavior = newBehavior;
+		if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, ComBEPackage.STANDARD_NODE__BEHAVIOR, oldBehavior, behavior));
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public Object eGet(int featureID, boolean resolve, boolean coreType) {
+		switch (featureID) {
+			case ComBEPackage.STANDARD_NODE__REQUIREMENT:
+				if (resolve) return getRequirement();
+				return basicGetRequirement();
+			case ComBEPackage.STANDARD_NODE__TRACIBILITYSTATUS:
+				return getTracibilitystatus();
+			case ComBEPackage.STANDARD_NODE__COMPONENT:
+				if (resolve) return getComponent();
+				return basicGetComponent();
+			case ComBEPackage.STANDARD_NODE__BEHAVIOR:
+				if (resolve) return getBehavior();
+				return basicGetBehavior();
+		}
+		return super.eGet(featureID, resolve, coreType);
+	}
+
+	/**
 	 * @generated NOT
 	 */
 	@Override
@@ -77,4 +298,64 @@
 		}
 		super.eSet(featureID, newValue);
 	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void eUnset(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.STANDARD_NODE__REQUIREMENT:
+				setRequirement((Requirement)null);
+				return;
+			case ComBEPackage.STANDARD_NODE__TRACIBILITYSTATUS:
+				setTracibilitystatus(TRACIBILITYSTATUS_EDEFAULT);
+				return;
+			case ComBEPackage.STANDARD_NODE__COMPONENT:
+				setComponent((Component)null);
+				return;
+			case ComBEPackage.STANDARD_NODE__BEHAVIOR:
+				setBehavior((Behavior)null);
+				return;
+		}
+		super.eUnset(featureID);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public boolean eIsSet(int featureID) {
+		switch (featureID) {
+			case ComBEPackage.STANDARD_NODE__REQUIREMENT:
+				return requirement != null;
+			case ComBEPackage.STANDARD_NODE__TRACIBILITYSTATUS:
+				return tracibilitystatus != TRACIBILITYSTATUS_EDEFAULT;
+			case ComBEPackage.STANDARD_NODE__COMPONENT:
+				return component != null;
+			case ComBEPackage.STANDARD_NODE__BEHAVIOR:
+				return behavior != null;
+		}
+		return super.eIsSet(featureID);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public String toString() {
+		if (eIsProxy()) return super.toString();
+
+		StringBuffer result = new StringBuffer(super.toString());
+		result.append(" (tracibilitystatus: ");
+		result.append(tracibilitystatus);
+		result.append(')');
+		return result.toString();
+	}
 }

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/SystemComponentImpl.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/impl/SystemComponentImpl.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,43 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.impl;
+
+import ComBE.ComBEPackage;
+import ComBE.SystemComponent;
+
+import org.eclipse.emf.ecore.EClass;
+
+/**
+ * <!-- begin-user-doc -->
+ * An implementation of the model object '<em><b>System Component</b></em>'.
+ * <!-- end-user-doc -->
+ * <p>
+ * </p>
+ *
+ * @generated
+ */
+public class SystemComponentImpl extends ComponentImpl implements SystemComponent {
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected SystemComponentImpl() {
+		super();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EClass eStaticClass() {
+		return ComBEPackage.Literals.SYSTEM_COMPONENT;
+	}
+
+} //SystemComponentImpl

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/util/ComBEAdapterFactory.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/util/ComBEAdapterFactory.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,376 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.util;
+
+import ComBE.*;
+
+import org.eclipse.emf.common.notify.Adapter;
+import org.eclipse.emf.common.notify.Notifier;
+
+import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;
+
+import org.eclipse.emf.ecore.EObject;
+
+/**
+ * <!-- begin-user-doc -->
+ * The <b>Adapter Factory</b> for the model.
+ * It provides an adapter <code>createXXX</code> method for each class of the model.
+ * <!-- end-user-doc -->
+ * @see ComBE.ComBEPackage
+ * @generated
+ */
+public class ComBEAdapterFactory extends AdapterFactoryImpl {
+	/**
+	 * The cached model package.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected static ComBEPackage modelPackage;
+
+	/**
+	 * Creates an instance of the adapter factory.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ComBEAdapterFactory() {
+		if (modelPackage == null) {
+			modelPackage = ComBEPackage.eINSTANCE;
+		}
+	}
+
+	/**
+	 * Returns whether this factory is applicable for the type of the object.
+	 * <!-- begin-user-doc -->
+	 * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
+	 * <!-- end-user-doc -->
+	 * @return whether this factory is applicable for the type of the object.
+	 * @generated
+	 */
+	@Override
+	public boolean isFactoryForType(Object object) {
+		if (object == modelPackage) {
+			return true;
+		}
+		if (object instanceof EObject) {
+			return ((EObject)object).eClass().getEPackage() == modelPackage;
+		}
+		return false;
+	}
+
+	/**
+	 * The switch that delegates to the <code>createXXX</code> methods.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected ComBESwitch<Adapter> modelSwitch =
+		new ComBESwitch<Adapter>() {
+			@Override
+			public Adapter caseSpecification(Specification object) {
+				return createSpecificationAdapter();
+			}
+			@Override
+			public Adapter caseRequirement(Requirement object) {
+				return createRequirementAdapter();
+			}
+			@Override
+			public Adapter caseBehaviorSeq(BehaviorSeq object) {
+				return createBehaviorSeqAdapter();
+			}
+			@Override
+			public Adapter caseBehavior(Behavior object) {
+				return createBehaviorAdapter();
+			}
+			@Override
+			public Adapter caseRoot(Root object) {
+				return createRootAdapter();
+			}
+			@Override
+			public Adapter caseComponent(Component object) {
+				return createComponentAdapter();
+			}
+			@Override
+			public Adapter caseStandardComponent(StandardComponent object) {
+				return createStandardComponentAdapter();
+			}
+			@Override
+			public Adapter caseSystemComponent(SystemComponent object) {
+				return createSystemComponentAdapter();
+			}
+			@Override
+			public Adapter caseBehaviorTree(BehaviorTree object) {
+				return createBehaviorTreeAdapter();
+			}
+			@Override
+			public Adapter caseAtomicSequence(AtomicSequence object) {
+				return createAtomicSequenceAdapter();
+			}
+			@Override
+			public Adapter caseAlternativeBranch(AlternativeBranch object) {
+				return createAlternativeBranchAdapter();
+			}
+			@Override
+			public Adapter caseParallelBranch(ParallelBranch object) {
+				return createParallelBranchAdapter();
+			}
+			@Override
+			public Adapter caseNode(Node object) {
+				return createNodeAdapter();
+			}
+			@Override
+			public Adapter caseStandardNode(StandardNode object) {
+				return createStandardNodeAdapter();
+			}
+			@Override
+			public Adapter caseEmptyNode(EmptyNode object) {
+				return createEmptyNodeAdapter();
+			}
+			@Override
+			public Adapter defaultCase(EObject object) {
+				return createEObjectAdapter();
+			}
+		};
+
+	/**
+	 * Creates an adapter for the <code>target</code>.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @param target the object to adapt.
+	 * @return the adapter for the <code>target</code>.
+	 * @generated
+	 */
+	@Override
+	public Adapter createAdapter(Notifier target) {
+		return modelSwitch.doSwitch((EObject)target);
+	}
+
+
+	/**
+	 * Creates a new adapter for an object of class '{@link ComBE.Specification <em>Specification</em>}'.
+	 * <!-- begin-user-doc -->
+	 * This default implementation returns null so that we can easily ignore cases;
+	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
+	 * <!-- end-user-doc -->
+	 * @return the new adapter.
+	 * @see ComBE.Specification
+	 * @generated
+	 */
+	public Adapter createSpecificationAdapter() {
+		return null;
+	}
+
+	/**
+	 * Creates a new adapter for an object of class '{@link ComBE.Requirement <em>Requirement</em>}'.
+	 * <!-- begin-user-doc -->
+	 * This default implementation returns null so that we can easily ignore cases;
+	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
+	 * <!-- end-user-doc -->
+	 * @return the new adapter.
+	 * @see ComBE.Requirement
+	 * @generated
+	 */
+	public Adapter createRequirementAdapter() {
+		return null;
+	}
+
+	/**
+	 * Creates a new adapter for an object of class '{@link ComBE.BehaviorSeq <em>Behavior Seq</em>}'.
+	 * <!-- begin-user-doc -->
+	 * This default implementation returns null so that we can easily ignore cases;
+	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
+	 * <!-- end-user-doc -->
+	 * @return the new adapter.
+	 * @see ComBE.BehaviorSeq
+	 * @generated
+	 */
+	public Adapter createBehaviorSeqAdapter() {
+		return null;
+	}
+
+	/**
+	 * Creates a new adapter for an object of class '{@link ComBE.Behavior <em>Behavior</em>}'.
+	 * <!-- begin-user-doc -->
+	 * This default implementation returns null so that we can easily ignore cases;
+	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
+	 * <!-- end-user-doc -->
+	 * @return the new adapter.
+	 * @see ComBE.Behavior
+	 * @generated
+	 */
+	public Adapter createBehaviorAdapter() {
+		return null;
+	}
+
+	/**
+	 * Creates a new adapter for an object of class '{@link ComBE.Root <em>Root</em>}'.
+	 * <!-- begin-user-doc -->
+	 * This default implementation returns null so that we can easily ignore cases;
+	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
+	 * <!-- end-user-doc -->
+	 * @return the new adapter.
+	 * @see ComBE.Root
+	 * @generated
+	 */
+	public Adapter createRootAdapter() {
+		return null;
+	}
+
+	/**
+	 * Creates a new adapter for an object of class '{@link ComBE.Component <em>Component</em>}'.
+	 * <!-- begin-user-doc -->
+	 * This default implementation returns null so that we can easily ignore cases;
+	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
+	 * <!-- end-user-doc -->
+	 * @return the new adapter.
+	 * @see ComBE.Component
+	 * @generated
+	 */
+	public Adapter createComponentAdapter() {
+		return null;
+	}
+
+	/**
+	 * Creates a new adapter for an object of class '{@link ComBE.StandardComponent <em>Standard Component</em>}'.
+	 * <!-- begin-user-doc -->
+	 * This default implementation returns null so that we can easily ignore cases;
+	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
+	 * <!-- end-user-doc -->
+	 * @return the new adapter.
+	 * @see ComBE.StandardComponent
+	 * @generated
+	 */
+	public Adapter createStandardComponentAdapter() {
+		return null;
+	}
+
+	/**
+	 * Creates a new adapter for an object of class '{@link ComBE.SystemComponent <em>System Component</em>}'.
+	 * <!-- begin-user-doc -->
+	 * This default implementation returns null so that we can easily ignore cases;
+	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
+	 * <!-- end-user-doc -->
+	 * @return the new adapter.
+	 * @see ComBE.SystemComponent
+	 * @generated
+	 */
+	public Adapter createSystemComponentAdapter() {
+		return null;
+	}
+
+	/**
+	 * Creates a new adapter for an object of class '{@link ComBE.BehaviorTree <em>Behavior Tree</em>}'.
+	 * <!-- begin-user-doc -->
+	 * This default implementation returns null so that we can easily ignore cases;
+	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
+	 * <!-- end-user-doc -->
+	 * @return the new adapter.
+	 * @see ComBE.BehaviorTree
+	 * @generated
+	 */
+	public Adapter createBehaviorTreeAdapter() {
+		return null;
+	}
+
+	/**
+	 * Creates a new adapter for an object of class '{@link ComBE.AtomicSequence <em>Atomic Sequence</em>}'.
+	 * <!-- begin-user-doc -->
+	 * This default implementation returns null so that we can easily ignore cases;
+	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
+	 * <!-- end-user-doc -->
+	 * @return the new adapter.
+	 * @see ComBE.AtomicSequence
+	 * @generated
+	 */
+	public Adapter createAtomicSequenceAdapter() {
+		return null;
+	}
+
+	/**
+	 * Creates a new adapter for an object of class '{@link ComBE.AlternativeBranch <em>Alternative Branch</em>}'.
+	 * <!-- begin-user-doc -->
+	 * This default implementation returns null so that we can easily ignore cases;
+	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
+	 * <!-- end-user-doc -->
+	 * @return the new adapter.
+	 * @see ComBE.AlternativeBranch
+	 * @generated
+	 */
+	public Adapter createAlternativeBranchAdapter() {
+		return null;
+	}
+
+	/**
+	 * Creates a new adapter for an object of class '{@link ComBE.ParallelBranch <em>Parallel Branch</em>}'.
+	 * <!-- begin-user-doc -->
+	 * This default implementation returns null so that we can easily ignore cases;
+	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
+	 * <!-- end-user-doc -->
+	 * @return the new adapter.
+	 * @see ComBE.ParallelBranch
+	 * @generated
+	 */
+	public Adapter createParallelBranchAdapter() {
+		return null;
+	}
+
+	/**
+	 * Creates a new adapter for an object of class '{@link ComBE.Node <em>Node</em>}'.
+	 * <!-- begin-user-doc -->
+	 * This default implementation returns null so that we can easily ignore cases;
+	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
+	 * <!-- end-user-doc -->
+	 * @return the new adapter.
+	 * @see ComBE.Node
+	 * @generated
+	 */
+	public Adapter createNodeAdapter() {
+		return null;
+	}
+
+	/**
+	 * Creates a new adapter for an object of class '{@link ComBE.StandardNode <em>Standard Node</em>}'.
+	 * <!-- begin-user-doc -->
+	 * This default implementation returns null so that we can easily ignore cases;
+	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
+	 * <!-- end-user-doc -->
+	 * @return the new adapter.
+	 * @see ComBE.StandardNode
+	 * @generated
+	 */
+	public Adapter createStandardNodeAdapter() {
+		return null;
+	}
+
+	/**
+	 * Creates a new adapter for an object of class '{@link ComBE.EmptyNode <em>Empty Node</em>}'.
+	 * <!-- begin-user-doc -->
+	 * This default implementation returns null so that we can easily ignore cases;
+	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
+	 * <!-- end-user-doc -->
+	 * @return the new adapter.
+	 * @see ComBE.EmptyNode
+	 * @generated
+	 */
+	public Adapter createEmptyNodeAdapter() {
+		return null;
+	}
+
+	/**
+	 * Creates a new adapter for the default case.
+	 * <!-- begin-user-doc -->
+	 * This default implementation returns null.
+	 * <!-- end-user-doc -->
+	 * @return the new adapter.
+	 * @generated
+	 */
+	public Adapter createEObjectAdapter() {
+		return null;
+	}
+
+} //ComBEAdapterFactory

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/util/ComBESwitch.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/src/ComBE/util/ComBESwitch.java	Mon Jul 16 01:43:04 2012	(r25202)
@@ -0,0 +1,415 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.util;
+
+import ComBE.*;
+
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.EPackage;
+
+import org.eclipse.emf.ecore.util.Switch;
+
+/**
+ * <!-- begin-user-doc -->
+ * The <b>Switch</b> for the model's inheritance hierarchy.
+ * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
+ * to invoke the <code>caseXXX</code> method for each class of the model,
+ * starting with the actual class of the object
+ * and proceeding up the inheritance hierarchy
+ * until a non-null result is returned,
+ * which is the result of the switch.
+ * <!-- end-user-doc -->
+ * @see ComBE.ComBEPackage
+ * @generated
+ */
+public class ComBESwitch<T> extends Switch<T> {
+	/**
+	 * The cached model package
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected static ComBEPackage modelPackage;
+
+	/**
+	 * Creates an instance of the switch.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ComBESwitch() {
+		if (modelPackage == null) {
+			modelPackage = ComBEPackage.eINSTANCE;
+		}
+	}
+
+	/**
+	 * Checks whether this is a switch for the given package.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @parameter ePackage the package in question.
+	 * @return whether this is a switch for the given package.
+	 * @generated
+	 */
+	@Override
+	protected boolean isSwitchFor(EPackage ePackage) {
+		return ePackage == modelPackage;
+	}
+
+	/**
+	 * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the first non-null result returned by a <code>caseXXX</code> call.
+	 * @generated
+	 */
+	@Override
+	protected T doSwitch(int classifierID, EObject theEObject) {
+		switch (classifierID) {
+			case ComBEPackage.SPECIFICATION: {
+				Specification specification = (Specification)theEObject;
+				T result = caseSpecification(specification);
+				if (result == null) result = defaultCase(theEObject);
+				return result;
+			}
+			case ComBEPackage.REQUIREMENT: {
+				Requirement requirement = (Requirement)theEObject;
+				T result = caseRequirement(requirement);
+				if (result == null) result = defaultCase(theEObject);
+				return result;
+			}
+			case ComBEPackage.BEHAVIOR_SEQ: {
+				BehaviorSeq behaviorSeq = (BehaviorSeq)theEObject;
+				T result = caseBehaviorSeq(behaviorSeq);
+				if (result == null) result = defaultCase(theEObject);
+				return result;
+			}
+			case ComBEPackage.BEHAVIOR: {
+				Behavior behavior = (Behavior)theEObject;
+				T result = caseBehavior(behavior);
+				if (result == null) result = defaultCase(theEObject);
+				return result;
+			}
+			case ComBEPackage.ROOT: {
+				Root root = (Root)theEObject;
+				T result = caseRoot(root);
+				if (result == null) result = defaultCase(theEObject);
+				return result;
+			}
+			case ComBEPackage.COMPONENT: {
+				Component component = (Component)theEObject;
+				T result = caseComponent(component);
+				if (result == null) result = defaultCase(theEObject);
+				return result;
+			}
+			case ComBEPackage.STANDARD_COMPONENT: {
+				StandardComponent standardComponent = (StandardComponent)theEObject;
+				T result = caseStandardComponent(standardComponent);
+				if (result == null) result = caseComponent(standardComponent);
+				if (result == null) result = defaultCase(theEObject);
+				return result;
+			}
+			case ComBEPackage.SYSTEM_COMPONENT: {
+				SystemComponent systemComponent = (SystemComponent)theEObject;
+				T result = caseSystemComponent(systemComponent);
+				if (result == null) result = caseComponent(systemComponent);
+				if (result == null) result = defaultCase(theEObject);
+				return result;
+			}
+			case ComBEPackage.BEHAVIOR_TREE: {
+				BehaviorTree behaviorTree = (BehaviorTree)theEObject;
+				T result = caseBehaviorTree(behaviorTree);
+				if (result == null) result = defaultCase(theEObject);
+				return result;
+			}
+			case ComBEPackage.ATOMIC_SEQUENCE: {
+				AtomicSequence atomicSequence = (AtomicSequence)theEObject;
+				T result = caseAtomicSequence(atomicSequence);
+				if (result == null) result = caseBehaviorTree(atomicSequence);
+				if (result == null) result = defaultCase(theEObject);
+				return result;
+			}
+			case ComBEPackage.ALTERNATIVE_BRANCH: {
+				AlternativeBranch alternativeBranch = (AlternativeBranch)theEObject;
+				T result = caseAlternativeBranch(alternativeBranch);
+				if (result == null) result = caseBehaviorTree(alternativeBranch);
+				if (result == null) result = defaultCase(theEObject);
+				return result;
+			}
+			case ComBEPackage.PARALLEL_BRANCH: {
+				ParallelBranch parallelBranch = (ParallelBranch)theEObject;
+				T result = caseParallelBranch(parallelBranch);
+				if (result == null) result = caseBehaviorTree(parallelBranch);
+				if (result == null) result = defaultCase(theEObject);
+				return result;
+			}
+			case ComBEPackage.NODE: {
+				Node node = (Node)theEObject;
+				T result = caseNode(node);
+				if (result == null) result = defaultCase(theEObject);
+				return result;
+			}
+			case ComBEPackage.STANDARD_NODE: {
+				StandardNode standardNode = (StandardNode)theEObject;
+				T result = caseStandardNode(standardNode);
+				if (result == null) result = caseNode(standardNode);
+				if (result == null) result = defaultCase(theEObject);
+				return result;
+			}
+			case ComBEPackage.EMPTY_NODE: {
+				EmptyNode emptyNode = (EmptyNode)theEObject;
+				T result = caseEmptyNode(emptyNode);
+				if (result == null) result = caseNode(emptyNode);
+				if (result == null) result = defaultCase(theEObject);
+				return result;
+			}
+			default: return defaultCase(theEObject);
+		}
+	}
+
+	/**
+	 * Returns the result of interpreting the object as an instance of '<em>Specification</em>'.
+	 * <!-- begin-user-doc -->
+	 * This implementation returns null;
+	 * returning a non-null result will terminate the switch.
+	 * <!-- end-user-doc -->
+	 * @param object the target of the switch.
+	 * @return the result of interpreting the object as an instance of '<em>Specification</em>'.
+	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
+	 * @generated
+	 */
+	public T caseSpecification(Specification object) {
+		return null;
+	}
+
+	/**
+	 * Returns the result of interpreting the object as an instance of '<em>Requirement</em>'.
+	 * <!-- begin-user-doc -->
+	 * This implementation returns null;
+	 * returning a non-null result will terminate the switch.
+	 * <!-- end-user-doc -->
+	 * @param object the target of the switch.
+	 * @return the result of interpreting the object as an instance of '<em>Requirement</em>'.
+	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
+	 * @generated
+	 */
+	public T caseRequirement(Requirement object) {
+		return null;
+	}
+
+	/**
+	 * Returns the result of interpreting the object as an instance of '<em>Behavior Seq</em>'.
+	 * <!-- begin-user-doc -->
+	 * This implementation returns null;
+	 * returning a non-null result will terminate the switch.
+	 * <!-- end-user-doc -->
+	 * @param object the target of the switch.
+	 * @return the result of interpreting the object as an instance of '<em>Behavior Seq</em>'.
+	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
+	 * @generated
+	 */
+	public T caseBehaviorSeq(BehaviorSeq object) {
+		return null;
+	}
+
+	/**
+	 * Returns the result of interpreting the object as an instance of '<em>Behavior</em>'.
+	 * <!-- begin-user-doc -->
+	 * This implementation returns null;
+	 * returning a non-null result will terminate the switch.
+	 * <!-- end-user-doc -->
+	 * @param object the target of the switch.
+	 * @return the result of interpreting the object as an instance of '<em>Behavior</em>'.
+	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
+	 * @generated
+	 */
+	public T caseBehavior(Behavior object) {
+		return null;
+	}
+
+	/**
+	 * Returns the result of interpreting the object as an instance of '<em>Root</em>'.
+	 * <!-- begin-user-doc -->
+	 * This implementation returns null;
+	 * returning a non-null result will terminate the switch.
+	 * <!-- end-user-doc -->
+	 * @param object the target of the switch.
+	 * @return the result of interpreting the object as an instance of '<em>Root</em>'.
+	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
+	 * @generated
+	 */
+	public T caseRoot(Root object) {
+		return null;
+	}
+
+	/**
+	 * Returns the result of interpreting the object as an instance of '<em>Component</em>'.
+	 * <!-- begin-user-doc -->
+	 * This implementation returns null;
+	 * returning a non-null result will terminate the switch.
+	 * <!-- end-user-doc -->
+	 * @param object the target of the switch.
+	 * @return the result of interpreting the object as an instance of '<em>Component</em>'.
+	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
+	 * @generated
+	 */
+	public T caseComponent(Component object) {
+		return null;
+	}
+
+	/**
+	 * Returns the result of interpreting the object as an instance of '<em>Standard Component</em>'.
+	 * <!-- begin-user-doc -->
+	 * This implementation returns null;
+	 * returning a non-null result will terminate the switch.
+	 * <!-- end-user-doc -->
+	 * @param object the target of the switch.
+	 * @return the result of interpreting the object as an instance of '<em>Standard Component</em>'.
+	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
+	 * @generated
+	 */
+	public T caseStandardComponent(StandardComponent object) {
+		return null;
+	}
+
+	/**
+	 * Returns the result of interpreting the object as an instance of '<em>System Component</em>'.
+	 * <!-- begin-user-doc -->
+	 * This implementation returns null;
+	 * returning a non-null result will terminate the switch.
+	 * <!-- end-user-doc -->
+	 * @param object the target of the switch.
+	 * @return the result of interpreting the object as an instance of '<em>System Component</em>'.
+	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
+	 * @generated
+	 */
+	public T caseSystemComponent(SystemComponent object) {
+		return null;
+	}
+
+	/**
+	 * Returns the result of interpreting the object as an instance of '<em>Behavior Tree</em>'.
+	 * <!-- begin-user-doc -->
+	 * This implementation returns null;
+	 * returning a non-null result will terminate the switch.
+	 * <!-- end-user-doc -->
+	 * @param object the target of the switch.
+	 * @return the result of interpreting the object as an instance of '<em>Behavior Tree</em>'.
+	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
+	 * @generated
+	 */
+	public T caseBehaviorTree(BehaviorTree object) {
+		return null;
+	}
+
+	/**
+	 * Returns the result of interpreting the object as an instance of '<em>Atomic Sequence</em>'.
+	 * <!-- begin-user-doc -->
+	 * This implementation returns null;
+	 * returning a non-null result will terminate the switch.
+	 * <!-- end-user-doc -->
+	 * @param object the target of the switch.
+	 * @return the result of interpreting the object as an instance of '<em>Atomic Sequence</em>'.
+	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
+	 * @generated
+	 */
+	public T caseAtomicSequence(AtomicSequence object) {
+		return null;
+	}
+
+	/**
+	 * Returns the result of interpreting the object as an instance of '<em>Alternative Branch</em>'.
+	 * <!-- begin-user-doc -->
+	 * This implementation returns null;
+	 * returning a non-null result will terminate the switch.
+	 * <!-- end-user-doc -->
+	 * @param object the target of the switch.
+	 * @return the result of interpreting the object as an instance of '<em>Alternative Branch</em>'.
+	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
+	 * @generated
+	 */
+	public T caseAlternativeBranch(AlternativeBranch object) {
+		return null;
+	}
+
+	/**
+	 * Returns the result of interpreting the object as an instance of '<em>Parallel Branch</em>'.
+	 * <!-- begin-user-doc -->
+	 * This implementation returns null;
+	 * returning a non-null result will terminate the switch.
+	 * <!-- end-user-doc -->
+	 * @param object the target of the switch.
+	 * @return the result of interpreting the object as an instance of '<em>Parallel Branch</em>'.
+	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
+	 * @generated
+	 */
+	public T caseParallelBranch(ParallelBranch object) {
+		return null;
+	}
+
+	/**
+	 * Returns the result of interpreting the object as an instance of '<em>Node</em>'.
+	 * <!-- begin-user-doc -->
+	 * This implementation returns null;
+	 * returning a non-null result will terminate the switch.
+	 * <!-- end-user-doc -->
+	 * @param object the target of the switch.
+	 * @return the result of interpreting the object as an instance of '<em>Node</em>'.
+	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
+	 * @generated
+	 */
+	public T caseNode(Node object) {
+		return null;
+	}
+
+	/**
+	 * Returns the result of interpreting the object as an instance of '<em>Standard Node</em>'.
+	 * <!-- begin-user-doc -->
+	 * This implementation returns null;
+	 * returning a non-null result will terminate the switch.
+	 * <!-- end-user-doc -->
+	 * @param object the target of the switch.
+	 * @return the result of interpreting the object as an instance of '<em>Standard Node</em>'.
+	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
+	 * @generated
+	 */
+	public T caseStandardNode(StandardNode object) {
+		return null;
+	}
+
+	/**
+	 * Returns the result of interpreting the object as an instance of '<em>Empty Node</em>'.
+	 * <!-- begin-user-doc -->
+	 * This implementation returns null;
+	 * returning a non-null result will terminate the switch.
+	 * <!-- end-user-doc -->
+	 * @param object the target of the switch.
+	 * @return the result of interpreting the object as an instance of '<em>Empty Node</em>'.
+	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
+	 * @generated
+	 */
+	public T caseEmptyNode(EmptyNode object) {
+		return null;
+	}
+
+	/**
+	 * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
+	 * <!-- begin-user-doc -->
+	 * This implementation returns null;
+	 * returning a non-null result will terminate the switch, but this is the last case anyway.
+	 * <!-- end-user-doc -->
+	 * @param object the target of the switch.
+	 * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
+	 * @see #doSwitch(org.eclipse.emf.ecore.EObject)
+	 * @generated
+	 */
+	@Override
+	public T defaultCase(EObject object) {
+		return null;
+	}
+
+} //ComBESwitch

From oskarvanrest at gmail.com  Mon Jul 16 04:17:52 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 16 Jul 2012 02:17:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25203 - in
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram:
	. META-INF src/ComBE/diagram/navigator
Message-ID: <20120716021752.CBF95CC118@mx4.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 16 02:17:51 2012
New Revision: 25203
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25203&sc=1

Log:
1.0.0.qualifier instead of 1.0.0

Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/   (props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/META-INF/MANIFEST.MF
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorContentProvider.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorLabelProvider.java

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/META-INF/MANIFEST.MF
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/META-INF/MANIFEST.MF	Mon Jul 16 01:43:04 2012	(r25202)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/META-INF/MANIFEST.MF	Mon Jul 16 02:17:51 2012	(r25203)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.behaviorengineering.combe.graphical.diagram; singleton:=true
-Bundle-Version: 1.0.0
+Bundle-Version: 1.0.0.qualifier
 Bundle-ClassPath: .
 Bundle-Activator: ComBE.diagram.part.ComBEDiagramEditorPlugin
 Bundle-Vendor: %providerName

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorContentProvider.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorContentProvider.java	Mon Jul 16 01:43:04 2012	(r25202)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorContentProvider.java	Mon Jul 16 02:17:51 2012	(r25203)
@@ -202,6 +202,52 @@
 	private Object[] getViewChildren(View view, Object parentElement) {
 		switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view)) {
 
+		case ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID: {
+			LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem> result = new LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem>();
+			Edge sv = (Edge) view;
+			ComBE.diagram.navigator.ComBENavigatorGroup target = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_ParallelBranchChildren_4002_target, "icons/linkTargetNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			ComBE.diagram.navigator.ComBENavigatorGroup source = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_ParallelBranchChildren_4002_source, "icons/linkSourceNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			Collection<View> connectedViews;
+			connectedViews = getLinksTargetByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID));
+			target.addChildren(createNavigatorItems(connectedViews, target, true));
+			connectedViews = getLinksTargetByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID));
+			target.addChildren(createNavigatorItems(connectedViews, target, true));
+			connectedViews = getLinksTargetByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID));
+			target.addChildren(createNavigatorItems(connectedViews, target, true));
+			connectedViews = getLinksSourceByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID));
+			source.addChildren(createNavigatorItems(connectedViews, source, true));
+			if (!target.isEmpty()) {
+				result.add(target);
+			}
+			if (!source.isEmpty()) {
+				result.add(source);
+			}
+			return result.toArray();
+		}
+
+		case ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID: {
+			LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem> result = new LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem>();
+			Diagram sv = (Diagram) view;
+			ComBE.diagram.navigator.ComBENavigatorGroup links = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_Specification_1000_links, "icons/linksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			Collection<View> connectedViews;
+			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID));
+			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
+			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID));
+			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
+			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID));
+			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
+			connectedViews = getDiagramLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID));
+			links.addChildren(createNavigatorItems(connectedViews, links, false));
+			connectedViews = getDiagramLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID));
+			links.addChildren(createNavigatorItems(connectedViews, links, false));
+			connectedViews = getDiagramLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID));
+			links.addChildren(createNavigatorItems(connectedViews, links, false));
+			if (!links.isEmpty()) {
+				result.add(links);
+			}
+			return result.toArray();
+		}
+
 		case ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID: {
 			LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem> result = new LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem>();
 			Node sv = (Node) view;
@@ -231,48 +277,31 @@
 			return result.toArray();
 		}
 
-		case ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID: {
+		case ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID: {
 			LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem> result = new LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem>();
-			Diagram sv = (Diagram) view;
-			ComBE.diagram.navigator.ComBENavigatorGroup links = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_Specification_1000_links, "icons/linksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			Node sv = (Node) view;
+			ComBE.diagram.navigator.ComBENavigatorGroup incominglinks = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_AlternativeBranch_2001_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			ComBE.diagram.navigator.ComBENavigatorGroup outgoinglinks = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_AlternativeBranch_2001_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
 			Collection<View> connectedViews;
-			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID));
-			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
-			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID));
+			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart.VISUAL_ID));
+			connectedViews = getChildrenByType(connectedViews, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID));
 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
-			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID));
+			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart.VISUAL_ID));
+			connectedViews = getChildrenByType(connectedViews, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID));
 			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
-			connectedViews = getDiagramLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID));
-			links.addChildren(createNavigatorItems(connectedViews, links, false));
-			connectedViews = getDiagramLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID));
-			links.addChildren(createNavigatorItems(connectedViews, links, false));
-			connectedViews = getDiagramLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID));
-			links.addChildren(createNavigatorItems(connectedViews, links, false));
-			if (!links.isEmpty()) {
-				result.add(links);
-			}
-			return result.toArray();
-		}
-
-		case ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID: {
-			LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem> result = new LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem>();
-			Edge sv = (Edge) view;
-			ComBE.diagram.navigator.ComBENavigatorGroup target = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_AlternativeBranchChildren_4001_target, "icons/linkTargetNavigatorGroup.gif", parentElement); //$NON-NLS-1$
-			ComBE.diagram.navigator.ComBENavigatorGroup source = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_AlternativeBranchChildren_4001_source, "icons/linkSourceNavigatorGroup.gif", parentElement); //$NON-NLS-1$
-			Collection<View> connectedViews;
-			connectedViews = getLinksTargetByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID));
-			target.addChildren(createNavigatorItems(connectedViews, target, true));
-			connectedViews = getLinksTargetByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID));
-			target.addChildren(createNavigatorItems(connectedViews, target, true));
-			connectedViews = getLinksTargetByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID));
-			target.addChildren(createNavigatorItems(connectedViews, target, true));
-			connectedViews = getLinksSourceByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID));
-			source.addChildren(createNavigatorItems(connectedViews, source, true));
-			if (!target.isEmpty()) {
-				result.add(target);
+			connectedViews = getIncomingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID));
+			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
+			connectedViews = getOutgoingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID));
+			outgoinglinks.addChildren(createNavigatorItems(connectedViews, outgoinglinks, true));
+			connectedViews = getIncomingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID));
+			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
+			connectedViews = getIncomingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID));
+			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
+			if (!incominglinks.isEmpty()) {
+				result.add(incominglinks);
 			}
-			if (!source.isEmpty()) {
-				result.add(source);
+			if (!outgoinglinks.isEmpty()) {
+				result.add(outgoinglinks);
 			}
 			return result.toArray();
 		}
@@ -329,40 +358,11 @@
 			return result.toArray();
 		}
 
-		case ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID: {
-			LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem> result = new LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem>();
-			Node sv = (Node) view;
-			ComBE.diagram.navigator.ComBENavigatorGroup incominglinks = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_AlternativeBranch_2001_incominglinks, "icons/incomingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
-			ComBE.diagram.navigator.ComBENavigatorGroup outgoinglinks = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_AlternativeBranch_2001_outgoinglinks, "icons/outgoingLinksNavigatorGroup.gif", parentElement); //$NON-NLS-1$
-			Collection<View> connectedViews;
-			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart.VISUAL_ID));
-			connectedViews = getChildrenByType(connectedViews, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID));
-			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
-			connectedViews = getChildrenByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceAtomicSequenceNodesCompartmentEditPart.VISUAL_ID));
-			connectedViews = getChildrenByType(connectedViews, ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID));
-			result.addAll(createNavigatorItems(connectedViews, parentElement, false));
-			connectedViews = getIncomingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID));
-			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
-			connectedViews = getOutgoingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID));
-			outgoinglinks.addChildren(createNavigatorItems(connectedViews, outgoinglinks, true));
-			connectedViews = getIncomingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID));
-			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
-			connectedViews = getIncomingLinksByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID));
-			incominglinks.addChildren(createNavigatorItems(connectedViews, incominglinks, true));
-			if (!incominglinks.isEmpty()) {
-				result.add(incominglinks);
-			}
-			if (!outgoinglinks.isEmpty()) {
-				result.add(outgoinglinks);
-			}
-			return result.toArray();
-		}
-
-		case ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID: {
+		case ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID: {
 			LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem> result = new LinkedList<ComBE.diagram.navigator.ComBEAbstractNavigatorItem>();
 			Edge sv = (Edge) view;
-			ComBE.diagram.navigator.ComBENavigatorGroup target = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_ParallelBranchChildren_4002_target, "icons/linkTargetNavigatorGroup.gif", parentElement); //$NON-NLS-1$
-			ComBE.diagram.navigator.ComBENavigatorGroup source = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_ParallelBranchChildren_4002_source, "icons/linkSourceNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			ComBE.diagram.navigator.ComBENavigatorGroup target = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_AlternativeBranchChildren_4001_target, "icons/linkTargetNavigatorGroup.gif", parentElement); //$NON-NLS-1$
+			ComBE.diagram.navigator.ComBENavigatorGroup source = new ComBE.diagram.navigator.ComBENavigatorGroup(ComBE.diagram.part.Messages.NavigatorGroupName_AlternativeBranchChildren_4001_source, "icons/linkSourceNavigatorGroup.gif", parentElement); //$NON-NLS-1$
 			Collection<View> connectedViews;
 			connectedViews = getLinksTargetByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID));
 			target.addChildren(createNavigatorItems(connectedViews, target, true));
@@ -370,7 +370,7 @@
 			target.addChildren(createNavigatorItems(connectedViews, target, true));
 			connectedViews = getLinksTargetByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID));
 			target.addChildren(createNavigatorItems(connectedViews, target, true));
-			connectedViews = getLinksSourceByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID));
+			connectedViews = getLinksSourceByType(Collections.singleton(sv), ComBE.diagram.part.ComBEVisualIDRegistry.getType(ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID));
 			source.addChildren(createNavigatorItems(connectedViews, source, true));
 			if (!target.isEmpty()) {
 				result.add(target);

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorLabelProvider.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorLabelProvider.java	Mon Jul 16 01:43:04 2012	(r25202)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.diagram/src/ComBE/diagram/navigator/ComBENavigatorLabelProvider.java	Mon Jul 16 02:17:51 2012	(r25203)
@@ -66,32 +66,32 @@
 	*/
 	public Image getImage(View view) {
 		switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view)) {
-		case ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID:
-			return getImage("Navigator?Node?ComBE?StandardNode", ComBE.diagram.providers.ComBEElementTypes.StandardNode_3003); //$NON-NLS-1$
-		case ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID:
-			return getImage("Navigator?TopLevelNode?ComBE?AtomicSequence", ComBE.diagram.providers.ComBEElementTypes.AtomicSequence_2003); //$NON-NLS-1$
-		case ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID:
-			return getImage("Navigator?Diagram?ComBE?Specification", ComBE.diagram.providers.ComBEElementTypes.Specification_1000); //$NON-NLS-1$
-		case ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID:
-			return getImage("Navigator?Link?ComBE?AlternativeBranch?children", ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID:
+			return getImage("Navigator?Link?ComBE?ParallelBranch?children", ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002); //$NON-NLS-1$
 		case ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID:
 			return getImage("Navigator?Node?ComBE?StandardNode", ComBE.diagram.providers.ComBEElementTypes.StandardNode_3001); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID:
+			return getImage("Navigator?Diagram?ComBE?Specification", ComBE.diagram.providers.ComBEElementTypes.Specification_1000); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID:
+			return getImage("Navigator?TopLevelNode?ComBE?AtomicSequence", ComBE.diagram.providers.ComBEElementTypes.AtomicSequence_2003); //$NON-NLS-1$
 		case ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID:
 			return getImage("Navigator?Node?ComBE?EmptyNode", ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3002); //$NON-NLS-1$
-		case ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID:
-			return getImage("Navigator?TopLevelNode?ComBE?ParallelBranch", ComBE.diagram.providers.ComBEElementTypes.ParallelBranch_2002); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID:
+			return getImage("Navigator?TopLevelNode?ComBE?AlternativeBranch", ComBE.diagram.providers.ComBEElementTypes.AlternativeBranch_2001); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID:
+			return getImage("Navigator?Node?ComBE?StandardNode", ComBE.diagram.providers.ComBEElementTypes.StandardNode_3003); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID:
+			return getImage("Navigator?Node?ComBE?EmptyNode", ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3006); //$NON-NLS-1$
 		case ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID:
 			return getImage("Navigator?Node?ComBE?StandardNode", ComBE.diagram.providers.ComBEElementTypes.StandardNode_3005); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID:
+			return getImage("Navigator?TopLevelNode?ComBE?ParallelBranch", ComBE.diagram.providers.ComBEElementTypes.ParallelBranch_2002); //$NON-NLS-1$
 		case ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID:
 			return getImage("Navigator?Link?ComBE?AtomicSequence?child", ComBE.diagram.providers.ComBEElementTypes.AtomicSequenceChild_4003); //$NON-NLS-1$
-		case ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID:
-			return getImage("Navigator?Node?ComBE?EmptyNode", ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3006); //$NON-NLS-1$
 		case ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID:
 			return getImage("Navigator?Node?ComBE?EmptyNode", ComBE.diagram.providers.ComBEElementTypes.EmptyNode_3004); //$NON-NLS-1$
-		case ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID:
-			return getImage("Navigator?TopLevelNode?ComBE?AlternativeBranch", ComBE.diagram.providers.ComBEElementTypes.AlternativeBranch_2001); //$NON-NLS-1$
-		case ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID:
-			return getImage("Navigator?Link?ComBE?ParallelBranch?children", ComBE.diagram.providers.ComBEElementTypes.ParallelBranchChildren_4002); //$NON-NLS-1$
+		case ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID:
+			return getImage("Navigator?Link?ComBE?AlternativeBranch?children", ComBE.diagram.providers.ComBEElementTypes.AlternativeBranchChildren_4001); //$NON-NLS-1$
 		}
 		return getImage("Navigator?UnknownElement", null); //$NON-NLS-1$
 	}
@@ -142,32 +142,32 @@
 			return getUnresolvedDomainElementProxyText(view);
 		}
 		switch (ComBE.diagram.part.ComBEVisualIDRegistry.getVisualID(view)) {
-		case ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID:
-			return getStandardNode_3003Text(view);
-		case ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID:
-			return getAtomicSequence_2003Text(view);
-		case ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID:
-			return getSpecification_1000Text(view);
-		case ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID:
-			return getAlternativeBranchChildren_4001Text(view);
+		case ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID:
+			return getParallelBranchChildren_4002Text(view);
 		case ComBE.diagram.edit.parts.StandardNodeEditPart.VISUAL_ID:
 			return getStandardNode_3001Text(view);
+		case ComBE.diagram.edit.parts.SpecificationEditPart.VISUAL_ID:
+			return getSpecification_1000Text(view);
+		case ComBE.diagram.edit.parts.AtomicSequenceEditPart.VISUAL_ID:
+			return getAtomicSequence_2003Text(view);
 		case ComBE.diagram.edit.parts.EmptyNodeEditPart.VISUAL_ID:
 			return getEmptyNode_3002Text(view);
-		case ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID:
-			return getParallelBranch_2002Text(view);
+		case ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID:
+			return getAlternativeBranch_2001Text(view);
+		case ComBE.diagram.edit.parts.StandardNode2EditPart.VISUAL_ID:
+			return getStandardNode_3003Text(view);
+		case ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID:
+			return getEmptyNode_3006Text(view);
 		case ComBE.diagram.edit.parts.StandardNode3EditPart.VISUAL_ID:
 			return getStandardNode_3005Text(view);
+		case ComBE.diagram.edit.parts.ParallelBranchEditPart.VISUAL_ID:
+			return getParallelBranch_2002Text(view);
 		case ComBE.diagram.edit.parts.AtomicSequenceChildEditPart.VISUAL_ID:
 			return getAtomicSequenceChild_4003Text(view);
-		case ComBE.diagram.edit.parts.EmptyNode3EditPart.VISUAL_ID:
-			return getEmptyNode_3006Text(view);
 		case ComBE.diagram.edit.parts.EmptyNode2EditPart.VISUAL_ID:
 			return getEmptyNode_3004Text(view);
-		case ComBE.diagram.edit.parts.AlternativeBranchEditPart.VISUAL_ID:
-			return getAlternativeBranch_2001Text(view);
-		case ComBE.diagram.edit.parts.ParallelBranchChildrenEditPart.VISUAL_ID:
-			return getParallelBranchChildren_4002Text(view);
+		case ComBE.diagram.edit.parts.AlternativeBranchChildrenEditPart.VISUAL_ID:
+			return getAlternativeBranchChildren_4001Text(view);
 		}
 		return getUnknownElementText(view);
 	}

From oskarvanrest at gmail.com  Mon Jul 16 04:18:07 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 16 Jul 2012 02:18:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25204 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model
Message-ID: <20120716021807.A134A7F804E@mx1.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 16 02:18:07 2012
New Revision: 25204
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25204&sc=1

Log:
1.0.0.qualifier instead of 1.0.0

Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen	Mon Jul 16 02:17:51 2012	(r25203)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical/model/ComBE.gmfgen	Mon Jul 16 02:18:07 2012	(r25204)
@@ -929,7 +929,6 @@
   </diagram>
   <plugin
       provider="UQ"
-      version="1.0.0"
       printingEnabled="true">
     <requiredPlugins>org.eclipse.draw2d</requiredPlugins>
     <requiredPlugins>org.eclipse.gmf.runtime.draw2d.ui</requiredPlugins>

From oskarvanrest at gmail.com  Mon Jul 16 04:23:40 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 16 Jul 2012 02:23:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25205 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor
Message-ID: <20120716022340.E35CA2B800C@mx2.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 16 02:23:40 2012
New Revision: 25205
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25205&sc=1

Log:
Initial import.

Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/

From oskarvanrest at gmail.com  Mon Jul 16 04:26:20 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 16 Jul 2012 02:26:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25206 - in
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor:
	. META-INF icons icons/full icons/full/obj16
	icons/full/wizban src src...
Message-ID: <20120716022620.74284CC118@mx4.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 16 02:26:20 2012
New Revision: 25206
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25206&sc=1

Log:
Treeview editor

Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/.classpath
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/.project
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/META-INF/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/META-INF/MANIFEST.MF
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/build.properties
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/icons/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/icons/full/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/icons/full/obj16/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/icons/full/obj16/ComBEModelFile.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/icons/full/wizban/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/icons/full/wizban/NewComBE.gif   (contents, props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/plugin.properties
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/plugin.xml
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/pom.xml
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/src/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/src/ComBE/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/src/ComBE/presentation/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/src/ComBE/presentation/ComBEActionBarContributor.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/src/ComBE/presentation/ComBEEditor.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/src/ComBE/presentation/ComBEEditorPlugin.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/src/ComBE/presentation/ComBEModelWizard.java
Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/   (props changed)

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/.classpath
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/.classpath	Mon Jul 16 02:26:20 2012	(r25206)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/.project
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/.project	Mon Jul 16 02:26:20 2012	(r25206)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>org.behaviorengineering.combe.graphical.editor</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.pde.PluginNature</nature>
+	</natures>
+</projectDescription>

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/META-INF/MANIFEST.MF
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/META-INF/MANIFEST.MF	Mon Jul 16 02:26:20 2012	(r25206)
@@ -0,0 +1,18 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: %pluginName
+Bundle-SymbolicName: org.behaviorengineering.combe.graphical.editor;singleton:=true
+Bundle-Version: 1.0.0.qualifier
+Bundle-ClassPath: .
+Bundle-Activator: ComBE.presentation.ComBEEditorPlugin$Implementation
+Bundle-Vendor: %providerName
+Bundle-Localization: plugin
+Bundle-RequiredExecutionEnvironment: JavaSE-1.6
+Export-Package: ComBE.presentation
+Require-Bundle: org.eclipse.core.runtime,
+ org.eclipse.core.resources;visibility:=reexport,
+ org.behaviorengineering.combe.graphical.edit;visibility:=reexport,
+ org.eclipse.emf.ecore.xmi;visibility:=reexport,
+ org.eclipse.emf.edit.ui;visibility:=reexport,
+ org.eclipse.ui.ide;visibility:=reexport
+Bundle-ActivationPolicy: lazy

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/build.properties	Mon Jul 16 02:26:20 2012	(r25206)
@@ -0,0 +1,14 @@
+
+# <copyright>
+# </copyright>
+#
+# $Id$
+
+bin.includes = .,\
+               icons/,\
+               META-INF/,\
+               plugin.xml,\
+               plugin.properties
+jars.compile.order = .
+source.. = src/
+output.. = bin

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/icons/full/obj16/ComBEModelFile.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/icons/full/wizban/NewComBE.gif
==============================================================================
Binary file. No diff available.

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/plugin.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/plugin.properties	Mon Jul 16 02:26:20 2012	(r25206)
@@ -0,0 +1,57 @@
+
+# <copyright>
+# </copyright>
+#
+# $Id$
+
+pluginName = ComBE Editor
+providerName = www.example.org
+
+_UI_ComBEEditor_menu = &ComBE Editor
+
+_UI_CreateChild_menu_item = &New Child
+_UI_CreateSibling_menu_item = N&ew Sibling
+
+_UI_ShowPropertiesView_menu_item = Show &Properties View
+_UI_RefreshViewer_menu_item = &Refresh
+
+_UI_SelectionPage_label = Selection
+_UI_ParentPage_label = Parent
+_UI_ListPage_label = List
+_UI_TreePage_label = Tree
+_UI_TablePage_label = Table
+_UI_TreeWithColumnsPage_label = Tree with Columns
+_UI_ObjectColumn_label = Object
+_UI_SelfColumn_label = Self
+
+_UI_NoObjectSelected = Selected Nothing
+_UI_SingleObjectSelected = Selected Object: {0}
+_UI_MultiObjectSelected = Selected {0} Objects
+
+_UI_OpenEditorError_label = Open Editor
+
+_UI_Wizard_category = Example EMF Model Creation Wizards
+
+_UI_CreateModelError_message = Problems encountered in file "{0}"
+
+_UI_ComBEModelWizard_label = ComBE Model
+_UI_ComBEModelWizard_description = Create a new ComBE model
+
+_UI_ComBEEditor_label = ComBE Model Editor
+
+_UI_ComBEEditorFilenameDefaultBase = My
+_UI_ComBEEditorFilenameExtensions = combe
+
+_UI_Wizard_label = New
+
+_WARN_FilenameExtension = The file name must end in ''.{0}''
+_WARN_FilenameExtensions = The file name must have one of the following extensions: {0}
+
+_UI_ModelObject = &Model Object
+_UI_XMLEncoding = &XML Encoding
+_UI_XMLEncodingChoices = UTF-8 ASCII UTF-16 UTF-16BE UTF-16LE ISO-8859-1
+_UI_Wizard_initial_object_description = Select a model object to create
+
+_UI_FileConflict_label = File Conflict
+_WARN_FileConflict = There are unsaved changes that conflict with changes made outside the editor.  Do you wish to discard this editor's changes?
+

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/plugin.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/plugin.xml	Mon Jul 16 02:26:20 2012	(r25206)
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<?eclipse version="3.0"?>
+
+<!--
+ <copyright>
+ </copyright>
+
+ $Id$
+-->
+
+<plugin>
+
+   <extension point="org.eclipse.ui.newWizards">
+      <category
+            id="org.eclipse.emf.ecore.Wizard.category.ID"
+            name="%_UI_Wizard_category"/>
+      <wizard
+            id="ComBE.presentation.ComBEModelWizardID"
+            name="%_UI_ComBEModelWizard_label"
+            class="ComBE.presentation.ComBEModelWizard"
+            category="org.eclipse.emf.ecore.Wizard.category.ID"
+            icon="icons/full/obj16/ComBEModelFile.gif">
+         <description>%_UI_ComBEModelWizard_description</description>
+         <selection class="org.eclipse.core.resources.IResource"/>
+      </wizard>
+   </extension>
+
+   <extension point="org.eclipse.ui.editors">
+      <editor
+            id="ComBE.presentation.ComBEEditorID"
+            name="%_UI_ComBEEditor_label"
+            icon="icons/full/obj16/ComBEModelFile.gif"
+            extensions="combe"
+            class="ComBE.presentation.ComBEEditor"
+            contributorClass="ComBE.presentation.ComBEActionBarContributor">
+      </editor>
+   </extension>
+
+</plugin>

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/pom.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/pom.xml	Mon Jul 16 02:26:20 2012	(r25206)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
+	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+	<modelVersion>4.0.0</modelVersion>
+	<parent>
+		<artifactId>org.behaviorengineering.combe.parent</artifactId>
+		<groupId>org.be.textbe</groupId>
+		<version>1.0.0-SNAPSHOT</version>
+		<relativePath>../org.behaviorengineering.combe.parent</relativePath>
+	</parent>
+	<artifactId>org.behaviorengineering.combe.graphical.editor</artifactId>
+	<packaging>eclipse-plugin</packaging>
+</project>
\ No newline at end of file

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/src/ComBE/presentation/ComBEActionBarContributor.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/src/ComBE/presentation/ComBEActionBarContributor.java	Mon Jul 16 02:26:20 2012	(r25206)
@@ -0,0 +1,427 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.presentation;
+
+import java.util.ArrayList;
+import java.util.Collection;
+
+import org.eclipse.emf.common.ui.viewer.IViewerProvider;
+
+import org.eclipse.emf.edit.domain.EditingDomain;
+import org.eclipse.emf.edit.domain.IEditingDomainProvider;
+
+import org.eclipse.emf.edit.ui.action.ControlAction;
+import org.eclipse.emf.edit.ui.action.CreateChildAction;
+import org.eclipse.emf.edit.ui.action.CreateSiblingAction;
+import org.eclipse.emf.edit.ui.action.EditingDomainActionBarContributor;
+import org.eclipse.emf.edit.ui.action.LoadResourceAction;
+import org.eclipse.emf.edit.ui.action.ValidateAction;
+
+import org.eclipse.jface.action.Action;
+import org.eclipse.jface.action.ActionContributionItem;
+import org.eclipse.jface.action.IAction;
+import org.eclipse.jface.action.IContributionItem;
+import org.eclipse.jface.action.IContributionManager;
+import org.eclipse.jface.action.IMenuListener;
+import org.eclipse.jface.action.IMenuManager;
+import org.eclipse.jface.action.IToolBarManager;
+import org.eclipse.jface.action.MenuManager;
+import org.eclipse.jface.action.Separator;
+import org.eclipse.jface.action.SubContributionItem;
+
+import org.eclipse.jface.viewers.ISelection;
+import org.eclipse.jface.viewers.ISelectionChangedListener;
+import org.eclipse.jface.viewers.ISelectionProvider;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.jface.viewers.SelectionChangedEvent;
+import org.eclipse.jface.viewers.Viewer;
+
+import org.eclipse.ui.IEditorPart;
+import org.eclipse.ui.PartInitException;
+
+/**
+ * This is the action bar contributor for the ComBE model editor.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class ComBEActionBarContributor
+	extends EditingDomainActionBarContributor
+	implements ISelectionChangedListener {
+	/**
+	 * This keeps track of the active editor.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected IEditorPart activeEditorPart;
+
+	/**
+	 * This keeps track of the current selection provider.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected ISelectionProvider selectionProvider;
+
+	/**
+	 * This action opens the Properties view.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected IAction showPropertiesViewAction =
+		new Action(ComBEEditorPlugin.INSTANCE.getString("_UI_ShowPropertiesView_menu_item")) {
+			@Override
+			public void run() {
+				try {
+					getPage().showView("org.eclipse.ui.views.PropertySheet");
+				}
+				catch (PartInitException exception) {
+					ComBEEditorPlugin.INSTANCE.log(exception);
+				}
+			}
+		};
+
+	/**
+	 * This action refreshes the viewer of the current editor if the editor
+	 * implements {@link org.eclipse.emf.common.ui.viewer.IViewerProvider}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected IAction refreshViewerAction =
+		new Action(ComBEEditorPlugin.INSTANCE.getString("_UI_RefreshViewer_menu_item")) {
+			@Override
+			public boolean isEnabled() {
+				return activeEditorPart instanceof IViewerProvider;
+			}
+
+			@Override
+			public void run() {
+				if (activeEditorPart instanceof IViewerProvider) {
+					Viewer viewer = ((IViewerProvider)activeEditorPart).getViewer();
+					if (viewer != null) {
+						viewer.refresh();
+					}
+				}
+			}
+		};
+
+	/**
+	 * This will contain one {@link org.eclipse.emf.edit.ui.action.CreateChildAction} corresponding to each descriptor
+	 * generated for the current selection by the item provider.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Collection<IAction> createChildActions;
+
+	/**
+	 * This is the menu manager into which menu contribution items should be added for CreateChild actions.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected IMenuManager createChildMenuManager;
+
+	/**
+	 * This will contain one {@link org.eclipse.emf.edit.ui.action.CreateSiblingAction} corresponding to each descriptor
+	 * generated for the current selection by the item provider.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Collection<IAction> createSiblingActions;
+
+	/**
+	 * This is the menu manager into which menu contribution items should be added for CreateSibling actions.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected IMenuManager createSiblingMenuManager;
+
+	/**
+	 * This creates an instance of the contributor.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ComBEActionBarContributor() {
+		super(ADDITIONS_LAST_STYLE);
+		loadResourceAction = new LoadResourceAction();
+		validateAction = new ValidateAction();
+		controlAction = new ControlAction();
+	}
+
+	/**
+	 * This adds Separators for editor additions to the tool bar.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void contributeToToolBar(IToolBarManager toolBarManager) {
+		toolBarManager.add(new Separator("combe-settings"));
+		toolBarManager.add(new Separator("combe-additions"));
+	}
+
+	/**
+	 * This adds to the menu bar a menu and some separators for editor additions,
+	 * as well as the sub-menus for object creation items.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void contributeToMenu(IMenuManager menuManager) {
+		super.contributeToMenu(menuManager);
+
+		IMenuManager submenuManager = new MenuManager(ComBEEditorPlugin.INSTANCE.getString("_UI_ComBEEditor_menu"), "ComBEMenuID");
+		menuManager.insertAfter("additions", submenuManager);
+		submenuManager.add(new Separator("settings"));
+		submenuManager.add(new Separator("actions"));
+		submenuManager.add(new Separator("additions"));
+		submenuManager.add(new Separator("additions-end"));
+
+		// Prepare for CreateChild item addition or removal.
+		//
+		createChildMenuManager = new MenuManager(ComBEEditorPlugin.INSTANCE.getString("_UI_CreateChild_menu_item"));
+		submenuManager.insertBefore("additions", createChildMenuManager);
+
+		// Prepare for CreateSibling item addition or removal.
+		//
+		createSiblingMenuManager = new MenuManager(ComBEEditorPlugin.INSTANCE.getString("_UI_CreateSibling_menu_item"));
+		submenuManager.insertBefore("additions", createSiblingMenuManager);
+
+		// Force an update because Eclipse hides empty menus now.
+		//
+		submenuManager.addMenuListener
+			(new IMenuListener() {
+				 public void menuAboutToShow(IMenuManager menuManager) {
+					 menuManager.updateAll(true);
+				 }
+			 });
+
+		addGlobalActions(submenuManager);
+	}
+
+	/**
+	 * When the active editor changes, this remembers the change and registers with it as a selection provider.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void setActiveEditor(IEditorPart part) {
+		super.setActiveEditor(part);
+		activeEditorPart = part;
+
+		// Switch to the new selection provider.
+		//
+		if (selectionProvider != null) {
+			selectionProvider.removeSelectionChangedListener(this);
+		}
+		if (part == null) {
+			selectionProvider = null;
+		}
+		else {
+			selectionProvider = part.getSite().getSelectionProvider();
+			selectionProvider.addSelectionChangedListener(this);
+
+			// Fake a selection changed event to update the menus.
+			//
+			if (selectionProvider.getSelection() != null) {
+				selectionChanged(new SelectionChangedEvent(selectionProvider, selectionProvider.getSelection()));
+			}
+		}
+	}
+
+	/**
+	 * This implements {@link org.eclipse.jface.viewers.ISelectionChangedListener},
+	 * handling {@link org.eclipse.jface.viewers.SelectionChangedEvent}s by querying for the children and siblings
+	 * that can be added to the selected object and updating the menus accordingly.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void selectionChanged(SelectionChangedEvent event) {
+		// Remove any menu items for old selection.
+		//
+		if (createChildMenuManager != null) {
+			depopulateManager(createChildMenuManager, createChildActions);
+		}
+		if (createSiblingMenuManager != null) {
+			depopulateManager(createSiblingMenuManager, createSiblingActions);
+		}
+
+		// Query the new selection for appropriate new child/sibling descriptors
+		//
+		Collection<?> newChildDescriptors = null;
+		Collection<?> newSiblingDescriptors = null;
+
+		ISelection selection = event.getSelection();
+		if (selection instanceof IStructuredSelection && ((IStructuredSelection)selection).size() == 1) {
+			Object object = ((IStructuredSelection)selection).getFirstElement();
+
+			EditingDomain domain = ((IEditingDomainProvider)activeEditorPart).getEditingDomain();
+
+			newChildDescriptors = domain.getNewChildDescriptors(object, null);
+			newSiblingDescriptors = domain.getNewChildDescriptors(null, object);
+		}
+
+		// Generate actions for selection; populate and redraw the menus.
+		//
+		createChildActions = generateCreateChildActions(newChildDescriptors, selection);
+		createSiblingActions = generateCreateSiblingActions(newSiblingDescriptors, selection);
+
+		if (createChildMenuManager != null) {
+			populateManager(createChildMenuManager, createChildActions, null);
+			createChildMenuManager.update(true);
+		}
+		if (createSiblingMenuManager != null) {
+			populateManager(createSiblingMenuManager, createSiblingActions, null);
+			createSiblingMenuManager.update(true);
+		}
+	}
+
+	/**
+	 * This generates a {@link org.eclipse.emf.edit.ui.action.CreateChildAction} for each object in <code>descriptors</code>,
+	 * and returns the collection of these actions.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Collection<IAction> generateCreateChildActions(Collection<?> descriptors, ISelection selection) {
+		Collection<IAction> actions = new ArrayList<IAction>();
+		if (descriptors != null) {
+			for (Object descriptor : descriptors) {
+				actions.add(new CreateChildAction(activeEditorPart, selection, descriptor));
+			}
+		}
+		return actions;
+	}
+
+	/**
+	 * This generates a {@link org.eclipse.emf.edit.ui.action.CreateSiblingAction} for each object in <code>descriptors</code>,
+	 * and returns the collection of these actions.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Collection<IAction> generateCreateSiblingActions(Collection<?> descriptors, ISelection selection) {
+		Collection<IAction> actions = new ArrayList<IAction>();
+		if (descriptors != null) {
+			for (Object descriptor : descriptors) {
+				actions.add(new CreateSiblingAction(activeEditorPart, selection, descriptor));
+			}
+		}
+		return actions;
+	}
+
+	/**
+	 * This populates the specified <code>manager</code> with {@link org.eclipse.jface.action.ActionContributionItem}s
+	 * based on the {@link org.eclipse.jface.action.IAction}s contained in the <code>actions</code> collection,
+	 * by inserting them before the specified contribution item <code>contributionID</code>.
+	 * If <code>contributionID</code> is <code>null</code>, they are simply added.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void populateManager(IContributionManager manager, Collection<? extends IAction> actions, String contributionID) {
+		if (actions != null) {
+			for (IAction action : actions) {
+				if (contributionID != null) {
+					manager.insertBefore(contributionID, action);
+				}
+				else {
+					manager.add(action);
+				}
+			}
+		}
+	}
+		
+	/**
+	 * This removes from the specified <code>manager</code> all {@link org.eclipse.jface.action.ActionContributionItem}s
+	 * based on the {@link org.eclipse.jface.action.IAction}s contained in the <code>actions</code> collection.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void depopulateManager(IContributionManager manager, Collection<? extends IAction> actions) {
+		if (actions != null) {
+			IContributionItem[] items = manager.getItems();
+			for (int i = 0; i < items.length; i++) {
+				// Look into SubContributionItems
+				//
+				IContributionItem contributionItem = items[i];
+				while (contributionItem instanceof SubContributionItem) {
+					contributionItem = ((SubContributionItem)contributionItem).getInnerItem();
+				}
+
+				// Delete the ActionContributionItems with matching action.
+				//
+				if (contributionItem instanceof ActionContributionItem) {
+					IAction action = ((ActionContributionItem)contributionItem).getAction();
+					if (actions.contains(action)) {
+						manager.remove(contributionItem);
+					}
+				}
+			}
+		}
+	}
+
+	/**
+	 * This populates the pop-up menu before it appears.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void menuAboutToShow(IMenuManager menuManager) {
+		super.menuAboutToShow(menuManager);
+		MenuManager submenuManager = null;
+
+		submenuManager = new MenuManager(ComBEEditorPlugin.INSTANCE.getString("_UI_CreateChild_menu_item"));
+		populateManager(submenuManager, createChildActions, null);
+		menuManager.insertBefore("edit", submenuManager);
+
+		submenuManager = new MenuManager(ComBEEditorPlugin.INSTANCE.getString("_UI_CreateSibling_menu_item"));
+		populateManager(submenuManager, createSiblingActions, null);
+		menuManager.insertBefore("edit", submenuManager);
+	}
+
+	/**
+	 * This inserts global actions before the "additions-end" separator.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected void addGlobalActions(IMenuManager menuManager) {
+		menuManager.insertAfter("additions-end", new Separator("ui-actions"));
+		menuManager.insertAfter("ui-actions", showPropertiesViewAction);
+
+		refreshViewerAction.setEnabled(refreshViewerAction.isEnabled());		
+		menuManager.insertAfter("ui-actions", refreshViewerAction);
+
+		super.addGlobalActions(menuManager);
+	}
+
+	/**
+	 * This ensures that a delete action will clean up all references to deleted objects.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected boolean removeAllReferencesOnDelete() {
+		return true;
+	}
+
+}
\ No newline at end of file

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/src/ComBE/presentation/ComBEEditor.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/src/ComBE/presentation/ComBEEditor.java	Mon Jul 16 02:26:20 2012	(r25206)
@@ -0,0 +1,1816 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.presentation;
+
+
+import java.io.IOException;
+import java.io.InputStream;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.EventObject;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.LinkedHashMap;
+import java.util.List;
+import java.util.Map;
+
+import org.eclipse.core.resources.IFile;
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.resources.IResourceChangeEvent;
+import org.eclipse.core.resources.IResourceChangeListener;
+import org.eclipse.core.resources.IResourceDelta;
+import org.eclipse.core.resources.IResourceDeltaVisitor;
+import org.eclipse.core.resources.ResourcesPlugin;
+
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.NullProgressMonitor;
+
+import org.eclipse.jface.action.IMenuListener;
+import org.eclipse.jface.action.IMenuManager;
+import org.eclipse.jface.action.IStatusLineManager;
+import org.eclipse.jface.action.IToolBarManager;
+import org.eclipse.jface.action.MenuManager;
+import org.eclipse.jface.action.Separator;
+
+import org.eclipse.jface.dialogs.MessageDialog;
+import org.eclipse.jface.dialogs.ProgressMonitorDialog;
+
+import org.eclipse.jface.viewers.ColumnWeightData;
+import org.eclipse.jface.viewers.ISelection;
+import org.eclipse.jface.viewers.ISelectionChangedListener;
+import org.eclipse.jface.viewers.ISelectionProvider;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.jface.viewers.ListViewer;
+import org.eclipse.jface.viewers.SelectionChangedEvent;
+import org.eclipse.jface.viewers.StructuredSelection;
+import org.eclipse.jface.viewers.StructuredViewer;
+import org.eclipse.jface.viewers.TableLayout;
+import org.eclipse.jface.viewers.TableViewer;
+import org.eclipse.jface.viewers.TreeViewer;
+import org.eclipse.jface.viewers.Viewer;
+
+import org.eclipse.swt.SWT;
+
+import org.eclipse.swt.custom.CTabFolder;
+
+import org.eclipse.swt.dnd.DND;
+import org.eclipse.swt.dnd.Transfer;
+
+import org.eclipse.swt.events.ControlAdapter;
+import org.eclipse.swt.events.ControlEvent;
+
+import org.eclipse.swt.graphics.Point;
+
+import org.eclipse.swt.layout.FillLayout;
+
+import org.eclipse.swt.widgets.Composite;
+import org.eclipse.swt.widgets.Menu;
+import org.eclipse.swt.widgets.Table;
+import org.eclipse.swt.widgets.TableColumn;
+import org.eclipse.swt.widgets.Tree;
+import org.eclipse.swt.widgets.TreeColumn;
+
+import org.eclipse.ui.IActionBars;
+import org.eclipse.ui.IEditorInput;
+import org.eclipse.ui.IEditorPart;
+import org.eclipse.ui.IEditorSite;
+import org.eclipse.ui.IPartListener;
+import org.eclipse.ui.IWorkbenchPart;
+import org.eclipse.ui.PartInitException;
+
+import org.eclipse.ui.dialogs.SaveAsDialog;
+
+import org.eclipse.ui.ide.IGotoMarker;
+
+import org.eclipse.ui.part.FileEditorInput;
+import org.eclipse.ui.part.MultiPageEditorPart;
+
+import org.eclipse.ui.views.contentoutline.ContentOutline;
+import org.eclipse.ui.views.contentoutline.ContentOutlinePage;
+import org.eclipse.ui.views.contentoutline.IContentOutlinePage;
+
+import org.eclipse.ui.views.properties.IPropertySheetPage;
+import org.eclipse.ui.views.properties.PropertySheet;
+import org.eclipse.ui.views.properties.PropertySheetPage;
+
+import org.eclipse.emf.common.command.BasicCommandStack;
+import org.eclipse.emf.common.command.Command;
+import org.eclipse.emf.common.command.CommandStack;
+import org.eclipse.emf.common.command.CommandStackListener;
+
+import org.eclipse.emf.common.notify.AdapterFactory;
+import org.eclipse.emf.common.notify.Notification;
+
+import org.eclipse.emf.common.ui.MarkerHelper;
+import org.eclipse.emf.common.ui.ViewerPane;
+
+import org.eclipse.emf.common.ui.editor.ProblemEditorPart;
+
+import org.eclipse.emf.common.ui.viewer.IViewerProvider;
+
+import org.eclipse.emf.common.util.BasicDiagnostic;
+import org.eclipse.emf.common.util.Diagnostic;
+import org.eclipse.emf.common.util.URI;
+
+import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.EValidator;
+
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.emf.ecore.resource.ResourceSet;
+
+import org.eclipse.emf.ecore.util.EContentAdapter;
+import org.eclipse.emf.ecore.util.EcoreUtil;
+
+import org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain;
+import org.eclipse.emf.edit.domain.EditingDomain;
+import org.eclipse.emf.edit.domain.IEditingDomainProvider;
+
+import org.eclipse.emf.edit.provider.AdapterFactoryItemDelegator;
+import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
+import org.eclipse.emf.edit.provider.ReflectiveItemProviderAdapterFactory;
+
+import org.eclipse.emf.edit.provider.resource.ResourceItemProviderAdapterFactory;
+
+import org.eclipse.emf.edit.ui.action.EditingDomainActionBarContributor;
+
+import org.eclipse.emf.edit.ui.celleditor.AdapterFactoryTreeEditor;
+
+import org.eclipse.emf.edit.ui.dnd.EditingDomainViewerDropAdapter;
+import org.eclipse.emf.edit.ui.dnd.LocalTransfer;
+import org.eclipse.emf.edit.ui.dnd.ViewerDragAdapter;
+
+import org.eclipse.emf.edit.ui.provider.AdapterFactoryContentProvider;
+import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
+import org.eclipse.emf.edit.ui.provider.UnwrappingSelectionProvider;
+
+import org.eclipse.emf.edit.ui.util.EditUIMarkerHelper;
+import org.eclipse.emf.edit.ui.util.EditUIUtil;
+
+import org.eclipse.emf.edit.ui.view.ExtendedPropertySheetPage;
+
+import ComBE.provider.ComBEItemProviderAdapterFactory;
+
+import org.eclipse.ui.actions.WorkspaceModifyOperation;
+
+
+/**
+ * This is an example of a ComBE model editor.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class ComBEEditor
+	extends MultiPageEditorPart
+	implements IEditingDomainProvider, ISelectionProvider, IMenuListener, IViewerProvider, IGotoMarker {
+	/**
+	 * This keeps track of the editing domain that is used to track all changes to the model.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected AdapterFactoryEditingDomain editingDomain;
+
+	/**
+	 * This is the one adapter factory used for providing views of the model.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected ComposedAdapterFactory adapterFactory;
+
+	/**
+	 * This is the content outline page.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected IContentOutlinePage contentOutlinePage;
+
+	/**
+	 * This is a kludge...
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected IStatusLineManager contentOutlineStatusLineManager;
+
+	/**
+	 * This is the content outline page's viewer.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected TreeViewer contentOutlineViewer;
+
+	/**
+	 * This is the property sheet page.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected PropertySheetPage propertySheetPage;
+
+	/**
+	 * This is the viewer that shadows the selection in the content outline.
+	 * The parent relation must be correctly defined for this to work.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected TreeViewer selectionViewer;
+
+	/**
+	 * This inverts the roll of parent and child in the content provider and show parents as a tree.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected TreeViewer parentViewer;
+
+	/**
+	 * This shows how a tree view works.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected TreeViewer treeViewer;
+
+	/**
+	 * This shows how a list view works.
+	 * A list viewer doesn't support icons.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected ListViewer listViewer;
+
+	/**
+	 * This shows how a table view works.
+	 * A table can be used as a list with icons.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected TableViewer tableViewer;
+
+	/**
+	 * This shows how a tree view with columns works.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected TreeViewer treeViewerWithColumns;
+
+	/**
+	 * This keeps track of the active viewer pane, in the book.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected ViewerPane currentViewerPane;
+
+	/**
+	 * This keeps track of the active content viewer, which may be either one of the viewers in the pages or the content outline viewer.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Viewer currentViewer;
+
+	/**
+	 * This listens to which ever viewer is active.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected ISelectionChangedListener selectionChangedListener;
+
+	/**
+	 * This keeps track of all the {@link org.eclipse.jface.viewers.ISelectionChangedListener}s that are listening to this editor.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Collection<ISelectionChangedListener> selectionChangedListeners = new ArrayList<ISelectionChangedListener>();
+
+	/**
+	 * This keeps track of the selection of the editor as a whole.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected ISelection editorSelection = StructuredSelection.EMPTY;
+
+	/**
+	 * The MarkerHelper is responsible for creating workspace resource markers presented
+	 * in Eclipse's Problems View.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected MarkerHelper markerHelper = new EditUIMarkerHelper();
+
+	/**
+	 * This listens for when the outline becomes active
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected IPartListener partListener =
+		new IPartListener() {
+			public void partActivated(IWorkbenchPart p) {
+				if (p instanceof ContentOutline) {
+					if (((ContentOutline)p).getCurrentPage() == contentOutlinePage) {
+						getActionBarContributor().setActiveEditor(ComBEEditor.this);
+
+						setCurrentViewer(contentOutlineViewer);
+					}
+				}
+				else if (p instanceof PropertySheet) {
+					if (((PropertySheet)p).getCurrentPage() == propertySheetPage) {
+						getActionBarContributor().setActiveEditor(ComBEEditor.this);
+						handleActivate();
+					}
+				}
+				else if (p == ComBEEditor.this) {
+					handleActivate();
+				}
+			}
+			public void partBroughtToTop(IWorkbenchPart p) {
+				// Ignore.
+			}
+			public void partClosed(IWorkbenchPart p) {
+				// Ignore.
+			}
+			public void partDeactivated(IWorkbenchPart p) {
+				// Ignore.
+			}
+			public void partOpened(IWorkbenchPart p) {
+				// Ignore.
+			}
+		};
+
+	/**
+	 * Resources that have been removed since last activation.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Collection<Resource> removedResources = new ArrayList<Resource>();
+
+	/**
+	 * Resources that have been changed since last activation.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Collection<Resource> changedResources = new ArrayList<Resource>();
+
+	/**
+	 * Resources that have been saved.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Collection<Resource> savedResources = new ArrayList<Resource>();
+
+	/**
+	 * Map to store the diagnostic associated with a resource.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Map<Resource, Diagnostic> resourceToDiagnosticMap = new LinkedHashMap<Resource, Diagnostic>();
+
+	/**
+	 * Controls whether the problem indication should be updated.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected boolean updateProblemIndication = true;
+
+	/**
+	 * Adapter used to update the problem indication when resources are demanded loaded.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected EContentAdapter problemIndicationAdapter = 
+		new EContentAdapter() {
+			@Override
+			public void notifyChanged(Notification notification) {
+				if (notification.getNotifier() instanceof Resource) {
+					switch (notification.getFeatureID(Resource.class)) {
+						case Resource.RESOURCE__IS_LOADED:
+						case Resource.RESOURCE__ERRORS:
+						case Resource.RESOURCE__WARNINGS: {
+							Resource resource = (Resource)notification.getNotifier();
+							Diagnostic diagnostic = analyzeResourceProblems(resource, null);
+							if (diagnostic.getSeverity() != Diagnostic.OK) {
+								resourceToDiagnosticMap.put(resource, diagnostic);
+							}
+							else {
+								resourceToDiagnosticMap.remove(resource);
+							}
+
+							if (updateProblemIndication) {
+								getSite().getShell().getDisplay().asyncExec
+									(new Runnable() {
+										 public void run() {
+											 updateProblemIndication();
+										 }
+									 });
+							}
+							break;
+						}
+					}
+				}
+				else {
+					super.notifyChanged(notification);
+				}
+			}
+
+			@Override
+			protected void setTarget(Resource target) {
+				basicSetTarget(target);
+			}
+
+			@Override
+			protected void unsetTarget(Resource target) {
+				basicUnsetTarget(target);
+			}
+		};
+
+	/**
+	 * This listens for workspace changes.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected IResourceChangeListener resourceChangeListener =
+		new IResourceChangeListener() {
+			public void resourceChanged(IResourceChangeEvent event) {
+				IResourceDelta delta = event.getDelta();
+				try {
+					class ResourceDeltaVisitor implements IResourceDeltaVisitor {
+						protected ResourceSet resourceSet = editingDomain.getResourceSet();
+						protected Collection<Resource> changedResources = new ArrayList<Resource>();
+						protected Collection<Resource> removedResources = new ArrayList<Resource>();
+
+						public boolean visit(IResourceDelta delta) {
+							if (delta.getResource().getType() == IResource.FILE) {
+								if (delta.getKind() == IResourceDelta.REMOVED ||
+								    delta.getKind() == IResourceDelta.CHANGED && delta.getFlags() != IResourceDelta.MARKERS) {
+									Resource resource = resourceSet.getResource(URI.createPlatformResourceURI(delta.getFullPath().toString(), true), false);
+									if (resource != null) {
+										if (delta.getKind() == IResourceDelta.REMOVED) {
+											removedResources.add(resource);
+										}
+										else if (!savedResources.remove(resource)) {
+											changedResources.add(resource);
+										}
+									}
+								}
+							}
+
+							return true;
+						}
+
+						public Collection<Resource> getChangedResources() {
+							return changedResources;
+						}
+
+						public Collection<Resource> getRemovedResources() {
+							return removedResources;
+						}
+					}
+
+					final ResourceDeltaVisitor visitor = new ResourceDeltaVisitor();
+					delta.accept(visitor);
+
+					if (!visitor.getRemovedResources().isEmpty()) {
+						getSite().getShell().getDisplay().asyncExec
+							(new Runnable() {
+								 public void run() {
+									 removedResources.addAll(visitor.getRemovedResources());
+									 if (!isDirty()) {
+										 getSite().getPage().closeEditor(ComBEEditor.this, false);
+									 }
+								 }
+							 });
+					}
+
+					if (!visitor.getChangedResources().isEmpty()) {
+						getSite().getShell().getDisplay().asyncExec
+							(new Runnable() {
+								 public void run() {
+									 changedResources.addAll(visitor.getChangedResources());
+									 if (getSite().getPage().getActiveEditor() == ComBEEditor.this) {
+										 handleActivate();
+									 }
+								 }
+							 });
+					}
+				}
+				catch (CoreException exception) {
+					ComBEEditorPlugin.INSTANCE.log(exception);
+				}
+			}
+		};
+
+	/**
+	 * Handles activation of the editor or it's associated views.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void handleActivate() {
+		// Recompute the read only state.
+		//
+		if (editingDomain.getResourceToReadOnlyMap() != null) {
+		  editingDomain.getResourceToReadOnlyMap().clear();
+
+		  // Refresh any actions that may become enabled or disabled.
+		  //
+		  setSelection(getSelection());
+		}
+
+		if (!removedResources.isEmpty()) {
+			if (handleDirtyConflict()) {
+				getSite().getPage().closeEditor(ComBEEditor.this, false);
+			}
+			else {
+				removedResources.clear();
+				changedResources.clear();
+				savedResources.clear();
+			}
+		}
+		else if (!changedResources.isEmpty()) {
+			changedResources.removeAll(savedResources);
+			handleChangedResources();
+			changedResources.clear();
+			savedResources.clear();
+		}
+	}
+
+	/**
+	 * Handles what to do with changed resources on activation.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void handleChangedResources() {
+		if (!changedResources.isEmpty() && (!isDirty() || handleDirtyConflict())) {
+			if (isDirty()) {
+				changedResources.addAll(editingDomain.getResourceSet().getResources());
+			}
+			editingDomain.getCommandStack().flush();
+
+			updateProblemIndication = false;
+			for (Resource resource : changedResources) {
+				if (resource.isLoaded()) {
+					resource.unload();
+					try {
+						resource.load(Collections.EMPTY_MAP);
+					}
+					catch (IOException exception) {
+						if (!resourceToDiagnosticMap.containsKey(resource)) {
+							resourceToDiagnosticMap.put(resource, analyzeResourceProblems(resource, exception));
+						}
+					}
+				}
+			}
+
+			if (AdapterFactoryEditingDomain.isStale(editorSelection)) {
+				setSelection(StructuredSelection.EMPTY);
+			}
+
+			updateProblemIndication = true;
+			updateProblemIndication();
+		}
+	}
+  
+	/**
+	 * Updates the problems indication with the information described in the specified diagnostic.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void updateProblemIndication() {
+		if (updateProblemIndication) {
+			BasicDiagnostic diagnostic =
+				new BasicDiagnostic
+					(Diagnostic.OK,
+					 "org.behaviorengineering.combe.graphical.editor",
+					 0,
+					 null,
+					 new Object [] { editingDomain.getResourceSet() });
+			for (Diagnostic childDiagnostic : resourceToDiagnosticMap.values()) {
+				if (childDiagnostic.getSeverity() != Diagnostic.OK) {
+					diagnostic.add(childDiagnostic);
+				}
+			}
+
+			int lastEditorPage = getPageCount() - 1;
+			if (lastEditorPage >= 0 && getEditor(lastEditorPage) instanceof ProblemEditorPart) {
+				((ProblemEditorPart)getEditor(lastEditorPage)).setDiagnostic(diagnostic);
+				if (diagnostic.getSeverity() != Diagnostic.OK) {
+					setActivePage(lastEditorPage);
+				}
+			}
+			else if (diagnostic.getSeverity() != Diagnostic.OK) {
+				ProblemEditorPart problemEditorPart = new ProblemEditorPart();
+				problemEditorPart.setDiagnostic(diagnostic);
+				problemEditorPart.setMarkerHelper(markerHelper);
+				try {
+					addPage(++lastEditorPage, problemEditorPart, getEditorInput());
+					setPageText(lastEditorPage, problemEditorPart.getPartName());
+					setActivePage(lastEditorPage);
+					showTabs();
+				}
+				catch (PartInitException exception) {
+					ComBEEditorPlugin.INSTANCE.log(exception);
+				}
+			}
+
+			if (markerHelper.hasMarkers(editingDomain.getResourceSet())) {
+				markerHelper.deleteMarkers(editingDomain.getResourceSet());
+				if (diagnostic.getSeverity() != Diagnostic.OK) {
+					try {
+						markerHelper.createMarkers(diagnostic);
+					}
+					catch (CoreException exception) {
+						ComBEEditorPlugin.INSTANCE.log(exception);
+					}
+				}
+			}
+		}
+	}
+
+	/**
+	 * Shows a dialog that asks if conflicting changes should be discarded.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected boolean handleDirtyConflict() {
+		return
+			MessageDialog.openQuestion
+				(getSite().getShell(),
+				 getString("_UI_FileConflict_label"),
+				 getString("_WARN_FileConflict"));
+	}
+
+	/**
+	 * This creates a model editor.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ComBEEditor() {
+		super();
+		initializeEditingDomain();
+	}
+
+	/**
+	 * This sets up the editing domain for the model editor.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void initializeEditingDomain() {
+		// Create an adapter factory that yields item providers.
+		//
+		adapterFactory = new ComposedAdapterFactory(ComposedAdapterFactory.Descriptor.Registry.INSTANCE);
+
+		adapterFactory.addAdapterFactory(new ResourceItemProviderAdapterFactory());
+		adapterFactory.addAdapterFactory(new ComBEItemProviderAdapterFactory());
+		adapterFactory.addAdapterFactory(new ReflectiveItemProviderAdapterFactory());
+
+		// Create the command stack that will notify this editor as commands are executed.
+		//
+		BasicCommandStack commandStack = new BasicCommandStack();
+
+		// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus.
+		//
+		commandStack.addCommandStackListener
+			(new CommandStackListener() {
+				 public void commandStackChanged(final EventObject event) {
+					 getContainer().getDisplay().asyncExec
+						 (new Runnable() {
+							  public void run() {
+								  firePropertyChange(IEditorPart.PROP_DIRTY);
+
+								  // Try to select the affected objects.
+								  //
+								  Command mostRecentCommand = ((CommandStack)event.getSource()).getMostRecentCommand();
+								  if (mostRecentCommand != null) {
+									  setSelectionToViewer(mostRecentCommand.getAffectedObjects());
+								  }
+								  if (propertySheetPage != null && !propertySheetPage.getControl().isDisposed()) {
+									  propertySheetPage.refresh();
+								  }
+							  }
+						  });
+				 }
+			 });
+
+		// Create the editing domain with a special command stack.
+		//
+		editingDomain = new AdapterFactoryEditingDomain(adapterFactory, commandStack, new HashMap<Resource, Boolean>());
+	}
+
+	/**
+	 * This is here for the listener to be able to call it.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+			@Override
+	protected void firePropertyChange(int action) {
+		super.firePropertyChange(action);
+	}
+
+	/**
+	 * This sets the selection into whichever viewer is active.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setSelectionToViewer(Collection<?> collection) {
+		final Collection<?> theSelection = collection;
+		// Make sure it's okay.
+		//
+		if (theSelection != null && !theSelection.isEmpty()) {
+			Runnable runnable =
+				new Runnable() {
+					public void run() {
+						// Try to select the items in the current content viewer of the editor.
+						//
+						if (currentViewer != null) {
+							currentViewer.setSelection(new StructuredSelection(theSelection.toArray()), true);
+						}
+					}
+				};
+			getSite().getShell().getDisplay().asyncExec(runnable);
+		}
+	}
+
+	/**
+	 * This returns the editing domain as required by the {@link IEditingDomainProvider} interface.
+	 * This is important for implementing the static methods of {@link AdapterFactoryEditingDomain}
+	 * and for supporting {@link org.eclipse.emf.edit.ui.action.CommandAction}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EditingDomain getEditingDomain() {
+		return editingDomain;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public class ReverseAdapterFactoryContentProvider extends AdapterFactoryContentProvider {
+		/**
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		public ReverseAdapterFactoryContentProvider(AdapterFactory adapterFactory) {
+			super(adapterFactory);
+		}
+
+		/**
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		@Override
+		public Object [] getElements(Object object) {
+			Object parent = super.getParent(object);
+			return (parent == null ? Collections.EMPTY_SET : Collections.singleton(parent)).toArray();
+		}
+
+		/**
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		@Override
+		public Object [] getChildren(Object object) {
+			Object parent = super.getParent(object);
+			return (parent == null ? Collections.EMPTY_SET : Collections.singleton(parent)).toArray();
+		}
+
+		/**
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		@Override
+		public boolean hasChildren(Object object) {
+			Object parent = super.getParent(object);
+			return parent != null;
+		}
+
+		/**
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		@Override
+		public Object getParent(Object object) {
+			return null;
+		}
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setCurrentViewerPane(ViewerPane viewerPane) {
+		if (currentViewerPane != viewerPane) {
+			if (currentViewerPane != null) {
+				currentViewerPane.showFocus(false);
+			}
+			currentViewerPane = viewerPane;
+		}
+		setCurrentViewer(currentViewerPane.getViewer());
+	}
+
+	/**
+	 * This makes sure that one content viewer, either for the current page or the outline view, if it has focus,
+	 * is the current one.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setCurrentViewer(Viewer viewer) {
+		// If it is changing...
+		//
+		if (currentViewer != viewer) {
+			if (selectionChangedListener == null) {
+				// Create the listener on demand.
+				//
+				selectionChangedListener =
+					new ISelectionChangedListener() {
+						// This just notifies those things that are affected by the section.
+						//
+						public void selectionChanged(SelectionChangedEvent selectionChangedEvent) {
+							setSelection(selectionChangedEvent.getSelection());
+						}
+					};
+			}
+
+			// Stop listening to the old one.
+			//
+			if (currentViewer != null) {
+				currentViewer.removeSelectionChangedListener(selectionChangedListener);
+			}
+
+			// Start listening to the new one.
+			//
+			if (viewer != null) {
+				viewer.addSelectionChangedListener(selectionChangedListener);
+			}
+
+			// Remember it.
+			//
+			currentViewer = viewer;
+
+			// Set the editors selection based on the current viewer's selection.
+			//
+			setSelection(currentViewer == null ? StructuredSelection.EMPTY : currentViewer.getSelection());
+		}
+	}
+
+	/**
+	 * This returns the viewer as required by the {@link IViewerProvider} interface.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public Viewer getViewer() {
+		return currentViewer;
+	}
+
+	/**
+	 * This creates a context menu for the viewer and adds a listener as well registering the menu for extension.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void createContextMenuFor(StructuredViewer viewer) {
+		MenuManager contextMenu = new MenuManager("#PopUp");
+		contextMenu.add(new Separator("additions"));
+		contextMenu.setRemoveAllWhenShown(true);
+		contextMenu.addMenuListener(this);
+		Menu menu= contextMenu.createContextMenu(viewer.getControl());
+		viewer.getControl().setMenu(menu);
+		getSite().registerContextMenu(contextMenu, new UnwrappingSelectionProvider(viewer));
+
+		int dndOperations = DND.DROP_COPY | DND.DROP_MOVE | DND.DROP_LINK;
+		Transfer[] transfers = new Transfer[] { LocalTransfer.getInstance() };
+		viewer.addDragSupport(dndOperations, transfers, new ViewerDragAdapter(viewer));
+		viewer.addDropSupport(dndOperations, transfers, new EditingDomainViewerDropAdapter(editingDomain, viewer));
+	}
+
+	/**
+	 * This is the method called to load a resource into the editing domain's resource set based on the editor's input.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void createModel() {
+		URI resourceURI = EditUIUtil.getURI(getEditorInput());
+		Exception exception = null;
+		Resource resource = null;
+		try {
+			// Load the resource through the editing domain.
+			//
+			resource = editingDomain.getResourceSet().getResource(resourceURI, true);
+		}
+		catch (Exception e) {
+			exception = e;
+			resource = editingDomain.getResourceSet().getResource(resourceURI, false);
+		}
+
+		Diagnostic diagnostic = analyzeResourceProblems(resource, exception);
+		if (diagnostic.getSeverity() != Diagnostic.OK) {
+			resourceToDiagnosticMap.put(resource,  analyzeResourceProblems(resource, exception));
+		}
+		editingDomain.getResourceSet().eAdapters().add(problemIndicationAdapter);
+	}
+
+	/**
+	 * Returns a diagnostic describing the errors and warnings listed in the resource
+	 * and the specified exception (if any).
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public Diagnostic analyzeResourceProblems(Resource resource, Exception exception) {
+		if (!resource.getErrors().isEmpty() || !resource.getWarnings().isEmpty()) {
+			BasicDiagnostic basicDiagnostic =
+				new BasicDiagnostic
+					(Diagnostic.ERROR,
+					 "org.behaviorengineering.combe.graphical.editor",
+					 0,
+					 getString("_UI_CreateModelError_message", resource.getURI()),
+					 new Object [] { exception == null ? (Object)resource : exception });
+			basicDiagnostic.merge(EcoreUtil.computeDiagnostic(resource, true));
+			return basicDiagnostic;
+		}
+		else if (exception != null) {
+			return
+				new BasicDiagnostic
+					(Diagnostic.ERROR,
+					 "org.behaviorengineering.combe.graphical.editor",
+					 0,
+					 getString("_UI_CreateModelError_message", resource.getURI()),
+					 new Object[] { exception });
+		}
+		else {
+			return Diagnostic.OK_INSTANCE;
+		}
+	}
+
+	/**
+	 * This is the method used by the framework to install your own controls.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void createPages() {
+		// Creates the model from the editor input
+		//
+		createModel();
+
+		// Only creates the other pages if there is something that can be edited
+		//
+		if (!getEditingDomain().getResourceSet().getResources().isEmpty()) {
+			// Create a page for the selection tree view.
+			//
+			{
+				ViewerPane viewerPane =
+					new ViewerPane(getSite().getPage(), ComBEEditor.this) {
+						@Override
+						public Viewer createViewer(Composite composite) {
+							Tree tree = new Tree(composite, SWT.MULTI);
+							TreeViewer newTreeViewer = new TreeViewer(tree);
+							return newTreeViewer;
+						}
+						@Override
+						public void requestActivation() {
+							super.requestActivation();
+							setCurrentViewerPane(this);
+						}
+					};
+				viewerPane.createControl(getContainer());
+
+				selectionViewer = (TreeViewer)viewerPane.getViewer();
+				selectionViewer.setContentProvider(new AdapterFactoryContentProvider(adapterFactory));
+
+				selectionViewer.setLabelProvider(new AdapterFactoryLabelProvider(adapterFactory));
+				selectionViewer.setInput(editingDomain.getResourceSet());
+				selectionViewer.setSelection(new StructuredSelection(editingDomain.getResourceSet().getResources().get(0)), true);
+				viewerPane.setTitle(editingDomain.getResourceSet());
+
+				new AdapterFactoryTreeEditor(selectionViewer.getTree(), adapterFactory);
+
+				createContextMenuFor(selectionViewer);
+				int pageIndex = addPage(viewerPane.getControl());
+				setPageText(pageIndex, getString("_UI_SelectionPage_label"));
+			}
+
+			// Create a page for the parent tree view.
+			//
+			{
+				ViewerPane viewerPane =
+					new ViewerPane(getSite().getPage(), ComBEEditor.this) {
+						@Override
+						public Viewer createViewer(Composite composite) {
+							Tree tree = new Tree(composite, SWT.MULTI);
+							TreeViewer newTreeViewer = new TreeViewer(tree);
+							return newTreeViewer;
+						}
+						@Override
+						public void requestActivation() {
+							super.requestActivation();
+							setCurrentViewerPane(this);
+						}
+					};
+				viewerPane.createControl(getContainer());
+
+				parentViewer = (TreeViewer)viewerPane.getViewer();
+				parentViewer.setAutoExpandLevel(30);
+				parentViewer.setContentProvider(new ReverseAdapterFactoryContentProvider(adapterFactory));
+				parentViewer.setLabelProvider(new AdapterFactoryLabelProvider(adapterFactory));
+
+				createContextMenuFor(parentViewer);
+				int pageIndex = addPage(viewerPane.getControl());
+				setPageText(pageIndex, getString("_UI_ParentPage_label"));
+			}
+
+			// This is the page for the list viewer
+			//
+			{
+				ViewerPane viewerPane =
+					new ViewerPane(getSite().getPage(), ComBEEditor.this) {
+						@Override
+						public Viewer createViewer(Composite composite) {
+							return new ListViewer(composite);
+						}
+						@Override
+						public void requestActivation() {
+							super.requestActivation();
+							setCurrentViewerPane(this);
+						}
+					};
+				viewerPane.createControl(getContainer());
+				listViewer = (ListViewer)viewerPane.getViewer();
+				listViewer.setContentProvider(new AdapterFactoryContentProvider(adapterFactory));
+				listViewer.setLabelProvider(new AdapterFactoryLabelProvider(adapterFactory));
+
+				createContextMenuFor(listViewer);
+				int pageIndex = addPage(viewerPane.getControl());
+				setPageText(pageIndex, getString("_UI_ListPage_label"));
+			}
+
+			// This is the page for the tree viewer
+			//
+			{
+				ViewerPane viewerPane =
+					new ViewerPane(getSite().getPage(), ComBEEditor.this) {
+						@Override
+						public Viewer createViewer(Composite composite) {
+							return new TreeViewer(composite);
+						}
+						@Override
+						public void requestActivation() {
+							super.requestActivation();
+							setCurrentViewerPane(this);
+						}
+					};
+				viewerPane.createControl(getContainer());
+				treeViewer = (TreeViewer)viewerPane.getViewer();
+				treeViewer.setContentProvider(new AdapterFactoryContentProvider(adapterFactory));
+				treeViewer.setLabelProvider(new AdapterFactoryLabelProvider(adapterFactory));
+
+				new AdapterFactoryTreeEditor(treeViewer.getTree(), adapterFactory);
+
+				createContextMenuFor(treeViewer);
+				int pageIndex = addPage(viewerPane.getControl());
+				setPageText(pageIndex, getString("_UI_TreePage_label"));
+			}
+
+			// This is the page for the table viewer.
+			//
+			{
+				ViewerPane viewerPane =
+					new ViewerPane(getSite().getPage(), ComBEEditor.this) {
+						@Override
+						public Viewer createViewer(Composite composite) {
+							return new TableViewer(composite);
+						}
+						@Override
+						public void requestActivation() {
+							super.requestActivation();
+							setCurrentViewerPane(this);
+						}
+					};
+				viewerPane.createControl(getContainer());
+				tableViewer = (TableViewer)viewerPane.getViewer();
+
+				Table table = tableViewer.getTable();
+				TableLayout layout = new TableLayout();
+				table.setLayout(layout);
+				table.setHeaderVisible(true);
+				table.setLinesVisible(true);
+
+				TableColumn objectColumn = new TableColumn(table, SWT.NONE);
+				layout.addColumnData(new ColumnWeightData(3, 100, true));
+				objectColumn.setText(getString("_UI_ObjectColumn_label"));
+				objectColumn.setResizable(true);
+
+				TableColumn selfColumn = new TableColumn(table, SWT.NONE);
+				layout.addColumnData(new ColumnWeightData(2, 100, true));
+				selfColumn.setText(getString("_UI_SelfColumn_label"));
+				selfColumn.setResizable(true);
+
+				tableViewer.setColumnProperties(new String [] {"a", "b"});
+				tableViewer.setContentProvider(new AdapterFactoryContentProvider(adapterFactory));
+				tableViewer.setLabelProvider(new AdapterFactoryLabelProvider(adapterFactory));
+
+				createContextMenuFor(tableViewer);
+				int pageIndex = addPage(viewerPane.getControl());
+				setPageText(pageIndex, getString("_UI_TablePage_label"));
+			}
+
+			// This is the page for the table tree viewer.
+			//
+			{
+				ViewerPane viewerPane =
+					new ViewerPane(getSite().getPage(), ComBEEditor.this) {
+						@Override
+						public Viewer createViewer(Composite composite) {
+							return new TreeViewer(composite);
+						}
+						@Override
+						public void requestActivation() {
+							super.requestActivation();
+							setCurrentViewerPane(this);
+						}
+					};
+				viewerPane.createControl(getContainer());
+
+				treeViewerWithColumns = (TreeViewer)viewerPane.getViewer();
+
+				Tree tree = treeViewerWithColumns.getTree();
+				tree.setLayoutData(new FillLayout());
+				tree.setHeaderVisible(true);
+				tree.setLinesVisible(true);
+
+				TreeColumn objectColumn = new TreeColumn(tree, SWT.NONE);
+				objectColumn.setText(getString("_UI_ObjectColumn_label"));
+				objectColumn.setResizable(true);
+				objectColumn.setWidth(250);
+
+				TreeColumn selfColumn = new TreeColumn(tree, SWT.NONE);
+				selfColumn.setText(getString("_UI_SelfColumn_label"));
+				selfColumn.setResizable(true);
+				selfColumn.setWidth(200);
+
+				treeViewerWithColumns.setColumnProperties(new String [] {"a", "b"});
+				treeViewerWithColumns.setContentProvider(new AdapterFactoryContentProvider(adapterFactory));
+				treeViewerWithColumns.setLabelProvider(new AdapterFactoryLabelProvider(adapterFactory));
+
+				createContextMenuFor(treeViewerWithColumns);
+				int pageIndex = addPage(viewerPane.getControl());
+				setPageText(pageIndex, getString("_UI_TreeWithColumnsPage_label"));
+			}
+
+			getSite().getShell().getDisplay().asyncExec
+				(new Runnable() {
+					 public void run() {
+						 setActivePage(0);
+					 }
+				 });
+		}
+
+		// Ensures that this editor will only display the page's tab
+		// area if there are more than one page
+		//
+		getContainer().addControlListener
+			(new ControlAdapter() {
+				boolean guard = false;
+				@Override
+				public void controlResized(ControlEvent event) {
+					if (!guard) {
+						guard = true;
+						hideTabs();
+						guard = false;
+					}
+				}
+			 });
+
+		getSite().getShell().getDisplay().asyncExec
+			(new Runnable() {
+				 public void run() {
+					 updateProblemIndication();
+				 }
+			 });
+	}
+
+	/**
+	 * If there is just one page in the multi-page editor part,
+	 * this hides the single tab at the bottom.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void hideTabs() {
+		if (getPageCount() <= 1) {
+			setPageText(0, "");
+			if (getContainer() instanceof CTabFolder) {
+				((CTabFolder)getContainer()).setTabHeight(1);
+				Point point = getContainer().getSize();
+				getContainer().setSize(point.x, point.y + 6);
+			}
+		}
+	}
+
+	/**
+	 * If there is more than one page in the multi-page editor part,
+	 * this shows the tabs at the bottom.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void showTabs() {
+		if (getPageCount() > 1) {
+			setPageText(0, getString("_UI_SelectionPage_label"));
+			if (getContainer() instanceof CTabFolder) {
+				((CTabFolder)getContainer()).setTabHeight(SWT.DEFAULT);
+				Point point = getContainer().getSize();
+				getContainer().setSize(point.x, point.y - 6);
+			}
+		}
+	}
+
+	/**
+	 * This is used to track the active viewer.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected void pageChange(int pageIndex) {
+		super.pageChange(pageIndex);
+
+		if (contentOutlinePage != null) {
+			handleContentOutlineSelection(contentOutlinePage.getSelection());
+		}
+	}
+
+	/**
+	 * This is how the framework determines which interfaces we implement.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@SuppressWarnings("rawtypes")
+	@Override
+	public Object getAdapter(Class key) {
+		if (key.equals(IContentOutlinePage.class)) {
+			return showOutlineView() ? getContentOutlinePage() : null;
+		}
+		else if (key.equals(IPropertySheetPage.class)) {
+			return getPropertySheetPage();
+		}
+		else if (key.equals(IGotoMarker.class)) {
+			return this;
+		}
+		else {
+			return super.getAdapter(key);
+		}
+	}
+
+	/**
+	 * This accesses a cached version of the content outliner.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public IContentOutlinePage getContentOutlinePage() {
+		if (contentOutlinePage == null) {
+			// The content outline is just a tree.
+			//
+			class MyContentOutlinePage extends ContentOutlinePage {
+				@Override
+				public void createControl(Composite parent) {
+					super.createControl(parent);
+					contentOutlineViewer = getTreeViewer();
+					contentOutlineViewer.addSelectionChangedListener(this);
+
+					// Set up the tree viewer.
+					//
+					contentOutlineViewer.setContentProvider(new AdapterFactoryContentProvider(adapterFactory));
+					contentOutlineViewer.setLabelProvider(new AdapterFactoryLabelProvider(adapterFactory));
+					contentOutlineViewer.setInput(editingDomain.getResourceSet());
+
+					// Make sure our popups work.
+					//
+					createContextMenuFor(contentOutlineViewer);
+
+					if (!editingDomain.getResourceSet().getResources().isEmpty()) {
+					  // Select the root object in the view.
+					  //
+					  contentOutlineViewer.setSelection(new StructuredSelection(editingDomain.getResourceSet().getResources().get(0)), true);
+					}
+				}
+
+				@Override
+				public void makeContributions(IMenuManager menuManager, IToolBarManager toolBarManager, IStatusLineManager statusLineManager) {
+					super.makeContributions(menuManager, toolBarManager, statusLineManager);
+					contentOutlineStatusLineManager = statusLineManager;
+				}
+
+				@Override
+				public void setActionBars(IActionBars actionBars) {
+					super.setActionBars(actionBars);
+					getActionBarContributor().shareGlobalActions(this, actionBars);
+				}
+			}
+
+			contentOutlinePage = new MyContentOutlinePage();
+
+			// Listen to selection so that we can handle it is a special way.
+			//
+			contentOutlinePage.addSelectionChangedListener
+				(new ISelectionChangedListener() {
+					 // This ensures that we handle selections correctly.
+					 //
+					 public void selectionChanged(SelectionChangedEvent event) {
+						 handleContentOutlineSelection(event.getSelection());
+					 }
+				 });
+		}
+
+		return contentOutlinePage;
+	}
+
+	/**
+	 * This accesses a cached version of the property sheet.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public IPropertySheetPage getPropertySheetPage() {
+		if (propertySheetPage == null) {
+			propertySheetPage =
+				new ExtendedPropertySheetPage(editingDomain) {
+					@Override
+					public void setSelectionToViewer(List<?> selection) {
+						ComBEEditor.this.setSelectionToViewer(selection);
+						ComBEEditor.this.setFocus();
+					}
+
+					@Override
+					public void setActionBars(IActionBars actionBars) {
+						super.setActionBars(actionBars);
+						getActionBarContributor().shareGlobalActions(this, actionBars);
+					}
+				};
+			propertySheetPage.setPropertySourceProvider(new AdapterFactoryContentProvider(adapterFactory));
+		}
+
+		return propertySheetPage;
+	}
+
+	/**
+	 * This deals with how we want selection in the outliner to affect the other views.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void handleContentOutlineSelection(ISelection selection) {
+		if (currentViewerPane != null && !selection.isEmpty() && selection instanceof IStructuredSelection) {
+			Iterator<?> selectedElements = ((IStructuredSelection)selection).iterator();
+			if (selectedElements.hasNext()) {
+				// Get the first selected element.
+				//
+				Object selectedElement = selectedElements.next();
+
+				// If it's the selection viewer, then we want it to select the same selection as this selection.
+				//
+				if (currentViewerPane.getViewer() == selectionViewer) {
+					ArrayList<Object> selectionList = new ArrayList<Object>();
+					selectionList.add(selectedElement);
+					while (selectedElements.hasNext()) {
+						selectionList.add(selectedElements.next());
+					}
+
+					// Set the selection to the widget.
+					//
+					selectionViewer.setSelection(new StructuredSelection(selectionList));
+				}
+				else {
+					// Set the input to the widget.
+					//
+					if (currentViewerPane.getViewer().getInput() != selectedElement) {
+						currentViewerPane.getViewer().setInput(selectedElement);
+						currentViewerPane.setTitle(selectedElement);
+					}
+				}
+			}
+		}
+	}
+
+	/**
+	 * This is for implementing {@link IEditorPart} and simply tests the command stack.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public boolean isDirty() {
+		return ((BasicCommandStack)editingDomain.getCommandStack()).isSaveNeeded();
+	}
+
+	/**
+	 * This is for implementing {@link IEditorPart} and simply saves the model file.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void doSave(IProgressMonitor progressMonitor) {
+		// Save only resources that have actually changed.
+		//
+		final Map<Object, Object> saveOptions = new HashMap<Object, Object>();
+		saveOptions.put(Resource.OPTION_SAVE_ONLY_IF_CHANGED, Resource.OPTION_SAVE_ONLY_IF_CHANGED_MEMORY_BUFFER);
+
+		// Do the work within an operation because this is a long running activity that modifies the workbench.
+		//
+		WorkspaceModifyOperation operation =
+			new WorkspaceModifyOperation() {
+				// This is the method that gets invoked when the operation runs.
+				//
+				@Override
+				public void execute(IProgressMonitor monitor) {
+					// Save the resources to the file system.
+					//
+					boolean first = true;
+					for (Resource resource : editingDomain.getResourceSet().getResources()) {
+						if ((first || !resource.getContents().isEmpty() || isPersisted(resource)) && !editingDomain.isReadOnly(resource)) {
+							try {
+								long timeStamp = resource.getTimeStamp();
+								resource.save(saveOptions);
+								if (resource.getTimeStamp() != timeStamp) {
+									savedResources.add(resource);
+								}
+							}
+							catch (Exception exception) {
+								resourceToDiagnosticMap.put(resource, analyzeResourceProblems(resource, exception));
+							}
+							first = false;
+						}
+					}
+				}
+			};
+
+		updateProblemIndication = false;
+		try {
+			// This runs the options, and shows progress.
+			//
+			new ProgressMonitorDialog(getSite().getShell()).run(true, false, operation);
+
+			// Refresh the necessary state.
+			//
+			((BasicCommandStack)editingDomain.getCommandStack()).saveIsDone();
+			firePropertyChange(IEditorPart.PROP_DIRTY);
+		}
+		catch (Exception exception) {
+			// Something went wrong that shouldn't.
+			//
+			ComBEEditorPlugin.INSTANCE.log(exception);
+		}
+		updateProblemIndication = true;
+		updateProblemIndication();
+	}
+
+	/**
+	 * This returns whether something has been persisted to the URI of the specified resource.
+	 * The implementation uses the URI converter from the editor's resource set to try to open an input stream. 
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected boolean isPersisted(Resource resource) {
+		boolean result = false;
+		try {
+			InputStream stream = editingDomain.getResourceSet().getURIConverter().createInputStream(resource.getURI());
+			if (stream != null) {
+				result = true;
+				stream.close();
+			}
+		}
+		catch (IOException e) {
+			// Ignore
+		}
+		return result;
+	}
+
+	/**
+	 * This always returns true because it is not currently supported.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public boolean isSaveAsAllowed() {
+		return true;
+	}
+
+	/**
+	 * This also changes the editor's input.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void doSaveAs() {
+		SaveAsDialog saveAsDialog = new SaveAsDialog(getSite().getShell());
+		saveAsDialog.open();
+		IPath path = saveAsDialog.getResult();
+		if (path != null) {
+			IFile file = ResourcesPlugin.getWorkspace().getRoot().getFile(path);
+			if (file != null) {
+				doSaveAs(URI.createPlatformResourceURI(file.getFullPath().toString(), true), new FileEditorInput(file));
+			}
+		}
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void doSaveAs(URI uri, IEditorInput editorInput) {
+		(editingDomain.getResourceSet().getResources().get(0)).setURI(uri);
+		setInputWithNotify(editorInput);
+		setPartName(editorInput.getName());
+		IProgressMonitor progressMonitor =
+			getActionBars().getStatusLineManager() != null ?
+				getActionBars().getStatusLineManager().getProgressMonitor() :
+				new NullProgressMonitor();
+		doSave(progressMonitor);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void gotoMarker(IMarker marker) {
+		try {
+			if (marker.getType().equals(EValidator.MARKER)) {
+				String uriAttribute = marker.getAttribute(EValidator.URI_ATTRIBUTE, null);
+				if (uriAttribute != null) {
+					URI uri = URI.createURI(uriAttribute);
+					EObject eObject = editingDomain.getResourceSet().getEObject(uri, true);
+					if (eObject != null) {
+					  setSelectionToViewer(Collections.singleton(editingDomain.getWrapper(eObject)));
+					}
+				}
+			}
+		}
+		catch (CoreException exception) {
+			ComBEEditorPlugin.INSTANCE.log(exception);
+		}
+	}
+
+	/**
+	 * This is called during startup.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void init(IEditorSite site, IEditorInput editorInput) {
+		setSite(site);
+		setInputWithNotify(editorInput);
+		setPartName(editorInput.getName());
+		site.setSelectionProvider(this);
+		site.getPage().addPartListener(partListener);
+		ResourcesPlugin.getWorkspace().addResourceChangeListener(resourceChangeListener, IResourceChangeEvent.POST_CHANGE);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void setFocus() {
+		if (currentViewerPane != null) {
+			currentViewerPane.setFocus();
+		}
+		else {
+			getControl(getActivePage()).setFocus();
+		}
+	}
+
+	/**
+	 * This implements {@link org.eclipse.jface.viewers.ISelectionProvider}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void addSelectionChangedListener(ISelectionChangedListener listener) {
+		selectionChangedListeners.add(listener);
+	}
+
+	/**
+	 * This implements {@link org.eclipse.jface.viewers.ISelectionProvider}.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void removeSelectionChangedListener(ISelectionChangedListener listener) {
+		selectionChangedListeners.remove(listener);
+	}
+
+	/**
+	 * This implements {@link org.eclipse.jface.viewers.ISelectionProvider} to return this editor's overall selection.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ISelection getSelection() {
+		return editorSelection;
+	}
+
+	/**
+	 * This implements {@link org.eclipse.jface.viewers.ISelectionProvider} to set this editor's overall selection.
+	 * Calling this result will notify the listeners.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setSelection(ISelection selection) {
+		editorSelection = selection;
+
+		for (ISelectionChangedListener listener : selectionChangedListeners) {
+			listener.selectionChanged(new SelectionChangedEvent(this, selection));
+		}
+		setStatusLineManager(selection);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setStatusLineManager(ISelection selection) {
+		IStatusLineManager statusLineManager = currentViewer != null && currentViewer == contentOutlineViewer ?
+			contentOutlineStatusLineManager : getActionBars().getStatusLineManager();
+
+		if (statusLineManager != null) {
+			if (selection instanceof IStructuredSelection) {
+				Collection<?> collection = ((IStructuredSelection)selection).toList();
+				switch (collection.size()) {
+					case 0: {
+						statusLineManager.setMessage(getString("_UI_NoObjectSelected"));
+						break;
+					}
+					case 1: {
+						String text = new AdapterFactoryItemDelegator(adapterFactory).getText(collection.iterator().next());
+						statusLineManager.setMessage(getString("_UI_SingleObjectSelected", text));
+						break;
+					}
+					default: {
+						statusLineManager.setMessage(getString("_UI_MultiObjectSelected", Integer.toString(collection.size())));
+						break;
+					}
+				}
+			}
+			else {
+				statusLineManager.setMessage("");
+			}
+		}
+	}
+
+	/**
+	 * This looks up a string in the plugin's plugin.properties file.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private static String getString(String key) {
+		return ComBEEditorPlugin.INSTANCE.getString(key);
+	}
+
+	/**
+	 * This looks up a string in plugin.properties, making a substitution.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private static String getString(String key, Object s1) {
+		return ComBEEditorPlugin.INSTANCE.getString(key, new Object [] { s1 });
+	}
+
+	/**
+	 * This implements {@link org.eclipse.jface.action.IMenuListener} to help fill the context menus with contributions from the Edit menu.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void menuAboutToShow(IMenuManager menuManager) {
+		((IMenuListener)getEditorSite().getActionBarContributor()).menuAboutToShow(menuManager);
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EditingDomainActionBarContributor getActionBarContributor() {
+		return (EditingDomainActionBarContributor)getEditorSite().getActionBarContributor();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public IActionBars getActionBars() {
+		return getActionBarContributor().getActionBars();
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public AdapterFactory getAdapterFactory() {
+		return adapterFactory;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public void dispose() {
+		updateProblemIndication = false;
+
+		ResourcesPlugin.getWorkspace().removeResourceChangeListener(resourceChangeListener);
+
+		getSite().getPage().removePartListener(partListener);
+
+		adapterFactory.dispose();
+
+		if (getActionBarContributor().getActiveEditor() == this) {
+			getActionBarContributor().setActiveEditor(null);
+		}
+
+		if (propertySheetPage != null) {
+			propertySheetPage.dispose();
+		}
+
+		if (contentOutlinePage != null) {
+			contentOutlinePage.dispose();
+		}
+
+		super.dispose();
+	}
+
+	/**
+	 * Returns whether the outline view should be presented to the user.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected boolean showOutlineView() {
+		return true;
+	}
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/src/ComBE/presentation/ComBEEditorPlugin.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/src/ComBE/presentation/ComBEEditorPlugin.java	Mon Jul 16 02:26:20 2012	(r25206)
@@ -0,0 +1,95 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.presentation;
+
+import org.eclipse.emf.common.EMFPlugin;
+
+import org.eclipse.emf.common.ui.EclipseUIPlugin;
+
+import org.eclipse.emf.common.util.ResourceLocator;
+
+/**
+ * This is the central singleton for the ComBE editor plugin.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public final class ComBEEditorPlugin extends EMFPlugin {
+	/**
+	 * Keep track of the singleton.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static final ComBEEditorPlugin INSTANCE = new ComBEEditorPlugin();
+	
+	/**
+	 * Keep track of the singleton.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	private static Implementation plugin;
+
+	/**
+	 * Create the instance.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ComBEEditorPlugin() {
+		super
+			(new ResourceLocator [] {
+			});
+	}
+
+	/**
+	 * Returns the singleton instance of the Eclipse plugin.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the singleton instance.
+	 * @generated
+	 */
+	@Override
+	public ResourceLocator getPluginResourceLocator() {
+		return plugin;
+	}
+	
+	/**
+	 * Returns the singleton instance of the Eclipse plugin.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @return the singleton instance.
+	 * @generated
+	 */
+	public static Implementation getPlugin() {
+		return plugin;
+	}
+	
+	/**
+	 * The actual implementation of the Eclipse <b>Plugin</b>.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static class Implementation extends EclipseUIPlugin {
+		/**
+		 * Creates an instance.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		public Implementation() {
+			super();
+	
+			// Remember the static instance.
+			//
+			plugin = this;
+		}
+	}
+
+}

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/src/ComBE/presentation/ComBEModelWizard.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.editor/src/ComBE/presentation/ComBEModelWizard.java	Mon Jul 16 02:26:20 2012	(r25206)
@@ -0,0 +1,631 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.presentation;
+
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.MissingResourceException;
+import java.util.StringTokenizer;
+
+import org.eclipse.emf.common.CommonPlugin;
+
+import org.eclipse.emf.common.util.URI;
+
+import org.eclipse.emf.ecore.EClass;
+import org.eclipse.emf.ecore.EClassifier;
+
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.emf.ecore.resource.ResourceSet;
+
+import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
+
+import org.eclipse.emf.ecore.EObject;
+
+import org.eclipse.emf.ecore.xmi.XMLResource;
+
+import org.eclipse.emf.edit.ui.provider.ExtendedImageRegistry;
+
+import org.eclipse.core.resources.IContainer;
+import org.eclipse.core.resources.IFile;
+import org.eclipse.core.resources.IFolder;
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.resources.ResourcesPlugin;
+
+import org.eclipse.core.runtime.IProgressMonitor;
+
+import org.eclipse.jface.dialogs.MessageDialog;
+
+import org.eclipse.jface.viewers.IStructuredSelection;
+
+import org.eclipse.jface.wizard.Wizard;
+import org.eclipse.jface.wizard.WizardPage;
+
+import org.eclipse.swt.SWT;
+
+import org.eclipse.swt.events.ModifyListener;
+import org.eclipse.swt.events.ModifyEvent;
+
+import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.layout.GridLayout;
+
+import org.eclipse.swt.widgets.Combo;
+import org.eclipse.swt.widgets.Composite;
+import org.eclipse.swt.widgets.Label;
+
+import org.eclipse.ui.INewWizard;
+import org.eclipse.ui.IWorkbench;
+
+import org.eclipse.ui.actions.WorkspaceModifyOperation;
+
+import org.eclipse.ui.dialogs.WizardNewFileCreationPage;
+
+import org.eclipse.ui.part.FileEditorInput;
+import org.eclipse.ui.part.ISetSelectionTarget;
+
+import ComBE.ComBEFactory;
+import ComBE.ComBEPackage;
+import ComBE.provider.ComBEEditPlugin;
+
+
+import org.eclipse.core.runtime.Path;
+
+import org.eclipse.jface.viewers.ISelection;
+import org.eclipse.jface.viewers.StructuredSelection;
+
+import org.eclipse.ui.IWorkbenchPage;
+import org.eclipse.ui.IWorkbenchPart;
+import org.eclipse.ui.IWorkbenchWindow;
+import org.eclipse.ui.PartInitException;
+
+
+/**
+ * This is a simple wizard for creating a new model file.
+ * <!-- begin-user-doc -->
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class ComBEModelWizard extends Wizard implements INewWizard {
+	/**
+	 * The supported extensions for created files.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static final List<String> FILE_EXTENSIONS =
+		Collections.unmodifiableList(Arrays.asList(ComBEEditorPlugin.INSTANCE.getString("_UI_ComBEEditorFilenameExtensions").split("\\s*,\\s*")));
+
+	/**
+	 * A formatted list of supported file extensions, suitable for display.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static final String FORMATTED_FILE_EXTENSIONS =
+		ComBEEditorPlugin.INSTANCE.getString("_UI_ComBEEditorFilenameExtensions").replaceAll("\\s*,\\s*", ", ");
+
+	/**
+	 * This caches an instance of the model package.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected ComBEPackage comBEPackage = ComBEPackage.eINSTANCE;
+
+	/**
+	 * This caches an instance of the model factory.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected ComBEFactory comBEFactory = comBEPackage.getComBEFactory();
+
+	/**
+	 * This is the file creation page.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected ComBEModelWizardNewFileCreationPage newFileCreationPage;
+
+	/**
+	 * This is the initial object creation page.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected ComBEModelWizardInitialObjectCreationPage initialObjectCreationPage;
+
+	/**
+	 * Remember the selection during initialization for populating the default container.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected IStructuredSelection selection;
+
+	/**
+	 * Remember the workbench during initialization.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected IWorkbench workbench;
+
+	/**
+	 * Caches the names of the types that can be created as the root object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected List<String> initialObjectNames;
+
+	/**
+	 * This just records the information.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void init(IWorkbench workbench, IStructuredSelection selection) {
+		this.workbench = workbench;
+		this.selection = selection;
+		setWindowTitle(ComBEEditorPlugin.INSTANCE.getString("_UI_Wizard_label"));
+		setDefaultPageImageDescriptor(ExtendedImageRegistry.INSTANCE.getImageDescriptor(ComBEEditorPlugin.INSTANCE.getImage("full/wizban/NewComBE")));
+	}
+
+	/**
+	 * Returns the names of the types that can be created as the root object.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Collection<String> getInitialObjectNames() {
+		if (initialObjectNames == null) {
+			initialObjectNames = new ArrayList<String>();
+			for (EClassifier eClassifier : comBEPackage.getEClassifiers()) {
+				if (eClassifier instanceof EClass) {
+					EClass eClass = (EClass)eClassifier;
+					if (!eClass.isAbstract()) {
+						initialObjectNames.add(eClass.getName());
+					}
+				}
+			}
+			Collections.sort(initialObjectNames, CommonPlugin.INSTANCE.getComparator());
+		}
+		return initialObjectNames;
+	}
+
+	/**
+	 * Create a new model.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected EObject createInitialModel() {
+		EClass eClass = (EClass)comBEPackage.getEClassifier(initialObjectCreationPage.getInitialObjectName());
+		EObject rootObject = comBEFactory.create(eClass);
+		return rootObject;
+	}
+
+	/**
+	 * Do the work after everything is specified.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	public boolean performFinish() {
+		try {
+			// Remember the file.
+			//
+			final IFile modelFile = getModelFile();
+
+			// Do the work within an operation.
+			//
+			WorkspaceModifyOperation operation =
+				new WorkspaceModifyOperation() {
+					@Override
+					protected void execute(IProgressMonitor progressMonitor) {
+						try {
+							// Create a resource set
+							//
+							ResourceSet resourceSet = new ResourceSetImpl();
+
+							// Get the URI of the model file.
+							//
+							URI fileURI = URI.createPlatformResourceURI(modelFile.getFullPath().toString(), true);
+
+							// Create a resource for this file.
+							//
+							Resource resource = resourceSet.createResource(fileURI);
+
+							// Add the initial model object to the contents.
+							//
+							EObject rootObject = createInitialModel();
+							if (rootObject != null) {
+								resource.getContents().add(rootObject);
+							}
+
+							// Save the contents of the resource to the file system.
+							//
+							Map<Object, Object> options = new HashMap<Object, Object>();
+							options.put(XMLResource.OPTION_ENCODING, initialObjectCreationPage.getEncoding());
+							resource.save(options);
+						}
+						catch (Exception exception) {
+							ComBEEditorPlugin.INSTANCE.log(exception);
+						}
+						finally {
+							progressMonitor.done();
+						}
+					}
+				};
+
+			getContainer().run(false, false, operation);
+
+			// Select the new file resource in the current view.
+			//
+			IWorkbenchWindow workbenchWindow = workbench.getActiveWorkbenchWindow();
+			IWorkbenchPage page = workbenchWindow.getActivePage();
+			final IWorkbenchPart activePart = page.getActivePart();
+			if (activePart instanceof ISetSelectionTarget) {
+				final ISelection targetSelection = new StructuredSelection(modelFile);
+				getShell().getDisplay().asyncExec
+					(new Runnable() {
+						 public void run() {
+							 ((ISetSelectionTarget)activePart).selectReveal(targetSelection);
+						 }
+					 });
+			}
+
+			// Open an editor on the new file.
+			//
+			try {
+				page.openEditor
+					(new FileEditorInput(modelFile),
+					 workbench.getEditorRegistry().getDefaultEditor(modelFile.getFullPath().toString()).getId());					 	 
+			}
+			catch (PartInitException exception) {
+				MessageDialog.openError(workbenchWindow.getShell(), ComBEEditorPlugin.INSTANCE.getString("_UI_OpenEditorError_label"), exception.getMessage());
+				return false;
+			}
+
+			return true;
+		}
+		catch (Exception exception) {
+			ComBEEditorPlugin.INSTANCE.log(exception);
+			return false;
+		}
+	}
+
+	/**
+	 * This is the one page of the wizard.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public class ComBEModelWizardNewFileCreationPage extends WizardNewFileCreationPage {
+		/**
+		 * Pass in the selection.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		public ComBEModelWizardNewFileCreationPage(String pageId, IStructuredSelection selection) {
+			super(pageId, selection);
+		}
+
+		/**
+		 * The framework calls this to see if the file is correct.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		@Override
+		protected boolean validatePage() {
+			if (super.validatePage()) {
+				String extension = new Path(getFileName()).getFileExtension();
+				if (extension == null || !FILE_EXTENSIONS.contains(extension)) {
+					String key = FILE_EXTENSIONS.size() > 1 ? "_WARN_FilenameExtensions" : "_WARN_FilenameExtension";
+					setErrorMessage(ComBEEditorPlugin.INSTANCE.getString(key, new Object [] { FORMATTED_FILE_EXTENSIONS }));
+					return false;
+				}
+				return true;
+			}
+			return false;
+		}
+
+		/**
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		public IFile getModelFile() {
+			return ResourcesPlugin.getWorkspace().getRoot().getFile(getContainerFullPath().append(getFileName()));
+		}
+	}
+
+	/**
+	 * This is the page where the type of object to create is selected.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public class ComBEModelWizardInitialObjectCreationPage extends WizardPage {
+		/**
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		protected Combo initialObjectField;
+
+		/**
+		 * @generated
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 */
+		protected List<String> encodings;
+
+		/**
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		protected Combo encodingField;
+
+		/**
+		 * Pass in the selection.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		public ComBEModelWizardInitialObjectCreationPage(String pageId) {
+			super(pageId);
+		}
+
+		/**
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		public void createControl(Composite parent) {
+			Composite composite = new Composite(parent, SWT.NONE); {
+				GridLayout layout = new GridLayout();
+				layout.numColumns = 1;
+				layout.verticalSpacing = 12;
+				composite.setLayout(layout);
+
+				GridData data = new GridData();
+				data.verticalAlignment = GridData.FILL;
+				data.grabExcessVerticalSpace = true;
+				data.horizontalAlignment = GridData.FILL;
+				composite.setLayoutData(data);
+			}
+
+			Label containerLabel = new Label(composite, SWT.LEFT);
+			{
+				containerLabel.setText(ComBEEditorPlugin.INSTANCE.getString("_UI_ModelObject"));
+
+				GridData data = new GridData();
+				data.horizontalAlignment = GridData.FILL;
+				containerLabel.setLayoutData(data);
+			}
+
+			initialObjectField = new Combo(composite, SWT.BORDER);
+			{
+				GridData data = new GridData();
+				data.horizontalAlignment = GridData.FILL;
+				data.grabExcessHorizontalSpace = true;
+				initialObjectField.setLayoutData(data);
+			}
+
+			for (String objectName : getInitialObjectNames()) {
+				initialObjectField.add(getLabel(objectName));
+			}
+
+			if (initialObjectField.getItemCount() == 1) {
+				initialObjectField.select(0);
+			}
+			initialObjectField.addModifyListener(validator);
+
+			Label encodingLabel = new Label(composite, SWT.LEFT);
+			{
+				encodingLabel.setText(ComBEEditorPlugin.INSTANCE.getString("_UI_XMLEncoding"));
+
+				GridData data = new GridData();
+				data.horizontalAlignment = GridData.FILL;
+				encodingLabel.setLayoutData(data);
+			}
+			encodingField = new Combo(composite, SWT.BORDER);
+			{
+				GridData data = new GridData();
+				data.horizontalAlignment = GridData.FILL;
+				data.grabExcessHorizontalSpace = true;
+				encodingField.setLayoutData(data);
+			}
+
+			for (String encoding : getEncodings()) {
+				encodingField.add(encoding);
+			}
+
+			encodingField.select(0);
+			encodingField.addModifyListener(validator);
+
+			setPageComplete(validatePage());
+			setControl(composite);
+		}
+
+		/**
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		protected ModifyListener validator =
+			new ModifyListener() {
+				public void modifyText(ModifyEvent e) {
+					setPageComplete(validatePage());
+				}
+			};
+
+		/**
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		protected boolean validatePage() {
+			return getInitialObjectName() != null && getEncodings().contains(encodingField.getText());
+		}
+
+		/**
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		@Override
+		public void setVisible(boolean visible) {
+			super.setVisible(visible);
+			if (visible) {
+				if (initialObjectField.getItemCount() == 1) {
+					initialObjectField.clearSelection();
+					encodingField.setFocus();
+				}
+				else {
+					encodingField.clearSelection();
+					initialObjectField.setFocus();
+				}
+			}
+		}
+
+		/**
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		public String getInitialObjectName() {
+			String label = initialObjectField.getText();
+
+			for (String name : getInitialObjectNames()) {
+				if (getLabel(name).equals(label)) {
+					return name;
+				}
+			}
+			return null;
+		}
+
+		/**
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		public String getEncoding() {
+			return encodingField.getText();
+		}
+
+		/**
+		 * Returns the label for the specified type name.
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		protected String getLabel(String typeName) {
+			try {
+				return ComBEEditPlugin.INSTANCE.getString("_UI_" + typeName + "_type");
+			}
+			catch(MissingResourceException mre) {
+				ComBEEditorPlugin.INSTANCE.log(mre);
+			}
+			return typeName;
+		}
+
+		/**
+		 * <!-- begin-user-doc -->
+		 * <!-- end-user-doc -->
+		 * @generated
+		 */
+		protected Collection<String> getEncodings() {
+			if (encodings == null) {
+				encodings = new ArrayList<String>();
+				for (StringTokenizer stringTokenizer = new StringTokenizer(ComBEEditorPlugin.INSTANCE.getString("_UI_XMLEncodingChoices")); stringTokenizer.hasMoreTokens(); ) {
+					encodings.add(stringTokenizer.nextToken());
+				}
+			}
+			return encodings;
+		}
+	}
+
+	/**
+	 * The framework calls this to create the contents of the wizard.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+		@Override
+	public void addPages() {
+		// Create a page, set the title, and the initial model file name.
+		//
+		newFileCreationPage = new ComBEModelWizardNewFileCreationPage("Whatever", selection);
+		newFileCreationPage.setTitle(ComBEEditorPlugin.INSTANCE.getString("_UI_ComBEModelWizard_label"));
+		newFileCreationPage.setDescription(ComBEEditorPlugin.INSTANCE.getString("_UI_ComBEModelWizard_description"));
+		newFileCreationPage.setFileName(ComBEEditorPlugin.INSTANCE.getString("_UI_ComBEEditorFilenameDefaultBase") + "." + FILE_EXTENSIONS.get(0));
+		addPage(newFileCreationPage);
+
+		// Try and get the resource selection to determine a current directory for the file dialog.
+		//
+		if (selection != null && !selection.isEmpty()) {
+			// Get the resource...
+			//
+			Object selectedElement = selection.iterator().next();
+			if (selectedElement instanceof IResource) {
+				// Get the resource parent, if its a file.
+				//
+				IResource selectedResource = (IResource)selectedElement;
+				if (selectedResource.getType() == IResource.FILE) {
+					selectedResource = selectedResource.getParent();
+				}
+
+				// This gives us a directory...
+				//
+				if (selectedResource instanceof IFolder || selectedResource instanceof IProject) {
+					// Set this for the container.
+					//
+					newFileCreationPage.setContainerFullPath(selectedResource.getFullPath());
+
+					// Make up a unique new name here.
+					//
+					String defaultModelBaseFilename = ComBEEditorPlugin.INSTANCE.getString("_UI_ComBEEditorFilenameDefaultBase");
+					String defaultModelFilenameExtension = FILE_EXTENSIONS.get(0);
+					String modelFilename = defaultModelBaseFilename + "." + defaultModelFilenameExtension;
+					for (int i = 1; ((IContainer)selectedResource).findMember(modelFilename) != null; ++i) {
+						modelFilename = defaultModelBaseFilename + i + "." + defaultModelFilenameExtension;
+					}
+					newFileCreationPage.setFileName(modelFilename);
+				}
+			}
+		}
+		initialObjectCreationPage = new ComBEModelWizardInitialObjectCreationPage("Whatever2");
+		initialObjectCreationPage.setTitle(ComBEEditorPlugin.INSTANCE.getString("_UI_ComBEModelWizard_label"));
+		initialObjectCreationPage.setDescription(ComBEEditorPlugin.INSTANCE.getString("_UI_Wizard_initial_object_description"));
+		addPage(initialObjectCreationPage);
+	}
+
+	/**
+	 * Get the file from the page.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public IFile getModelFile() {
+		return newFileCreationPage.getModelFile();
+	}
+
+}

From oskarvanrest at gmail.com  Mon Jul 16 04:27:02 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 16 Jul 2012 02:27:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25207 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests
Message-ID: <20120716022702.53D70CC118@mx4.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 16 02:27:02 2012
New Revision: 25207
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25207&sc=1

Log:
Initial import.

Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/

From oskarvanrest at gmail.com  Mon Jul 16 04:28:01 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 16 Jul 2012 02:28:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25208 - in
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests:
	. META-INF src src/ComBE src/ComBE/tests
Message-ID: <20120716022801.05A4C7F8021@mx1.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 16 02:28:00 2012
New Revision: 25208
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25208&sc=1

Log:
Tests

Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/.classpath
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/.project
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/META-INF/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/META-INF/MANIFEST.MF
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/build.properties
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/plugin.properties
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/pom.xml
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/AlternativeBranchTest.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/AtomicSequenceTest.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/BehaviorSeqTest.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/BehaviorTest.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/BehaviorTreeTest.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/ComBEAllTests.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/ComBEExample.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/ComBETests.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/ComponentTest.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/EmptyNodeTest.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/NodeTest.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/ParallelBranchTest.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/RequirementTest.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/RootTest.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/SpecificationTest.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/StandardComponentTest.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/StandardNodeTest.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/SystemComponentTest.java
Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/   (props changed)

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/.classpath
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/.classpath	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/.project
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/.project	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>org.behaviorengineering.combe.graphical.tests</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.pde.PluginNature</nature>
+	</natures>
+</projectDescription>

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/META-INF/MANIFEST.MF
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/META-INF/MANIFEST.MF	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,15 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: %pluginName
+Bundle-SymbolicName: org.behaviorengineering.combe.graphical.tests;singleton:=true
+Bundle-Version: 1.0.0.qualifier
+Bundle-ClassPath: .
+Bundle-Vendor: %providerName
+Bundle-Localization: plugin
+Bundle-RequiredExecutionEnvironment: JavaSE-1.6
+Export-Package: ComBE.tests
+Require-Bundle: org.eclipse.core.runtime,
+ org.behaviorengineering.combe.graphical;visibility:=reexport,
+ org.eclipse.emf.ecore.xmi;visibility:=reexport,
+ org.junit;visibility:=reexport
+Bundle-ActivationPolicy: lazy

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/build.properties	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,12 @@
+
+# <copyright>
+# </copyright>
+#
+# $Id$
+
+bin.includes = .,\
+               META-INF/,\
+               plugin.properties
+jars.compile.order = .
+source.. = src/
+output.. = bin/

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/plugin.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/plugin.properties	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,8 @@
+
+# <copyright>
+# </copyright>
+#
+# $Id$
+
+pluginName = ComBE Tests
+providerName = www.example.org

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/pom.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/pom.xml	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
+	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+	<modelVersion>4.0.0</modelVersion>
+	<parent>
+		<artifactId>org.behaviorengineering.combe.parent</artifactId>
+		<groupId>org.be.textbe</groupId>
+		<version>1.0.0-SNAPSHOT</version>
+		<relativePath>../org.behaviorengineering.combe.parent</relativePath>
+	</parent>
+	<artifactId>org.behaviorengineering.combe.graphical.tests</artifactId>
+	<packaging>eclipse-plugin</packaging>
+</project>
\ No newline at end of file

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/AlternativeBranchTest.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/AlternativeBranchTest.java	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,74 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.tests;
+
+import ComBE.AlternativeBranch;
+import ComBE.ComBEFactory;
+
+import junit.textui.TestRunner;
+
+/**
+ * <!-- begin-user-doc -->
+ * A test case for the model object '<em><b>Alternative Branch</b></em>'.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class AlternativeBranchTest extends BehaviorTreeTest {
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static void main(String[] args) {
+		TestRunner.run(AlternativeBranchTest.class);
+	}
+
+	/**
+	 * Constructs a new Alternative Branch test case with the given name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public AlternativeBranchTest(String name) {
+		super(name);
+	}
+
+	/**
+	 * Returns the fixture for this Alternative Branch test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected AlternativeBranch getFixture() {
+		return (AlternativeBranch)fixture;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#setUp()
+	 * @generated
+	 */
+	@Override
+	protected void setUp() throws Exception {
+		setFixture(ComBEFactory.eINSTANCE.createAlternativeBranch());
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#tearDown()
+	 * @generated
+	 */
+	@Override
+	protected void tearDown() throws Exception {
+		setFixture(null);
+	}
+
+} //AlternativeBranchTest

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/AtomicSequenceTest.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/AtomicSequenceTest.java	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,74 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.tests;
+
+import ComBE.AtomicSequence;
+import ComBE.ComBEFactory;
+
+import junit.textui.TestRunner;
+
+/**
+ * <!-- begin-user-doc -->
+ * A test case for the model object '<em><b>Atomic Sequence</b></em>'.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class AtomicSequenceTest extends BehaviorTreeTest {
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static void main(String[] args) {
+		TestRunner.run(AtomicSequenceTest.class);
+	}
+
+	/**
+	 * Constructs a new Atomic Sequence test case with the given name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public AtomicSequenceTest(String name) {
+		super(name);
+	}
+
+	/**
+	 * Returns the fixture for this Atomic Sequence test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected AtomicSequence getFixture() {
+		return (AtomicSequence)fixture;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#setUp()
+	 * @generated
+	 */
+	@Override
+	protected void setUp() throws Exception {
+		setFixture(ComBEFactory.eINSTANCE.createAtomicSequence());
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#tearDown()
+	 * @generated
+	 */
+	@Override
+	protected void tearDown() throws Exception {
+		setFixture(null);
+	}
+
+} //AtomicSequenceTest

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/BehaviorSeqTest.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/BehaviorSeqTest.java	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,93 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.tests;
+
+import ComBE.BehaviorSeq;
+import ComBE.ComBEFactory;
+
+import junit.framework.TestCase;
+
+import junit.textui.TestRunner;
+
+/**
+ * <!-- begin-user-doc -->
+ * A test case for the model object '<em><b>Behavior Seq</b></em>'.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class BehaviorSeqTest extends TestCase {
+
+	/**
+	 * The fixture for this Behavior Seq test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected BehaviorSeq fixture = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static void main(String[] args) {
+		TestRunner.run(BehaviorSeqTest.class);
+	}
+
+	/**
+	 * Constructs a new Behavior Seq test case with the given name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public BehaviorSeqTest(String name) {
+		super(name);
+	}
+
+	/**
+	 * Sets the fixture for this Behavior Seq test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void setFixture(BehaviorSeq fixture) {
+		this.fixture = fixture;
+	}
+
+	/**
+	 * Returns the fixture for this Behavior Seq test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected BehaviorSeq getFixture() {
+		return fixture;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#setUp()
+	 * @generated
+	 */
+	@Override
+	protected void setUp() throws Exception {
+		setFixture(ComBEFactory.eINSTANCE.createBehaviorSeq());
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#tearDown()
+	 * @generated
+	 */
+	@Override
+	protected void tearDown() throws Exception {
+		setFixture(null);
+	}
+
+} //BehaviorSeqTest

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/BehaviorTest.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/BehaviorTest.java	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,93 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.tests;
+
+import ComBE.Behavior;
+import ComBE.ComBEFactory;
+
+import junit.framework.TestCase;
+
+import junit.textui.TestRunner;
+
+/**
+ * <!-- begin-user-doc -->
+ * A test case for the model object '<em><b>Behavior</b></em>'.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class BehaviorTest extends TestCase {
+
+	/**
+	 * The fixture for this Behavior test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Behavior fixture = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static void main(String[] args) {
+		TestRunner.run(BehaviorTest.class);
+	}
+
+	/**
+	 * Constructs a new Behavior test case with the given name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public BehaviorTest(String name) {
+		super(name);
+	}
+
+	/**
+	 * Sets the fixture for this Behavior test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void setFixture(Behavior fixture) {
+		this.fixture = fixture;
+	}
+
+	/**
+	 * Returns the fixture for this Behavior test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Behavior getFixture() {
+		return fixture;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#setUp()
+	 * @generated
+	 */
+	@Override
+	protected void setUp() throws Exception {
+		setFixture(ComBEFactory.eINSTANCE.createBehavior());
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#tearDown()
+	 * @generated
+	 */
+	@Override
+	protected void tearDown() throws Exception {
+		setFixture(null);
+	}
+
+} //BehaviorTest

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/BehaviorTreeTest.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/BehaviorTreeTest.java	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,59 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.tests;
+
+import ComBE.BehaviorTree;
+
+import junit.framework.TestCase;
+
+/**
+ * <!-- begin-user-doc -->
+ * A test case for the model object '<em><b>Behavior Tree</b></em>'.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public abstract class BehaviorTreeTest extends TestCase {
+
+	/**
+	 * The fixture for this Behavior Tree test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected BehaviorTree fixture = null;
+
+	/**
+	 * Constructs a new Behavior Tree test case with the given name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public BehaviorTreeTest(String name) {
+		super(name);
+	}
+
+	/**
+	 * Sets the fixture for this Behavior Tree test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void setFixture(BehaviorTree fixture) {
+		this.fixture = fixture;
+	}
+
+	/**
+	 * Returns the fixture for this Behavior Tree test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected BehaviorTree getFixture() {
+		return fixture;
+	}
+
+} //BehaviorTreeTest

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/ComBEAllTests.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/ComBEAllTests.java	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,50 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.tests;
+
+import junit.framework.Test;
+import junit.framework.TestSuite;
+
+import junit.textui.TestRunner;
+
+/**
+ * <!-- begin-user-doc -->
+ * A test suite for the '<em><b>ComBE</b></em>' model.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class ComBEAllTests extends TestSuite {
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static void main(String[] args) {
+		TestRunner.run(suite());
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static Test suite() {
+		TestSuite suite = new ComBEAllTests("ComBE Tests");
+		return suite;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ComBEAllTests(String name) {
+		super(name);
+	}
+
+} //ComBEAllTests

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/ComBEExample.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/ComBEExample.java	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,125 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.tests;
+
+import ComBE.ComBEFactory;
+import ComBE.ComBEPackage;
+import ComBE.Specification;
+
+import java.io.File;
+import java.io.IOException;
+
+import org.eclipse.emf.common.util.Diagnostic;
+import org.eclipse.emf.common.util.URI;
+
+import org.eclipse.emf.ecore.EObject;
+
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.emf.ecore.resource.ResourceSet;
+
+import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
+
+import org.eclipse.emf.ecore.util.Diagnostician;
+
+import org.eclipse.emf.ecore.xmi.impl.XMIResourceFactoryImpl;
+
+/**
+ * <!-- begin-user-doc -->
+ * A sample utility for the '<em><b>ComBE</b></em>' package.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class ComBEExample {
+	/**
+	 * <!-- begin-user-doc -->
+	 * Load all the argument file paths or URIs as instances of the model.
+	 * <!-- end-user-doc -->
+	 * @param args the file paths or URIs.
+	 * @generated
+	 */
+	public static void main(String[] args) {
+		// Create a resource set to hold the resources.
+		//
+		ResourceSet resourceSet = new ResourceSetImpl();
+		
+		// Register the appropriate resource factory to handle all file extensions.
+		//
+		resourceSet.getResourceFactoryRegistry().getExtensionToFactoryMap().put
+			(Resource.Factory.Registry.DEFAULT_EXTENSION, 
+			 new XMIResourceFactoryImpl());
+
+		// Register the package to ensure it is available during loading.
+		//
+		resourceSet.getPackageRegistry().put
+			(ComBEPackage.eNS_URI, 
+			 ComBEPackage.eINSTANCE);
+        
+		// If there are no arguments, emit an appropriate usage message.
+		//
+		if (args.length == 0) {
+			System.out.println("Enter a list of file paths or URIs that have content like this:");
+			try {
+				Resource resource = resourceSet.createResource(URI.createURI("http:///My.combe"));
+				Specification root = ComBEFactory.eINSTANCE.createSpecification();
+				resource.getContents().add(root);
+				resource.save(System.out, null);
+			}
+			catch (IOException exception) {
+				exception.printStackTrace();
+			}
+		}
+		else {
+			// Iterate over all the arguments.
+			//
+			for (int i = 0; i < args.length; ++i) {
+				// Construct the URI for the instance file.
+				// The argument is treated as a file path only if it denotes an existing file.
+				// Otherwise, it's directly treated as a URL.
+				//
+				File file = new File(args[i]);
+				URI uri = file.isFile() ? URI.createFileURI(file.getAbsolutePath()): URI.createURI(args[i]);
+
+				try {
+					// Demand load resource for this file.
+					//
+					Resource resource = resourceSet.getResource(uri, true);
+					System.out.println("Loaded " + uri);
+
+					// Validate the contents of the loaded resource.
+					//
+					for (EObject eObject : resource.getContents()) {
+						Diagnostic diagnostic = Diagnostician.INSTANCE.validate(eObject);
+						if (diagnostic.getSeverity() != Diagnostic.OK) {
+							printDiagnostic(diagnostic, "");
+						}
+					}
+				}
+				catch (RuntimeException exception) {
+					System.out.println("Problem loading " + uri);
+					exception.printStackTrace();
+				}
+			}
+		}
+	}
+	
+	/**
+	 * <!-- begin-user-doc -->
+	 * Prints diagnostics with indentation.
+	 * <!-- end-user-doc -->
+	 * @param diagnostic the diagnostic to print.
+	 * @param indent the indentation for printing.
+	 * @generated
+	 */
+	protected static void printDiagnostic(Diagnostic diagnostic, String indent) {
+		System.out.print(indent);
+		System.out.println(diagnostic.getMessage());
+		for (Diagnostic child : diagnostic.getChildren()) {
+			printDiagnostic(child, indent + "  ");
+		}
+	}
+
+} //ComBEExample

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/ComBETests.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/ComBETests.java	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,50 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.tests;
+
+import junit.framework.Test;
+import junit.framework.TestSuite;
+
+import junit.textui.TestRunner;
+
+/**
+ * <!-- begin-user-doc -->
+ * A test suite for the '<em><b>ComBE</b></em>' package.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class ComBETests extends TestSuite {
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static void main(String[] args) {
+		TestRunner.run(suite());
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static Test suite() {
+		TestSuite suite = new ComBETests("ComBE Tests");
+		return suite;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ComBETests(String name) {
+		super(name);
+	}
+
+} //ComBETests

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/ComponentTest.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/ComponentTest.java	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,59 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.tests;
+
+import ComBE.Component;
+
+import junit.framework.TestCase;
+
+/**
+ * <!-- begin-user-doc -->
+ * A test case for the model object '<em><b>Component</b></em>'.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public abstract class ComponentTest extends TestCase {
+
+	/**
+	 * The fixture for this Component test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Component fixture = null;
+
+	/**
+	 * Constructs a new Component test case with the given name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ComponentTest(String name) {
+		super(name);
+	}
+
+	/**
+	 * Sets the fixture for this Component test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void setFixture(Component fixture) {
+		this.fixture = fixture;
+	}
+
+	/**
+	 * Returns the fixture for this Component test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Component getFixture() {
+		return fixture;
+	}
+
+} //ComponentTest

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/EmptyNodeTest.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/EmptyNodeTest.java	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,74 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.tests;
+
+import ComBE.ComBEFactory;
+import ComBE.EmptyNode;
+
+import junit.textui.TestRunner;
+
+/**
+ * <!-- begin-user-doc -->
+ * A test case for the model object '<em><b>Empty Node</b></em>'.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class EmptyNodeTest extends NodeTest {
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static void main(String[] args) {
+		TestRunner.run(EmptyNodeTest.class);
+	}
+
+	/**
+	 * Constructs a new Empty Node test case with the given name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public EmptyNodeTest(String name) {
+		super(name);
+	}
+
+	/**
+	 * Returns the fixture for this Empty Node test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected EmptyNode getFixture() {
+		return (EmptyNode)fixture;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#setUp()
+	 * @generated
+	 */
+	@Override
+	protected void setUp() throws Exception {
+		setFixture(ComBEFactory.eINSTANCE.createEmptyNode());
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#tearDown()
+	 * @generated
+	 */
+	@Override
+	protected void tearDown() throws Exception {
+		setFixture(null);
+	}
+
+} //EmptyNodeTest

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/NodeTest.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/NodeTest.java	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,59 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.tests;
+
+import ComBE.Node;
+
+import junit.framework.TestCase;
+
+/**
+ * <!-- begin-user-doc -->
+ * A test case for the model object '<em><b>Node</b></em>'.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public abstract class NodeTest extends TestCase {
+
+	/**
+	 * The fixture for this Node test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Node fixture = null;
+
+	/**
+	 * Constructs a new Node test case with the given name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public NodeTest(String name) {
+		super(name);
+	}
+
+	/**
+	 * Sets the fixture for this Node test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void setFixture(Node fixture) {
+		this.fixture = fixture;
+	}
+
+	/**
+	 * Returns the fixture for this Node test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Node getFixture() {
+		return fixture;
+	}
+
+} //NodeTest

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/ParallelBranchTest.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/ParallelBranchTest.java	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,74 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.tests;
+
+import ComBE.ComBEFactory;
+import ComBE.ParallelBranch;
+
+import junit.textui.TestRunner;
+
+/**
+ * <!-- begin-user-doc -->
+ * A test case for the model object '<em><b>Parallel Branch</b></em>'.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class ParallelBranchTest extends BehaviorTreeTest {
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static void main(String[] args) {
+		TestRunner.run(ParallelBranchTest.class);
+	}
+
+	/**
+	 * Constructs a new Parallel Branch test case with the given name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public ParallelBranchTest(String name) {
+		super(name);
+	}
+
+	/**
+	 * Returns the fixture for this Parallel Branch test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected ParallelBranch getFixture() {
+		return (ParallelBranch)fixture;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#setUp()
+	 * @generated
+	 */
+	@Override
+	protected void setUp() throws Exception {
+		setFixture(ComBEFactory.eINSTANCE.createParallelBranch());
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#tearDown()
+	 * @generated
+	 */
+	@Override
+	protected void tearDown() throws Exception {
+		setFixture(null);
+	}
+
+} //ParallelBranchTest

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/RequirementTest.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/RequirementTest.java	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,93 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.tests;
+
+import ComBE.ComBEFactory;
+import ComBE.Requirement;
+
+import junit.framework.TestCase;
+
+import junit.textui.TestRunner;
+
+/**
+ * <!-- begin-user-doc -->
+ * A test case for the model object '<em><b>Requirement</b></em>'.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class RequirementTest extends TestCase {
+
+	/**
+	 * The fixture for this Requirement test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Requirement fixture = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static void main(String[] args) {
+		TestRunner.run(RequirementTest.class);
+	}
+
+	/**
+	 * Constructs a new Requirement test case with the given name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public RequirementTest(String name) {
+		super(name);
+	}
+
+	/**
+	 * Sets the fixture for this Requirement test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void setFixture(Requirement fixture) {
+		this.fixture = fixture;
+	}
+
+	/**
+	 * Returns the fixture for this Requirement test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Requirement getFixture() {
+		return fixture;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#setUp()
+	 * @generated
+	 */
+	@Override
+	protected void setUp() throws Exception {
+		setFixture(ComBEFactory.eINSTANCE.createRequirement());
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#tearDown()
+	 * @generated
+	 */
+	@Override
+	protected void tearDown() throws Exception {
+		setFixture(null);
+	}
+
+} //RequirementTest

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/RootTest.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/RootTest.java	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,93 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.tests;
+
+import ComBE.ComBEFactory;
+import ComBE.Root;
+
+import junit.framework.TestCase;
+
+import junit.textui.TestRunner;
+
+/**
+ * <!-- begin-user-doc -->
+ * A test case for the model object '<em><b>Root</b></em>'.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class RootTest extends TestCase {
+
+	/**
+	 * The fixture for this Root test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Root fixture = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static void main(String[] args) {
+		TestRunner.run(RootTest.class);
+	}
+
+	/**
+	 * Constructs a new Root test case with the given name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public RootTest(String name) {
+		super(name);
+	}
+
+	/**
+	 * Sets the fixture for this Root test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void setFixture(Root fixture) {
+		this.fixture = fixture;
+	}
+
+	/**
+	 * Returns the fixture for this Root test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Root getFixture() {
+		return fixture;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#setUp()
+	 * @generated
+	 */
+	@Override
+	protected void setUp() throws Exception {
+		setFixture(ComBEFactory.eINSTANCE.createRoot());
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#tearDown()
+	 * @generated
+	 */
+	@Override
+	protected void tearDown() throws Exception {
+		setFixture(null);
+	}
+
+} //RootTest

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/SpecificationTest.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/SpecificationTest.java	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,93 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.tests;
+
+import ComBE.ComBEFactory;
+import ComBE.Specification;
+
+import junit.framework.TestCase;
+
+import junit.textui.TestRunner;
+
+/**
+ * <!-- begin-user-doc -->
+ * A test case for the model object '<em><b>Specification</b></em>'.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class SpecificationTest extends TestCase {
+
+	/**
+	 * The fixture for this Specification test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Specification fixture = null;
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static void main(String[] args) {
+		TestRunner.run(SpecificationTest.class);
+	}
+
+	/**
+	 * Constructs a new Specification test case with the given name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public SpecificationTest(String name) {
+		super(name);
+	}
+
+	/**
+	 * Sets the fixture for this Specification test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected void setFixture(Specification fixture) {
+		this.fixture = fixture;
+	}
+
+	/**
+	 * Returns the fixture for this Specification test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	protected Specification getFixture() {
+		return fixture;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#setUp()
+	 * @generated
+	 */
+	@Override
+	protected void setUp() throws Exception {
+		setFixture(ComBEFactory.eINSTANCE.createSpecification());
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#tearDown()
+	 * @generated
+	 */
+	@Override
+	protected void tearDown() throws Exception {
+		setFixture(null);
+	}
+
+} //SpecificationTest

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/StandardComponentTest.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/StandardComponentTest.java	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,74 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.tests;
+
+import ComBE.ComBEFactory;
+import ComBE.StandardComponent;
+
+import junit.textui.TestRunner;
+
+/**
+ * <!-- begin-user-doc -->
+ * A test case for the model object '<em><b>Standard Component</b></em>'.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class StandardComponentTest extends ComponentTest {
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static void main(String[] args) {
+		TestRunner.run(StandardComponentTest.class);
+	}
+
+	/**
+	 * Constructs a new Standard Component test case with the given name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public StandardComponentTest(String name) {
+		super(name);
+	}
+
+	/**
+	 * Returns the fixture for this Standard Component test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected StandardComponent getFixture() {
+		return (StandardComponent)fixture;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#setUp()
+	 * @generated
+	 */
+	@Override
+	protected void setUp() throws Exception {
+		setFixture(ComBEFactory.eINSTANCE.createStandardComponent());
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#tearDown()
+	 * @generated
+	 */
+	@Override
+	protected void tearDown() throws Exception {
+		setFixture(null);
+	}
+
+} //StandardComponentTest

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/StandardNodeTest.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/StandardNodeTest.java	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,74 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.tests;
+
+import ComBE.ComBEFactory;
+import ComBE.StandardNode;
+
+import junit.textui.TestRunner;
+
+/**
+ * <!-- begin-user-doc -->
+ * A test case for the model object '<em><b>Standard Node</b></em>'.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class StandardNodeTest extends NodeTest {
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static void main(String[] args) {
+		TestRunner.run(StandardNodeTest.class);
+	}
+
+	/**
+	 * Constructs a new Standard Node test case with the given name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public StandardNodeTest(String name) {
+		super(name);
+	}
+
+	/**
+	 * Returns the fixture for this Standard Node test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected StandardNode getFixture() {
+		return (StandardNode)fixture;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#setUp()
+	 * @generated
+	 */
+	@Override
+	protected void setUp() throws Exception {
+		setFixture(ComBEFactory.eINSTANCE.createStandardNode());
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#tearDown()
+	 * @generated
+	 */
+	@Override
+	protected void tearDown() throws Exception {
+		setFixture(null);
+	}
+
+} //StandardNodeTest

Added: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/SystemComponentTest.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.graphical.tests/src/ComBE/tests/SystemComponentTest.java	Mon Jul 16 02:28:00 2012	(r25208)
@@ -0,0 +1,74 @@
+/**
+ * <copyright>
+ * </copyright>
+ *
+ * $Id$
+ */
+package ComBE.tests;
+
+import ComBE.ComBEFactory;
+import ComBE.SystemComponent;
+
+import junit.textui.TestRunner;
+
+/**
+ * <!-- begin-user-doc -->
+ * A test case for the model object '<em><b>System Component</b></em>'.
+ * <!-- end-user-doc -->
+ * @generated
+ */
+public class SystemComponentTest extends ComponentTest {
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public static void main(String[] args) {
+		TestRunner.run(SystemComponentTest.class);
+	}
+
+	/**
+	 * Constructs a new System Component test case with the given name.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public SystemComponentTest(String name) {
+		super(name);
+	}
+
+	/**
+	 * Returns the fixture for this System Component test case.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	@Override
+	protected SystemComponent getFixture() {
+		return (SystemComponent)fixture;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#setUp()
+	 * @generated
+	 */
+	@Override
+	protected void setUp() throws Exception {
+		setFixture(ComBEFactory.eINSTANCE.createSystemComponent());
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see junit.framework.TestCase#tearDown()
+	 * @generated
+	 */
+	@Override
+	protected void tearDown() throws Exception {
+		setFixture(null);
+	}
+
+} //SystemComponentTest


From oskarvanrest at gmail.com  Mon Jul 16 05:48:39 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 16 Jul 2012 03:48:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25209 - in
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual:
	. editor/java/org/behaviorengineering/combe/textual/strategies
	lib syntax test ...
Message-ID: <20120716034839.D572C108C00B@mx3.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 16 03:48:39 2012
New Revision: 25209
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25209&sc=1

Log:


Added:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/java/org/behaviorengineering/combe/textual/strategies/gmf_bridge_0_3.java
      - copied, changed from r25175, experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/java/org/behaviorengineering/combe/textual/strategies/term_to_model_0_3.java
Deleted:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/java/org/behaviorengineering/combe/textual/strategies/term_to_model_0_3.java
Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/   (props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/java/org/behaviorengineering/combe/textual/strategies/InteropRegisterer.java
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/analysis-auto.generated.str
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/analysis-library-internal.generated.str
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/analysis-library.generated.str
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/compilation-library.generated.str
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/editor-common.generated.str
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/index-library.generated.str
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/syntax/   (props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/syntax/ComBE.generated.pp
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/test/   (props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/analysis-manual.str
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/combe.str

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/java/org/behaviorengineering/combe/textual/strategies/InteropRegisterer.java
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/java/org/behaviorengineering/combe/textual/strategies/InteropRegisterer.java	Mon Jul 16 02:28:00 2012	(r25208)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/java/org/behaviorengineering/combe/textual/strategies/InteropRegisterer.java	Mon Jul 16 03:48:39 2012	(r25209)
@@ -9,6 +9,6 @@
 public class InteropRegisterer extends JavaInteropRegisterer {
 
 	public InteropRegisterer() {
-		super(new Strategy[] { java_strategy_0_0.instance, term_to_model_0_3.instance });
+		super(new Strategy[] { java_strategy_0_0.instance, gmf_bridge_0_3.instance });
 	}
 }

Copied and modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/java/org/behaviorengineering/combe/textual/strategies/gmf_bridge_0_3.java (from r25175, experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/java/org/behaviorengineering/combe/textual/strategies/term_to_model_0_3.java)
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/java/org/behaviorengineering/combe/textual/strategies/term_to_model_0_3.java	Mon Jul  9 07:16:55 2012	(r25175, copy source)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/editor/java/org/behaviorengineering/combe/textual/strategies/gmf_bridge_0_3.java	Mon Jul 16 03:48:39 2012	(r25209)
@@ -6,9 +6,9 @@
 import org.strategoxt.lang.Context;
 import org.strategoxt.lang.Strategy;
 
-public class term_to_model_0_3 extends Strategy {
+public class gmf_bridge_0_3 extends Strategy {
 
-	public static term_to_model_0_3 instance = new term_to_model_0_3();
+	public static gmf_bridge_0_3 instance = new gmf_bridge_0_3();
 
 	@Override
 	public IStrategoTerm invoke(Context context, IStrategoTerm analysedAST, IStrategoTerm textFilePath, IStrategoTerm diagramFilePath, IStrategoTerm packageName) {

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/analysis-auto.generated.str
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/analysis-auto.generated.str	Mon Jul 16 02:28:00 2012	(r25208)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/analysis-auto.generated.str	Mon Jul 16 03:48:39 2012	(r25209)
@@ -2,12 +2,84 @@
 
 signature
   constructors
-    
+    Requirement : Namespace
+    Component   : Namespace
+    Behavior    : Namespace
 
 
 imports
+  lib/editor-common.generated
   include/ComBE
 
 
 rules
 
+  nam-get-scope-types :
+    Specification(_, _, _) -> [Requirement(), Component()]
+
+  nam-get-scope-types :
+    StandardComponent(_, _, _) -> [Behavior()]
+
+  nam-get-scope-types :
+    SystemComponent(_, _, _) -> [Behavior()]
+
+  nam-get-scope-types :
+    Specification(_, _, _) -> [Requirement(), Component()]
+
+  nam-get-scope-types :
+    StandardComponent(_, _, _) -> [Behavior()]
+
+  nam-get-scope-types :
+    SystemComponent(_, _, _) -> [Behavior()]
+
+  nam-get-definition-key :
+    Requirement(x, _) -> x
+
+  nam-get-definition :
+    Requirement(x, _) -> <nam-get-def(|Requirement())> x
+
+  nam-get-definition-key :
+    StandardComponent(x, _, _) -> x
+
+  nam-get-definition :
+    StandardComponent(x, _, _) -> <nam-get-def(|Component())> x
+
+  nam-get-definition-key :
+    SystemComponent(x, _, _) -> x
+
+  nam-get-definition :
+    SystemComponent(x, _, _) -> <nam-get-def(|Component())> x
+
+  nam-get-definition-key :
+    Behavior(x, _) -> x
+
+  nam-get-definition :
+    Behavior(x, _) -> <nam-get-def(|Behavior())> x
+
+  nam-annotate-names(|def-path):
+    Requirement(z_7057, a_7058) -> Requirement(z_7057{def-path}, a_7058)
+
+  nam-annotate-names(|def-path):
+    StandardComponent(w_7057, x_7057, y_7057) -> StandardComponent(w_7057{def-path}, x_7057, y_7057)
+
+  nam-annotate-names(|def-path):
+    SystemComponent(t_7057, u_7057, v_7057) -> SystemComponent(t_7057{def-path}, u_7057, v_7057)
+
+  nam-annotate-names(|def-path):
+    Behavior(p_7057, q_7057) -> Behavior(p_7057{def-path}, q_7057)
+
+  nam-annotate-names(|def-path):
+    StandardNode(c_7057, d_7057, e_7057, f_7057, g_7057, h_7057) -> StandardNode(
+                                                                      <nam-annotate-use(|Requirement())> c_7057
+                                                                    , d_7057
+                                                                    , <nam-annotate-use(|Component())> e_7057
+                                                                    , <nam-annotate-use(|Behavior())> f_7057
+                                                                    , g_7057
+                                                                    , h_7057
+                                                                    )
+
+  nam-get-def(|n) =
+    fail
+
+  nam-annotate-use(|n) =
+    fail
\ No newline at end of file

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/analysis-library-internal.generated.str
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/analysis-library-internal.generated.str	Mon Jul 16 02:28:00 2012	(r25208)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/analysis-library-internal.generated.str	Mon Jul 16 03:48:39 2012	(r25209)
@@ -144,7 +144,7 @@
   analyze-top-store-ast:
     (ast, file) -> <id>
     with
-      <index-set-global(|[<index-file-to-string> file, "ast"])> ast
+      <index-set-global(|<conc> (<index-file-to-uri> file, ["ast"]))> ast
       
   /**
    * Identifies all definitions in the tree and annotates them with their URI.
@@ -376,6 +376,14 @@
       // Files to analyze
       analyzeFiles := <make-set> <remove-all(fake-file)> dependentFiles;
       analyzeFiles' := analyzeFiles;
+      // TODO: Is this extra check needed?
+      /*if <getfirst(index-get-file-revision; \r -> (r, revision)\; gt)> analyzeFiles then
+        // Add current file if the current file has read information from another file with a higher revision.
+        // This indicates that potentially outdated information was read.
+        analyzeFiles' := [file|analyzeFiles]
+      else
+        analyzeFiles' := analyzeFiles
+      end;*/
       
       // Files to compile
       changedAstFiles := <filter(analyze-astdiff)> astFilePairs;
@@ -391,7 +399,7 @@
   analyze-astdiff:
     (ast, file) -> file
     where
-      name := [<index-file-to-string> file, "ast-checksum"];
+      name := <conc> (<index-file-to-uri> file, ["ast-checksum"]);
       newChecksum := <checksum> ast;
       if oldChecksum := <index-get-global(|name)> then
         <index-set-global(|name)> newChecksum;
@@ -612,9 +620,7 @@
   
   /** @internal */
   ast-uri-to-ast-file(|full-path):
-    (ast, uri) -> (ast, (full-path, uriStr))
-    with
-      (<index-uri-to-string> uri <+ !"") => uriStr
+    (ast, uri) -> (ast, (full-path, uri))
   
   /** @internal */     
   index-is-name-substring(|name):

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/analysis-library.generated.str
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/analysis-library.generated.str	Mon Jul 16 02:28:00 2012	(r25208)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/analysis-library.generated.str	Mon Jul 16 03:48:39 2012	(r25209)
@@ -182,8 +182,9 @@
         Results(ast', _, _, _, _, _, filesToAnalyze) := 
           <analyze-top-internal(|phase, language, project-path, full-path)> astsFilePairs
       else
-        Results(ast', _, _, _, _, _, filesToAnalyze) := 
-          <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, (full-path, ""))]
+        Results(asts, _, _, _, _, _, filesToAnalyze) := 
+          <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, full-path)];
+        ast' := <Hd> asts
       end
   
 rules // Parallel analysis

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/compilation-library.generated.str
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/compilation-library.generated.str	Mon Jul 16 02:28:00 2012	(r25208)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/compilation-library.generated.str	Mon Jul 16 03:48:39 2012	(r25209)
@@ -81,17 +81,13 @@
   index-compilation-file(|language, project-path):
     (path, subfile) -> None()
     with
-      // Parse and analyze ast.
-      ast                              := <parse-file> path;
-      ast'                             := <try(index-desugar-ast)> ast;
-      Results(ast'', _, _, _, _, _, _) := <analyze-top-internal(|Compile(), language, project-path, path)> [(ast', (path, subfile))]
-    with
+      ast := <index-get-global(|<conc> (<index-file-to-uri> (path, subfile), ["ast"]))>;
       {| Index-ReadSet:
         readSet := <new-iset>;
         rules(Index-ReadSet: _ -> readSet);
         
         // Compile file
-        <try(index-compile-ast(|path, subfile))> ast'';
+        <try(index-compile-ast(|path, subfile))> ast;
         
         // Store compile-time reads.
         reads := <iset-elements> readSet;
@@ -125,7 +121,7 @@
    * Compilation can be delayed by using disable-commit-and-compile. Compilation will be triggered when 
    * enable-commit-and-compile is called.
    *
-   * @type language -> ?language
+   * @type language -> language
    *
    * @see enable-commit-and-compile
    * @see disable-commit-and-compile
@@ -150,10 +146,10 @@
     index-enable-global(|"delay-compile")
   
   /**
-   * Cancels the commit and compilation delay. If commit and compilation was triggered during the delay, it
-   * is triggered now.
+   * Cancels the commit and compilation delay, requires target language as current term. 
+   * If commit and compilation was triggered during the delay, it is triggered now.
    *
-   * @type x -> x
+   * @type language -> language
    *
    * @see disable-commit-and-compile
    */

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/editor-common.generated.str
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/editor-common.generated.str	Mon Jul 16 02:28:00 2012	(r25208)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/editor-common.generated.str	Mon Jul 16 03:48:39 2012	(r25209)
@@ -228,6 +228,9 @@
   Entity   : ID * List(Property) -> Entity
   Property : ID * Type           -> Property
   Type     : ID                  -> Type
+  
+  Type     : Namespace
+  Property : Namespace
 
 strategies
   

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/index-library.generated.str
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/index-library.generated.str	Mon Jul 16 02:28:00 2012	(r25208)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/lib/index-library.generated.str	Mon Jul 16 03:48:39 2012	(r25209)
@@ -27,6 +27,9 @@
   Global : List(UriPart) -> Summary
   Global : List(UriPart) * List(Summary) -> Summary
   
+  // None namespace
+  None   : Namespace
+  
 rules // Index management
    
   /**
@@ -174,14 +177,14 @@
    * Starts a transaction, applies given strategy and ends the transaction. All index operations used from the given
    * strategy are thread safe.
    * 
-   * @param s The strategy to apply.
+   * @param s The strategy to apply. Transaction will still properly end if strategy fails.
    * @type x -> x'
    *
    * @see index-start-transaction
    * @see index-end-transaction
    */
   index-transaction(s) = 
-    prim("LANG_index_start_transaction"); s; prim("LANG_index_end_transaction")
+    prim("LANG_index_start_transaction"); try(s); prim("LANG_index_end_transaction")
   
 rules // Index querying
   
@@ -604,25 +607,62 @@
    * Converts a file ((file, subfile) tuple) to a string.
    *
    * Example:
-   *   <index-file-to-string> ("fullpath/file.ext", "") => "fullpath/file.ext"
+   *   <index-file-to-string> ("fullpath/file.ext", []) => "fullpath/file.ext"
    *
-   * @type (file, "") -> file
+   * @type (file, []) -> file
    */
   index-file-to-string:
-    (file, "") -> file
+    (file, []) -> file
     
   /**
    * Converts a file ((file, subfile) tuple) to a string.
    *
    * Example:
-   *   <index-file-to-string> ("fullpath/file.ext", "subfile") => "fullpath/file.ext at subfile"
+   *   <index-file-to-string> ("fullpath/file.ext", [Entity(), "Foo" "Bar"]) => "fullpath/file.ext at Entity://Foo.Bar"
    *
    * @type (file, subfile) -> str
    */
   index-file-to-string:
-    (file, subfile) -> <concat-strings> [file, "@", subfile]
+    (file, subfile) -> <concat-strings> [file, "@", <index-uri-to-string> subfile]
+    where
+      not([] := subfile)
+
+  /**
+   * Converts a file to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> "fullpath/file.ext" => [None(), "fullpath/file.ext"]
+   *
+   * @type file -> uri
+   */      
+  index-file-to-uri:
+    file -> [None(), file]
+    where
+      not(<is-tuple> file)
+      
+  /**
+   * Converts a file ((file, subfile) tuple) to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> ("fullpath/file.ext", []) => [None(), "fullpath/file.ext]
+   *
+   * @type (file, subfile) -> uri
+   */      
+  index-file-to-uri:
+    (file, []) -> [None(), file]
+    
+  /**
+   * Converts a file ((file, subfile) tuple) to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> ("fullpath/file.ext", [Entity(), "Foo" "Bar"]) => [Entity(), "Foo", "Bar", "fullpath/file.ext"]
+   *
+   * @type (file, subfile) -> uri
+   */      
+  index-file-to-uri:
+    (file, subfile) -> <conc> ([file], subfile)
     where
-      not("" := subfile)
+      not([] := subfile)
       
 /** @internal */
 rules // URI and value projections

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/syntax/ComBE.generated.pp
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/syntax/ComBE.generated.pp	Mon Jul 16 02:28:00 2012	(r25208)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/syntax/ComBE.generated.pp	Mon Jul 16 03:48:39 2012	(r25209)
@@ -1,3 +1,30 @@
 [
-   Start -- KW[""]
+   Specification                 -- KW["#RT"] _1 _2 _3,
+   Specification.1:iter-star     -- _1,
+   Specification.2:iter-star     -- _1,
+   Specification.3:opt           -- _1,
+   Specification.3:opt.1:seq     -- KW["#T"] _1,
+   Requirement                   -- _1 _2,
+   StandardComponent             -- KW["#C"] _1 _2 _3,
+   StandardComponent.3:iter-star -- _1,
+   SystemComponent               -- KW["#SC"] _1 _2 _3,
+   SystemComponent.3:iter-star   -- _1,
+   BehaviorSeq                   -- _1 _2,
+   BehaviorSeq.2:iter-star       -- _1,
+   Behavior                      -- _1 _2,
+   Root                          -- _1,
+   AtomicSequence                -- _1 _2,
+   AtomicSequence.1:iter-sep     -- _1 KW[";;"],
+   AtomicSequence.2:opt          -- _1,
+   AtomicSequence.2:opt.1:seq    -- KW[";"] _1,
+   AlternativeBranch             -- _1 KW["#N"] KW["{"] _2 KW["}"],
+   AlternativeBranch.1:iter-sep  -- _1 KW[";;"],
+   AlternativeBranch.2:iter-star -- _1,
+   ParallelBranch                -- _1 KW["#P"] KW["{"] _2 KW["}"],
+   ParallelBranch.1:iter-sep     -- _1 KW[";;"],
+   ParallelBranch.2:iter-star    -- _1,
+   StandardNode                  -- _1 _2 _3 _4 _5 _6,
+   StandardNode.5:opt            -- _1,
+   EmptyNode                     -- KW["_"] _1 _2,
+   EmptyNode.1:opt               -- _1
 ]
\ No newline at end of file

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/analysis-manual.str
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/analysis-manual.str	Mon Jul 16 02:28:00 2012	(r25208)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/analysis-manual.str	Mon Jul 16 03:48:39 2012	(r25209)
@@ -17,7 +17,6 @@
 	adjust-index-lookup(target |namespace, path, prefix):
 		StandardNode(_, _, c, <target>, _, _) -> f*
 		where
-			<debug> prefix;
 			f* := <index-lookup-children(|Behavior(), prefix)> c
 			
 			
\ No newline at end of file

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/combe.str
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/combe.str	Mon Jul 16 02:28:00 2012	(r25208)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/trans/combe.str	Mon Jul 16 03:48:39 2012	(r25209)
@@ -68,9 +68,9 @@
       textFilePath := $[[project-path]/[path]];
       diagramFileExtension := <conc-strings> (<lower-case> packageName, "_diagram");
       diagramFilePath := $[[project-path]/[<guarantee-extension(|diagramFileExtension)> path]];
-      <term-to-model(|textFilePath, diagramFilePath, packageName)> ast'
+      <gmf-bridge(|textFilePath, diagramFilePath, packageName)> ast'
       
-  external term-to-model(|diagramFilePath, packageName, textFilePath)
+  external gmf-bridge(|diagramFilePath, packageName, textFilePath)
 
 rules // Editor services
   

From oskarvanrest at gmail.com  Mon Jul 16 11:09:18 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 16 Jul 2012 09:09:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25210 - in
	experimental/graphical-editor/org.spoofax.graphical: .
	src/org/spoofax/graphical src/org/spoofax/graphical/emf
	src/org/spoofax/graphical/emf/compare src/org/spo...
Message-ID: <20120716090918.A0ED97F8018@mx1.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 16 09:09:16 2012
New Revision: 25210
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25210&sc=1

Log:
Remove EditorPair when either Spoofax editor or GMF editor is closed. Dispose listeners.

Modified:
   experimental/graphical-editor/org.spoofax.graphical/   (props changed)
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/EditorPair.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFBridge.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFBridgeUtil.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/Model2Term.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/StrategoTermPathAdapter.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/Term2Model.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/compare/SpoofaxEMFCompare.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/compare/SpoofaxMatchEngine.java
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/SpoofaxSelectionChangedListener.java

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/EditorPair.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/EditorPair.java	Mon Jul 16 03:48:39 2012	(r25209)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/EditorPair.java	Mon Jul 16 09:09:16 2012	(r25210)
@@ -1,6 +1,5 @@
 package org.spoofax.graphical;
 
-import org.eclipse.emf.ecore.EObject;
 import org.eclipse.emf.ecore.EPackage;
 import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
 import org.eclipse.ui.IEditorPart;
@@ -20,15 +19,25 @@
 	public boolean textSelection;
 	public boolean diagramSelection;
 
+	private SemanticModelContentAdapter semanticModelContentAdapter;
+	private GMFSelectionChangedListener GMFSelectionChangedListener;
+	private SpoofaxSelectionChangedListener spoofaxSelectionChangedListener;
+
 	public EditorPair(IEditorPart textEditor, DiagramEditor diagramEditor, Context context, EPackage ePackage) {
 		this.textEditor = textEditor;
 		this.diagramEditor = diagramEditor;
 		this.context = context;
 		this.ePackage = ePackage;
 
-		installSemanticModelListener();
-		diagramEditor.getEditorSite().getSelectionProvider().addSelectionChangedListener(new GMFSelectionChangedListener(this));
-		textEditor.getSite().getSelectionProvider().addSelectionChangedListener(new SpoofaxSelectionChangedListener(this));
+		GMFBridgeUtil.getSemanticModel(diagramEditor).eAdapters().add(semanticModelContentAdapter = new SemanticModelContentAdapter(this));
+		diagramEditor.getEditorSite().getSelectionProvider().addSelectionChangedListener(GMFSelectionChangedListener = new GMFSelectionChangedListener(this));
+		textEditor.getSite().getSelectionProvider().addSelectionChangedListener(spoofaxSelectionChangedListener = new SpoofaxSelectionChangedListener(this));
+	}
+
+	public void dispose() {
+		GMFBridgeUtil.getSemanticModel(diagramEditor).eAdapters().remove(semanticModelContentAdapter);
+		diagramEditor.getEditorSite().getSelectionProvider().removeSelectionChangedListener(GMFSelectionChangedListener);
+		textEditor.getSite().getSelectionProvider().removeSelectionChangedListener(spoofaxSelectionChangedListener);
 	}
 
 	public IEditorPart getTextEditor() {
@@ -46,9 +55,4 @@
 	public EPackage getEPackage() {
 		return ePackage;
 	}
-
-	private void installSemanticModelListener() {
-		EObject semanticModel = GMFBridgeUtil.getSemanticModel(diagramEditor);
-		semanticModel.eAdapters().add(new SemanticModelContentAdapter(this));
-	}
-}
+}
\ No newline at end of file

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFBridge.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFBridge.java	Mon Jul 16 03:48:39 2012	(r25209)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFBridge.java	Mon Jul 16 09:09:16 2012	(r25210)
@@ -13,6 +13,9 @@
 import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
 import org.eclipse.swt.widgets.Display;
 import org.eclipse.ui.IEditorPart;
+import org.eclipse.ui.IPartListener;
+import org.eclipse.ui.IWorkbenchPart;
+import org.eclipse.ui.part.FileEditorInput;
 import org.spoofax.graphical.emf.Term2Model;
 import org.spoofax.graphical.emf.compare.SpoofaxEMFCompare;
 import org.spoofax.interpreter.terms.IStrategoString;
@@ -23,10 +26,11 @@
 
 	private static GMFBridge instance = new GMFBridge();
 
-	private Map<IStrategoString, EditorPair> editorPairs;
+	private Map<String, EditorPair> editorPairs;
 
 	private GMFBridge() {
-		editorPairs = new HashMap<IStrategoString, EditorPair>();
+		editorPairs = new HashMap<String, EditorPair>();
+		GMFBridgeUtil.getActivePage().addPartListener(new GMFBridgePartListener());
 	}
 
 	public static GMFBridge getInstance() {
@@ -35,9 +39,10 @@
 
 	public IStrategoTerm synchronize(IStrategoTerm analysedAST, IStrategoString textFilePath, Context context, IStrategoString diagramFilePath, IStrategoString packageName) {
 		EditorPair editorPair = null;
+		String key = GMFBridgeUtil.removeExtension(textFilePath.stringValue());
 
-		if (editorPairs.containsKey(textFilePath)) {
-			editorPair = editorPairs.get(textFilePath);
+		if (editorPairs.containsKey(key)) {
+			editorPair = editorPairs.get(key);
 		} else {
 			IEditorPart textEditor = GMFBridgeUtil.findTextEditor(textFilePath.stringValue());
 			DiagramEditor diagramEditor = GMFBridgeUtil.findDiagramEditor(diagramFilePath.stringValue(), packageName.stringValue());
@@ -45,7 +50,7 @@
 
 			if (!(textEditor == null || diagramEditor == null || ePackage == null)) {
 				editorPair = new EditorPair(textEditor, diagramEditor, context, ePackage);
-				editorPairs.put(textFilePath, editorPair);
+				editorPairs.put(key, editorPair);
 			}
 		}
 
@@ -84,4 +89,43 @@
 			}
 		});
 	}
+
+	public EditorPair removeEditorPair(String key) {
+		EditorPair editorPair = editorPairs.remove(key);
+		if (editorPair != null) {
+			editorPair.dispose();
+		}
+		return editorPair;
+	}
 }
+
+class GMFBridgePartListener implements IPartListener {
+
+	@Override
+	public void partActivated(IWorkbenchPart part) {
+	}
+
+	@Override
+	public void partBroughtToTop(IWorkbenchPart part) {
+	}
+
+	@Override
+	public void partClosed(IWorkbenchPart part) {
+		if (part instanceof IEditorPart) {
+			IEditorPart editorPart = (IEditorPart) part;
+			if (editorPart.getEditorInput() instanceof FileEditorInput) {
+				FileEditorInput input = (FileEditorInput) editorPart.getEditorInput();
+				String key = GMFBridgeUtil.removeExtension(input.getPath().toString());
+				GMFBridge.getInstance().removeEditorPair(key);
+			}
+		}
+	}
+
+	@Override
+	public void partDeactivated(IWorkbenchPart part) {
+	}
+
+	@Override
+	public void partOpened(IWorkbenchPart part) {
+	}
+}
\ No newline at end of file

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFBridgeUtil.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFBridgeUtil.java	Mon Jul 16 03:48:39 2012	(r25209)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/GMFBridgeUtil.java	Mon Jul 16 09:09:16 2012	(r25210)
@@ -29,9 +29,7 @@
 	}
 
 	private static IEditorPart findEditor(String path, String editorId) {
-		IWorkbench wb = PlatformUI.getWorkbench();
-		IWorkbenchWindow win = wb.getWorkbenchWindows()[0]; // getActiveWorkbenchWindow doesn't work
-		IWorkbenchPage page = win.getActivePage();
+		IWorkbenchPage page = getActivePage();
 
 		IPath iPath = new Path(path);
 		IFile iFile = ResourcesPlugin.getWorkspace().getRoot().getFileForLocation(iPath);
@@ -48,7 +46,13 @@
 
 		return editor;
 	}
-	
+
+	public static IWorkbenchPage getActivePage() {
+		IWorkbench wb = PlatformUI.getWorkbench();
+		IWorkbenchWindow win = wb.getWorkbenchWindows()[0]; // getActiveWorkbenchWindow doesn't work
+		return win.getActivePage();
+	}
+
 	public static Resource getSemanticModelResource(DiagramEditor diagramEditor) {
 		TransactionalEditingDomain editingDomain = diagramEditor.getEditingDomain();
 		ResourceSet diagramEditorResourceSet = editingDomain.getResourceSet();
@@ -62,4 +66,8 @@
 		else
 			return null;
 	}
+
+	public static String removeExtension(String path) {
+		return path.substring(0, path.lastIndexOf("."));
+	}
 }

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java	Mon Jul 16 03:48:39 2012	(r25209)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java	Mon Jul 16 09:09:16 2012	(r25210)
@@ -21,22 +21,21 @@
 
 	public void notifyChanged(Notification n) {
 		super.notifyChanged(n);
-		
+
 		if (n.getEventType() != Notification.REMOVING_ADAPTER) {
 			IEditorPart textEditor = editorPair.getTextEditor();
 			DiagramEditor diagramEditor = editorPair.getDiagramEditor();
 			Context context = editorPair.getContext();
-			
+
 			if (editorPair.lastTextUpdate + 500 > System.currentTimeMillis()) {
 				return;
-			}
-			else {
+			} else {
 				editorPair.diagramEdit = true;
 			}
-			
+
 			IStrategoTerm currentTerm = EditorState.getEditorFor(textEditor).getCurrentAst();
 			IStrategoTerm newTerm = new Model2Term(context.getFactory()).convert(GMFBridgeUtil.getSemanticModel(diagramEditor));
-			
+
 			EditorState editor = EditorState.getEditorFor(textEditor);
 			ITextReplacer textReplacer = null;
 			try {
@@ -45,7 +44,7 @@
 				e.printStackTrace();
 			}
 
-			textReplacer.replaceText(context.getFactory().makeList(context.getFactory().makeTuple(currentTerm, newTerm)));			
+			textReplacer.replaceText(context.getFactory().makeList(context.getFactory().makeTuple(currentTerm, newTerm)));
 		}
 	}
 }
\ No newline at end of file

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/Model2Term.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/Model2Term.java	Mon Jul 16 03:48:39 2012	(r25209)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/Model2Term.java	Mon Jul 16 09:09:16 2012	(r25210)
@@ -33,7 +33,7 @@
 			EStructuralFeature eSructuralFeature = c.getEStructuralFeature(index2name.get(Integer.toString(i)));
 			kids.add(eStructuralFeature2Term(eObject, eSructuralFeature));
 		}
-			
+
 		return factory.makeAppl(constructor, (IStrategoTerm[]) kids.toArray(new IStrategoTerm[kids.size()]), factory.makeList());
 	}
 
@@ -56,12 +56,11 @@
 
 		if (result == null) {
 			return eStructuralFeature2DefaultTerm(eStructuralFeature);
-		}
-		else {
+		} else {
 			return result;
 		}
 	}
-	
+
 	private IStrategoTerm eAttribute2Term(EObject eObject, EAttribute eAttribute) {
 		Object value = eObject.eGet(eAttribute);
 
@@ -100,23 +99,23 @@
 
 		return null;
 	}
-	
+
 	private IStrategoTerm eStructuralFeature2DefaultTerm(EStructuralFeature eStructuralFeature) {
 		if (eStructuralFeature instanceof EAttribute) {
 			return eAttribute2DefaultTerm((EAttribute) eStructuralFeature);
 		} else if (eStructuralFeature instanceof EReference) {
 			return eReference2DefaultTerm((EReference) eStructuralFeature);
 		}
-		
+
 		return null;
 	}
-	
+
 	// TODO: check if this works for EEnums
 	private IStrategoTerm eAttribute2DefaultTerm(EAttribute eAttribute) {
 		return factory.makeString(eAttribute.getDefaultValueLiteral());
 	}
 
-	private IStrategoTerm eReference2DefaultTerm(EReference eReference) {                                                              
+	private IStrategoTerm eReference2DefaultTerm(EReference eReference) {
 		Object defaultValue = eReference.getEReferenceType().getEIDAttribute().getEAttributeType().getDefaultValue();
 		if (defaultValue == null) {
 			return factory.makeString("x");

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/StrategoTermPathAdapter.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/StrategoTermPathAdapter.java	Mon Jul 16 03:48:39 2012	(r25209)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/StrategoTermPathAdapter.java	Mon Jul 16 09:09:16 2012	(r25210)
@@ -48,11 +48,11 @@
 		}
 		return null;
 	}
-	
+
 	public static EObject strategoTermPathToEObject(List<Integer> path, EObject root) {
 		EObject current = root;
-		
-		for (int i=0; i<path.size(); i++) {
+
+		for (int i = 0; i < path.size(); i++) {
 			EClass eClass = current.eClass();
 			EMap<String, String> index2name = eClass.getEAnnotation("StrategoTerm.index").getDetails();
 			EStructuralFeature feature = eClass.getEStructuralFeature(index2name.get(path.get(i).toString()));
@@ -60,16 +60,15 @@
 				i++;
 			}
 			if (feature.getUpperBound() == -1) { // list
-				if (i+1 < path.size()) {
-					current = (EObject) ((EList<?>) current.eGet(feature)).get(path.get(i+1));
+				if (i + 1 < path.size()) {
+					current = (EObject) ((EList<?>) current.eGet(feature)).get(path.get(i + 1));
 					i++;
 				}
-			}
-			else {
+			} else {
 				current = (EObject) current.eGet(feature);
 			}
 		}
-		
+
 		return current;
 	}
 }

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/Term2Model.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/Term2Model.java	Mon Jul 16 03:48:39 2012	(r25209)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/Term2Model.java	Mon Jul 16 09:09:16 2012	(r25210)
@@ -82,14 +82,14 @@
 
 	private Object convert(IStrategoAppl term, EStructuralFeature feature) {
 		String constructor = term.getConstructor().getName();
-		
+
 		if (constructor.equals("Some")) {
 			return convert(term.getSubterm(0), feature);
 		}
 		if (constructor.equals("None")) {
 			return null;
 		}
-		
+
 		EClass c = (EClass) MM.getEClassifier(constructor);
 		EMap<String, String> index2name = c.getEAnnotation("StrategoTerm.index").getDetails();
 
@@ -181,11 +181,10 @@
 	private void findDefs(EObject eObject, IStrategoString childID, ListIterator<EObject> it) {
 		for (EObject child : eObject.eContents()) {
 			String eChildID = EcoreUtil.getID(child);
-			
+
 			if (eChildID == null) {
 				findDefs(child, childID, it);
-			}
-			else if (eChildID.equals(childID.stringValue())) {
+			} else if (eChildID.equals(childID.stringValue())) {
 				it.add(child);
 			}
 		}

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/compare/SpoofaxEMFCompare.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/compare/SpoofaxEMFCompare.java	Mon Jul 16 03:48:39 2012	(r25209)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/compare/SpoofaxEMFCompare.java	Mon Jul 16 09:09:16 2012	(r25210)
@@ -14,7 +14,7 @@
 import org.eclipse.emf.ecore.EObject;
 
 public class SpoofaxEMFCompare {
-	
+
 	/**
 	 * Compare EObjects a and b and return a list of differences. 
 	 * Merging these differences means that b will change.

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/compare/SpoofaxMatchEngine.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/compare/SpoofaxMatchEngine.java	Mon Jul 16 03:48:39 2012	(r25209)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/emf/compare/SpoofaxMatchEngine.java	Mon Jul 16 09:09:16 2012	(r25210)
@@ -22,8 +22,7 @@
 	protected boolean isSimilar(EObject a, EObject b) throws FactoryException {
 		if (a == rootA && b == rootB) {
 			return true;
-		}
-		else {
+		} else {
 			return super.isSimilar(a, b);
 		}
 	}

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/SpoofaxSelectionChangedListener.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/SpoofaxSelectionChangedListener.java	Mon Jul 16 03:48:39 2012	(r25209)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/SpoofaxSelectionChangedListener.java	Mon Jul 16 09:09:16 2012	(r25210)
@@ -30,16 +30,14 @@
 	}
 
 	@Override
-	public void selectionChanged(SelectionChangedEvent event) {		
+	public void selectionChanged(SelectionChangedEvent event) {
 		if (editorPair.diagramSelection) {
 			editorPair.diagramSelection = false;
 			return;
-		}
-		else {
+		} else {
 			editorPair.textSelection = true;
 		}
 
-		
 		IStrategoTerm selection = EditorState.getActiveEditor().getSelectionAst(true);
 		DiagramEditor diagramEditor = editorPair.getDiagramEditor();
 		if (selection == null) {
@@ -53,49 +51,47 @@
 		List<EObject> eObjectsToSelect = strategoApplToEObject(selectedIStrategoAppls, root);
 		eObjectsToSelect = addAllContents(eObjectsToSelect);
 		List<EditPart> editPartsToSelect = eObjectsToEditPart(eObjectsToSelect, diagramEditor.getDiagramEditPart());
-		
+
 		diagramEditor.getSite().getSelectionProvider().setSelection(new StructuredSelection(editPartsToSelect));
 	}
 
 	private List<EObject> addAllContents(List<EObject> eObjectsToSelect) {
 		List<EObject> result = new LinkedList<EObject>();
 		TreeIterator<Object> it = EcoreUtil.getAllContents(eObjectsToSelect);
-		
+
 		while (it.hasNext()) {
 			Object object = it.next();
 			if (object instanceof EObject) {
 				result.add((EObject) object);
 			}
 		}
-		
+
 		return result;
 	}
 
 	private List<EditPart> eObjectsToEditPart(List<EObject> eObjects, DiagramEditPart diagramEditPart) {
 		List<EditPart> result = new LinkedList<EditPart>();
-		
+
 		for (EObject eObject : eObjects) {
 			EditPart editPart = diagramEditPart.findEditPart(diagramEditPart, eObject);
 			if (editPart != null) {
 				result.add(editPart);
 			}
 		}
-		
+
 		return result;
 	}
 
 	private List<EObject> strategoApplToEObject(List<IStrategoAppl> appls, EObject root) {
 		List<EObject> result = new LinkedList<EObject>();
-		
-		for (int i=0; i<appls.size(); i++) {
+
+		for (int i = 0; i < appls.size(); i++) {
 			List<Integer> path = StrategoTermPath.createPathList(appls.get(i));
 			result.add(StrategoTermPathAdapter.strategoTermPathToEObject(path, root));
 		}
-		
+
 		return result;
 	}
-	
-
 
 	private List<IStrategoAppl> filterIStrategoAppls(IStrategoTerm selection) {
 		List<IStrategoAppl> result = new LinkedList<IStrategoAppl>();
@@ -107,14 +103,13 @@
 				if (appl.getSubterm(0).getTermType() == IStrategoTerm.APPL) {
 					result.add((IStrategoAppl) appl.getSubterm(0));
 				}
-			}
-			else {
+			} else {
 				result.add((IStrategoAppl) selection);
 			}
 			break;
 		case IStrategoTerm.LIST:
 			IStrategoList list = (IStrategoList) selection;
-			for (int i=0; i<((IStrategoList) selection).size(); i++) {
+			for (int i = 0; i < ((IStrategoList) selection).size(); i++) {
 				if (list.head().getTermType() == IStrategoTerm.APPL) {
 					result.add((IStrategoAppl) list.head());
 				}

From oskarvanrest at gmail.com  Mon Jul 16 11:35:40 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 16 Jul 2012 09:35:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25211 - in
	experimental/graphical-editor/entitylang: .
	org.spoofax.graphical.entitylang.graphical
Message-ID: <20120716093540.B3A4F7F8007@mx1.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 16 09:35:39 2012
New Revision: 25211
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25211&sc=1

Log:
Initial import.

Added:
   experimental/graphical-editor/entitylang/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/

From oskarvanrest at gmail.com  Mon Jul 16 11:36:54 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 16 Jul 2012 09:36:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25212 - in
	experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical:
	. META-INF model src
Message-ID: <20120716093654.C82D37F8007@mx1.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 16 09:36:54 2012
New Revision: 25212
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25212&sc=1

Log:
Graphical editor for the EntityLang (generate from EntityLang.ecore with EuGENia)

Added:
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/.classpath
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/.project
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/META-INF/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/META-INF/MANIFEST.MF
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/src/

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/.classpath
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/.classpath	Mon Jul 16 09:36:54 2012	(r25212)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/.project
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/.project	Mon Jul 16 09:36:54 2012	(r25212)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>org.spoofax.graphical.entitylang.graphical</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.pde.PluginNature</nature>
+	</natures>
+</projectDescription>

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/META-INF/MANIFEST.MF
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/META-INF/MANIFEST.MF	Mon Jul 16 09:36:54 2012	(r25212)
@@ -0,0 +1,6 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: org.spoofax.graphical.entitylang.graphical
+Bundle-SymbolicName: org.spoofax.graphical.entitylang.graphical
+Bundle-Version: 0.1.0
+Require-Bundle: org.eclipse.emf.ecore

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore	Mon Jul 16 09:36:54 2012	(r25212)
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<ecore:EPackage xmi:version="2.0"
+    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="EntityLang"
+    nsURI="EntityLang" nsPrefix="EntityLang">
+  <eClassifiers xsi:type="ecore:EClass" name="Module">
+    <eAnnotations source="StrategoTerm.index">
+      <details key="0" value="id"/>
+      <details key="1" value="types"/>
+    </eAnnotations>
+    <eAnnotations source="gmf.diagram"/>
+    <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
+        iD="true"/>
+    <eStructuralFeatures xsi:type="ecore:EReference" name="types" upperBound="-1"
+        eType="#//Type" containment="true"/>
+  </eClassifiers>
+  <eClassifiers xsi:type="ecore:EClass" name="Property">
+    <eAnnotations source="StrategoTerm.index">
+      <details key="0" value="id"/>
+      <details key="1" value="type"/>
+    </eAnnotations>
+    <eAnnotations source="gmf.link">
+      <details key="label" value="id"/>
+      <details key="target" value="type"/>
+    </eAnnotations>
+    <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
+        iD="true"/>
+    <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" eType="#//Type"/>
+  </eClassifiers>
+  <eClassifiers xsi:type="ecore:EClass" name="Type" abstract="true">
+    <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
+        iD="true"/>
+  </eClassifiers>
+  <eClassifiers xsi:type="ecore:EClass" name="Entity" eSuperTypes="#//Type">
+    <eAnnotations source="StrategoTerm.index">
+      <details key="0" value="id"/>
+      <details key="1" value="properties"/>
+    </eAnnotations>
+    <eAnnotations source="gmf.node">
+      <details key="label" value="id"/>
+    </eAnnotations>
+    <eStructuralFeatures xsi:type="ecore:EReference" name="properties" upperBound="-1"
+        eType="#//Property" containment="true"/>
+  </eClassifiers>
+  <eClassifiers xsi:type="ecore:EClass" name="Primitive" eSuperTypes="#//Type">
+    <eAnnotations source="StrategoTerm.index">
+      <details key="0" value="id"/>
+    </eAnnotations>
+  </eClassifiers>
+</ecore:EPackage>

From oskarvanrest at gmail.com  Mon Jul 16 11:37:11 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 16 Jul 2012 09:37:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25213 -
	experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual
Message-ID: <20120716093711.170237F8007@mx1.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 16 09:37:10 2012
New Revision: 25213
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25213&sc=1

Log:
Initial import.

Added:
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/

From oskarvanrest at gmail.com  Mon Jul 16 12:00:25 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 16 Jul 2012 10:00:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25214 -
	experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model
Message-ID: <20120716100025.1C3FA2B8005@mx2.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 16 10:00:24 2012
New Revision: 25214
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25214&sc=1

Log:
target.decoration = arrow

Modified:
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore

Modified: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore
==============================================================================
--- experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore	Mon Jul 16 09:37:10 2012	(r25213)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore	Mon Jul 16 10:00:24 2012	(r25214)
@@ -22,6 +22,7 @@
     <eAnnotations source="gmf.link">
       <details key="label" value="id"/>
       <details key="target" value="type"/>
+      <details key="target.decoration" value="arrow"/>
     </eAnnotations>
     <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
         iD="true"/>

From oskarvanrest at gmail.com  Mon Jul 16 12:05:14 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 16 Jul 2012 10:05:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25215 - in
	experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual:
	. .externalToolBuilders .settings META-INF editor editor/java
	editor/java/org...
Message-ID: <20120716100514.20E0E108C003@mx3.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 16 10:05:13 2012
New Revision: 25215
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25215&sc=1

Log:
Textual editor for EntityLang. New project with latest Spoofax nightly and GMF bridge.

Added:
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/.classpath
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/.externalToolBuilders/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/.externalToolBuilders/EntityLang build.main.xml.launch
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/.project
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/.settings/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/.settings/org.eclipse.jdt.core.prefs
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/META-INF/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/META-INF/MANIFEST.MF
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/build.generated.xml
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/build.main.xml
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/build.properties
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Builders.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Colorer.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Completions.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Folding.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Outliner.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-References.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Syntax.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang.main.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/Activator.java
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/EntityLangParseController.java
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/EntityLangParseControllerGenerated.java
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/EntityLangValidator.java
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/strategies/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/strategies/InteropRegisterer.java
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/strategies/Main.java
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/strategies/gmf_bridge_0_3.java
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/strategies/java_strategy_0_0.java
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-auto.generated.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-library-internal.generated.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-library.generated.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/compilation-library.generated.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/editor-common.generated.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/index-library.generated.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/refactor-common.generated.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/plugin.xml
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/syntax/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/syntax/Common.sdf
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/syntax/EntityLang.generated.pp
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/syntax/EntityLang.pp
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/syntax/EntityLang.sdf
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/test/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/test/example.ent
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/test/test-example.spt
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/analysis-manual.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/check.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/entitylang.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/generate.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/refactor.str

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/.classpath
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/.classpath	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<classpath>
+	<classpathentry kind="src" excluding="trans/**" path="editor/java"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/4"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/.externalToolBuilders/EntityLang build.main.xml.launch
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/.externalToolBuilders/EntityLang build.main.xml.launch	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
+<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
+<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES"/>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+</listAttribute>
+<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value=""/>
+<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="all,"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${none}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.spoofax.graphical.entitylang.textual/build.main.xml}"/>
+<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.spoofax.graphical.entitylang.textual}"/>
+<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
+</launchConfiguration>

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/.project
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/.project	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<projectDescription>
+      <name>org.spoofax.graphical.entitylang.textual</name>
+      <comment></comment>
+      <buildSpec>
+        <buildCommand>
+          <name>org.eclipse.jdt.core.javabuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+            <name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+            <triggers>full,incremental,</triggers>
+            <arguments>
+                <dictionary>
+                    <key>LaunchConfigHandle</key>
+                    <value>&lt;project&gt;/.externalToolBuilders/EntityLang build.main.xml.launch</value>
+                </dictionary>
+            </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.ManifestBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.SchemaBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+      </buildSpec>
+      <natures>
+        <nature>org.eclipse.pde.PluginNature</nature>
+        <nature>org.eclipse.jdt.core.javanature</nature>
+      </natures>
+    </projectDescription>
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/.settings/org.eclipse.jdt.core.prefs
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/.settings/org.eclipse.jdt.core.prefs	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,11 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.5
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.5
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.5

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/META-INF/MANIFEST.MF
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/META-INF/MANIFEST.MF	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,23 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: EntityLang Plug-in
+Bundle-SymbolicName: org.spoofax.graphical.entitylang.textual; singleton:=true
+Bundle-Version: 1.0.0
+Bundle-Activator: org.spoofax.graphical.entitylang.textual.Activator
+Import-Package: org.osgi.framework;version="1.3.0"
+Require-Bundle: org.eclipse.core.runtime,
+ org.eclipse.core.resources,
+ org.eclipse.imp.runtime,
+ org.eclipse.ui,
+ lpg.runtime,
+ org.eclipse.jface.text,
+ org.eclipse.ui.editors,
+ org.eclipse.ui.workbench.texteditor,
+ org.strategoxt.imp.runtime,
+ org.spoofax.jsglr,
+ org.strategoxt.strj,
+ org.spoofax.graphical;bundle-version="1.0.0"
+Bundle-RequiredExecutionEnvironment: J2SE-1.5
+Bundle-ActivationPolicy: lazy
+Export-Package: org.spoofax.graphical.entitylang.textual
+Eclipse-RegisterBuddy: org.strategoxt.imp.runtime

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/build.generated.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/build.generated.xml	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,640 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="build.generated">
+
+        <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
+    
+        <!-- Initialization -->
+        <available file="${src-gen}/org/spoofax/graphical/entitylang/textual/strategies/Main.java" property="java.jar.enabled"/>
+        <condition property="java.jar.import" value="-la org.spoofax.graphical.entitylang.textual.strategies" else="">
+            <isset property="java.jar.enabled"/>
+        </condition>
+        <condition property="java.jar.classpath" value=":${include}/${strmodule}-java.jar" else="">
+            <isset property="java.jar.enabled"/>
+        </condition>
+        <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
+        <dirname property="externaldefdir" file="${externaldef}"/>
+        <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
+            <isset property="externaldef"/>
+        </condition>
+        <condition property="externaljarimport1" value=":${externaljar}" else="">
+            <isset property="externaljar"/>
+        </condition>
+        <condition property="externaljarimport2" value=":${externaljarx}" else="">
+            <isset property="externaljarx"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <isset property="eclipse.running"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <available classname="org.eclipse.jdt.core.JDTCompilerAdapter"/>
+        </condition>
+        <condition property="externaljarflags" value="${externaljarflags}" else="">
+            <isset property="externaljarflags"/>
+        </condition>
+        <condition property="metasdfmodule.available" value="1">
+            <available file="${syntax}/${metasdfmodule}.sdf"/>
+        </condition>
+        
+        <fail unless="build" message="Please use build.main.xml to build this project or configure the required properties manually"/>
+        <mkdir dir="${build}"/>
+        <mkdir dir="${src-gen}"/>
+        <mkdir dir="${dist}"/>
+        <mkdir dir="${include}"/>
+        <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
+
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone,sdf2parenthesize"/>
+        
+        <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
+                <arg value="${include}/${esvmodule}.packed.esv"/>
+            </java>
+        </target>
+        
+        <target name="refresh" if="eclipse.running">
+            <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+            <eclipse.convertPath fileSystemPath="${syntax}" property="syntaxdir"/>
+            <eclipse.convertPath fileSystemPath="${lib}" property="libdir"/>
+            <eclipse.refreshLocal resource="${libdir}" depth="infinite"/>
+            <eclipse.refreshLocal resource="${syntaxdir}/${sdfmodule}.pp.generated" depth="infinite"/>
+            <eclipse.refreshLocal resource="${libdir}/editor-common.generated.str" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Builders.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Colorer.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Completions.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+            <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
+            <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+            <!-- Might cause the editor to be reloaded?
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            -->
+        </target>
+        
+        <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
+                <arg value="-p"/>
+                <arg value="${include}/${sdfmodule}.tbl"/>
+            </java>
+        </target>
+        
+        <target name="check-classpath">
+            <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
+            <antcall target="check-classpath.helper"/>  
+        </target>
+        
+        <target name="init" if="eclipse.running">
+            <!-- refresh one file/dir in the project to trigger an Ant rebuild with the next build command -->
+            <java classname="org.strategoxt.imp.metatooling.building.AntForceRefreshScheduler" failonerror="false">
+                <arg value="${include}"/>
+            </java>
+        </target>
+  
+        <target name="check-classpath.helper" unless="check-classpath.available">
+            <echo level="error" message="Could not load the Spoofax plugin loading classes."/>
+            <echo level="error" message="Make sure it is on the class path."/>
+            <echo level="error" message=""/>               
+            <echo level="error" message="In Eclipse, make sure the Ant builder is configured properly:"/>
+            <echo level="error" message="right-click on build.main.xml, go to Run as, Ant build..., JRE tab,"/>
+            <echo level="error" message="and ensure Run in the same JRE as the workspace is selected"/>
+            <echo level="error" message="alternatively, build the project using Build Project in the Project menu"/>
+            <fail/>
+        </target>
+    
+        <target name="sdf2table" depends="make-permissive">
+            <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                
+                <fileset file="${include}/${sdfmodule}-Permissive.def"/>
+                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+            </apply>
+        </target>
+        
+        <target name="meta-sdf2table" if="metasdfmodule.available">
+            <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+            <antcall target="sdf2table">
+                <param name="sdfmodule" value="${metasdfmodule}"/>
+                <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+            </antcall>
+            <antcall target="meta-sdf2table.helper"/>
+        </target>
+        
+        <target name="meta-sdf2table.helper" if="eclipse.running">
+           <eclipse.convertPath fileSystemPath="${include}" property="includeresource"/>
+           <eclipse.refreshLocal resource="${includeresource}/${metasdfmodule}.tbl" depth="infinite"/>
+        </target>
+        
+        <target name="make-permissive" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-Permissive.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <antcall target="make-permissive.helper"/>
+        </target>
+    
+        <target name="make-permissive.helper" unless="permissive-grammar.available">
+            <java classname="org.strategoxt.permissivegrammars.make_permissive" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-Permissive.def"/>
+                <arg line="--optimize on"/>
+            </java>
+        </target>
+
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
+            <mkdir dir="utils"/>
+            <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/aster.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.strategojar}" todir="utils" failonerror="false"/>
+        </target>
+    
+        <target name="pack-sdf" unless="externaldef">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.sdf"/>
+                </srcfileset>
+                <srcfileset dir="${lib}">
+                    <include name="**/*.def"/>
+                </srcfileset>
+                <targetfileset file="${include}/${sdfmodule}.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.def" property="pack-sdf.available"/>
+            <antcall target="pack-sdf.helper"/>
+        </target>
+    
+        <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <condition property="utils-include" value="-I ${utils}" else="">
+                <available file="${utils}"/>
+            </condition>
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-pack-sdf"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.sdf"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-I"/>
+                <arg value="${syntax}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg line="${utils-include}"/>
+                <arg line="${build.sdf.imports}"/>
+            </java>
+        </target>
+    
+        <target name="copy-sdf" if="externaldef">
+            <copy file="${externaldef}" tofile="${include}/${sdfmodule}.def" preservelastmodified="true"/>
+        </target>
+    
+        <target name="copy-jar" if="externaljar">
+            <copy file="${externaljar}" todir="${include}" preservelastmodified="true"/>
+        </target>
+    
+        <target name="rtg2sig" if="build.stratego.enabled" depends="sdf2rtg">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.rtg"/>
+                <targetfileset file="${include}/${sdfmodule}.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.str" property="rtg2sig.available"/>
+            <antcall target="rtg2sig.helper"/>
+        </target>
+    
+        <target name="rtg2sig.helper" unless="rtg2sig.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-rtg2sig"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.str"/>
+                <arg value="--module"/>
+                <arg value="${sdfmodule}"/>
+            </java>
+        </target>
+        
+        <target name="sdf2rtg" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}.rtg"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.rtg" property="sdf2rtg.available"/>
+            <antcall target="sdf2rtg.helper"/>
+        </target>
+    
+        <target name="sdf2rtg.helper" unless="sdf2rtg.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-sdf2rtg"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="--ignore-missing-cons"/>
+                <arg value="-Xnativepath"/>
+                <arg value="${build.strategoxt.sdf}"/>
+            </java>
+        </target>
+        
+        <target name="sdf2parenthesize" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-parenthesize.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper"/>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper.fallback"/>
+        </target>
+
+        <target name="sdf2parenthesize.helper" unless="sdf2parenthesize.available">
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-sdf2parenthesize"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-parenthesize.str"/>
+                <arg value="--omod"/>
+                <arg value="include/${sdfmodule}-parenthesize"/>
+                <arg value="--main-strategy"/>
+                <arg value="io-${sdfmodule}-parenthesize"/>
+                <arg value="--lang"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--rule-prefix"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--sig-module"/>
+                <arg value="include/${sdfmodule}"/>
+            </java>
+        </target>
+
+    	<target name="sdf2parenthesize.helper.fallback" unless="sdf2parenthesize.available">
+        	<echo file="${include}/${sdfmodule}-parenthesize.str" message="module include/${sdfmodule}-parenthesize rules parenthesize-${sdfmodule} = id"/>
+    	</target>
+        
+        <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${syntax}/${sdfmodule}.generated.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.generated.pp.af"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
+        </target>
+    
+        <target name="ppgen.helper" unless="ppgen.available">
+            <!-- Any failures here are ignored; they are only a problem when imported from Stratego -->
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-ppgen"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-t"/>
+                <arg value="-b"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+            </java>
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-pp-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+                <arg value="-o"/>
+                <arg value="${syntax}/${sdfmodule}.generated.pp"/>
+            </java>
+        </target>
+    
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
+        
+        <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${syntax}/${sdfmodule}.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+            </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
+        </target>
+    
+        <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-parse-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.pp"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.pp.af"/>
+            </java>
+        </target>
+    
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+    
+        <!-- Aster to Stratego -->
+        <target name="stratego.aster">
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <fileset dir="${basedir}" id="aster-input-set">
+              <include name="**/*.astr"/>
+            </fileset>
+            <pathconvert pathsep=" " setonempty="false" property="aster-input" refid="aster-input-set"/>
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.astr"/>
+                </srcfileset>
+                <targetfileset file="${trans}/${strmodule}.rtree"/>
+            </dependset>
+            <condition property="aster-output.uptodate">
+                <and>
+                    <isset property="aster-output.available"/>
+                    <available file="${trans}/${strmodule}.rtree"/>
+                </and>
+            </condition>
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.uptodate"/>
+            <antcall target="stratego.aster.helper"/>
+        </target>
+    
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg line="${aster-input}"/>
+            </java>
+        </target>
+        
+        <target name="java.jar" if="java.jar.enabled">
+            <jar basedir="${build}" excludes="trans/**" update="true" destfile="${include}/${strmodule}-java.jar"/>
+        </target>
+    
+        <!-- Stratego to Java interpreter -->
+        <target name="stratego.ctree" depends="rtg2sig">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/*.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${include}/${strmodule}.ctree"/>
+            </dependset>
+            <available file="${include}/${strmodule}.ctree" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputfile" value="${include}/${strmodule}.ctree"/>
+                <param name="build.stratego.extraargs" value="-F"/>
+            </antcall>
+        </target>
+    
+        <!-- Stratego to Java compiler -->
+        <target name="stratego.jar" depends="rtg2sig,utils-files">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/*.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="trans/**"/>
+                <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+        </target>
+            
+        <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans}/${strmodule}.str"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
+                
+        <!-- begin: targets used for adding debugging instrumentation to stratego -->
+        
+        <!-- 
+            if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
+            Only used by stratego.jvm.helper.debug 
+        -->
+        <condition property="transformer-output" value="" else="--output-rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
+        
+        <!-- 
+            if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
+            if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
+            Only used by stratego.jvm.helper.debug
+        -->
+        <condition property="strj.input.file.type" value="str" else="rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
+        
+        <!-- value determines which target will be executed.
+            If the file ".debugmode" can be found in the project root call stratego.jar.debug
+            else call stratego.jar
+        -->
+        <condition property="stratego.jar.target" value="call.stratego.jar.debug" else="call.stratego.jar">
+            <available file=".debugmode"/>
+        </condition>
+        
+        <!-- will save the stratego files with debug info in this folder -->
+        <property name="trans-debug" location="trans-debug"/>
+        
+        <!-- this helper target determines what target to call, based on debug.build.enabled -->
+        <target name="stratego.jar.helper">
+            <antcall target="${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar unless debug.build.enabled property is set --> 
+        <target name="call.stratego.jar" depends="stratego.jar">
+            <echo message="call.stratego.jar - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar.debug when debug.build.enabled property is set -->
+        <target name="call.stratego.jar.debug" depends="stratego.jar.debug">
+            <echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- copy stratego runtime jars to utils folder -->
+        <target name="utils-files-debug" depends="utils-files">
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
+        </target>
+        
+        <!-- Stratego to Java compiler with debugging capabilities -->
+        <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <!-- compile stratego to java -->
+            <antcall target="stratego.jvm.helper.debug">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <!-- compile java to class -->
+            <javac destdir="${build}" source="1.5" target="1.5" debug="on">
+                <!-- attribute in javac: srcdir="${src-gen}" -->
+                <src path="${src-gen}"/>
+                <!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"  -->
+                <classpath>
+                    <pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+                    <pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
+                    <pathelement location="utils/stratego-debug-runtime-java.jar"/>
+                </classpath>
+                <!-- attribute in javac: includes="trans/**"  -->
+                <include name="trans/**"/>
+            </javac>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <!-- create a jar from the class files -->
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <!-- instrument the stratego program and compile it to java -->
+        <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
+            <echo message="generate stratego with debug information"/>
+            <echo message="${basedir}"/>
+            <available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
+            <!-- add debug information -->
+              <java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
+                   <classpath>
+                    <pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.strategojar}"/>
+                   </classpath>
+                  <arg value="-i"/>
+                  <arg value="${trans}/${strmodule}.str"/>
+                  <arg value="--gen-dir"/>
+                  <arg value="${trans-debug}"/>
+                  <arg value="--base-dir"/> <!-- set the basedir to the project dir -->
+                  <arg value="${basedir}"/>
+                  <!-- "arg line='val'" val should contain space-separated arguments --> 
+                  <arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
+                  
+                  <!-- arguments should start with two '-'-characters -->
+                  <!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
+                  <!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
+                  <!-- <arg value="-output-rtree"/> --> 
+            </java>
+            <!-- now compile instrumented stratego to java -->
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <!-- put strategodebuglib.rtree on the include path -->
+                <arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
+                <arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
+        
+        
+        <!-- end: targets used for adding debugging instrumentation to stratego -->
+
+
+        <!-- Stratego to C-based native executable -->
+        <target name="stratego.c">
+            <antcall target="stratego.c.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/include"/>
+                <param name="build.stratego.extraargs" value=""/>
+                <param name="build.stratego.extension" value=""/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+        
+        <!-- Helper target for calling the stratego compiler -->
+        <target name="stratego.c.helper" depends="rtg2sig" if="build.stratego.enabled">
+            <apply executable="${build.strategoxt.stratego}/${build.stratego.compiler}" dest="${build.stratego.outputpath}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                
+                <fileset file="${trans}/${strmodule}.str"/>
+                <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>
+            </apply>
+        </target>
+        
+        <target name="clean" description="Selective clean up">
+            <delete dir="${build}"/>
+            <delete file="${include}/${sdfmodule}.def"/>
+            <delete file="${include}/${strmodule}.rtree"/>
+            <delete file="${include}/${strmodule}.ctree"/>
+            <delete file="${include}/${strmodule}.jar"/>
+            <delete dir="${src-gen}/trans"/>
+        </target>
+    </project>
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/build.main.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/build.main.xml	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="EntityLang" default="all">
+        
+        <!-- Key input modules -->
+        <property name="sdfmodule" value="EntityLang"/>
+        <property name="metasdfmodule" value="Stratego-EntityLang"/>
+        <property name="esvmodule" value="EntityLang"/>
+        <property name="strmodule" value="entitylang"/>
+    
+        <!-- Project directories -->
+        <property name="trans" location="trans"/>
+        <property name="src-gen" location="editor/java"/>
+        <property name="syntax" location="syntax"/>
+        <property name="include" location="include"/>
+        <property name="lib" location="lib"/>
+        <property name="build" location="bin"/>
+        <property name="dist" location="bin/dist"/>
+        
+        <!-- Imports -->
+        <property name="build.sdf.imports" value=""/>
+        <property name="build.stratego.args" value="
+                        --library
+                        -I &quot;${trans}&quot;
+                        -I &quot;${basedir}&quot;
+                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm"/>
+        
+        <!-- Optional: external .def and .jar locations
+        <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+        <property name="externaljar" value="../lib.jar"/>
+        <property name="externaljarflags" value="-la org.lib"/>
+        -->
+    
+        <!-- Environment configuration for command-line builds -->
+        <condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
+            <isset property="eclipse.spoofaximp.nativeprefix"/>
+        </condition>
+        <property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin"/>
+    
+        <import file="build.generated.xml"/>
+    
+        <!-- Main target -->
+        <target name="all" depends="spoofaximp.default.ctree"/>
+    </project>
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/build.properties	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,9 @@
+source.. = editor/java/
+output.. = bin/
+bin.includes = META-INF/,\
+               plugin.xml,\
+               include/,\
+               bin/,\
+               lib/,\
+               .
+bin.excludes = trans/

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Builders.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Builders.esv	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,35 @@
+module EntityLang-Builders
+
+imports EntityLang-Builders.generated
+
+builders
+                                                                                   
+  // This file can be used for custom analysis, builder and refactoring rules.     
+  //                                                                               
+  // See the imported file for a brief introduction and examples.                  
+
+builders
+                                                                                                                          
+  provider : include/entitylang.ctree                                                                                     
+  provider : include/entitylang-java.jar                                                                                  
+                                                                                                                          
+  observer : editor-analyze                                                                                               
+                                                                                                                          
+  builder  : "Generate Java code (for selection)"            = generate-java (openeditor) (realtime)                      
+  builder  : "Show abstract syntax (for selection)"          = generate-aterm (openeditor) (realtime) (source)     
+  builder  : "Show analyzed abstract syntax (for selection)" = generate-analyzed (openeditor) (realtime) (source)  
+  builder  : "Show index entries for current file"           = index-currentfile (openeditor) (realtime) (meta) (source)  
+  builder  : "Show index entries for all files"              = index-allfiles (openeditor) (realtime) (meta) (source)     
+  builder  : "Clear index"                                   = index-cleanall (meta) (source)                             
+                                                                                                                          
+
+refactorings
+
+  pretty-print : pp-entitylang-string
+
+  refactoring ID : "Rename Entity" = rename-entity (source) (cursor)
+    shortcut : "org.eclipse.jdt.ui.edit.text.java.rename.element"
+    input
+      identifier : "new name" = ""
+
+  on save : editor-save
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Colorer.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Colorer.esv	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,9 @@
+module EntityLang-Colorer
+
+imports EntityLang-Colorer.generated
+
+colorer
+                                                                      
+  // This file can be used for custom colorer rules.                  
+  //                                                                  
+  // See the imported file for a brief introduction and examples.     
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Completions.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Completions.esv	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,31 @@
+module EntityLang-Completions
+
+imports EntityLang-Completions.generated
+
+completions
+                                                                   
+  // This file is used to define content completion.               
+  //                                                               
+  // See the imported file for a brief introduction and examples.  
+                                                                   
+
+completions
+                                             
+  // Syntax completion:                      
+                                             
+  completion template Start :
+    "module " <m> (blank)  
+                                             
+  completion template Definition :
+    "entity " <e> " {" (cursor) "}" (blank)  
+                                             
+  completion template Property : "property : Type" =
+    <x> " : " <T> (blank)  
+                                             
+
+completions
+  // Semantic (identifier) completion:   
+                                         
+  completion proposer                  : editor-complete
+                                         
+  completion trigger                   : ":"
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Folding.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Folding.esv	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,9 @@
+module EntityLang-Folding
+
+imports EntityLang-Folding.generated
+
+folding
+  
+  // This file can be used for custom folding rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Outliner.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Outliner.esv	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,9 @@
+module EntityLang-Outliner
+
+imports EntityLang-Outliner.generated
+
+outliner
+  
+  // This file can be used for custom outliner rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-References.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-References.esv	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,15 @@
+module EntityLang-References
+
+imports EntityLang-References.generated
+
+references
+                                                                                                   
+  // This file can be used to specify reference resolving and hover help, and content completion.  
+  //                                                                                               
+  // See the imported file for a brief introduction and examples.                                  
+                                                                                                   
+
+references
+                
+  reference _ : editor-resolve
+  hover _     : editor-hover
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Syntax.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Syntax.esv	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,9 @@
+module EntityLang-Syntax
+
+imports EntityLang-Syntax.generated
+
+language
+                                                                   
+  // This file can be used for custom syntax rules.                
+  //                                                               
+  // See the imported file for a brief introduction and examples.  
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang.main.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang.main.esv	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,16 @@
+module EntityLang.main
+
+imports EntityLang-Builders EntityLang-Colorer EntityLang-Completions EntityLang-Folding EntityLang-Outliner EntityLang-References EntityLang-Syntax
+
+language General properties
+                  
+  name          : EntityLang
+  id            : org.spoofax.graphical.entitylang.textual
+  extends       : Root
+                  
+  description   : "Spoofax/IMP-generated editor for the EntityLang language"
+  url           : http://strategoxt.org
+                  
+  extensions    : ent
+  table         : include/EntityLang.tbl
+  start symbols : Start
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/Activator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/Activator.java	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,44 @@
+package org.spoofax.graphical.entitylang.textual;
+
+import org.eclipse.imp.preferences.PreferencesService;
+import org.eclipse.imp.runtime.PluginBase;
+import org.osgi.framework.BundleContext;
+
+public class Activator extends PluginBase 
+{ 
+  public static final String kPluginID = "EntityLang";
+
+  public static final String kLanguageName = "EntityLang";
+
+  protected static Activator sPlugin;
+
+  public static Activator getInstance()
+  { 
+    if(sPlugin == null)
+      return new Activator();
+    return sPlugin;
+  }
+
+  public Activator () 
+  { 
+    super();
+    sPlugin = this;
+  }
+
+  @Override public void start(BundleContext context) throws Exception
+  { 
+    super.start(context);
+  }
+
+  @Override public String getID()
+  { 
+    return kPluginID;
+  }
+
+  @Override public String getLanguageID()
+  { 
+    return kLanguageName;
+  }
+
+  protected static PreferencesService preferencesService = null;
+}
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/EntityLangParseController.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/EntityLangParseController.java	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,4 @@
+package org.spoofax.graphical.entitylang.textual;
+
+public class EntityLangParseController extends EntityLangParseControllerGenerated 
+{ }
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/EntityLangParseControllerGenerated.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/EntityLangParseControllerGenerated.java	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,108 @@
+package org.spoofax.graphical.entitylang.textual;
+
+import java.io.InputStream;
+import java.io.IOException;
+import java.io.File;
+import java.io.FileInputStream;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class EntityLangParseControllerGenerated extends DynamicParseController 
+{ 
+  public static final String LANGUAGE = new String("EntityLang");
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static volatile Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static synchronized Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  protected static synchronized void setDescriptor(Descriptor descriptor)
+  { 
+    EntityLangParseControllerGenerated.descriptor = descriptor;
+  }
+
+  protected static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = EntityLangParseControllerGenerated.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = EntityLangParseControllerGenerated.class.getResourceAsStream(TABLE);
+      boolean filesystem = false;
+      if(descriptorStream == null && new File("./" + DESCRIPTOR).exists())
+      { 
+        descriptorStream = new FileInputStream("./" + DESCRIPTOR);
+        filesystem = true;
+      }
+      if(table == null && new File("./" + TABLE).exists())
+      { 
+        table = new FileInputStream("./" + TABLE);
+        filesystem = true;
+      }
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
+      descriptor = DescriptorFactory.load(descriptorStream, table, filesystem ? Path.fromPortableString("./") : null);
+      descriptor.setAttachmentProvider(EntityLangParseControllerGenerated.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  private static String getPluginLocation()
+  { 
+    return EntityLangParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(this, getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/EntityLangValidator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/EntityLangValidator.java	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,12 @@
+package org.spoofax.graphical.entitylang.textual;
+
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
+
+public class EntityLangValidator extends MetaFileLanguageValidator 
+{ 
+  @Override public Descriptor getDescriptor()
+  { 
+    return EntityLangParseController.getDescriptor();
+  }
+}
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/strategies/InteropRegisterer.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/strategies/InteropRegisterer.java	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,14 @@
+package org.spoofax.graphical.entitylang.textual.strategies;
+
+import org.strategoxt.lang.JavaInteropRegisterer;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * Helper class for {@link java_strategy_0_0}.
+ */
+public class InteropRegisterer extends JavaInteropRegisterer {
+
+  public InteropRegisterer() {
+    super(new Strategy[] { java_strategy_0_0.instance, gmf_bridge_0_3.instance });
+  }
+}

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/strategies/Main.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/strategies/Main.java	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,11 @@
+package org.spoofax.graphical.entitylang.textual.strategies;
+
+import org.strategoxt.lang.Context;
+
+public class Main {
+  
+  public static void init(Context context) {
+    // Called when the editor is being initialized
+  }
+
+}

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/strategies/gmf_bridge_0_3.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/strategies/gmf_bridge_0_3.java	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,17 @@
+package org.spoofax.graphical.entitylang.textual.strategies;
+
+import org.spoofax.graphical.GMFBridge;
+import org.spoofax.interpreter.terms.IStrategoString;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
+
+public class gmf_bridge_0_3 extends Strategy {
+
+	public static gmf_bridge_0_3 instance = new gmf_bridge_0_3();
+
+	@Override
+	public IStrategoTerm invoke(Context context, IStrategoTerm analysedAST, IStrategoTerm textFilePath, IStrategoTerm diagramFilePath, IStrategoTerm packageName) {
+		return GMFBridge.getInstance().synchronize(analysedAST, (IStrategoString) textFilePath, context, (IStrategoString) diagramFilePath, (IStrategoString) packageName);
+	}
+}

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/strategies/java_strategy_0_0.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/strategies/java_strategy_0_0.java	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,32 @@
+package org.spoofax.graphical.entitylang.textual.strategies;
+
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * Example Java strategy implementation.
+ *
+ * This strategy can be used by editor services and can be called
+ * in Stratego modules by declaring it as an external strategy
+ * as follows:
+ *
+ * <code>
+ *  external java-strategy(|)
+ * </code>
+ *
+ * @see InteropRegisterer  This class registers java_strategy_0_0 for use.
+ */
+public class java_strategy_0_0 extends Strategy {
+  
+  public static java_strategy_0_0 instance = new java_strategy_0_0();
+
+  @Override
+  public IStrategoTerm invoke(Context context, IStrategoTerm current) {
+    context.getIOAgent().printError("Input for java-strategy: " + current);
+    ITermFactory factory = context.getFactory();
+    return factory.makeString("Regards from java-strategy");
+  }
+
+}

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-auto.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-auto.generated.str	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,126 @@
+module lib/analysis-auto.generated
+
+signature
+  constructors
+    Module   : Namespace
+    Property : Namespace
+    Type     : Namespace
+    Module   : Namespace
+    Property : Namespace
+    Type     : Namespace
+
+
+imports
+  lib/editor-common.generated
+  include/EntityLang
+
+
+rules
+
+  nam-get-scope-types :
+    Module(_, _) -> [Type()]
+
+  nam-get-scope-types :
+    Entity(_, _) -> [Property()]
+
+  nam-get-definition-key :
+    Module(x, _) -> x
+
+  nam-get-definition :
+    Module(x, _) -> <nam-get-def(|Module())> x
+
+  nam-get-definition-key :
+    Entity(x, _) -> x
+
+  nam-get-definition :
+    Entity(x, _) -> <nam-get-def(|Type())> x
+
+  nam-get-definition-key :
+    Primitive(x) -> x
+
+  nam-get-definition :
+    Primitive(x) -> <nam-get-def(|Type())> x
+
+  nam-get-definition-key :
+    Property(x, _) -> x
+
+  nam-get-definition :
+    Property(x, _) -> <nam-get-def(|Property())> x
+
+  nam-annotate-names(|def-path):
+    Module(b_35385, c_35385) -> Module(b_35385{def-path}, c_35385)
+
+  nam-annotate-names(|def-path):
+    Entity(z_35384, a_35385) -> Entity(z_35384{def-path}, a_35385)
+
+  nam-annotate-names(|def-path):
+    Primitive(y_35384) -> Primitive(y_35384{def-path})
+
+  nam-annotate-names(|def-path):
+    Property(w_35384, x_35384) -> Property(
+                                    w_35384{def-path}
+                                  , <nam-annotate-use(|Type())> x_35384
+                                  )
+
+  nam-get-scope-types :
+    Module(_, _) -> [Type()]
+
+  nam-get-scope-types :
+    Entity(_, _) -> [Property()]
+
+  nam-get-scope-types :
+    Module(_, _) -> [Type()]
+
+  nam-get-scope-types :
+    Entity(_, _) -> [Property()]
+
+  nam-get-definition-key :
+    Module(x, _) -> x
+
+  nam-get-definition :
+    Module(x, _) -> <nam-get-def(|Module())> x
+
+  nam-get-definition-key :
+    Entity(x, _) -> x
+
+  nam-get-definition :
+    Entity(x, _) -> <nam-get-def(|Type())> x
+
+  nam-get-definition-key :
+    Primitive(x) -> x
+
+  nam-get-definition :
+    Primitive(x) -> <nam-get-def(|Type())> x
+
+  nam-get-definition-key :
+    Property(x, _) -> x
+
+  nam-get-definition :
+    Property(x, _) -> <nam-get-def(|Property())> x
+
+  nam-annotate-names(|def-path):
+    Module(i_27827, j_27827) -> Module(i_27827{def-path}, j_27827)
+
+  nam-annotate-names(|def-path):
+    Entity(g_27827, h_27827) -> Entity(g_27827{def-path}, h_27827)
+
+  nam-annotate-names(|def-path):
+    Primitive(f_27827) -> Primitive(f_27827{def-path})
+
+  nam-annotate-names(|def-path):
+    Property(d_27827, e_27827) -> Property(
+                                    d_27827{def-path}
+                                  , <nam-annotate-use(|Type())> e_27827
+                                  )
+
+  nam-get-scope-types :
+    Module(_, _) -> [Type()]
+
+  nam-get-scope-types :
+    Entity(_, _) -> [Property()]
+
+  nam-get-def(|n) =
+    fail
+
+  nam-annotate-use(|n) =
+    fail
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-library-internal.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-library-internal.generated.str	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,731 @@
+module lib/analysis-library-internal.generated
+ 
+imports
+  libstratego-lib
+  libstratego-parallel
+  lib/editor-common.generated
+  lib/analysis-library.generated
+  lib/index-library.generated
+  
+signature constructors
+  
+  // Analysis
+  Results         : AST * List(Def) * List(Use) * List(DefData) * List(Def) * List(Def) * List(File) -> Results
+  ParallelResults : AST * AST * List(Error) * List(Warning) * List(Note) * List(File) -> ParallelResults
+  
+  // Namespaces
+  Diff            : Namespace
+  ASTDiff         : Namespace
+  
+rules // Analysis traversals
+  
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   *
+   * @internal
+   * @type List((ast, (file, subfile))) -> Results(List(ast), List(def), List(use), List(data), List(addedElem), 
+   *                                       List(removedElem), List(fileToAnalyze@(file, subfile))))
+   */
+  analyze-top-internal(|phase, language, project-path, full-path):
+    astFilePairs -> Results(asts, defs, uses, data, added, removed, filesToAnalyze)
+    with
+      // Init
+      index-setup(|language, [project-path], full-path);
+      revision := <index-start-transaction>
+    with
+      // Store old elements
+      oldElems := <filter(index-diff-constructors)> <index-get-all-in-file> full-path;
+      <index-clear-file> full-path
+    with
+      {| Index-UnresolvedSet:
+        unresolvedSet := <new-iset>;
+        rules(Index-UnresolvedSet: _ -> unresolvedSet);
+        
+        (astFilePairs2, defsList) := <unzip> <map(analyze-top-defs)> astFilePairs;
+        defs := <concat> defsList;
+        (astFilePairs3, dataList) := <unzip> <map(analyze-top-data(|language, full-path))> astFilePairs2;
+        data := <concat> dataList;
+        (astFilePairs4, usesList) := <unzip> <map(analyze-top-uses(|language, full-path))> astFilePairs3;
+        uses := <concat> usesList;
+        (asts, _) := <unzip> astFilePairs4
+      |}
+    with
+      index-end-transaction
+    with
+      // Schedule re-analysis of dependent files (if current file is not testing language file)
+      // HACK: Depends on file extension, could be other languages with .spt extension?
+      if Editor() := phase; not(<is-test-file> full-path) then
+        newElems := <conc> (defs, <filter(index-diff-constructors)> data);
+        
+        // Find added and removed definitions
+        (added, removed) := <analyze-diff> (oldElems, newElems);
+        changed := <conc> (added, removed);
+        
+        // Store files that have changed in the index
+        index-transaction(
+          filesToAnalyze := <analyze-store-diff(|changed, revision)> astFilePairs4
+        )
+      else
+        (added, removed) := ([], []);
+        filesToAnalyze := []
+      end
+    with
+      <list-loop(analyze-top-store-ast)> astFilePairs4
+      
+  /**
+   * Add URI annotations to each definition and unresolved URI annotations to each use site.
+   *
+   * @internal
+   */
+  analyze-top-defs:
+    (ast, file) -> ((ast2, file), defs)
+    with
+      <index-set-current-file> file;
+      (Some(ast2), defs) := <analyze-defs> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
+      <index-add-all(|file)> defs
+      
+  /**
+   * Gathers all data for each definition.
+   *
+   * @internal
+   */
+  analyze-top-data(|language, full-path):
+    (ast, file) -> ((ast2, file), data2)
+    with
+      <index-set-current-file> file;
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Gather all data for each definition.
+        ast2 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast; // Parent pointers needed.
+        data := <origin-track-forced(analyze-tree-data)> ast2;
+        
+        // Resolve all references in gathered data.
+        (data2, _) := <analyze-uses> data; // Ignoring data uses, have not found a use-case for them yet.
+        <index-add-all(|file)> data2;
+        
+        // Store reads into the index (if not testing language)
+        if not(is-test-input(|language, full-path)) then
+          <index-add-all(|file)> <iset-elements> readSet
+        end
+      |}
+      
+  /**
+   * Resolves all unresolved references for each use site.
+   *
+   * @internal
+   */
+  analyze-top-uses(|language, full-path):
+    (ast, file) -> ((ast3, file), uses)
+    with
+      <index-set-current-file> file;
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Resolve all unresolved references for each use site.
+        (ast2, uses) := <analyze-uses> ast;
+        <index-add-all(|file)> uses;
+        
+        ast3 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast2; // AST changed, reset parent pointers.
+        
+        // Store reads into the index (if not testing language)
+        if not(is-test-input(|language, full-path)) then
+          <index-add-all(|file)> <iset-elements> readSet
+        end
+      |}
+      
+  /**
+   * Stores AST from file to the index.
+   *
+   * @internal
+   */   
+  analyze-top-store-ast:
+    (ast, file) -> <id>
+    with
+      <index-set-global(|<conc> (<index-file-to-uri> file, ["ast"]))> ast
+      
+  /**
+   * Identifies all definitions in the tree and annotates them with their URI.
+   * Also annotates uses with a preliminary "Unresolved(_)" URI.
+   *
+   * @internal
+   */
+  analyze-defs = analyze-defs(|Anon(), Anon())
+  /** @internal */
+  analyze-defs(|head-scope, head-scope-ns):
+    ast -> (ast', defs')
+    with
+      if def := <nam-get-definition> ast then
+        Def(def-path)                     := def;
+        [head-scope-ns', head-scope' | _] := def-path
+      else
+        def-path       := INTERNAL_ERROR();
+        head-scope-ns' := head-scope-ns;
+        head-scope'    := head-scope
+      end;
+      if scope-types := <nam-get-scope-types> ast then
+        {| IndexPath:
+          <list-loop(update-index-path(|head-scope', head-scope-ns', ast))> scope-types;
+          // <balanced-update-path> head-scope';
+          (ast', defs) := <analyze-defs-recurse(|Anon(), Anon(), def-path)> ast
+        |}
+      else
+        (ast', defs) := <analyze-defs-recurse(|head-scope', head-scope-ns', def-path)> ast
+      end;
+      defs' := <![def | defs] <+ !defs>
+      
+  /** @internal */
+  analyze-defs-recurse(|head-scope, head-scope-ns, def-path):
+    ast -> (ast'', defs)
+    where
+      analyzed      := <all(analyze-defs(|head-scope, head-scope-ns))> ast;
+      (ast', defs)  := <unzip-analyzed> analyzed;
+      ast''         := <try(nam-annotate-names(|def-path))> ast'
+ 
+  /** @internal */
+  update-index-path(|head-scope, head-scope-ns, ast):
+    scope-type -> scope-type
+    where
+      if !head-scope-ns => Anon() then
+        path  := <IndexPath <+ ![]> scope-type;
+        path' := <do-adjusted-index-path(|scope-type, path, Anon(<new>))> ast
+      else
+        path  := <IndexPath <+ ![]> head-scope-ns;
+        path' := <do-adjusted-index-path(|scope-type, path, head-scope)> ast
+      end;
+      rules(IndexPath: scope-type -> path')
+ 
+  /* TODO: consider using simple-update-def-path
+   *       which uses "balanced" path scopes
+   *       e.g. when Entity doesn't scope Function
+   *       then it's hard to access properties from a function
+  balanced-update-index-path:
+    head-scope -> head-scope
+    where
+      if !head-scope => Anon() then
+        head-scope' := Anon(<new>)
+      else
+        head-scope' := head-scope
+      end;
+      (something with do-adjust-path)
+      rules(IndexPath := [head-scope' | <IndexPath <+ ![]> ()])
+  */
+ 
+  /**
+   * Analyze all uses, changing their preliminary "Unresolved(_)" URI to a definite URI of their definition.
+   *
+   * @internal
+   */
+  analyze-uses:
+    ast -> (ast'', uses')
+    with
+      analyzed     := <all(analyze-uses)> ast;
+      (ast', uses) := <unzip-analyzed> analyzed;
+      if !ast' => _{unresolved@[Unresolved(namespace), x | path]} then
+        if Def(def-uri) := <index-lookup(id |namespace, path, <strip-annos> ast')> ast' then
+          ast'' := ast{def-uri};
+          uses' := [Use(def-uri) | uses]
+        else
+          ast'' := ast';
+          uses' := [BadUse([namespace, x]) | uses]
+        end
+      else
+        ast'' := ast';
+        uses' := uses
+      end
+ 
+  /**
+   * Collects all index data (e.g. types of definitions).
+   *
+   * @internal
+   */
+  analyze-tree-data:
+    tree -> data
+    where
+      set := <new-iset>;
+      <topdown(analyze-tree-data-part(|set))> tree;
+      data := <iset-elements> set
+      
+  /** @internal */
+  analyze-tree-data-part(|set):
+    tree -> tree
+    where
+      if def-term := <nam-get-definition-key> then
+        _{[namespace | path]} := def-term;
+        if result := <adjust-index-def-data(store-index-data-results(|set) |namespace, path)> tree then
+          <fatal-err(|"Unexpected result from adjust-index-def-data; should call <store-results>")> result
+        end
+      end
+  
+  /** @internal */
+  store-index-data-results(|set):
+    t -> <fail>
+    where
+      if is-list then
+        <iset-addlist(|t)> set
+      else
+        <iset-add(|t)> set
+      end
+      
+rules // Parallel analysis
+  
+  /** @internal */
+  index-parallel-analyze(analyze):
+    files -> allResults
+    with
+      map(index-parse-file); // Parsing cannot be done in parallel.
+      map(\(ast, file) -> (ast, file, <project-path>)\);
+      parallel-unordered(all(index-analyze(analyze)));
+      ?results;
+      with(<eq> (<length> results, <length> files) | "Input size not equal to output size");
+      filesToAnalyze := <make-set> <mapconcat(?ParallelResults(_, _, _, _, _, <id>))> results;
+      if not([] := filesToAnalyze) then
+        allResults := <concat> [results, <index-parallel-analyze(analyze)> filesToAnalyze]
+      else
+        allResults := results
+      end
+  
+  /** @internal */   
+  index-parse-file:
+    file -> (ast, file)
+    with
+    if <file-exists> file then
+      ast := <parse-file> file
+    else
+      ast := ()
+    end
+   
+  /** @internal */   
+  index-set-markers:
+    ParallelResults(ast, ast', errors, warnings, notes, diffs) -> <id>
+    with
+      <set-markers(|ast)> (ast', errors, warnings, notes)
+      
+  /** @internal */
+  index-analyze(analyze):
+    (ast, path, project-path) -> ParallelResults(ast, ast', errors, warnings, notes, filesToAnalyze)
+    with
+      (ast', errors, warnings, notes, filesToAnalyze) := <analyze>;
+      if [] := filesToAnalyze then
+        complete-work-unit
+      end
+      
+/** @internal */
+rules // Splitter
+  
+  /** @internal */
+  index-split = fail
+  /** @internal */
+  index-is-toplevel = fail
+  /** @internal */
+  index-is-qualifier = fail
+  /** @internal */
+  index-qualifier-subelements = fail
+  /** @internal */
+  index-create-qualifier(|qualifier) = fail
+  
+  /** @internal */
+  index-toplevel-split:
+    ast -> asts'
+    with
+      (ast', _) := <analyze-defs> ast;
+      asts      := <index-toplevel-split-internal> ast';
+      asts'     := <strip-annos> asts
+      
+  /** @internal */
+  index-toplevel-split-internal:
+    node -> units
+    with
+      switch id
+        case ?():
+          units := [((), [])]
+        case index-is-qualifier:
+          elems := <mapconcat(index-toplevel-split-internal)> <index-qualifier-subelements> node;
+          units := <map(index-transform-qualifier(|node))> elems
+        case index-is-toplevel:
+          units := [(node, <index-uri> <nam-get-definition-key> node)]
+        otherwise:
+          units := [(node, [])]
+      end
+      
+  /** @internal */
+  index-transform-qualifier(|node):
+    (elem, subfileName) -> (qualifier, subfileName)
+    with
+      qualifier := <index-create-qualifier(|node)> elem
+
+/** @internal */
+rules // Diffs
+  
+  /** @internal */
+  analyze-diff:
+    (defs1, defs2) -> (added, removed)
+    with
+      added   := <diff(index-diff-compare)> (defs2, defs1);
+      removed := <diff(index-diff-compare)> (defs1, defs2)
+    
+  /** @internal */
+  analyze-store-diff(|changedEntries, revision): 
+    astFilePairs -> analyzeFiles'
+    with
+      changedFiles    := <mapconcat(index-get-files-of)> changedEntries;
+      dependentFiles  := <index-get-dependent-files> changedEntries;
+      
+      // Files to analyze
+      analyzeFiles := <make-set> <remove-all(fake-file)> dependentFiles;
+      analyzeFiles' := analyzeFiles;
+      // TODO: Is this extra check needed?
+      /*if <getfirst(index-get-file-revision; \r -> (r, revision)\; gt)> analyzeFiles then
+        // Add current file if the current file has read information from another file with a higher revision.
+        // This indicates that potentially outdated information was read.
+        analyzeFiles' := [file|analyzeFiles]
+      else
+        analyzeFiles' := analyzeFiles
+      end;*/
+      
+      // Files to compile
+      changedAstFiles := <filter(analyze-astdiff)> astFilePairs;
+      compileFiles := <make-set> <concat> [analyzeFiles', changedFiles, changedAstFiles];
+      // TODO: Optimize so that there are no duplicate files stored in the index, use iset?
+      <map(analyze-add-compilediff)> compileFiles
+      
+  /** 
+   * Checks if ast for given file has changed. Succeeds if old ASTDiff is not found or if ASTDiff is different.
+   *
+   * @internal
+   */
+  analyze-astdiff:
+    (ast, file) -> file
+    where
+      name := <conc> (<index-file-to-uri> file, ["ast-checksum"]);
+      newChecksum := <checksum> ast;
+      if oldChecksum := <index-get-global(|name)> then
+        <index-set-global(|name)> newChecksum;
+        not(<eq> (oldChecksum, newChecksum))
+      else
+        <index-set-global(|name)> newChecksum
+      end
+      
+  /** 
+   * Adds given file to the list of files to compile.
+   *
+   * @internal
+   */
+  analyze-add-compilediff = index-add-global(|"compile-diff")
+  
+  /** 
+   * Gets the list of files to compile, and then clear it.
+   *
+   * @internal
+   */
+  analyze-get-compilediffs = index-get-all-globals(|"compile-diff"); index-clear-global(|"compile-diff")
+  
+rules // Index lookup rules (that take into account adjust-index-lookup)
+  
+  /**
+   * Given an annotated AST node, resolves it, returning all its Defs.
+   *
+   * @param prefix  Only Defs with a name that starts with this string are returned.
+   *
+   * @internal
+   * @type "name"{uri} -> ?Def(uri')
+   */
+  index-lookup(is-adjust-lookup-enabled|namespace, path, prefix):
+    x -> def
+    where
+      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
+      if <?StopLookup()> candidates then
+        fail
+      else
+        def        := <index-select(|namespace, path, x)>
+      <+
+        // TODO: optimize: try not to call do-adjust-index-lookup from here
+        [_ | path'] := path;
+        def         := <index-lookup(is-adjust-lookup-enabled|namespace, path', prefix)> x
+      end
+
+  /**
+   * Given an annotated AST node, resolves it, returning all its Defs.
+   *
+   * @param prefix  Only Defs with a name that starts with this string are returned.
+   *
+   * @type "name"{uri} -> List(Def(uri'))
+   * @internal
+   */
+  index-lookup-all(is-adjust-lookup-enabled|namespace, path, prefix):
+    x -> defs'
+    where
+      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
+      defs       := <index-select-all(|namespace, path, x)>;
+      // TODO: optimize: try not to call do-adjust-index-lookup from here
+      if [_ | path'] := path then
+        defs2 := <index-lookup-all(is-adjust-lookup-enabled|namespace, path', prefix)> x;
+        defs' := <conc> (defs, defs2)
+      else
+        defs' := defs
+      end
+      
+  /**
+   * Given an annotated AST node, returns the outermost Def with a corresponding URI.
+   *
+   * @param prefix  Only Defs with a name that starts with this string are returned.
+   *
+   * @type "name"{uri} -> ?Def(uri')
+   * @internal
+   */
+  index-lookup-outermost(is-adjust-lookup-enabled |namespace, path, prefix):
+    x -> def
+    where
+      // TODO: optimize: just like index-lookup
+      [_ | path'] := path;
+      def         := <index-lookup-outermost(is-adjust-lookup-enabled |namespace, path', prefix)> x
+    <+
+      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
+      def        := <index-select(|namespace, path, x)>
+      
+  /**
+   * Given an annotated AST node, resolves it, and returns all possibly matching Defs with a common ancestor URI. 
+   *
+   * @param namespace Only Defs with this namespace are returned.
+   * @param prefix    Only Defs with a name that starts with this string are returned.
+   *
+   * @type "name"{uri} -> List(Def(uri'))
+   * @internal
+   */
+  index-lookup-one-level(is-adjusted-lookup-enabled|namespace, path, prefix):
+    x{_} -> defs
+    with
+      is-adjusted-lookup-enabled;
+      do-adjust-index-lookup(|namespace, path, x, prefix);
+      if ?StopLookup() then
+        defs := StopLookup()
+      else
+        mapconcat(\d at Def(p) -> [d]\
+          <+ \[namespace' | path'] -> <index-lookup-one-level(fail |namespace', path', prefix)> x\
+          <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list Def(_) or [namespace | path] or StopLookup() to stop the lookup"));
+        ?defs
+      end
+    <+
+      defs := <index-get-children(|namespace, prefix)> Def([namespace | path])
+      
+  /**
+   * Given an annotated AST node, resolves it, and returns all possibly matching Defs with a common ancestor URI. 
+   *
+   * @param prefix  Only Defs with a name that starts with this string are returned.
+   *
+   * @internal
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-levels(is-adjust-lookup-enabled |namespace, path, prefix):
+    x{_} -> all-defs
+    with
+      is-adjust-lookup-enabled;
+      do-adjust-index-lookup(|namespace, path, x, prefix);
+      if ?StopLookup() then
+        all-defs := []
+      else
+        mapconcat(\d at Def(p) -> [d]\
+            <+ \[namespace' | path'] -> <index-lookup-all-levels(fail |namespace', path', prefix)> x\
+            <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list Def(_) or [namespace | path] or StopLookup() to stop the lookup"));
+        ?all-defs
+      end
+    <+
+      one-level := <index-get-children(|namespace, prefix)> Def([namespace | path]);
+      if [_ | path'] := path then
+        all-defs := <concat> [one-level, <index-lookup-all-levels(fail |namespace, path', prefix)> x]
+      else
+        all-defs := one-level
+      end
+      
+/** @internal */
+rules // URI and value projections
+       
+  /** @internal */
+  index-uri-impl:
+    Def(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    Use(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    Read(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    x{[namespace | path]} -> [<index-namespace-unwrap> namespace | path]
+ 
+  /**
+   * TODO: Should second part of ReadWildcard be included in the URI, between namespace and path?
+   * 
+   * @internal 
+   */
+  index-uri-impl:
+    ReadWildcard(uri, _) -> uri
+
+  /** @internal */
+  index-value-impl:
+    Def(value) -> value
+
+  /** @internal */
+  index-value-impl:
+    Use(value) -> value
+
+  /** @internal */
+  index-value-impl:
+    Read(value) -> value
+  
+  /** @internal */
+  index-value-impl:
+    ReadWildcard(_, value) -> value
+       
+/** @internal */
+rules // Internal helpers
+
+  /**
+   * Transforms a term C( (a1, [b1]), (a2, [b2, b3]) ) to a tuple (C(a1, a2), [b1, b2, b3]).
+   *
+   * @internal
+   */
+  unzip-analyzed:
+    appl -> (appl', unzipped-parts)
+    with
+      appl'          := <all(\(a, _) -> a\)> appl;
+      unzipped-parts := <concat> <get-appl-arguments(\(_, b) -> b\) <+ map(\(_, b) -> b\) <+ ![]> appl
+       
+  /**
+   * Tests if the current file is just a testing language input
+   *
+   * @internal
+   */
+  is-test-file = 
+    string-ends-with(|".spt")
+  /** @internal */
+  is-test-language = 
+    ?"Spoofax-Testing"
+  /** @internal */
+  is-test-input(|language, path) = 
+    <is-test-language> language <+ <is-test-file> path
+      
+  /** @internal */
+  fake-file = 
+    is-test-file <+ index-is-fake-file
+  
+  /** @internal */    
+  index-filepair-to-file = 
+    Fst; string-replace(|$[[<project-path>]/], "")
+  
+  /** @internal */
+  ast-uri-to-ast-file(|full-path):
+    (ast, uri) -> (ast, (full-path, uri))
+  
+  /** @internal */     
+  index-is-name-substring(|name):
+    template -> <id>
+    with
+      [_, uri-name | _] := <index-uri>
+    where
+      <is-substring(!name)> uri-name
+   
+  /** @internal */    
+  index-readwildcard-substring(|prefix):
+    ReadWildcard(_, name) -> <id>
+    where <is-substring(!prefix)> name
+  
+  /** @internal */  
+  store-wildcard-read(|namespace, path, prefix):
+    children -> <id>
+    with
+      if set := <Index-ReadSet> then
+        if 1 := <length> children then
+          // HACK: This solves the problem of ReadWildcards making too many files re-analyze, but this should
+          // be handled in the index primitives instead.
+          <iset-add(|Read([namespace | path]))> set
+        else
+          <iset-add(|ReadWildcard([namespace | path], prefix))> set
+        end
+      end
+  
+  /** @internal */    
+  index-is-unresolved(|x, uri) = 
+    Index-UnresolvedSet; (iset-contains(|(x, uri)) <+ fail)
+  /** @internal */
+  index-add-unresolved(|x, uri) = 
+    (Index-UnresolvedSet; iset-add(|(x, uri))) <+ id
+  
+  /** @internal */
+  index-file-dependent-construct: 
+    uri -> <conc> (uses, reads)
+    with
+      uses := <index-get-uses-all> Def(uri);
+      reads := <index-get-reads-all> Def(uri)
+  
+  /** @internal */  
+  index-file-dependency-filter = 
+    ?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_)
+ 
+  /** @internal */
+  do-adjust-index-lookup(|namespace, path, use, prefix) =
+    repeat-until(
+      prim("SSL_EXT_get_parent", <id>)
+    , adjust-index-lookup(origin-equal(|use) |namespace, path, prefix) 
+    )
+ 
+  /** @internal */
+  index-select(|namespace, path, use) =
+    getfirst(
+      where(
+        ?Def([_, <SRTS-EXT-eq-ignore-annos(|use)> | _])
+      )
+    )
+ 
+  /** @internal */
+  index-select-all(|namespace, path, use) =
+    filter(
+      where(
+        ?Def([_, <SRTS-EXT-eq-ignore-annos(|use)> | _])
+      )
+    )
+ 
+  /** @internal */
+  do-adjusted-index-path(|namespace, path, def) =
+    adjust-index-path(origin-equal(|def) |namespace, path)
+  <+
+    ![def | path]
+ 
+  /** @internal */
+  index-eq(|namespace, expected) =
+    where(
+      ?Def([_, name | _]);
+      <SRTS-EXT-eq-ignore-annos(|expected)> name
+    )
+  
+  /** @internal */
+  external SRTS-EXT-eq-ignore-annos(|t)
+  
+  /** @internal */
+  index-key-unwrap = 
+    \key{uri} -> key{<index-uri-unwrap> uri}\ <+ id
+    
+/** @internal */
+rules // Interface for generated code
+ 
+  /** @internal */
+  nam-get-def(|namespace):
+    x -> Def([namespace, x | <IndexPath <+ ![]> namespace])
+  
+  /** @internal */ 
+  nam-annotate-use(|namespace):
+    t -> t{[Unresolved(namespace), t | <IndexPath <+ ![]> namespace]}
+  
+  /** @internal */ 
+  nam-get-scope-types = fail
+  /** @internal */
+  nam-get-definition = fail
+  /** @internal */
+  nam-get-definition-key = fail
+  /** @internal */
+  nam-annotate-names(|def-path) = fail

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-library.generated.str	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,564 @@
+module lib/analysis-library.generated
+ 
+imports
+  libstratego-lib
+  libstratego-parallel
+  lib/editor-common.generated
+  lib/analysis-library-internal.generated
+  lib/index-library.generated
+ 
+signature constructors
+ 
+  // Analyze constructors
+  Editor      : AnalysisPhase
+  Compile     : AnalysisPhase
+ 
+  // Index elements
+  Def          : List(UriPart) -> Summary
+  Use          : List(UriPart) -> Summary
+  BadUse       : List(UriPart) -> Summary
+  Read         : List(UriPart) -> Summary
+  ReadWildcard : List(UriPart) * String -> Summary
+  Diff         : List(UriPart) * List(Summary) -> Summary
+  
+  // Adjust lookup actions
+  StopLookup   : LookupAction
+  
+rules // Index analysis extension points
+ 
+  /**
+   * Extension point. Override this rule to adjust how the index analysis looks up use sites to definitions.
+   *
+   * The overriden rule must return a list that contains any of the following items:
+   *   - Def(uri)         : A definition with exactly this URI has been found. This tells the lookup to resolve the
+   *                        use site to this definition.
+   *   - [namespace|path] : This tells the lookup to do a new lookup at the given namespace and path.
+   * 
+   * Returning multiple of these in the list is allowed, these will all show up during content completion and possibly
+   * other custom strategies. If multiple items are returned during reference resolving for example, the first item
+   * will be used.
+   *
+   * If the lookup has failed, for example your custom rule cannot find any definitions, you can also return 
+   * StopLookup() instead of a list. This tells the lookup algorithm to stop any further lookups for this use site.
+   * This can be useful to stop lookups for recursive expressions like property access, preventing a lot of useless
+   * lookups that will always fail anyway.
+   *
+   * Extension example:
+   *   adjust-index-lookup(check-target-name|namespace, path, prefix):
+   *     PropAccess(exp, name) -> properties
+   *     where
+   *       <check-target-name> name
+   *     with
+   *       if TYPE(type{_}) := <type-of> exp then
+   *         properties := <index-lookup-children(|Property(), prefix)> type
+   *       else
+   *         properties := StopLookup()
+   *       end
+   *
+   *   adjust-index-lookup(check-target-name|namespace, path, prefix):
+   *     Var(name) -> [[Var() | path], [Property() | path]]
+   *     where
+   *       <check-target-name> name
+   *
+   * @param check-target-name   A strategy that should be used to check if the name of the current element is what the
+   *                            lookup algorithm is looking for.
+   * @param namespace           The namespace of the element that should be looked up.
+   * @param path                The path the lookup algorithm is currently looking at for the element.
+   * @param prefix              The prefix name of the element the lookup algorithm is looking for. This is usually the
+   *                            full name of the element, but could be a partial prefix during content completion.
+   * @type def -> List(Def(uri) or [namespace|path]) or StopLookup()
+   */
+  adjust-index-lookup(check-target-name|namespace, path, prefix) = fail
+  
+  /** 
+   * Extension point. Override this rule to store data about definitions in the index. Should call <store-results> on 
+   * a (list of) data that must be stored in the index.
+   *
+   * Note that store-results always fails, this is a trick to make every adjust-index-def-data override always fail so 
+   * that every overriden rule is called once for each definition. This can lead to unexpected behaviour when trying to 
+   * store multiple items by calling store-results in a map or filter! Be sure to always let your adjust-index-def-data 
+   * rule fail if you are doing a <filter(store-results)> for example.
+   *
+   * Extension example:
+   *   adjust-index-def-data(store-results|namespace, path):
+   *     def -> <store-results> Type([namespace|path], type)
+   *     where
+   *       type := <type-of> def
+   *
+   * @param store-results Call this on the data you want to store in the index.
+   * @param namespace     The namespace of the definition that the rule is being called on.
+   * @param path          The path of the definition that the rule is being called on.
+   * @type def -> fail 
+   */
+  adjust-index-def-data(store-results|namespace, path) = fail
+  
+  /**
+   * Extension point. Override this rule to adjust how the index assigns a namespace and path (URI) to definitions and
+   * use sites. Should return a path that will be assigned to the definition or use site.
+   *
+   * Extension example:
+   *   adjust-index-path(check-target-definition|namespace, path):
+   *     Start(_, _) -> [<string-replace(|<project-path>, "")> <Fst> <index-get-current-file>]
+   *
+   *
+   * @param check-target-definition 
+   * @param namespace               The namespace that would be given to the current definition or use site.
+   * @param path                    The path that would be given to the current definition or use site.
+   * @type def -> uri@[namespace|path]
+   */
+  adjust-index-path(check-target-definition|namespace, path) = fail
+  
+  /**
+   * Extension point. Override this rule to define index-stored constructors to check for difference during analysis.
+   * The index-diff-compare extension point is used to do the actual comparison. Defaults to Def constructs.
+   *
+   * Extension example:
+   *   index-diff-constructors = ?Type(_, _)
+   *
+   * @type a -> ?a
+   *
+   * @see index-diff-compare
+   */
+  index-diff-constructors = 
+    ?Def(_)
+  
+  /**
+   * Extension point. Override this rule to define a custom comparison of two index elements. It should fail if they 
+   * are not equal and return the indentity if they are equal. Only constructors defined by index-diff-constructors are
+   * compared.
+   *
+   * Extension example:
+   *   index-diff-compare:
+   *     (Type(u1, v1), Type(u2, v2)) -> <id>
+   *     where
+   *       <index-uri-eq> (u1, u2);
+   *       <eq> (v1, v2)
+   *
+   * @type (a, b) -> ?(a, b)
+   *
+   * @see index-diff-constructors
+   */
+  index-diff-compare:
+    (Def(u1), Def(u2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2)
+ 
+rules // Analysis traversals
+  
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   * Defaults to Editor() phase.
+   *
+   * @param language  The name of the language that is being analysed.
+   *
+   * @type (ast, path, project-path) -> (ast', List(fileToAnalyze@(file, subfile)))
+   *
+   * @see analyze-top(|phase, language)
+   */
+  analyze-top(|language):
+    (ast, path, project-path) -> <analyze-top(|Editor(), language, path, project-path)> ast
+   
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   *
+   * @param phase         The type of analysis phase. There are 2 phases to choose from:
+   *                      - Editor():   File dependencies are analysed.
+   *                      - Compile():  File dependencies are not analysed.
+   * @param language      The name of the language that is being analysed.
+   * @param path          The path of the file to analyze relative to project-path.
+   * @param project-path  The path of the directory that contains all the source files.
+   * @type ast -> (ast', List(fileToAnalyze@(file, subfile)))
+   *
+   * @see analyze-top-internal(|phase, language, project-path, full-path)
+   */
+  analyze-top(|phase, language, path, project-path):
+    ast -> (ast', filesToAnalyze)
+    with
+      full-path := $[[project-path]/[path]];
+      if index-split then
+        index-setup(|language, [project-path], full-path); // Set up the index, splitting may require index calls.
+        asts := <index-toplevel-split> ast;
+        astsFilePairs := <map(ast-uri-to-ast-file(|full-path))> asts;
+        Results(ast', _, _, _, _, _, filesToAnalyze) := 
+          <analyze-top-internal(|phase, language, project-path, full-path)> astsFilePairs
+      else
+        Results(asts, _, _, _, _, _, filesToAnalyze) := 
+          <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, full-path)];
+        ast' := <Hd> asts
+      end
+  
+rules // Parallel analysis
+  
+  /**
+   * Does a parallel analysis of given files using the specified analysis strategy. Automatically does parallel
+   * analysis of dependent files that have changed during the analysis.
+   *
+   * Example:
+   *   <index-parallel-analyze-files(analyze)> ["text/file1.ext", "text/file2.ext"]
+   *
+   * @param analyze (ast, path, project-path) -> (ast', errors, warnings, notes, filesToAnalyze). Strategy that 
+   *                analyzes a file using the index. Gets a (ast, path, project-path) tuple as input and must return 
+   *                a (ast', errors, warnings, notes, filesToAnalyze) tuple as output.
+   * @type List((file, subfile) or file) -> None()
+   */
+  index-parallel-analyze-files(analyze):
+    files -> None()
+    with
+      length; 
+      set-total-work-units
+    with
+      index-parallel-analyze(analyze);
+      filter(not(?ParallelResults((), (), _, _, _, _) <+ ?ParallelResults((), [()], _, _, _, _)); index-set-markers)
+ 
+rules // Query primitives
+ 
+  /**
+   * Gets all DefData entries that match the kind of data and URI in given definition.
+   *
+   * Example:
+   *   <index-get-data(|Type())> Def([Entity(), "Bar"]) => [DefData([Entity(), "Bar"], Type(), TYPE("Bar")), ...]
+   *
+   * @param kind Only data of this kind is returned.
+   * @type Def(uri) -> List(DefData(uri, kind, value))
+   */
+  index-get-data(|kind):
+    <with(?Def(uri) | "Def expected")> -> <index-get-value> DefData(uri, kind, ())
+      
+  /**
+   * Gets all data entries that match the kind of data and URI in given definition.
+   *
+   * Example:
+   *   <index-get-data-all(|Type())> Def([Entity(), "Bar"]) => [TYPE("Bar"), ...]
+   *
+   * @param kind Only data of this kind is returned.
+   * @type Def(uri) -> List(value)
+   */
+  index-get-data-all(|kind):
+    <with(?Def(uri) | "Def expected")> -> <index-get-all-values> DefData(uri, kind, ())
+     
+  /**
+   * Gets all Use entries that match the URI in given definition.
+   *
+   * Example:
+   *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"]), ...]
+   *
+   * @type Def(uri) -> List(Use(uri))
+   */
+  index-get-uses-all:
+    <with(?Def(uri) | "Def expected")> -> <index-get-all> Use(uri)
+     
+  /**
+   * Gets all Read or ReadWildcard entries that match the given template.
+   *
+   * Example:
+   *   <index-get-reads-all> [Property(), "Bar", "p"] => [Read([Property(), "Bar", "p"]), ...]
+   *
+   * @type Def(uri) -> List(Read(uri) or ReadWildcard(uri, prefix))
+   */
+  index-get-reads-all:
+    template -> <conc> (reads, readwildcards')
+    where
+      uri   := <index-uri> template;
+      reads := <index-get-all> Read(uri);
+      if !uri => [namespace, prefix | path-parent] then
+        readwildcards  := <index-get-all> ReadWildcard([namespace | path-parent], ());
+        readwildcards' := <filter(index-readwildcard-substring(|prefix))> readwildcards
+      else
+        readwildcards' := []
+      end
+ 
+  /**
+   * Get all index entries that match the given template.
+   *
+   * Example:
+   *   <index-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type template -> List(elem)
+   */
+  index-get-all:
+    template -> <indexlib-get-all> template
+      with
+       if set := <Index-ReadSet> then
+         uri := <index-uri>;
+         <iset-add(|Read(uri))> set
+       end
+       
+  /**
+   * Get all values of index entries that match the given template.
+   *
+   * Example:
+   *   <index-get-all-values> DefData([Property(), "s"], Type(), ()) => [TYPE("String"), ...]
+   *
+   * @type template -> List(value)
+   *
+   * @see index-value
+   */
+  index-get-all-values:
+    template -> <map(index-value)> <index-get-all> template
+       
+  /**
+   * Get the first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <index-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   *
+   * @type template -> ?elem
+   */
+  index-get:
+    template -> <?[<id>|_]> <index-get-all> template
+      
+  /**
+   * Get the value of first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <index-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
+   *
+   * @type template -> ?value
+   *
+   * @see index-value
+   */
+  index-get-value:
+    template -> <index-value> <?[<id>|_]> <index-get-all> template
+
+  /**
+   * Gets all Def children elements of an URI in a certain namespace.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * Example:
+   *   <index-get-children(|Field())> Def([Entity(), "Baz"]) => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
+   *   <index-get-children(|Field())> "Foo"{[Entity(), "Baz"]} => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
+   *   <index-get-children(|Field())> [Entity(), "Baz"] => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
+   *
+   * @param namespace Only child Def elements in this namespace are returned.
+   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
+   */
+  index-get-children(|namespace) = 
+    index-get-children(\uri -> Def(uri)\|namespace)
+  
+  /**
+   * Gets all children elements of an URI in a certain namespace using custom templates.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * @param construct-template  uri -> template. Should create a template to match index entries with, given an URI.
+   * @param namespace           Only child elements in this namespace are returned.
+   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
+   */
+  index-get-children(construct-template|namespace):
+    <with(?Def([parent-ns | path]) <+ ?_{[parent-ns | path]} <+ ?[parent-ns | path] | "Def, key or uri expected")> -> children
+    with
+      template  := <construct-template> [namespace | path];
+      children  := <prim("LANG_index_get_children", template)>;
+      <store-wildcard-read(|namespace, path, "")> children
+
+  /**
+   * Gets all Def children elements of an URI in a certain namespace where the name starts with a prefix.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * Example:
+   *   <index-get-children(|Field(), "fo")> Def([Entity(), "Baz"]) => [Def([Field(), "Foo"]), ...]
+   *   <index-get-children(|Field(), "ba")> "Foo"{[Entity(), "Baz"]} => [Def([Field(), "Bar"]), ...]
+   *   <index-get-children(|Field(), "ze")> [Entity(), "Baz"] => [...]
+   *
+   * @param namespace Only child Def elements in this namespace are returned.
+   * @param prefix    Only child Def elements where the name starts with this prefix are returned.
+   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
+   */
+  index-get-children(|namespace, prefix) = 
+    index-get-children(\uri -> Def(uri)\|namespace, prefix)
+  
+  /**
+   * Gets all children elements of an URI in a certain namespace where the name starts with a prefix
+   * using custom templates.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * @param construct-template  uri -> template. Should create a template to match index entries with, given an URI.
+   * @param namespace           Only child elements in this namespace are returned.
+   * @param prefix              Only child elements where the name starts with this prefix are returned.
+   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
+   */
+  index-get-children(construct-template|namespace, prefix):
+    <with(?Def([parent-ns | path]) <+ ?_{[parent-ns | path]} <+ ?[parent-ns | path] | "Def, key or uri expected")> -> children'
+    with
+      prefix'   := <strip-annos> prefix;
+      template  := <construct-template> [namespace | path];
+      children  := <prim("LANG_index_get_children", template)>;
+      children' := <filter(index-is-name-substring(|prefix'))> children;
+      <store-wildcard-read(|namespace, path, prefix')> children'
+
+  /**
+   * Gets a set of all files that have a reference to the given index entries.
+   *
+   * Example:
+   *   <index-get-referenced-files(\uri -> [Read(uri), Use(uri, [])]\)> [Def([Entity(), "Bar"]), ...] => 
+   *     [("fullpath/otherfile.ext", "subfile"), ...]
+   *
+   * @param construct-from-uri  uri -> List(elements). Construction strategy that creates a list of reference 
+   *                            constructs from all given entries, such as \uri -> [Read(uri), Use(uri, [])]\
+   * @type List(elem) -> List((file, subfile))
+   */
+  index-get-referenced-files(construct-from-uri):
+    entries -> files
+    where
+      uris        := <filter(index-uri)> entries;
+      referenced  := <concat> <filter(construct-from-uri)> uris;
+      files       := <iset-elements> <iset-addlist(|<mapconcat(index-get-files-of)> referenced)> <new-iset>
+ 
+  /**
+   * Convenience function for finding files with Read and Use dependencies to the given definitions.
+   *
+   * Example:
+   *   <index-get-dependent-files> [Def([Entity(), "Bar"]), ...] => [("fullpath/otherfile.ext", "subfile"), ...]
+   *
+   * @type List(elem) -> List((file, subfile))
+   *
+   * @see index-get-referenced-files(construct-from-uri)
+   * @see index-file-dependent-construct
+   */
+  index-get-dependent-files = 
+    index-get-referenced-files(index-file-dependent-construct)
+     
+rules // Index lookup rules (that take into account adjust-index-lookup)
+ 
+  /**
+   * Given an annotated AST node, resolves it, returning its Def.
+   *
+   * @type "name"{uri} -> ?Def(uri')
+   */
+  index-lookup:
+    x{[namespace|path]} -> <index-lookup(id|<index-namespace-unwrap> namespace, path, <strip-annos> x)>
+ 
+  /**
+   * Given an annotated AST node, resolves it, returning all its Defs.
+   * 
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all:
+    x{[namespace|path]} -> <index-lookup-all(id|<index-namespace-unwrap> namespace, path, <strip-annos> x)>
+ 
+  /**
+   * Given an annotated AST node, returns the outermost Def with a corresponding URI.
+   *
+   * @param prefix  Only Defs with a name that starts with this string are returned.
+   * @type "name"{uri} -> ?Def(uri')
+   */
+  index-lookup-outermost(|prefix):
+    x{[namespace|path]} -> <index-lookup-outermost(id|<index-namespace-unwrap> namespace, path, prefix)>
+ 
+  /**
+   * Given an annotated AST node, returns Defs that have the same parent URI.
+   *
+   * @param prefix  Only Defs with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-one-level(|prefix):
+    x{[namespace|path]} -> <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix)>
+      
+  /**
+   * Given an annotated AST node, resolves it, and returns all possibly matching Defs with a common ancestor URI. 
+   *
+   * @param namespace Only Defs with this namespace are returned.
+   * @param prefix    Only Defs with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-levels(|prefix):
+    x{[namespace|path]} -> <index-lookup-all-levels(id|<index-namespace-unwrap> namespace, path, prefix)>
+ 
+  /**
+   * Given an annotated AST node, resolves it, and returns all child Defs of its definition.
+   *
+   * @param namespace Only child Defs with this namespace are returned.
+   * @param prefix    Only Defs with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-children(|namespace, prefix): // TODO: how does this compare w/ index-lookup-one-level?
+    x{[ns | path]} -> defs
+    with
+      if !ns => Unresolved(_) then
+        Def([_ | def-path]) := <index-lookup>;
+        defs := <index-lookup-one-level(id|namespace, def-path, prefix)> x
+      else
+        defs := <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix)>
+      end
+    <+
+      defs := []
+      
+rules // Index utilities
+  
+  /**
+   * Gets the namespace part of the URI for given key (term{uri} element).
+   *
+   * Example:
+   *   <index-uri-namespace> "Bar"{[Entity(), "Bar", "Baz"]} => Entity()
+   *
+   * @type "name"{uri@[namespace|path]} -> namespace
+   */
+  index-uri-namespace:
+    x{[namespace|path]} -> <index-namespace-unwrap> namespace
+
+  /**
+   * Gets the path part of the URI for given key (term{uri} element). Resolves it if unresolved.
+   *
+   * Example:
+   *   <index-uri-path> "Bar"{[Entity(), "Bar", "Baz"]} => ["Bar", "Baz"]
+   *
+   * @type "name"{uri@[namespace|path]} -> path'
+   */
+  index-uri-path:
+    x{[namespace|path]} -> path'
+    where
+      if !namespace => Unresolved(namespace) then
+        Def(path') := <index-lookup>
+      else
+        path' := path
+      end
+      
+  /**
+   * Gets the name part of the URI for given key (term{uri} element).
+   *
+   * Example:
+   *   <index-uri-name> "Bar"{[Entity(), "Bar", "Baz"] => "Bar"
+   *
+   * @type "name"{uri@[namespace|[name|restPath]]} -> name
+   */ 
+  index-uri-name:
+    x{[_|[name|_]]} -> name
+    
+  /**
+   * Tries to get the name part of the URI for given term or fail if given term does not have an URI or name.
+   *
+   * Example:
+   *   <index-uri-name> Def([Entity(), "Bar", "Baz"]) => "Bar"
+   *   <index-uri-name> Type("Foo") => fail
+   *   <index-uri-name> Read([Entity()]) => fail
+   *
+   * @type x -> name
+   */   
+  index-uri-name:
+    x -> <index-uri-name> <index-uri> x
+    where
+      not(<has-annos> x)
+    
+  /**
+   * Determines if a given AST node is a definition site, according to the syntax.
+   *
+   * FIXME: Also succeeds on use sites.
+   *
+   * @type def -> ?def
+   */
+  index-is-definition =
+    where(nam-get-definition-key)
+    
+  /**
+   * Checks if given keys (term{uri} elements) are equal. Discards unresolved URI's.
+   *
+   * Example:
+   *   <index-key-eq> ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]}) => 
+   *     ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]})
+   *   <index-key-eq> ("Foo"{[Entity(), "Foo"]}, "Bar"{[Entity(), "Bar"]}) => fail
+   *
+   * @type (k1, k2) -> ?(k1, k2)
+   */      
+  index-key-eq:
+    (k1, k2) -> <id>
+    where
+      <eq> (<index-key-unwrap> k1, <index-key-unwrap> k2)

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/compilation-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/compilation-library.generated.str	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,188 @@
+module lib/compilation-library.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  
+rules // Extension points
+  
+  /**
+   * Extension point. Override this rule to define a desugaring that is applied to AST before analyzing and compiling.
+   *
+   * Extension example:
+   *   index-desugar-ast:
+   *     ast -> <desugar> ast
+   *
+   * @type ast -> ast'
+   */
+  index-desugar-ast = fail
+    
+  /**
+   * Extension point. Override this rule to define a compilation or transformation to some other target language. The
+   * index manages which files have to be compiled and calls this rule for each AST that has changed since the last
+   * compilation.
+   *
+   * Extensions example:
+   *   index-compile-ast(|file, subfile):
+   *     ast -> None()
+   *     with
+   *       java := <to-java> ast;
+   *       full-path := <dirname> file;
+   *       filename := <guarantee-extension(|"java")> <base-filename> file;
+   *       writePath := $[[full-path]/java/];
+   *       writeFile :=  $[[writePath][filename]];
+   *       try(<mkdir> writePath);
+   *       <fclose> <fputs> (java, <fopen> (writeFile, "w"))
+   *
+   * @param file    The file that must be compiled.
+   * @param subfile The subfile that must be compiled ("" if there is no subfile).
+   * @type ast -> None()
+   */
+  index-compile-ast(|file, subfile) = fail
+  
+rules // Compilation
+  
+  /**
+   * Schedules compilation in the background of all files that have changed since the last compilation.
+   *
+   * @type x -> x
+   */
+  index-schedule-compilation:
+    _ -> None()
+    with
+      queue-strategy(|"index-compilation", "Compiling files")
+  
+  /** @internal */
+  index-compilation:
+    language -> None()
+    with
+      // Init
+      project-path := <project-path>;
+      index-setup(|language, [project-path], ".")
+    with
+      // Determine the files to compile by looking at changed files
+      diffs         := <analyze-get-compilediffs>;
+      files         := <map(index-compilation-restore-read-file)> diffs;
+      filteredFiles := <make-set> <remove-all(index-compilation-filter-file)> files;
+      
+      // Clean compile time reads
+      <filter(index-compilation-clean-reads)> filteredFiles;
+      
+      // Set total work units to number of files to compile for visual indication
+      <set-total-work-units> <length> filteredFiles;
+      
+      // Compile the files
+      <filter(index-compilation-file(|language, project-path); complete-work-unit)> filteredFiles
+
+  /** @internal */
+  index-compilation-file(|language, project-path):
+    (path, subfile) -> None()
+    with
+      ast := <index-get-global(|<conc> (<index-file-to-uri> (path, subfile), ["ast"]))>;
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Compile file
+        <try(index-compile-ast(|path, subfile))> ast;
+        
+        // Store compile-time reads.
+        reads := <iset-elements> readSet;
+        <index-add-all(|<index-compilation-file-tuple> (path, subfile))> reads
+      |}
+
+  /** @internal */
+  index-compilation-filter-file:
+    (file, subfile) -> (file, subfile)
+    where
+      <is-test-file <+ index-is-fake-file <+ not(file-exists)> file
+    
+rules // On save handling
+  
+  /**
+   * Commits the index to disk and schedules compilation. Use trigger-commit-and-compile instead of this strategy.
+   *
+   * @see trigger-commit-and-compile
+   *
+   * @internal
+   */
+  commit-and-compile:
+    language -> None()
+    with
+      index-commit
+    with
+      index-schedule-compilation
+
+  /**
+   * Triggers commit and compilation, requires target language as current term.
+   * Compilation can be delayed by using disable-commit-and-compile. Compilation will be triggered when 
+   * enable-commit-and-compile is called.
+   *
+   * @type language -> language
+   *
+   * @see enable-commit-and-compile
+   * @see disable-commit-and-compile
+   */
+  trigger-commit-and-compile:
+    language -> <id>
+    with
+      if not(index-is-global-enabled(|"delay-compile")) then
+        commit-and-compile
+      else
+        index-enable-global(|"trigger-compile")
+      end
+  
+  /**
+   * Delays commit and compilation until enable-commit-and-compile is called.
+   *
+   * @type x -> x
+   *
+   * @see enable-commit-and-compile
+   */
+  disable-commit-and-compile = 
+    index-enable-global(|"delay-compile")
+  
+  /**
+   * Cancels the commit and compilation delay, requires target language as current term. 
+   * If commit and compilation was triggered during the delay, it is triggered now.
+   *
+   * @type language -> language
+   *
+   * @see disable-commit-and-compile
+   */
+  enable-commit-and-compile:
+    language -> <id>
+    with
+      if index-is-global-enabled(|"trigger-compile") then
+        commit-and-compile
+      end;
+      index-disable-global(|"delay-compile")
+      
+/** @internal */
+rules // Compile time reads
+
+  /** @internal */
+  index-compilation-restore-read-file:
+    (file, subfile) -> (file', subfile)
+    where
+      file' := <string-replace(|<index-compilation-read-path>, "")> file
+  /** @internal */
+  index-compilation-restore-read-file:
+    (file, subfile) -> (file, subfile)
+    where
+      not(<string-replace(|<index-compilation-read-path>, "")> file)
+      
+  /** @internal */
+  index-compilation-clean-reads = 
+    ?(file, subfile); index-compilation-file-tuple; index-clear-file
+      
+  /** @internal */
+  index-compilation-file-tuple:
+    (file, subfile) -> ($[[<index-compilation-read-path>]/[file]], subfile)
+    
+  /** @internal */
+  index-compilation-read-path =
+    !"/.internal/reads/compile"

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/editor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/editor-common.generated.str	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,269 @@
+module lib/editor-common.generated
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-gpp
+
+strategies
+
+  parse-file = parse-entitylang-file
+  parse-entitylang-file =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(include/EntityLang.tbl)>
+    )
+
+  parse-string = parse-entitylang-string
+  parse-entitylang-string =
+    parse-string(
+      strsglr-report-parse-error
+    | <import-term(include/EntityLang.tbl)>
+    )
+  
+  parse-stream = parse-entitylang-stream
+  parse-entitylang-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(include/EntityLang.tbl)>
+    )
+
+  pp-entitylang-string =
+    ast2abox(|[<import-term(include/EntityLang.generated.pp.af)>,
+               <import-term(include/EntityLang.pp.af)>]);
+    box2text-string(|100)
+    
+  language = !"EntityLang"
+
+strategies
+  
+  /**
+   * Processes an import during semantic analysis.
+   * Ensures proper caching of files and prevents
+   * processing duplicate imports more than once.
+   *
+   * @param resolve-path  Resolves the filesystem path of this import
+   * @param parse-file    Parses a file (optionally removing definition bodies
+   *                      so only signatures are stored in the cache)
+   * @param record-declarations
+   *                      Performs semantic analysis on a tree
+   */
+  open-import(resolve-path, parse-file, record-declarations):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path       := <resolve-path> import;
+        cache-path := <import-cache-path> path;
+        if not(<IsImported> path) then
+          rules(
+            IsImported: path
+          );
+          ( <is-newer> (cache-path, path);
+            file := <ReadFromFile> cache-path
+          <+
+            file := <parse-file> path;
+            if <file-exists> path then
+              // Only cache if on filesystem (e.g., ignore libstratego-lib)
+              <WriteToBinaryFile> (cache-path, file)
+            end        
+          );
+          {| CurrentFile:
+            rules(CurrentFile := path);
+            <record-declarations> file
+          |}
+        end
+      end
+
+  open-wildcard-import(resolve-path, parse-file, record-declarations, is-source-file):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path := <resolve-path> import;
+        readdir;
+        list-loop(
+          if is-source-file then
+            <open-import(id, parse-file, record-declarations)>
+              $[[path]/[<id>]]
+          <+
+            try(?one-failed)
+          end
+        );
+        not(!one-failed)
+      end
+  
+  import-cache-path:
+    full-path -> cache-path
+    with
+      project-path := <project-path>;
+      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
+      full-path'   := <string-replace(|"/", "+"); string-replace(|"\\", "+"); string-replace(|":", "+")> full-path;
+      cache-path   := $[[cache-dir]/[full-path'].sig]
+
+  project-path = prim("SSL_EXT_projectpath")
+  
+  plugin-path = prim("SSL_EXT_pluginpath")
+  
+  candidate-sorts = prim("SSL_EXT_candidatesorts")
+
+  is-newer:
+    (file1, file2) -> <id>
+    where
+      <gt> (<file-exists; modification-time> file1, <file-exists; modification-time> file2) 
+
+strategies
+  
+  editor-init =
+    // Ensure all dynamic rules are properly scoped
+    try(dr-scope-all-end);
+    dr-scope-all-start
+  
+  refresh-workspace-file:
+    path -> <prim("SSL_EXT_refreshresource", path)>
+  
+  string-starts-with-capital =
+    explode-string; Hd; is-upper
+
+strategies
+  
+  origin-term      = prim("SSL_EXT_origin_term", <id>)
+  origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-offset    = prim("SSL_EXT_origin_offset", <id>)
+  origin-location  = prim("SSL_EXT_origin_location", <id>)
+  origin-line      = origin-location => (<id>, _, _, _)
+  origin-column    = origin-location => (_, <id>, _, _)
+  origin-file      = prim("SSL_EXT_origin_file", <id>)
+  origin-strip     = prim("SSL_EXT_origin_strip", <id>)
+  origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+
+  origin-language =
+    prim("SSL_EXT_origin_language", <id>)
+  
+  origin-surrounding-comments =
+    prim("SSL_EXT_origin_surrounding_comments", "EntityLang", <id>)
+    
+  origin-documentation-comment =
+    origin-surrounding-comments;
+    filter(string-as-chars(documentation-comment-chars));
+    concat-strings
+  
+  documentation-comment-chars:
+    ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
+  
+  origin-track-forced(s) =
+    ![<id>]; all(s); ?[<id>]
+
+strategies
+
+  desugar-position(desugar|ast):
+    position -> position'
+    where
+      ast'  := <at-position(!<id>{MARKER()}|position)> ast;
+      ast'' := <topdown(repeat(preserve-annos({?x; desugar; not(?x)})))> ast';
+      position' := <position-of-term({?_{a*}; <one(?MARKER())> a*})> ast''
+   
+  at-position(s|position):
+    c#(t*) -> t'
+    where
+      !position => [i | position']
+    where
+      t' := c#(<at-index(at-position(s|position'))> (i, t*))
+
+  at-position(s|position):
+    t -> t'
+    where
+      !position => [];
+      t' := <s> t
+
+  position-of-term(is-term):
+    t -> []
+    where
+      is-term
+  
+  position-of-term(is-term):
+    _#(t*) -> <position-of-term(is-term|0)> t*
+  
+  position-of-term(is-term|start-index):
+    [t | t*] -> position
+    where
+      if i* := <position-of-term(is-term)> t then
+        position := [start-index | i*]
+      else
+        position := <position-of-term(is-term | <inc> start-index)> t*
+      end
+
+  term-at-position(|position):
+    t -> t'
+    where
+      at-position(?t'|position) 
+
+  parent-at-position(|position):
+    t -> t'
+    where
+      !position => [i, _];
+      t' := <subterm-at(|i)> t
+  
+  parent-at-position(|position):
+    t -> <parent-at-position(|position')> t'
+    where
+      !position => [i | position' @ [_, _ | _]];
+      t' := <subterm-at(|i)> t
+
+  subterm-at(|index):
+    _#(t*) -> <index(|<inc> index)> t*
+  
+signature constructors
+
+  COMPLETION : String -> Term
+  NOCONTEXT  : Term   -> Term
+  MARKER     : Term
+  True       : Term
+
+  // Below are copies of the signatures of the terms used in example
+  // trans/entitylang.str file. These definitions should also be automatically 
+  // generated in the imported include/EntityLang.str module. However,
+  // to ensure that the example transformation doesn't break when the
+  // syntax is changed, we also hard-coded them here.
+          
+  Module   : ID * List(Entity)   -> Module
+  Entity   : ID * List(Property) -> Entity
+  Property : ID * Type           -> Property
+  Type     : ID                  -> Type
+  
+  Type     : Namespace
+  Property : Namespace
+
+strategies
+  
+  // Set markers for a given file. Use when checking files from a queued strategy.
+  // Current term: (ast-desugared, errors, warnings, notes) tuple
+  // ast: the root node of the file to set markers on 
+  set-markers(|ast) = prim("SSL_EXT_set_markers", ast)
+
+  // Indicate that one or more files need analysis. 
+  // Current term: ss a list of absolute file paths, or a single absolute file path to analyze
+  queue-analysis = 
+       (is-list; list-loop(queue-analysis))
+    <+ prim("SSL_EXT_queue_analysis")
+    
+  // Gets the number of background analyses for currenct project and language.
+  // Current term: ignored
+  analysis-count = prim("SSL_EXT_queue_analysis_count")
+
+  // Set the total number of work units to complete. Can be called multiple times. 
+  // Current term: number of work units (int).
+  set-total-work-units = prim("SSL_EXT_set_total_work_units")
+  
+  // Complete one work unit and update progress monitors.
+  // Current term: ignored
+  complete-work-unit = prim("SSL_EXT_complete_work_unit")
+  
+  // Queue a strategy for background processing with a progress indicator.
+  // Current term: the term to pass to the background strategy
+  // s: the strategy, as string
+  // description: name of the task (will be shown in progress view)
+  queue-strategy(|s,description) = prim("SSL_EXT_queue_strategy", s, description)
+  
+  // Return the result of this strategy to indicate a non-completed (backgrounded) analysis.
+  // Editor services (hover, resolve) will be delayed until a complete analysis is performed. 
+  set-analysis-backgrounded = !"BACKGROUNDED"
+  

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/index-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/index-library.generated.str	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,695 @@
+module lib/index-library.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+signature constructors
+  
+  // Index elements
+  DefData      : List(UriPart) * DefDataType * Term -> Summary
+    
+  // URI header
+  Namespace      : UriPart
+  Unresolved     : Namespace -> UriPart
+  INTERNAL_ERROR : UriPart
+  Timestamp      : UriPart
+ 
+  // Remainder of URI
+  String : UriPart
+  Anon   : Int -> UriPart
+  Anon   : UriPart
+  
+  FileEntries : Term * Term -> Term
+  
+  // Globals
+  Global : Namespace
+  Global : List(UriPart) -> Summary
+  Global : List(UriPart) * List(Summary) -> Summary
+  
+  // None namespace
+  None   : Namespace
+  
+rules // Index management
+   
+  /**
+   * Sets up the index library for given language and project paths.
+   * Must be called once before doing anything with the library.
+   *
+   * @param language      The language to set the index up for.
+   * @param project-path  The project paths that contain all source files to analyse and compile.
+   *
+   * @obsolete
+   * @type x -> x
+   */
+  index-setup(|language, project-paths) =
+    obsolete(!"index-setup(|language, project-paths); use index-setup(|language, project-paths, current-file)");
+    index-setup(|language, project-paths, ".")
+    
+  /**
+   * Sets up the index library for given language, project paths and current file.
+   * Must be called once before doing anything with the library.
+   *
+   * Example:
+   *   <index-setup(|"MiniJava", [<project-path>], "test/test.mjv")
+   *
+   * @param language      The language to set the index up for.
+   * @param project-path  The project paths that contain all source files to analyse and compile.
+   * @param current-file  The current file that is being analysed. Can be retrieved later using index-get-current-file.
+   *                      Can also be changed later using index-set-current-file.
+   * @type x -> x
+   */
+  index-setup(|language, project-paths, current-file) =
+    prim("LANG_index_setup", language, project-paths, current-file)
+    
+  /**
+   * Sets the current file the index (analysis) is operating on to the given file.
+   *
+   * Example:
+   *   <index-set-current-file> "fullpath/file.ext"
+   *   <index-set-current-file> ("fullpath/file.ext", "subfile")
+   *
+   * @type x -> ?x
+   */
+  index-set-current-file = 
+    prim("LANG_index_set_current_file", <id>)
+
+  /**
+   * Adds given element to the index with given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-add(|"fullpath/file.ext")> Def([Entity(), "Bar"])
+   *   <index-add(|("fullpath/file.ext", "subfile"))> Def([Entity(), "Bar"])
+   *
+   * @param file  The file (and subfile) to add the element to.
+   * @type x -> ?x
+   */
+  index-add(|file) =
+    prim("LANG_index_add", <id>, file)
+
+  /**
+   * Adds all given elements to the index with given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-add-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
+   *   <index-add-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
+   *
+   * @param file  The file (and subfile) to add the elements to.
+   * @type List(x) -> ?List(x)
+   */
+  index-add-all(|file) =
+    list-loop(with(index-add(|file)))
+    
+  /**
+   * Removes given element from the index that is contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-remove(|"fullpath/file.ext")> Def([Entity(), "Bar"])
+   *   <index-remove(|("fullpath/file.ext", "subfile"))> Def([Entity(), "Bar"])
+   * 
+   * @param file  The file (and subfile) to remove the element from.
+   * @type x -> ?x
+   */
+  index-remove(|file) =
+    prim("LANG_index_remove", <id>, file)
+    
+  /**
+   * Removes all given elements from the index that are contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-remove-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
+   *   <index-remove-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
+   *
+   * @param file  The file (and subfile) to remove the elements from.
+   * @type List(x) -> ?List(x)
+   */
+  index-remove-all(|file) =
+    list-loop(with(index-remove(|file)))
+    
+  /**
+   * Removes all elements from the index that are contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-clear-file> "fullpath/file.ext"
+   *   <index-clear-file> ("fullpath/file.ext", "subfile")
+   *
+   * @type x -> ?x
+   */
+  index-clear-file = 
+    prim("LANG_index_clear_file", <id>)
+    
+  /**
+   * Clears all elements from the index.
+   *
+   * @type x -> x
+   */
+  index-clear = 
+    prim("LANG_index_clear_all")
+   
+  /**
+   * Commits index to a file on disk.
+   *
+   * @type x -> x
+   */
+  index-commit = 
+    prim("LANG_index_commit")
+
+  /**
+   * Starts a transaction on the index for the current file. Additions to the index are not visible to other files 
+   * until index-end-transaction is called. Operations on the index are only thread safe during a transaction.
+   *
+   * @type x -> x
+   */
+  index-start-transaction = 
+    prim("LANG_index_start_transaction")
+  
+  /**
+   * Ends a transaction on the index for the current file. Additions made to the index during the transaction are
+   * added to the global index visible for other files. Operations on the index are not thread safe any more after 
+   * this call.
+   *
+   * @type x -> x
+   */
+  index-end-transaction = 
+    prim("LANG_index_end_transaction")
+  
+  /**
+   * Starts a transaction, applies given strategy and ends the transaction. All index operations used from the given
+   * strategy are thread safe.
+   * 
+   * @param s The strategy to apply. Transaction will still properly end if strategy fails.
+   * @type x -> x'
+   *
+   * @see index-start-transaction
+   * @see index-end-transaction
+   */
+  index-transaction(s) = 
+    prim("LANG_index_start_transaction"); try(s); prim("LANG_index_end_transaction")
+  
+rules // Index querying
+  
+  /**
+   * Gets the file that the analysis is currently in.
+   *
+   * @type x -> (file, subfile)
+   *
+   * @see index-setup(|language, project-paths, current-file)
+   * @see index-set-current-file
+   */
+  index-get-current-file =
+    prim("LANG_index_get_current_file")
+  
+  /**
+   * Gets a list of all files and subfiles for current project.
+   *
+   * Example:
+   *   <index-get-all-files> => [("fullpath/file.ext", "subfile"), ...]
+   *
+   * @type x -> List((file, subfile))
+   */   
+  index-get-all-files =
+    prim("LANG_index_all_files")
+  
+  /**
+   * Gets all index entries for the given file path and optionally subfile.
+   *
+   * Examples:
+   *   <index-get-all-in-file> "fullpath/file.ext" => [Def([Entity(), "Bar"]), ...]
+   *   <index-get-all-in-file> ("fullpath/file.ext", "subfile") => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type file or (file, subfile) -> List(elem)
+   */  
+  index-get-all-in-file:
+    filepath -> entries
+    with
+      entries := <prim("LANG_index_get_all_in_file", filepath)>
+   
+  /**
+   * Gets index entries in some namespace for the given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-get-all-in-file(|Import())> "fullpath/file.ext" => [Def([Import(), "Bar"]), ...]
+   *   <index-get-all-in-file(|Import())> ("fullpath/file.ext", "subfile") => [Def([Import(), "Bar"]), ...]
+   *
+   * @param namespace Only index entries from this namespace are retrieved.
+   * @type file or (file, subfile) -> List(elem)
+   */  
+  index-get-all-in-file(|namespace):
+    filepath -> entries
+    with
+      // TODO: Optimize -- add an argument to LANG_index_get_all_in_file to do this filtering
+      entries := <prim("LANG_index_get_all_in_file", filepath)>;
+      filter(where(index-uri => [namespace | _]))
+    
+  /**
+   * Gets the revision of a file and optionally subfile.
+   *
+   * Example:
+   *   <index-get-file-revision> "fullpath/file.ext" => 13
+   *   <index-get-file-revision> ("fullpath/file.ext", "subfile") => 37
+   *
+   * @type file or (file, subfile) -> Int
+   */
+  index-get-file-revision:
+    file -> <prim("LANG_index_get_file_revision", file)>
+    
+  /**
+   * Gets the containing files and subfiles of index entry with given template.
+   *
+   * Example:
+   *   <index-get-files-of> Def([Entity(), "Bar"]) => [("fullpath/file.ext", "subfile"), ...]
+   *
+   * @type template -> List((file, subfile))
+   */  
+  index-get-files-of:
+    template -> <prim("LANG_index_get_files_of", template)>
+    
+  /**
+   * Get all index entries that match the given template.
+   *
+   * Example:
+   *   <indexlib-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type template -> List(elem)
+   */
+  indexlib-get-all:
+    template -> <prim("LANG_index_get", template)>
+    
+  /**
+   * Get all values of index entries that match the given template.
+   *
+   * Example:
+   *   <indexlib-get-all-values> DefData([Property(), "s"], Type(), ()) => [TYPE("String"), ...]
+   *
+   * @type template -> List(value)
+   *
+   * @see index-value
+   */
+  indexlib-get-all-values:
+    template -> <map(index-value)> <indexlib-get-all> template
+ 
+  /**
+   * Get the first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <indexlib-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   *
+   * @type template -> ?elem
+   */
+  indexlib-get:
+    template -> <?[<id>|_]> <indexlib-get-all> template
+   
+  /**
+   * Get the value of first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <indexlib-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
+   *
+   * @type template -> ?value
+   *
+   * @see index-value
+   */
+  indexlib-get-value:
+    template -> <index-value> <?[<id>|_]> <indexlib-get-all> template
+    
+rules // Index globals
+    
+  /**
+   * Gets the 'fake' path where globals are stored in the index.
+   *
+   * @internal
+   */
+  index-globals-path = 
+    !"/.internal/globals"
+    
+  /**
+   * Gets the URI where globals are stored in the index for given name or names.
+   *
+   * @internal
+   * @type name or List(name) -> uri
+   */
+  index-globals-uri:
+    names -> uri
+    with
+      if is-list then
+        uri := <concat> [[Global()], names, ["globals", ".internal"]]
+      else
+        uri := [Global(), names, "global", ".internal"]
+      end
+    
+  /**
+   * Gets the first value in global storage with given name, or fail.
+   *
+   * Example:
+   *   index-get-global(|"last-compile") => Timestamp(1334322856)
+   *   index-get-global(|["last-compile", "file.str"]) => Timestamp(1334322856)
+   * 
+   * @param name  The name or list of names to identify the global value.
+   * @type _ -> ?value
+   */
+  index-get-global(|name):
+    _ -> value
+    where
+      value := <indexlib-get-value> Global(<index-globals-uri> name, ())
+    
+  /**
+   * Gets all values in global storage with given name.
+   *
+   * Example:
+   *   index-get-global(|"last-compile") => [Timestamp(1334322856), ...]
+   *   index-get-global(|["last-compile", "file.str"]) => [Timestamp(1334322856), ...]
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type _ -> List(value)
+   */ 
+  index-get-all-globals(|name):
+    _ -> values
+    with
+      values := <indexlib-get-all-values> Global(<index-globals-uri> name, ())
+    
+  /**
+   * Add value to global storage with given name.
+   *
+   * Example:
+   *   <index-add-global(|"last-compile")> Timestamp(1334322856)
+   *   <index-add-global(|["last-compile", "file.str"])> Timestamp(1334322856)
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-add-global(|name):
+    value -> <id>
+    with
+      <index-add(|<index-globals-path>)> Global(<index-globals-uri> name, value)
+      
+  /**
+   * Overwrites value in global storage with given value.
+   *
+   * Example:
+   *   <index-set-global(|"last-compile")> Timestamp(1334322856)
+   *   <index-set-global(|["last-compile", "file.str"])> Timestamp(1334322856)
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-set-global(|name):
+    value -> <id>
+    with
+      index-clear-global(|name);
+      <index-add-global(|name)> value
+    
+  /**
+   * Removes all values from global storage with given name.
+   *
+   * Example:
+   *   index-clear-global(|"last-compile")
+   *   index-clear-global(|["last-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-clear-global(|name):
+    _ -> <id>
+    with
+      <index-remove(|<index-globals-path>)> Global(<index-globals-uri> name, ())
+      
+  /**
+   * Gets the URI where boolean globals are stored in the index for given name or names.
+   *
+   * @internal
+   */
+  index-boolean-globals-uri:
+    names -> uri
+    with
+      if is-list then
+        uri := <concat> [[Global()], names, ["boolean", "globals", ".internal"]]
+      else
+        uri := [Global(), names, "boolean", "global", ".internal"]
+      end
+      
+  /**
+   * Sets boolean value true to global boolean storage with given name.
+   *
+   * Example:
+   *   index-enable-global(|"can-compile")
+   *   index-enable-global(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> x
+   */   
+  index-enable-global(|name):
+    _ -> <id>
+    with
+      <index-add(|<index-globals-path>)> Global(<index-boolean-globals-uri> name)
+      
+  /**
+   * Sets boolean value false to global boolean storage with given name.
+   *
+   * Example:
+   *   index-disable-global(|"can-compile")
+   *   index-disable-global(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> x
+   */   
+  index-disable-global(|name):
+    _ -> <id>
+    with
+      <index-remove(|<index-globals-path>)> Global(<index-boolean-globals-uri> name)
+      
+  /**
+   * Query for boolean value true in global boolean storage with given name.
+   *
+   * Example:
+   *   index-is-global-enabled(|"can-compile")
+   *   index-is-global-enabled(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> ?x
+   */   
+  index-is-global-enabled(|name):
+    _ -> <id>
+    where
+      <indexlib-get> Global(<index-boolean-globals-uri> name)
+
+rules // Index utility
+  
+  /**
+   * Gets the URI part for given term. Can be extended by defining a index-uri-impl rule. If no index-uri-impl rule
+   * is defined for the given term the first subterm is used as the URI. Fails if no URI can be retrieved from the
+   * given term.
+   *
+   * Example:
+   *   <index-uri> DefData([Entity(), "Bar", "Baz"], Type(), TYPE("Bar")) => [Entity(), "Bar", "Baz"]
+   *
+   * @type elem -> ?uri
+   *
+   * @see index-uri-impl
+   * @see index-uri-generic
+   */ 
+  index-uri = 
+    index-uri-impl <+ index-uri-generic
+  
+  /**
+   * Gets the namespace part of the given URI.
+   *
+   * Example:
+   *   <index-uri-path> [Entity(), "Bar", "Baz"] => Entity()
+   *
+   * @type uri@[namespace|path] -> namespace
+   */ 
+  index-uri-namespace =
+    ?[<id>|_]
+  
+  /**
+   * Gets the path part of the given URI.
+   *
+   * Example:
+   *   <index-uri-path> [Entity(), "Bar", "Baz"] => ["Bar", "Baz"]
+   *   <index-uri-path> [Entity()] => []
+   *
+   * @type uri@[namespace|path] -> path
+   */ 
+  index-uri-path =
+    ?[_|<id>]
+    
+  /**
+   * Gets the name part of the given URI or fail if there is no name.
+   *
+   * Example:
+   *   <index-uri-name> [Entity(), "Bar", "Baz"] => "Bar"
+   *   <index-uri-name> [Entity()] => fail
+   *
+   * @type uri@[namespace|[name|restPath]] -> ?name
+   */ 
+  index-uri-name =
+    ?[_|[<id>|_]]
+  
+  /**
+   * Gets the value part for given term. Can be extended by defining a index-value-impl rule. If no index-value-impl 
+   * rule is defined for the given term the second subterm is used as the value. Fails if no value can be retrieved
+   * from the given term.
+   *
+   * Example:
+   *   <index-value> DefData([Entity(), "Bar", "Baz"], Type(), TYPE("Bar")) => TYPE("Bar")
+   *
+   * @type elem -> ?value
+   *
+   * @see index-value-impl
+   * @see index-value-generic
+   */  
+  index-value = 
+    index-value-impl <+ index-value-generic
+  
+  /**
+   * Queries if given index file is a 'fake' file for storing internal data.
+   *
+   * @type x -> ?x
+   */
+  index-is-fake-file = 
+    string-starts-with(|"/.internal")
+  
+  /**
+   * Checks if given URI's are equal. Discards anonymous scopes if necessary.
+   *
+   * Example:
+   *   <index-uri-eq> ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"]) => 
+   *     ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"])
+   *   <index-uri-eq> ([Entity(), "Foo"], [Entity(), "Bar"]) => fail
+   *
+   * @type (u1, u2) -> ?(u1, u2)
+   */
+  index-uri-eq:
+    (u1, u2) -> <id>
+    where
+      u1' := <index-uri-unwrap> u1;
+      u2' := <index-uri-unwrap> u2;
+      (<eq> (u1', u2') <+ <eq> (<remove-all(?Anon(_))> u1', <remove-all(?Anon(_))> u2'))
+  
+  /**
+   * Finds the first key (term{uri} element) for given term, or fail. 
+   *
+   * @type x -> ?name{uri}
+   */
+  index-find-key:
+    x -> key
+    where
+      key := <collect-one(?_{_})> x
+      
+  /**
+   * Converts a URI to a string.
+   *
+   * Example:
+   *   <index-uri-to-string> [Entity(), "Bar", "Baz"] => "Entity://Bar.Baz"
+   *
+   * @type uri -> str
+   */
+  index-uri-to-string:
+    [ns|path] -> <concat-strings> [nsStr, "://", pathStr]
+    with
+      pathStr := <take-until(?Anon(_)); reverse; separate-by(|"."); concat-strings> path;
+      nsStr := <?<id>#(_)> ns
+  
+  /**
+   * Converts a file to a string.
+   *
+   * Example:
+   *   <index-file-to-string> "fullpath/file.ext" => "fullpath/file.ext"
+   *
+   * @type file -> file
+   */
+  index-file-to-string:
+    file -> file
+    where
+      not(<is-tuple> file)
+  
+  /**
+   * Converts a file ((file, subfile) tuple) to a string.
+   *
+   * Example:
+   *   <index-file-to-string> ("fullpath/file.ext", []) => "fullpath/file.ext"
+   *
+   * @type (file, []) -> file
+   */
+  index-file-to-string:
+    (file, []) -> file
+    
+  /**
+   * Converts a file ((file, subfile) tuple) to a string.
+   *
+   * Example:
+   *   <index-file-to-string> ("fullpath/file.ext", [Entity(), "Foo" "Bar"]) => "fullpath/file.ext at Entity://Foo.Bar"
+   *
+   * @type (file, subfile) -> str
+   */
+  index-file-to-string:
+    (file, subfile) -> <concat-strings> [file, "@", <index-uri-to-string> subfile]
+    where
+      not([] := subfile)
+
+  /**
+   * Converts a file to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> "fullpath/file.ext" => [None(), "fullpath/file.ext"]
+   *
+   * @type file -> uri
+   */      
+  index-file-to-uri:
+    file -> [None(), file]
+    where
+      not(<is-tuple> file)
+      
+  /**
+   * Converts a file ((file, subfile) tuple) to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> ("fullpath/file.ext", []) => [None(), "fullpath/file.ext]
+   *
+   * @type (file, subfile) -> uri
+   */      
+  index-file-to-uri:
+    (file, []) -> [None(), file]
+    
+  /**
+   * Converts a file ((file, subfile) tuple) to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> ("fullpath/file.ext", [Entity(), "Foo" "Bar"]) => [Entity(), "Foo", "Bar", "fullpath/file.ext"]
+   *
+   * @type (file, subfile) -> uri
+   */      
+  index-file-to-uri:
+    (file, subfile) -> <conc> ([file], subfile)
+    where
+      not([] := subfile)
+      
+/** @internal */
+rules // URI and value projections
+  
+  /** @internal */
+  index-uri-impl:
+    DefData(uri, _, _) -> uri
+
+  /** @internal */
+  index-uri-generic:
+    term -> <?_#(<?[<id>|_]>)> term
+  
+  /** @internal */
+  index-value-impl:
+    DefData(_, _, value) -> value
+    
+  /** @internal */
+  index-value-generic:
+    term -> <?_#(<?[_, <id>|_]> )> term
+     
+/** @internal */ 
+rules // Internal helpers
+  
+  /** @internal */
+  index-namespace-unwrap =
+    \Unresolved(n) -> n\ <+ id
+    
+  /** @internal */
+  index-uri-unwrap =
+    \[ns|xs] -> [<index-namespace-unwrap> ns|xs]\ <+ id

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/refactor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/refactor-common.generated.str	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,67 @@
+module lib/refactor-common.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+
+strategies //transformation
+
+/**
+ * Replaces elements in a list (once, starting from the right)
+ * @param match strategy for partial list
+ * @param new elements List(b)
+ * @type List(a) -> List(a,b)
+ */
+replace-sublist(match-sublist|new-elems): 
+  list -> <
+    at-suffix(match-sublist;!new-elems) <+
+    (
+      init; 
+      replace-sublist(match-sublist|new-elems);
+      at-end(![<last> list])
+    )
+  > list 
+
+/**
+ * Inserts an element at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list element 
+ * @type Term -> Term
+ */
+insert-elem(|pos, elem)=
+  insert-sublist(|pos, [elem])
+
+/**
+ * Inserts a list of elements at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list elements 
+ * @type Term -> Term
+ */	
+insert-sublist(|pos, elems)=
+  at-position(
+    split-at(|<last> pos);
+    ?(prefix, suffix);
+    <concat>[prefix, elems, suffix]
+    |<init> pos
+  )
+
+
+strategies //user-input
+
+/**
+ * Opens an input dialog for one string value that represents an identifier
+ * The language is used to check if the input value matches the identifier pattern
+ * @type (String, String, String, String) -> String
+ */
+input-dialog:
+  (language, title, label, default-value) -> <prim("SSL_EXT_newnamedialog", language, title, label, default-value)>
+  
+input-dialog:
+  (title, label, default-value) -> <input-dialog>("", title, label, default-value)
+
+strategies //pp-table
+	
+get-pp-table=
+  import-term(include/EntityLang.generated.pp.af)
+	

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/plugin.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/plugin.xml	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<?eclipse version="3.0"?>
+
+<plugin>
+       <extension point="org.eclipse.imp.runtime.languageDescription">
+          <language extensions="ent" description="EntityLang" language="EntityLang" derivedFrom="DynamicRoot" validator="org.spoofax.graphical.entitylang.textual.EntityLangValidator" validatorClass="org.spoofax.graphical.entitylang.textual.EntityLangValidator"></language>
+       </extension>
+       <extension id="org.spoofax.graphical.entitylang.textual.parser" name="EntityLang Parser" point="org.eclipse.imp.runtime.parser">
+          <parser class="org.spoofax.graphical.entitylang.textual.EntityLangParseController" language="EntityLang">
+          </parser>
+       </extension>    
+    </plugin>
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/syntax/Common.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/syntax/Common.sdf	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,46 @@
+module Common
+
+exports
+
+  lexical syntax
+  
+    [a-zA-Z][a-zA-Z0-9]* -> ID
+    "-"? [0-9]+          -> INT
+    
+    "\"" StringChar* "\"" -> STRING
+    ~[\"\n]               -> StringChar
+    "\\\""                -> StringChar
+    BackSlashChar         -> StringChar
+    "\\"                  -> BackSlashChar
+    
+    [\ \t\n\r] -> LAYOUT
+    
+    [\*]                             -> CommentChar
+    "/*" (~[\*] | CommentChar)* "*/" -> LAYOUT
+    "//" ~[\n\r]* ([\n\r] | EOF)     -> LAYOUT
+    
+    -> EOF
+  
+  lexical restrictions
+  
+    %% Ensure greedy matching for lexicals
+  
+    CommentChar   -/- [\/]
+    INT           -/- [0-9]
+    ID            -/- [a-zA-Z0-9\_]
+    
+    %% EOF may not be followed by any char
+    
+    EOF           -/- ~[]
+
+    %% Backslash chars in strings may not be followed by " 
+    
+    BackSlashChar -/- [\"]
+
+  context-free restrictions
+  
+    %% Ensure greedy matching for comments
+
+    LAYOUT? -/- [\ \t\n\r]
+    LAYOUT? -/- [\/].[\/]
+    LAYOUT? -/- [\/].[\*]

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/syntax/EntityLang.generated.pp
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/syntax/EntityLang.generated.pp	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,8 @@
+[
+   Module             -- KW["module"] _1 _2,
+   Module.2:iter-star -- _1,
+   Entity             -- KW["entity"] _1 KW["{"] _2 KW["}"],
+   Entity.2:iter-star -- _1,
+   Primitive          -- KW["primitive"] _1,
+   Property           -- _1 KW[":"] _2
+]
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/syntax/EntityLang.pp
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/syntax/EntityLang.pp	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,2 @@
+%% Pretty printing table (see also EntityLang.generated.pp)
+[]

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/syntax/EntityLang.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/syntax/EntityLang.sdf	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,18 @@
+%% Grammar for the EntityLang language
+%% By default, based on an example "entities" syntax
+module EntityLang
+
+imports Common
+
+exports
+
+  context-free start-symbols
+  
+    Start
+
+  context-free syntax
+  
+    "module" Module@=ID Type*				-> Start {"Module", scope(Type)}
+    "entity" Type@=ID "{" Property* "}"		-> Type {"Entity", scope(Property)}
+	"primitive" Type@=ID					-> Type {"Primitive"}
+    Property@=ID ":" Type at ID				-> Property {"Property"}
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/test/example.ent
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/test/example.ent	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,21 @@
+/**
+* Example EntityLang program.
+*/  
+module example
+
+entity User {
+  name     : String
+  password : String
+  homepage : URL
+}
+
+entity BlogPosting {
+  poster : User
+  body   : String
+}
+
+entity URL {
+  location : String
+}
+
+primitive String
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/test/test-example.spt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/test/test-example.spt	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,56 @@
+/**
+* Unit tests for the EntityLang language.
+*/
+module test-example
+
+language EntityLang
+
+setup Common [[
+  module test
+]]
+
+test Simple entity [[
+  entity User {
+    name  : String
+    other : User
+  }
+]] 0 errors
+
+test Resolve type fails [[
+  entity User {
+    name  : Strin
+    other : Use
+  }
+]] 2 errors
+
+test Duplicate entity fails [[
+  entity User {}
+  entity User {}
+]] 2 errors
+
+test Duplicate property fails [[
+  entity User {
+  	name : String
+  	name : String
+  }
+]] 2 errors
+
+test Resolve type [[
+  entity [[User]] {}
+  
+  entity Owner {
+    owns : [[User]]
+  }
+]] resolve #2 to #1
+
+test Complete primitive type [[
+  entity User {
+    name : [[Str]]
+  }
+]] complete to "String"
+
+test Complete user type [[
+  entity User {
+    owner : [[Us]]
+  }
+]] complete to "User"

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/analysis-manual.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/analysis-manual.str	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,14 @@
+module analysis-manual
+
+imports
+  include/EntityLang
+  lib/analysis-auto.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+
+rules // Adjust lookup
+
+  // Add primitive types to type lookup.
+  adjust-index-lookup(target |namespace, path, prefix): 
+    Type(<target>) ->  [Def([Type(), "Int"]), Def([Type(), "String"]), [Type() | path]]

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/check.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/check.str	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,39 @@
+module check
+
+imports
+  libstratego-lib
+  include/EntityLang
+  lib/editor-common.generated
+  lib/analysis-auto.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+
+rules // Resolving
+  
+  constraint-error:
+    x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
+    
+rules // Duplicates
+    
+  is-unique-namespace = ?Type()
+  is-unique-namespace = ?Property()
+      
+  constraint-error:
+    definition -> (definition, $[Duplicate definition])
+    where
+      key{[ns|_]} := <nam-get-definition-key> definition;
+      <is-unique-namespace> ns;
+      definitions := <index-lookup-all> key;
+      <gt> (<length> definitions, 1)
+    
+rules // Other
+  
+  constraint-warning:
+    Entity(x, _) -> (x, $[Entity names must start with a capital])
+    where
+      not(<string-starts-with-capital> x)
+  
+  constraint-note:
+    Module(x @ "example", _) -> (x, $[This is just an example program in the "entities" language
+                                      (this note is defined in trans/check.str) ])

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/entitylang.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/entitylang.str	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,166 @@
+module entitylang
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/EntityLang
+  lib/editor-common.generated
+  lib/analysis-auto.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  lib/compilation-library.generated
+  analysis-manual
+  check
+  generate
+  refactor
+
+rules // Analysis
+  
+  // Analyzes the current program, returning a tuple with the analyzed AST, errors, warnings, notes and
+  // files that should be re-analyzed.
+  analyze:
+    (ast, path, project-path) -> (ast'', errors, warnings, notes, filesToAnalyze')
+    with
+      ast'                    := <id> ast; // Optional AST desugaring
+      (ast'', filesToAnalyze) := <analyze-top(|<language>)> (ast', path, project-path);
+      index-transaction(
+        errors                := <collect-all(constraint-error, conc)> ast'';
+        warnings              := <collect-all(constraint-warning, conc)> ast'';
+        notes                 := <collect-all(constraint-note, conc)> ast''
+      );
+      filesToAnalyze'         := <make-set> <map(index-filepair-to-file)> filesToAnalyze
+
+  // Main entry point for analyzes, called when a single file is opened in the editor.
+  editor-analyze:
+    (ast, path, project-path) -> (ast', errors, warnings, notes)
+    with
+      editor-init;
+      (ast', errors, warnings, notes, filesToAnalyze) := <analyze> (ast, path, project-path);
+      <try(editor-queue-analysis)> filesToAnalyze;
+      <text2model> (ast', path, project-path)
+      
+  // Main entry point for analyzes, called when multiple files have changed. 
+  editor-analyze:
+    files -> None()
+    where
+      not(is-tuple)
+    with
+      index-setup(|<language>, [<project-path>], ".");
+      disable-commit-and-compile // Disable compilation during analysis.
+    with
+      editor-queue-analysis
+    with
+      // Enable and trigger compilation after all files have been analysed.
+      <enable-commit-and-compile> <language>;
+      <trigger-commit-and-compile> <language>
+      
+  // Called when current file is saved.
+  editor-save:
+    (_, _, _, _, _) -> None()
+    with
+      index-setup(|<language>, [<project-path>], ".");
+      <trigger-commit-and-compile> <language>
+
+  text2model:
+    (ast', path, project-path) -> None()
+    with
+      packageName := <get-config> "program";
+      textFilePath := $[[project-path]/[path]];
+      diagramFileExtension := <conc-strings> (<lower-case> packageName, "_diagram");
+      diagramFilePath := $[[project-path]/[<guarantee-extension(|diagramFileExtension)> path]];
+      <gmf-bridge(|textFilePath, diagramFilePath, packageName)> ast'
+      
+  external gmf-bridge(|diagramFilePath, packageName, textFilePath)
+  
+rules // Editor services
+  
+  // Resolves a reference when the user control-clicks or presses F3 in the editor.
+  editor-resolve:
+    (node, position, ast, path, project-path) -> target
+    where
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      index-transaction(
+        target := <index-lookup> node
+      )
+
+  // Returns "hover help" information for a particular node in the editor.
+  // For references, this rule is invoked using the resolved term.
+  editor-hover:
+    (target, position, ast, path, project-path) -> $[[uriString]]
+    where
+      uriString := <index-uri-to-string> <index-uri> <index-find-key> target
+
+  // Completes an identifier when the user presses control-space
+  // (the completion identifier in the AST provides additional context information)
+  editor-complete:
+    (node, position, ast, path, project-path) -> proposals'
+    where
+      editor-init;
+      (ast', _) := <analyze-top(|<language>)> (ast, path, project-path);
+      item at COMPLETION(name) := <collect-one(?COMPLETION(_))> ast';
+      index-transaction(
+        (<index-lookup-all-levels(|name)> item <+ ![]) => proposals
+      );
+      proposals' := <map(index-uri-name)> proposals
+
+rules // Debugging
+  
+  // Prints the abstract syntax ATerm of a selection.
+  generate-aterm:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"aterm")> path;
+      result   := selected
+      
+  // Prints the analyzed annotated abstract syntax ATerm of a selection.
+  generate-analyzed:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      editor-init;
+      filename := <guarantee-extension(|"analyzed.aterm")> path;
+      result   := <analyze-top(|<language>)> (selected, path, project-path)   
+      
+  // Prints the definition annotated abstract syntax ATerm of a selection.
+  generate-deffed:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      filename := <guarantee-extension(|"aterm")> path;
+      result   := <analyze-defs(|Anon(), Anon())> selected
+      
+  // Prints the entries in the index of the current file.
+  index-currentfile:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      filename := <guarantee-extension(|"index.currentfile.aterm")> path;
+      result   := <index-get-all-in-file> path
+      
+  // Prints the entries in the index of all files.
+  index-allfiles:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      filename := <guarantee-extension(|"index.allfiles.aterm")> path;
+      result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
+      
+  // Cleans all data from the index.
+  index-cleanall:
+    (selected, position, ast, path, project-path)  -> None()
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      index-clear
+    
+rules // Utility
+  
+  // Queue parallel analysis for given list of files.
+  editor-queue-analysis = 
+    not(?[]); queue-strategy(|"editor-parallel-analyze", "Analyzing files")
+      
+  // Executes parallel analysis using the index library.
+  editor-parallel-analyze:
+    files -> None()
+    with
+      index-parallel-analyze-files(analyze)

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/generate.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/generate.str	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,64 @@
+module generate
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/EntityLang
+  lib/editor-common.generated
+  lib/compilation-library.generated
+
+rules // Incremental code generation of project using compilation library.
+      
+  index-compile-ast(|file, subfile):
+    ast -> None()
+    with
+      java := <to-java> ast;
+      full-path := <dirname> file;
+      filename := <guarantee-extension(|"java")> <base-filename> file;
+      writePath := $[[full-path]/];
+      writeFile :=  $[[writePath][filename]];
+      try(<mkdir> writePath);
+      <fclose> <fputs> (java, <fopen> (writeFile, "w"))
+
+rules // Transformation to java strings.
+
+  to-java:
+    [_] -> <concat-strings> <map(to-java)>
+
+  to-java:
+    Module(x, d*) ->
+    $[ package [x];
+       
+       [d'*]
+     ]
+    with
+      d'* := <to-java> d*
+  
+  to-java:
+    Entity(x, p*) ->
+    $[ class [x] {
+           [p'*]
+       }
+     ]
+    with
+      p'* := <to-java> p*
+
+  to-java:
+    Property(x, Type(t)) -> $[
+      private [t] [x];
+      
+      public [t] get_[x] {
+          return [x];
+      }
+      
+      public void set_[x] ([t] [x]) {
+          this.[x] = [x];    
+      }
+  ]
+  
+  to-java:
+    Type(t) -> t
+
+  to-java:
+    t* -> <map(to-java)> t*

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/refactor.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/refactor.str	Mon Jul 16 10:05:13 2012	(r25215)
@@ -0,0 +1,28 @@
+module refactor
+
+imports
+  lib/refactor-common.generated
+  include/EntityLang
+  lib/editor-common.generated  
+  entitylang
+
+rules
+ 
+  rename-entity:
+    (newname, selected-name, position, ast, path, project-path) -> ([(ast, new-ast)], fatal-errors, errors, warnings)
+    with
+      new-ast  := <topdown(try(rename-type(|selected-name, newname)))> ast; 
+      (errors, warnings) := <semantic-constraint-issues> (ast, new-ast);
+      fatal-errors := []
+
+  rename-type(|old-name, new-name):
+    Entity(old-name, y) -> Entity(new-name, y)
+
+  rename-type(|old-name, new-name):
+    Type(old-name) -> Type(new-name)
+    
+  semantic-constraint-issues:
+    (ast, new-ast) -> (<diff>(new-errors, errors), <diff>(new-warnings, warnings))
+    where
+    	(_, errors, warnings, _) := <editor-analyze> (ast, "", "");
+    	(_, new-errors, new-warnings, _) := <editor-analyze> (new-ast, "", "")

From oskarvanrest at gmail.com  Mon Jul 16 12:06:33 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 16 Jul 2012 10:06:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25216 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/META-INF
Message-ID: <20120716100633.817847F8032@mx1.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 16 10:06:33 2012
New Revision: 25216
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25216&sc=1

Log:
Removed unneeded bundle

Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/META-INF/MANIFEST.MF

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/META-INF/MANIFEST.MF
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/META-INF/MANIFEST.MF	Mon Jul 16 10:05:13 2012	(r25215)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/META-INF/MANIFEST.MF	Mon Jul 16 10:06:33 2012	(r25216)
@@ -16,8 +16,7 @@
  org.strategoxt.imp.runtime,
  org.spoofax.jsglr,
  org.strategoxt.strj,
- org.spoofax.graphical,
- org.eclipse.emf.ecore;bundle-version="2.7.0"
+ org.spoofax.graphical
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
 Bundle-ActivationPolicy: lazy
 Export-Package: org.behaviorengineering.combe.textual

From oskarvanrest at gmail.com  Tue Jul 17 07:45:12 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Tue, 17 Jul 2012 05:45:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25217 -
	experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical
Message-ID: <20120717054512.9528A108C01A@mx3.tudelft.nl>

Author: OskarVanRest
Date: Tue Jul 17 05:45:10 2012
New Revision: 25217
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25217&sc=1

Log:
Reset text selection after diagram edit.

Modified:
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java	Mon Jul 16 10:06:33 2012	(r25216)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/SemanticModelContentAdapter.java	Tue Jul 17 05:45:10 2012	(r25217)
@@ -3,6 +3,7 @@
 import org.eclipse.emf.common.notify.Notification;
 import org.eclipse.emf.ecore.util.EContentAdapter;
 import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
+import org.eclipse.jface.viewers.ISelectionProvider;
 import org.eclipse.ui.IEditorPart;
 import org.spoofax.graphical.emf.Model2Term;
 import org.spoofax.interpreter.terms.IStrategoTerm;
@@ -45,6 +46,9 @@
 			}
 
 			textReplacer.replaceText(context.getFactory().makeList(context.getFactory().makeTuple(currentTerm, newTerm)));
+			
+			ISelectionProvider selectionProvider = diagramEditor.getSite().getSelectionProvider();
+			selectionProvider.setSelection(selectionProvider.getSelection());
 		}
 	}
 }
\ No newline at end of file

From oskarvanrest at gmail.com  Thu Jul 19 05:47:45 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Thu, 19 Jul 2012 03:47:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25218 -
	experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing
Message-ID: <20120719034745.C77132B8052@mx2.tudelft.nl>

Author: OskarVanRest
Date: Thu Jul 19 03:47:44 2012
New Revision: 25218
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25218&sc=1

Log:
Bugfixes

Modified:
   experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/SpoofaxSelectionChangedListener.java

Modified: experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/SpoofaxSelectionChangedListener.java
==============================================================================
--- experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/SpoofaxSelectionChangedListener.java	Tue Jul 17 05:45:10 2012	(r25217)
+++ experimental/graphical-editor/org.spoofax.graphical/src/org/spoofax/graphical/selectionsharing/SpoofaxSelectionChangedListener.java	Thu Jul 19 03:47:44 2012	(r25218)
@@ -31,6 +31,13 @@
 
 	@Override
 	public void selectionChanged(SelectionChangedEvent event) {
+		try {
+			EditorState.getActiveEditor().getSelectionAst(true);
+		}
+		catch (Exception e) {
+			return; // this happens when you select text, delete it, and choose 'undo'
+		}
+		
 		if (editorPair.diagramSelection) {
 			editorPair.diagramSelection = false;
 			return;
@@ -87,7 +94,14 @@
 
 		for (int i = 0; i < appls.size(); i++) {
 			List<Integer> path = StrategoTermPath.createPathList(appls.get(i));
-			result.add(StrategoTermPathAdapter.strategoTermPathToEObject(path, root));
+			try {
+				EObject eObject = StrategoTermPathAdapter.strategoTermPathToEObject(path, root);
+				result.add(eObject);
+			}
+			catch (Exception e) {
+				// Exceptions can occur when selected term has no model correspondence. 
+				// This is the case when the selected text has not yet been parsed.
+			}
 		}
 
 		return result;

From chrismelman at hotmail.com  Thu Jul 19 12:31:17 2012
From: chrismelman at hotmail.com (Chris Melman)
Date: Thu, 19 Jul 2012 10:31:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25219 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.pp: .settings
	editor trans
Message-ID: <20120719103117.1577E2B801E@mx2.tudelft.nl>

Author: ChrisMelman
Date: Thu Jul 19 10:31:15 2012
New Revision: 25219
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25219&sc=1

Log:
added-refactoring to remove duplicates in pp files

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/.settings/
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/trans/refactor.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/trans/boxpp.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Builders.esv	Thu Jul 19 03:47:44 2012	(r25218)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/BoxPP-Builders.esv	Thu Jul 19 10:31:15 2012	(r25219)
@@ -14,5 +14,8 @@
   provider                  : include/boxpp.ctree                                                              
               
   builder                   : "Show abstract syntax" = generate-aterm (openeditor) (realtime) (meta) (source)  
-                                                                                                               
+  
+  refactoring PP-Entry*		: "Remove Duplicates"   = remove-duplicates-entries (source) 
+  
+  // builder					: "Remove Duplicates"   = remove-duplicates (source)                                                                                                          
   // on save: generate-java                                                                                    
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/trans/boxpp.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/trans/boxpp.str	Thu Jul 19 03:47:44 2012	(r25218)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/trans/boxpp.str	Thu Jul 19 10:31:15 2012	(r25219)
@@ -8,6 +8,7 @@
   lib/editor-common.generated
   check
   generate
+  refactor
 
 rules // Main editor interface (defined by editor/BoxPP-Builders and -References.esv)
   
@@ -36,6 +37,11 @@
       filename := <guarantee-extension(|"aterm")> path;
       result   := selected // we just return the input term
   
+  
+  remove-duplicates: (selected, position, ast, path, project-path) -> (path, result)
+  	 with
+      filename := <guarantee-extension(|"test")> path;
+      result   := selected // we just return the input term
   // Resolves a reference when the user control-clicks or presses F3 in the editor.
   // Only succeeds for nodes of the form Type(_) for which GetEntity is defined.
   editor-resolve:

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/trans/refactor.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/trans/refactor.str	Thu Jul 19 10:31:15 2012	(r25219)
@@ -0,0 +1,16 @@
+module refactor
+
+imports
+  lib/refactor-common.generated
+  lib/editor-common.generated  
+  libstratego-lib
+
+rules
+	remove-duplicates-entries:
+    (newname, selected, position, ast, path, project-path) -> ([(selected, new-selected)], fatal-errors, errors, warnings)
+    with
+      <debug(!"ast: ")> ast;
+      new-selected  :=  <uniq>selected; 
+      errors := [];
+      warnings := [];
+      fatal-errors := []

From gabrielkonat at gmail.com  Fri Jul 20 23:17:41 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Fri, 20 Jul 2012 21:17:41 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25220 -
	spoofax-contrib/separate-compilation-examples/c-without-macros/trans
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans
	spoofax-contrib/se...
Message-ID: <20120720211741.6AFF1CC134@mx4.tudelft.nl>

Author: gkonat
Date: Fri Jul 20 21:17:40 2012
New Revision: 25220
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25220&sc=1

Log:
Updated to latest NBL.

Added:
   spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library-internal.str
   spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library.str
   spoofax-imp/trunk/org.strategoxt.imp.names/lib/compilation-library.str
   spoofax-imp/trunk/org.strategoxt.imp.names/lib/index-library.str
   spoofax-imp/trunk/org.strategoxt.imp.names/semantics/
   spoofax-imp/trunk/org.strategoxt.imp.names/semantics/check.str
   spoofax-imp/trunk/org.strategoxt.imp.names/semantics/names.nd
   spoofax-imp/trunk/org.strategoxt.imp.names/semantics/names.str
   spoofax-imp/trunk/org.strategoxt.imp.names/semantics/stratego-names.nd
   spoofax-imp/trunk/org.strategoxt.imp.names/semantics/stratego-names.str
   spoofax-imp/trunk/org.strategoxt.imp.names/syntax/stratego/NDL-Vars.sdf
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/check.str
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.nd
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/names.str
Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/names.nd
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/names.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/splitter.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.nd
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/splitter.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.ewa
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/names.nd
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/names.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/splitter.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str
   spoofax-imp/trunk/org.strategoxt.imp.debug.stratego.runtime/   (props changed)
   spoofax-imp/trunk/org.strategoxt.imp.names/editor/NameDefinitionLanguage-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-auto.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.names/syntax/NameDefinitionLanguage.generated.pp
   spoofax-imp/trunk/org.strategoxt.imp.names/syntax/NameDefinitionLanguage.sdf
   spoofax-imp/trunk/org.strategoxt.imp.names/syntax/stratego/NDL-Terms.sdf
   spoofax-imp/trunk/org.strategoxt.imp.names/test/   (props changed)
   spoofax-imp/trunk/org.strategoxt.imp.names/test/example.nd
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.names/trans/namedefinitionlanguage.str
   spoofax/trunk/spoofax/org.spoofax.compiler/   (props changed)
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/analysis-library-internal.str
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/analysis-library.str
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/nbl-library.str
   strategoxt-java-backend/trunk/   (props changed)
   strategoxt-java-backend/trunk/java/   (props changed)
   strategoxt/trunk/   (props changed)

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -73,7 +73,7 @@
     where
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       index-transaction(
-        target := <index-lookup> node
+        target := <index-lookup-element> node
       )
 
   // Returns "hover help" information for a particular node in the editor.
@@ -91,9 +91,9 @@
       editor-init;
       ast' := <desugar-all> ast;
       (ast'', _) := <analyze-top(|<language>)> (ast', path, project-path);
-      item at COMPLETION(name) := <collect-one(?COMPLETION(_))> ast'';
+      item at COMPLETION(prefix) := <collect-one(?COMPLETION(_))> ast'';
       index-transaction(
-        (<index-lookup-all(|name)> item <+ ![]) => proposals
+        (<index-lookup-prefix-element(|prefix)> item <+ ![]) => proposals
       );
       proposals' := <map(index-uri; index-uri-name)> proposals
 
@@ -103,8 +103,9 @@
   debug-generate-aterm:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       filename := <guarantee-extension(|"aterm")> path;
-      result   := selected
+      result   := <desugar-all> selected
       
   // Prints the definition annotated abstract syntax ATerm of a selection.
   debug-generate-deffed:
@@ -112,15 +113,16 @@
     with
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       filename := <guarantee-extension(|"aterm")> path;
-      result   := <analyze-defs> selected
+      result   := <analyze-defs> <desugar-all> selected
       
   // Prints the analyzed annotated abstract syntax ATerm of a selection.
   debug-generate-analyzed:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       editor-init;
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       filename := <guarantee-extension(|"analyzed.aterm")> path;
-      result   := <analyze-top(|<language>)> (selected, path, project-path)   
+      result   := <analyze-top(|<language>)> (<desugar-all> selected, path, project-path)   
       
   // Prints the entries in the index of the current file.
   debug-index-show-current-file:

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/names.nd
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/names.nd	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/names.nd	Fri Jul 20 21:17:40 2012	(r25220)
@@ -20,44 +20,46 @@
   Function
   Variable
 
-rules // Compilation unit
+binding rules // Primitives
+
+  predefined Type "char"
+  predefined Type "int"
+  predefined Type "void"
+
+binding rules // Compilation unit
 
   Start(x, _, _) :
     defines CompilationUnit x
-  	scopes Struct, Type, Function
+      scope for Struct, Type, Function
   	
   Include(x) :
-    defines non-unique Include x
-    refers to CompilationUnit x
-    imports Struct   from CompilationUnit x {current-file}
-    imports Type     from CompilationUnit x {current-file}
-    imports Function from CompilationUnit x {current-file}
+    imports Struct, Type, Function
+      from CompilationUnit x
   	
-rules // Struct
+binding rules // Struct
 
   StructDecl(x, _) :
-  	defines Struct x of type Type(x) //in subsequent scope
-  	scopes Field
+  	defines Struct x of type Type(x) 
+  	 in subsequent scope
+  	 scope for Field
   	
   TypeDef(e, x) :
-  	defines Type x //in subsequent scope
+  	defines Type x in subsequent scope
   	
   Type(x) :
   	refers to Type x
-  	refers to Type "char"
-  	refers to Type "int"
-  	refers to Type "void"
   	
   StructRef(x) :
     refers to Struct x
   	
-rules // Variable
+binding rules // Variable
 
   Field(t, x) :
   	defines Field x of type t
   	
   VarDecl(t, x) :
-  	defines Variable x of type t //in subsequent scope
+  	defines Variable x of type t 
+      in subsequent scope
   	
   Param(t, x) :
   	defines Variable x of type t
@@ -67,14 +69,14 @@
   
   // TODO: Requires special lookup because of typedef loops.
   Access(e, f) :
-    refers to Field f /*in Struct t
-    where e has type Struct(t)*/
+    refers to Field f
   
-rules // Function
+binding rules // Function
 
   FunDecl(t, x, _, _) :
-  	defines Function x of type t //in subsequent scope
-  	scopes Variable
+  	defines Function x of type t 
+      in subsequent scope
+      scope for Variable
   	
   Call(x, _) :
   	refers to Function x

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/names.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/names.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/names.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -1,6 +1,9 @@
 module names
 
 imports
+  lib/analysis-library
+  lib/analysis-library-internal
+  lib/index-library
 
 
 imports
@@ -14,12 +17,6 @@
 
 signature
   constructors
-    Type        : DefDataKind
-    Import      : DefDataKind
-    Transitive  : ImportAnno
-    CurrentFile : ImportAnno
-
-  constructors
     CompilationUnit : Namespace
     Include         : Namespace
     Struct          : Namespace
@@ -31,274 +28,249 @@
 
 rules
 
-  nam-get-scope-types :
-    Start(x, _, _) -> [Struct(), Type(), Function()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Start(x, _, _) -> ( <Start(nam-annotate-def(|uri497), id, id)>
+                      , [Def(uri497)]
+                      , []
+                      )
+    where uri497 := [CompilationUnit(), x|<lookup-index-path> (CompilationUnit(), paths__)]
 
   nam-get-definition-keys :
     Start(x, _, _) -> [x]
 
-  nam-get-definitions :
-    Start(x, _, _) -> [(CompilationUnit(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Start(x, _, _) -> <Start(nam-annotate-def(|path__), id, id)>
-
-  nam-unique :
-    Start(x, _, _) -> <id>
+  nam-get-scope-types :
+    Start(x, _, _) -> [ (CompilationUnit(), x, Struct(), anon3495)
+                      , (CompilationUnit(), x, Type(), anon3495)
+                      , (CompilationUnit(), x, Function(), anon3495)
+                      ]
+    where anon3495 := Anon(<newname> "anon")
 
 
 rules
 
-  nam-get-definition-keys :
-    Include(x) -> [x]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Include(x) -> ( <Include(!import16)>
+                  , []
+                  , [ DefData(uri498, Import(), import16)
+                    , DefData(uri499, Import(), import16)
+                    , DefData(uri500, Import(), import16)
+                    ]
+                  )
+    where import16 := <nam-annotate-use(|paths'__, [CompilationUnit()])> x
+    where uri498 := [Struct()|<lookup-index-path> (Struct(), paths'__)]
+    where uri499 := [Type()|<lookup-index-path> (Type(), paths'__)]
+    where uri500 := [Function()|<lookup-index-path> (Function(), paths'__)]
 
-  nam-get-definitions :
-    Include(x) -> [(Include(), [x])]
-
-  nam-get-uses-keys :
+  nam-get-use-keys :
     Include(x) -> [x]
 
-  nam-get-uses :
-    Include(x) -> [(CompilationUnit(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Include(x) -> <Include(nam-annotate-def(|path__))>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Include(x) -> <store__> DefData(
-                              [Struct()|path__]
-                            , Import()
-                            , (x, [CurrentFile()])
-                            )
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Include(x) -> <store__> DefData(
-                              [Type()|path__]
-                            , Import()
-                            , (x, [CurrentFile()])
-                            )
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Include(x) -> <store__> DefData(
-                              [Function()|path__]
-                            , Import()
-                            , (x, [CurrentFile()])
-                            )
+  nam-resolve(target__|):
+    Include(x) -> [Regular(CompilationUnit(), x)]
+    where <target__> x
 
 
 rules
 
-  nam-get-scope-types :
-    StructDecl(x, _) -> [Field()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    StructDecl(x, _) -> ( <StructDecl(nam-annotate-def(|uri495), id)>
+                        , [Def(uri495)]
+                        , []
+                        )
+    where uri495 := [Struct(), x, subsequent__|<lookup-index-path> (Struct(), paths__)]
 
   nam-get-definition-keys :
     StructDecl(x, _) -> [x]
 
-  nam-get-definitions :
-    StructDecl(x, _) -> [(Struct(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    StructDecl(x, _) -> <StructDecl(nam-annotate-def(|path__), id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    StructDecl(x, _) -> <store__> DefData(
-                                    [namespace__|path__]
-                                  , Type()
-                                  , Type(x)
-                                  )
+  nam-get-scope-types :
+    StructDecl(x, _) -> [ (Struct(), x, Field(), anon3491)
+                        ]
+    where anon3491 := Anon(<newname> "anon")
 
-  type-of :
-    StructDecl(x, _) -> Type(x)
+  nam-ordered-def :
+    StructDecl(x, _) -> [Struct()]
 
-  nam-unique :
-    StructDecl(x, _) -> <id>
+  nam-get-type :
+    StructDecl(x, _) -> (x, Type(x))
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    TypeDef(e, x) -> ( <TypeDef(id, nam-annotate-def(|uri496))>
+                     , [Def(uri496)]
+                     , []
+                     )
+    where uri496 := [Type(), x, subsequent__|<lookup-index-path> (Type(), paths__)]
+
   nam-get-definition-keys :
     TypeDef(e, x) -> [x]
 
-  nam-get-definitions :
-    TypeDef(e, x) -> [(Type(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    TypeDef(e, x) -> <TypeDef(id, nam-annotate-def(|path__))>
-
-  nam-unique :
-    TypeDef(e, x) -> <id>
+  nam-ordered-def :
+    TypeDef(e, x) -> [Type()]
 
 
 rules
 
-  nam-get-uses-keys :
-    Type(x) -> [x, "char", "int", "void"]
-
-  nam-get-uses :
-    Type(x) -> [ (Type(), [x])
-               , (Type(), ["char"])
-               , (Type(), ["int"])
-               , (Type(), ["void"])
-               ]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Type(x) -> ( <Type(
+                    nam-annotate-use(|paths'__, [Type()])
+                  )>
+               , []
+               , []
+               )
 
-  nam-annotate-names(|paths__, path__):
-    Type(x) -> <Type(nam-annotate-use(|paths__, Type()))>
+  nam-get-use-keys :
+    Type(x) -> [x]
 
-  adjust-index-lookup(target__|namespace__, path__, prefix__):
-    Type(x) -> <concat> [ [[Type()|path__]]
-                        , [Def([Type(), "char"])]
-                        , [Def([Type(), "int"])]
-                        , [Def([Type(), "void"])]
-                        ]
+  nam-resolve(target__|):
+    Type(x) -> [Regular(Type(), x)]
     where <target__> x
 
 
 rules
 
-  nam-get-uses-keys :
-    StructRef(x) -> [x]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    StructRef(x) -> ( <StructRef(
+                         nam-annotate-use(|paths'__, [Struct()])
+                       )>
+                    , []
+                    , []
+                    )
 
-  nam-get-uses :
-    StructRef(x) -> [(Struct(), [x])]
+  nam-get-use-keys :
+    StructRef(x) -> [x]
 
-  nam-annotate-names(|paths__, path__):
-    StructRef(x) -> <StructRef(nam-annotate-use(|paths__, Struct()))>
+  nam-resolve(target__|):
+    StructRef(x) -> [Regular(Struct(), x)]
+    where <target__> x
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Field(t, x) -> ( <Field(id, nam-annotate-def(|uri492))>
+                   , [Def(uri492)]
+                   , []
+                   )
+    where uri492 := [Field(), x|<lookup-index-path> (Field(), paths__)]
+
   nam-get-definition-keys :
     Field(t, x) -> [x]
 
-  nam-get-definitions :
-    Field(t, x) -> [(Field(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Field(t, x) -> <Field(id, nam-annotate-def(|path__))>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Field(t, x) -> <store__> DefData(
-                               [namespace__|path__]
-                             , Type()
-                             , t
-                             )
-
-  type-of :
-    Field(t, x) -> t
-
-  nam-unique :
-    Field(t, x) -> <id>
+  nam-get-type :
+    Field(t, x) -> (x, t)
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    VarDecl(t, x) -> ( <VarDecl(id, nam-annotate-def(|uri493))>
+                     , [Def(uri493)]
+                     , []
+                     )
+    where uri493 := [Variable(), x, subsequent__|<lookup-index-path> (Variable(), paths__)]
+
   nam-get-definition-keys :
     VarDecl(t, x) -> [x]
 
-  nam-get-definitions :
-    VarDecl(t, x) -> [(Variable(), [x])]
+  nam-ordered-def :
+    VarDecl(t, x) -> [Variable()]
 
-  nam-annotate-names(|paths__, path__):
-    VarDecl(t, x) -> <VarDecl(id, nam-annotate-def(|path__))>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    VarDecl(t, x) -> <store__> DefData(
-                                 [namespace__|path__]
-                               , Type()
-                               , t
-                               )
-
-  type-of :
-    VarDecl(t, x) -> t
-
-  nam-unique :
-    VarDecl(t, x) -> <id>
+  nam-get-type :
+    VarDecl(t, x) -> (x, t)
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Param(t, x) -> ( <Param(id, nam-annotate-def(|uri494))>
+                   , [Def(uri494)]
+                   , []
+                   )
+    where uri494 := [Variable(), x|<lookup-index-path> (Variable(), paths__)]
+
   nam-get-definition-keys :
     Param(t, x) -> [x]
 
-  nam-get-definitions :
-    Param(t, x) -> [(Variable(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Param(t, x) -> <Param(id, nam-annotate-def(|path__))>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Param(t, x) -> <store__> DefData(
-                               [namespace__|path__]
-                             , Type()
-                             , t
-                             )
-
-  type-of :
-    Param(t, x) -> t
-
-  nam-unique :
-    Param(t, x) -> <id>
+  nam-get-type :
+    Param(t, x) -> (x, t)
 
 
 rules
 
-  nam-get-uses-keys :
-    VarRef(x) -> [x]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    VarRef(x) -> ( <VarRef(
+                      nam-annotate-use(|paths'__, [Variable()])
+                    )>
+                 , []
+                 , []
+                 )
 
-  nam-get-uses :
-    VarRef(x) -> [(Variable(), [x])]
+  nam-get-use-keys :
+    VarRef(x) -> [x]
 
-  nam-annotate-names(|paths__, path__):
-    VarRef(x) -> <VarRef(nam-annotate-use(|paths__, Variable()))>
+  nam-resolve(target__|):
+    VarRef(x) -> [Regular(Variable(), x)]
+    where <target__> x
 
 
 rules
 
-  nam-get-uses-keys :
-    Access(e, f) -> [f]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Access(e, f) -> ( <Access(
+                         id
+                       , nam-annotate-use(|paths'__, [Field()])
+                       )>
+                    , []
+                    , []
+                    )
 
-  nam-get-uses :
-    Access(e, f) -> [(Field(), [f])]
+  nam-get-use-keys :
+    Access(e, f) -> [f]
 
-  nam-annotate-names(|paths__, path__):
-    Access(e, f) -> <Access(id, nam-annotate-use(|paths__, Field()))>
+  nam-resolve(target__|):
+    Access(e, f) -> [Regular(Field(), f)]
+    where <target__> f
 
 
 rules
 
-  nam-get-scope-types :
-    FunDecl(t, x, _, _) -> [Variable()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    FunDecl(t, x, _, _) -> ( <FunDecl(id, nam-annotate-def(|uri491), id, id)>
+                           , [Def(uri491)]
+                           , []
+                           )
+    where uri491 := [Function(), x, subsequent__|<lookup-index-path> (Function(), paths__)]
 
   nam-get-definition-keys :
     FunDecl(t, x, _, _) -> [x]
 
-  nam-get-definitions :
-    FunDecl(t, x, _, _) -> [(Function(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    FunDecl(t, x, _, _) -> <FunDecl(id, nam-annotate-def(|path__), id, id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    FunDecl(t, x, _, _) -> <store__> DefData(
-                                       [namespace__|path__]
-                                     , Type()
-                                     , t
-                                     )
+  nam-get-scope-types :
+    FunDecl(t, x, _, _) -> [ (Function(), x, Variable(), anon3484)
+                           ]
+    where anon3484 := Anon(<newname> "anon")
 
-  type-of :
-    FunDecl(t, x, _, _) -> t
+  nam-ordered-def :
+    FunDecl(t, x, _, _) -> [Function()]
 
-  nam-unique :
-    FunDecl(t, x, _, _) -> <id>
+  nam-get-type :
+    FunDecl(t, x, _, _) -> (x, t)
 
 
 rules
 
-  nam-get-uses-keys :
-    Call(x, _) -> [x]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Call(x, _) -> ( <Call(
+                       nam-annotate-use(|paths'__, [Function()])
+                     , id
+                     )>
+                  , []
+                  , []
+                  )
 
-  nam-get-uses :
-    Call(x, _) -> [(Function(), [x])]
+  nam-get-use-keys :
+    Call(x, _) -> [x]
 
-  nam-annotate-names(|paths__, path__):
-    Call(x, _) -> <Call(nam-annotate-use(|paths__, Function()), id)>
\ No newline at end of file
+  nam-resolve(target__|):
+    Call(x, _) -> [Regular(Function(), x)]
+    where <target__> x
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/splitter.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/splitter.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/splitter.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -6,7 +6,8 @@
  
 rules
  
-  index-split = id
+  index-split = fail
+  
   index-is-toplevel = ?FunDecl(_, _, _, _)
   index-is-qualifier = ?Start(_, _)
   index-qualifier-subelements = ?Start(_, <id>)

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -15,18 +15,8 @@
   Struct      : Type -> Type
 
 rules // Type projections
-  	
-  type-of:
-    Pointer(x) -> Ptr(<type-of> x)
-  	
-  type-of:
-    Deref(x) -> type
-    where
-      Ptr(type) := <type-of> x
-  	
-  type-of:
-  	Ref(x) -> Ptr(<type-of> x)
 
+  // Primitives
   type-of:
     Void() -> Type("void")
 
@@ -41,6 +31,37 @@
     
   type-of:
     StrLit(_) -> <type-of> Pointer(Char())
+   
+  // Definitions
+  type-of:
+    StructDecl(x, _) -> Type(x)
+    
+  type-of:
+    TypeDef(_, t) -> t
+    
+  type-of:
+    Field(t, _) -> t
+   
+  type-of:
+    VarDecl(t, _) -> t
+    
+  type-of:
+    Param(t, _) -> t
+    
+  type-of:
+    FunDecl(t, _, _, _) -> t
+    
+  // Other
+  type-of:
+    Pointer(x) -> Ptr(<type-of> x)
+    
+  type-of:
+    Deref(x) -> type
+    where
+      Ptr(type) := <type-of> x
+    
+  type-of:
+    Ref(x) -> Ptr(<type-of> x)
     
   type-of:
     SizeOf(_) -> <type-of> Int()
@@ -48,20 +69,21 @@
   type-of:
     Cast(to, from) -> <type-of> to
   
+  // References
   type-of:
-    VarRef(v) -> <type-of> <index-lookup> v
+    VarRef(v) -> <type-of> <index-lookup-element> v
     
   type-of:
-    StructRef(s) -> <type-of> <index-lookup> s
+    StructRef(s) -> <type-of> <index-lookup-element> s
     
   type-of:
-    Access(_, p) -> <type-of> <index-lookup> p
+    Access(_, p) -> <type-of> <index-lookup-element> p
     
   type-of:
-    Assign(v, _) -> <type-of> <index-lookup> v
+    Assign(v, _) -> <type-of> <index-lookup-element> v
     
   type-of:
-    Call(f, _) -> <type-of> <index-lookup> f
+    Call(f, _) -> <type-of> <index-lookup-element> f
 
   type-of:
     Def(uri) -> type
@@ -99,12 +121,12 @@
       end
     
   try-lookup-struct = 
-    try(sometd(\Type(t) -> Type(<lookup-struct> <index-uri> <index-lookup> t)\))
+    try(sometd(\Type(t) -> Type(<lookup-struct> <index-uri> <index-lookup-element> t)\))
     
   try-get-struct-field(|prefix) =
     switch id
       case ?Type(_{uri}) :
-        (<index-lookup-children(|Field(), prefix)> <lookup-struct> uri) <+ ![]
+        (<index-lookup-child-prefix-element(|Field(), prefix)> <lookup-struct> uri) <+ ![]
       otherwise: 
         ![]
     end

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -71,7 +71,7 @@
     where
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       index-transaction(
-        target := <index-lookup> node
+        target := <index-lookup-element> node
       )
 
   // Returns "hover help" information for a particular node in the editor.
@@ -88,9 +88,9 @@
     where
       editor-init;
       (ast', _) := <analyze-top(|<language>)> (ast, path, project-path);
-      item at COMPLETION(name) := <collect-one(?COMPLETION(_))> ast';
+      item at COMPLETION(prefix) := <collect-one(?COMPLETION(_))> ast';
       index-transaction(
-        (<index-lookup-all(|name)> item <+ ![]) => proposals
+        (<index-lookup-prefix-element(|prefix)> item <+ ![]) => proposals
       );
       proposals' := <map(index-uri; index-uri-name)> proposals
       
@@ -100,6 +100,7 @@
   debug-generate-aterm:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       filename := <guarantee-extension(|"aterm")> path;
       result   := <desugar-all> selected
       
@@ -116,6 +117,7 @@
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       editor-init;
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       filename := <guarantee-extension(|"analyzed.aterm")> path;
       result   := <analyze-top(|<language>)> (<desugar-all> selected, path, project-path)   
       

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.nd
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.nd	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.nd	Fri Jul 20 21:17:40 2012	(r25220)
@@ -21,79 +21,80 @@
   
   Variable
   
-rules // Namespaces 
+binding rules // Namespaces 
 
   Namespace(x, _) :
     defines non-unique Namespace x
-    scopes Namespace, Class
+      scope for Namespace, Class
     
   UsingPart(x) :
-    defines non-unique Using x
-    refers to Namespace x
-    imports Class from Namespace x {current-file}
-    
-  UsingPart(u, x) :
-    refers to Namespace x in Namespace y
-    where u refers to Namespace y
+    imports Class 
+      from Namespace x
+      into subsequent scope
   
-rules // Classes
+binding rules // Classes
 
   Class(x, _) :
     defines unique Class x of type Type(x)
-    scopes Field, Function
+      scope for Field, Function
     
   Class(x, y, _) :
     defines unique Class x of type Type(x)
-    refers to Class y
-    scopes Field, Function
-    imports Field from Class y {transitive}
-    imports Function from Class y {transitive}
-    
+      scope for Field, Function
+    imports 
+      Field, imported Field,
+      Function, imported Function 
+      from Class y 
+
   Interface(x, _) :
     defines unique Class x of type Type(x)
-    scopes Function
+      scope for Function
     
   Interface(x, y, _) :
     defines unique Class x of type Type(x)
-    refers to Class y
-    scopes Function
-    imports Function from Class y {transitive}
+      scope for Function
+    imports 
+      Function, imported Function 
+      from Class y 
     
   PartialClass(x, _) :
     defines non-unique Class x of type Type(x)
-    scopes Field, Function
+      scope for Field, Function
     
   PartialClass(x, y, _) :
     defines non-unique Class x of type Type(x)
-    refers to Class y
-    scopes Field, Function
-    imports Field from Class y {transitive}
-    imports Function from Class y {transitive}
+      scope for Field, Function
+    imports 
+      Field, imported Field,
+      Function, imported Function 
+      from Class y 
 
   Type(c) :
   	refers to Class c
   	
-rules // Fields
+binding rules // Fields
 
   FieldDef(t, x) :
     defines Field x of type t 
     
-  FieldAccess(exp, f) :
-    refers to Field f in Class e
-    where exp has type Type(e)
+  // TODO: "where e has type t" doesn't work
+  // FieldAccess(exp, f) :
+  //   refers to Field f in Class e
+  //   where exp has type Type(e)
     
-rules // Functions
+binding rules // Functions
 
   FunDef(t, x, _) :
     defines Function x of type t
 
   FunDef(t, x, _, _) :
     defines Function x of type t 
-    scopes Variable, Field
-    
-  FunCall(exp, f, _) :
-    refers to Function f in Class e
-    where exp has type Type(e)
+      scope for Variable
+  
+  // TODO: "where e has type t" doesn't work  
+  // FunCall(exp, f, _) :
+  //   refers to Function f in Class e
+  //   where exp has type Type(e)
     
   FunCall(x, _) : 
     refers to Function x
@@ -101,30 +102,34 @@
   Param(t, x) :
     defines Variable x of type t 
     
-rules // Variables
+binding rules // Variables
 
   VarDef(t, x, _) :
-    defines Variable x of type t in subsequent scope 
+    defines Variable x of type t 
+      in subsequent scope 
 
   VarDef(t, x) :
-    defines Variable x of type t in subsequent scope 
+    defines Variable x of type t 
+      in subsequent scope 
 
   VarRef(x) :
     refers to Variable x
-    refers to Field x
+    otherwise refers to Field x
 
   Assign(x, _):
     refers to Variable x
-    refers to Field x
+    otherwise refers to Field x
     
-rules // Flow control
+binding rules // Flow control
 
   For(t, x, init, cond, stmt, body) :
-    defines Variable x of type t in cond, stmt, body
+    defines Variable x of type t 
+      in cond, stmt, body
 
   ForEach(t, x, e, body) :
-    defines Variable x of type t in body
+    defines Variable x of type t 
+      in body
 
   Block(stmt*) : 
-    scopes Variable
+    anonymous scope for Variable
     
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/names.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -1,6 +1,9 @@
 module names
 
 imports
+  lib/analysis-library
+  lib/analysis-library-internal
+  lib/index-library
 
 
 imports
@@ -13,12 +16,6 @@
 
 signature
   constructors
-    Type        : DefDataKind
-    Import      : DefDataKind
-    Transitive  : ImportAnno
-    CurrentFile : ImportAnno
-
-  constructors
     Program   : Namespace
     Namespace : Namespace
     Using     : Namespace
@@ -30,631 +27,460 @@
 
 rules
 
-  nam-get-scope-types :
-    Namespace(x, _) -> [Namespace(), Class()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Namespace(x, _) -> ( <Namespace(nam-annotate-def(|uri479), id)>
+                       , [Def(uri479)]
+                       , []
+                       )
+    where uri479 := [Namespace(), x|<lookup-index-path> (Namespace(), paths__)]
 
   nam-get-definition-keys :
     Namespace(x, _) -> [x]
 
-  nam-get-definitions :
-    Namespace(x, _) -> [(Namespace(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Namespace(x, _) -> <Namespace(nam-annotate-def(|path__), id)>
+  nam-get-scope-types :
+    Namespace(x, _) -> [ (Namespace(), x, Namespace(), ())
+                       , (Namespace(), x, Class(), ())
+                       ]
+    where anon2543 := Anon(<newname> "anon")
 
 
 rules
 
-  nam-get-definition-keys :
-    UsingPart(x) -> [x]
-
-  nam-get-definitions :
-    UsingPart(x) -> [(Using(), [x])]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    UsingPart(x) -> ( <UsingPart(!import14)>
+                    , []
+                    , [DefData(uri480, Import(), import14)]
+                    )
+    where import14 := <nam-annotate-use(|paths'__, [Namespace()])> x
+    where uri480 := [Class(), subsequent__|<lookup-index-path> (Class(), paths'__)]
 
-  nam-get-uses-keys :
+  nam-get-use-keys :
     UsingPart(x) -> [x]
 
-  nam-get-uses :
-    UsingPart(x) -> [(Namespace(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    UsingPart(x) -> <UsingPart(nam-annotate-def(|path__))>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    UsingPart(x) -> <store__> DefData(
-                                [Class()|path__]
-                              , Import()
-                              , (x, [CurrentFile()])
-                              )
-
-
-rules
-
-  nam-get-uses-keys :
-    UsingPart(u, x) -> [x]
-    where Def([Namespace()|y]) := <index-find-key ; index-lookup> u
-
-  nam-get-uses :
-    UsingPart(u, x) -> [(Namespace(), [x])]
-    where Def([Namespace()|y]) := <index-find-key ; index-lookup> u
-
-  nam-annotate-names(|paths__, path__):
-    UsingPart(u, x) -> <UsingPart(id, nam-annotate-use(|paths__, Namespace()))>
-
-  adjust-index-lookup(target__|namespace__, path__, prefix__):
-    UsingPart(u, x) -> <index-lookup-children(|Namespace(), prefix__)> y
+  nam-resolve(target__|):
+    UsingPart(x) -> [Regular(Namespace(), x)]
     where <target__> x
-    where Def([Namespace()|y]) := <index-find-key ; index-lookup> u
+
+  nam-ordered-def :
+    UsingPart(x) -> [Class()]
 
 
 rules
 
-  nam-get-scope-types :
-    Class(x, _) -> [Field(), Function()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Class(x, _) -> ( <Class(nam-annotate-def(|uri463), id)>
+                   , [Def(uri463)]
+                   , []
+                   )
+    where uri463 := [Class(), x|<lookup-index-path> (Class(), paths__)]
 
   nam-get-definition-keys :
     Class(x, _) -> [x]
 
-  nam-get-definitions :
-    Class(x, _) -> [(Class(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Class(x, _) -> <Class(nam-annotate-def(|path__), id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Class(x, _) -> <store__> DefData(
-                               [namespace__|path__]
-                             , Type()
-                             , Type(x)
-                             )
-
-  type-of :
-    Class(x, _) -> Type(x)
+  nam-get-scope-types :
+    Class(x, _) -> [ (Class(), x, Field(), anon2536)
+                   , (Class(), x, Function(), anon2536)
+                   ]
+    where anon2536 := Anon(<newname> "anon")
 
-  nam-unique :
-    Class(x, _) -> <id>
+  nam-get-type :
+    Class(x, _) -> (x, Type(x))
 
 
 rules
 
-  nam-get-scope-types :
-    Class(x, y, _) -> [Field(), Function()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Class(x, y, _) -> ( <Class(nam-annotate-def(|uri464), !import11, id)>
+                      , [Def(uri464)]
+                      , [ DefData(uri465, Import(), import11)
+                        , DefData(uri466, TImport(), import11)
+                        , DefData(uri467, Import(), import11)
+                        , DefData(uri468, TImport(), import11)
+                        ]
+                      )
+    where uri464 := [Class(), x|<lookup-index-path> (Class(), paths__)]
+    where import11 := <nam-annotate-use(|paths'__, [Class()])> y
+    where uri465 := [Field()|<lookup-index-path> (Field(), paths'__)]
+    where uri466 := [Field()|<lookup-index-path> (Field(), paths'__)]
+    where uri467 := [Function()|<lookup-index-path> (Function(), paths'__)]
+    where uri468 := [Function()|<lookup-index-path> (Function(), paths'__)]
 
   nam-get-definition-keys :
     Class(x, y, _) -> [x]
 
-  nam-get-definitions :
-    Class(x, y, _) -> [(Class(), [x])]
-
-  nam-get-uses-keys :
+  nam-get-use-keys :
     Class(x, y, _) -> [y]
 
-  nam-get-uses :
-    Class(x, y, _) -> [(Class(), [y])]
+  nam-resolve(target__|):
+    Class(x, y, _) -> [Regular(Class(), y)]
+    where <target__> y
 
-  nam-annotate-names(|paths__, path__):
-    Class(x, y, _) -> <Class(
-                         nam-annotate-def(|path__)
-                       , nam-annotate-use(|paths__, Class())
-                       , id
-                       )>
+  nam-get-scope-types :
+    Class(x, y, _) -> [ (Class(), x, Field(), anon2537)
+                      , (Class(), x, Function(), anon2537)
+                      ]
+    where anon2537 := Anon(<newname> "anon")
 
-  adjust-index-def-data(store__|namespace__, path__):
-    Class(x, y, _) -> <store__> DefData(
-                                  [namespace__|path__]
-                                , Type()
-                                , Type(x)
-                                )
-
-  type-of :
-    Class(x, y, _) -> Type(x)
-
-  nam-unique :
-    Class(x, y, _) -> <id>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Class(x, y, _) -> <store__> DefData(
-                                  [Field()|path__]
-                                , Import()
-                                , (y, [Transitive()])
-                                )
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Class(x, y, _) -> <store__> DefData(
-                                  [Function()|path__]
-                                , Import()
-                                , (y, [Transitive()])
-                                )
+  nam-get-type :
+    Class(x, y, _) -> (x, Type(x))
 
 
 rules
 
-  nam-get-scope-types :
-    Interface(x, _) -> [Function()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Interface(x, _) -> ( <Interface(nam-annotate-def(|uri469), id)>
+                       , [Def(uri469)]
+                       , []
+                       )
+    where uri469 := [Class(), x|<lookup-index-path> (Class(), paths__)]
 
   nam-get-definition-keys :
     Interface(x, _) -> [x]
 
-  nam-get-definitions :
-    Interface(x, _) -> [(Class(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Interface(x, _) -> <Interface(nam-annotate-def(|path__), id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Interface(x, _) -> <store__> DefData(
-                                   [namespace__|path__]
-                                 , Type()
-                                 , Type(x)
-                                 )
-
-  type-of :
-    Interface(x, _) -> Type(x)
+  nam-get-scope-types :
+    Interface(x, _) -> [ (Class(), x, Function(), anon2538)
+                       ]
+    where anon2538 := Anon(<newname> "anon")
 
-  nam-unique :
-    Interface(x, _) -> <id>
+  nam-get-type :
+    Interface(x, _) -> (x, Type(x))
 
 
 rules
 
-  nam-get-scope-types :
-    Interface(x, y, _) -> [Function()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Interface(x, y, _) -> ( <Interface(nam-annotate-def(|uri470), !import12, id)>
+                          , [Def(uri470)]
+                          , [ DefData(uri471, Import(), import12)
+                            , DefData(uri472, TImport(), import12)
+                            ]
+                          )
+    where uri470 := [Class(), x|<lookup-index-path> (Class(), paths__)]
+    where import12 := <nam-annotate-use(|paths'__, [Class()])> y
+    where uri471 := [Function()|<lookup-index-path> (Function(), paths'__)]
+    where uri472 := [Function()|<lookup-index-path> (Function(), paths'__)]
 
   nam-get-definition-keys :
     Interface(x, y, _) -> [x]
 
-  nam-get-definitions :
-    Interface(x, y, _) -> [(Class(), [x])]
-
-  nam-get-uses-keys :
+  nam-get-use-keys :
     Interface(x, y, _) -> [y]
 
-  nam-get-uses :
-    Interface(x, y, _) -> [(Class(), [y])]
+  nam-resolve(target__|):
+    Interface(x, y, _) -> [Regular(Class(), y)]
+    where <target__> y
+
+  nam-get-scope-types :
+    Interface(x, y, _) -> [ (Class(), x, Function(), anon2539)
+                          ]
+    where anon2539 := Anon(<newname> "anon")
 
-  nam-annotate-names(|paths__, path__):
-    Interface(x, y, _) -> <Interface(
-                             nam-annotate-def(|path__)
-                           , nam-annotate-use(|paths__, Class())
-                           , id
-                           )>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Interface(x, y, _) -> <store__> DefData(
-                                      [namespace__|path__]
-                                    , Type()
-                                    , Type(x)
-                                    )
-
-  type-of :
-    Interface(x, y, _) -> Type(x)
-
-  nam-unique :
-    Interface(x, y, _) -> <id>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Interface(x, y, _) -> <store__> DefData(
-                                      [Function()|path__]
-                                    , Import()
-                                    , (y, [Transitive()])
-                                    )
+  nam-get-type :
+    Interface(x, y, _) -> (x, Type(x))
 
 
 rules
 
-  nam-get-scope-types :
-    PartialClass(x, _) -> [Field(), Function()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    PartialClass(x, _) -> ( <PartialClass(nam-annotate-def(|uri473), id)>
+                          , [Def(uri473)]
+                          , []
+                          )
+    where uri473 := [Class(), x|<lookup-index-path> (Class(), paths__)]
 
   nam-get-definition-keys :
     PartialClass(x, _) -> [x]
 
-  nam-get-definitions :
-    PartialClass(x, _) -> [(Class(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    PartialClass(x, _) -> <PartialClass(nam-annotate-def(|path__), id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    PartialClass(x, _) -> <store__> DefData(
-                                      [namespace__|path__]
-                                    , Type()
-                                    , Type(x)
-                                    )
+  nam-get-scope-types :
+    PartialClass(x, _) -> [ (Class(), x, Field(), ())
+                          , (Class(), x, Function(), ())
+                          ]
+    where anon2540 := Anon(<newname> "anon")
 
-  type-of :
-    PartialClass(x, _) -> Type(x)
+  nam-get-type :
+    PartialClass(x, _) -> (x, Type(x))
 
 
 rules
 
-  nam-get-scope-types :
-    PartialClass(x, y, _) -> [Field(), Function()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    PartialClass(x, y, _) -> ( <PartialClass(nam-annotate-def(|uri474), !import13, id)>
+                             , [Def(uri474)]
+                             , [ DefData(uri475, Import(), import13)
+                               , DefData(uri476, TImport(), import13)
+                               , DefData(uri477, Import(), import13)
+                               , DefData(uri478, TImport(), import13)
+                               ]
+                             )
+    where uri474 := [Class(), x|<lookup-index-path> (Class(), paths__)]
+    where import13 := <nam-annotate-use(|paths'__, [Class()])> y
+    where uri475 := [Field()|<lookup-index-path> (Field(), paths'__)]
+    where uri476 := [Field()|<lookup-index-path> (Field(), paths'__)]
+    where uri477 := [Function()|<lookup-index-path> (Function(), paths'__)]
+    where uri478 := [Function()|<lookup-index-path> (Function(), paths'__)]
 
   nam-get-definition-keys :
     PartialClass(x, y, _) -> [x]
 
-  nam-get-definitions :
-    PartialClass(x, y, _) -> [(Class(), [x])]
-
-  nam-get-uses-keys :
+  nam-get-use-keys :
     PartialClass(x, y, _) -> [y]
 
-  nam-get-uses :
-    PartialClass(x, y, _) -> [(Class(), [y])]
+  nam-resolve(target__|):
+    PartialClass(x, y, _) -> [Regular(Class(), y)]
+    where <target__> y
 
-  nam-annotate-names(|paths__, path__):
-    PartialClass(x, y, _) -> <PartialClass(
-                                nam-annotate-def(|path__)
-                              , nam-annotate-use(|paths__, Class())
-                              , id
-                              )>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    PartialClass(x, y, _) -> <store__> DefData(
-                                         [namespace__|path__]
-                                       , Type()
-                                       , Type(x)
-                                       )
-
-  type-of :
-    PartialClass(x, y, _) -> Type(x)
-
-  adjust-index-def-data(store__|namespace__, path__):
-    PartialClass(x, y, _) -> <store__> DefData(
-                                         [Field()|path__]
-                                       , Import()
-                                       , (y, [Transitive()])
-                                       )
-
-  adjust-index-def-data(store__|namespace__, path__):
-    PartialClass(x, y, _) -> <store__> DefData(
-                                         [Function()|path__]
-                                       , Import()
-                                       , (y, [Transitive()])
-                                       )
+  nam-get-scope-types :
+    PartialClass(x, y, _) -> [ (Class(), x, Field(), ())
+                             , (Class(), x, Function(), ())
+                             ]
+    where anon2541 := Anon(<newname> "anon")
+
+  nam-get-type :
+    PartialClass(x, y, _) -> (x, Type(x))
 
 
 rules
 
-  nam-get-uses-keys :
-    Type(c) -> [c]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Type(c) -> ( <Type(
+                    nam-annotate-use(|paths'__, [Class()])
+                  )>
+               , []
+               , []
+               )
 
-  nam-get-uses :
-    Type(c) -> [(Class(), [c])]
+  nam-get-use-keys :
+    Type(c) -> [c]
 
-  nam-annotate-names(|paths__, path__):
-    Type(c) -> <Type(nam-annotate-use(|paths__, Class()))>
+  nam-resolve(target__|):
+    Type(c) -> [Regular(Class(), c)]
+    where <target__> c
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    FieldDef(t, x) -> ( <FieldDef(id, nam-annotate-def(|uri462))>
+                      , [Def(uri462)]
+                      , []
+                      )
+    where uri462 := [Field(), x|<lookup-index-path> (Field(), paths__)]
+
   nam-get-definition-keys :
     FieldDef(t, x) -> [x]
 
-  nam-get-definitions :
-    FieldDef(t, x) -> [(Field(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    FieldDef(t, x) -> <FieldDef(id, nam-annotate-def(|path__))>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    FieldDef(t, x) -> <store__> DefData(
-                                  [namespace__|path__]
-                                , Type()
-                                , t
-                                )
-
-  type-of :
-    FieldDef(t, x) -> t
-
-  nam-unique :
-    FieldDef(t, x) -> <id>
+  nam-get-type :
+    FieldDef(t, x) -> (x, t)
 
 
 rules
 
-  nam-get-uses-keys :
-    FieldAccess(exp, f) -> [f]
-    where Type(e) := <type-of> exp
-
-  nam-get-uses :
-    FieldAccess(exp, f) -> [(Field(), [f])]
-    where Type(e) := <type-of> exp
-
-  nam-annotate-names(|paths__, path__):
-    FieldAccess(exp, f) -> <FieldAccess(id, nam-annotate-use(|paths__, Field()))>
-
-  adjust-index-lookup(target__|namespace__, path__, prefix__):
-    FieldAccess(exp, f) -> <index-lookup-children(|Field(), prefix__)> e
-    where <target__> f
-    where Type(e) := <type-of> exp
-
-
-rules
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    FunDef(t, x, _) -> ( <FunDef(id, nam-annotate-def(|uri459), id)>
+                       , [Def(uri459)]
+                       , []
+                       )
+    where uri459 := [Function(), x|<lookup-index-path> (Function(), paths__)]
 
   nam-get-definition-keys :
     FunDef(t, x, _) -> [x]
 
-  nam-get-definitions :
-    FunDef(t, x, _) -> [(Function(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    FunDef(t, x, _) -> <FunDef(id, nam-annotate-def(|path__), id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    FunDef(t, x, _) -> <store__> DefData(
-                                   [namespace__|path__]
-                                 , Type()
-                                 , t
-                                 )
-
-  type-of :
-    FunDef(t, x, _) -> t
-
-  nam-unique :
-    FunDef(t, x, _) -> <id>
+  nam-get-type :
+    FunDef(t, x, _) -> (x, t)
 
 
 rules
 
-  nam-get-scope-types :
-    FunDef(t, x, _, _) -> [Variable(), Field()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    FunDef(t, x, _, _) -> ( <FunDef(id, nam-annotate-def(|uri460), id, id)>
+                          , [Def(uri460)]
+                          , []
+                          )
+    where uri460 := [Function(), x|<lookup-index-path> (Function(), paths__)]
 
   nam-get-definition-keys :
     FunDef(t, x, _, _) -> [x]
 
-  nam-get-definitions :
-    FunDef(t, x, _, _) -> [(Function(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    FunDef(t, x, _, _) -> <FunDef(id, nam-annotate-def(|path__), id, id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    FunDef(t, x, _, _) -> <store__> DefData(
-                                      [namespace__|path__]
-                                    , Type()
-                                    , t
-                                    )
-
-  type-of :
-    FunDef(t, x, _, _) -> t
+  nam-get-scope-types :
+    FunDef(t, x, _, _) -> [ (Function(), x, Variable(), anon2532)
+                          ]
+    where anon2532 := Anon(<newname> "anon")
 
-  nam-unique :
-    FunDef(t, x, _, _) -> <id>
+  nam-get-type :
+    FunDef(t, x, _, _) -> (x, t)
 
 
 rules
 
-  nam-get-uses-keys :
-    FunCall(exp, f, _) -> [f]
-    where Type(e) := <type-of> exp
-
-  nam-get-uses :
-    FunCall(exp, f, _) -> [(Function(), [f])]
-    where Type(e) := <type-of> exp
-
-  nam-annotate-names(|paths__, path__):
-    FunCall(exp, f, _) -> <FunCall(
-                             id
-                           , nam-annotate-use(|paths__, Function())
-                           , id
-                           )>
-
-  adjust-index-lookup(target__|namespace__, path__, prefix__):
-    FunCall(exp, f, _) -> <index-lookup-children(|Function(), prefix__)> e
-    where <target__> f
-    where Type(e) := <type-of> exp
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    FunCall(x, _) -> ( <FunCall(
+                          nam-annotate-use(|paths'__, [Function()])
+                        , id
+                        )>
+                     , []
+                     , []
+                     )
 
-
-rules
-
-  nam-get-uses-keys :
+  nam-get-use-keys :
     FunCall(x, _) -> [x]
 
-  nam-get-uses :
-    FunCall(x, _) -> [(Function(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    FunCall(x, _) -> <FunCall(nam-annotate-use(|paths__, Function()), id)>
+  nam-resolve(target__|):
+    FunCall(x, _) -> [Regular(Function(), x)]
+    where <target__> x
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Param(t, x) -> ( <Param(id, nam-annotate-def(|uri461))>
+                   , [Def(uri461)]
+                   , []
+                   )
+    where uri461 := [Variable(), x|<lookup-index-path> (Variable(), paths__)]
+
   nam-get-definition-keys :
     Param(t, x) -> [x]
 
-  nam-get-definitions :
-    Param(t, x) -> [(Variable(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Param(t, x) -> <Param(id, nam-annotate-def(|path__))>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Param(t, x) -> <store__> DefData(
-                               [namespace__|path__]
-                             , Type()
-                             , t
-                             )
-
-  type-of :
-    Param(t, x) -> t
-
-  nam-unique :
-    Param(t, x) -> <id>
+  nam-get-type :
+    Param(t, x) -> (x, t)
 
 
 rules
 
-  nam-ordered-def :
-    VarDef(t, x, _) -> <id>
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    VarDef(t, x, _) -> ( <VarDef(id, nam-annotate-def(|uri457), id)>
+                       , [Def(uri457)]
+                       , []
+                       )
+    where uri457 := [Variable(), x, subsequent__|<lookup-index-path> (Variable(), paths__)]
 
   nam-get-definition-keys :
     VarDef(t, x, _) -> [x]
 
-  nam-get-definitions :
-    VarDef(t, x, _) -> [ ( Variable()
-                         , [x, Anon(<new>)]
-                         )
-                       ]
-
-  nam-annotate-names(|paths__, path__):
-    VarDef(t, x, _) -> <VarDef(id, nam-annotate-def(|path__), id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    VarDef(t, x, _) -> <store__> DefData(
-                                   [namespace__|path__]
-                                 , Type()
-                                 , t
-                                 )
-
-  type-of :
-    VarDef(t, x, _) -> t
+  nam-ordered-def :
+    VarDef(t, x, _) -> [Variable()]
 
-  nam-unique :
-    VarDef(t, x, _) -> <id>
+  nam-get-type :
+    VarDef(t, x, _) -> (x, t)
 
 
 rules
 
-  nam-ordered-def :
-    VarDef(t, x) -> <id>
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    VarDef(t, x) -> ( <VarDef(id, nam-annotate-def(|uri458))>
+                    , [Def(uri458)]
+                    , []
+                    )
+    where uri458 := [Variable(), x, subsequent__|<lookup-index-path> (Variable(), paths__)]
 
   nam-get-definition-keys :
     VarDef(t, x) -> [x]
 
-  nam-get-definitions :
-    VarDef(t, x) -> [ ( Variable()
-                      , [x, Anon(<new>)]
-                      )
-                    ]
-
-  nam-annotate-names(|paths__, path__):
-    VarDef(t, x) -> <VarDef(id, nam-annotate-def(|path__))>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    VarDef(t, x) -> <store__> DefData(
-                                [namespace__|path__]
-                              , Type()
-                              , t
-                              )
-
-  type-of :
-    VarDef(t, x) -> t
+  nam-ordered-def :
+    VarDef(t, x) -> [Variable()]
 
-  nam-unique :
-    VarDef(t, x) -> <id>
+  nam-get-type :
+    VarDef(t, x) -> (x, t)
 
 
 rules
 
-  nam-get-uses-keys :
-    VarRef(x) -> [x]
-
-  nam-get-uses :
-    VarRef(x) -> [ (Variable(), [x])
-                 , (Field(), [x])
-                 ]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    VarRef(x) -> ( <VarRef(
+                      nam-annotate-use(
+                      | paths'__
+                      , [Variable(), Field()]
+                      )
+                    )>
+                 , []
+                 , []
+                 )
 
-  nam-annotate-names(|paths__, path__):
-    VarRef(x) -> <VarRef(nam-annotate-use(|paths__, Variable()))>
+  nam-get-use-keys :
+    VarRef(x) -> [x]
 
-  adjust-index-lookup(target__|namespace__, path__, prefix__):
-    VarRef(x) -> [ [Variable()|path__]
-                 , [Field()|path__]
+  nam-resolve(target__|):
+    VarRef(x) -> [ Regular(Variable(), x)
+                 , Regular(Field(), x)
                  ]
     where <target__> x
 
 
 rules
 
-  nam-get-uses-keys :
-    Assign(x, _) -> [x]
-
-  nam-get-uses :
-    Assign(x, _) -> [ (Variable(), [x])
-                    , (Field(), [x])
-                    ]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Assign(x, _) -> ( <Assign(
+                         nam-annotate-use(
+                         | paths'__
+                         , [Variable(), Field()]
+                         )
+                       , id
+                       )>
+                    , []
+                    , []
+                    )
 
-  nam-annotate-names(|paths__, path__):
-    Assign(x, _) -> <Assign(nam-annotate-use(|paths__, Variable()), id)>
+  nam-get-use-keys :
+    Assign(x, _) -> [x]
 
-  adjust-index-lookup(target__|namespace__, path__, prefix__):
-    Assign(x, _) -> [ [Variable()|path__]
-                    , [Field()|path__]
+  nam-resolve(target__|):
+    Assign(x, _) -> [ Regular(Variable(), x)
+                    , Regular(Field(), x)
                     ]
     where <target__> x
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    For(t, x, init, cond, stmt, body) -> ( <For(
+                                              id
+                                            , nam-annotate-def(|uri455)
+                                            , id
+                                            , nam-annotate-scope(|[uri455])
+                                            , nam-annotate-scope(|[uri455])
+                                            , nam-annotate-scope(|[uri455])
+                                            )>
+                                         , [Def(uri455)]
+                                         , []
+                                         )
+    where uri455 := [Variable(), x, Anon(<newname> "anon")|<lookup-index-path> (Variable(), paths__)]
+
   nam-get-definition-keys :
     For(t, x, init, cond, stmt, body) -> [x]
 
-  nam-get-definitions :
-    For(t, x, init, cond, stmt, body) -> [ ( Variable()
-                                           , [x, Anon(<new>)]
-                                           )
-                                         ]
-
-  nam-annotate-scopes(|path__):
-    For(t, x, init, cond, stmt, body) -> <For(
-                                            id
-                                          , id
-                                          , id
-                                          , nam-annotate-scope(|path__)
-                                          , nam-annotate-scope(|path__)
-                                          , nam-annotate-scope(|path__)
-                                          )>
-
-  nam-annotate-names(|paths__, path__):
-    For(t, x, init, cond, stmt, body) -> <For(id, nam-annotate-def(|path__), id, id, id, id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    For(t, x, init, cond, stmt, body) -> <store__> DefData(
-                                                     [namespace__|path__]
-                                                   , Type()
-                                                   , t
-                                                   )
-
-  type-of :
-    For(t, x, init, cond, stmt, body) -> t
-
-  nam-unique :
-    For(t, x, init, cond, stmt, body) -> <id>
+  nam-get-type :
+    For(t, x, init, cond, stmt, body) -> (x, t)
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    ForEach(t, x, e, body) -> ( <ForEach(
+                                   id
+                                 , nam-annotate-def(|uri456)
+                                 , id
+                                 , nam-annotate-scope(|[uri456])
+                                 )>
+                              , [Def(uri456)]
+                              , []
+                              )
+    where uri456 := [Variable(), x, Anon(<newname> "anon")|<lookup-index-path> (Variable(), paths__)]
+
   nam-get-definition-keys :
     ForEach(t, x, e, body) -> [x]
 
-  nam-get-definitions :
-    ForEach(t, x, e, body) -> [ ( Variable()
-                                , [x, Anon(<new>)]
-                                )
-                              ]
-
-  nam-annotate-scopes(|path__):
-    ForEach(t, x, e, body) -> <ForEach(id, id, id, nam-annotate-scope(|path__))>
-
-  nam-annotate-names(|paths__, path__):
-    ForEach(t, x, e, body) -> <ForEach(id, nam-annotate-def(|path__), id, id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    ForEach(t, x, e, body) -> <store__> DefData(
-                                          [namespace__|path__]
-                                        , Type()
-                                        , t
-                                        )
-
-  type-of :
-    ForEach(t, x, e, body) -> t
-
-  nam-unique :
-    ForEach(t, x, e, body) -> <id>
+  nam-get-type :
+    ForEach(t, x, e, body) -> (x, t)
 
 
 rules
 
   nam-get-scope-types :
-    Block(stmt*) -> [Variable()]
\ No newline at end of file
+    Block(stmt*) -> [ ( Variable()
+                      , Anon(<newname> "anon")
+                      , Variable()
+                      , ()
+                      )
+                    ]
+    where anon2526 := Anon(<newname> "anon")
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/splitter.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/splitter.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/splitter.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -14,7 +14,7 @@
 rules // Splitter configuration
  
   // Enable AST splitting by analyze-top for compilation of top level units.
-  index-split = id
+  index-split = fail
   
   // Top level units
   index-is-toplevel = ?Class(_, _)

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -5,6 +5,7 @@
   include/CSharpPartialClassses
   lib/index-library
   lib/analysis-library
+  lib/analysis-library-internal
   names
 
 signature constructors
@@ -15,10 +16,8 @@
   VoidType   : Type
 
 rules // Type projections
-    
-  type-of:
-    Return(e) -> <type-of> e  
 
+  // Primitives
   type-of:
     True() -> <type-of> BoolType()
     
@@ -43,23 +42,65 @@
   type-of:
     VoidType() -> VoidType()
   
+  // Definitions
+  type-of:
+  	Class(x, _) -> x
+  	
+  type-of:
+    Class(x, _, _) -> x
+    
+  type-of:
+    PartialClass(x, _) -> x
+    
+  type-of:
+    PartialClass(x, _, _) -> x
+  
+  type-of:
+  	Interface(x, _) -> x
+  	
+  type-of:
+    Interface(x, _, _) -> x
+  
+  type-of:  
+    FieldDef(t, _) -> t
+    
+  type-of:
+  	FunDef(t, _, _) -> t
+  	
+  type-of:
+  	FunDef(t, _, _, _) -> t
+  	
+  type-of:
+  	Param(t, _) -> t
+  	
+  type-of:
+    VarDef(t, _) -> t
+    
+  type-of:
+    VarDef(t, _, _) -> t
+  
+  // Other
+  type-of:
+    Return(e) -> <type-of> e  
+  
+  // References
   type-of:
-    VarRef(f) -> <type-of> <index-lookup> f
+    VarRef(f) -> <type-of> <index-lookup-element> f
   
   type-of:
-    FieldAccess(e, f) -> <type-of> <index-lookup> f
+    FieldAccess(e, f) -> <type-of> <index-lookup-element> f
     
   type-of:
-    FunCall(e, m, _) -> <type-of> <index-lookup> m
+    FunCall(e, m, _) -> <type-of> <index-lookup-element> m
     
   type-of:
-    FunCall(m, _) -> <type-of> <index-lookup> m
+    FunCall(m, _) -> <type-of> <index-lookup-element> m
 
   // Lazy resolving of types because index-lookup during use analysis on data fails for imports.
   type-of:
-    Type(t{[Unresolved(Class())|_]}) -> Type(name{uri})
+    Type(t@<index-uri-is-unresolved>) -> Type(name{uri})
     where
-      Def(uri) := <index-lookup> t;
+      Def(uri) := <index-lookup-element> t;
       name := <strip-annos> t
       
   type-of:

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.ewa
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.ewa	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.ewa	Fri Jul 20 21:17:40 2012	(r25220)
@@ -2,7 +2,7 @@
 
 entity Ent2
 {
-	mEnt : Ent1 
+	mEnt : Ent1
 	
 	Print() {
 		var tst : String = mEnt.mValue

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -23,6 +23,8 @@
       type2 := <type-of> exp;
       not(<is-assignable-to> (type1, type2))
   
+  constraint-error = fail
+  
 rules // Other
   
   constraint-warning = fail

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -13,7 +13,7 @@
   lib/nbl-library
   check
   generate
-  generate-test
+  //generate-test
   splitter
   print-index-libraries
   names
@@ -72,7 +72,7 @@
     where
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       index-transaction(
-        target := <index-lookup> node
+        target := <index-lookup-element> node
       )
 
   // Returns "hover help" information for a particular node in the editor.
@@ -89,9 +89,9 @@
     where
       editor-init;
       (ast', _) := <analyze-top(|<language>)> (ast, path, project-path);
-      item at COMPLETION(name) := <collect-one(?COMPLETION(_))> ast';
+      item at COMPLETION(prefix) := <collect-one(?COMPLETION(_))> ast';
       index-transaction(
-        (<index-lookup-all(|name)> item <+ ![]) => proposals
+        (<index-lookup-prefix-element(|prefix)> item <+ ![]) => proposals
       );
       proposals' := <map(index-uri; index-uri-name)> proposals
 
@@ -156,13 +156,16 @@
     with
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       index-reload
-      
+  
+  // TODO: Broken, adapt to new index library.    
   // Generates random test files.  
+  /*
   debug-generate-test-files:
     (selected, position, ast, path, project-path) -> None()
     with
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       <testgen> (selected, position, ast, path, project-path)
+  */
     
 rules // Utility
   

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -20,6 +20,7 @@
     
 rules // Store advices and pointcuts for code generation
     
+/*
   adjust-index-def-data(store-results |namespace, path):
     Pointcut(_, _, type) -> <store-results> Pointcut([namespace | path], type)
       
@@ -186,3 +187,4 @@
       StringType() -> "String"
     to-java: 
       IntType() -> "int"
+*/

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/names.nd
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/names.nd	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/names.nd	Fri Jul 20 21:17:40 2012	(r25220)
@@ -22,11 +22,16 @@
   
   Variable
 
-rules // Module
+binding rules // Primitives
+
+  predefined Entity "Int"
+  predefined Entity "String"
+
+binding rules // Module
 
   Module(x, _, _) :
   	defines non-unique Module x
-  	scopes Entity, Aspect
+      scope for Entity, Aspect
  
   EntityImport(m, e) :
     refers to Module m
@@ -34,56 +39,55 @@
     // TODO: Import one entity
     
   WildcardImport(m) :
-    defines Import m
-    refers to Module m
-    imports Entity from Module m {current-file}
+    imports Entity
+      from Module m
+      into subsequent scope
      
-rules // Aspect
+binding rules // Aspect
 
   Aspect(x, _) :
   	defines Aspect x
-  	scopes Pointcut, Advice
+      scope for Pointcut, Advice
   	
   Pointcut(x, _, _) :
   	defines Pointcut x
-  	scopes Variable
+      scope for Variable
   	
   Advice(x, _, _, p, _, _) :
-    defines non-unique Advice x
     refers to Pointcut p
-    scopes Variable
+    defines non-unique Advice x
+      scope for Variable
  
-rules // Entity
+binding rules // Entity
 
   Entity(x, _) :
   	defines Entity x of type Type(x)
-  	scopes Property, Function
+      scope for Property, Function
   	
   Type(x) :
-    refers to Entity x
-  	refers to Entity "Int"
-  	refers to Entity "String"  	
+    refers to Entity x	
   	
-rules // Property
+binding rules // Property
 
   Property(x, t) :
     defines Property x of type t
     
-	PropAccess(e, x) :
-	  refers to Property x in Entity t
-    where e has type Type(t)
+  // TODO: "where e has type t" doesn't work
+	//PropAccess(e, x) :
+	//  refers to Property x in Entity t
+  //  where e has type Type(t)
 
-rules // Function
+binding rules // Function
 
   Function(x, _, _) :
     defines Function x
-    scopes Variable, Property
+      scope for Variable, Property
     // TODO: Remove Property namespace from scope
     
   Call(x, _) :
   	refers to Function x
 
-rules // Variable
+binding rules // Variable
 
   VarDecl(x, t) :
   	defines Variable x of type t
@@ -96,11 +100,11 @@
   	
   Var(x) :
   	refers to Variable x
-  	refers to Property x
+  	otherwise refers to Property x
   	
-rules // Control flow
+binding rules // Control flow
 
   Block(_) :
-  	scopes Variable, Property
+  	anonymous scope for Variable, Property
   	// TODO: Remove Property namespace from scope
   
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/names.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/names.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/names.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -1,6 +1,9 @@
 module names
 
 imports
+  lib/analysis-library
+  lib/analysis-library-internal
+  lib/index-library
 
 
 imports
@@ -12,12 +15,6 @@
 
 signature
   constructors
-    Type        : DefDataKind
-    Import      : DefDataKind
-    Transitive  : ImportAnno
-    CurrentFile : ImportAnno
-
-  constructors
     Module   : Namespace
     Import   : Namespace
     Aspect   : Namespace
@@ -31,349 +28,297 @@
 
 rules
 
-  nam-get-scope-types :
-    Module(x, _, _) -> [Entity(), Aspect()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Module(x, _, _) -> ( <Module(nam-annotate-def(|uri405), id, id)>
+                       , [Def(uri405)]
+                       , []
+                       )
+    where uri405 := [Module(), x|<lookup-index-path> (Module(), paths__)]
 
   nam-get-definition-keys :
     Module(x, _, _) -> [x]
 
-  nam-get-definitions :
-    Module(x, _, _) -> [(Module(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Module(x, _, _) -> <Module(nam-annotate-def(|path__), id, id)>
+  nam-get-scope-types :
+    Module(x, _, _) -> [ (Module(), x, Entity(), ())
+                       , (Module(), x, Aspect(), ())
+                       ]
+    where anon836 := Anon(<newname> "anon")
 
 
 rules
 
-  nam-get-uses-keys :
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    EntityImport(m, e) -> ( <EntityImport(
+                               nam-annotate-use(|paths'__, [Module()])
+                             , nam-annotate-use(|paths'__, [Entity()])
+                             )>
+                          , []
+                          , []
+                          )
+
+  nam-get-use-keys :
     EntityImport(m, e) -> [m, e]
 
-  nam-get-uses :
-    EntityImport(m, e) -> [ (Module(), [m])
-                          , (Entity(), [e])
-                          ]
-
-  nam-annotate-names(|paths__, path__):
-    EntityImport(m, e) -> <EntityImport(
-                             nam-annotate-use(|paths__, Module())
-                           , nam-annotate-use(|paths__, Entity())
-                           )>
-
-  adjust-index-lookup(target__|namespace__, path__, prefix__):
-    EntityImport(m, e) -> [ [Module()|path__]
-                          , [Entity()|path__]
-                          ]
+  nam-resolve(target__|):
+    EntityImport(m, e) -> [Regular(Module(), m)]
     where <target__> m
 
+  nam-resolve(target__|):
+    EntityImport(m, e) -> [Regular(Entity(), e)]
+    where <target__> e
 
-rules
 
-  nam-get-definition-keys :
-    WildcardImport(m) -> [m]
+rules
 
-  nam-get-definitions :
-    WildcardImport(m) -> [(Import(), [m])]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    WildcardImport(m) -> ( <WildcardImport(!import2)>
+                         , []
+                         , [DefData(uri406, Import(), import2)]
+                         )
+    where import2 := <nam-annotate-use(|paths'__, [Module()])> m
+    where uri406 := [Entity(), subsequent__|<lookup-index-path> (Entity(), paths'__)]
 
-  nam-get-uses-keys :
+  nam-get-use-keys :
     WildcardImport(m) -> [m]
 
-  nam-get-uses :
-    WildcardImport(m) -> [(Module(), [m])]
-
-  nam-annotate-names(|paths__, path__):
-    WildcardImport(m) -> <WildcardImport(nam-annotate-def(|path__))>
-
-  nam-unique :
-    WildcardImport(m) -> <id>
+  nam-resolve(target__|):
+    WildcardImport(m) -> [Regular(Module(), m)]
+    where <target__> m
 
-  adjust-index-def-data(store__|namespace__, path__):
-    WildcardImport(m) -> <store__> DefData(
-                                     [Entity()|path__]
-                                   , Import()
-                                   , (m, [CurrentFile()])
-                                   )
+  nam-ordered-def :
+    WildcardImport(m) -> [Entity()]
 
 
 rules
 
-  nam-get-scope-types :
-    Aspect(x, _) -> [Pointcut(), Advice()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Aspect(x, _) -> ( <Aspect(nam-annotate-def(|uri402), id)>
+                    , [Def(uri402)]
+                    , []
+                    )
+    where uri402 := [Aspect(), x|<lookup-index-path> (Aspect(), paths__)]
 
   nam-get-definition-keys :
     Aspect(x, _) -> [x]
 
-  nam-get-definitions :
-    Aspect(x, _) -> [(Aspect(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Aspect(x, _) -> <Aspect(nam-annotate-def(|path__), id)>
-
-  nam-unique :
-    Aspect(x, _) -> <id>
+  nam-get-scope-types :
+    Aspect(x, _) -> [ (Aspect(), x, Pointcut(), anon833)
+                    , (Aspect(), x, Advice(), anon833)
+                    ]
+    where anon833 := Anon(<newname> "anon")
 
 
 rules
 
-  nam-get-scope-types :
-    Pointcut(x, _, _) -> [Variable()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Pointcut(x, _, _) -> ( <Pointcut(nam-annotate-def(|uri403), id, id)>
+                         , [Def(uri403)]
+                         , []
+                         )
+    where uri403 := [Pointcut(), x|<lookup-index-path> (Pointcut(), paths__)]
 
   nam-get-definition-keys :
     Pointcut(x, _, _) -> [x]
 
-  nam-get-definitions :
-    Pointcut(x, _, _) -> [(Pointcut(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Pointcut(x, _, _) -> <Pointcut(nam-annotate-def(|path__), id, id)>
-
-  nam-unique :
-    Pointcut(x, _, _) -> <id>
+  nam-get-scope-types :
+    Pointcut(x, _, _) -> [ (Pointcut(), x, Variable(), anon834)
+                         ]
+    where anon834 := Anon(<newname> "anon")
 
 
 rules
 
-  nam-get-scope-types :
-    Advice(x, _, _, p, _, _) -> [Variable()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Advice(x, _, _, p, _, _) -> ( <Advice(
+                                     nam-annotate-def(|uri404)
+                                   , id
+                                   , id
+                                   , nam-annotate-use(|paths'__, [Pointcut()])
+                                   , id
+                                   , id
+                                   )>
+                                , [Def(uri404)]
+                                , []
+                                )
+    where uri404 := [Advice(), x|<lookup-index-path> (Advice(), paths__)]
 
   nam-get-definition-keys :
     Advice(x, _, _, p, _, _) -> [x]
 
-  nam-get-definitions :
-    Advice(x, _, _, p, _, _) -> [(Advice(), [x])]
-
-  nam-get-uses-keys :
+  nam-get-use-keys :
     Advice(x, _, _, p, _, _) -> [p]
 
-  nam-get-uses :
-    Advice(x, _, _, p, _, _) -> [(Pointcut(), [p])]
+  nam-resolve(target__|):
+    Advice(x, _, _, p, _, _) -> [Regular(Pointcut(), p)]
+    where <target__> p
 
-  nam-annotate-names(|paths__, path__):
-    Advice(x, _, _, p, _, _) -> <Advice(
-                                   nam-annotate-def(|path__)
-                                 , id
-                                 , id
-                                 , nam-annotate-use(|paths__, Pointcut())
-                                 , id
-                                 , id
-                                 )>
+  nam-get-scope-types :
+    Advice(x, _, _, p, _, _) -> [ (Advice(), x, Variable(), ())
+                                ]
+    where anon835 := Anon(<newname> "anon")
 
 
 rules
 
-  nam-get-scope-types :
-    Entity(x, _) -> [Property(), Function()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Entity(x, _) -> ( <Entity(nam-annotate-def(|uri401), id)>
+                    , [Def(uri401)]
+                    , []
+                    )
+    where uri401 := [Entity(), x|<lookup-index-path> (Entity(), paths__)]
 
   nam-get-definition-keys :
     Entity(x, _) -> [x]
 
-  nam-get-definitions :
-    Entity(x, _) -> [(Entity(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Entity(x, _) -> <Entity(nam-annotate-def(|path__), id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Entity(x, _) -> <store__> DefData(
-                                [namespace__|path__]
-                              , Type()
-                              , Type(x)
-                              )
-
-  type-of :
-    Entity(x, _) -> Type(x)
+  nam-get-scope-types :
+    Entity(x, _) -> [ (Entity(), x, Property(), anon831)
+                    , (Entity(), x, Function(), anon831)
+                    ]
+    where anon831 := Anon(<newname> "anon")
 
-  nam-unique :
-    Entity(x, _) -> <id>
+  nam-get-type :
+    Entity(x, _) -> (x, Type(x))
 
 
 rules
 
-  nam-get-uses-keys :
-    Type(x) -> [x, "Int", "String"]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Type(x) -> ( <Type(
+                    nam-annotate-use(|paths'__, [Entity()])
+                  )>
+               , []
+               , []
+               )
 
-  nam-get-uses :
-    Type(x) -> [ (Entity(), [x])
-               , (Entity(), ["Int"])
-               , (Entity(), ["String"])
-               ]
+  nam-get-use-keys :
+    Type(x) -> [x]
 
-  nam-annotate-names(|paths__, path__):
-    Type(x) -> <Type(nam-annotate-use(|paths__, Entity()))>
-
-  adjust-index-lookup(target__|namespace__, path__, prefix__):
-    Type(x) -> <concat> [ [[Entity()|path__]]
-                        , [Def([Entity(), "Int"])]
-                        , [Def([Entity(), "String"])]
-                        ]
+  nam-resolve(target__|):
+    Type(x) -> [Regular(Entity(), x)]
     where <target__> x
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Property(x, t) -> ( <Property(nam-annotate-def(|uri400), id)>
+                      , [Def(uri400)]
+                      , []
+                      )
+    where uri400 := [Property(), x|<lookup-index-path> (Property(), paths__)]
+
   nam-get-definition-keys :
     Property(x, t) -> [x]
 
-  nam-get-definitions :
-    Property(x, t) -> [(Property(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Property(x, t) -> <Property(nam-annotate-def(|path__), id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Property(x, t) -> <store__> DefData(
-                                  [namespace__|path__]
-                                , Type()
-                                , t
-                                )
-
-  type-of :
-    Property(x, t) -> t
-
-  nam-unique :
-    Property(x, t) -> <id>
+  nam-get-type :
+    Property(x, t) -> (x, t)
 
 
 rules
 
-  nam-get-uses-keys :
-    PropAccess(e, x) -> [x]
-    where Type(t) := <type-of> e
-
-  nam-get-uses :
-    PropAccess(e, x) -> [(Property(), [x])]
-    where Type(t) := <type-of> e
-
-  nam-annotate-names(|paths__, path__):
-    PropAccess(e, x) -> <PropAccess(id, nam-annotate-use(|paths__, Property()))>
-
-  adjust-index-lookup(target__|namespace__, path__, prefix__):
-    PropAccess(e, x) -> <index-lookup-children(|Property(), prefix__)> t
-    where <target__> x
-    where Type(t) := <type-of> e
-
-
-rules
-
-  nam-get-scope-types :
-    Function(x, _, _) -> [Variable(), Property()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Function(x, _, _) -> ( <Function(nam-annotate-def(|uri399), id, id)>
+                         , [Def(uri399)]
+                         , []
+                         )
+    where uri399 := [Function(), x|<lookup-index-path> (Function(), paths__)]
 
   nam-get-definition-keys :
     Function(x, _, _) -> [x]
 
-  nam-get-definitions :
-    Function(x, _, _) -> [(Function(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Function(x, _, _) -> <Function(nam-annotate-def(|path__), id, id)>
-
-  nam-unique :
-    Function(x, _, _) -> <id>
+  nam-get-scope-types :
+    Function(x, _, _) -> [ (Function(), x, Variable(), anon828)
+                         , (Function(), x, Property(), anon828)
+                         ]
+    where anon828 := Anon(<newname> "anon")
 
 
 rules
 
-  nam-get-uses-keys :
-    Call(x, _) -> [x]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Call(x, _) -> ( <Call(
+                       nam-annotate-use(|paths'__, [Function()])
+                     , id
+                     )>
+                  , []
+                  , []
+                  )
 
-  nam-get-uses :
-    Call(x, _) -> [(Function(), [x])]
+  nam-get-use-keys :
+    Call(x, _) -> [x]
 
-  nam-annotate-names(|paths__, path__):
-    Call(x, _) -> <Call(nam-annotate-use(|paths__, Function()), id)>
+  nam-resolve(target__|):
+    Call(x, _) -> [Regular(Function(), x)]
+    where <target__> x
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    VarDecl(x, t) -> ( <VarDecl(nam-annotate-def(|uri396), id)>
+                     , [Def(uri396)]
+                     , []
+                     )
+    where uri396 := [Variable(), x|<lookup-index-path> (Variable(), paths__)]
+
   nam-get-definition-keys :
     VarDecl(x, t) -> [x]
 
-  nam-get-definitions :
-    VarDecl(x, t) -> [(Variable(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    VarDecl(x, t) -> <VarDecl(nam-annotate-def(|path__), id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    VarDecl(x, t) -> <store__> DefData(
-                                 [namespace__|path__]
-                               , Type()
-                               , t
-                               )
-
-  type-of :
-    VarDecl(x, t) -> t
-
-  nam-unique :
-    VarDecl(x, t) -> <id>
+  nam-get-type :
+    VarDecl(x, t) -> (x, t)
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    VarDeclInit(x, t, _) -> ( <VarDeclInit(nam-annotate-def(|uri397), id, id)>
+                            , [Def(uri397)]
+                            , []
+                            )
+    where uri397 := [Variable(), x|<lookup-index-path> (Variable(), paths__)]
+
   nam-get-definition-keys :
     VarDeclInit(x, t, _) -> [x]
 
-  nam-get-definitions :
-    VarDeclInit(x, t, _) -> [(Variable(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    VarDeclInit(x, t, _) -> <VarDeclInit(nam-annotate-def(|path__), id, id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    VarDeclInit(x, t, _) -> <store__> DefData(
-                                        [namespace__|path__]
-                                      , Type()
-                                      , t
-                                      )
-
-  type-of :
-    VarDeclInit(x, t, _) -> t
-
-  nam-unique :
-    VarDeclInit(x, t, _) -> <id>
+  nam-get-type :
+    VarDeclInit(x, t, _) -> (x, t)
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Param(x, t) -> ( <Param(nam-annotate-def(|uri398), id)>
+                   , [Def(uri398)]
+                   , []
+                   )
+    where uri398 := [Variable(), x|<lookup-index-path> (Variable(), paths__)]
+
   nam-get-definition-keys :
     Param(x, t) -> [x]
 
-  nam-get-definitions :
-    Param(x, t) -> [(Variable(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Param(x, t) -> <Param(nam-annotate-def(|path__), id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Param(x, t) -> <store__> DefData(
-                               [namespace__|path__]
-                             , Type()
-                             , t
-                             )
-
-  type-of :
-    Param(x, t) -> t
-
-  nam-unique :
-    Param(x, t) -> <id>
+  nam-get-type :
+    Param(x, t) -> (x, t)
 
 
 rules
 
-  nam-get-uses-keys :
-    Var(x) -> [x]
-
-  nam-get-uses :
-    Var(x) -> [ (Variable(), [x])
-              , (Property(), [x])
-              ]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Var(x) -> ( <Var(
+                   nam-annotate-use(
+                   | paths'__
+                   , [Variable(), Property()]
+                   )
+                 )>
+              , []
+              , []
+              )
 
-  nam-annotate-names(|paths__, path__):
-    Var(x) -> <Var(nam-annotate-use(|paths__, Variable()))>
+  nam-get-use-keys :
+    Var(x) -> [x]
 
-  adjust-index-lookup(target__|namespace__, path__, prefix__):
-    Var(x) -> [ [Variable()|path__]
-              , [Property()|path__]
+  nam-resolve(target__|):
+    Var(x) -> [ Regular(Variable(), x)
+              , Regular(Property(), x)
               ]
     where <target__> x
 
@@ -381,4 +326,15 @@
 rules
 
   nam-get-scope-types :
-    Block(_) -> [Variable(), Property()]
\ No newline at end of file
+    Block(_) -> [ ( Variable()
+                  , Anon(<newname> "anon")
+                  , Variable()
+                  , ()
+                  )
+                , ( Property()
+                  , Anon(<newname> "anon")
+                  , Property()
+                  , ()
+                  )
+                ]
+    where anon823 := Anon(<newname> "anon")
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/splitter.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/splitter.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/splitter.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -6,7 +6,8 @@
  
 rules
   
-  index-split = id
+  index-split = fail
+  
   index-is-toplevel = ?Entity(_, _)
   index-is-qualifier = ?Module(_, _, _)
   index-qualifier-subelements = ?Module(_, _, <id>)

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -5,6 +5,7 @@
   include/EntityWithAspects
   lib/index-library
   lib/analysis-library
+  lib/analysis-library-internal
   names
   
 signature constructors
@@ -12,10 +13,8 @@
   Type : STRING -> Type
 
 rules // Type projections
-    
-  type-of:
-  	Type(x) -> Type(x)
-  	
+  
+  // Primitives
   type-of:
   	StringType() -> Type("String")
   	
@@ -28,14 +27,36 @@
   type-of:
     IntLit(_) -> <type-of> IntType()
   
+  // Definitions
   type-of:
-    Var(v) -> <type-of> <index-lookup> v
+    Entity(x, _) -> Type(x)
+    
+  type-of:
+    Property(_, t) -> <type-of> t
+    
+  type-of:
+    VarDecl(_, t) -> <type-of> t
+    
+  type-of:
+    VarDeclInit(_, _, t) -> <type-of> t
+  
+  type-of:
+    Param(_, t) -> <type-of> t
+  
+  // Lookups
+  type-of:
+    Var(v) -> <type-of> <index-lookup-element> v
   
   type-of:
-    PropAccess(e, p) -> <type-of> <index-lookup> p
+    PropAccess(e, p) -> <type-of> <index-lookup-element> p
 
   type-of:
     Def(uri) -> <type-of> <index-get-data(|Type())> Def(uri)
+    
+  // Recursion stoppers
+  type-of:
+    Type(x) -> Type(x)
+    
 
 rules // Comparison
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/editor/NameDefinitionLanguage-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/editor/NameDefinitionLanguage-Builders.esv	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/editor/NameDefinitionLanguage-Builders.esv	Fri Jul 20 21:17:40 2012	(r25220)
@@ -16,13 +16,11 @@
   observer : editor-analyze (multifile)
 
   builder  : "Generate name analysis" = generate-name-analysis (openeditor) (realtime)
-  builder  : "Show abstract syntax" = debug-generate-aterm (openeditor) (realtime) (meta) (source)
-  builder  : "Show deffed syntax" = debug-generate-deffed (openeditor) (realtime) (meta) (source)
-  builder  : "Show analyzed syntax" = debug-generate-analyzed (openeditor) (realtime) (meta) (source)
-  builder  : "Show index entries for current file" = debug-index-show-current-file (openeditor) (realtime) (meta) (source)
-  builder  : "Show index entries for all files" = debug-index-show-all-files (openeditor) (realtime) (meta) (source)
-  builder  : "Clear index for current file" = debug-index-clear-current (meta) (source)
-  builder  : "Clear index" = debug-index-clear (meta) (source)
-  builder  : "Reload index" = debug-index-reload (meta) (source)                                                                                           
+  builder  : "Show abstract syntax" = generate-aterm (openeditor) (realtime) (meta) (source)
+  builder  : "Show deffed syntax" = generate-deffed (openeditor) (realtime) (meta) (source)
+  builder  : "Show analyzed syntax" = generate-analyzed (openeditor) (realtime) (meta) (source)
+  builder  : "Show index entries for current file" = index-currentfile (openeditor) (realtime) (meta) (source)
+  builder  : "Show index entries for all files" = index-allfiles (openeditor) (realtime) (meta) (source)
+  builder  : "Clear index" = index-cleanall (meta) (source)                                                                                             
 
   on save  : editor-save
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-auto.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-auto.generated.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-auto.generated.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -12,6 +12,9 @@
 
 rules
 
+  nam-get-scope-types :
+    Naming(_, _, _, _) -> [Namespace()]
+
   nam-get-def(|n) =
     fail
 

Added: spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library-internal.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library-internal.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -0,0 +1,943 @@
+module lib/analysis-library-internal
+ 
+imports
+  libstratego-lib
+  libstratego-parallel
+  lib/editor-common.generated
+  lib/analysis-library
+  lib/index-library
+
+signature
+
+  constructors // data kinds stored in the index
+
+    Type   : DefDataKind
+    Import : DefDataKind
+    Unique : DefDataKind
+  
+  constructors // resolution kinds for use sites
+
+  	Regular : Namespace * Name                           -> ResolutionKind
+  	Regular : Namespace * Name * Type                    -> ResolutionKind
+  	Child   : Namespace * Name * Namespace * Name        -> ResolutionKind
+  	Child   : Namespace * Name * Namespace * Name * Type -> ResolutionKind
+  	
+  constructors // annotations used in analysis
+
+    Scope: Term -> Anno
+  
+  constructors
+  
+  // Analysis
+  Results         : AST * List(Def) * List(Use) * List(DefData) * List(Def) * List(Def) * List(File) -> Results
+  ParallelResults : AST * AST * List(Error) * List(Warning) * List(Note) * List(File) -> ParallelResults
+  
+  // Namespaces
+  Diff            : Namespace
+  ASTDiff         : Namespace
+  
+rules // Analysis traversals
+  
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   *
+   * @internal
+   * @type List((ast, (file, subfile))) -> Results(List(ast), List(def), List(use), List(data), List(addedElem), 
+   *                                       List(removedElem), List(fileToAnalyze@(file, subfile))))
+   */
+  analyze-top-internal(|phase, language, project-path, full-path):
+    astFilePairs -> Results(asts, defs, uses, data, added, removed, filesToAnalyze)
+    with
+      // Init
+      index-setup(|language, [project-path], full-path);
+      revision := <index-start-transaction>
+    with
+      // Store old elements
+      oldElems := <filter(index-diff-constructors)> <index-get-all-in-file> full-path;
+      <index-clear-file> full-path
+    with
+      {| Index-UnresolvedSet:
+        unresolvedSet := <new-iset>;
+        rules(Index-UnresolvedSet: _ -> unresolvedSet);
+        
+        (astFilePairs2, defsList) := <map(analyze-top-defs); unzip> astFilePairs;
+        defs := <concat> defsList;
+        (astFilePairs3, dataList) := <map(analyze-top-data(|language, full-path)); unzip> astFilePairs2;
+        data := <concat> dataList;
+        (astFilePairs4, usesList) := <map(analyze-top-uses(|language, full-path)); unzip> astFilePairs3;
+        uses := <concat> usesList;
+        (asts, _) := <unzip> astFilePairs4
+      |}
+    with
+      index-end-transaction
+    with
+      // Schedule re-analysis of dependent files (if current file is not testing language file)
+      // HACK: Depends on file extension, could be other languages with .spt extension?
+      if Editor() := phase; not(<is-test-file> full-path) then
+        newElems := <conc> (defs, <filter(index-diff-constructors)> data);
+        
+        // Find added and removed definitions
+        (added, removed) := <analyze-diff> (oldElems, newElems);
+        changed := <conc> (added, removed);
+        
+        // Store files that have changed in the index
+        index-transaction(
+          filesToAnalyze := <analyze-store-diff(|changed, revision)> astFilePairs4
+        )
+      else
+        (added, removed) := ([], []);
+        filesToAnalyze := []
+      end
+    with
+      <list-loop(analyze-top-store-ast)> astFilePairs4
+
+rules  // Phase 1: scope analysis
+
+  /**
+   * Add URI annotations to each definition and unresolved annotations to each use site.
+   *
+   * @internal
+   */
+  analyze-top-defs:
+    (ast, file) -> ((ast2, file), defs)
+    with
+      <index-set-current-file> file;
+      (ast2, defs, data) := <analyze-defs> ast; 
+      <index-add-all(|file)> defs;
+      (data2, _) := <analyze-uses> data;
+      <index-add-all(|file)> data2
+  
+  /**
+   * Identifies all definitions in the tree and annotates them with their URI.
+   * Also annotates uses with a preliminary "Unresolved(pathes)" annotation, 
+   * where "pathes" maps relevant namespaces to their pathes.
+   *
+   * @internal
+   */
+  analyze-defs:
+  	ast -> (ast', defs, data) 
+  	with 
+  		def-set  := <new-iset>; 
+  		data-set := <new-iset>;
+  		ast'     := <analyze-defs(|[], Anon(<new>), def-set, data-set)> ast;
+  		defs     := <iset-elements; map(try(Snd))> def-set;
+  		data     := <iset-elements> data-set
+  	 
+  /**
+   * Special case for tree nodes which are defined as scopes at parent nodes. 
+   *
+   * @internal 
+   */
+  analyze-defs(|paths, subsequent, defs, data):
+    ast{a*} -> ast'
+    where
+  	  a'* := <split-fetch(?Scope(uri*)) ; conc> a*
+    with
+      updates := <map(!(<Hd>, <Tl;Tl>))> uri* ;
+      paths'  := <update-index-paths(|updates)> paths ;
+      ast'    := <analyze-defs(|paths', subsequent, defs, data)> ast{a'*}
+       
+  /**
+   * Default case for all other tree nodes. 
+   *
+   * Uses the following rules generated from a NBL definition:
+   *
+   * nam-get-definitions: definition sites of the current node
+   * nam-get-scope-types: namespaces scoped by the current node
+   * nam-annotate-use   : use sites of the current node
+   *
+   * @internal 
+   */
+  analyze-defs(|paths, subsequent, defs, data):
+    ast{a*} -> ast2{a*}
+    where 
+      not(<fetch(?Scope(_))> a*)
+    with
+      // check wether the current AST node defines names
+      // ast1 : AST node with annotated definition sites and scopes
+      // def* : list of definition entries
+      // imp* : list of import entries
+      //
+      // definitions are paired with unique identifier to keep duplicates
+      if (ast1, def*, imp*) := <nam-get-definitions(|paths, subsequent)> ast then
+      	<iset-addlist(|<map(!(<new>, <id>))> def*)> defs;
+      	<iset-addlist(|imp*)> data
+      else
+        ast1 := ast 
+      end;
+      // check wether the current AST node scopes other definitions
+      // scope*: list of scope information
+      //
+      // updates the pathes for scoped namespaces
+      if scope* := <nam-get-scope-types> ast then
+      	update* := <map(construct-index-path(|paths, defs, ast))> scope*;
+        paths'  := <update-index-paths(|update*)> paths
+      else
+      	paths'  := paths
+      end;
+      // analyze children and annotate use sites afterwards
+      f#(children) := ast1;
+      children'    := <origin-track-forced(analyze-child-defs(|paths', defs, data))> children;
+      ast2         := <try(nam-annotate-uses(|paths'))> f#(children')
+      
+  /** @internal */
+  analyze-child-defs(|paths, defs, data):
+  	[] -> []
+  	
+  /** @internal */
+  analyze-child-defs(|paths, defs, data):
+  	[d|ds] -> [d'|ds']
+  	with
+      subsequent := Anon(<new>);
+  	  d'         := <analyze-defs(|paths, subsequent, defs, data)> d ;
+  	  if scopes := <nam-ordered-def> d then
+  	  	updates := <map(\scope -> (scope, [scope, subsequent|<lookup-index-path> (scope, paths)])\)> scopes ; 
+        paths'  := <update-index-paths(|updates)> paths 
+  	  else
+  	    paths' := paths
+  	  end;
+  	  ds'  := <analyze-child-defs(|paths', defs, data)> ds
+
+rules // helper for phase 1
+	 
+  /** @internal */
+  construct-index-path(|paths, defs, ast):
+    (ns, name, scope-type, unique) -> (scope-type, path'')
+    with
+      path  := <lookup-index-path> (ns, paths);
+      path' := <index-do-adjust-path(|scope-type, path, name)> ast;
+      if () := unique then
+      	path'' := path'
+      else
+      	path'' := <index-do-adjust-path(|scope-type, path', unique)> ast;
+      	<iset-add(|DefData([scope-type| path'], Unique(), path''))> defs
+      end
+  
+  update-import(|source, paths):
+  	namespace -> DefData([namespace | path], Import(), source)
+  	with
+  	  path := <lookup-index-path> (namespace, paths)
+  	  
+  /** @internal */
+  update-index-paths(|updates) = 
+    remove-all(where(Fst => key; <fetch-elem(Fst => key)> updates)); at-end(!updates)
+  
+  /** @internal */
+  lookup-index-path = 
+    lookup' <+ ![]
+ 
+  /** 
+   * Kept for backward compatibility.
+   *
+   * @internal 
+   */
+  index-do-adjust-path(|namespace, path, scope) =
+    adjust-index-path(origin-equal(|scope)|namespace, path) <+ ![scope|path]
+
+rules // interface to NBL generator for phase 1
+	
+  /** @internal */
+  nam-get-definitions(|paths, subsequent) 
+    = fail
+
+  /** 
+   * Callback for nam-get-definitions
+   *
+   * @internal */ 
+  nam-annotate-def(|uris):
+    t{a*} -> t{uris, a*}
+  
+  /** @internal */ 
+  nam-get-scope-types 
+     = fail
+  
+  /** @internal */
+  nam-annotate-uses(|paths) 
+     = fail
+  
+  /**
+   * Callback for nam-get-definitions (imports) and nam-annotate-uses
+   * 
+   * @internal 
+   */ 
+  nam-annotate-use(|paths, namespace*):
+    t{a*} -> t{Unresolved(<filter(nam-is-relevant(|namespace*))> paths), a*}
+    
+  nam-is-relevant(|namespace*):
+  	(ns, _) -> <id> where <fetch-elem(?ns)> namespace*
+ 
+  /** @internal */ 
+  nam-ordered-def 
+     = fail
+
+rules // Phase 2: type analysis of definition sites     
+
+  /**
+   * Gathers all data for each definition.
+   *
+   * @internal
+   */
+  analyze-top-data(|language, full-path):
+    (ast, file) -> ((ast2, file), data2)
+    with
+      <index-set-current-file> file;
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Gather all data for each definition.
+        ast2 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast; // Parent pointers needed.
+        data := <origin-track-forced(analyze-data)> ast2;
+        
+				// Resolve all references in gathered data.
+				(data2, _) := <analyze-uses> data;
+				<index-add-all(|file)> data2;		
+        // Store reads into the index (if not testing language)
+        if not(is-test-input(|language, full-path)) then
+          <index-add-all(|file)> <iset-elements> readSet
+        end
+      |}
+
+ /**
+   * Collects all index data (e.g. types of definitions).
+   *
+   * @internal
+   */
+  analyze-data:
+    ast -> types
+    with
+      set := <new-iset>;
+      <topdown(try(analyze-type(|set)); analyze-data-part(|set))> ast;
+      types := <iset-elements> set
+      
+  /** @internal */
+  analyze-type(|set):
+    ast -> ast
+    where
+      (_{uri}, type) := <nam-get-type> ast;
+      <iset-add(|DefData(uri, Type(), type))> set
+      
+  /** @internal */
+  analyze-data-part(|set):
+    ast -> ast
+    where
+      if keys := <nam-get-definition-keys> then
+      	<list-loop(do-adjust-index-def-data(|set, ast))> keys
+      end
+
+rules // helper for phase 2
+	 
+  /**
+   * Kept for backward compability and possibly additional data.
+   * 
+   * @internal 
+   */
+  do-adjust-index-def-data(|set, ast):
+  	key -> key
+  	where
+      if 
+        _{[ns|path]} := key; 
+        result       := <adjust-index-def-data(store-index-data-results(|set) |ns, path)> ast 
+      then
+         <fatal-err(|"Unexpected result from adjust-index-def-data; should call <store-results>")> result
+      end
+  
+  /** @internal */
+  store-index-data-results(|set):
+    t -> <fail>
+    where
+      if is-list then
+        <iset-addlist(|t)> set
+      else
+        <iset-add(|t)> set
+      end
+
+rules // interface to NBL generator for phase 2
+	
+  /** @internal */
+  nam-get-definition-keys
+    = fail
+
+  /** @internal */
+  nam-get-type
+    = fail
+
+rules // Phase 3: resolution of use sites     
+
+  /**
+   * Resolves all unresolved references for each use site.
+   *
+   * @internal
+   */
+  analyze-top-uses(|language, full-path):
+    (ast, file) -> ((ast3, file), uses)
+    with
+      <index-set-current-file> file;
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Resolve all unresolved references for each use site.
+        (ast2, uses) := <analyze-uses> ast;
+        <index-add-all(|file)> uses;
+        
+        ast3 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast2; // AST changed, reset parent pointers.
+        
+        // Store reads into the index (if not testing language)
+        if not(is-test-input(|language, full-path)) then
+          <index-add-all(|file)> <iset-elements> readSet
+        end
+      |}
+
+  /**
+   * Analyze all uses, changing their preliminary "Unresolved(_)" annotation 
+   * to an URI of their definition.
+   *
+   * @internal
+   */
+  analyze-uses:
+    ast -> (ast', uses)
+    with
+    	use-set := <new-iset>;
+    	ast'    := <bottomup(analyze-use(|use-set))> ast;
+    	uses    := <iset-elements ; map(Snd)> use-set
+  
+  analyze-use(|uses):
+  	ast -> ast'
+    with
+      if 
+        _{Unresolved(paths)} := ast;
+        origin               := <origin-term> ast;
+        resolution*          := <repeat-until(prim("SSL_EXT_get_parent", <id>), nam-resolve(origin-equal(|ast)))> origin
+      then
+        resolved := <index-resolve(|paths, ast)> resolution* ;
+        if Def(def-uri) := resolved then
+          ast' := ast{def-uri};
+          <iset-add(|(<new>, Use(def-uri)))> uses
+        else
+          // HACK to establish compatability with old styles. Should stay the complete candidate list
+          !resolved => [Unresolved(namespace), name|_];
+          ast' := ast{resolved};
+          <iset-add(|(<new>, BadUse([namespace, name])))> uses
+        end
+      else
+        ast' := ast
+      end
+
+rules // resolution rules for phase 3
+	
+  // TODO should become the standard resolution for unresolved elements
+  index-resolve(|paths, target):
+  	[Regular(ns, name)|resolutions] -> definition
+  	with
+  	  name' := <strip-annos> name;
+  	  path  := <lookup-index-path> (ns, paths);
+  	  if not(definition := <index-lookup-internal(index-compare-name-equal(|name')|ns, path, name')> target) then
+  	    if Def(def-uri) := <index-resolve(|paths, target)> resolutions then
+  		  definition := Def(def-uri)
+  	    else
+  	      definition := [Unresolved(ns), name' | path]
+  	    end
+      end
+
+  // TODO take type into account
+  index-resolve(|paths, target):
+  	[Regular(ns, name, t)|resolutions] -> definition
+  	with
+  	  name' := <strip-annos> name;
+  	  path  := <lookup-index-path> (ns, paths);
+  	  if not(definition := <index-lookup-internal(index-compare-name-equal(|name')|ns, path, name')> target) then
+  	    if Def(def-uri) := <index-resolve(|paths, target)> resolutions then
+  		  definition := Def(def-uri)
+  	    else
+  	      definition := [Unresolved(ns), name' | path]
+  	    end
+      end
+
+  index-resolve(|paths, target):
+  	[Child(ns, name, pns, parent)|resolutions] -> definition
+  	with
+  	  name' := <strip-annos> name;
+  	  if not (
+  	  	parent-def := <index-resolve(|paths, parent)> [Regular(pns, parent)];
+  	    definition := <index-get-children(\uri -> Def(uri)\, index-compare-name-equal(|name')|ns)> parent-def 
+  	  ) then
+  	    if Def(def-uri) := <index-resolve(|paths, target)> resolutions then
+  		  definition := Def(def-uri)
+  	    else
+  	      definition := [Unresolved(ns), name' | <lookup-index-path> (ns, paths)]
+  	    end
+      end
+
+  // TODO take type into account
+  index-resolve(|paths, target):
+  	[Child(ns, name, pns, parent)|resolutions] -> definition
+  	with
+  	  name' := <strip-annos> name;
+  	  if not (
+  	  	parent-def := <index-resolve(|paths, parent)> [Regular(pns, parent)];
+  	    definition := <index-get-children(\uri -> Def(uri)\, index-compare-name-equal(|name')|ns)> parent-def 
+  	  ) then
+  	    if Def(def-uri) := <index-resolve(|paths, target)> resolutions then
+  		  definition := Def(def-uri)
+  	    else
+  	      definition := [Unresolved(ns), name' | <lookup-index-path> (ns, paths)]
+  	    end
+      end
+
+rules // interface to NBL generator for phase 3
+	
+  /** @internal */
+  nam-get-uses 
+    = fail
+  
+  /** @internal */
+  nam-resolve(target) 
+    = fail
+
+rules // Final: storing analyzed AST
+	     
+  /**
+   * Stores AST from file to the index.
+   *
+   * @internal
+   */   
+  analyze-top-store-ast:
+    (ast, file) -> <id>
+    with
+      <index-set-global(|<conc> (<index-file-to-uri> file, ["ast"]))> ast
+        		      
+rules // Parallel analysis
+  
+  /** @internal */
+  index-parallel-analyze(analyze):
+    files -> allResults
+    with
+      map(index-parse-file); // Parsing cannot be done in parallel.
+      map(\(ast, file) -> (ast, file, <project-path>)\);
+      parallel-unordered(all(index-analyze(analyze)));
+      ?results;
+      with(<eq> (<length> results, <length> files) | "Input size not equal to output size");
+      filesToAnalyze := <make-set> <mapconcat(?ParallelResults(_, _, _, _, _, <id>))> results;
+      if not([] := filesToAnalyze) then
+        allResults := <concat> [results, <index-parallel-analyze(analyze)> filesToAnalyze]
+      else
+        allResults := results
+      end
+  
+  /** @internal */   
+  index-parse-file:
+    file -> (ast, file)
+    with
+    if <file-exists> file then
+      ast := <parse-file> file
+    else
+      ast := ()
+    end
+   
+  /** @internal */   
+  index-set-markers:
+    ParallelResults(ast, ast', errors, warnings, notes, diffs) -> <id>
+    with
+      <set-markers(|ast)> (ast', errors, warnings, notes)
+      
+  /** @internal */
+  index-analyze(analyze):
+    (ast, path, project-path) -> ParallelResults(ast, ast', errors, warnings, notes, filesToAnalyze)
+    with
+      (ast', errors, warnings, notes, filesToAnalyze) := <analyze>;
+      if [] := filesToAnalyze then
+        complete-work-unit
+      end
+      
+/** @internal */
+rules // Splitter
+  
+  /** @internal */
+  index-split = fail
+  /** @internal */
+  index-is-toplevel = fail
+  /** @internal */
+  index-is-qualifier = fail
+  /** @internal */
+  index-qualifier-subelements = fail
+  /** @internal */
+  index-create-qualifier(|qualifier) = fail
+  
+  /** @internal */
+  index-toplevel-split:
+    ast -> asts'
+    with
+      (ast', _) := <analyze-defs> ast;
+      asts      := <index-toplevel-split-internal> ast';
+      asts'     := <strip-annos> asts
+      
+  /** @internal */
+  index-toplevel-split-internal:
+    node -> units
+    with
+      switch id
+        case ?():
+          units := [((), [])]
+        case index-is-qualifier:
+          elems := <mapconcat(index-toplevel-split-internal)> <index-qualifier-subelements> node;
+          units := <map(index-transform-qualifier(|node))> elems
+        case index-is-toplevel:
+          units := [(node, <index-uri> <nam-get-definition-keys; Hd> node)]
+        otherwise:
+          units := [(node, [])]
+      end
+      
+  /** @internal */
+  index-transform-qualifier(|node):
+    (elem, subfileName) -> (qualifier, subfileName)
+    with
+      qualifier := <index-create-qualifier(|node)> elem
+
+/** @internal */
+rules // Diffs
+  
+  /** @internal */
+  analyze-diff:
+    (defs1, defs2) -> (added, removed)
+    with
+      added   := <diff(index-diff-compare)> (defs2, defs1);
+      removed := <diff(index-diff-compare)> (defs1, defs2)
+    
+  /** @internal */
+  analyze-store-diff(|changedEntries, revision): 
+    astFilePairs -> analyzeFiles'
+    with
+      changedFiles    := <mapconcat(index-get-files-of)> changedEntries;
+      dependentFiles  := <index-get-dependent-files> changedEntries;
+      
+      // Files to analyze
+      analyzeFiles := <make-set> <remove-all(fake-file)> dependentFiles;
+      analyzeFiles' := analyzeFiles;
+      // TODO: Is this extra check needed?
+      /*if <getfirst(index-get-file-revision; \r -> (r, revision)\; gt)> analyzeFiles then
+        // Add current file if the current file has read information from another file with a higher revision.
+        // This indicates that potentially outdated information was read.
+        analyzeFiles' := [file|analyzeFiles]
+      else
+        analyzeFiles' := analyzeFiles
+      end;*/
+      
+      // Files to compile
+      changedAstFiles := <filter(analyze-astdiff)> astFilePairs;
+      compileFiles := <make-set> <concat> [analyzeFiles', changedFiles, changedAstFiles];
+      // TODO: Optimize so that there are no duplicate files stored in the index, use iset?
+      <map(analyze-add-compilediff)> compileFiles
+      
+  /** 
+   * Checks if ast for given file has changed. Succeeds if old ASTDiff is not found or if ASTDiff is different.
+   *
+   * @internal
+   */
+  analyze-astdiff:
+    (ast, file) -> file
+    where
+      name := <conc> (<index-file-to-uri> file, ["ast-checksum"]);
+      newChecksum := <checksum> ast;
+      if oldChecksum := <index-get-global(|name)> then
+        <index-set-global(|name)> newChecksum;
+        not(<eq> (oldChecksum, newChecksum))
+      else
+        <index-set-global(|name)> newChecksum
+      end
+      
+  /** 
+   * Adds given file to the list of files to compile.
+   *
+   * @internal
+   */
+  analyze-add-compilediff = index-add-global(|"compile-diff")
+  
+  /** 
+   * Gets the list of files to compile, and then clear it.
+   *
+   * @internal
+   */
+  analyze-get-compilediffs = index-get-all-globals(|"compile-diff"); index-clear-global(|"compile-diff")
+  
+rules // Index lookup rules (that take into account adjust-index-lookup)
+  
+  /**
+   * Given a term x, namespace n, path s and prefix p, looks for a definition in the 
+   * scope of s and outer scopes in namespace n that start with prefix p, returning the first 
+   * found definition.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path or part of this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   *
+   * @type term -> ?Def(uri')
+   *
+   * @internal
+   */
+  index-lookup-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> definition
+    where
+      defs := <index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix)> x;
+      
+      if StopLookup() := defs then
+        fail
+      end;
+      
+      if not(definition := <Hd> defs) then
+        [_|path']  := path;
+        definition := <index-lookup-internal(adjust-import, adjust-lookup, name-compare|namespace, path', prefix)> x
+      end
+      
+  /** @internal */
+  index-lookup-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-internal(id, id, name-compare|namespace, path, prefix)
+
+  /**
+   * Given a term x, namespace n, path s and prefix p, looks for definitions in the scope of s 
+   * and outer scopes in namespace n that start with prefix p, returning all found definition.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path or part of this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   *
+   * @internal
+   */
+  index-lookup-all-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> defs'
+    where
+      defs := <index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix)> x;
+      
+      if [_|path'] := path then
+        defs2 := <index-lookup-all-internal(adjust-import, adjust-lookup, name-compare|namespace, path', prefix)> x;
+        defs' := <union> (defs, defs2)
+      else
+        defs' := defs
+      end
+
+  /** @internal */
+  index-lookup-all-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-all-internal(id, id, name-compare|namespace, path, prefix)
+      
+  /**
+   * Given a term x, namespace n, path s and prefix p, looks for a definition in the 
+   * scope of s in namespace n that start with prefix p, returning the first found definition.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type term -> List(Def(uri))
+   *
+   * @internal
+   */
+  index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> [def*, impdef*]
+    with
+      if adjust-import then
+        import* := <indexlib-get-all-values> DefData([namespace|path], Import(), ());
+        impdef* := <filter(index-get-import(adjust-lookup, name-compare| namespace, x, prefix)); concat> import*
+      else
+      	impdef* := []
+      end;
+      if adjust-lookup ; adjusted := <index-do-adjust-lookup(|namespace, path, x, prefix)> x then
+        def*     := <index-get-adjust-lookup-results(adjust-import, name-compare|adjusted, prefix)> x
+      else
+        def*     := <index-get-children(\uri -> Def(uri)\, name-compare|namespace, prefix)> [namespace | path]
+      end
+      
+  /** @internal */
+  index-lookup-all-scoped-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-all-scoped-internal(id, id, name-compare|namespace, path, prefix)
+  
+  /** @internal */
+  index-get-import(adjust-lookup, name-compare|namespace, x, prefix):
+  	import{[_|path]} -> <index-get-children(\uri -> Def(uri)\, name-compare|namespace, prefix)> [namespace | path]
+  	  
+  /** @internal */
+  index-do-adjust-lookup(|namespace, path, use, prefix) =
+    repeat-until(
+      prim("SSL_EXT_get_parent", <id>)
+    , adjust-index-lookup(origin-equal(|use)|namespace, path, prefix) 
+    )
+    
+  /** @internal */  
+  index-get-adjust-lookup-results(adjust-import, name-compare|adjusted, prefix):
+    x -> defs'
+    with
+      if StopLookup() := adjusted then
+        defs' := StopLookup()
+      else
+        defs := 
+          <mapconcat(
+               \d at Def(p) -> [d]\
+            <+ \[namespace'|path'] -> <index-lookup-all-scoped-internal(adjust-import, fail, name-compare|namespace', path', prefix)> x\
+            <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list of Def(uri) or [namespace | path], or StopLookup() to stop the lookup.")
+          )> adjusted;
+          defs' := <filter(name-compare)> defs
+      end
+      
+rules // Name comparisons
+  
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-substring(|prefix):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <is-substring(!prefix)> <index-uri-name> uri
+      
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison and given namespace.
+   * 
+   * @internal 
+   */      
+  index-compare-name-substring(|prefix, namespace):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <eq> (namespace, <index-uri-namespace> uri);
+      <is-substring(!prefix)> <index-uri-name> uri
+  
+  /**
+   * Compares given element (with an URI) to given name using string equality comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-equal(|name):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <SRTS-EXT-eq-ignore-annos(|name)> <index-uri-name> uri
+      
+rules // URI and value projections
+       
+  /** @internal */
+  index-uri-impl:
+    Def(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    Use(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    Read(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    x{[namespace | path]} -> [<index-namespace-unwrap> namespace | path]
+ 
+  /**
+   * TODO: Should second part of ReadWildcard be included in the URI, between namespace and path?
+   * 
+   * @internal 
+   */
+  index-uri-impl:
+    ReadWildcard(uri, _) -> uri
+
+  /** @internal */
+  index-value-impl:
+    Def(value) -> value
+
+  /** @internal */
+  index-value-impl:
+    Use(value) -> value
+
+  /** @internal */
+  index-value-impl:
+    Read(value) -> value
+  
+  /** @internal */
+  index-value-impl:
+    ReadWildcard(_, value) -> value
+    
+rules // Internal helpers
+
+  /**
+   * Transforms a term C( (a1, [b1]), (a2, [b2, b3]) ) to a tuple (C(a1, a2), [b1, b2, b3]).
+   *
+   * @internal
+   */
+  unzip-analyzed:
+    appl -> (appl', unzipped-parts)
+    with
+      appl'          := <all(\(a, _) -> a\)> appl;
+      unzipped-parts := <concat> <get-appl-arguments(\(_, b) -> b\) <+ map(\(_, b) -> b\) <+ ![]> appl
+       
+  /**
+   * Tests if the current file is just a testing language input
+   *
+   * @internal
+   */
+  is-test-file = 
+    string-ends-with(|".spt")
+  /** @internal */
+  is-test-language = 
+    ?"Spoofax-Testing"
+  /** @internal */
+  is-test-input(|language, path) = 
+    <is-test-language> language <+ <is-test-file> path
+      
+  /** @internal */
+  fake-file = 
+    is-test-file <+ index-is-fake-file
+  
+  /** @internal */
+  ast-uri-to-ast-file(|full-path):
+    (ast, uri) -> (ast, (full-path, uri))
+   
+  /** @internal */    
+  index-readwildcard-substring(|prefix):
+    ReadWildcard(_, name) -> <id>
+    where <is-substring(!prefix)> name
+  
+  /** @internal */  
+  store-wildcard-read(|namespace, path, prefix):
+    children -> <id>
+    with
+      if set := <Index-ReadSet> then
+        if 1 := <length> children then
+          // HACK: This solves the problem of ReadWildcards making too many files re-analyze, but this should
+          // be handled in the index primitives instead.
+          <iset-add(|Read([namespace, prefix|path]))> set
+        else
+          <iset-add(|ReadWildcard([namespace|path], prefix))> set
+        end
+      end
+  
+  /** @internal */    
+  index-is-unresolved(|x, uri) = 
+    Index-UnresolvedSet; (iset-contains(|(x, uri)) <+ fail)
+  /** @internal */
+  index-add-unresolved(|x, uri) = 
+    (Index-UnresolvedSet; iset-add(|(x, uri))) <+ id
+  
+  /** @internal */
+  index-file-dependent-construct: 
+    uri -> <conc> (uses, reads)
+    with
+      uses := <index-get-uses-all> Def(uri);
+      reads := <index-get-reads-all> Def(uri)
+  
+  /** @internal */  
+  index-file-dependency-filter = 
+    ?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_)
+ 
+  /** @internal */
+  index-eq(|namespace, expected) =
+    where(
+      ?Def([_, name | _]);
+      <SRTS-EXT-eq-ignore-annos(|expected)> name
+    )
+  
+  /** @internal */
+  external SRTS-EXT-eq-ignore-annos(|t)
+  
+  /** @internal */
+  index-key-unwrap = 
+    \key{uri} -> key{<index-uri-unwrap> uri}\ <+ id
+    

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library.generated.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library.generated.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -188,7 +188,7 @@
           <analyze-top-internal(|phase, language, project-path, full-path)> astsFilePairs
       else
         Results(asts, _, _, _, _, _, filesToAnalyze) := 
-          <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, full-path)];
+          <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, (full-path, []))];
         ast' := <Hd> asts // Always returns a list of 1 AST if there is no splitter, so take the head.
       end
   

Added: spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/lib/analysis-library.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -0,0 +1,627 @@
+module lib/analysis-library
+ 
+imports
+  libstratego-lib
+  libstratego-parallel
+  lib/editor-common.generated
+  lib/analysis-library-internal
+  lib/index-library
+ 
+signature constructors
+ 
+  // Analyze constructors
+  Editor      : AnalysisPhase
+  Compile     : AnalysisPhase
+ 
+  // Index elements
+  Def          : List(UriPart) -> Summary
+  Use          : List(UriPart) -> Summary
+  BadUse       : List(UriPart) -> Summary
+  Read         : List(UriPart) -> Summary
+  ReadWildcard : List(UriPart) * String -> Summary
+  Diff         : List(UriPart) * List(Summary) -> Summary
+  
+  // Adjust lookup actions
+  StopLookup   : LookupAction
+  
+rules // Index analysis extension points
+ 
+  type-of = fail
+  
+  /**
+   * Extension point. Override this rule to adjust how the index analysis looks up use sites to definitions.
+   *
+   * The overriden rule must return a list that contains any of the following items:
+   *   - Def(uri)         : A definition with exactly this URI has been found. This tells the lookup to resolve the
+   *                        use site to this definition.
+   *   - [namespace|path] : This tells the lookup to do a new lookup at the given namespace and path.
+   * 
+   * Returning multiple of these in the list is allowed, these will all show up during content completion and possibly
+   * other custom strategies. If multiple items are returned during reference resolving for example, the first item
+   * will be used.
+   *
+   * If the lookup has failed, for example your custom rule cannot find any definitions, you can also return 
+   * StopLookup() instead of a list. This tells the lookup algorithm to stop any further lookups for this use site.
+   * This can be useful to stop lookups for recursive expressions like property access, preventing a lot of useless
+   * lookups that will always fail anyway.
+   *
+   * Extension example:
+   *   adjust-index-lookup(check-target-name|namespace, path, prefix):
+   *     PropAccess(exp, name) -> properties
+   *     where
+   *       <check-target-name> name
+   *     with
+   *       if TYPE(type{_}) := <type-of> exp then
+   *         properties := <index-lookup-children(|Property(), prefix)> type
+   *       else
+   *         properties := StopLookup()
+   *       end
+   *
+   *   adjust-index-lookup(check-target-name|namespace, path, prefix):
+   *     Var(name) -> [[Var() | path], [Property() | path]]
+   *     where
+   *       <check-target-name> name
+   *
+   * @param check-target-name   A strategy that should be used to check if the name of the current element is what the
+   *                            lookup algorithm is looking for.
+   * @param namespace           The namespace of the element that should be looked up.
+   * @param path                The path the lookup algorithm is currently looking at for the element.
+   * @param prefix              The prefix name of the element the lookup algorithm is looking for. This is usually the
+   *                            full name of the element, but could be a partial prefix during content completion.
+   * @type def -> List(Def(uri) or [namespace|path]) or StopLookup()
+   */
+  adjust-index-lookup(check-target-name|namespace, path, prefix) = fail
+  
+  /**
+   * Extension point.
+   */
+  adjust-index-import(|namespace, path) = fail
+  
+  /** 
+   * Extension point. Override this rule to store data about definitions in the index. Should call <store-results> on 
+   * a (list of) data that must be stored in the index.
+   *
+   * Note that store-results always fails, this is a trick to make every adjust-index-def-data override always fail so 
+   * that every overriden rule is called once for each definition. This can lead to unexpected behaviour when trying to 
+   * store multiple items by calling store-results in a map or filter! Be sure to always let your adjust-index-def-data 
+   * rule fail if you are doing a <filter(store-results)> for example.
+   *
+   * Extension example:
+   *   adjust-index-def-data(store-results|namespace, path):
+   *     def -> <store-results> Type([namespace|path], type)
+   *     where
+   *       type := <type-of> def
+   *
+   * @param store-results Call this on the data you want to store in the index.
+   * @param namespace     The namespace of the definition that the rule is being called on.
+   * @param path          The path of the definition that the rule is being called on.
+   * @type def -> fail 
+   */
+  adjust-index-def-data(store-results|namespace, path) = fail
+  
+  /**
+   * Extension point. Override this rule to adjust how the index assigns a namespace and path (URI) to definitions and
+   * use sites. Should return a path that will be assigned to the definition or use site.
+   *
+   * Extension example:
+   *   adjust-index-path(check-target-definition|namespace, path):
+   *     Start(_, _) -> [<string-replace(|<project-path>, "")> <Fst> <index-get-current-file>]
+   *
+   *
+   * @param check-target-definition 
+   * @param namespace               The namespace that would be given to the current definition or use site.
+   * @param path                    The path that would be given to the current definition or use site.
+   * @type def -> uri@[namespace|path]
+   */
+  adjust-index-path(check-target-definition|namespace, path) = fail
+  
+  /**
+   * Extension point. Override this rule to define index-stored constructors to check for difference during analysis.
+   * The index-diff-compare extension point is used to do the actual comparison. Defaults to Def constructs.
+   *
+   * Extension example:
+   *   index-diff-constructors = ?Type(_, _)
+   *
+   * @type a -> ?a
+   *
+   * @see index-diff-compare
+   */
+  index-diff-constructors = 
+    ?Def(_)
+  
+  /**
+   * Extension point. Override this rule to define a custom comparison of two index elements. It should fail if they 
+   * are not equal and return the indentity if they are equal. Only constructors defined by index-diff-constructors are
+   * compared.
+   *
+   * Extension example:
+   *   index-diff-compare:
+   *     (Type(u1, v1), Type(u2, v2)) -> <id>
+   *     where
+   *       <index-uri-eq> (u1, u2);
+   *       <eq> (v1, v2)
+   *
+   * @type (a, b) -> ?(a, b)
+   *
+   * @see index-diff-constructors
+   */
+  index-diff-compare:
+    (Def(u1), Def(u2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2)
+ 
+rules // Analysis traversals
+  
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   * Defaults to Editor() phase.
+   *
+   * @param language  The name of the language that is being analysed.
+   *
+   * @type (ast, path, project-path) -> (ast', List(fileToAnalyze@(file, subfile)))
+   *
+   * @see analyze-top(|phase, language)
+   */
+  analyze-top(|language):
+    (ast, path, project-path) -> <analyze-top(|Editor(), language, path, project-path)> ast
+   
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   *
+   * @param phase         The type of analysis phase. There are 2 phases to choose from:
+   *                      - Editor():   File dependencies are analysed.
+   *                      - Compile():  File dependencies are not analysed.
+   * @param language      The name of the language that is being analysed.
+   * @param path          The path of the file to analyze relative to project-path.
+   * @param project-path  The path of the directory that contains all the source files.
+   * @type ast -> (ast', List(fileToAnalyze@(file, subfile)))
+   *
+   * @see analyze-top-internal(|phase, language, project-path, full-path)
+   */
+  analyze-top(|phase, language, path, project-path):
+    ast -> (ast', filesToAnalyze)
+    with
+      full-path := $[[project-path]/[path]];
+      if index-split then
+        index-setup(|language, [project-path], full-path); // Set up the index, splitting may require index calls.
+        asts := <index-toplevel-split> ast;
+        astsFilePairs := <map(ast-uri-to-ast-file(|full-path))> asts;
+        Results(ast', _, _, _, _, _, filesToAnalyze) := 
+          <analyze-top-internal(|phase, language, project-path, full-path)> astsFilePairs
+      else
+        Results(asts, _, _, _, _, _, filesToAnalyze) := 
+          <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, full-path)];
+        ast' := <Hd> asts
+      end
+  
+rules // Parallel analysis
+  
+  /**
+   * Does a parallel analysis of given files using the specified analysis strategy. Automatically does parallel
+   * analysis of dependent files that have changed during the analysis.
+   *
+   * Example:
+   *   <index-parallel-analyze-files(analyze)> ["text/file1.ext", "text/file2.ext"]
+   *
+   * @param analyze (ast, path, project-path) -> (ast', errors, warnings, notes, filesToAnalyze). Strategy that 
+   *                analyzes a file using the index. Gets a (ast, path, project-path) tuple as input and must return 
+   *                a (ast', errors, warnings, notes, filesToAnalyze) tuple as output.
+   * @type List((file, subfile) or file) -> None()
+   */
+  index-parallel-analyze-files(analyze):
+    files -> None()
+    with
+      length; 
+      set-total-work-units
+    with
+      index-parallel-analyze(analyze);
+      filter(not(?ParallelResults((), (), _, _, _, _) <+ ?ParallelResults((), [()], _, _, _, _)); index-set-markers)
+ 
+rules // Query primitives
+ 
+  /**
+   * Gets all DefData entries that match the kind of data and URI in given definition.
+   *
+   * Example:
+   *   <index-get-data(|Type())> Def([Entity(), "Bar"]) => [DefData([Entity(), "Bar"], Type(), TYPE("Bar")), ...]
+   *
+   * @param kind Only data of this kind is returned.
+   * @type Def(uri) -> List(DefData(uri, kind, value))
+   */
+  index-get-data(|kind):
+    <with(?Def(uri) | "Def expected")> -> <index-get-value> DefData(uri, kind, ())
+      
+  /**
+   * Gets all data entries that match the kind of data and URI in given definition.
+   *
+   * Example:
+   *   <index-get-data-all(|Type())> Def([Entity(), "Bar"]) => [TYPE("Bar"), ...]
+   *
+   * @param kind Only data of this kind is returned.
+   * @type Def(uri) -> List(value)
+   */
+  index-get-data-all(|kind):
+    <with(?Def(uri) | "Def expected")> -> <index-get-all-values> DefData(uri, kind, ())
+     
+  /**
+   * Gets all Use entries that match the URI in given definition.
+   *
+   * Example:
+   *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"]), ...]
+   *
+   * @type Def(uri) -> List(Use(uri))
+   */
+  index-get-uses-all:
+    <with(?Def(uri) | "Def expected")> -> <index-get-all> Use(uri)
+     
+  /**
+   * Gets all Read or ReadWildcard entries that match the given template.
+   *
+   * Example:
+   *   <index-get-reads-all> [Property(), "Bar", "p"] => [Read([Property(), "Bar", "p"]), ...]
+   *
+   * @type Def(uri) -> List(Read(uri) or ReadWildcard(uri, prefix))
+   */
+  index-get-reads-all:
+    template -> <conc> (reads, readwildcards')
+    where
+      uri   := <index-uri> template;
+      reads := <index-get-all> Read(uri);
+      if !uri => [namespace, prefix | path-parent] then
+        readwildcards  := <index-get-all> ReadWildcard([namespace | path-parent], ());
+        readwildcards' := <filter(index-readwildcard-substring(|prefix))> readwildcards
+      else
+        readwildcards' := []
+      end
+ 
+  /**
+   * Get all index entries that match the given template.
+   *
+   * Example:
+   *   <index-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type template -> List(elem)
+   */
+  index-get-all:
+    template -> <indexlib-get-all> template
+      with
+       if set := <Index-ReadSet> then
+         uri := <index-uri>;
+         <iset-add(|Read(uri))> set
+       end
+       
+  /**
+   * Get all values of index entries that match the given template.
+   *
+   * Example:
+   *   <index-get-all-values> DefData([Property(), "s"], Type(), ()) => [TYPE("String"), ...]
+   *
+   * @type template -> List(value)
+   *
+   * @see index-value
+   */
+  index-get-all-values:
+    template -> <map(index-value)> <index-get-all> template
+       
+  /**
+   * Get the first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <index-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   *
+   * @type template -> ?elem
+   */
+  index-get:
+    template -> <?[<id>|_]> <index-get-all> template
+      
+  /**
+   * Get the value of first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <index-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
+   *
+   * @type template -> ?value
+   *
+   * @see index-value
+   */
+  index-get-value:
+    template -> <index-value> <?[<id>|_]> <index-get-all> template
+
+  /**
+   * Gets all Def children elements of an URI in a certain namespace.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * Example:
+   *   <index-get-children(|Field())> Def([Entity(), "Baz"]) => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
+   *   <index-get-children(|Field())> "Foo"{[Entity(), "Baz"]} => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
+   *   <index-get-children(|Field())> [Entity(), "Baz"] => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
+   *
+   * @param namespace Only child Def elements in this namespace are returned.
+   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
+   */
+  index-get-children(|namespace) = 
+    index-get-children(\uri -> Def(uri)\, id|namespace)
+  
+  /**
+   * Gets all children elements of an URI in a certain namespace using custom templates.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * @param construct-template  uri -> template. Should create a template to match index entries with, given an URI.
+   * @param name-compare        element -> ?element. Strategy for filtering children elements.
+   * @param namespace           Only child elements in this namespace are returned.
+   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
+   */
+  index-get-children(construct-template, name-compare|namespace):
+    <with(?Def([parent-ns | path]) <+ ?_{[parent-ns | path]} <+ ?[parent-ns | path] | "Def, key or uri expected")> -> children
+    with
+    	// should be parent-ns???
+      if path' := <index-get-value> DefData([namespace|path], Unique(), ()) then
+        template := <construct-template> [namespace | path']
+      else 
+        template := <construct-template> [namespace | path]
+      end;
+      children  := <prim("LANG_index_get_children", template)>;
+      <store-wildcard-read(|namespace, path, "")> children
+
+  /**
+   * Gets all Def children elements of an URI in a certain namespace where the name starts with a prefix.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * Example:
+   *   <index-get-children(|Field(), "fo")> Def([Entity(), "Baz"]) => [Def([Field(), "Foo"]), ...]
+   *   <index-get-children(|Field(), "ba")> "Foo"{[Entity(), "Baz"]} => [Def([Field(), "Bar"]), ...]
+   *   <index-get-children(|Field(), "ze")> [Entity(), "Baz"] => [...]
+   *
+   * @param namespace Only child Def elements in this namespace are returned.
+   * @param prefix    Only child Def elements where the name starts with this prefix are returned.
+   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
+   */
+  index-get-children(|namespace, prefix) = 
+    index-get-children(\uri -> Def(uri)\, index-compare-name-substring(|prefix, namespace)|namespace, prefix)
+  
+  /**
+   * Gets all children elements of an URI in a certain namespace where the name starts with a prefix
+   * using custom templates.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * @param construct-template  uri -> template. Should create a template to match index entries with, given an URI.
+   * @param name-compare        element -> ?element. Strategy for filtering children elements.
+   * @param namespace           Only child elements in this namespace are returned.
+   * @param prefix              Only child elements where the name starts with this prefix are returned.
+   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
+   */
+  index-get-children(construct-template, name-compare|namespace, prefix):
+    <with(?Def([parent-ns | path]) <+ ?_{[parent-ns | path]} <+ ?[parent-ns | path] | "Def, key or uri expected")> -> children'
+    with
+      if path' := <index-get-value> DefData([namespace|path], Unique(), ()) then
+        template := <construct-template> [namespace | path']
+      else 
+        template := <construct-template> [namespace | path]
+      end;
+      children  := <prim("LANG_index_get_children", template)>;
+      children' := <filter(name-compare)> children;
+      <store-wildcard-read(|namespace, path, prefix)> children'
+
+  /**
+   * Gets a set of all files that have a reference to the given index entries.
+   *
+   * Example:
+   *   <index-get-referenced-files(\uri -> [Read(uri), Use(uri, [])]\)> [Def([Entity(), "Bar"]), ...] => 
+   *     [("fullpath/otherfile.ext", "subfile"), ...]
+   *
+   * @param construct-from-uri  uri -> List(elements). Construction strategy that creates a list of reference 
+   *                            constructs from all given entries, such as \uri -> [Read(uri), Use(uri, [])]\
+   * @type List(elem) -> List((file, subfile))
+   */
+  index-get-referenced-files(construct-from-uri):
+    entries -> files
+    where
+      uris        := <filter(index-uri)> entries;
+      referenced  := <concat> <filter(construct-from-uri)> uris;
+      files       := <iset-elements> <iset-addlist(|<mapconcat(index-get-files-of)> referenced)> <new-iset>
+ 
+  /**
+   * Convenience function for finding files with Read and Use dependencies to the given definitions.
+   *
+   * Example:
+   *   <index-get-dependent-files> [Def([Entity(), "Bar"]), ...] => [("fullpath/otherfile.ext", "subfile"), ...]
+   *
+   * @type List(elem) -> List((file, subfile))
+   *
+   * @see index-get-referenced-files(construct-from-uri)
+   * @see index-file-dependent-construct
+   */
+  index-get-dependent-files = 
+    index-get-referenced-files(index-file-dependent-construct)
+     
+rules // Index lookup rules (that take into account adjust-index-lookup)
+ 
+  /**
+   * Given an annotated AST node, resolves it, returning its definition.
+   * Uses precise matching for names.
+   *
+   * @type "name"{uri} -> ?Def(uri')
+   */
+  index-lookup:
+    x{[namespace|path]} -> <index-lookup-internal(index-compare-name-equal(|name)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
+ 
+  /**
+   * Given an annotated AST node, resolves it, returning all its definitions.
+   * Uses precise matching for names.
+   * 
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all:
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-name-equal(|name)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
+ 
+  /**
+   * Given an annotated AST node and a prefix, looks for all definitions with given prefix starting at the scope of 
+   * the given node.
+   * Uses substring matching for names.
+   *
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all(|prefix):
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-name-substring(|prefix)|ns, path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace
+      
+  /**
+   * Given an annotated AST node, resolves it in only the parent scope of the given node, returning all its definitions.
+   * Uses precise matching for names.
+   *
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-scoped:
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(index-compare-name-equal(|name)|ns, parent-path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x;
+      (<?[_|<id>]> path <+ !path) => parent-path
+      
+  /**
+   * Given an annotated AST node, resolves it in only the parent scope of the given node, returning all its definitions.
+   * Uses precise matching for names. Imports are not considered.
+   *
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-scoped-noimports:
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(fail, id, index-compare-name-equal(|name)|ns, parent-path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x;
+      (<?[_|<id>]> path <+ !path) => parent-path
+  
+  /**
+   * Given an annotated AST node and a prefix, looks for all definitions with given prefix in only the parent scope of 
+   * the given node.
+   * Uses substring matching for names.
+   *
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-scoped(|prefix):
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(index-compare-name-substring(|prefix)|ns, parent-path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      (<?[_|<id>]> path <+ !path) => parent-path
+
+  /**
+   * Given an annotated AST node and a namespace, returns all definitions inside given node with given namespace.
+   * Does not match names, all names are allowed.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-children(|namespace) = 
+    index-lookup-children(|namespace, "")
+      
+  /**
+   * Given an annotated AST node, a namespace and prefix, returns all definitions inside given node with given 
+   * namespace and prefix.
+   * Uses substring matching for names.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */    
+  index-lookup-children(|namespace, prefix):
+    x{[_|path]} -> <index-lookup-all-scoped-internal(index-compare-name-substring(|prefix, namespace)|namespace, path, prefix)> x
+      
+rules // Index utilities
+  
+  /**
+   * Gets the namespace part of the URI for given key (term{uri} element).
+   *
+   * Example:
+   *   <index-uri-namespace> "Bar"{[Entity(), "Bar", "Baz"]} => Entity()
+   *
+   * @type "name"{uri@[namespace|path]} -> namespace
+   */
+  index-uri-namespace:
+    x{[namespace|path]} -> <index-namespace-unwrap> namespace
+
+  /**
+   * Gets the path part of the URI for given key (term{uri} element). Resolves it if unresolved.
+   *
+   * Example:
+   *   <index-uri-path> "Bar"{[Entity(), "Bar", "Baz"]} => ["Bar", "Baz"]
+   *
+   * @type "name"{uri@[namespace|path]} -> path'
+   */
+  index-uri-path:
+    x{[namespace|path]} -> path'
+    where
+      if !namespace => Unresolved(namespace) then
+        Def(path') := <index-lookup>
+      else
+        path' := path
+      end
+      
+  /**
+   * Gets the name part of the URI for given key (term{uri} element).
+   *
+   * Example:
+   *   <index-uri-name> "Bar"{[Entity(), "Bar", "Baz"] => "Bar"
+   *
+   * @type "name"{uri@[namespace|[name|restPath]]} -> name
+   */ 
+  index-uri-name:
+    x{[_|[name|_]]} -> name
+    
+  /**
+   * Tries to get the name part of the URI for given term or fail if given term does not have an URI or name.
+   *
+   * Example:
+   *   <index-uri-name> Def([Entity(), "Bar", "Baz"]) => "Bar"
+   *   <index-uri-name> Type("Foo") => fail
+   *   <index-uri-name> Read([Entity()]) => fail
+   *
+   * @type x -> name
+   */   
+  index-uri-name:
+    x -> <index-uri-name> <index-uri> x
+    where
+      not(<has-annos> x)
+    
+  /**
+   * Determines if a given AST node is a definition site, according to the syntax.
+   *
+   * FIXME: Also succeeds on use sites.
+   *
+   * @type def -> ?def
+   */
+  index-is-definition =
+    where(nam-get-definition-keys; Hd)
+    
+  /**
+   * Checks if given keys (term{uri} elements) are equal. Discards unresolved URI's.
+   *
+   * Example:
+   *   <index-key-eq> ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]}) => 
+   *     ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]})
+   *   <index-key-eq> ("Foo"{[Entity(), "Foo"]}, "Bar"{[Entity(), "Bar"]}) => fail
+   *
+   * @type (k1, k2) -> ?(k1, k2)
+   */      
+  index-key-eq:
+    (k1, k2) -> <id>
+    where
+      <eq> (<index-key-unwrap> k1, <index-key-unwrap> k2)
+      
+  /**
+   * Given a list of file pairs, returns the list of real files.
+   *
+   * @type List((file, subfile)) -> List(file)
+   */    
+  index-filepairs-to-files:
+    filePairs -> files
+    with
+      files := <make-set> <map(Fst; string-replace(|<conc-strings> (<project-path>, "/"), ""))> filePairs
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.names/lib/compilation-library.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/lib/compilation-library.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -0,0 +1,188 @@
+module lib/compilation-library
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  lib/index-library
+  lib/analysis-library
+  lib/analysis-library-internal
+  
+rules // Extension points
+  
+  /**
+   * Extension point. Override this rule to define a desugaring that is applied to AST before analyzing and compiling.
+   *
+   * Extension example:
+   *   index-desugar-ast:
+   *     ast -> <desugar> ast
+   *
+   * @type ast -> ast'
+   */
+  index-desugar-ast = fail
+    
+  /**
+   * Extension point. Override this rule to define a compilation or transformation to some other target language. The
+   * index manages which files have to be compiled and calls this rule for each AST that has changed since the last
+   * compilation.
+   *
+   * Extensions example:
+   *   index-compile-ast(|file, subfile):
+   *     ast -> None()
+   *     with
+   *       java := <to-java> ast;
+   *       full-path := <dirname> file;
+   *       filename := <guarantee-extension(|"java")> <base-filename> file;
+   *       writePath := $[[full-path]/java/];
+   *       writeFile :=  $[[writePath][filename]];
+   *       try(<mkdir> writePath);
+   *       <fclose> <fputs> (java, <fopen> (writeFile, "w"))
+   *
+   * @param file    The file that must be compiled.
+   * @param subfile The subfile that must be compiled ("" if there is no subfile).
+   * @type ast -> None()
+   */
+  index-compile-ast(|file, subfile) = fail
+  
+rules // Compilation
+  
+  /**
+   * Schedules compilation in the background of all files that have changed since the last compilation.
+   *
+   * @type x -> x
+   */
+  index-schedule-compilation:
+    _ -> None()
+    with
+      queue-strategy(|"index-compilation", "Compiling files")
+  
+  /** @internal */
+  index-compilation:
+    language -> None()
+    with
+      // Init
+      project-path := <project-path>;
+      index-setup(|language, [project-path], ".")
+    with
+      // Determine the files to compile by looking at changed files
+      diffs         := <analyze-get-compilediffs>;
+      files         := <map(index-compilation-restore-read-file)> diffs;
+      filteredFiles := <make-set> <remove-all(index-compilation-filter-file)> files;
+      
+      // Clean compile time reads
+      <filter(index-compilation-clean-reads)> filteredFiles;
+      
+      // Set total work units to number of files to compile for visual indication
+      <set-total-work-units> <length> filteredFiles;
+      
+      // Compile the files
+      <filter(index-compilation-file(|language, project-path); complete-work-unit)> filteredFiles
+
+  /** @internal */
+  index-compilation-file(|language, project-path):
+    (path, subfile) -> None()
+    with
+      ast := <index-get-global(|<conc> (<index-file-to-uri> (path, subfile), ["ast"]))>;
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Compile file
+        <try(index-compile-ast(|path, subfile))> ast;
+        
+        // Store compile-time reads.
+        reads := <iset-elements> readSet;
+        <index-add-all(|<index-compilation-file-tuple> (path, subfile))> reads
+      |}
+
+  /** @internal */
+  index-compilation-filter-file:
+    (file, subfile) -> (file, subfile)
+    where
+      <is-test-file <+ index-is-fake-file <+ not(file-exists)> file
+    
+rules // On save handling
+  
+  /**
+   * Commits the index to disk and schedules compilation. Use trigger-commit-and-compile instead of this strategy.
+   *
+   * @see trigger-commit-and-compile
+   *
+   * @internal
+   */
+  commit-and-compile:
+    language -> None()
+    with
+      index-commit
+    with
+      index-schedule-compilation
+
+  /**
+   * Triggers commit and compilation, requires target language as current term.
+   * Compilation can be delayed by using disable-commit-and-compile. Compilation will be triggered when 
+   * enable-commit-and-compile is called.
+   *
+   * @type language -> language
+   *
+   * @see enable-commit-and-compile
+   * @see disable-commit-and-compile
+   */
+  trigger-commit-and-compile:
+    language -> <id>
+    with
+      if not(index-is-global-enabled(|"delay-compile")) then
+        commit-and-compile
+      else
+        index-enable-global(|"trigger-compile")
+      end
+  
+  /**
+   * Delays commit and compilation until enable-commit-and-compile is called.
+   *
+   * @type x -> x
+   *
+   * @see enable-commit-and-compile
+   */
+  disable-commit-and-compile = 
+    index-enable-global(|"delay-compile")
+  
+  /**
+   * Cancels the commit and compilation delay, requires target language as current term. 
+   * If commit and compilation was triggered during the delay, it is triggered now.
+   *
+   * @type language -> language
+   *
+   * @see disable-commit-and-compile
+   */
+  enable-commit-and-compile:
+    language -> <id>
+    with
+      if index-is-global-enabled(|"trigger-compile") then
+        commit-and-compile
+      end;
+      index-disable-global(|"delay-compile")
+      
+/** @internal */
+rules // Compile time reads
+
+  /** @internal */
+  index-compilation-restore-read-file:
+    (file, subfile) -> (file', subfile)
+    where
+      file' := <string-replace(|<index-compilation-read-path>, "")> file
+  /** @internal */
+  index-compilation-restore-read-file:
+    (file, subfile) -> (file, subfile)
+    where
+      not(<string-replace(|<index-compilation-read-path>, "")> file)
+      
+  /** @internal */
+  index-compilation-clean-reads = 
+    ?(file, subfile); index-compilation-file-tuple; index-clear-file
+      
+  /** @internal */
+  index-compilation-file-tuple:
+    (file, subfile) -> ($[[<index-compilation-read-path>]/[file]], subfile)
+    
+  /** @internal */
+  index-compilation-read-path =
+    !"/.internal/reads/compile"

Added: spoofax-imp/trunk/org.strategoxt.imp.names/lib/index-library.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/lib/index-library.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -0,0 +1,708 @@
+module lib/index-library
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+signature constructors
+  
+  // Index elements
+  DefData      : List(UriPart) * DefDataType * Term -> Summary
+    
+  // URI header
+  Namespace      : UriPart
+  Unresolved     : Namespace -> UriPart
+  INTERNAL_ERROR : UriPart
+  Timestamp      : UriPart
+ 
+  // Remainder of URI
+  String : UriPart
+  Anon   : Int -> UriPart
+  Anon   : UriPart
+  
+  FileEntries : Term * Term -> Term
+  
+  // Globals
+  Global : Namespace
+  Global : List(UriPart) -> Summary
+  Global : List(UriPart) * List(Summary) -> Summary
+  
+  // None namespace
+  None   : Namespace
+  
+rules // Index management
+   
+  /**
+   * Sets up the index library for given language and project paths.
+   * Must be called once before doing anything with the library.
+   *
+   * @param language      The language to set the index up for.
+   * @param project-path  The project paths that contain all source files to analyse and compile.
+   *
+   * @obsolete
+   * @type x -> x
+   */
+  index-setup(|language, project-paths) =
+    obsolete(!"index-setup(|language, project-paths); use index-setup(|language, project-paths, current-file)");
+    index-setup(|language, project-paths, ".")
+    
+  /**
+   * Sets up the index library for given language, project paths and current file.
+   * Must be called once before doing anything with the library.
+   *
+   * Example:
+   *   <index-setup(|"MiniJava", [<project-path>], "test/test.mjv")
+   *
+   * @param language      The language to set the index up for.
+   * @param project-path  The project paths that contain all source files to analyse and compile.
+   * @param current-file  The current file that is being analysed. Can be retrieved later using index-get-current-file.
+   *                      Can also be changed later using index-set-current-file.
+   * @type x -> x
+   */
+  index-setup(|language, project-paths, current-file) =
+    prim("LANG_index_setup", language, project-paths, current-file)
+    
+  /**
+   * Sets the current file the index (analysis) is operating on to the given file.
+   *
+   * Example:
+   *   <index-set-current-file> "fullpath/file.ext"
+   *   <index-set-current-file> ("fullpath/file.ext", "subfile")
+   *
+   * @type x -> ?x
+   */
+  index-set-current-file = 
+    prim("LANG_index_set_current_file", <id>)
+
+  /**
+   * Adds given element to the index with given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-add(|"fullpath/file.ext")> Def([Entity(), "Bar"])
+   *   <index-add(|("fullpath/file.ext", "subfile"))> Def([Entity(), "Bar"])
+   *
+   * @param file  The file (and subfile) to add the element to.
+   * @type x -> ?x
+   */
+  index-add(|file) =
+    prim("LANG_index_add", <id>, file)
+
+  /**
+   * Adds all given elements to the index with given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-add-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
+   *   <index-add-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
+   *
+   * @param file  The file (and subfile) to add the elements to.
+   * @type List(x) -> ?List(x)
+   */
+  index-add-all(|file) =
+    list-loop(with(index-add(|file)))
+    
+  /**
+   * Removes given element from the index that is contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-remove(|"fullpath/file.ext")> Def([Entity(), "Bar"])
+   *   <index-remove(|("fullpath/file.ext", "subfile"))> Def([Entity(), "Bar"])
+   * 
+   * @param file  The file (and subfile) to remove the element from.
+   * @type x -> ?x
+   */
+  index-remove(|file) =
+    prim("LANG_index_remove", <id>, file)
+    
+  /**
+   * Removes all given elements from the index that are contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-remove-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
+   *   <index-remove-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
+   *
+   * @param file  The file (and subfile) to remove the elements from.
+   * @type List(x) -> ?List(x)
+   */
+  index-remove-all(|file) =
+    list-loop(with(index-remove(|file)))
+    
+  /**
+   * Removes all elements from the index that are contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-clear-file> "fullpath/file.ext"
+   *   <index-clear-file> ("fullpath/file.ext", "subfile")
+   *
+   * @type x -> ?x
+   */
+  index-clear-file = 
+    prim("LANG_index_clear_file", <id>)
+    
+  /**
+   * Clears all elements from the index.
+   *
+   * @type x -> x
+   */
+  index-clear = 
+    prim("LANG_index_clear_all")
+   
+  /**
+   * Commits index to a file on disk.
+   *
+   * @type x -> x
+   */
+  index-commit = 
+    prim("LANG_index_commit")
+
+  /**
+   * Starts a transaction on the index for the current file. Additions to the index are not visible to other files 
+   * until index-end-transaction is called. Operations on the index are only thread safe during a transaction.
+   *
+   * @type x -> x
+   */
+  index-start-transaction = 
+    prim("LANG_index_start_transaction")
+  
+  /**
+   * Ends a transaction on the index for the current file. Additions made to the index during the transaction are
+   * added to the global index visible for other files. Operations on the index are not thread safe any more after 
+   * this call.
+   *
+   * @type x -> x
+   */
+  index-end-transaction = 
+    prim("LANG_index_end_transaction")
+  
+  /**
+   * Starts a transaction, applies given strategy and ends the transaction. All index operations used from the given
+   * strategy are thread safe.
+   * 
+   * @param s The strategy to apply. Transaction will still properly end if strategy fails.
+   * @type x -> x'
+   *
+   * @see index-start-transaction
+   * @see index-end-transaction
+   */
+  index-transaction(s) = 
+    prim("LANG_index_start_transaction"); try(s); prim("LANG_index_end_transaction")
+  
+rules // Index querying
+  
+  /**
+   * Gets the file that the analysis is currently in.
+   *
+   * @type x -> (file, subfile)
+   *
+   * @see index-setup(|language, project-paths, current-file)
+   * @see index-set-current-file
+   */
+  index-get-current-file =
+    prim("LANG_index_get_current_file")
+  
+  /**
+   * Gets a list of all files and subfiles for current project.
+   *
+   * Example:
+   *   <index-get-all-files> => [("fullpath/file.ext", "subfile"), ...]
+   *
+   * @type x -> List((file, subfile))
+   */   
+  index-get-all-files =
+    prim("LANG_index_all_files")
+  
+  /**
+   * Gets all index entries for the given file path and optionally subfile.
+   *
+   * Examples:
+   *   <index-get-all-in-file> "fullpath/file.ext" => [Def([Entity(), "Bar"]), ...]
+   *   <index-get-all-in-file> ("fullpath/file.ext", "subfile") => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type file or (file, subfile) -> List(elem)
+   */  
+  index-get-all-in-file:
+    filepath -> entries
+    with
+      entries := <prim("LANG_index_get_all_in_file", filepath)>
+   
+  /**
+   * Gets index entries in some namespace for the given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-get-all-in-file(|Import())> "fullpath/file.ext" => [Def([Import(), "Bar"]), ...]
+   *   <index-get-all-in-file(|Import())> ("fullpath/file.ext", "subfile") => [Def([Import(), "Bar"]), ...]
+   *
+   * @param namespace Only index entries from this namespace are retrieved.
+   * @type file or (file, subfile) -> List(elem)
+   */  
+  index-get-all-in-file(|namespace):
+    filepath -> entries
+    with
+      // TODO: Optimize -- add an argument to LANG_index_get_all_in_file to do this filtering
+      entries := <prim("LANG_index_get_all_in_file", filepath)>;
+      filter(where(index-uri => [namespace | _]))
+    
+  /**
+   * Gets the revision of a file and optionally subfile.
+   *
+   * Example:
+   *   <index-get-file-revision> "fullpath/file.ext" => 13
+   *   <index-get-file-revision> ("fullpath/file.ext", "subfile") => 37
+   *
+   * @type file or (file, subfile) -> Int
+   */
+  index-get-file-revision:
+    file -> <prim("LANG_index_get_file_revision", file)>
+    
+  /**
+   * Gets the containing files and subfiles of index entry with given template.
+   *
+   * Example:
+   *   <index-get-files-of> Def([Entity(), "Bar"]) => [("fullpath/file.ext", "subfile"), ...]
+   *
+   * @type template -> List((file, subfile))
+   */  
+  index-get-files-of:
+    template -> <prim("LANG_index_get_files_of", template)>
+    
+  /**
+   * Get all index entries that match the given template.
+   *
+   * Example:
+   *   <indexlib-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type template -> List(elem)
+   */
+  indexlib-get-all:
+    template -> <prim("LANG_index_get", template)>
+    
+  /**
+   * Get all values of index entries that match the given template.
+   *
+   * Example:
+   *   <indexlib-get-all-values> DefData([Property(), "s"], Type(), ()) => [TYPE("String"), ...]
+   *
+   * @type template -> List(value)
+   *
+   * @see index-value
+   */
+  indexlib-get-all-values:
+    template -> <map(index-value)> <indexlib-get-all> template
+ 
+  /**
+   * Get the first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <indexlib-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   *
+   * @type template -> ?elem
+   */
+  indexlib-get:
+    template -> <?[<id>|_]> <indexlib-get-all> template
+   
+  /**
+   * Get the value of first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <indexlib-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
+   *
+   * @type template -> ?value
+   *
+   * @see index-value
+   */
+  indexlib-get-value:
+    template -> <index-value> <?[<id>|_]> <indexlib-get-all> template
+    
+rules // Index globals
+    
+  /**
+   * Gets the 'fake' path where globals are stored in the index.
+   *
+   * @internal
+   */
+  index-globals-path = 
+    !"/.internal/globals"
+    
+  /**
+   * Gets the URI where globals are stored in the index for given name or names.
+   *
+   * @internal
+   * @type name or List(name) -> uri
+   */
+  index-globals-uri:
+    names -> uri
+    with
+      if is-list then
+        uri := <concat> [[Global()], names, ["globals", ".internal"]]
+      else
+        uri := [Global(), names, "global", ".internal"]
+      end
+    
+  /**
+   * Gets the first value in global storage with given name, or fail.
+   *
+   * Example:
+   *   index-get-global(|"last-compile") => Timestamp(1334322856)
+   *   index-get-global(|["last-compile", "file.str"]) => Timestamp(1334322856)
+   * 
+   * @param name  The name or list of names to identify the global value.
+   * @type _ -> ?value
+   */
+  index-get-global(|name):
+    _ -> value
+    where
+      value := <indexlib-get-value> Global(<index-globals-uri> name, ())
+    
+  /**
+   * Gets all values in global storage with given name.
+   *
+   * Example:
+   *   index-get-global(|"last-compile") => [Timestamp(1334322856), ...]
+   *   index-get-global(|["last-compile", "file.str"]) => [Timestamp(1334322856), ...]
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type _ -> List(value)
+   */ 
+  index-get-all-globals(|name):
+    _ -> values
+    with
+      values := <indexlib-get-all-values> Global(<index-globals-uri> name, ())
+    
+  /**
+   * Add value to global storage with given name.
+   *
+   * Example:
+   *   <index-add-global(|"last-compile")> Timestamp(1334322856)
+   *   <index-add-global(|["last-compile", "file.str"])> Timestamp(1334322856)
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-add-global(|name):
+    value -> <id>
+    with
+      <index-add(|<index-globals-path>)> Global(<index-globals-uri> name, value)
+      
+  /**
+   * Overwrites value in global storage with given value.
+   *
+   * Example:
+   *   <index-set-global(|"last-compile")> Timestamp(1334322856)
+   *   <index-set-global(|["last-compile", "file.str"])> Timestamp(1334322856)
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-set-global(|name):
+    value -> <id>
+    with
+      index-clear-global(|name);
+      <index-add-global(|name)> value
+    
+  /**
+   * Removes all values from global storage with given name.
+   *
+   * Example:
+   *   index-clear-global(|"last-compile")
+   *   index-clear-global(|["last-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-clear-global(|name):
+    _ -> <id>
+    with
+      <index-remove(|<index-globals-path>)> Global(<index-globals-uri> name, ())
+      
+  /**
+   * Gets the URI where boolean globals are stored in the index for given name or names.
+   *
+   * @internal
+   */
+  index-boolean-globals-uri:
+    names -> uri
+    with
+      if is-list then
+        uri := <concat> [[Global()], names, ["boolean", "globals", ".internal"]]
+      else
+        uri := [Global(), names, "boolean", "global", ".internal"]
+      end
+      
+  /**
+   * Sets boolean value true to global boolean storage with given name.
+   *
+   * Example:
+   *   index-enable-global(|"can-compile")
+   *   index-enable-global(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> x
+   */   
+  index-enable-global(|name):
+    _ -> <id>
+    with
+      <index-add(|<index-globals-path>)> Global(<index-boolean-globals-uri> name)
+      
+  /**
+   * Sets boolean value false to global boolean storage with given name.
+   *
+   * Example:
+   *   index-disable-global(|"can-compile")
+   *   index-disable-global(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> x
+   */   
+  index-disable-global(|name):
+    _ -> <id>
+    with
+      <index-remove(|<index-globals-path>)> Global(<index-boolean-globals-uri> name)
+      
+  /**
+   * Query for boolean value true in global boolean storage with given name.
+   *
+   * Example:
+   *   index-is-global-enabled(|"can-compile")
+   *   index-is-global-enabled(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> ?x
+   */   
+  index-is-global-enabled(|name):
+    _ -> <id>
+    where
+      <indexlib-get> Global(<index-boolean-globals-uri> name)
+
+rules // Index utility
+  
+  /**
+   * Gets the URI part for given term. Can be extended by defining a index-uri-impl rule. If no index-uri-impl rule
+   * is defined for the given term the first subterm is used as the URI. Fails if no URI can be retrieved from the
+   * given term.
+   *
+   * Example:
+   *   <index-uri> DefData([Entity(), "Bar", "Baz"], Type(), TYPE("Bar")) => [Entity(), "Bar", "Baz"]
+   *
+   * @type elem -> ?uri
+   *
+   * @see index-uri-impl
+   * @see index-uri-generic
+   */ 
+  index-uri = 
+    index-uri-impl <+ index-uri-generic
+  
+  /**
+   * Gets the namespace part of the given URI.
+   *
+   * Example:
+   *   <index-uri-path> [Entity(), "Bar", "Baz"] => Entity()
+   *
+   * @type uri@[namespace|path] -> namespace
+   */ 
+  index-uri-namespace =
+    ?[<id>|_]
+  
+  /**
+   * Gets the path part of the given URI.
+   *
+   * Example:
+   *   <index-uri-path> [Entity(), "Bar", "Baz"] => ["Bar", "Baz"]
+   *   <index-uri-path> [Entity()] => []
+   *
+   * @type uri@[namespace|path] -> path
+   */ 
+  index-uri-path =
+    ?[_|<id>]
+    
+  /**
+   * Gets the name part of the given URI or fail if there is no name.
+   *
+   * Example:
+   *   <index-uri-name> [Entity(), "Bar", "Baz"] => "Bar"
+   *   <index-uri-name> [Entity()] => fail
+   *
+   * @type uri@[namespace|[name|restPath]] -> ?name
+   */ 
+  index-uri-name =
+    ?[_|[<id>|_]]
+    
+  /**
+   * Gets the parent of given URI or fail if the URI doesn't have a parent.
+   *
+   * Example:
+   *   <index-uri-parent> [Entity(), "Bar", "Baz"] => [Entity(), "Baz"]
+   *   <index-uri-parent> [Entity(), "Baz"] => [Entity()]
+   *   <index-uri-parent> [Entity()] => fail
+   *
+   * @type uri@[namespace|[name|restPath]] -> ?name
+   */     
+  index-uri-parent =
+    ?[ns|[_|<id>]]; ![ns|<id>]
+  
+  /**
+   * Gets the value part for given term. Can be extended by defining a index-value-impl rule. If no index-value-impl 
+   * rule is defined for the given term the second subterm is used as the value. Fails if no value can be retrieved
+   * from the given term.
+   *
+   * Example:
+   *   <index-value> DefData([Entity(), "Bar", "Baz"], Type(), TYPE("Bar")) => TYPE("Bar")
+   *
+   * @type elem -> ?value
+   *
+   * @see index-value-impl
+   * @see index-value-generic
+   */  
+  index-value = 
+    index-value-impl <+ index-value-generic
+  
+  /**
+   * Queries if given index file is a 'fake' file for storing internal data.
+   *
+   * @type x -> ?x
+   */
+  index-is-fake-file = 
+    string-starts-with(|"/.internal")
+  
+  /**
+   * Checks if given URI's are equal. Discards anonymous scopes if necessary.
+   *
+   * Example:
+   *   <index-uri-eq> ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"]) => 
+   *     ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"])
+   *   <index-uri-eq> ([Entity(), "Foo"], [Entity(), "Bar"]) => fail
+   *
+   * @type (u1, u2) -> ?(u1, u2)
+   */
+  index-uri-eq:
+    (u1, u2) -> <id>
+    where
+      u1' := <index-uri-unwrap> u1;
+      u2' := <index-uri-unwrap> u2;
+      (<eq> (u1', u2') <+ <eq> (<remove-all(?Anon(_))> u1', <remove-all(?Anon(_))> u2'))
+  
+  /**
+   * Finds the first key (term{uri} element) for given term, or fail. 
+   *
+   * @type x -> ?name{uri}
+   */
+  index-find-key:
+    x -> key
+    where
+      key := <collect-one(?_{_})> x
+      
+  /**
+   * Converts a URI to a string.
+   *
+   * Example:
+   *   <index-uri-to-string> [Entity(), "Bar", "Baz"] => "Entity://Bar.Baz"
+   *
+   * @type uri -> str
+   */
+  index-uri-to-string:
+    [ns|path] -> <concat-strings> [nsStr, "://", pathStr]
+    with
+      pathStr := <take-until(?Anon(_)); reverse; separate-by(|"."); concat-strings> path;
+      nsStr := <?<id>#(_)> ns
+  
+  /**
+   * Converts a file to a string.
+   *
+   * Example:
+   *   <index-file-to-string> "fullpath/file.ext" => "fullpath/file.ext"
+   *
+   * @type file -> file
+   */
+  index-file-to-string:
+    file -> file
+    where
+      not(<is-tuple> file)
+  
+  /**
+   * Converts a file ((file, subfile) tuple) to a string.
+   *
+   * Example:
+   *   <index-file-to-string> ("fullpath/file.ext", []) => "fullpath/file.ext"
+   *
+   * @type (file, []) -> file
+   */
+  index-file-to-string:
+    (file, []) -> file
+    
+  /**
+   * Converts a file ((file, subfile) tuple) to a string.
+   *
+   * Example:
+   *   <index-file-to-string> ("fullpath/file.ext", [Entity(), "Foo" "Bar"]) => "fullpath/file.ext at Entity://Foo.Bar"
+   *
+   * @type (file, subfile) -> str
+   */
+  index-file-to-string:
+    (file, subfile) -> <concat-strings> [file, "@", <index-uri-to-string> subfile]
+    where
+      not([] := subfile)
+
+  /**
+   * Converts a file to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> "fullpath/file.ext" => [None(), "fullpath/file.ext"]
+   *
+   * @type file -> uri
+   */      
+  index-file-to-uri:
+    file -> [None(), file]
+    where
+      not(<is-tuple> file)
+      
+  /**
+   * Converts a file ((file, subfile) tuple) to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> ("fullpath/file.ext", []) => [None(), "fullpath/file.ext]
+   *
+   * @type (file, subfile) -> uri
+   */      
+  index-file-to-uri:
+    (file, []) -> [None(), file]
+    
+  /**
+   * Converts a file ((file, subfile) tuple) to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> ("fullpath/file.ext", [Entity(), "Foo" "Bar"]) => [Entity(), "Foo", "Bar", "fullpath/file.ext"]
+   *
+   * @type (file, subfile) -> uri
+   */      
+  index-file-to-uri:
+    (file, subfile) -> <conc> ([file], subfile)
+    where
+      not([] := subfile)
+      
+/** @internal */
+rules // URI and value projections
+  
+  /** @internal */
+  index-uri-impl:
+    DefData(uri, _, _) -> uri
+
+  /** @internal */
+  index-uri-generic:
+    term -> <?_#(<?[<id>|_]>)> term
+  
+  /** @internal */
+  index-value-impl:
+    DefData(_, _, value) -> value
+    
+  /** @internal */
+  index-value-generic:
+    term -> <?_#(<?[_, <id>|_]> )> term
+     
+/** @internal */ 
+rules // Internal helpers
+  
+  /** @internal */
+  index-namespace-unwrap =
+    \Unresolved(n) -> n\ <+ id
+    
+  /** @internal */
+  index-uri-unwrap =
+    \[ns|xs] -> [<index-namespace-unwrap> ns|xs]\ <+ id

Added: spoofax-imp/trunk/org.strategoxt.imp.names/semantics/check.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/semantics/check.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -0,0 +1,52 @@
+module semantics/check
+
+imports
+  libstrc
+
+  lib/analysis-library
+  lib/analysis-library-internal
+  lib/index-library
+
+  include/NameDefinitionLanguage
+  generate
+  
+rules // generic constraints
+  
+  constraint-error:
+    x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
+    
+  constraint-error = nam-get-definition-keys ; filter(duplicate-error)
+  
+  duplicate-error:
+    key{[ns|_]} -> (key, $[Duplicate definition])
+    where
+      definitions := <index-lookup-all> key;
+      <gt> (<length> definitions, 1)
+
+  constraint-warning = fail
+  constraint-note = fail
+
+rules // specific constraints  
+  
+  constraint-error:
+  	ND-Rule(_, part*) -> [def-err*, ref-err*, scope-err*]
+  	where
+  	  def*       := <filter(?ND-Def(_, _, <id>, _, _, _, _))> part*;
+  	  ref*       := <filter(collect-one(?ND-Ref(_, <id>, _, _, _)))> part*;
+  	  scope*     := <filter(?ND-Def(_, _, _, _, _, <id>, _) + ?ND-Scope(<id>)); concat; map(?NsRef(<id>))> part*;
+  	  dup-def*   := <filter(where({n: ?n; <filter(?n); ?[_, _|_]> def*}))> def*;
+  	  dup-ref*   := <filter(where({n: ?n; <filter(?n); ?[_, _|_]> ref*}))> ref*;
+  	  dup-scope* := <filter(where({n: ?n; <filter(?n); ?[_, _|_]> scope*}))> scope*;
+  	  def-err*   := <map(\n -> (n, $[Multiple definitions with the same name [<pp-str> n].])\)> dup-def*;
+  	  ref-err*   := <map(\n -> (n, $[Multiple references with the same name [<pp-str> n].] )\)> dup-ref*;
+  	  scope-err* := <map(\n -> (n, $[Different scopes for the same namespace [n].])\)> dup-scope*
+  	   
+  constraint-error:
+  	ND-Refs(part*) -> error*
+  	where
+  	  [name|name*] := <filter(?ND-Ref(_, <id>, _, _, _)); make-set> part*;
+  	  error*       := <map(\n -> (n, $[Alternative references need to share name [<pp-str> name].])\)> name*
+  
+rules // helper
+		  
+  pp-str = to-ppable-str ; pp-stratego-string
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.names/semantics/names.nd
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/semantics/names.nd	Fri Jul 20 21:17:40 2012	(r25220)
@@ -0,0 +1,29 @@
+module semantics/names
+
+imports
+	include/NameDefinitionLanguage
+	semantics/stratego-names
+	
+namespaces
+
+	Module
+	Namespace
+		
+binding rules
+
+	Naming(m, _, _): 
+		defines Module m 
+		
+	Import(m): 
+		imports 
+			Namespace
+		from Module m
+		
+	Namespace(ns):
+		defines Namespace ns
+		
+	NsRef(ns):
+		refers to Namespace ns
+		
+	ND-Rule(_, _):
+	 	anonymous scope for Variable

Added: spoofax-imp/trunk/org.strategoxt.imp.names/semantics/names.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/semantics/names.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -0,0 +1,87 @@
+module semantics/names
+
+imports
+  lib/analysis-library
+  lib/analysis-library-internal
+  lib/index-library
+
+
+imports
+  include/NameDefinitionLanguage
+  semantics/stratego-names
+
+
+signature
+  constructors
+    Module    : Namespace
+    Namespace : Namespace
+
+
+rules
+  
+  nam-get-definitions(|paths__, subsequent__):
+    Naming(m, _, _) -> ( <Naming(nam-annotate-def(|uri3), id, id)>
+                       , [Def(uri3)]
+                       , []
+                       )
+    where uri3 := [Module(), m|<lookup-index-path> (Module(), paths__)]
+
+  nam-get-definition-keys :
+    Naming(m, _, _) -> [m]
+
+
+rules
+
+  nam-get-definitions(|paths__, subsequent__):
+    Import(m) -> ( <Import(!import1)>
+                 , []
+                 , [DefData(uri4, Import(), import1)]
+                 )
+    where import1 := <nam-annotate-use(|paths__, [Module()])> m
+    where uri4 := [Namespace()|<lookup-index-path> (Namespace(), paths__)]
+
+  nam-get-use-keys :
+    Import(m) -> [m]
+
+  nam-resolve(target__|):
+    Import(m) -> [Regular(Module(), m)]
+    where <target__> m
+
+
+rules
+
+  nam-get-definitions(|paths__, subsequent__):
+    Namespace(ns) -> ( <Namespace(nam-annotate-def(|uri5))>
+                     , [Def(uri5)]
+                     , []
+                     )
+    where uri5 := [Namespace(), ns|<lookup-index-path> (Namespace(), paths__)]
+
+  nam-get-definition-keys :
+    Namespace(ns) -> [ns]
+
+
+rules
+
+  nam-get-use-keys :
+    NsRef(ns) -> [ns]
+
+  nam-annotate-uses(|paths__):
+    NsRef(ns) -> <NsRef(
+                    nam-annotate-use(|paths__, [Namespace()])
+                  )>
+
+  nam-resolve(target__|):
+    NsRef(ns) -> [Regular(Namespace(), ns)]
+    where <target__> ns
+
+
+rules
+
+  nam-get-scope-types :
+    ND-Rule(_, _) -> [ ( Variable()
+                       , Anon(<new>)
+                       , Variable()
+                       , ()
+                       )
+                     ]
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.names/semantics/stratego-names.nd
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/semantics/stratego-names.nd	Fri Jul 20 21:17:40 2012	(r25220)
@@ -0,0 +1,22 @@
+module semantics/stratego-names
+
+imports
+	include/NameDefinitionLanguage
+	
+namespaces
+
+	Variable
+	
+binding rules
+
+	Var(x):
+		defines non-unique Variable x
+
+	ListVar(x): 
+		defines non-unique Variable x
+	
+	VarRef(x):
+		refers to Variable x
+		
+	ListVarRef(x):
+		refers to Variable x
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.names/semantics/stratego-names.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/semantics/stratego-names.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -0,0 +1,71 @@
+module semantics/stratego-names
+
+imports
+  lib/analysis-library
+  lib/analysis-library-internal
+  lib/index-library
+
+
+imports
+  include/NameDefinitionLanguage
+
+
+signature
+  constructors
+    Variable : Namespace
+
+
+rules
+
+  nam-get-definitions(|paths__, subsequent__):
+    Var(x) -> ( <Var(nam-annotate-def(|uri15))>
+              , [Def(uri15)]
+              , []
+              )
+    where uri15 := [Variable(), x|<lookup-index-path> (Variable(), paths__)]
+
+  nam-get-definition-keys :
+    Var(x) -> [x]
+
+
+rules
+
+  nam-get-definitions(|paths__, subsequent__):
+    ListVar(x) -> ( <ListVar(nam-annotate-def(|uri18))>
+                  , [Def(uri18)]
+                  , []
+                  )
+    where uri18 := [Variable(), x|<lookup-index-path> (Variable(), paths__)]
+
+  nam-get-definition-keys :
+    ListVar(x) -> [x]
+
+
+rules
+
+  nam-get-use-keys :
+    VarRef(x) -> [x]
+
+  nam-annotate-uses(|paths__):
+    VarRef(x) -> <VarRef(
+                    nam-annotate-use(|paths__, [Variable()])
+                  )>
+
+  nam-resolve(target__|):
+    VarRef(x) -> [Regular(Variable(), x)]
+    where <target__> x
+
+
+rules
+
+  nam-get-use-keys :
+    ListVarRef(x) -> [x]
+
+  nam-annotate-uses(|paths__):
+    ListVarRef(x) -> <ListVarRef(
+                        nam-annotate-use(|paths__, [Variable()])
+                      )>
+
+  nam-resolve(target__|):
+    ListVarRef(x) -> [Regular(Variable(), x)]
+    where <target__> x
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/syntax/NameDefinitionLanguage.generated.pp
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/syntax/NameDefinitionLanguage.generated.pp	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/syntax/NameDefinitionLanguage.generated.pp	Fri Jul 20 21:17:40 2012	(r25220)
@@ -1,55 +1,77 @@
 [
-   Var                      -- _1,
-   Wld                      -- KW["_"],
-   Int                      -- _1,
-   Real                     -- _1,
-   Str                      -- _1,
-   Op                       -- _1 KW["("] _2 KW[")"],
-   Op.2:iter-star-sep       -- _1 KW[","],
-   OpQ                      -- _1 KW["("] _2 KW[")"],
-   OpQ.2:iter-star-sep      -- _1 KW[","],
-   NoAnnoList               -- _1,
-   ListVar                  -- _1,
-   Var                      -- _1,
-   Char                     -- _1,
-   Tuple                    -- KW["("] _1 KW[")"],
-   Tuple.1:iter-star-sep    -- _1 KW[","],
-   List                     -- KW["["] _1 KW["]"],
-   List.1:iter-star-sep     -- _1 KW[","],
-   ListTail                 -- KW["["] _1 KW["|"] _2 KW["]"],
-   ListTail.1:iter-star-sep -- _1 KW[","],
-   Naming                   -- KW["module"] _1 _2 _3 _4,
-   Naming.4:iter-star       -- _1,
-   Import                   -- _1,
-   Namespace                -- _1,
-   NsRef                    -- _1,
-   ND-Rules                 -- V  [H  [KW["rules"]] _1],
-   ND-Rules.1:iter-star     -- _1,
-   ND-Rule                  -- _1 KW[":"] _2 _3,
-   ND-Rule.2:iter           -- _1,
-   ND-Rule.3:iter-star      -- _1,
-   ND-Def                   -- KW["defines"] _1 _2 _3 _4 _5,
-   ND-Import                -- KW["imports"] _1 KW["from"] _2 _3 _4 _5,
-   ND-Ref                   -- KW["refers"] KW["to"] _1 _2 _3 _4,
-   ND-Scope                 -- V  [H  [KW["scopes"]] _1],
-   ND-Scope.1:iter-sep      -- _1 KW[","],
-   ND-Type                  -- KW["has"] KW["type"] _1,
-   Where                    -- KW["where"] _1 _2,
-   TypeCheck                -- KW["has"] KW["type"] _1,
-   ReferenceCheck           -- KW["refers"] KW["to"] _1 _2 _3 _4,
-   Unique                   -- ,
-   Unique                   -- KW["unique"],
-   NonUnique                -- KW["non-unique"],
-   TypeBinding              -- KW["of"] KW["type"] _1,
-   None                     -- ,
-   DefScope                 -- V  [H  [KW["in"]] _1],
-   DefScope.1:iter-sep      -- _1 KW[","],
-   OrderedScope             -- KW["in"] KW["subsequent"] KW["scope"],
-   None                     -- ,
-   RefScope                 -- KW["in"] _1 _2,
-   None                     -- ,
-   Annos                    -- KW["{"] _1 KW["}"],
-   Annos.1:iter-sep         -- _1 KW[","],
-   Transitive               -- KW["transitive"],
-   CurrentFile              -- KW["current-file"]
+   Int                                                    -- _1,
+   Real                                                   -- _1,
+   Str                                                    -- _1,
+   Op                                                     -- _1 KW["("] _2 KW[")"],
+   Op.2:iter-star-sep                                     -- _1 KW[","],
+   Op.2:iter-star-sep.1:parameterized-sort                -- _1 _2,
+   Op.2:iter-star-sep.1:parameterized-sort.1:"Term"       -- ,
+   OpQ                                                    -- _1 KW["("] _2 KW[")"],
+   OpQ.2:iter-star-sep                                    -- _1 KW[","],
+   OpQ.2:iter-star-sep.1:parameterized-sort               -- _1 _2,
+   OpQ.2:iter-star-sep.1:parameterized-sort.1:"Term"      -- ,
+   NoAnnoList                                             -- _1,
+   NoAnnoList.1:parameterized-sort                        -- _1 _2,
+   NoAnnoList.1:parameterized-sort.1:"PreTerm"            -- ,
+   Char                                                   -- _1,
+   Tuple                                                  -- KW["("] _1 KW[")"],
+   Tuple.1:iter-star-sep                                  -- _1 KW[","],
+   Tuple.1:iter-star-sep.1:parameterized-sort             -- _1 _2,
+   Tuple.1:iter-star-sep.1:parameterized-sort.1:"Term"    -- ,
+   List                                                   -- KW["["] _1 KW["]"],
+   List.1:iter-star-sep                                   -- _1 KW[","],
+   List.1:iter-star-sep.1:parameterized-sort              -- _1 _2,
+   List.1:iter-star-sep.1:parameterized-sort.1:"Term"     -- ,
+   ListTail                                               -- KW["["] _1 KW["|"] _2 KW["]"],
+   ListTail.1:iter-star-sep                               -- _1 KW[","],
+   ListTail.1:iter-star-sep.1:parameterized-sort          -- _1 _2,
+   ListTail.1:iter-star-sep.1:parameterized-sort.1:"Term" -- ,
+   ListTail.2:parameterized-sort                          -- _1 _2,
+   ListTail.2:parameterized-sort.1:"Term"                 -- ,
+   Wld                                                    -- KW["_"],
+   Var                                                    -- _1,
+   ListVar                                                -- _1,
+   VarRef                                                 -- _1,
+   ListVarRef                                             -- _1,
+   Naming                                                 -- KW["module"] _1 _2 _3,
+   Naming.3:iter-star                                     -- _1,
+   Import                                                 -- _1,
+   ND-Namespaces                                          -- V  [H  [KW["namespaces"]] _1],
+   ND-Namespaces.1:iter-star                              -- _1,
+   Namespace                                              -- _1,
+   NsRef                                                  -- _1,
+   NonTransitive                                          -- _1,
+   Transitive                                             -- KW["imported"] _1,
+   ND-Rules                                               -- V  [H  [KW["binding"] KW["rules"]] _1],
+   ND-Rules.1:iter-star                                   -- _1,
+   ND-Rule                                                -- _1 KW[":"] _2,
+   ND-Rule.2:iter                                         -- _1,
+   ND-PreDef                                              -- _1 _2 _3 _4,
+   ND-Def                                                 -- _1 _2 _3 _4 _5 _6 _7,
+   ND-Def.7:iter-star                                     -- _1,
+   ND-Refs                                                -- _1,
+   ND-Refs.1:iter-sep                                     -- _1 KW["otherwise"],
+   ND-Import                                              -- KW["imports"] _1 KW["from"] _2 _3,
+   ND-Import.1:iter-sep                                   -- _1 KW[","],
+   ND-Ref                                                 -- _1 _2 _3 _4 _5,
+   ND-Ref.5:iter-star                                     -- _1,
+   ND-Scope                                               -- KW["anonymous"] _1,
+   ND-Scope                                               -- KW["nameless"] _1,
+   Where                                                  -- KW["where"] _1 _2,
+   TypeCheck                                              -- KW["has"] KW["type"] _1,
+   ReferenceCheck                                         -- KW["refers"] KW["to"] _1 _2 _3 _4,
+   Unique                                                 -- ,
+   Unique                                                 -- KW["unique"],
+   NonUnique                                              -- KW["non-unique"],
+   TypeBinding                                            -- KW["of"] KW["type"] _1,
+   None                                                   -- ,
+   TypeBinding                                            -- KW["of"] KW["type"] _1,
+   None                                                   -- ,
+   None                                                   -- ,
+   None                                                   -- ,
+   DefScope                                               -- _1,
+   DefScope.1:iter-sep                                    -- _1 KW[","],
+   OrderedScope                                           -- KW["subsequent"] KW["scope"],
+   RefScope                                               -- KW["in"] _1 _2,
+   None                                                   -- 
 ]
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/syntax/NameDefinitionLanguage.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/syntax/NameDefinitionLanguage.sdf	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/syntax/NameDefinitionLanguage.sdf	Fri Jul 20 21:17:40 2012	(r25220)
@@ -4,7 +4,9 @@
   
     stratego/NDL-Layout
     stratego/NDL-Identifiers
-    stratego/NDL-Terms
+    stratego/NDL-Vars
+    stratego/NDL-Terms[Var]
+    stratego/NDL-Terms[VarRef]
     
 exports 
   
@@ -13,36 +15,55 @@
     Start
 
   context-free syntax
+  	
+  	Term[[Var]]    -> BTerm %% term binding variables
+  	Term[[VarRef]] -> RTerm %% term referencing variables
+  	
+  context-free syntax
 
-    NamingDefinition                                         -> Start
-    "module" ModName Imports Namespaces NamingRules*         -> NamingDefinition {"Naming"}
+    NamingDefinition                        -> Start 
+    "module" ModName Imports NamingSection* -> NamingDefinition {"Naming"}
     
     %% Imports
-    "imports" ModuleRef* -> Imports   {bracket}
-                         -> Imports   {ast("[]")}
-    ModName              -> ModuleRef {"Import"}
+    "imports" ModuleRef*                    -> Imports   {bracket}
+                                            -> Imports   {ast("[]")}
+    ModName                                 -> ModuleRef {"Import"}
     
     %% Namespaces
-    "namespaces" Namespace* -> Namespaces   {bracket}
-                            -> Namespaces   {ast("[]")}
-    Id                      -> Namespace    {"Namespace"}
-    Id                      -> NamespaceRef {"NsRef"}
-    
-    %% Rule
-    "rules" NamingRule*               -> NamingRules {"ND-Rules"}
-    Term ":" NamingPart+ WhereClause* -> NamingRule  {"ND-Rule"}
+    "namespaces" Namespace*                 -> NamingSection {"ND-Namespaces"}
+    NamespaceId                             -> Namespace     {"Namespace"}
+    NamespaceId                             -> NamespaceRef  {"NsRef"}
+    NamespaceRef                            -> INamespaceRef {"NonTransitive"}
+    "imported" NamespaceRef                 -> INamespaceRef {"Transitive"}
+    
+    %% Rules
+    "binding" "rules" NamingRule*               -> NamingSection {"ND-Rules"}
+    BTerm ":" NamingPart+                       -> NamingRule    {"ND-Rule"}
+    "predefined" PreRule                        -> NamingRule    {bracket}
+    UniquePart NamespaceRef String InnerPreDefs -> PreRule       {"ND-PreDef"}
     
-    %% Rule parts
-    "defines" UniquePart NamespaceRef Term TypePart DefScopePart             -> NamingPart {"ND-Def"}
-    "imports" NamespaceRef "from" NamespaceRef Term DefScopePart ImportAnnos -> NamingPart {"ND-Import"}
-    "refers" "to" NamespaceRef Term TypePart RefScopePart                    -> NamingPart {"ND-Ref"}
-    "scopes" {NamespaceRef ","}+                                             -> NamingPart {"ND-Scope"}
-    "has" "type" Term                                                        -> NamingPart {"ND-Type"}
+    %%"scoping" PreRule* "inside" -> InnerPreDefs  {bracket}
+                                -> InnerPreDefs {ast("[]")}
     
+    %% Rule parts
+    "defines" DefPartCore                                                         -> NamingPart  {bracket}
+    "binds"   DefPartCore                                                         -> NamingPart  {bracket}
+    UniquePart NamespaceRef RTerm TypePart DefScopePart OptScopePart WhereClause* -> DefPartCore {"ND-Def"}
+    {RefClause "otherwise"}+                                                      -> NamingPart  {"ND-Refs"} 
+    "refers" "to" RefPartCore                                                     -> RefClause   {bracket}
+    "imports" {INamespaceRef ","}+ "from" RefPartCore IDefScopePart               -> NamingPart  {"ND-Import"}
+    NamespaceRef RTerm TypePart RefScopePart WhereClause*                         -> RefPartCore {"ND-Ref"}
+    "anonymous" ScopePart                                                         -> NamingPart  {"ND-Scope"}
+    "nameless" ScopePart                                                          -> NamingPart  {"ND-Scope"}
+    
+    "scope" "for" {NamespaceRef ","}+                                   -> ScopePart    {bracket}
+                                                                        -> OptScopePart {ast("[]")}
+    ScopePart                                                           -> OptScopePart 
+   
     %% Where
-    "where" Term Condition                                -> WhereClause {"Where"}
-    "has" "type" Term                                     -> Condition   {"TypeCheck"}
-    "refers" "to" NamespaceRef Term TypePart RefScopePart -> Condition   {"ReferenceCheck"}
+    "where" RTerm Condition                                             -> WhereClause {"Where"}
+    "has" "type" BTerm                                                  -> Condition   {"TypeCheck"}
+    "refers" "to" NamespaceRef BTerm BTypePart RefScopePart             -> Condition   {"ReferenceCheck"}
     
     %% Definition prefixes
                  -> UniquePart {"Unique"}
@@ -50,23 +71,24 @@
     "non-unique" -> UniquePart {"NonUnique"}
     
     %% Type bindings
-    "of" "type" Term -> TypePart {"TypeBinding"}
-                     -> TypePart {"None"}
+    "of" "type" RTerm -> TypePart  {"TypeBinding"}
+                      -> TypePart  {"None"}
+    "of" "type" BTerm -> BTypePart {"TypeBinding"}
+                      -> BTypePart {"None"}
     
     %% Reference postfixes
-    "in" {Term ","}+          -> DefScopePart {"DefScope"}
-    "in" "subsequent" "scope" -> DefScopePart {"OrderedScope"}
-                              -> DefScopePart {"None"}
-    "in" NamespaceRef Term    -> RefScopePart {"RefScope"}
-                              -> RefScopePart {"None"}
-        
-    %% Import annotations
-    "{" {ImportAnno ","}+ "}" -> ImportAnnos {"Annos"}
-                              -> ImportAnnos {ast("Annos([])")}
-    "transitive"              -> ImportAnno  {"Transitive"}
-    "current-file"            -> ImportAnno  {"CurrentFile"}
-     
+    "in" DefScopeCore       -> DefScopePart {bracket}
+                            -> DefScopePart {"None"}
+    "into" DefScopeCore     -> IDefScopePart {bracket}
+                            -> IDefScopePart {"None"}
+    {RTerm ","}+            -> DefScopeCore {"DefScope"}
+    "subsequent" "scope"    -> DefScopeCore {"OrderedScope"}
+    "in" NamespaceRef RTerm -> RefScopePart {"RefScope"}
+                            -> RefScopePart {"None"}
+         
 lexical syntax
     
-    "namespaces" -> ModName {reject}
+    "namespaces" -> ModName     {reject}
+    "binding"    -> NamespaceId {reject}
+    Id           -> NamespaceId
     
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/syntax/stratego/NDL-Terms.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/syntax/stratego/NDL-Terms.sdf	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/syntax/stratego/NDL-Terms.sdf	Fri Jul 20 21:17:40 2012	(r25220)
@@ -1,46 +1,34 @@
-module stratego/NDL-Terms
+module stratego/NDL-Terms[Var]
 
 imports
 	stratego/NDL-Constants
 	stratego/NDL-Identifiers
 	
 exports
-  sorts ID Var Wld
-  context-free syntax
-    Id 				-> Var  {cons("Var")}
-    Id				-> ID
 
-  sorts Term
+  sorts PreTerm[[Var]] Term
   context-free syntax
-    Var 			 -> PreTerm 
-    Var 			 -> Term {prefer}
-	
-    "_" 			 -> Wld {cons("Wld")}
-    Wld 			 -> PreTerm 
-    Wld 			 -> Term {prefer}
 
-    Int 			 -> PreTerm {cons("Int")}
-    Real 			 -> PreTerm {cons("Real")}
-    String 			 -> PreTerm {cons("Str")}
+    Int                                        -> PreTerm[[Var]] {"Int"}
+    Real                                       -> PreTerm[[Var]] {"Real"}
+    String                                     -> PreTerm[[Var]] {"Str"}
 
-    Id "(" {Term ","}* ")" 	 	-> PreTerm {cons("Op")}
-    String "(" {Term ","}* ")"	-> PreTerm {cons("OpQ")}
+    Id "(" {Term[[Var]] ","}* ")"              -> PreTerm[[Var]] {"Op"}
+    String "(" {Term[[Var]] ","}* ")"          -> PreTerm[[Var]] {"OpQ"}
 
-	PreTerm                     -> Term {cons("NoAnnoList")}
+	PreTerm[[Var]]                             -> Term[[Var]]    {"NoAnnoList"}
 
-  sorts LID
   context-free syntax
-    LId 			-> LID  {cons("ListVar")}
-    LID				-> Var  {cons("Var")}
-    LID				-> ID
 
-  context-free syntax
-    Char 			 -> PreTerm {cons("Char")}
+    Char                                       -> PreTerm[[Var]] {"Char"}
 
-    "(" {Term ","}* ")" 	 -> PreTerm {cons("Tuple")}
-    "[" {Term ","}* "]" 	 -> PreTerm {cons("List")}
-    "[" {Term ","}* "|" Term "]" -> PreTerm {cons("ListTail")}
-	
-  context-free restrictions
-    Wld -/- [a-zA-Z0-9\'\-\_]
+    "(" {Term[[Var]] ","}* ")" 	               -> PreTerm[[Var]] {"Tuple"}
+    "[" {Term[[Var]] ","}* "]" 	               -> PreTerm[[Var]] {"List"}
+    "[" {Term[[Var]] ","}* "|" Term[[Var]] "]" -> PreTerm[[Var]] {"ListTail"}
 
+  context-free syntax
+  	
+  	Var -> PreTerm[[Var]] 
+    Var -> Term[[Var]]    {prefer}
+	
+  

Added: spoofax-imp/trunk/org.strategoxt.imp.names/syntax/stratego/NDL-Vars.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/syntax/stratego/NDL-Vars.sdf	Fri Jul 20 21:17:40 2012	(r25220)
@@ -0,0 +1,21 @@
+module stratego/NDL-Vars
+
+imports
+	stratego/NDL-Identifiers
+	
+exports
+
+  sorts Wld Var VarRef
+  
+  context-free syntax
+  	
+    "_" -> Wld    {"Wld"}
+    Wld -> Var 
+    Id 	-> Var    {"Var"}
+    LId -> Var    {"ListVar"}
+  	
+    Id  -> VarRef {"VarRef"}
+    LId	-> VarRef {"ListVarRef"}
+
+  context-free restrictions
+    Wld -/- [a-zA-Z0-9\'\-\_]

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/test/example.nd
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/test/example.nd	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/test/example.nd	Fri Jul 20 21:17:40 2012	(r25220)
@@ -1,32 +1,28 @@
 module example
 
 imports
-
 	include/Entity
 	
 namespaces
 
 	entity property variable method
 	
-rules
+binding rules
 
 	Entity(name, _) :
 		defines entity name of type name
-		scopes property, method
+		scope for property, method
 		
 	Entity(name, super, _) :
 		defines entity name of type name
-		refers to entity super 
-		scopes property, method
-		imports property from entity super
-		imports method from entity super
+		scope for property, method
+		imports property, method from entity super
 		
 	Property(x, t) :
 		defines property x of type t
 	
 	PropertyAccess(exp, f) :
 		refers to property f of type t in entity e
-		has type t
 		where exp has type e
  
 	For(x, t, e, f, elem*) : 
@@ -38,17 +34,16 @@
 	VarDecl(x, e) :
 		defines variable x of type t 
 		where e has type t
-		
+
 	Var(x) :
 		refers to variable x of type t
-		has type t
 		
 	Block(statement*) : 
-		scopes variable
+		anonymous scope for variable
 		
 	Method(f, param*, t, _) :
 		defines method f of type MT(t*, t)
-		scopes variable
+		scope for variable
 		where param* has type t*
 
 	Param(x, t) :

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/trans/generate.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -8,339 +8,314 @@
   include/NameDefinitionLanguage
   lib/editor-common.generated
 
-rules // Incremental code generation of project
-	
-  index-compile-ast(|file, subfile):
-    ast at Naming(name, _, _, _) -> None()
-    with
-      <debug> "Compiling";
-    	str       := <generate-name-analysis-stratego> ast ;
-      full-path := <dirname> file ;
-      filename  := <guarantee-extension(|"str")> name ;
-      <fclose> <fputs> (str, <fopen> ($[[full-path]/[filename]], "w"))
-
 rules
-      
+    
 	generate-name-analysis:
-		(_, _, ast at Naming(name, _, _, _), path, project-path) -> (filename, result)
+		(selected, position, ast at Naming(name, _, _), path, project-path) -> (filename, result)
 		with
-			filename := <guarantee-extension(|"str")> path ;
-			result   := <generate-name-analysis-stratego> ast
-			
-	generate-name-analysis-stratego:
-		ast -> result
-		with
-			str-module := <to-analysis ; alltd(\ListVar(x) -> x\)> ast ;
+			filename   := <guarantee-extension(|"str")> path ;
+			str-module := <to-ppable-str; to-analysis> ast ;
 			// use next line to debug which AST node cannot be handled by the pretty-printer
 			<bottomup(try(not(is-string) ; not(is-list) ; not(pp-stratego-string) ; debug(!"cannot pp ")))> str-module ;
 			result     := <pp-stratego-string> str-module
 
+    to-ppable-str = alltd(to-ppable-str-local)
+    
+	to-ppable-str-local: ListVar(x)    -> Var(x)
+	to-ppable-str-local: VarRef(x)     -> Var(x)
+	to-ppable-str-local: ListVarRef(x) -> Var(x)
+	
 overlays
 	
 	TERM(o, args) 		= NoAnnoList(Op(o, args))
 	TERM(o)       		= NoAnnoList(Op(o, []))
-	TUPLE(args)  		  = NoAnnoList(Tuple(args))
+	TUPLE(args)  	    = NoAnnoList(Tuple(args))
 	LIST(elems)   		= NoAnnoList(List(elems))
-	LIST(elems, tail) = NoAnnoList(ListTail(elems, tail))
+	LIST(elems, tail)   = NoAnnoList(ListTail(elems, tail))
 	CALL(c)       		= CallNoArgs(SVar(c))
 	CALL(c, args)    	= CallT(SVar(c), [], args)
 
 	RULE(n, lhs, rhs, clauses) 		 = RDefNoArgs(n, Rule(lhs, rhs, clauses))
 	RULE(n, args, lhs, rhs, clauses) = RDefT(n, [], args, Rule(lhs, rhs, clauses))
-
-	ANON              = TERM("Anon", [RootApp(CALL("new"))])
 	
-	PRIMDEF(ns, name) = TERM("Def", [LIST([TERM(ns), name])])
-			
+overlays
+	
+	PATH        = DefaultVarDec("path__")	
+	PATHS       = DefaultVarDec("paths__")	
+	PATHS'      = DefaultVarDec("paths'__")	
+	SUBSEQUENT  = DefaultVarDec("subsequent__")
+	TARGET      = CALL("target__")
+	LOOKUP_PATH = CALL("lookup-index-path")
+	
+	DEF_DATA(uri, kind, data) = TERM("DefData", [uri, TERM(kind), data])
+	IMPORT(uri1, uri2)        = DEF_DATA(uri1, "Import", uri2)
+	TIMPORT(uri1, uri2)       = DEF_DATA(uri1, "TImport", uri2)
+	
+overlays
+	
+	REGULAR(ns, n)              = TERM("Regular", [ns, n])
+	REGULAR(ns, n, t)           = TERM("Regular", [ns, n, t])
+	CHILD(ns, n, pns, p)        = TERM("Child", [ns, n, pns, p])
+	CHILD(ns, n, pns, p, t)     = TERM("Child", [ns, n, pns, p, t])
+	
+	ANON                        = TERM("Anon", [App(CALL("newname"), NoAnnoList(Str("anon")))])
+	LOOKUP_PATH(nsv, v, path)   = WhereClause(Assign(v, LIST(path, App(LOOKUP_PATH(), TUPLE([nsv, PATHS()])))))	
+    LOOKUP_PATH'(nsv, v, path)  = WhereClause(Assign(v, LIST(path, App(LOOKUP_PATH(), TUPLE([nsv, PATHS'()])))))	
+    ANNOTATE_DEF(v)             = CALL("nam-annotate-def", [v])
+    ANNOTATE_USE(nss)           = CALL("nam-annotate-use", [PATHS'(), LIST(nss)])
+    ANNOTATE_SCOPE(v)           = CALL("nam-annotate-scope", [v])
+	ANNOTATE_IMPORT(v)          = CALL("nam-annotate-use", [TERM("Unresolved", [v])])
+
+    DEF_KEY_RULE(t, ks)         = RULE("nam-get-definition-keys", t, LIST(ks), [])
+    USE_KEY_RULE(t, ks)         = RULE("nam-get-use-keys", t, LIST(ks), [])
+    DEF_RULE(t, t', ds, is, cs) = RULE("nam-get-definitions", [PATHS(), PATHS'(), SUBSEQUENT()], t, TUPLE([RootApp(t'), LIST(ds), LIST(is)]), cs) 
+	USE_RULE(t, t')             = RULE("nam-annotate-uses", [PATHS()], t, RootApp(t'), [])
+	
 overlays
 	
 	GEN_IMPORTS = 
 		Imports(
-			[ Import("lib/analysis-library.generated")
-			, Import("lib/analysis-library-internal.generated")
-			, Import("lib/index-library.generated") 
+			[ Import("lib/analysis-library")
+			, Import("lib/analysis-library-internal")
+			, Import("lib/index-library") 
 			]
 		)
-		
-	GEN_CONSTRUCTORS = 
-	  Constructors(
-		  [ CONS_DECL("Type", "DefDataKind")
-		  , CONS_DECL("Import", "DefDataKind")
-		  , CONS_DECL("Transitive", "ImportAnno")
-	    , CONS_DECL("CurrentFile", "ImportAnno")
-		  ]
-	  )
-		
+			
 	CONS_DECL(c, t) = OpDecl(c, ConstType(SortNoArgs(t)))
 	
-	ADJUST_DATA(term, kind, data, clauses) = 
-	  ADJUST_DATA(term, LIST([Var("namespace__")], Var("path__")), kind, data, clauses)
-  		
-  ADJUST_DATA(term, uri, kind, data, clauses) = 
-    RDefT(
-        "adjust-index-def-data"
-      , [DefaultVarDec("store__")]
-      , [DefaultVarDec("namespace__"), DefaultVarDec("path__")]
-      , Rule(
-            term
-          , App(CALL("store__"), TERM("DefData", [uri, TERM(kind), data]))
-        , clauses
-        )
-      )
-
-	ADJUST_LOOKUP(term, adjusts, clauses) = 
+	ADJUST_LOOKUP(term, name, adjusts, clauses) = 
 		RDefT(
-			  "adjust-index-lookup"
+			  "nam-resolve"
 			, [DefaultVarDec("target__")]
-			, [DefaultVarDec("namespace__"), DefaultVarDec("path__"), DefaultVarDec("prefix__")]
+			, []
 			, Rule(
 			  	  term
-			  	, adjusts
-				, clauses
+			  	, LIST(adjusts)
+				, [WhereClause(App(TARGET(), name))|clauses]
 				)
   		)
-
-overlays 
-	
-    ANNOTATE_DEF             = CALL("nam-annotate-def", [Var("path__")])
-    ANNOTATE_USE(ns)         = CALL("nam-annotate-use", [Var("paths__"), TERM(ns)])
-    ANNOTATE_USE(ns, ns2, n) = CALL("nam-annotate-use", [Var("paths__"), TERM(ns), TERM(ns2), n])
-    ANNOTATE_SCOPE           = CALL("nam-annotate-scope", [Var("path__")])
-    LOOKUP_TYPE              = ""
-    LOOKUP_CHILDREN(ns, n)   = App(CALL("index-lookup-children", [TERM(ns), Var("prefix__")]), n)
     
 rules
 	
 	to-stratego-term:
 		cons#(args) -> TERM(cons, args)
-		
-	is-nongenerated-library = ?Import("lib/analysis-library")
-	is-nongenerated-library = ?Import("lib/analysis-library-internal")
-  is-nongenerated-library = ?Import("lib/index-library")
-  	  
+    
+    nonempty = where(Hd)
 rules
 	
 	to-analysis:
-		Naming(name, import*, namespace*, rule-sec*) -> 
+		Naming(name, import*, rule-sec*) -> 
 		Module(
 			  name
-			, [ gen-imports
+			, [ GEN_IMPORTS()
 			  , Imports(import*)
-			  , Signature([GEN_CONSTRUCTORS(), Constructors(<map(to-opdecl)> namespace*)])
 			  | <mapconcat(to-rules)> rule-sec*
 			  ]
 			)
-		with
-			if <fetch(is-nongenerated-library)> import* then
-				gen-imports := Imports([])
-			else
-				gen-imports := GEN_IMPORTS()
-			end
 			
 	to-opdecl: // generates constructors for namespaces
 		Namespace(ns) -> CONS_DECL(ns, "Namespace")
-		
+	
+	to-rules:
+		ND-Namespaces(namespace*) -> [Signature([Constructors(<map(to-opdecl)> namespace*)])]
+	
 	to-rules:
 		ND-Rules(rule*) -> <filter(to-rules)> rule*
 		
 	to-rules:
-		ND-Rule(term, part*, cond*) -> Rules(<not(?[])> [scope-rule*, definition-rule*, reference-rule*, annotate-rule*, adjust-rule*, type-rule*, check-rule*, import-rule*])
-		where
-			clause1*         := <filter(to-clauses)> part* ;
-			clause2*         := <filter(to-clauses)> cond* ; 
-			clause*          := <conc> (clause1*, clause2*) ;
-			scope-rule*      := <to-scope-rules(|term, clause*)> part* ;
-			definition-rule* := <filter(to-definition-parts) ; unzip ; to-definition-rules(|term, clause*)> part* ;
-			reference-rule*  := <filter(to-reference-parts) ; unzip ; to-reference-rules(|term, clause*)> part* ;
-			annotate-rule*   := <to-annotate-rules(|term)> part* ;
-			adjust-rule*     := <to-adjust-rules(|term, clause*)> part* ;
-			type-rule*       := <filter(to-type-rules(|term, clause*)) ; concat> part* ;
-			check-rule*      := <filter(to-check-rules(|term, clause*))> part* ;
-			import-rule*     := <filter(to-import-rules(|term, clause*))> part*
-
-rules
-				
-	to-clauses: //might not be the right solution, should be a filter on definition candidates
-		ND-Ref(_, name, TypeBinding(type), _) -> 
-		WhereClause(
-			Assign(
-				  NoAnnoList(List([type]))
-				, App(Seq(CALL("index-lookup"), CALL("index-get-data-all", [TERM("Type")])), name)
-				)
-			)
-		
-	to-clauses: 
-		Where(term, TypeCheck(type)) -> WhereClause(Assign(type, App(CALL("type-of"), term)))
-
-	to-clauses:
-		Where(term, ReferenceCheck(NsRef(ns), name, None(), None())) -> WhereClause(Assign(TERM("Def", [LIST([TERM(ns)], name)]), App(Seq(CALL("index-find-key"), CALL("index-lookup")), term)))
+		ND-Rule(term, part*) -> Rules(<nonempty> [definition-rule*, scope-rule*, type-rule*])
+		with
+			definition-rule* := <to-definition-rules(|term)> part* ;
+			scope-rule*      := <to-scope-rules(|term)> part* ;
+			type-rule*       := <filter(to-type-rules(|term))> part* 
 
 rules
-	
-	to-scope-rules(|term, clause*):
+			
+	to-definition-rules(|term):
 		part* -> result
-		where
-			if <fetch-elem(ordered-scope)> part* then
-				ordered := [RULE("nam-ordered-def", term, RootApp(Id()), clause*)]
+		with
+			replaces := <new-iset> ;
+			(dkey*, def*, imp*, clause*) := <filter(to-definition-parts(|replaces)); unzip4> part*;
+			(ukey*, rule*)               := <filter(to-reference-parts(|term, replaces)); unzip> part*;
+			if <nonempty> dkey* then
+				dkey-rule* := [DEF_KEY_RULE(term, dkey*)]
 			else
-				ordered := []
-			end;
-			scope* := <filter(to-scope) ; concat> part* ;
-			if <?[]> scope* then
-				result := ordered 
+		    	dkey-rule* := []
+		    end;
+		    if <nonempty> ukey* then
+				ukey-rule* := [USE_KEY_RULE(term, ukey*), rule*]
+			else
+		    	ukey-rule* := rule*
+		    end;
+		    if replace* := <iset-elements; nonempty> replaces then
+		    	term'  := <alltd(replace(|replace*) <+ introduce-id)> term;
+				result := [DEF_RULE(term, term', def*, imp*, clause*), dkey-rule*, ukey-rule*]
 			else
-				result := [RULE("nam-get-scope-types", term, LIST(scope*), clause*)|ordered]
+				result := [dkey-rule*, ukey-rule*]
 			end
-			
+				
+	to-definition-parts(|replaces):
+		ND-Def(_, ns, name, _, def-scope, _, _) -> ([name], [TERM("Def", [v])], [], [clause])
+		with
+			nsv := <namespace-to-term> ns;
+			v   := Var(<newname> "uri");
+			<iset-add(|<to-name-replacement(|v)> name)> replaces;
+			switch !def-scope
+			case ?None(): 
+				anon  := []
+			case ?DefScope(scope*):
+				anon  := [ANON()];
+				<iset-addlist(|<map(to-scope-replacement(|[v]))> scope*)> replaces
+			case ?OrderedScope():
+				anon  := [SUBSEQUENT()]
+			end;
+			clause := LOOKUP_PATH(nsv, v, [nsv, name|anon])
+
+	to-definition-parts(|replaces):
+		ND-Import(ns*, ND-Ref(ns, name, _, _, _), def-scope) -> ([], [], term*, [clause|clause*])
+		with
+			v*     := <map(!Var(<newname> "uri"))> ns*;
+			nsv    := <namespace-to-term> ns;
+			v      := Var(<newname> "import");
+			clause := WhereClause(Assign(v, App(ANNOTATE_USE([nsv]), name)));
+			<iset-add(|(name, Build(v)))> replaces;
+			switch !def-scope
+			case ?None(): 
+				anon := []
+			case ?DefScope(scope*):
+				anon := [ANON()];
+				<iset-addlist(|<map(to-scope-replacement(|v*))> scope*)> replaces
+			case ?OrderedScope():
+				anon := [SUBSEQUENT()]
+			end;
+			(term*, clause*) := <zip(import-to-data(|nsv, v, anon)); unzip> (ns*, v*)
 	
-	ordered-scope:
-		ND-Def(_, _, _, _, OrderedScope()) -> <id>
-		
-	to-scope:
-		ND-Scope(scope*) -> <map(namespace-to-term)> scope*
-		
-	namespace-to-term:
-		NsRef(namespace) -> TERM(namespace)
-			
-rules
+	import-to-data(|nsv, v, anon):
+		(Transitive(ns), v') -> (TIMPORT(v', v), LOOKUP_PATH'(nsv', v', [nsv'|anon]))
+		where
+			nsv' := <namespace-to-term> ns
 			
-	to-definition-parts:
-		ND-Def(_, NsRef(namespace), name, _, None()) -> (name, TUPLE([TERM(namespace), LIST([name])]))
-	
-	to-definition-parts:
-		ND-Def(_, NsRef(namespace), name, _, DefScope(_)) -> (name, TUPLE([TERM(namespace), LIST([name, ANON()])]))
-	
-	to-definition-parts:
-		ND-Def(_, NsRef(namespace), name, _, OrderedScope()) -> (name, TUPLE([TERM(namespace), LIST([name, ANON()])]))
-	
-	to-definition-rules(|term, clause*):
-		(key-part*, def-part*) ->
-		[ RULE("nam-get-definition-keys", term, LIST(<make-set> key-part*), clause*)
-		, RULE("nam-get-definitions",     term, LIST(<make-set> def-part*), clause*) ]
+	import-to-data(|nsv, v, anon):
+		(NonTransitive(ns), v') -> (IMPORT(v', v), LOOKUP_PATH'(nsv', v', [nsv'|anon]))
 		where
-			<Hd> key-part* ; <Hd> def-part*
-
-	to-definition-rules(|term, clause*):
-		([], []) -> []
+			nsv' := <namespace-to-term> ns
 		
-rules
-      
-  to-reference-parts:
-    ND-Ref(NsRef(namespace), name, _, _) -> (name, TUPLE([TERM(namespace), LIST([name])]))
-  
-  to-reference-rules(|term, clause*):
-    (key-part*, def-part*) ->
-    [ RULE("nam-get-uses-keys", term, LIST(<make-set> key-part*), clause*)
-    , RULE("nam-get-uses",      term, LIST(<make-set> def-part*), clause*) ]
-    where
-      <Hd> key-part* ; <Hd> def-part*
+	unzip4: [] -> ([], [], [], [])
+	unzip4: [(h1*, h2*, h3*, h4*)|t] -> ([h1*, t1*], [h2*, t2*], [h3*, t3*], [h4*, t4*]) where (t1*, t2*, t3*, t4*) := <unzip4> t
+	
+	to-name-replacement(|v):
+		name -> (name, ANNOTATE_DEF(v))
+	to-scope-replacement(|v):
+		scope -> (scope, ANNOTATE_SCOPE(LIST(v)))
 
-  to-reference-rules(|term, clause*):
-    ([], []) -> []
-		
 rules
-	
-	to-annotate-rules(|term):
-		part* -> result
+      
+	to-reference-parts(|term, replaces):
+		ND-Refs(ref*) -> (name, ADJUST_LOOKUP(term, name, resolution*, []))
+  	    with
+  	    	([name|_], ns*, resolution*) := <map(to-reference-part); unzip3> ref*;
+  	    	<iset-add(|(name, ANNOTATE_USE(ns*)))> replaces
+  	
+  	to-reference-parts(|term, replaces):
+		ND-Import(_, ref, _) -> (name, ADJUST_LOOKUP(term, name, [resolution], []))
 		where
-			replacement1* := <filter(to-name-replacement)> part* ;
-			if <?[]> replacement1* then
-				rule1 := [] 
-			else
-				rule1 := [RULE("nam-annotate-names", [DefaultVarDec("paths__"), DefaultVarDec("path__")], term, RootApp(<alltd(replace(|replacement1*) <+ introduce-id)> term), [])]
-			end ;
-			replacement2* := <filter(to-scope-replacement) ; concat> part* ;
-			if <?[]> replacement2* then
-				result := rule1 
-			else
-				result := [RULE("nam-annotate-scopes", [DefaultVarDec("path__")], term, RootApp(<alltd(replace(|replacement2*) <+ introduce-id)> term), [])|rule1]
-			end
-			
-	to-scope-replacement:
-		ND-Def(_, NsRef(namespace), name, _, DefScope(scope*)) -> <map(!(<id>, ANNOTATE_SCOPE()))> scope*
-			
-	to-name-replacement:
-		ND-Def(_, NsRef(namespace), name, _, _)-> (name, ANNOTATE_DEF())
+			(name, ns, resolution) := <to-reference-part> ref
+      	
+  	to-reference-part:
+		ND-Ref(ns, name, None(), None(), _) -> (name, nst, REGULAR(nst, name))
+		with
+			nst := <namespace-to-term> ns
+
+	to-reference-part:
+		ND-Ref(ns, name, TypeBinding(t), None(), _) -> (name, nst, REGULAR(nst, name, t))
+		with
+			nst := <namespace-to-term> ns
+
+	to-reference-part:
+		ND-Ref(ns, name, None(), RefScope(pns, parent), _) -> (name, nst, CHILD(nst, name, pnst, parent))
+		with
+			nst  := <namespace-to-term> ns;
+			pnst := <namespace-to-term> pns
 			
-	to-name-replacement:
-		ND-Ref(NsRef(namespace), name, _, _) -> (name, ANNOTATE_USE(namespace))
+	to-reference-part:
+		ND-Ref(ns, name, TypeBinding(t), RefScope(pns, parent), _) -> (name, nst, CHILD(nst, name, pnst, parent, t))
+		with
+			nst  := <namespace-to-term> ns;
+			pnst := <namespace-to-term> pns
 			
+	unzip3: [] -> ([], [], [])
+	unzip3: [(h1, h2, h3)|t] -> ([h1|t1], [h2|t2], [h3|t3]) where (t1, t2, t3) := <unzip3> t
+	
+rules
+		
 	replace(|replacement*): t1 -> t2 where <fetch-elem(?(t1, t2))> replacement*
 	
-	introduce-id: Wld()  -> Id()
-	introduce-id: Var(_) -> Id()
-
+	introduce-id: Wld()      -> Id()
+	introduce-id: Var(_)     -> Id()
+	introduce-id: ListVar(_) -> Id()
+		        
 rules
 	
-	to-adjust-rules(|term, clause*):
+	to-scope-rules(|term):
 		part* -> result
-		where
-			if name  := <fetch-elem(?ND-Ref(_, <id>, _, _))> part* then
-				paths := <filter(to-adjust-path)> part* ;
-				defs  := <filter(to-adjust-defs)> part* ;
-				switch !(paths, defs)
-					case ?([_, _|_], []): 
-						// no defs
-						result := [ADJUST_LOOKUP(term, LIST(paths), [WhereClause(App(CALL("target__"), name))|clause*])]
-					
-					case ?([], [_]): 
-						// no paths, single def
-						result := [ADJUST_LOOKUP(term, defs, [WhereClause(App(CALL("target__"), name))|clause*])]
-					
-					case ?([], [_, _|_]): 
-						// no paths, multiple defs
-						result := [ADJUST_LOOKUP(term, App(CALL("concat"), LIST(defs)), [WhereClause(App(CALL("target__"), name))|clause*])]
-					
-					case ?([_|_], [_|_]): 
-						// paths and defs
-						result := [ADJUST_LOOKUP(term, App(CALL("concat"), LIST([LIST(paths)|defs])), [WhereClause(App(CALL("target__"), name))|clause*])]					
-					
-					otherwise: 
-						result := []
-				end
-			else 
-				result := [] 
+		with
+			if ordered* := <filter(ordered-scope); concat; nonempty> part* then
+				ordered := [RULE("nam-ordered-def", term, LIST(ordered*), [])]
+			else
+				ordered := []
+			end;
+			var := Var(<newname> "anon");
+			if scope* := <filter(to-scope(|var)) ; concat; nonempty> part* then
+				result := [RULE("nam-get-scope-types", term, LIST(scope*), [WhereClause(Assign(var, ANON()))])|ordered]
+			else
+				result := ordered 
 			end
+				
+	ordered-scope:
+		ND-Def(_, ns, _, _, OrderedScope(), _, _) -> [<namespace-to-term> ns]
 	
-	to-adjust-path:
-		ND-Ref(NsRef(namespace), name at Var(_), _, None()) -> LIST([TERM(namespace)], Var("path__"))
-
-	to-adjust-defs:
-  	ND-Ref(NsRef(namespace), name at Var(_), _, RefScope(namespace2, name2)) -> LOOKUP_CHILDREN(namespace, name2)
-      	  	
-	to-adjust-defs:
-	  ND-Ref(NsRef(namespace), name at NoAnnoList(Str(_)), _, None()) -> LIST([PRIMDEF(namespace, name)])
-
-rules
+	ordered-scope:
+		ND-Import(ns*, _, OrderedScope()) -> <map(inamespace-to-term)> ns*
 		
-	to-type-rules(|term, clause*):
-		ND-Def(_, NsRef(namespace), name, TypeBinding(type), _) -> 
-		[ ADJUST_DATA(term, "Type", type, clause*)
-		, RULE("type-of", term, type, clause*) ]
+	to-scope(|var): 
+		ND-Def(unique, ns, name, _, _, scope*, _) -> <map(scope-to-term(|anon, <namespace-to-term> ns, name))> scope*
+		with
+			if Unique() := unique then
+				anon := var
+			else
+				anon := TUPLE([])
+			end
+			
+	to-scope(|var):
+		ND-Scope(scope*) -> <map(scope-to-term)> scope*
 		
-	to-type-rules(|term, clause*):
-		ND-Type(type) -> [RULE("type-of", term, type, clause*)]
+	scope-to-term:
+		scope -> TUPLE([t, ANON(), t, TUPLE([])])
+		with 
+			t := <namespace-to-term> scope
+			
+	scope-to-term(|unique, ns, name):
+		scope -> TUPLE([ns, name, <namespace-to-term> scope, unique])
+			
+	namespace-to-term:
+		NsRef(namespace) -> TERM(namespace)
+
+	inamespace-to-term = 
+		(?Transitive(<id>) + ?NonTransitive(<id>));
+		namespace-to-term
 		
 rules
-	
-	to-check-rules(|term, clause*):
-		ND-Def(Unique(), _, _, _, _) -> RULE("nam-unique", term, RootApp(Id()), clause*)
+		
+	to-type-rules(|term):
+		ND-Def(_, ns, name, TypeBinding(type), _, _, clause*) -> RULE("nam-get-type", term, TUPLE([name, type]), clause'*)
+		with
+			clause'* := <filter(to-type-clauses)> clause*
 		
 rules
-  
-  import-currentfile =
-    collect-one(?CurrentFile())
-  import-standard =
-    not(import-currentfile)
-  
-  to-import-rules(|term, clause*):
-    ND-Import(NsRef(namespace), _, source, _, Annos(annos*)) ->
-    [ ADJUST_DATA(term, LIST([TERM(namespace)], Var("path__")), "Import", TUPLE([source, LIST(<map(to-stratego-term)> annos*)]), clause*) ]
-    where
-      <import-standard> annos*
-      
-  to-import-rules(|term, clause*):
-    ND-Import(NsRef(namespace), _, source, _, Annos(annos*)) ->
-    [ ADJUST_DATA(term, LIST([TERM(namespace)], LIST([App(CALL("index-file-to-string", []), RootApp(CALL("index-get-current-file", [])))])), "Import", TUPLE([source, LIST(<map(to-stratego-term)> annos*)]), clause*) ]
-    where
-      <import-currentfile> annos*
+					
+	to-type-clauses: 
+		Where(term, TypeCheck(type)) -> WhereClause(Assign(type, App(CALL("type-of"), term)))
+
+	to-resolve-clauses:
+		Where(term, ReferenceCheck(NsRef(ns), name, None(), None())) -> WhereClause(Assign(TERM("Def", [LIST([TERM(ns)], name)]), App(Seq(CALL("index-find-key"), CALL("index-lookup")), term)))
+

Modified: spoofax-imp/trunk/org.strategoxt.imp.names/trans/namedefinitionlanguage.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.names/trans/namedefinitionlanguage.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax-imp/trunk/org.strategoxt.imp.names/trans/namedefinitionlanguage.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -6,17 +6,16 @@
   libstratego-aterm
   include/NameDefinitionLanguage
   lib/editor-common.generated
-  lib/index-library.generated
-  lib/analysis-library.generated
-  lib/analysis-library-internal.generated
-  lib/compilation-library.generated
-  lib/nbl-library.generated
-  check
+  lib/index-library
+  lib/analysis-library
+  lib/analysis-library-internal
+  lib/compilation-library
+  semantics/names
+  semantics/check
   generate
-  names
-  
-rules // Analysis
 
+rules // Analysis
+  
   // Analyzes the current program, returning a tuple with the analyzed AST, errors, warnings, notes and
   // files that should be re-analyzed.
   analyze:
@@ -44,23 +43,23 @@
     files -> None()
     where
       not(is-tuple)
-    with
+    /*with
       index-setup(|<language>, [<project-path>], ".");
-      disable-commit-and-compile // Disable compilation during analysis.
+      disable-commit-and-compile // Disable compilation during analysis.*/
     with
       editor-queue-analysis
-    with
+    /*with
       // Enable and trigger compilation after all files have been analysed.
       <enable-commit-and-compile> <language>;
-      <trigger-commit-and-compile> <language>
-      
+      <trigger-commit-and-compile> <language>*/
+ 
   // Called when current file is saved.
   editor-save:
-    (_, _, _, _, _) -> None()
-    with
+    (ast, _, _, _, _) -> None()
+    /*with
       index-setup(|<language>, [<project-path>], ".");
-      <trigger-commit-and-compile> <language>
-
+      <trigger-commit-and-compile> <language>*/
+      
 rules // Editor services
   
   // Resolves a reference when the user control-clicks or presses F3 in the editor.
@@ -75,9 +74,9 @@
   // Returns "hover help" information for a particular node in the editor.
   // For references, this rule is invoked using the resolved term.
   editor-hover:
-    (target, position, ast, path, project-path) -> $[[uriString]]
+    (target, position, ast, path, project-path) -> $[[name]]
     where
-      uriString := <index-uri-to-string> <index-uri> <index-find-key> target
+      Type(name) := <type-of> target
 
   // Completes an identifier when the user presses control-space
   // (the completion identifier in the AST provides additional context information)
@@ -90,35 +89,35 @@
       index-transaction(
         (<index-lookup-all(|name)> item <+ ![]) => proposals
       );
-      proposals' := <map(index-uri; index-uri-name)> proposals
-
+      proposals' := <map(index-uri-name)> proposals
+      
 rules // Debugging
   
   // Prints the abstract syntax ATerm of a selection.
-  debug-generate-aterm:
+  generate-aterm:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       filename := <guarantee-extension(|"aterm")> path;
       result   := selected
+  
+  // Prints the analyzed annotated abstract syntax ATerm of a selection.
+  generate-analyzed:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      editor-init;
+      filename := <guarantee-extension(|"analyzed.aterm")> path;
+      result   := <analyze> (selected, path, project-path)   
       
   // Prints the definition annotated abstract syntax ATerm of a selection.
-  debug-generate-deffed:
+  generate-deffed:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       filename := <guarantee-extension(|"aterm")> path;
       result   := <analyze-defs> selected
       
-  // Prints the analyzed annotated abstract syntax ATerm of a selection.
-  debug-generate-analyzed:
-    (selected, position, ast, path, project-path) -> (filename, result)
-    with
-      editor-init;
-      filename := <guarantee-extension(|"analyzed.aterm")> path;
-      result   := <analyze-top(|<language>)> (selected, path, project-path)   
-      
   // Prints the entries in the index of the current file.
-  debug-index-show-current-file:
+  index-currentfile:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
@@ -126,36 +125,22 @@
       result   := <index-get-all-in-file> path
       
   // Prints the entries in the index of all files.
-  debug-index-show-all-files:
+  index-allfiles:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       filename := <guarantee-extension(|"index.allfiles.aterm")> path;
       result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
-
-  // Cleans current file from the index.
-  debug-index-clear-current:
-    (selected, position, ast, path, project-path)  -> None()
-    with
-      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
-      <index-clear-file> $[[project-path]/[path]]
       
   // Cleans all data from the index.
-  debug-index-clear:
+  index-cleanall:
     (selected, position, ast, path, project-path)  -> None()
     with
       index-setup(|<language>, [project-path], $[[project-path]/[path]]);
       index-clear
       
-  // Cleans all data from the index and re-analyzes every file.
-  debug-index-reload:
-    (selected, position, ast, path, project-path)  -> None()
-    with
-      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
-      index-reload
-    
 rules // Utility
-  
+	
   // Queue parallel analysis for given list of files.
   editor-queue-analysis = 
     not(?[]); queue-strategy(|"editor-parallel-analyze", "Analyzing files")
@@ -164,4 +149,4 @@
   editor-parallel-analyze:
     files -> None()
     with
-      index-parallel-analyze-files(analyze)
\ No newline at end of file
+      index-parallel-analyze-files(analyze)

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/analysis-library-internal.str
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/analysis-library-internal.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/analysis-library-internal.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -6,23 +6,41 @@
   lib/editor-common.generated
   lib/analysis-library
   lib/index-library
+
+signature
+
+  constructors // Data kinds stored in the index.
+
+    Type            : DefDataKind
+    Import          : DefDataKind
+    TImport         : DefDataKind
+    Unique          : DefDataKind
   
-signature constructors
-  
-  // Analysis
-  Results         : AST * List(Def) * List(Use) * List(DefData) * List(Def) * List(Def) * List(File) -> Results
-  ParallelResults : AST * AST * List(Error) * List(Warning) * List(Note) * List(File) -> ParallelResults
-  
-  // Namespaces
-  Diff            : Namespace
-  ASTDiff         : Namespace
-  AST             : Namespace
+  constructors // Resolution kinds for use sites.
+
+    Regular         : Namespace * Name                           -> ResolutionKind
+    Regular         : Namespace * Name * Type                    -> ResolutionKind
+    Child           : Namespace * Name * Namespace * Name        -> ResolutionKind
+    Child           : Namespace * Name * Namespace * Name * Type -> ResolutionKind
+    
+  constructors // Annotations used in analysis.
+
+    Scope           : Term -> Anno
   
-  // Data
-  AST             : List(UriPart) * AST -> AST
+  constructors // Results from analysis-top and index-parallel-analyze.
   
-  // Annotations 
-  Scope: Term -> Anno
+    Results         : AST * List(Def) * List(Use) * List(DefData) * List(Def) * List(Def) * List(File) -> Results
+    ParallelResults : AST * AST * List(Error) * List(Warning) * List(Note) * List(File) -> ParallelResults
+   
+  constructors // Namespaces
+    
+    Diff            : Namespace
+    ASTDiff         : Namespace
+    AST             : Namespace
+    
+  constructors // AST storage
+    
+    AST             : List(UriPart) * AST -> AST
   
 rules // Analysis traversals
   
@@ -48,11 +66,11 @@
         unresolvedSet := <new-iset>;
         rules(Index-UnresolvedSet: _ -> unresolvedSet);
         
-        (astFilePairs2, defsList) := <unzip> <map(analyze-top-defs)> astFilePairs;
+        (astFilePairs2, defsList) := <map(analyze-top-defs); unzip> astFilePairs;
         defs := <concat> defsList;
-        (astFilePairs3, dataList) := <unzip> <map(analyze-top-data(|language, full-path))> astFilePairs2;
+        (astFilePairs3, dataList) := <map(analyze-top-data(|language, full-path)); unzip> astFilePairs2;
         data := <concat> dataList;
-        (astFilePairs4, usesList) := <unzip> <map(analyze-top-uses(|language, full-path))> astFilePairs3;
+        (astFilePairs4, usesList) := <map(analyze-top-uses(|language, full-path)); unzip> astFilePairs3;
         uses := <concat> usesList;
         (asts, _) := <unzip> astFilePairs4
       |}
@@ -78,9 +96,11 @@
       end
     with
       <list-loop(analyze-top-store-ast(|full-path))> astFilePairs4
-      
+
+rules  // Phase 1: scope analysis
+
   /**
-   * Add URI annotations to each definition and unresolved URI annotations to each use site.
+   * Add URI annotations to each definition and unresolved annotations to each use site.
    *
    * @internal
    */
@@ -88,10 +108,183 @@
     (ast, file) -> ((ast2, file), defs)
     with
       <index-set-current-file> file;
-      (Some(ast2), edefs) := <analyze-defs> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
-      defs := <map(Snd)> edefs; 
-      <index-add-all(|file)> defs
+      (ast2, defs, data) := <analyze-defs> ast; 
+      <index-add-all(|file)> defs;
+      (data2, _) := <analyze-uses> data;
+      <index-add-all(|file)> data2
+  
+  /**
+   * Identifies all definitions in the tree and annotates them with their URI.
+   * Also annotates uses with a preliminary "Unresolved(pathes)" annotation, 
+   * where "pathes" maps relevant namespaces to their pathes.
+   *
+   * @internal
+   */
+  analyze-defs:
+    ast -> (ast', defs, data) 
+    with 
+      def-set  := <new-iset>; 
+      data-set := <new-iset>;
+      ast'     := <analyze-defs(|[], Anon(<new>), def-set, data-set)> ast;
+      defs     := <iset-elements; map(try(Snd))> def-set;
+      data     := <iset-elements> data-set
+     
+  /**
+   * Special case for tree nodes which are defined as scopes at parent nodes. 
+   *
+   * @internal 
+   */
+  analyze-defs(|paths, subsequent, defs, data):
+    ast{a*} -> ast'
+    where
+      a'* := <split-fetch(?Scope(uri*)) ; conc> a*
+    with
+      updates := <map(!(<Hd>, <Tl;Tl>))> uri* ;
+      paths'  := <update-index-paths(|updates)> paths ;
+      ast'    := <analyze-defs(|paths', subsequent, defs, data)> ast{a'*}
+       
+  /**
+   * Default case for all other tree nodes. 
+   *
+   * Uses the following rules generated from a NBL definition:
+   *
+   * nam-get-definitions: definition sites of the current node
+   * nam-get-scope-types: namespaces scoped by the current node
+   * nam-annotate-use   : use sites of the current node
+   *
+   * @internal 
+   */
+  analyze-defs(|paths, subsequent, defs, data):
+    ast{a*} -> f#(children'){a*}
+    where 
+      not(<fetch(?Scope(_))> a*)
+    with
+      // check wether the current AST node scopes other definitions
+      // scope*: list of scope information
+      //
+      // updates the pathes for scoped namespaces
+      if scope* := <nam-get-scope-types> ast then
+        update* := <map(construct-index-path(|paths, defs, ast))> scope*;
+        paths'  := <update-index-paths(|update*)> paths
+      else
+        paths'  := paths
+      end;
+      // check wether the current AST node defines names
+      // ast1 : AST node with annotated definition sites and scopes
+      // def* : list of definition entries
+      // imp* : list of import entries
+      //
+      // definitions are paired with unique identifier to keep duplicates
+      if (ast', def*, imp*) := <nam-get-definitions(|paths, paths', subsequent)> ast then
+        <iset-addlist(|<map(!(<new>, <id>))> def*)> defs;
+        <iset-addlist(|imp*)> data
+      else
+        ast' := ast 
+      end;
+      // analyze children and annotate use sites afterwards
+      f#(children) := ast';
+      children'    := <origin-track-forced(analyze-child-defs(|paths', defs, data))> children
+      
+  /** @internal */
+  analyze-child-defs(|paths, defs, data):
+    [] -> []
+    
+  /** @internal */
+  analyze-child-defs(|paths, defs, data):
+    [d|ds] -> [d'|ds']
+    with
+      subsequent := Anon(<new>);
+      d'         := <analyze-defs(|paths, subsequent, defs, data)> d ;
+      if scopes := <nam-ordered-def> d then
+        updates := <map(\scope -> (scope, [subsequent|<lookup-index-path> (scope, paths)])\)> scopes ; 
+        paths'  := <update-index-paths(|updates)> paths 
+      else
+        paths' := paths
+      end;
+      ds'  := <analyze-child-defs(|paths', defs, data)> ds
+
+rules // helper for phase 1
+   
+  /** @internal */
+  construct-index-path(|paths, defs, ast):
+    (ns, name, scope-type, unique) -> (scope-type, path'')
+    with
+      path  := <lookup-index-path> (ns, paths);
+      path' := <index-do-adjust-path(|scope-type, path, name)> ast;
+      if () := unique then
+        path'' := path'
+      else
+        path'' := <index-do-adjust-path(|scope-type, path', unique)> ast;
+        <iset-add(|DefData([scope-type| path'], Unique(), path''))> defs
+      end
+  
+  update-import(|source, paths):
+    namespace -> DefData([namespace | path], Import(), source)
+    with
+      path := <lookup-index-path> (namespace, paths)
       
+  /** @internal */
+  update-index-paths(|updates) = 
+    remove-all({key: Fst => key; <fetch-elem(Fst => key)> updates}); 
+    at-end(!updates)
+  
+  /** @internal */
+  lookup-index-path = 
+    lookup' <+ ![]
+ 
+  /** 
+   * Kept for backward compatibility.
+   *
+   * @internal 
+   */
+  index-do-adjust-path(|namespace, path, scope) =
+    adjust-index-path(origin-equal(|scope)|namespace, path) <+ ![scope|path]
+
+rules // interface to NBL generator for phase 1
+  
+  /** @internal */
+  nam-get-definitions(|paths, paths', subsequent) 
+    = fail
+
+  /** 
+   * Callback for nam-get-definitions
+   *
+   * @internal */ 
+  nam-annotate-def(|uris):
+    t{a*} -> t{uris, a*}
+  
+  /** 
+   * Callback for nam-get-definitions
+   *
+   * @internal */ 
+  nam-annotate-scope(|paths):
+    t -> t{Scope(paths)}
+  
+  /** @internal */ 
+  nam-get-scope-types 
+     = fail
+  
+  /** @internal */
+  nam-annotate-uses(|paths) 
+     = fail
+  
+  /**
+   * Callback for nam-get-definitions (imports) and nam-annotate-uses
+   * 
+   * @internal 
+   */ 
+  nam-annotate-use(|paths, namespace*):
+    t{a*} -> t{Unresolved(<filter(nam-is-relevant(|namespace*))> paths), a*}
+    
+  nam-is-relevant(|namespace*):
+    (ns, _) -> <id> where <fetch-elem(?ns)> namespace*
+ 
+  /** @internal */ 
+  nam-ordered-def 
+     = fail
+
+rules // Phase 2: type analysis of definition sites     
+
   /**
    * Gathers all data for each definition.
    *
@@ -107,18 +300,84 @@
         
         // Gather all data for each definition.
         ast2 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast; // Parent pointers needed.
-        data := <origin-track-forced(analyze-tree-data)> ast2;
+        data := <origin-track-forced(analyze-data)> ast2;
+        
+        // Resolve all references in gathered data.
+        (data2, _) := <analyze-uses> data;
+        <index-add-all(|file)> data2;   
         
-				// Resolve all references in gathered data.
-				(data2, _) := <analyze-uses> data;
-				<index-add-all(|file)> data2;
-				
         // Store reads into the index (if not testing language)
         if not(is-test-input(|language, full-path)) then
           <index-add-all(|file)> <iset-elements> readSet
         end
       |}
+
+ /**
+   * Collects all index data (e.g. types of definitions).
+   *
+   * @internal
+   */
+  analyze-data:
+    ast -> types
+    with
+      set := <new-iset>;
+      <topdown(try(analyze-type(|set)); analyze-data-part(|set))> ast;
+      types := <iset-elements> set
+      
+  /** @internal */
+  analyze-type(|set):
+    ast -> ast
+    where
+      (_{uri}, type) := <nam-get-type> ast;
+      <iset-add(|DefData(uri, Type(), type))> set
       
+  /** @internal */
+  analyze-data-part(|set):
+    ast -> ast
+    where
+      if keys := <nam-get-definition-keys> then
+        <list-loop(do-adjust-index-def-data(|set, ast))> keys
+      end
+
+rules // helper for phase 2
+   
+  /**
+   * Kept for backward compability and possibly additional data.
+   * 
+   * @internal 
+   */
+  do-adjust-index-def-data(|set, ast):
+    key -> key
+    where
+      if 
+        _{[ns|path]} := key; 
+        result       := <adjust-index-def-data(store-index-data-results(|set) |ns, path)> ast 
+      then
+         <fatal-err(|"Unexpected result from adjust-index-def-data; should call <store-results>")> result
+      end
+  
+  /** @internal */
+  store-index-data-results(|set):
+    t -> <fail>
+    where
+      if is-list then
+        <iset-addlist(|t)> set
+      else
+        <iset-add(|t)> set
+      end
+
+rules // interface to NBL generator for phase 2
+  
+  /** @internal */
+  nam-get-definition-keys
+    = fail
+
+  /** @internal */
+  nam-get-type
+    = fail
+
+rules // Phase 3: resolution of use sites     
+
   /**
    * Resolves all unresolved references for each use site.
    *
@@ -143,185 +402,291 @@
           <index-add-all(|file)> <iset-elements> readSet
         end
       |}
-      
+
   /**
-   * Stores AST from file to the index.
+   * Analyze all uses, changing their preliminary "Unresolved(_)" annotation 
+   * to an URI of their definition.
    *
    * @internal
-   */   
-  analyze-top-store-ast(|full-path):
-    (ast, (_, subfile)) -> <id>
+   */
+  analyze-uses:
+    ast -> (ast', uses)
+    with
+      use-set := <new-iset>;
+      ast'    := <bottomup(try(analyze-use(|use-set)))> ast;
+      uses    := <iset-elements ; map(Snd)> use-set
+  
+  analyze-use(|uses):
+    ast -> ast'
     where
-      <index-add(|full-path)> AST(subfile, ast)
+      _{Unresolved(paths)} := ast;
+      origin               := <origin-term> ast;
+      resolution*          := <repeat-until(prim("SSL_EXT_get_parent", <id>), nam-resolve(origin-equal(|ast)))> origin;
+      if 
+        COMPLETION(_) := ast 
+      then
+        ast' := ast{<filter(index-complete(|paths, ast)); concat> resolution*}
+      else
+        Def(def-uri) := <fetch-elem(index-resolve(|paths, ast))> resolution*;
+        ast'         := ast{def-uri};
+        <iset-add(|(<new>, Use(def-uri)))> uses
+      end
 
-  /**
-   * Stores AST from file to the index.
-   *
-   * @internal
-   */   
-  analyze-top-store-ast(|full-path):
-    (ast, file) -> <id>
+rules // resolution rules for phase 3
+  
+  index-resolve(|paths, target):
+    Regular(ns, name) -> <index-lookup-name> (ns, name', path)
     where
-      <is-string> file;
-      <index-add(|full-path)> AST([AST()], ast)
+      name' := <strip-annos> name;
+      path  := <lookup-index-path> (ns, paths)
       
+  // TODO take type into account
+  index-resolve(|paths, target):
+    Regular(ns, name, type) -> <index-lookup-name> (ns, name', path)
+    where
+      name' := <strip-annos> name;
+      path  := <lookup-index-path> (ns, paths)
+  
+  index-resolve(|paths, target):
+    Child(ns, name, pns, parent) -> <index-lookup-child-name> (ns, name', pns, path)
+    where
+      name'           := <strip-annos> name;
+      Def([pns|path]) := <index-resolve(|paths, parent)> Regular(pns, parent)
+      
+  // TODO take type into account
+  index-resolve(|paths, target):
+    Child(ns, name, pns, parent, type) -> <index-lookup-child-name> (ns, name', pns, path)
+    where
+      name'           := <strip-annos> name;
+      Def([pns|path]) := <index-resolve(|paths, parent)> Regular(pns, parent)
+
+rules // completion rules for phase 3
+
+  index-complete(|paths, target):
+    Regular(ns, COMPLETION(name)) -> <index-lookup-prefix> (ns, name, path)
+    where
+      path := <lookup-index-path> (ns, paths)
+
+  // TODO take type into account??
+  index-complete(|paths, target):
+    Regular(ns, COMPLETION(name), type) -> <index-lookup-prefix> (ns, name, path)
+    where
+      path := <lookup-index-path> (ns, paths)
+
+  index-complete(|paths, target):
+    Child(ns, COMPLETION(name), pns, parent) -> <index-lookup-child-prefix> (ns, name, path)
+    where
+      path := <lookup-index-path> (ns, paths)
+
+  // TODO take type into account??
+  index-resolve(|paths, target):
+    Child(ns, COMPLETION(name), pns, parent, type) -> <index-lookup-child-prefix> (ns, name, path)
+    where
+      path := <lookup-index-path> (ns, paths)
+
+rules // name-based lookup, first result
+  
+  index-lookup-element =
+    index-uri => [ns, name|path] ; <index-lookup-name> (ns, name, path)
+    
+  
+  index-lookup-child-name:
+    (ns, name, path) -> <index-lookup-child(index-first-name(|name))> [ns|path]
+  
+  index-lookup-name:
+    (ns, name, path) -> <index-lookup(index-first-name(|name))> [ns|path]
+    
+  index-lookup-local-name:
+    (ns, name, path) -> <index-lookup-local(index-first-name(|name))> [ns|path]
+  
+  index-lookup-imported-name:
+    (ns, name, path) -> <index-lookup-imported(index-first-name(|name))> [ns|path]
+
+rules // name-based lookup, all results
+  
+  index-lookup-all-element =
+    index-uri => [ns, name|path] ; <index-lookup-all-name> (ns, name, path)
+  
+  
+  index-lookup-children-name:
+    (ns, name, path) -> <index-lookup-child(index-all-name(|name))> [ns|path]
+  
+  index-lookup-all-name:
+    (ns, name, path) -> <index-lookup(index-all-name(|name))> [ns|path]
+    
+  index-lookup-all-local-name:
+    (ns, name, path) -> <index-lookup-local(index-all-name(|name))> [ns|path]
+  
+  index-lookup-all-imported-name:
+    (ns, name, path) -> <index-lookup-imported(index-all-name(|name))> [ns|path]
+  
+rules // prefix-based lookup
+  
+  index-lookup-prefix-element(|prefix) =
+    index-uri => [ns|path] ; <index-lookup-prefix> (ns, prefix, path)
+    
+  index-lookup-child-prefix-element(|ns, prefix) =
+    index-uri => [_|path] ; <index-lookup-prefix> (ns, prefix, path)
+    
+  
+  index-lookup-child-prefix:
+    (ns, prefix, path) -> <index-lookup-child(index-all-prefix(|prefix))> [ns|path]
+  
+  index-lookup-prefix:
+    (ns, prefix, path) -> <index-lookup-all(index-all-prefix(|prefix))> [ns|path]
+    
+  index-lookup-local-prefix:
+    (ns, prefix, path) -> <index-lookup-local(index-all-prefix(|prefix))> [ns|path]
+  
+  index-lookup-imported-prefix:
+    (ns, prefix, path) -> <index-lookup-imported(index-all-prefix(|prefix))> [ns|path]
+  
+rules // generic lookups
+  
+  index-lookup-child(select) = 
+    index-unique-path ; index-lookup-local(select)
+    
+  // extends path with its unique extension
+  index-unique-path:
+    [ns|path] -> [ns|<index-get-value <+ !path> DefData([ns|path], Unique(), ())]   
+      
+  // path -> list of selected children
+  index-lookup-local(select):
+    ns-path -> definition
+    where
+      candidate* := <prim("LANG_index_get_children", Def(ns-path))>;
+      definition := <select> candidate*
+  
+  // path -> list of selected imports
+  index-lookup-imported(select) =
+    index-import-paths; 
+    select 
+  
+  // performs a lookup in current and enclosing scopes
+  // stops on first result
+  // considers imports
+  index-lookup(select) =
+    index-lookup-local(select) <+
+    index-lookup-imported(fetch-elem(index-lookup-local(select))) <+
+    ([id|Tl]; index-lookup(select))
+
+  // performs a lookup in current and enclosing scopes
+  // combines the results
+  // considers imports
+  index-lookup-all(select):
+    p -> [local*, imported*, scoped*]
+    where
+      local*    := <index-lookup-local(select)> p;
+      imported* := <index-lookup-imported(filter(index-lookup-local(select))); concat> p;
+      scoped*   := <([id|Tl]; index-lookup-all(select)) <+ ![]> p
+      
+rules // helper for imports
+  
+  index-import-paths = MkSingleton ; index-import-paths(|[], [])
+   
   /**
-   * Identifies all definitions in the tree and annotates them with their URI.
-   * Also annotates uses with a preliminary "Unresolved(_)" URI.
+   * Finds all import paths.
+   * 
+   * i*: accumulator for the result
+   * t*: already analyzed paths
+   *
+   * list of paths to consider -> list of all import paths
    *
    * @internal
    */
-  analyze-defs:
-  	ast -> (<analyze-defs(|[], set, Anon(), Anon())> ast, <iset-elements> set)
-  	where
-  		set := <new-iset>
-  		 
-  /** @internal */
-  analyze-defs(|paths, defs, head-scope, head-scope-ns):
-    ast{Scope([namespace, name | path])} -> ast'
-    where
-      paths' := <update-index-paths(|[(namespace, path)])> paths ;
-      ast'   := <rm-annotations; analyze-defs(|paths', defs, Anon(), Anon())> ast
-      
+  index-import-paths(|i*, t*): 
+    [] -> i*
   
-  /** @internal */
-  analyze-defs(|paths, defs, head-scope, head-scope-ns):
-    ast -> ast'
+  index-import-paths(|i*, t*): 
+    [p|p*] -> p'*
     where
-    	<not(has-annos)> ast    	
-    with
-      if (namespace, path) := <nam-get-definition> ast then
-      	definition     := <nam-get-def(|paths, namespace)> path;
-      	Def(def-path)  := definition; 
-        head-scope-ns' := namespace;
-        head-scope'    := <Hd> path;
-        f#(children)   := <try(nam-annotate-scopes(|def-path))> ast;
-        <iset-add(|(<new>, definition))> defs
-      else
-        def-path       := INTERNAL_ERROR();
-        head-scope-ns' := head-scope-ns;
-        head-scope'    := head-scope;
-        f#(children)   := ast
-      end;
-      if scope-types := <nam-get-scope-types> ast then
-      	unique          := Anon(<new>);
-        updates         := <map(construct-index-path(|paths, head-scope', head-scope-ns', unique, ast))> scope-types;
-        paths'          := <update-index-paths(|updates)> paths;
-        head-scope-ns'' := Anon();
-        head-scope''    := Anon()
-      else
-      	paths'          := paths;
-      	head-scope-ns'' := head-scope-ns';
-        head-scope''    := head-scope'
-      end;
-      children' := <origin-track-forced(analyze-child-defs(|paths', defs, head-scope'', head-scope-ns''))> children;
-      ast'      := <try(nam-annotate-names(|paths', def-path))> f#(children') 
-       
-  /** @internal */
-  analyze-child-defs(|paths, defs, head-scope, head-scope-ns):
-  	[] -> []
-  	
-  /** @internal */
-  analyze-child-defs(|paths, defs, head-scope, head-scope-ns):
-  	[d|ds] -> [d'|ds']
-  	where
-  	  d'  := <analyze-defs(|paths, defs, head-scope, head-scope-ns)> d ;
-  	  if <nam-ordered-def> d then
-  	  	[namespace, name | path] := <nam-get-definition-key ; index-uri> d' ;
-        paths'                   := <update-index-paths(|[(namespace, path)])> paths ;
-  	  	ds'                      := <analyze-child-defs(|paths', defs, Anon(), Anon())> ds
-  	  else
-  	    ds' := <analyze-child-defs(|paths, defs, head-scope, head-scope-ns)> ds
-  	  end
-  
-  /** @internal */
-  construct-index-path(|paths, head-scope, head-scope-ns, unique, ast):
-    scope-type -> (scope-type, path'')
-    where
-      if !head-scope-ns => Anon() then
-        path  := <lookup-index-path> (scope-type, paths);
-        path' := <index-do-adjust-path(|scope-type, path, Anon(<new>))> ast
+      [ns|path] := p;
+      if <elem> (p, t*) then
+        p'* := <index-import-paths(|i*, t*)> p*
       else
-        path  := <lookup-index-path> (head-scope-ns, paths);
-        path' := <index-do-adjust-path(|scope-type, path, head-scope)> ast
-      end;
-      // HACK: Disable generation of anonymous namespaces for unique definitions to let FieldAccess-like constructs work.
-      if /*<nam-unique> ast*/ fail then
-      	path'' := <index-do-adjust-path(|scope-type, path', unique)> ast
-      else
-      	path'' := path'
+        i'* := <indexlib-get-all-values; map(index-uri; [!ns|id]; index-unique-path)> DefData(p, Import(), ());
+        t'* := <indexlib-get-all-values; map(index-uri; [!ns|id]; index-unique-path)> DefData(p, TImport(), ());
+        p'* := <index-import-paths(|[i*, i'*], [p, t*])> [p*, t'*]
       end
+
+rules // low-level comparisons
+
+  index-first-name(|name) = 
+    fetch-elem(index-compare-name-equal(|name))
+ 
+  index-all-name(|name) = 
+    filter(index-compare-name-equal(|name))
+ 
+  index-all-prefix(|prefix) =
+    filter(index-compare-name-substring(|prefix))
+ 
+   /**
+   * Compares given element (with an URI) to given name using string equality comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-equal(|name) =
+    where(
+      ?Def([_,<id>|_]); 
+      SRTS-EXT-eq-ignore-annos(|name)
+    )
+       
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-substring(|prefix) =
+    where (
+      ?Def([_,<id>|_]); 
+      is-substring(!prefix)
+    )
       
-  /** @internal */
-  update-index-paths(|updates) = 
-    remove-all(?(<id>, _); !(<id>, updates) ; lookup') ; at-end(!updates)
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison and given namespace.
+   * 
+   * @internal 
+   */      
+  index-compare-name-substring(|prefix, namespace) =
+    where (
+      ?Def([ns,name|_]); 
+      <eq> (namespace, ns);
+      <is-substring(!prefix)> name
+   )
+   
+rules // interface to NBL generator for phase 3
   
   /** @internal */
-  lookup-index-path = 
-    lookup' <+ ![]
- 
+  nam-get-uses 
+    = fail
+  
   /** @internal */
-  index-do-adjust-path(|namespace, path, scope) =
-    adjust-index-path(origin-equal(|scope)|namespace, path)
-  <+
-    ![scope|path]
- 
+  nam-resolve(target) 
+    = fail
+
+rules // Final: storing analyzed AST
+       
   /**
-   * Analyze all uses, changing their preliminary "Unresolved(_)" URI to a definite URI of their definition.
+   * Stores AST from file to the index.
    *
    * @internal
-   */
-  analyze-uses:
-    ast -> (ast'', uses')
-    with
-      analyzed     := <all(analyze-uses)> ast;
-      (ast', uses) := <unzip-analyzed> analyzed;
-      if !ast' => _{unresolved@[Unresolved(namespace), x | path]} then
-        if Def(def-uri) := <index-lookup> ast' then
-          ast'' := ast{def-uri};
-          uses' := [Use(def-uri) | uses]
-        else
-          ast'' := ast';
-          uses' := [BadUse([namespace, x]) | uses]
-        end
-      else
-        ast'' := ast';
-        uses' := uses
-      end
- 
+   */   
+  analyze-top-store-ast(|full-path):
+    (ast, (_, subfile)) -> <id>
+    where
+      <index-add(|full-path)> AST(subfile, ast)
+
   /**
-   * Collects all index data (e.g. types of definitions).
+   * Stores AST from file to the index.
    *
    * @internal
-   */
-  analyze-tree-data:
-    tree -> data
-    where
-      set := <new-iset>;
-      <topdown(analyze-tree-data-part(|set))> tree;
-      data := <iset-elements> set
-      
-  /** @internal */
-  analyze-tree-data-part(|set):
-    tree -> tree
-    where
-      if def-term := <nam-get-definition-key> then
-        _{[namespace | path]} := def-term;
-        if result := <adjust-index-def-data(store-index-data-results(|set) |namespace, path)> tree then
-          <fatal-err(|"Unexpected result from adjust-index-def-data; should call <store-results>")> result
-        end
-      end
-  
-  /** @internal */
-  store-index-data-results(|set):
-    t -> <fail>
+   */   
+  analyze-top-store-ast(|full-path):
+    (ast, file) -> <id>
     where
-      if is-list then
-        <iset-addlist(|t)> set
-      else
-        <iset-add(|t)> set
-      end
-      
+      <is-string> file;
+      <index-add(|full-path)> AST([AST()], ast)
+                  
 rules // Parallel analysis
   
   /** @internal */
@@ -344,15 +709,15 @@
   index-parse-file:
     file -> (ast', file)
     with
-	    if <file-exists> file then
-	    	if ast := <parse-file> file then
-	    		ast' := ast
-	      else
-	      	ast' := ()
-      	end
-	    else
-	      ast' := ()
-	    end
+      if <file-exists> file then
+        if ast := <parse-file> file then
+          ast' := ast
+        else
+          ast' := ()
+        end
+      else
+        ast' := ()
+      end
    
   /** @internal */   
   index-set-markers:
@@ -402,7 +767,7 @@
           elems := <mapconcat(index-toplevel-split-internal)> <index-qualifier-subelements> node;
           units := <map(index-transform-qualifier(|node))> elems
         case index-is-toplevel:
-          units := [(node, <index-uri> <nam-get-definition-key> node)]
+          units := [(node, <index-uri> <nam-get-definition-keys; Hd> node)]
         otherwise:
           units := [(node, [])]
       end
@@ -478,184 +843,7 @@
    * @internal
    */
   analyze-get-compilediffs = index-get-all-globals(|"compile-diff"); index-clear-global(|"compile-diff")
-  
-rules // Index lookup rules (that take into account adjust-index-lookup)
-  
-  /**
-   * Given a term x, namespace n, path s and prefix p, looks for a definition in the 
-   * scope of s and outer scopes in namespace n that start with prefix p, returning the first 
-   * found definition.
-   *
-   * @param namespace Only definitions with this namespace are returned.
-   * @param path      Only definitions with this path or part of this path are returned.
-   * @param prefix    Only definitions with a name that starts with this string are returned.
-   *
-   * @type term -> ?Def(uri')
-   *
-   * @internal
-   */
-  index-lookup-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
-    x -> definition
-    where
-      defs := <index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix)> x;
-      
-      if StopLookup() := defs then
-        fail
-      end;
-      
-      if not(definition := <Hd> defs) then
-        [_|path']  := path;
-        definition := <index-lookup-internal(adjust-import, adjust-lookup, name-compare|namespace, path', prefix)> x
-      end
-      
-  /** @internal */
-  index-lookup-internal(name-compare|namespace, path, prefix) = 
-    index-lookup-internal(id, id, name-compare|namespace, path, prefix)
-
-  /**
-   * Given a term x, namespace n, path s and prefix p, looks for definitions in the scope of s 
-   * and outer scopes in namespace n that start with prefix p, returning all found definition.
-   *
-   * @param namespace Only definitions with this namespace are returned.
-   * @param path      Only definitions with this path or part of this path are returned.
-   * @param prefix    Only definitions with a name that starts with this string are returned.
-   * @type "name"{uri} -> List(Def(uri'))
-   *
-   * @internal
-   */
-  index-lookup-all-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
-    x -> defs'
-    where
-      defs := <index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix)> x;
-      
-      if [_|path'] := path then
-        defs2 := <index-lookup-all-internal(adjust-import, adjust-lookup, name-compare|namespace, path', prefix)> x;
-        defs' := <conc> (defs, defs2)
-      else
-        defs' := defs
-      end
-
-  /** @internal */
-  index-lookup-all-internal(name-compare|namespace, path, prefix) = 
-    index-lookup-all-internal(id, id, name-compare|namespace, path, prefix)
-      
-  /**
-   * Given a term x, namespace n, path s and prefix p, looks for a definition in the 
-   * scope of s in namespace n that start with prefix p, returning the first found definition.
-   *
-   * @param namespace Only definitions with this namespace are returned.
-   * @param path      Only definitions with this path are returned.
-   * @param prefix    Only definitions with a name that starts with this string are returned.
-   * @type term -> List(Def(uri))
-   *
-   * @internal
-   */
-  index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
-    x -> defs
-    with
-      adjust-lookup;
-      adjusted := <index-do-adjust-lookup(|namespace, path, x, prefix)> x;
-      defs     := <index-get-adjust-lookup-results(adjust-import, name-compare|adjusted, prefix)> x
-    <+
-      adjust-import;
-      adjusted := <index-do-adjust-import(|namespace, path)> x;
-      defs     := <index-get-adjust-import-results(adjust-lookup, name-compare|adjusted, prefix)> x
-    <+
-      defs     := <index-get-children(\uri -> Def(uri)\, name-compare|namespace, prefix)> [namespace | path]
-      
-  /** @internal */
-  index-lookup-all-scoped-internal(name-compare|namespace, path, prefix) = 
-    index-lookup-all-scoped-internal(id, id, name-compare|namespace, path, prefix)
-  
-  /** @internal */
-  index-do-adjust-import(|namespace, path) =
-    adjust-index-import(|namespace, path)
-    
-  /** @internal */
-  index-get-adjust-import-results(adjust-lookup, name-compare|adjusted, prefix):
-    x -> defs'
-    with
-      defs := 
-        <mapconcat(
-             index-adjust-import-recurse(adjust-lookup, name-compare|x, prefix)
-          <+ fatal-err(|"Unexpected result from adjust-index-import, should be a list of [namespace | path].")
-        )> adjusted;
-        if not(<elem> (StopLookup(), defs)) then
-        	defs' := <filter(name-compare)> defs
-        else
-        	defs' := StopLookup()
-      	end
-      	
-  /** @internal */
-  index-adjust-import-recurse(adjust-lookup, name-compare|x, prefix):
-  	[namespace|path] -> results'
-  	with
-  		results := <index-lookup-all-scoped-internal(fail, adjust-lookup, name-compare|namespace, path, prefix)> x;
-  		if not(<is-list> results) then
-  			results' := [results]
-  		else
-  			results' := results
-			end
-        
-  /** @internal */
-  index-do-adjust-lookup(|namespace, path, use, prefix) =
-    repeat-until(
-      prim("SSL_EXT_get_parent", <id>)
-    , adjust-index-lookup(origin-equal(|use)|namespace, path, prefix) 
-    )
-    
-  /** @internal */  
-  index-get-adjust-lookup-results(adjust-import, name-compare|adjusted, prefix):
-    x -> defs'
-    with
-      if StopLookup() := adjusted then
-        defs' := StopLookup()
-      else
-        defs := 
-          <mapconcat(
-               \d at Def(p) -> [d]\
-            <+ \[namespace'|path'] -> <index-lookup-all-scoped-internal(adjust-import, fail, name-compare|namespace', path', prefix)> x\
-            <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list of Def(uri) or [namespace | path], or StopLookup() to stop the lookup.")
-          )> adjusted;
-          defs' := <filter(name-compare)> defs
-      end
-      
-rules // Name comparisons
-
-  /**
-   * Compares given element (with an URI) to given name using string equality comparison.
-   * 
-   * @internal 
-   */     
-  index-compare-name-equal(|name):
-    element -> <id>
-    where
-      uri := <index-uri> element;
-      <SRTS-EXT-eq-ignore-annos(|name)> <index-uri-name> uri
-  
-  /**
-   * Compares given element (with an URI) to given prefix using substring comparison.
-   * 
-   * @internal 
-   */     
-  index-compare-name-substring(|prefix):
-    element -> <id>
-    where
-      uri := <index-uri> element;
-      <is-substring(!prefix)> <index-uri-name> uri
-      
-  /**
-   * Compares given element (with an URI) to given prefix using substring comparison and given namespace.
-   * 
-   * @internal 
-   */      
-  index-compare-name-substring(|prefix, namespace):
-    element -> <id>
-    where
-      uri := <index-uri> element;
-      <eq> (namespace, <index-uri-namespace> uri);
-      <is-substring(!prefix)> <index-uri-name> uri
-      
+             
 rules // URI and value projections
        
   /** @internal */
@@ -701,17 +889,6 @@
 rules // Internal helpers
 
   /**
-   * Transforms a term C( (a1, [b1]), (a2, [b2, b3]) ) to a tuple (C(a1, a2), [b1, b2, b3]).
-   *
-   * @internal
-   */
-  unzip-analyzed:
-    appl -> (appl', unzipped-parts)
-    with
-      appl'          := <all(\(a, _) -> a\)> appl;
-      unzipped-parts := <concat> <get-appl-arguments(\(_, b) -> b\) <+ map(\(_, b) -> b\) <+ ![]> appl
-       
-  /**
    * Tests if the current file is just a testing language input
    *
    * @internal
@@ -782,56 +959,4 @@
   
   /** @internal */
   index-key-unwrap = 
-    \key{uri} -> key{<index-uri-unwrap> uri}\ <+ id
-    
-rules // Interface for generated code
- 
-  /** @internal */
-  nam-get-def(|paths, namespace):
-    part* -> Def([namespace, part* | <lookup-index-path> (namespace, paths)])
-  
-  /** @internal */ 
-  nam-annotate-def(|path):
-    t -> result
-    with
-    	result := t{path}
-  
-  /** @internal */ 
-  nam-annotate-use(|paths, namespace):
-    t -> t{[Unresolved(namespace), t | <lookup-index-path> (namespace, paths)]}
-  
-  /** @internal */ 
-  nam-annotate-use(|paths, namespace, namespace2, name):
-  	t -> t{[Unresolved(namespace), t | <lookup-index-path> (namespace, paths)]}
-  	
-  /** @internal */ 
-  nam-annotate-scope(|path):
-    t -> t{Scope(path)}
-  
-  /** @internal */ 
-  nam-get-scope-types = fail
-  /** @internal */ 
-  nam-ordered-def = fail
-  /** @internal */
-  nam-get-definitions = fail
-  /** @internal */
-  nam-get-definition = nam-get-definitions ; Hd 
-  /** @internal */
-  nam-get-definition-keys = fail
-  /** @internal */
-  nam-get-definition-key = nam-get-definition-keys ; Hd
-  /** @internal */
-  nam-get-uses = fail
-  /** @internal */
-  nam-get-use = nam-get-uses ; Hd 
-  /** @internal */
-  nam-get-uses-keys = fail
-  /** @internal */
-  nam-get-use-key = nam-get-uses-keys ; Hd
-  /** @internal */
-  nam-annotate-names(|paths, def-path) = fail
-  /** @internal */
-  nam-annotate-scopes(|def-path) = fail
-  /** @internal */
-  nam-unique = fail
-  
+    \key{uri} -> key{<index-uri-unwrap> uri}\ <+ id
\ No newline at end of file

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/analysis-library.str
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/analysis-library.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/analysis-library.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -26,6 +26,8 @@
   
 rules // Index analysis extension points
  
+  type-of = fail
+  
   /**
    * Extension point. Override this rule to adjust how the index analysis looks up use sites to definitions.
    *
@@ -69,12 +71,7 @@
    * @type def -> List(Def(uri) or [namespace|path]) or StopLookup()
    */
   adjust-index-lookup(check-target-name|namespace, path, prefix) = fail
-  
-  /**
-   * Extension point.
-   */
-  adjust-index-import(|namespace, path) = fail
-  
+    
   /** 
    * Extension point. Override this rule to store data about definitions in the index. Should call <store-results> on 
    * a (list of) data that must be stored in the index.
@@ -189,7 +186,7 @@
       else
         Results(asts, _, _, _, _, _, filesToAnalyze) := 
           <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, (full-path, []))];
-        ast' := <Hd> asts // Always returns a list of 1 AST if there is no splitter, so take the head.
+        ast' := <Hd> asts
       end
   
 rules // Parallel analysis
@@ -214,7 +211,7 @@
     with
       index-parallel-analyze(analyze);
       filter(not(?ParallelResults((), (), _, _, _, _) <+ ?ParallelResults((), [()], _, _, _, _)); index-set-markers)
-      
+
 rules // Splitter
   
   /**
@@ -237,7 +234,7 @@
           merged      := toplevel
         end
       end
- 
+  
 rules // Query primitives
  
   /**
@@ -263,18 +260,7 @@
    */
   index-get-data-all(|kind):
      <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-all-values> DefData(uri, kind, ())
-
-  /**
-   * Gets a Use entry that matches given URI, or fail.
-   *
-   * Example:
-   *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"]), ...]
-   *
-   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Use(uri))
-   */
-  index-get-use:
-    <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-all> Use(uri)
-     
+  /**   * Gets a Use entry that matches given URI, or fail.   *   * Example:   *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"]), ...]   *   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Use(uri))   */  index-get-use:    <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-all> Use(uri)     
   /**
    * Gets all Use entries that match the given URI.
    *
@@ -359,72 +345,6 @@
     template -> <index-value> <?[<id>|_]> <index-get-all> template
 
   /**
-   * Gets all Def children elements of an URI in a certain namespace.
-   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
-   *
-   * Example:
-   *   <index-get-children(|Field())> Def([Entity(), "Baz"]) => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
-   *   <index-get-children(|Field())> "Foo"{[Entity(), "Baz"]} => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
-   *   <index-get-children(|Field())> [Entity(), "Baz"] => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
-   *
-   * @param namespace Only child Def elements in this namespace are returned.
-   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
-   */
-  index-get-children(|namespace) = 
-    index-get-children(\uri -> Def(uri)\, id|namespace)
-  
-  /**
-   * Gets all children elements of an URI in a certain namespace using custom templates.
-   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
-   *
-   * @param construct-template  uri -> template. Should create a template to match index entries with, given an URI.
-   * @param name-compare        element -> ?element. Strategy for filtering children elements.
-   * @param namespace           Only child elements in this namespace are returned.
-   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
-   */
-  index-get-children(construct-template, name-compare|namespace):
-    <with([parent-ns | path] := <index-uri> | "Def, key or URI expected")> -> children
-    with
-      template  := <construct-template> [namespace | path];
-      children  := <prim("LANG_index_get_children", template)>;
-      <store-wildcard-read(|namespace, path, "")> children
-
-  /**
-   * Gets all Def children elements of an URI in a certain namespace where the name starts with a prefix.
-   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
-   *
-   * Example:
-   *   <index-get-children(|Field(), "fo")> Def([Entity(), "Baz"]) => [Def([Field(), "Foo"]), ...]
-   *   <index-get-children(|Field(), "ba")> "Foo"{[Entity(), "Baz"]} => [Def([Field(), "Bar"]), ...]
-   *   <index-get-children(|Field(), "ze")> [Entity(), "Baz"] => [...]
-   *
-   * @param namespace Only child Def elements in this namespace are returned.
-   * @param prefix    Only child Def elements where the name starts with this prefix are returned.
-   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Def(uri))
-   */
-  index-get-children(|namespace, prefix) = 
-    index-get-children(\uri -> Def(uri)\, index-compare-name-substring(|prefix, namespace)|namespace, prefix)
-  
-  /**
-   * Gets all children elements of an URI in a certain namespace where the name starts with a prefix
-   * using custom templates.
-   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
-   *
-   * @param construct-template  uri -> template. Should create a template to match index entries with, given an URI.
-   * @param name-compare        element -> ?element. Strategy for filtering children elements.
-   * @param namespace           Only child elements in this namespace are returned.
-   * @param prefix              Only child elements where the name starts with this prefix are returned.
-   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Def(uri))
-   */
-  index-get-children(construct-template, name-compare|namespace, prefix):
-    <with([parent-ns | path] := <index-uri> | "Def, key or URI expected")> -> children'
-    with
-      template  := <construct-template> [namespace | path];
-      children  := <prim("LANG_index_get_children", template)>;
-      children' := <filter(name-compare)> children;
-      <store-wildcard-read(|namespace, path, prefix)> children'
-
-  /**
    * Gets a set of all files that have a reference to the given index entries.
    *
    * Example:
@@ -455,108 +375,7 @@
    */
   index-get-dependent-files = 
     index-get-referenced-files(index-file-dependent-construct)
-     
-rules // Index lookup rules (that take into account adjust-index-lookup)
- 
-  /**
-   * Given an annotated AST node, resolves it, returning its definition.
-   * Uses precise matching for names.
-   *
-   * @type "name"{uri} -> ?Def(uri')
-   */
-  index-lookup:
-    x{[namespace|path]} -> <index-lookup-internal(index-compare-name-equal(|name)|ns, path, name)> x
-    where
-      ns := <index-namespace-unwrap> namespace;
-      name := <strip-annos> x
- 
-  /**
-   * Given an annotated AST node, resolves it, returning all its definitions.
-   * Uses precise matching for names.
-   * 
-   * @type "name"{uri} -> List(Def(uri'))
-   */
-  index-lookup-all:
-    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-name-equal(|name)|ns, path, name)> x
-    where
-      ns := <index-namespace-unwrap> namespace;
-      name := <strip-annos> x
- 
-  /**
-   * Given an annotated AST node and a prefix, looks for all definitions with given prefix starting at the scope of 
-   * the given node.
-   * Uses substring matching for names.
-   *
-   * @param prefix    Only definitions with a name that starts with this string are returned.
-   * @type "name"{uri} -> List(Def(uri'))
-   */
-  index-lookup-all(|prefix):
-    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-name-substring(|prefix)|ns, path, prefix)> x
-    where
-      ns := <index-namespace-unwrap> namespace
-      
-  /**
-   * Given an annotated AST node, resolves it in only the parent scope of the given node, returning all its definitions.
-   * Uses precise matching for names.
-   *
-   * @type "name"{uri} -> List(Def(uri'))
-   */
-  index-lookup-all-scoped:
-    x{[namespace|path]} -> <index-lookup-all-scoped-internal(index-compare-name-equal(|name)|ns, parent-path, name)> x
-    where
-      ns := <index-namespace-unwrap> namespace;
-      name := <strip-annos> x;
-      (<?[_|<id>]> path <+ !path) => parent-path
-      
-  /**
-   * Given an annotated AST node, resolves it in only the parent scope of the given node, returning all its definitions.
-   * Uses precise matching for names. Imports are not considered.
-   *
-   * @type "name"{uri} -> List(Def(uri'))
-   */
-  index-lookup-all-scoped-noimports:
-    x{[namespace|path]} -> <index-lookup-all-scoped-internal(fail, id, index-compare-name-equal(|name)|ns, parent-path, name)> x
-    where
-      ns := <index-namespace-unwrap> namespace;
-      name := <strip-annos> x;
-      (<?[_|<id>]> path <+ !path) => parent-path
-  
-  /**
-   * Given an annotated AST node and a prefix, looks for all definitions with given prefix in only the parent scope of 
-   * the given node.
-   * Uses substring matching for names.
-   *
-   * @param prefix    Only definitions with a name that starts with this string are returned.
-   * @type "name"{uri} -> List(Def(uri'))
-   */
-  index-lookup-all-scoped(|prefix):
-    x{[namespace|path]} -> <index-lookup-all-scoped-internal(index-compare-name-substring(|prefix)|ns, parent-path, prefix)> x
-    where
-      ns := <index-namespace-unwrap> namespace;
-      (<?[_|<id>]> path <+ !path) => parent-path
-
-  /**
-   * Given an annotated AST node and a namespace, returns all definitions inside given node with given namespace.
-   * Does not match names, all names are allowed.
-   *
-   * @param namespace Only definitions with this namespace are returned.
-   * @type "name"{uri} -> List(Def(uri'))
-   */
-  index-lookup-children(|namespace) = 
-    index-lookup-children(|namespace, "")
-      
-  /**
-   * Given an annotated AST node, a namespace and prefix, returns all definitions inside given node with given 
-   * namespace and prefix.
-   * Uses substring matching for names.
-   *
-   * @param namespace Only definitions with this namespace are returned.
-   * @param prefix    Only definitions with a name that starts with this string are returned.
-   * @type "name"{uri} -> List(Def(uri'))
-   */    
-  index-lookup-children(|namespace, prefix):
-    x{[_|path]} -> <index-lookup-all-scoped-internal(index-compare-name-substring(|prefix, namespace)|namespace, path, prefix)> x
-      
+           
 rules // Index utilities
   
   /**
@@ -579,13 +398,7 @@
    * @type "name"{uri@[namespace|path]} -> path'
    */
   index-uri-path:
-    x{[namespace|path]} -> path'
-    where
-      if !namespace => Unresolved(namespace) then
-        Def(path') := <index-lookup>
-      else
-        path' := path
-      end
+    x{[namespace|path]} -> path
       
   /**
    * Gets the name part of the URI for given key (term{uri} element).
@@ -599,6 +412,45 @@
     x{[_|[name|_]]} -> name
     
   /**
+   * Tries to get the name part of the URI for given term or fail if given term does not have an URI or name.
+   *
+   * Example:
+   *   <index-uri-name> Def([Entity(), "Bar", "Baz"]) => "Bar"
+   *   <index-uri-name> Type("Foo") => fail
+   *   <index-uri-name> Read([Entity()]) => fail
+   *
+   * @type x -> name
+   */   
+  index-uri-name:
+    x -> <index-uri-name> <index-uri> x
+    where
+      not(<has-annos> x)
+  
+  /**
+   * Query if given term is unresolved.
+   *
+   * @type x -> ?x
+   */    
+  index-uri-is-unresolved = 
+    ?_{[Unresolved(_)|_]}
+    
+  /**
+   * Query if given term is unresolved.
+   *
+   * @type x -> ?x
+   */        
+  index-uri-is-unresolved = 
+    ?_{Unresolved([_|_])}
+    
+  /**
+   * Query if given term is unresolved.
+   *
+   * @type x -> ?x
+   */        
+  index-uri-is-unresolved = 
+    ?_{Unresolved([])}
+    
+  /**
    * Determines if a given AST node is a definition site, according to the syntax.
    *
    * FIXME: Also succeeds on use sites.
@@ -606,7 +458,7 @@
    * @type def -> ?def
    */
   index-is-definition =
-    where(nam-get-definition-key)
+    where(nam-get-definition-keys; Hd)
     
   /**
    * Checks if given keys (term{uri} elements) are equal. Discards unresolved URI's.

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/nbl-library.str
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/nbl-library.str	Thu Jul 19 10:31:15 2012	(r25219)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/stratego/lib/nbl-library.str	Fri Jul 20 21:17:40 2012	(r25220)
@@ -6,56 +6,7 @@
   lib/index-library
   lib/analysis-library
   lib/analysis-library-internal
-  
-signature constructors
-  
-  Type        : DefDataKind
-  Import      : DefDataKind
-  Transitive  : ImportAnno
-  CurrentFile : ImportAnno
-  
-rules // Import adjust rule
-     
-  import-transitive =
-    collect-one(?Transitive())
-  import-standard =
-    not(import-transitive)
-    
-  import-values(|namespace, path) =
-    <index-get-all-values> DefData([namespace| path], Import(), ())
-    
-  import-currentfile-values(|namespace) =
-    <index-get-all-values> DefData([namespace|[<index-file-to-string> <index-get-current-file>]], Import(), ())  
-    
-  adjust-index-import(|namespace, path):
-    _ -> <concat> [[[namespace | path]], currentFileImportDefs, importDefs]
-    with
-      uri := [namespace | path]
-    where
-      allImports := <import-values(|namespace, path)> ;
-      importDefs := <mapconcat(import-defs(|namespace, [uri]))> allImports
-    where
-      currentfileImports := <import-currentfile-values(|namespace)> ;
-      currentFileImportDefs := <mapconcat(import-defs(|namespace, [uri]))> currentfileImports
-    
-  import-defs(|namespace, seen):
-    (key, <import-standard>) -> [uri]
-    with
-      uri := [namespace | <index-uri-path> key]
-      
-  import-defs(|namespace, seen):
-    (key, <import-transitive>) -> <conc> ([uri], transitiveUris)
-    with
-      path := <index-uri-path> key ;
-      uri := [namespace | path] ;
-      
-      if not(<elem> (uri, seen)) then
-        allImports := <import-values(|namespace, path)> ;
-        transitiveUris := <mapconcat(import-defs(|namespace, [uri|seen]))> allImports
-      else
-        transitiveUris := []
-      end
-
+
 rules // Adjust difference comparison
     
   // Add Type to the constructors to check for differences.
@@ -66,80 +17,19 @@
     (DefData(u1, Type(), v1), DefData(u2, Type(), v2)) -> <id>
     where
        <index-uri-eq> (u1, u2);
-       <index-key-eq> (v1, v2)
-
+       <index-key-eq> (v1, v2)
+
 rules // Error checks
   
   constraint-error:
-    x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
-    
+    x@<index-uri-is-unresolved> -> (x, $[Unable to resolve.])
+  
+  /*  
   constraint-error:
     definition -> (key, $[Duplicate definition])
     where
       <nam-unique> definition;
       key := <nam-get-definition-key> definition;
       defs := <index-lookup-all-scoped-noimports> key;
-      <gt> (<length> defs, 1)
-      
-rules // Type dependant lookup
-	
-	/**
-   * Given an annotated AST node and a type, resolves it and checks if type equals given type, returning its definition.
-   * Uses precise matching for names.
-   *
-   * @param type	Only definitions with this type are returned.
-   * @type "name"{uri} -> ?Def(uri')
-   */
-  index-lookup-typed(|type):
-    x{[namespace|path]} -> <index-lookup-internal(index-compare-nametype-equal(|name, type)|ns, path, name)> x
-    where
-      ns := <index-namespace-unwrap> namespace;
-      name := <strip-annos> x
-
-  /**
-   * Given an annotated AST node, a prefix and a type, looks for all definitions with given prefix and type starting at the scope of 
-   * the given node.
-   * Uses substring matching for names.
-   *
-   * @param prefix    Only definitions with a name that starts with this string are returned.
-   * @param type			Only definitions with this type are returned.
-   * @type "name"{uri} -> List(Def(uri'))
-   */
-  index-lookup-all-typed(|prefix, type):
-    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-nametype-substring(|prefix, type)|ns, path, prefix)> x
-    where
-      ns := <index-namespace-unwrap> namespace
-
-  /**
-   * Compares given element (with an URI) to given name using string equality comparison and given type using equality.
-   * 
-   * @internal 
-   */     
-  index-compare-nametype-equal(|name, type):
-    element -> <id>
-    where
-      uri := <index-uri> element;
-      <SRTS-EXT-eq-ignore-annos(|name)> <index-uri-name> uri;
-      <nbl-type-eq(|type)> <nbl-get-type> uri
-      
-  /**
-   * Compares given element (with an URI) to given prefix using substring comparison and given type using equality.
-   * 
-   * @internal 
-   */     
-  index-compare-nametype-substring(|prefix, type):
-    element -> <id>
-    where
-      uri := <index-uri> element;
-      <is-substring(!prefix)> <index-uri-name> uri;
-      <nbl-type-eq(|type)> <nbl-get-type> uri
-  
-  /** @internal */
-  nbl-get-type:
-  	uri -> <index-get-data(|Type())> Def(uri)
-  
-  // TODO: Allow user defined type equality.
-  /** @internal */	
-  nbl-type-eq(|type) = 
-  	<eq> (<id>, type)
-  	
\ No newline at end of file
+      <gt> (<length> defs, 1)
+  */
\ No newline at end of file


From E.Visser at tudelft.nl  Fri Jul 20 23:42:40 2012
From: E.Visser at tudelft.nl (Eelco Visser)
Date: Fri, 20 Jul 2012 21:42:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25221 -
	spoofax-contrib/spoofax-lambda
Message-ID: <20120720214240.7DE992B8014@mx2.tudelft.nl>

Author: visser
Date: Fri Jul 20 21:42:40 2012
New Revision: 25221
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25221&sc=1

Log:


Added:
   spoofax-contrib/spoofax-lambda/

From E.Visser at tudelft.nl  Fri Jul 20 23:43:01 2012
From: E.Visser at tudelft.nl (Eelco Visser)
Date: Fri, 20 Jul 2012 21:43:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25222 -
	spoofax-contrib/spoofax-lambda/trunk
Message-ID: <20120720214301.7C8DA2B8014@mx2.tudelft.nl>

Author: visser
Date: Fri Jul 20 21:43:01 2012
New Revision: 25222
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25222&sc=1

Log:


Added:
   spoofax-contrib/spoofax-lambda/trunk/

From E.Visser at tudelft.nl  Sat Jul 21 15:38:10 2012
From: E.Visser at tudelft.nl (Eelco Visser)
Date: Sat, 21 Jul 2012 13:38:10 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25223 - in
	spoofax-contrib/spoofax-lambda/trunk: . .externalToolBuilders
	.settings META-INF editor editor/java editor/java/spoofaxlambda
	editor/java/spoofaxlambda/strategi...
Message-ID: <20120721133810.7AF21108C032@mx3.tudelft.nl>

Author: visser
Date: Sat Jul 21 13:38:08 2012
New Revision: 25223
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25223&sc=1

Log:
new version of lambda language with NBL

Added:
   spoofax-contrib/spoofax-lambda/trunk/.classpath
   spoofax-contrib/spoofax-lambda/trunk/.externalToolBuilders/
   spoofax-contrib/spoofax-lambda/trunk/.externalToolBuilders/Spoofax-lambda build.main.xml.launch
   spoofax-contrib/spoofax-lambda/trunk/.project
   spoofax-contrib/spoofax-lambda/trunk/.settings/
   spoofax-contrib/spoofax-lambda/trunk/.settings/org.eclipse.jdt.core.prefs
   spoofax-contrib/spoofax-lambda/trunk/META-INF/
   spoofax-contrib/spoofax-lambda/trunk/META-INF/MANIFEST.MF
   spoofax-contrib/spoofax-lambda/trunk/build.generated.xml
   spoofax-contrib/spoofax-lambda/trunk/build.main.xml
   spoofax-contrib/spoofax-lambda/trunk/build.properties
   spoofax-contrib/spoofax-lambda/trunk/editor/
   spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Builders.esv
   spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Builders.generated.esv
   spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Colorer.esv
   spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Colorer.generated.esv
   spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Completions.esv
   spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Completions.generated.esv
   spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Folding.esv
   spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Folding.generated.esv
   spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Outliner.esv
   spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Outliner.generated.esv
   spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-References.esv
   spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-References.generated.esv
   spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Syntax.esv
   spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Syntax.generated.esv
   spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda.main.esv
   spoofax-contrib/spoofax-lambda/trunk/editor/java/
   spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/
   spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/Activator.java
   spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/SpoofaxlambdaParseController.java
   spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/SpoofaxlambdaParseControllerGenerated.java
   spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/SpoofaxlambdaValidator.java
   spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/strategies/
   spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/strategies/InteropRegisterer.java
   spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/strategies/Main.java
   spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/strategies/java_strategy_0_0.java
   spoofax-contrib/spoofax-lambda/trunk/lib/
   spoofax-contrib/spoofax-lambda/trunk/lib/analysis-auto.generated.str
   spoofax-contrib/spoofax-lambda/trunk/lib/analysis-library-internal.generated.str
   spoofax-contrib/spoofax-lambda/trunk/lib/analysis-library.generated.str
   spoofax-contrib/spoofax-lambda/trunk/lib/compilation-library.generated.str
   spoofax-contrib/spoofax-lambda/trunk/lib/editor-common.generated.str
   spoofax-contrib/spoofax-lambda/trunk/lib/index-library.generated.str
   spoofax-contrib/spoofax-lambda/trunk/lib/nbl-library.generated.str
   spoofax-contrib/spoofax-lambda/trunk/lib/refactor-common.generated.str
   spoofax-contrib/spoofax-lambda/trunk/plugin.xml
   spoofax-contrib/spoofax-lambda/trunk/syntax/
   spoofax-contrib/spoofax-lambda/trunk/syntax/Common.sdf
   spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.generated.pp
   spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.pp
   spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.sdf
   spoofax-contrib/spoofax-lambda/trunk/test/
   spoofax-contrib/spoofax-lambda/trunk/test/example.-eval.lam
   spoofax-contrib/spoofax-lambda/trunk/test/example.java
   spoofax-contrib/spoofax-lambda/trunk/test/example.lam
   spoofax-contrib/spoofax-lambda/trunk/test/example.norm.lam
   spoofax-contrib/spoofax-lambda/trunk/test/example2.lam
   spoofax-contrib/spoofax-lambda/trunk/test/test-example.spt
   spoofax-contrib/spoofax-lambda/trunk/trans/
   spoofax-contrib/spoofax-lambda/trunk/trans/check.str
   spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str
   spoofax-contrib/spoofax-lambda/trunk/trans/generate.str
   spoofax-contrib/spoofax-lambda/trunk/trans/names.nd
   spoofax-contrib/spoofax-lambda/trunk/trans/names.str
   spoofax-contrib/spoofax-lambda/trunk/trans/refactor.str
   spoofax-contrib/spoofax-lambda/trunk/trans/spoofax_lambda.str

Added: spoofax-contrib/spoofax-lambda/trunk/.classpath
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/.classpath	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<classpath>
+	<classpathentry kind="src" excluding="trans/**" path="editor/java"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/4"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/.externalToolBuilders/Spoofax-lambda build.main.xml.launch
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/.externalToolBuilders/Spoofax-lambda build.main.xml.launch	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
+<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
+<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES"/>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+</listAttribute>
+<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value=""/>
+<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="all,"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${none}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/spoofax-lambda/build.main.xml}"/>
+<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/spoofax-lambda}"/>
+<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
+</launchConfiguration>

Added: spoofax-contrib/spoofax-lambda/trunk/.project
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/.project	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<projectDescription>
+      <name>spoofaxlambda</name>
+      <comment></comment>
+      <buildSpec>
+        <buildCommand>
+          <name>org.eclipse.jdt.core.javabuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+            <name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+            <triggers>full,incremental,</triggers>
+            <arguments>
+                <dictionary>
+                    <key>LaunchConfigHandle</key>
+                    <value>&lt;project&gt;/.externalToolBuilders/Spoofax-lambda build.main.xml.launch</value>
+                </dictionary>
+            </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.ManifestBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.SchemaBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+      </buildSpec>
+      <natures>
+        <nature>org.eclipse.pde.PluginNature</nature>
+        <nature>org.eclipse.jdt.core.javanature</nature>
+      </natures>
+    </projectDescription>
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/.settings/org.eclipse.jdt.core.prefs
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/.settings/org.eclipse.jdt.core.prefs	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,11 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.5
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.5
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.5

Added: spoofax-contrib/spoofax-lambda/trunk/META-INF/MANIFEST.MF
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/META-INF/MANIFEST.MF	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,22 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Spoofaxlambda Plug-in
+Bundle-SymbolicName: spoofaxlambda; singleton:=true
+Bundle-Version: 1.0.0
+Bundle-Activator: spoofaxlambda.Activator
+Import-Package: org.osgi.framework;version="1.3.0"
+Require-Bundle: org.eclipse.core.runtime,
+  org.eclipse.core.resources,
+  org.eclipse.imp.runtime,
+  org.eclipse.ui,
+  lpg.runtime,
+  org.eclipse.jface.text,
+  org.eclipse.ui.editors,
+  org.eclipse.ui.workbench.texteditor,
+  org.strategoxt.imp.runtime,
+  org.spoofax.jsglr,
+  org.strategoxt.strj
+Bundle-RequiredExecutionEnvironment: J2SE-1.5
+Bundle-ActivationPolicy: lazy
+Export-Package: spoofaxlambda
+Eclipse-RegisterBuddy: org.strategoxt.imp.runtime

Added: spoofax-contrib/spoofax-lambda/trunk/build.generated.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/build.generated.xml	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,640 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="build.generated">
+
+        <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
+    
+        <!-- Initialization -->
+        <available file="${src-gen}/spoofaxlambda/strategies/Main.java" property="java.jar.enabled"/>
+        <condition property="java.jar.import" value="-la spoofaxlambda.strategies" else="">
+            <isset property="java.jar.enabled"/>
+        </condition>
+        <condition property="java.jar.classpath" value=":${include}/${strmodule}-java.jar" else="">
+            <isset property="java.jar.enabled"/>
+        </condition>
+        <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
+        <dirname property="externaldefdir" file="${externaldef}"/>
+        <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
+            <isset property="externaldef"/>
+        </condition>
+        <condition property="externaljarimport1" value=":${externaljar}" else="">
+            <isset property="externaljar"/>
+        </condition>
+        <condition property="externaljarimport2" value=":${externaljarx}" else="">
+            <isset property="externaljarx"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <isset property="eclipse.running"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <available classname="org.eclipse.jdt.core.JDTCompilerAdapter"/>
+        </condition>
+        <condition property="externaljarflags" value="${externaljarflags}" else="">
+            <isset property="externaljarflags"/>
+        </condition>
+        <condition property="metasdfmodule.available" value="1">
+            <available file="${syntax}/${metasdfmodule}.sdf"/>
+        </condition>
+        
+        <fail unless="build" message="Please use build.main.xml to build this project or configure the required properties manually"/>
+        <mkdir dir="${build}"/>
+        <mkdir dir="${src-gen}"/>
+        <mkdir dir="${dist}"/>
+        <mkdir dir="${include}"/>
+        <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
+
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone,sdf2parenthesize"/>
+        
+        <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
+                <arg value="${include}/${esvmodule}.packed.esv"/>
+            </java>
+        </target>
+        
+        <target name="refresh" if="eclipse.running">
+            <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+            <eclipse.convertPath fileSystemPath="${syntax}" property="syntaxdir"/>
+            <eclipse.convertPath fileSystemPath="${lib}" property="libdir"/>
+            <eclipse.refreshLocal resource="${libdir}" depth="infinite"/>
+            <eclipse.refreshLocal resource="${syntaxdir}/${sdfmodule}.pp.generated" depth="infinite"/>
+            <eclipse.refreshLocal resource="${libdir}/editor-common.generated.str" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Builders.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Colorer.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Completions.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+            <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
+            <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+            <!-- Might cause the editor to be reloaded?
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            -->
+        </target>
+        
+        <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
+                <arg value="-p"/>
+                <arg value="${include}/${sdfmodule}.tbl"/>
+            </java>
+        </target>
+        
+        <target name="check-classpath">
+            <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
+            <antcall target="check-classpath.helper"/>  
+        </target>
+        
+        <target name="init" if="eclipse.running">
+            <!-- refresh one file/dir in the project to trigger an Ant rebuild with the next build command -->
+            <java classname="org.strategoxt.imp.metatooling.building.AntForceRefreshScheduler" failonerror="false">
+                <arg value="${include}"/>
+            </java>
+        </target>
+  
+        <target name="check-classpath.helper" unless="check-classpath.available">
+            <echo level="error" message="Could not load the Spoofax plugin loading classes."/>
+            <echo level="error" message="Make sure it is on the class path."/>
+            <echo level="error" message=""/>               
+            <echo level="error" message="In Eclipse, make sure the Ant builder is configured properly:"/>
+            <echo level="error" message="right-click on build.main.xml, go to Run as, Ant build..., JRE tab,"/>
+            <echo level="error" message="and ensure Run in the same JRE as the workspace is selected"/>
+            <echo level="error" message="alternatively, build the project using Build Project in the Project menu"/>
+            <fail/>
+        </target>
+    
+        <target name="sdf2table" depends="make-permissive">
+            <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                
+                <fileset file="${include}/${sdfmodule}-Permissive.def"/>
+                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+            </apply>
+        </target>
+        
+        <target name="meta-sdf2table" if="metasdfmodule.available">
+            <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+            <antcall target="sdf2table">
+                <param name="sdfmodule" value="${metasdfmodule}"/>
+                <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+            </antcall>
+            <antcall target="meta-sdf2table.helper"/>
+        </target>
+        
+        <target name="meta-sdf2table.helper" if="eclipse.running">
+           <eclipse.convertPath fileSystemPath="${include}" property="includeresource"/>
+           <eclipse.refreshLocal resource="${includeresource}/${metasdfmodule}.tbl" depth="infinite"/>
+        </target>
+        
+        <target name="make-permissive" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-Permissive.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <antcall target="make-permissive.helper"/>
+        </target>
+    
+        <target name="make-permissive.helper" unless="permissive-grammar.available">
+            <java classname="org.strategoxt.permissivegrammars.make_permissive" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-Permissive.def"/>
+                <arg line="--optimize on"/>
+            </java>
+        </target>
+
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
+            <mkdir dir="utils"/>
+            <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/aster.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.strategojar}" todir="utils" failonerror="false"/>
+        </target>
+    
+        <target name="pack-sdf" unless="externaldef">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.sdf"/>
+                </srcfileset>
+                <srcfileset dir="${lib}">
+                    <include name="**/*.def"/>
+                </srcfileset>
+                <targetfileset file="${include}/${sdfmodule}.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.def" property="pack-sdf.available"/>
+            <antcall target="pack-sdf.helper"/>
+        </target>
+    
+        <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <condition property="utils-include" value="-I ${utils}" else="">
+                <available file="${utils}"/>
+            </condition>
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-pack-sdf"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.sdf"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-I"/>
+                <arg value="${syntax}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg line="${utils-include}"/>
+                <arg line="${build.sdf.imports}"/>
+            </java>
+        </target>
+    
+        <target name="copy-sdf" if="externaldef">
+            <copy file="${externaldef}" tofile="${include}/${sdfmodule}.def" preservelastmodified="true"/>
+        </target>
+    
+        <target name="copy-jar" if="externaljar">
+            <copy file="${externaljar}" todir="${include}" preservelastmodified="true"/>
+        </target>
+    
+        <target name="rtg2sig" if="build.stratego.enabled" depends="sdf2rtg">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.rtg"/>
+                <targetfileset file="${include}/${sdfmodule}.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.str" property="rtg2sig.available"/>
+            <antcall target="rtg2sig.helper"/>
+        </target>
+    
+        <target name="rtg2sig.helper" unless="rtg2sig.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-rtg2sig"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.str"/>
+                <arg value="--module"/>
+                <arg value="${sdfmodule}"/>
+            </java>
+        </target>
+        
+        <target name="sdf2rtg" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}.rtg"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.rtg" property="sdf2rtg.available"/>
+            <antcall target="sdf2rtg.helper"/>
+        </target>
+    
+        <target name="sdf2rtg.helper" unless="sdf2rtg.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-sdf2rtg"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="--ignore-missing-cons"/>
+                <arg value="-Xnativepath"/>
+                <arg value="${build.strategoxt.sdf}"/>
+            </java>
+        </target>
+        
+        <target name="sdf2parenthesize" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-parenthesize.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper"/>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper.fallback"/>
+        </target>
+
+        <target name="sdf2parenthesize.helper" unless="sdf2parenthesize.available">
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-sdf2parenthesize"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-parenthesize.str"/>
+                <arg value="--omod"/>
+                <arg value="include/${sdfmodule}-parenthesize"/>
+                <arg value="--main-strategy"/>
+                <arg value="io-${sdfmodule}-parenthesize"/>
+                <arg value="--lang"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--rule-prefix"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--sig-module"/>
+                <arg value="include/${sdfmodule}"/>
+            </java>
+        </target>
+
+    	<target name="sdf2parenthesize.helper.fallback" unless="sdf2parenthesize.available">
+        	<echo file="${include}/${sdfmodule}-parenthesize.str" message="module include/${sdfmodule}-parenthesize rules parenthesize-${sdfmodule} = id"/>
+    	</target>
+        
+        <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${syntax}/${sdfmodule}.generated.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.generated.pp.af"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
+        </target>
+    
+        <target name="ppgen.helper" unless="ppgen.available">
+            <!-- Any failures here are ignored; they are only a problem when imported from Stratego -->
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-ppgen"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-t"/>
+                <arg value="-b"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+            </java>
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-pp-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+                <arg value="-o"/>
+                <arg value="${syntax}/${sdfmodule}.generated.pp"/>
+            </java>
+        </target>
+    
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
+        
+        <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${syntax}/${sdfmodule}.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+            </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
+        </target>
+    
+        <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-parse-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.pp"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.pp.af"/>
+            </java>
+        </target>
+    
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+    
+        <!-- Aster to Stratego -->
+        <target name="stratego.aster">
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <fileset dir="${basedir}" id="aster-input-set">
+              <include name="**/*.astr"/>
+            </fileset>
+            <pathconvert pathsep=" " setonempty="false" property="aster-input" refid="aster-input-set"/>
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.astr"/>
+                </srcfileset>
+                <targetfileset file="${trans}/${strmodule}.rtree"/>
+            </dependset>
+            <condition property="aster-output.uptodate">
+                <and>
+                    <isset property="aster-output.available"/>
+                    <available file="${trans}/${strmodule}.rtree"/>
+                </and>
+            </condition>
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.uptodate"/>
+            <antcall target="stratego.aster.helper"/>
+        </target>
+    
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg line="${aster-input}"/>
+            </java>
+        </target>
+        
+        <target name="java.jar" if="java.jar.enabled">
+            <jar basedir="${build}" excludes="trans/**" update="true" destfile="${include}/${strmodule}-java.jar"/>
+        </target>
+    
+        <!-- Stratego to Java interpreter -->
+        <target name="stratego.ctree" depends="rtg2sig">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/*.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${include}/${strmodule}.ctree"/>
+            </dependset>
+            <available file="${include}/${strmodule}.ctree" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputfile" value="${include}/${strmodule}.ctree"/>
+                <param name="build.stratego.extraargs" value="-F"/>
+            </antcall>
+        </target>
+    
+        <!-- Stratego to Java compiler -->
+        <target name="stratego.jar" depends="rtg2sig,utils-files">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/*.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="trans/**"/>
+                <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+        </target>
+            
+        <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans}/${strmodule}.str"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
+                
+        <!-- begin: targets used for adding debugging instrumentation to stratego -->
+        
+        <!-- 
+            if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
+            Only used by stratego.jvm.helper.debug 
+        -->
+        <condition property="transformer-output" value="" else="--output-rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
+        
+        <!-- 
+            if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
+            if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
+            Only used by stratego.jvm.helper.debug
+        -->
+        <condition property="strj.input.file.type" value="str" else="rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
+        
+        <!-- value determines which target will be executed.
+            If the file ".debugmode" can be found in the project root call stratego.jar.debug
+            else call stratego.jar
+        -->
+        <condition property="stratego.jar.target" value="call.stratego.jar.debug" else="call.stratego.jar">
+            <available file=".debugmode"/>
+        </condition>
+        
+        <!-- will save the stratego files with debug info in this folder -->
+        <property name="trans-debug" location="trans-debug"/>
+        
+        <!-- this helper target determines what target to call, based on debug.build.enabled -->
+        <target name="stratego.jar.helper">
+            <antcall target="${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar unless debug.build.enabled property is set --> 
+        <target name="call.stratego.jar" depends="stratego.jar">
+            <echo message="call.stratego.jar - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar.debug when debug.build.enabled property is set -->
+        <target name="call.stratego.jar.debug" depends="stratego.jar.debug">
+            <echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- copy stratego runtime jars to utils folder -->
+        <target name="utils-files-debug" depends="utils-files">
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
+        </target>
+        
+        <!-- Stratego to Java compiler with debugging capabilities -->
+        <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <!-- compile stratego to java -->
+            <antcall target="stratego.jvm.helper.debug">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <!-- compile java to class -->
+            <javac destdir="${build}" source="1.5" target="1.5" debug="on">
+                <!-- attribute in javac: srcdir="${src-gen}" -->
+                <src path="${src-gen}"/>
+                <!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"  -->
+                <classpath>
+                    <pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+                    <pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
+                    <pathelement location="utils/stratego-debug-runtime-java.jar"/>
+                </classpath>
+                <!-- attribute in javac: includes="trans/**"  -->
+                <include name="trans/**"/>
+            </javac>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <!-- create a jar from the class files -->
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <!-- instrument the stratego program and compile it to java -->
+        <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
+            <echo message="generate stratego with debug information"/>
+            <echo message="${basedir}"/>
+            <available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
+            <!-- add debug information -->
+              <java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
+                   <classpath>
+                    <pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.strategojar}"/>
+                   </classpath>
+                  <arg value="-i"/>
+                  <arg value="${trans}/${strmodule}.str"/>
+                  <arg value="--gen-dir"/>
+                  <arg value="${trans-debug}"/>
+                  <arg value="--base-dir"/> <!-- set the basedir to the project dir -->
+                  <arg value="${basedir}"/>
+                  <!-- "arg line='val'" val should contain space-separated arguments --> 
+                  <arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
+                  
+                  <!-- arguments should start with two '-'-characters -->
+                  <!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
+                  <!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
+                  <!-- <arg value="-output-rtree"/> --> 
+            </java>
+            <!-- now compile instrumented stratego to java -->
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <!-- put strategodebuglib.rtree on the include path -->
+                <arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
+                <arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
+        
+        
+        <!-- end: targets used for adding debugging instrumentation to stratego -->
+
+
+        <!-- Stratego to C-based native executable -->
+        <target name="stratego.c">
+            <antcall target="stratego.c.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/include"/>
+                <param name="build.stratego.extraargs" value=""/>
+                <param name="build.stratego.extension" value=""/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+        
+        <!-- Helper target for calling the stratego compiler -->
+        <target name="stratego.c.helper" depends="rtg2sig" if="build.stratego.enabled">
+            <apply executable="${build.strategoxt.stratego}/${build.stratego.compiler}" dest="${build.stratego.outputpath}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                
+                <fileset file="${trans}/${strmodule}.str"/>
+                <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>
+            </apply>
+        </target>
+        
+        <target name="clean" description="Selective clean up">
+            <delete dir="${build}"/>
+            <delete file="${include}/${sdfmodule}.def"/>
+            <delete file="${include}/${strmodule}.rtree"/>
+            <delete file="${include}/${strmodule}.ctree"/>
+            <delete file="${include}/${strmodule}.jar"/>
+            <delete dir="${src-gen}/trans"/>
+        </target>
+    </project>
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/build.main.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/build.main.xml	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="Spoofax-lambda" default="all">
+        
+        <!-- Key input modules -->
+        <property name="sdfmodule" value="Spoofax-lambda"/>
+        <property name="metasdfmodule" value="Stratego-Spoofax-lambda"/>
+        <property name="esvmodule" value="Spoofax-lambda"/>
+        <property name="strmodule" value="spoofax_lambda"/>
+    
+        <!-- Project directories -->
+        <property name="trans" location="trans"/>
+        <property name="src-gen" location="editor/java"/>
+        <property name="syntax" location="syntax"/>
+        <property name="include" location="include"/>
+        <property name="lib" location="lib"/>
+        <property name="build" location="bin"/>
+        <property name="dist" location="bin/dist"/>
+        
+        <!-- Imports -->
+        <property name="build.sdf.imports" value=""/>
+        <property name="build.stratego.args" value="
+                        --library
+                        -I &quot;${trans}&quot;
+                        -I &quot;${basedir}&quot;
+                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm"/>
+        
+        <!-- Optional: external .def and .jar locations
+        <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+        <property name="externaljar" value="../lib.jar"/>
+        <property name="externaljarflags" value="-la org.lib"/>
+        -->
+    
+        <!-- Environment configuration for command-line builds -->
+        <condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
+            <isset property="eclipse.spoofaximp.nativeprefix"/>
+        </condition>
+        <property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin"/>
+    
+        <import file="build.generated.xml"/>
+    
+        <!-- Main target -->
+        <target name="all" depends="spoofaximp.default.ctree"/>
+    </project>
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/build.properties	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,9 @@
+source.. = editor/java/
+output.. = bin/
+bin.includes = META-INF/,\
+               plugin.xml,\
+               include/,\
+               bin/,\
+               lib/,\
+               .
+bin.excludes = trans/

Added: spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Builders.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Builders.esv	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,39 @@
+module Spoofax-lambda-Builders
+
+imports Spoofax-lambda-Builders.generated
+
+builders
+                                                                                   
+  // This file can be used for custom analysis, builder and refactoring rules.     
+  //                                                                               
+  // See the imported file for a brief introduction and examples.                  
+
+builders
+                                                                                                                            
+  provider : include/spoofax_lambda.ctree                                                                                   
+  provider : include/spoofax_lambda-java.jar                                                                                
+                                                                                                                            
+  observer : editor-analyze                        (multifile)                                                              
+                                                                                                                            
+  builder  : "Show abstract syntax"                = debug-generate-aterm (openeditor) (realtime) (meta) (source)           
+  builder  : "Show deffed syntax"                  = debug-generate-deffed (openeditor) (realtime) (meta) (source)          
+  builder  : "Show analyzed syntax"                = debug-generate-analyzed (openeditor) (realtime) (meta) (source)        
+  builder  : "Show index entries for current file" = debug-index-show-current-file (openeditor) (realtime) (meta) (source)  
+  builder  : "Show index entries for all files"    = debug-index-show-all-files (openeditor) (realtime) (meta) (source)     
+  builder  : "Clear index for current file"        = debug-index-clear-current (meta) (source)                              
+  builder  : "Clear index"                         = debug-index-clear (meta) (source)                                      
+  builder  : "Reload index"                        = debug-index-reload (meta) (source)  
+  
+  builder : "Evaluate" = editor-evaluate-module (openeditor) (realtime) (source)                                  
+                                                                                                                            
+
+refactorings
+
+  pretty-print : pp-spoofax_lambda-string
+
+  refactoring ID : "Rename Entity" = rename-entity (source) (cursor)
+    shortcut : "org.eclipse.jdt.ui.edit.text.java.rename.element"
+    input
+      identifier : "new name" = ""
+
+  on save : editor-save
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Builders.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Builders.generated.esv	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,71 @@
+
+module Spoofax-lambda-Builders.generated
+
+builders
+                                                                                                                    
+  // Building and analysis is defined in Stratego program or programs:                                              
+  //                                                                                                                
+  //   provider : stratego-program.ctree                                                                            
+  //   provider : stratego-library.jar                                                                              
+  //                                                                                                                
+  // Analysis is carried out by a Stratego rule that can be selected as follows:                                    
+  //                                                                                                                
+  //   observer : analysis-rule                                                                                     
+  //                                                                                                                
+  // Any dynamic rules set in the analysis may be used by other semantic services,                                  
+  // such as reference resolving or the builders.                                                                   
+  //                                                                                                                
+  // The (multifile) annotation can be added to an observer to indcate that this                                    
+  // observer will receive a list of files if multiple files change, instead of running                             
+  // the observer on every file separately.                                                                         
+  //                                                                                                                
+  // Builders may carry out custom transformations on a file or selection.                                          
+  // (At run-time, they can be accessed using the toolbar button with the star icon.)                               
+  // Builders can be specified as follows:                                                                          
+  //                                                                                                                
+  //   builder : "Generate Java code" = generate-java (openeditor) (persistent) (realtime)                          
+  //                                                                                                                
+  // In this example, the caption "Generate Java code" is used in the build button dropdown menu,                   
+  // and the generate-java rule is used to carry out the tranformation.                                             
+  // Builder definitions can also specify any combination of the following annotations:                             
+  //                                                                                                                
+  //   (cursor)      The builder should always transform the tree node at the cursor.                               
+  //   (meta)        Indicates the builder should only be available to meta-programmers                             
+  //                 (i.e., not when the plugin is deployed to end-users).                                          
+  //   (openeditor)  Indicates an editor should be opened with the result.                                          
+  //   (persistent)  Indicates that the resulting file should be saved to disk.                                     
+  //   (realtime)    Indicates that the resulting editor should be updated in real-time                             
+  //                 as the source file is edited.                                                                  
+  //   (source)      Always apply this builder to the source AST, not to the AST                                    
+  //                 after it has been analyzed/desugared by the observer.                                          
+  //                                                                                                                
+  // Refactorings are used for transformations that modify the original source code,                                
+  // while preserving the layout and syntactic sugar.                                                               
+  // A custom pretty-print strategy (T -> String) is used to format newly inserted nodes,                           
+  // a parenthesize strategy (T -> T) surrounds subterms with "Parenthetical(T)" when brackets are required,        
+  // resugar rules are required for desugarings that are not local-to-local or desugarings that duplicate terms     
+  // as the 'l' in \l -> []\ => {l: ( l -> [] )}.                                                                   
+  // Finally, text-reconstruction can be overruled with a strategy (T-old, T-new) -> <try(custom-pp)> T-new,        
+  // the resulting text will be indented according to its location.                                                 
+  // This is sometimes needed in case the node text can not be reconstructed by replacing child texts               
+  // in the original formatting.                                                                                    
+  //                                                                                                                
+  // Refactorings can be specified as shown below, whereby Property* indicates on which constructs the              
+  // refactoring is specified (<sort>.<constructor>).                                                               
+  //                                                                                                                
+  // refactorings                                                                                                   
+  //                                                                                                                
+  //   pretty-print: prettyprint                                                                                    
+  //   parenthesize: parenthesize                                                                                   
+  //   resugar: resugar-node                                                                                        
+  //   override reconstruction: disallow-reconstruction                                                             
+  //                                                                                                                
+  //   refactoring Property*: "Extract Entity" =  extract-entity (source)                                           
+  //     shortcut: Shift+Alt+M                                                                                      
+  //     input                                                                                                      
+  //       identifier: "entity name" = ""                                                                           
+  //       identifier: "property name" = ""                                                                         
+  //                                                                                                                
+  // The 'on save' handler can be used  to generate code as files are saved:                                        
+  //                                                                                                                
+  //   on save : editor-save                                                                                        
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Colorer.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Colorer.esv	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,9 @@
+module Spoofax-lambda-Colorer
+
+imports Spoofax-lambda-Colorer.generated
+
+colorer
+                                                                      
+  // This file can be used for custom colorer rules.                  
+  //                                                                  
+  // See the imported file for a brief introduction and examples.     
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Colorer.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Colorer.generated.esv	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,46 @@
+module Spoofax-lambda-Colorer.generated
+
+colorer
+                                                                                             
+  // Sort-based highlighting with background color                                           
+  //   Id: yellow green                                                                      
+  //                                                                                         
+  // Sort- and constructor-based highlighting                                                
+  //   ClassBodyDec.MethodDec: yellow                                                        
+  //                                                                                         
+  // Constructor-based highlighting                                                          
+  //   _.MethodDec: 255 0 0                                                                  
+  //                                                                                         
+  // Example: background colors for ToMetaExpr/FromMetaExpr, if supported by the grammar     
+  //   environment _.ToMetaExpr:   _ 220 230 200                                             
+  //   environment _.FromMetaExpr: _ white                                                   
+
+colorer Default, token-based highlighting
+                                  
+  keyword    : 127 0 85 bold      
+  identifier : default            
+  string     : blue               
+  number     : darkgreen          
+  var        : 255 0 100 italic   
+  operator   : 0 0 128            
+  layout     : 63 127 95 italic   
+
+colorer System colors
+                            
+  darkred   = 128 0 0       
+  red       = 255 0 0       
+  darkgreen = 0 128 0       
+  green     = 0 255 0       
+  darkblue  = 0 0 128       
+  blue      = 0 0 255       
+  cyan      = 0 255 255     
+  magenta   = 255 0 255     
+  yellow    = 255 255 0     
+  white     = 255 255 255   
+  black     = 0 0 0         
+  gray      = 128 128 128   
+  grey      = gray          
+  orange    = 255 165 0     
+  pink      = 255 105 180   
+  brown     = 139 69 19     
+  default   = _             
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Completions.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Completions.esv	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,31 @@
+module Spoofax-lambda-Completions
+
+imports Spoofax-lambda-Completions.generated
+
+completions
+                                                                   
+  // This file is used to define content completion.               
+  //                                                               
+  // See the imported file for a brief introduction and examples.  
+                                                                   
+
+completions
+                                             
+  // Syntax completion:                      
+                                             
+  completion template Start :
+    "module " <m> (blank)  
+                                             
+  completion template Definition :
+    "entity " <e> " {" (cursor) "}" (blank)  
+                                             
+  completion template Property : "property : Type" =
+    <x> " : " <T> (blank)  
+                                             
+
+completions
+  // Semantic (identifier) completion:   
+                                         
+  completion proposer                  : editor-complete
+                                         
+  completion trigger                   : ":"
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Completions.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Completions.generated.esv	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,51 @@
+module Spoofax-lambda-Completions.generated
+
+completions
+                                                                                          
+  // Syntactic content completion can be defined as follows:                              
+  //                                                                                      
+  //   completion keyword  : "keyword"                                                    
+  //   completion template : "if " <e> " then\n\t" <s> "\nend"                            
+  //                                                                                      
+  // This defines keyword completion for "keyword" and                                    
+  // a template completion for the "if" keyword (note the use of \n, \t, and spaces).     
+  // In this template, the text selection expands to the "e" placeholder identifier       
+  // enclosed in <> brackets.                                                             
+  //                                                                                      
+  // Use the (blank) annotation if you want a template completion only to                 
+  // appear on blank lines:                                                               
+  //                                                                                      
+  //   completion template: "section " <title> "\n\t" (blank)                             
+  //                                                                                      
+  // You can specify a specific SDF sort for which a completion                           
+  // rule should trigger as follows:                                                      
+  //                                                                                      
+  //   completion template Section :                                                      
+  //     "section " <title> "\n\t" (blank)                                                
+  //                                                                                      
+  // Finally, you can override the prefix of the completion:                              
+  //                                                                                      
+  //   completion template Statement : "assignment" =                                     
+  //     <x> " = " <y> (blank)                                                            
+  //                                                                                      
+  // Semantic content completion can be defined as follows:                               
+  //                                                                                      
+  //   completion proposer : completion-function-call                                     
+  //   completion trigger  : "\."                                                         
+  //                                                                                      
+  // This sets completion-function-call as the completion strategy,                       
+  // and declares that [A-Za-z0-9_]+ may be used as a lexical pattern                     
+  // to parse identifiers (used to set the text selection with suggestions).              
+  // The completion trigger uses a regular expression to specify that                     
+  // completions should be proposed as the user types ".".                                
+  //                                                                                      
+  // Completions make use of the identifier lexical defined in YourLanguage-Syntax.esv    
+  // to select identifiers in completion suggestions.                                     
+  //                                                                                      
+  // Semantic completion uses the semantic provider defined in YourLanguage-Builders.esv  
+  // All semantic services may make use of the dynamic rules created by the observer.     
+
+completions
+                                     
+  // Derived completions may follow  
+                                     
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Folding.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Folding.esv	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,9 @@
+module Spoofax-lambda-Folding
+
+imports Spoofax-lambda-Folding.generated
+
+folding
+  
+  // This file can be used for custom folding rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Folding.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Folding.generated.esv	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,23 @@
+module Spoofax-lambda-Folding.generated
+
+folding Default folding definitions
+  
+  // Folding rules indicate which syntactic constructs can be folded,
+  // and take one of the following forms:
+  //
+  //   <sort>.<constructor>
+  //
+  //   <sort>._
+  //
+  //   _.<constructor>
+  //
+  // To indicate that an element should always be folded, add
+  // a (folded) annotation:
+  //
+  //   _.Imports (folded)
+  //
+  // To disable a folding rule defined elsewhere, add a (disabled) annotation:
+  //
+  //   Definition._ (disabled)
+  
+  Module.Module
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Outliner.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Outliner.esv	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,9 @@
+module Spoofax-lambda-Outliner
+
+imports Spoofax-lambda-Outliner.generated
+
+outliner
+  
+  // This file can be used for custom outliner rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Outliner.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Outliner.generated.esv	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,15 @@
+module Spoofax-lambda-Outliner.generated
+
+outliner Default outliner        
+  
+  
+  // Outliner rules indicate which syntactic constructs should be shown in the outline
+  // and quick outline views, and take one of the following forms:
+  //
+  //   <sort>.<constructor>
+  //
+  //   <sort>._
+  //
+  //   _.<constructor>
+  
+  Module.Module
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-References.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-References.esv	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,15 @@
+module Spoofax-lambda-References
+
+imports Spoofax-lambda-References.generated
+
+references
+                                                                                                   
+  // This file can be used to specify reference resolving and hover help, and content completion.  
+  //                                                                                               
+  // See the imported file for a brief introduction and examples.                                  
+                                                                                                   
+
+references
+                
+  reference _ : editor-resolve
+  hover _     : editor-hover
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-References.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-References.generated.esv	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,19 @@
+
+module Spoofax-lambda-References.generated
+
+references
+                                                                                          
+  // Reference resolving rules can specify the syntax constructors for which              
+  // a reference resolving function is available:                                         
+  //                                                                                      
+  //   reference FunctionCall : resolve-function-call                                     
+  //                                                                                      
+  // This defines that for each FunctionCall, resolve-function-call                       
+  // will retrieve the AST node that declares it.                                         
+  //                                                                                      
+  // Likewise, hover help can be specified as follows:                                    
+  //                                                                                      
+  //   hover FunctionCall : hover-help-function-call                                      
+  //                                                                                      
+  // Reference resolving uses the semantic provider defined in YourLanguage-Builders.esv  
+  // All semantic services may make use of the dynamic rules created by the observer.     
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Syntax.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Syntax.esv	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,9 @@
+module Spoofax-lambda-Syntax
+
+imports Spoofax-lambda-Syntax.generated
+
+language
+                                                                   
+  // This file can be used for custom syntax rules.                
+  //                                                               
+  // See the imported file for a brief introduction and examples.  
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Syntax.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Syntax.generated.esv	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,21 @@
+module Spoofax-lambda-Syntax.generated
+
+language Syntax properties (static defaults)
+                                           
+  // Comment constructs:                   
+  line comment                           : "//"
+  block comment                          : "/*" * "*/"
+                                           
+  // Fences (used for matching,            
+  // inserting, indenting brackets):       
+  fences                                 : [ ]
+                                           ( )
+                                           { }
+                                           
+  // Automatic indent hints                
+  // (indent after these tokens):          
+  indent after                           : "="
+                                           ":"
+                                           
+  // Regular expression for identifiers:   
+  identifier lexical                     : "[A-Za-z0-9_]+"
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda.main.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda.main.esv	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,16 @@
+module Spoofax-lambda.main
+
+imports Spoofax-lambda-Builders Spoofax-lambda-Colorer Spoofax-lambda-Completions Spoofax-lambda-Folding Spoofax-lambda-Outliner Spoofax-lambda-References Spoofax-lambda-Syntax
+
+language General properties
+                  
+  name          : Spoofax-lambda
+  id            : spoofaxlambda
+  extends       : Root
+                  
+  description   : "Spoofax/IMP-generated editor for the Spoofax-lambda language"
+  url           : http://strategoxt.org
+                  
+  extensions    : lam
+  table         : include/Spoofax-lambda.tbl
+  start symbols : Start
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/Activator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/Activator.java	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,44 @@
+package spoofaxlambda;
+
+import org.eclipse.imp.preferences.PreferencesService;
+import org.eclipse.imp.runtime.PluginBase;
+import org.osgi.framework.BundleContext;
+
+public class Activator extends PluginBase 
+{ 
+  public static final String kPluginID = "Spoofaxlambda";
+
+  public static final String kLanguageName = "Spoofaxlambda";
+
+  protected static Activator sPlugin;
+
+  public static Activator getInstance()
+  { 
+    if(sPlugin == null)
+      return new Activator();
+    return sPlugin;
+  }
+
+  public Activator () 
+  { 
+    super();
+    sPlugin = this;
+  }
+
+  @Override public void start(BundleContext context) throws Exception
+  { 
+    super.start(context);
+  }
+
+  @Override public String getID()
+  { 
+    return kPluginID;
+  }
+
+  @Override public String getLanguageID()
+  { 
+    return kLanguageName;
+  }
+
+  protected static PreferencesService preferencesService = null;
+}
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/SpoofaxlambdaParseController.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/SpoofaxlambdaParseController.java	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,4 @@
+package spoofaxlambda;
+
+public class SpoofaxlambdaParseController extends SpoofaxlambdaParseControllerGenerated 
+{ }
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/SpoofaxlambdaParseControllerGenerated.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/SpoofaxlambdaParseControllerGenerated.java	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,108 @@
+package spoofaxlambda;
+
+import java.io.InputStream;
+import java.io.IOException;
+import java.io.File;
+import java.io.FileInputStream;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class SpoofaxlambdaParseControllerGenerated extends DynamicParseController 
+{ 
+  public static final String LANGUAGE = new String("Spoofax-lambda");
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static volatile Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static synchronized Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  protected static synchronized void setDescriptor(Descriptor descriptor)
+  { 
+    SpoofaxlambdaParseControllerGenerated.descriptor = descriptor;
+  }
+
+  protected static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = SpoofaxlambdaParseControllerGenerated.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = SpoofaxlambdaParseControllerGenerated.class.getResourceAsStream(TABLE);
+      boolean filesystem = false;
+      if(descriptorStream == null && new File("./" + DESCRIPTOR).exists())
+      { 
+        descriptorStream = new FileInputStream("./" + DESCRIPTOR);
+        filesystem = true;
+      }
+      if(table == null && new File("./" + TABLE).exists())
+      { 
+        table = new FileInputStream("./" + TABLE);
+        filesystem = true;
+      }
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
+      descriptor = DescriptorFactory.load(descriptorStream, table, filesystem ? Path.fromPortableString("./") : null);
+      descriptor.setAttachmentProvider(SpoofaxlambdaParseControllerGenerated.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  private static String getPluginLocation()
+  { 
+    return SpoofaxlambdaParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(this, getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/SpoofaxlambdaValidator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/SpoofaxlambdaValidator.java	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,12 @@
+package spoofaxlambda;
+
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
+
+public class SpoofaxlambdaValidator extends MetaFileLanguageValidator 
+{ 
+  @Override public Descriptor getDescriptor()
+  { 
+    return SpoofaxlambdaParseController.getDescriptor();
+  }
+}
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/strategies/InteropRegisterer.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/strategies/InteropRegisterer.java	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,14 @@
+package spoofaxlambda.strategies;
+
+import org.strategoxt.lang.JavaInteropRegisterer;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * Helper class for {@link java_strategy_0_0}.
+ */
+public class InteropRegisterer extends JavaInteropRegisterer {
+
+  public InteropRegisterer() {
+    super(new Strategy[] { java_strategy_0_0.instance });
+  }
+}

Added: spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/strategies/Main.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/strategies/Main.java	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,11 @@
+package spoofaxlambda.strategies;
+
+import org.strategoxt.lang.Context;
+
+public class Main {
+  
+  public static void init(Context context) {
+    // Called when the editor is being initialized
+  }
+
+}

Added: spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/strategies/java_strategy_0_0.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/java/spoofaxlambda/strategies/java_strategy_0_0.java	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,32 @@
+package spoofaxlambda.strategies;
+
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * Example Java strategy implementation.
+ *
+ * This strategy can be used by editor services and can be called
+ * in Stratego modules by declaring it as an external strategy
+ * as follows:
+ *
+ * <code>
+ *  external java-strategy(|)
+ * </code>
+ *
+ * @see InteropRegisterer  This class registers java_strategy_0_0 for use.
+ */
+public class java_strategy_0_0 extends Strategy {
+  
+  public static java_strategy_0_0 instance = new java_strategy_0_0();
+
+  @Override
+  public IStrategoTerm invoke(Context context, IStrategoTerm current) {
+    context.getIOAgent().printError("Input for java-strategy: " + current);
+    ITermFactory factory = context.getFactory();
+    return factory.makeString("Regards from java-strategy");
+  }
+
+}

Added: spoofax-contrib/spoofax-lambda/trunk/lib/analysis-auto.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/lib/analysis-auto.generated.str	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,19 @@
+module lib/analysis-auto.generated
+
+signature
+  constructors
+    
+
+
+imports
+  lib/editor-common.generated
+  include/Spoofax-lambda
+
+
+rules
+
+  nam-get-def(|n) =
+    fail
+
+  nam-annotate-use(|n) =
+    fail
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/lib/analysis-library-internal.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/lib/analysis-library-internal.generated.str	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,836 @@
+module lib/analysis-library-internal.generated
+ 
+imports
+  libstratego-lib
+  libstratego-parallel
+  lib/editor-common.generated
+  lib/analysis-library.generated
+  lib/index-library.generated
+  
+signature constructors
+  
+  // Analysis
+  Results         : AST * List(Def) * List(Use) * List(DefData) * List(Def) * List(Def) * List(File) -> Results
+  ParallelResults : AST * AST * List(Error) * List(Warning) * List(Note) * List(File) -> ParallelResults
+  
+  // Namespaces
+  Diff            : Namespace
+  ASTDiff         : Namespace
+  AST             : Namespace
+  
+  // Data
+  AST             : List(UriPart) * AST -> AST
+  
+  // Annotations 
+  Scope: Term -> Anno
+  
+rules // Analysis traversals
+  
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   *
+   * @internal
+   * @type List((ast, (file, subfile))) -> Results(List(ast), List(def), List(use), List(data), List(addedElem), 
+   *                                       List(removedElem), List(fileToAnalyze@(file, subfile))))
+   */
+  analyze-top-internal(|phase, language, project-path, full-path):
+    astFilePairs -> Results(asts, defs, uses, data, added, removed, filesToAnalyze)
+    with
+      // Init
+      index-setup(|language, [project-path], full-path);
+      revision := <index-start-transaction>
+    with
+      // Store old elements
+      oldElems := <filter(index-diff-constructors)> <index-get-all-in-file> full-path;
+      <index-clear-file> full-path
+    with
+      {| Index-UnresolvedSet:
+        unresolvedSet := <new-iset>;
+        rules(Index-UnresolvedSet: _ -> unresolvedSet);
+        
+        (astFilePairs2, defsList) := <unzip> <map(analyze-top-defs)> astFilePairs;
+        defs := <concat> defsList;
+        (astFilePairs3, dataList) := <unzip> <map(analyze-top-data(|language, full-path))> astFilePairs2;
+        data := <concat> dataList;
+        (astFilePairs4, usesList) := <unzip> <map(analyze-top-uses(|language, full-path))> astFilePairs3;
+        uses := <concat> usesList;
+        (asts, _) := <unzip> astFilePairs4
+      |}
+    with
+      index-end-transaction
+    with
+      // Schedule re-analysis of dependent files (if current file is not testing language file)
+      // HACK: Depends on file extension, could be other languages with .spt extension?
+      if Editor() := phase; not(<is-test-file> full-path) then
+        newElems := <conc> (defs, <filter(index-diff-constructors)> data);
+        
+        // Find added and removed definitions
+        (added, removed) := <analyze-diff> (oldElems, newElems);
+        changed := <conc> (added, removed);
+        
+        // Store files that have changed in the index
+        index-transaction(
+          filesToAnalyze := <analyze-store-diff(|changed, revision)> astFilePairs4
+        )
+      else
+        (added, removed) := ([], []);
+        filesToAnalyze := []
+      end
+    with
+      <list-loop(analyze-top-store-ast(|full-path))> astFilePairs4
+      
+  /**
+   * Add URI annotations to each definition and unresolved URI annotations to each use site.
+   *
+   * @internal
+   */
+  analyze-top-defs:
+    (ast, file) -> ((ast2, file), defs)
+    with
+      <index-set-current-file> file;
+      (Some(ast2), edefs) := <analyze-defs> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
+      defs := <map(Snd)> edefs; 
+      <index-add-all(|file)> defs
+      
+  /**
+   * Gathers all data for each definition.
+   *
+   * @internal
+   */
+  analyze-top-data(|language, full-path):
+    (ast, file) -> ((ast2, file), data2)
+    with
+      <index-set-current-file> file;
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Gather all data for each definition.
+        ast2 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast; // Parent pointers needed.
+        data := <origin-track-forced(analyze-tree-data)> ast2;
+        
+				// Resolve all references in gathered data.
+				(data2, _) := <analyze-uses> data;
+				<index-add-all(|file)> data2;
+				
+        // Store reads into the index (if not testing language)
+        if not(is-test-input(|language, full-path)) then
+          <index-add-all(|file)> <iset-elements> readSet
+        end
+      |}
+      
+  /**
+   * Resolves all unresolved references for each use site.
+   *
+   * @internal
+   */
+  analyze-top-uses(|language, full-path):
+    (ast, file) -> ((ast3, file), uses)
+    with
+      <index-set-current-file> file;
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Resolve all unresolved references for each use site.
+        (ast2, uses) := <analyze-uses> ast;
+        <index-add-all(|file)> uses;
+        
+        ast3 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast2; // AST changed, reset parent pointers.
+        
+        // Store reads into the index (if not testing language)
+        if not(is-test-input(|language, full-path)) then
+          <index-add-all(|file)> <iset-elements> readSet
+        end
+      |}
+      
+  /**
+   * Stores AST from file to the index.
+   *
+   * @internal
+   */   
+  analyze-top-store-ast(|full-path):
+    (ast, (_, subfile)) -> <id>
+    where
+      <index-add(|full-path)> AST(subfile, ast)
+
+  /**
+   * Stores AST from file to the index.
+   *
+   * @internal
+   */   
+  analyze-top-store-ast(|full-path):
+    (ast, file) -> <id>
+    where
+      <is-string> file;
+      <index-add(|full-path)> AST([], ast)
+      
+  /**
+   * Identifies all definitions in the tree and annotates them with their URI.
+   * Also annotates uses with a preliminary "Unresolved(_)" URI.
+   *
+   * @internal
+   */
+  analyze-defs:
+  	ast -> (<analyze-defs(|[], set, Anon(), Anon())> ast, <iset-elements> set)
+  	where
+  		set := <new-iset>
+  		 
+  /** @internal */
+  analyze-defs(|paths, defs, head-scope, head-scope-ns):
+    ast{Scope([namespace, name | path])} -> ast'
+    where
+      paths' := <update-index-paths(|[(namespace, path)])> paths ;
+      ast'   := <rm-annotations; analyze-defs(|paths', defs, Anon(), Anon())> ast
+      
+  
+  /** @internal */
+  analyze-defs(|paths, defs, head-scope, head-scope-ns):
+    ast -> ast'
+    where
+    	<not(has-annos)> ast    	
+    with
+      if (namespace, path) := <nam-get-definition> ast then
+      	definition     := <nam-get-def(|paths, namespace)> path;
+      	Def(def-path)  := definition; 
+        head-scope-ns' := namespace;
+        head-scope'    := <Hd> path;
+        f#(children)   := <try(nam-annotate-scopes(|def-path))> ast;
+        <iset-add(|(<new>, definition))> defs
+      else
+        def-path       := INTERNAL_ERROR();
+        head-scope-ns' := head-scope-ns;
+        head-scope'    := head-scope;
+        f#(children)   := ast
+      end;
+      if scope-types := <nam-get-scope-types> ast then
+      	unique          := Anon(<new>);
+        updates         := <map(construct-index-path(|paths, head-scope', head-scope-ns', unique, ast))> scope-types;
+        paths'          := <update-index-paths(|updates)> paths;
+        head-scope-ns'' := Anon();
+        head-scope''    := Anon()
+      else
+      	paths'          := paths;
+      	head-scope-ns'' := head-scope-ns';
+        head-scope''    := head-scope'
+      end;
+      children' := <origin-track-forced(analyze-child-defs(|paths', defs, head-scope'', head-scope-ns''))> children;
+      ast'      := <try(nam-annotate-names(|paths', def-path))> f#(children') 
+       
+  /** @internal */
+  analyze-child-defs(|paths, defs, head-scope, head-scope-ns):
+  	[] -> []
+  	
+  /** @internal */
+  analyze-child-defs(|paths, defs, head-scope, head-scope-ns):
+  	[d|ds] -> [d'|ds']
+  	where
+  	  d'  := <analyze-defs(|paths, defs, head-scope, head-scope-ns)> d ;
+  	  if <nam-ordered-def> d then
+  	  	[namespace, name | path] := <nam-get-definition-key ; index-uri> d' ;
+        paths'                   := <update-index-paths(|[(namespace, path)])> paths ;
+  	  	ds'                      := <analyze-child-defs(|paths', defs, Anon(), Anon())> ds
+  	  else
+  	    ds' := <analyze-child-defs(|paths, defs, head-scope, head-scope-ns)> ds
+  	  end
+  
+  /** @internal */
+  construct-index-path(|paths, head-scope, head-scope-ns, unique, ast):
+    scope-type -> (scope-type, path'')
+    where
+      if !head-scope-ns => Anon() then
+        path  := <lookup-index-path> (scope-type, paths);
+        path' := <index-do-adjust-path(|scope-type, path, Anon(<new>))> ast
+      else
+        path  := <lookup-index-path> (head-scope-ns, paths);
+        path' := <index-do-adjust-path(|scope-type, path, head-scope)> ast
+      end;
+      // HACK: Disable generation of anonymous namespaces for unique definitions to let FieldAccess-like constructs work.
+      if /*<nam-unique> ast*/ fail then
+      	path'' := <index-do-adjust-path(|scope-type, path', unique)> ast
+      else
+      	path'' := path'
+      end
+      
+  /** @internal */
+  update-index-paths(|updates) = 
+    remove-all(?(<id>, _); !(<id>, updates) ; lookup') ; at-end(!updates)
+  
+  /** @internal */
+  lookup-index-path = 
+    lookup' <+ ![]
+ 
+  /** @internal */
+  index-do-adjust-path(|namespace, path, scope) =
+    adjust-index-path(origin-equal(|scope)|namespace, path)
+  <+
+    ![scope|path]
+ 
+  /**
+   * Analyze all uses, changing their preliminary "Unresolved(_)" URI to a definite URI of their definition.
+   *
+   * @internal
+   */
+  analyze-uses:
+    ast -> (ast'', uses')
+    with
+      analyzed     := <all(analyze-uses)> ast;
+      (ast', uses) := <unzip-analyzed> analyzed;
+      if !ast' => _{unresolved@[Unresolved(namespace), x | path]} then
+        if Def(def-uri) := <index-lookup> ast' then
+          ast'' := ast{def-uri};
+          uses' := [Use(def-uri) | uses]
+        else
+          ast'' := ast';
+          uses' := [BadUse([namespace, x]) | uses]
+        end
+      else
+        ast'' := ast';
+        uses' := uses
+      end
+ 
+  /**
+   * Collects all index data (e.g. types of definitions).
+   *
+   * @internal
+   */
+  analyze-tree-data:
+    tree -> data
+    where
+      set := <new-iset>;
+      <topdown(analyze-tree-data-part(|set))> tree;
+      data := <iset-elements> set
+      
+  /** @internal */
+  analyze-tree-data-part(|set):
+    tree -> tree
+    where
+      if def-term := <nam-get-definition-key> then
+        _{[namespace | path]} := def-term;
+        if result := <adjust-index-def-data(store-index-data-results(|set) |namespace, path)> tree then
+          <fatal-err(|"Unexpected result from adjust-index-def-data; should call <store-results>")> result
+        end
+      end
+  
+  /** @internal */
+  store-index-data-results(|set):
+    t -> <fail>
+    where
+      if is-list then
+        <iset-addlist(|t)> set
+      else
+        <iset-add(|t)> set
+      end
+      
+rules // Parallel analysis
+  
+  /** @internal */
+  index-parallel-analyze(analyze):
+    files -> allResults
+    with
+      map(index-parse-file); // Parsing cannot be done in parallel.
+      map(\(ast, file) -> (ast, file, <project-path>)\);
+      parallel-unordered(all(index-analyze(analyze)));
+      ?results;
+      with(<eq> (<length> results, <length> files) | "Input size not equal to output size");
+      filesToAnalyze := <make-set> <mapconcat(?ParallelResults(_, _, _, _, _, <id>))> results;
+      if not([] := filesToAnalyze) then
+        allResults := <concat> [results, <index-parallel-analyze(analyze)> filesToAnalyze]
+      else
+        allResults := results
+      end
+  
+  /** @internal */   
+  index-parse-file:
+    file -> (ast', file)
+    with
+	    if <file-exists> file then
+	    	if ast := <parse-file> file then
+	    		ast' := ast
+	      else
+	      	ast' := ()
+      	end
+	    else
+	      ast' := ()
+	    end
+   
+  /** @internal */   
+  index-set-markers:
+    ParallelResults(ast, ast', errors, warnings, notes, diffs) -> <id>
+    with
+      <set-markers(|ast)> (ast', errors, warnings, notes)
+      
+  /** @internal */
+  index-analyze(analyze):
+    (ast, path, project-path) -> ParallelResults(ast, ast', errors, warnings, notes, filesToAnalyze)
+    with
+      (ast', errors, warnings, notes, filesToAnalyze) := <analyze>;
+      if [] := filesToAnalyze then
+        complete-work-unit
+      end
+      
+/** @internal */
+rules // Splitter
+  
+  /** @internal */
+  index-split = fail
+  /** @internal */
+  index-is-toplevel = fail
+  /** @internal */
+  index-is-qualifier = fail
+  /** @internal */
+  index-qualifier-subelements = fail
+  /** @internal */
+  index-create-qualifier(|qualifier) = fail
+  
+  /** @internal */
+  index-toplevel-split:
+    ast -> asts'
+    with
+      (ast', _) := <analyze-defs> ast;
+      asts      := <index-toplevel-split-internal> ast';
+      asts'     := <strip-annos> asts
+      
+  /** @internal */
+  index-toplevel-split-internal:
+    node -> units
+    with
+      switch id
+        case ?():
+          units := [((), [])]
+        case index-is-qualifier:
+          elems := <mapconcat(index-toplevel-split-internal)> <index-qualifier-subelements> node;
+          units := <map(index-transform-qualifier(|node))> elems
+        case index-is-toplevel:
+          units := [(node, <index-uri> <nam-get-definition-key> node)]
+        otherwise:
+          units := [(node, [])]
+      end
+      
+  /** @internal */
+  index-transform-qualifier(|node):
+    (elem, subfileName) -> (qualifier, subfileName)
+    with
+      qualifier := <index-create-qualifier(|node)> elem
+
+/** @internal */
+rules // Diffs
+  
+  /** @internal */
+  analyze-diff:
+    (defs1, defs2) -> (added, removed)
+    with
+      added   := <diff(index-diff-compare)> (defs2, defs1);
+      removed := <diff(index-diff-compare)> (defs1, defs2)
+    
+  /** @internal */
+  analyze-store-diff(|changedEntries, revision): 
+    astFilePairs -> analyzeFiles'
+    with
+      changedFiles    := <mapconcat(index-get-files-of)> changedEntries;
+      dependentFiles  := <index-get-dependent-files> changedEntries;
+      
+      // Files to analyze
+      analyzeFiles := <make-set> <remove-all(fake-file)> dependentFiles;
+      analyzeFiles' := analyzeFiles;
+      // TODO: Is this extra check needed?
+      /*if <getfirst(index-get-file-revision; \r -> (r, revision)\; gt)> analyzeFiles then
+        // Add current file if the current file has read information from another file with a higher revision.
+        // This indicates that potentially outdated information was read.
+        analyzeFiles' := [file|analyzeFiles]
+      else
+        analyzeFiles' := analyzeFiles
+      end;*/
+      
+      // Files to compile
+      changedAstFiles := <filter(analyze-astdiff)> astFilePairs;
+      compileFiles := <make-set> <concat> [analyzeFiles', changedFiles, changedAstFiles];
+      // TODO: Optimize so that there are no duplicate files stored in the index, use iset?
+      <map(analyze-add-compilediff)> compileFiles
+      
+  /** 
+   * Checks if ast for given file has changed. Succeeds if old ASTDiff is not found or if ASTDiff is different.
+   *
+   * @internal
+   */
+  analyze-astdiff:
+    (ast, file) -> file
+    where
+      name := <conc> (<index-file-to-uri> file, ["ast-checksum"]);
+      newChecksum := <checksum> ast;
+      if oldChecksum := <index-get-global(|name)> then
+        <index-set-global(|name)> newChecksum;
+        not(<eq> (oldChecksum, newChecksum))
+      else
+        <index-set-global(|name)> newChecksum
+      end
+      
+  /** 
+   * Adds given file to the list of files to compile.
+   *
+   * @internal
+   */
+  analyze-add-compilediff = index-add-global(|"compile-diff")
+  
+  /** 
+   * Gets the list of files to compile, and then clear it.
+   *
+   * @internal
+   */
+  analyze-get-compilediffs = index-get-all-globals(|"compile-diff"); index-clear-global(|"compile-diff")
+  
+rules // Index lookup rules (that take into account adjust-index-lookup)
+  
+  /**
+   * Given a term x, namespace n, path s and prefix p, looks for a definition in the 
+   * scope of s and outer scopes in namespace n that start with prefix p, returning the first 
+   * found definition.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path or part of this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   *
+   * @type term -> ?Def(uri')
+   *
+   * @internal
+   */
+  index-lookup-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> definition
+    where
+      defs := <index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix)> x;
+      
+      if StopLookup() := defs then
+        fail
+      end;
+      
+      if not(definition := <Hd> defs) then
+        [_|path']  := path;
+        definition := <index-lookup-internal(adjust-import, adjust-lookup, name-compare|namespace, path', prefix)> x
+      end
+      
+  /** @internal */
+  index-lookup-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-internal(id, id, name-compare|namespace, path, prefix)
+
+  /**
+   * Given a term x, namespace n, path s and prefix p, looks for definitions in the scope of s 
+   * and outer scopes in namespace n that start with prefix p, returning all found definition.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path or part of this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   *
+   * @internal
+   */
+  index-lookup-all-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> defs'
+    where
+      defs := <index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix)> x;
+      
+      if [_|path'] := path then
+        defs2 := <index-lookup-all-internal(adjust-import, adjust-lookup, name-compare|namespace, path', prefix)> x;
+        defs' := <conc> (defs, defs2)
+      else
+        defs' := defs
+      end
+
+  /** @internal */
+  index-lookup-all-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-all-internal(id, id, name-compare|namespace, path, prefix)
+      
+  /**
+   * Given a term x, namespace n, path s and prefix p, looks for a definition in the 
+   * scope of s in namespace n that start with prefix p, returning the first found definition.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type term -> List(Def(uri))
+   *
+   * @internal
+   */
+  index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> defs
+    with
+      adjust-lookup;
+      adjusted := <index-do-adjust-lookup(|namespace, path, x, prefix)> x;
+      defs     := <index-get-adjust-lookup-results(adjust-import, name-compare|adjusted, prefix)> x
+    <+
+      adjust-import;
+      adjusted := <index-do-adjust-import(|namespace, path)> x;
+      defs     := <index-get-adjust-import-results(adjust-lookup, name-compare|adjusted, prefix)> x
+    <+
+      defs     := <index-get-children(\uri -> Def(uri)\, name-compare|namespace, prefix)> [namespace | path]
+      
+  /** @internal */
+  index-lookup-all-scoped-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-all-scoped-internal(id, id, name-compare|namespace, path, prefix)
+  
+  /** @internal */
+  index-do-adjust-import(|namespace, path) =
+    adjust-index-import(|namespace, path)
+    
+  /** @internal */
+  index-get-adjust-import-results(adjust-lookup, name-compare|adjusted, prefix):
+    x -> defs'
+    with
+      defs := 
+        <mapconcat(
+             index-adjust-import-recurse(adjust-lookup, name-compare|x, prefix)
+          <+ fatal-err(|"Unexpected result from adjust-index-import, should be a list of [namespace | path].")
+        )> adjusted;
+        if not(<elem> (StopLookup(), defs)) then
+        	defs' := <filter(name-compare)> defs
+        else
+        	defs' := StopLookup()
+      	end
+      	
+  /** @internal */
+  index-adjust-import-recurse(adjust-lookup, name-compare|x, prefix):
+  	[namespace|path] -> results'
+  	with
+  		results := <index-lookup-all-scoped-internal(fail, adjust-lookup, name-compare|namespace, path, prefix)> x;
+  		if not(<is-list> results) then
+  			results' := [results]
+  		else
+  			results' := results
+			end
+        
+  /** @internal */
+  index-do-adjust-lookup(|namespace, path, use, prefix) =
+    repeat-until(
+      prim("SSL_EXT_get_parent", <id>)
+    , adjust-index-lookup(origin-equal(|use)|namespace, path, prefix) 
+    )
+    
+  /** @internal */  
+  index-get-adjust-lookup-results(adjust-import, name-compare|adjusted, prefix):
+    x -> defs'
+    with
+      if StopLookup() := adjusted then
+        defs' := StopLookup()
+      else
+        defs := 
+          <mapconcat(
+               \d at Def(p) -> [d]\
+            <+ \[namespace'|path'] -> <index-lookup-all-scoped-internal(adjust-import, fail, name-compare|namespace', path', prefix)> x\
+            <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list of Def(uri) or [namespace | path], or StopLookup() to stop the lookup.")
+          )> adjusted;
+          defs' := <filter(name-compare)> defs
+      end
+      
+rules // Name comparisons
+
+  /**
+   * Compares given element (with an URI) to given name using string equality comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-equal(|name):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <SRTS-EXT-eq-ignore-annos(|name)> <index-uri-name> uri
+  
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-substring(|prefix):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <is-substring(!prefix)> <index-uri-name> uri
+      
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison and given namespace.
+   * 
+   * @internal 
+   */      
+  index-compare-name-substring(|prefix, namespace):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <eq> (namespace, <index-uri-namespace> uri);
+      <is-substring(!prefix)> <index-uri-name> uri
+      
+rules // URI and value projections
+       
+  /** @internal */
+  index-uri-impl:
+    Def(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    Use(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    Read(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    x{[namespace | path]} -> [<index-namespace-unwrap> namespace | path]
+ 
+  /**
+   * TODO: Should second part of ReadWildcard be included in the URI, between namespace and path?
+   * 
+   * @internal 
+   */
+  index-uri-impl:
+    ReadWildcard(uri, _) -> uri
+
+  /** @internal */
+  index-value-impl:
+    Def(value) -> value
+
+  /** @internal */
+  index-value-impl:
+    Use(value) -> value
+
+  /** @internal */
+  index-value-impl:
+    Read(value) -> value
+  
+  /** @internal */
+  index-value-impl:
+    ReadWildcard(_, value) -> value
+    
+rules // Internal helpers
+
+  /**
+   * Transforms a term C( (a1, [b1]), (a2, [b2, b3]) ) to a tuple (C(a1, a2), [b1, b2, b3]).
+   *
+   * @internal
+   */
+  unzip-analyzed:
+    appl -> (appl', unzipped-parts)
+    with
+      appl'          := <all(\(a, _) -> a\)> appl;
+      unzipped-parts := <concat> <get-appl-arguments(\(_, b) -> b\) <+ map(\(_, b) -> b\) <+ ![]> appl
+       
+  /**
+   * Tests if the current file is just a testing language input
+   *
+   * @internal
+   */
+  is-test-file = 
+    string-ends-with(|".spt")
+  /** @internal */
+  is-test-language = 
+    ?"Spoofax-Testing"
+  /** @internal */
+  is-test-input(|language, path) = 
+    <is-test-language> language <+ <is-test-file> path
+      
+  /** @internal */
+  fake-file = 
+    is-test-file <+ index-is-fake-file
+  
+  /** @internal */
+  ast-uri-to-ast-file(|full-path):
+    (ast, uri) -> (ast, (full-path, uri))
+   
+  /** @internal */    
+  index-readwildcard-substring(|prefix):
+    ReadWildcard(_, name) -> <id>
+    where <is-substring(!prefix)> name
+  
+  /** @internal */  
+  store-wildcard-read(|namespace, path, prefix):
+    children -> <id>
+    with
+      if set := <Index-ReadSet> then
+        if 1 := <length> children then
+          // HACK: This solves the problem of ReadWildcards making too many files re-analyze, but this should
+          // be handled in the index primitives instead.
+          <iset-add(|Read([namespace, prefix|path]))> set
+        else
+          <iset-add(|ReadWildcard([namespace|path], prefix))> set
+        end
+      end
+  
+  /** @internal */    
+  index-is-unresolved(|x, uri) = 
+    Index-UnresolvedSet; (iset-contains(|(x, uri)) <+ fail)
+  /** @internal */
+  index-add-unresolved(|x, uri) = 
+    (Index-UnresolvedSet; iset-add(|(x, uri))) <+ id
+  
+  /** @internal */
+  index-file-dependent-construct: 
+    uri -> <conc> (uses, reads)
+    with
+      uses := <index-get-uses-all> Def(uri);
+      reads := <index-get-reads-all> Def(uri)
+  
+  /** @internal */  
+  index-file-dependency-filter = 
+    ?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_)
+ 
+  /** @internal */
+  index-eq(|namespace, expected) =
+    where(
+      ?Def([_, name | _]);
+      <SRTS-EXT-eq-ignore-annos(|expected)> name
+    )
+  
+  /** @internal */
+  external SRTS-EXT-eq-ignore-annos(|t)
+  
+  /** @internal */
+  index-key-unwrap = 
+    \key{uri} -> key{<index-uri-unwrap> uri}\ <+ id
+    
+rules // Interface for generated code
+ 
+  /** @internal */
+  nam-get-def(|paths, namespace):
+    part* -> Def([namespace, part* | <lookup-index-path> (namespace, paths)])
+  
+  /** @internal */ 
+  nam-annotate-def(|path):
+    t -> result
+    with
+    	result := t{path}
+  
+  /** @internal */ 
+  nam-annotate-use(|paths, namespace):
+    t -> t{[Unresolved(namespace), t | <lookup-index-path> (namespace, paths)]}
+  
+  /** @internal */ 
+  nam-annotate-use(|paths, namespace, namespace2, name):
+  	t -> t{[Unresolved(namespace), t | <lookup-index-path> (namespace, paths)]}
+  	
+  /** @internal */ 
+  nam-annotate-scope(|path):
+    t -> t{Scope(path)}
+  
+  /** @internal */ 
+  nam-get-scope-types = fail
+  /** @internal */ 
+  nam-ordered-def = fail
+  /** @internal */
+  nam-get-definitions = fail
+  /** @internal */
+  nam-get-definition = nam-get-definitions ; Hd 
+  /** @internal */
+  nam-get-definition-keys = fail
+  /** @internal */
+  nam-get-definition-key = nam-get-definition-keys ; Hd
+  /** @internal */
+  nam-get-uses = fail
+  /** @internal */
+  nam-get-use = nam-get-uses ; Hd 
+  /** @internal */
+  nam-get-uses-keys = fail
+  /** @internal */
+  nam-get-use-key = nam-get-uses-keys ; Hd
+  /** @internal */
+  nam-annotate-names(|paths, def-path) = fail
+  /** @internal */
+  nam-annotate-scopes(|def-path) = fail
+  /** @internal */
+  nam-unique = fail

Added: spoofax-contrib/spoofax-lambda/trunk/lib/analysis-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/lib/analysis-library.generated.str	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,634 @@
+module lib/analysis-library.generated
+ 
+imports
+  libstratego-lib
+  libstratego-parallel
+  lib/editor-common.generated
+  lib/analysis-library-internal.generated
+  lib/index-library.generated
+ 
+signature constructors
+ 
+  // Analyze constructors
+  Editor      : AnalysisPhase
+  Compile     : AnalysisPhase
+ 
+  // Index elements
+  Def          : List(UriPart) -> Summary
+  Use          : List(UriPart) -> Summary
+  BadUse       : List(UriPart) -> Summary
+  Read         : List(UriPart) -> Summary
+  ReadWildcard : List(UriPart) * String -> Summary
+  Diff         : List(UriPart) * List(Summary) -> Summary
+  
+  // Adjust lookup actions
+  StopLookup   : LookupAction
+  
+rules // Index analysis extension points
+ 
+  /**
+   * Extension point. Override this rule to adjust how the index analysis looks up use sites to definitions.
+   *
+   * The overriden rule must return a list that contains any of the following items:
+   *   - Def(uri)         : A definition with exactly this URI has been found. This tells the lookup to resolve the
+   *                        use site to this definition.
+   *   - [namespace|path] : This tells the lookup to do a new lookup at the given namespace and path.
+   * 
+   * Returning multiple of these in the list is allowed, these will all show up during content completion and possibly
+   * other custom strategies. If multiple items are returned during reference resolving for example, the first item
+   * will be used.
+   *
+   * If the lookup has failed, for example your custom rule cannot find any definitions, you can also return 
+   * StopLookup() instead of a list. This tells the lookup algorithm to stop any further lookups for this use site.
+   * This can be useful to stop lookups for recursive expressions like property access, preventing a lot of useless
+   * lookups that will always fail anyway.
+   *
+   * Extension example:
+   *   adjust-index-lookup(check-target-name|namespace, path, prefix):
+   *     PropAccess(exp, name) -> properties
+   *     where
+   *       <check-target-name> name
+   *     with
+   *       if TYPE(type{_}) := <type-of> exp then
+   *         properties := <index-lookup-children(|Property(), prefix)> type
+   *       else
+   *         properties := StopLookup()
+   *       end
+   *
+   *   adjust-index-lookup(check-target-name|namespace, path, prefix):
+   *     Var(name) -> [[Var() | path], [Property() | path]]
+   *     where
+   *       <check-target-name> name
+   *
+   * @param check-target-name   A strategy that should be used to check if the name of the current element is what the
+   *                            lookup algorithm is looking for.
+   * @param namespace           The namespace of the element that should be looked up.
+   * @param path                The path the lookup algorithm is currently looking at for the element.
+   * @param prefix              The prefix name of the element the lookup algorithm is looking for. This is usually the
+   *                            full name of the element, but could be a partial prefix during content completion.
+   * @type def -> List(Def(uri) or [namespace|path]) or StopLookup()
+   */
+  adjust-index-lookup(check-target-name|namespace, path, prefix) = fail
+  
+  /**
+   * Extension point.
+   */
+  adjust-index-import(|namespace, path) = fail
+  
+  /** 
+   * Extension point. Override this rule to store data about definitions in the index. Should call <store-results> on 
+   * a (list of) data that must be stored in the index.
+   *
+   * Note that store-results always fails, this is a trick to make every adjust-index-def-data override always fail so 
+   * that every overriden rule is called once for each definition. This can lead to unexpected behaviour when trying to 
+   * store multiple items by calling store-results in a map or filter! Be sure to always let your adjust-index-def-data 
+   * rule fail if you are doing a <filter(store-results)> for example.
+   *
+   * Extension example:
+   *   adjust-index-def-data(store-results|namespace, path):
+   *     def -> <store-results> Type([namespace|path], type)
+   *     where
+   *       type := <type-of> def
+   *
+   * @param store-results Call this on the data you want to store in the index.
+   * @param namespace     The namespace of the definition that the rule is being called on.
+   * @param path          The path of the definition that the rule is being called on.
+   * @type def -> fail 
+   */
+  adjust-index-def-data(store-results|namespace, path) = fail
+  
+  /**
+   * Extension point. Override this rule to adjust how the index assigns a namespace and path (URI) to definitions and
+   * use sites. Should return a path that will be assigned to the definition or use site.
+   *
+   * Extension example:
+   *   adjust-index-path(check-target-definition|namespace, path):
+   *     Start(_, _) -> [<string-replace(|<project-path>, "")> <Fst> <index-get-current-file>]
+   *
+   *
+   * @param check-target-definition 
+   * @param namespace               The namespace that would be given to the current definition or use site.
+   * @param path                    The path that would be given to the current definition or use site.
+   * @type def -> uri@[namespace|path]
+   */
+  adjust-index-path(check-target-definition|namespace, path) = fail
+  
+  /**
+   * Extension point. Override this rule to define index-stored constructors to check for difference during analysis.
+   * The index-diff-compare extension point is used to do the actual comparison. Defaults to Def constructs.
+   *
+   * Extension example:
+   *   index-diff-constructors = ?Type(_, _)
+   *
+   * @type a -> ?a
+   *
+   * @see index-diff-compare
+   */
+  index-diff-constructors = 
+    ?Def(_)
+  
+  /**
+   * Extension point. Override this rule to define a custom comparison of two index elements. It should fail if they 
+   * are not equal and return the indentity if they are equal. Only constructors defined by index-diff-constructors are
+   * compared.
+   *
+   * Extension example:
+   *   index-diff-compare:
+   *     (Type(u1, v1), Type(u2, v2)) -> <id>
+   *     where
+   *       <index-uri-eq> (u1, u2);
+   *       <eq> (v1, v2)
+   *
+   * @type (a, b) -> ?(a, b)
+   *
+   * @see index-diff-constructors
+   */
+  index-diff-compare:
+    (Def(u1), Def(u2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2)
+ 
+rules // Analysis traversals
+  
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   * Defaults to Editor() phase.
+   *
+   * @param language  The name of the language that is being analysed.
+   *
+   * @type (ast, path, project-path) -> (ast', List(fileToAnalyze@(file, subfile)))
+   *
+   * @see analyze-top(|phase, language)
+   */
+  analyze-top(|language):
+    (ast, path, project-path) -> <analyze-top(|Editor(), language, path, project-path)> ast
+   
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   *
+   * @param phase         The type of analysis phase. There are 2 phases to choose from:
+   *                      - Editor():   File dependencies are analysed.
+   *                      - Compile():  File dependencies are not analysed.
+   * @param language      The name of the language that is being analysed.
+   * @param path          The path of the file to analyze relative to project-path.
+   * @param project-path  The path of the directory that contains all the source files.
+   * @type ast -> (ast', List(fileToAnalyze@(file, subfile)))
+   *
+   * @see analyze-top-internal(|phase, language, project-path, full-path)
+   */
+  analyze-top(|phase, language, path, project-path):
+    ast -> (ast', filesToAnalyze)
+    with
+      full-path := $[[project-path]/[path]];
+      if index-split then
+        index-setup(|language, [project-path], full-path); // Set up the index, splitting may require index calls.
+        asts := <index-toplevel-split> ast;
+        astsFilePairs := <map(ast-uri-to-ast-file(|full-path))> asts;
+        Results(ast', _, _, _, _, _, filesToAnalyze) := 
+          <analyze-top-internal(|phase, language, project-path, full-path)> astsFilePairs
+      else
+        Results(asts, _, _, _, _, _, filesToAnalyze) := 
+          <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, (full-path, []))];
+        ast' := <Hd> asts // Always returns a list of 1 AST if there is no splitter, so take the head.
+      end
+  
+rules // Parallel analysis
+  
+  /**
+   * Does a parallel analysis of given files using the specified analysis strategy. Automatically does parallel
+   * analysis of dependent files that have changed during the analysis.
+   *
+   * Example:
+   *   <index-parallel-analyze-files(analyze)> ["text/file1.ext", "text/file2.ext"]
+   *
+   * @param analyze (ast, path, project-path) -> (ast', errors, warnings, notes, filesToAnalyze). Strategy that 
+   *                analyzes a file using the index. Gets a (ast, path, project-path) tuple as input and must return 
+   *                a (ast', errors, warnings, notes, filesToAnalyze) tuple as output.
+   * @type List((file, subfile) or file) -> None()
+   */
+  index-parallel-analyze-files(analyze):
+    files -> None()
+    with
+      length; 
+      set-total-work-units
+    with
+      index-parallel-analyze(analyze);
+      filter(not(?ParallelResults((), (), _, _, _, _) <+ ?ParallelResults((), [()], _, _, _, _)); index-set-markers)
+      
+rules // Splitter
+  
+  /**
+   * Merges a top level definition back into an AST using splitter rules.
+   *
+   * @param toplevel  The top level definition to merge back into the given AST.
+   * @type ast -> ast'
+   */
+  index-merge-ast(|toplevel):
+    term -> merged
+    with
+      if <is-list> term then
+        [first-ast|_] := term;
+        merged        := <index-merge-ast(|toplevel)> first-ast
+      else
+        if <index-is-qualifier> term then
+          [elem|_]    := <index-qualifier-subelements> term;
+          merged      := <index-create-qualifier(|term)> <index-merge-ast(|toplevel)> elem
+        else
+          merged      := toplevel
+        end
+      end
+ 
+rules // Query primitives
+ 
+  /**
+   * Gets a DefData entry that matches the kind of data and given URI, or fail.
+   *
+   * Example:
+   *   <index-get-data(|Type())> Def([Entity(), "Bar"]) => [DefData([Entity(), "Bar"], Type(), TYPE("Bar")), ...]
+   *
+   * @param kind Only data of this kind is returned.
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(DefData(uri, kind, value))
+   */
+  index-get-data(|kind):
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-value> DefData(uri, kind, ())
+      
+  /**
+   * Gets all DefData entries that match the kind of data and given URI
+   *
+   * Example:
+   *   <index-get-data-all(|Type())> Def([Entity(), "Bar"]) => [TYPE("Bar"), ...]
+   *
+   * @param kind Only data of this kind is returned.
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(value)
+   */
+  index-get-data-all(|kind):
+     <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-all-values> DefData(uri, kind, ())
+
+  /**
+   * Gets a Use entry that matches given URI, or fail.
+   *
+   * Example:
+   *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"]), ...]
+   *
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Use(uri))
+   */
+  index-get-use:
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-all> Use(uri)
+     
+  /**
+   * Gets all Use entries that match the given URI.
+   *
+   * Example:
+   *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"]), ...]
+   *
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Use(uri))
+   */
+  index-get-uses-all:
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-all> Use(uri)
+     
+  /**
+   * Gets all Read and ReadWildcard entries that match the given URI.
+   *
+   * Example:
+   *   <index-get-reads-all> [Property(), "Bar", "p"] => [Read([Property(), "Bar", "p"]), ...]
+   *
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Read(uri) or ReadWildcard(uri, prefix))
+   */
+  index-get-reads-all:
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <conc> (reads, readwildcards')
+    where
+      reads := <index-get-all> Read(uri);
+      if !uri => [namespace, prefix | path-parent] then
+        readwildcards  := <index-get-all> ReadWildcard([namespace | path-parent], ());
+        readwildcards' := <filter(index-readwildcard-substring(|prefix))> readwildcards
+      else
+        readwildcards' := []
+      end
+ 
+  /**
+   * Get all index entries that match the given template.
+   *
+   * Example:
+   *   <index-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type template -> List(elem)
+   */
+  index-get-all:
+    template -> <indexlib-get-all> template
+      with
+       if set := <Index-ReadSet> then
+         uri := <index-uri>;
+         <iset-add(|Read(uri))> set
+       end
+       
+  /**
+   * Get all values of index entries that match the given template.
+   *
+   * Example:
+   *   <index-get-all-values> DefData([Property(), "s"], Type(), ()) => [TYPE("String"), ...]
+   *
+   * @type template -> List(value)
+   *
+   * @see index-value
+   */
+  index-get-all-values:
+    template -> <map(index-value)> <index-get-all> template
+       
+  /**
+   * Get the first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <index-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   *
+   * @type template -> ?elem
+   */
+  index-get:
+    template -> <?[<id>|_]> <index-get-all> template
+      
+  /**
+   * Get the value of first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <index-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
+   *
+   * @type template -> ?value
+   *
+   * @see index-value
+   */
+  index-get-value:
+    template -> <index-value> <?[<id>|_]> <index-get-all> template
+
+  /**
+   * Gets all Def children elements of an URI in a certain namespace.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * Example:
+   *   <index-get-children(|Field())> Def([Entity(), "Baz"]) => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
+   *   <index-get-children(|Field())> "Foo"{[Entity(), "Baz"]} => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
+   *   <index-get-children(|Field())> [Entity(), "Baz"] => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
+   *
+   * @param namespace Only child Def elements in this namespace are returned.
+   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
+   */
+  index-get-children(|namespace) = 
+    index-get-children(\uri -> Def(uri)\, id|namespace)
+  
+  /**
+   * Gets all children elements of an URI in a certain namespace using custom templates.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * @param construct-template  uri -> template. Should create a template to match index entries with, given an URI.
+   * @param name-compare        element -> ?element. Strategy for filtering children elements.
+   * @param namespace           Only child elements in this namespace are returned.
+   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
+   */
+  index-get-children(construct-template, name-compare|namespace):
+    <with([parent-ns | path] := <index-uri> | "Def, key or URI expected")> -> children
+    with
+      template  := <construct-template> [namespace | path];
+      children  := <prim("LANG_index_get_children", template)>;
+      <store-wildcard-read(|namespace, path, "")> children
+
+  /**
+   * Gets all Def children elements of an URI in a certain namespace where the name starts with a prefix.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * Example:
+   *   <index-get-children(|Field(), "fo")> Def([Entity(), "Baz"]) => [Def([Field(), "Foo"]), ...]
+   *   <index-get-children(|Field(), "ba")> "Foo"{[Entity(), "Baz"]} => [Def([Field(), "Bar"]), ...]
+   *   <index-get-children(|Field(), "ze")> [Entity(), "Baz"] => [...]
+   *
+   * @param namespace Only child Def elements in this namespace are returned.
+   * @param prefix    Only child Def elements where the name starts with this prefix are returned.
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Def(uri))
+   */
+  index-get-children(|namespace, prefix) = 
+    index-get-children(\uri -> Def(uri)\, index-compare-name-substring(|prefix, namespace)|namespace, prefix)
+  
+  /**
+   * Gets all children elements of an URI in a certain namespace where the name starts with a prefix
+   * using custom templates.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * @param construct-template  uri -> template. Should create a template to match index entries with, given an URI.
+   * @param name-compare        element -> ?element. Strategy for filtering children elements.
+   * @param namespace           Only child elements in this namespace are returned.
+   * @param prefix              Only child elements where the name starts with this prefix are returned.
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Def(uri))
+   */
+  index-get-children(construct-template, name-compare|namespace, prefix):
+    <with([parent-ns | path] := <index-uri> | "Def, key or URI expected")> -> children'
+    with
+      template  := <construct-template> [namespace | path];
+      children  := <prim("LANG_index_get_children", template)>;
+      children' := <filter(name-compare)> children;
+      <store-wildcard-read(|namespace, path, prefix)> children'
+
+  /**
+   * Gets a set of all files that have a reference to the given index entries.
+   *
+   * Example:
+   *   <index-get-referenced-files(\uri -> [Read(uri), Use(uri, [])]\)> [Def([Entity(), "Bar"]), ...] => 
+   *     [("fullpath/otherfile.ext", "subfile"), ...]
+   *
+   * @param construct-from-uri  uri -> List(elements). Construction strategy that creates a list of reference 
+   *                            constructs from all given entries, such as \uri -> [Read(uri), Use(uri, [])]\
+   * @type List(elem) -> List((file, subfile))
+   */
+  index-get-referenced-files(construct-from-uri):
+    entries -> files
+    where
+      uris        := <filter(index-uri)> entries;
+      referenced  := <concat> <filter(construct-from-uri)> uris;
+      files       := <iset-elements> <iset-addlist(|<mapconcat(index-get-files-of)> referenced)> <new-iset>
+ 
+  /**
+   * Convenience function for finding files with Read and Use dependencies to the given definitions.
+   *
+   * Example:
+   *   <index-get-dependent-files> [Def([Entity(), "Bar"]), ...] => [("fullpath/otherfile.ext", "subfile"), ...]
+   *
+   * @type List(elem) -> List((file, subfile))
+   *
+   * @see index-get-referenced-files(construct-from-uri)
+   * @see index-file-dependent-construct
+   */
+  index-get-dependent-files = 
+    index-get-referenced-files(index-file-dependent-construct)
+     
+rules // Index lookup rules (that take into account adjust-index-lookup)
+ 
+  /**
+   * Given an annotated AST node, resolves it, returning its definition.
+   * Uses precise matching for names.
+   *
+   * @type "name"{uri} -> ?Def(uri')
+   */
+  index-lookup:
+    x{[namespace|path]} -> <index-lookup-internal(index-compare-name-equal(|name)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
+ 
+  /**
+   * Given an annotated AST node, resolves it, returning all its definitions.
+   * Uses precise matching for names.
+   * 
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all:
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-name-equal(|name)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
+ 
+  /**
+   * Given an annotated AST node and a prefix, looks for all definitions with given prefix starting at the scope of 
+   * the given node.
+   * Uses substring matching for names.
+   *
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all(|prefix):
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-name-substring(|prefix)|ns, path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace
+      
+  /**
+   * Given an annotated AST node, resolves it in only the parent scope of the given node, returning all its definitions.
+   * Uses precise matching for names.
+   *
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-scoped:
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(index-compare-name-equal(|name)|ns, parent-path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x;
+      (<?[_|<id>]> path <+ !path) => parent-path
+      
+  /**
+   * Given an annotated AST node, resolves it in only the parent scope of the given node, returning all its definitions.
+   * Uses precise matching for names. Imports are not considered.
+   *
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-scoped-noimports:
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(fail, id, index-compare-name-equal(|name)|ns, parent-path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x;
+      (<?[_|<id>]> path <+ !path) => parent-path
+  
+  /**
+   * Given an annotated AST node and a prefix, looks for all definitions with given prefix in only the parent scope of 
+   * the given node.
+   * Uses substring matching for names.
+   *
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-scoped(|prefix):
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(index-compare-name-substring(|prefix)|ns, parent-path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      (<?[_|<id>]> path <+ !path) => parent-path
+
+  /**
+   * Given an annotated AST node and a namespace, returns all definitions inside given node with given namespace.
+   * Does not match names, all names are allowed.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-children(|namespace) = 
+    index-lookup-children(|namespace, "")
+      
+  /**
+   * Given an annotated AST node, a namespace and prefix, returns all definitions inside given node with given 
+   * namespace and prefix.
+   * Uses substring matching for names.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */    
+  index-lookup-children(|namespace, prefix):
+    x{[_|path]} -> <index-lookup-all-scoped-internal(index-compare-name-substring(|prefix, namespace)|namespace, path, prefix)> x
+      
+rules // Index utilities
+  
+  /**
+   * Gets the namespace part of the URI for given key (term{uri} element).
+   *
+   * Example:
+   *   <index-uri-namespace> "Bar"{[Entity(), "Bar", "Baz"]} => Entity()
+   *
+   * @type "name"{uri@[namespace|path]} -> namespace
+   */
+  index-uri-namespace:
+    x{[namespace|path]} -> <index-namespace-unwrap> namespace
+
+  /**
+   * Gets the path part of the URI for given key (term{uri} element). Resolves it if unresolved.
+   *
+   * Example:
+   *   <index-uri-path> "Bar"{[Entity(), "Bar", "Baz"]} => ["Bar", "Baz"]
+   *
+   * @type "name"{uri@[namespace|path]} -> path'
+   */
+  index-uri-path:
+    x{[namespace|path]} -> path'
+    where
+      if !namespace => Unresolved(namespace) then
+        Def(path') := <index-lookup>
+      else
+        path' := path
+      end
+      
+  /**
+   * Gets the name part of the URI for given key (term{uri} element).
+   *
+   * Example:
+   *   <index-uri-name> "Bar"{[Entity(), "Bar", "Baz"] => "Bar"
+   *
+   * @type "name"{uri@[namespace|[name|restPath]]} -> name
+   */ 
+  index-uri-name:
+    x{[_|[name|_]]} -> name
+    
+  /**
+   * Determines if a given AST node is a definition site, according to the syntax.
+   *
+   * FIXME: Also succeeds on use sites.
+   *
+   * @type def -> ?def
+   */
+  index-is-definition =
+    where(nam-get-definition-key)
+    
+  /**
+   * Checks if given keys (term{uri} elements) are equal. Discards unresolved URI's.
+   *
+   * Example:
+   *   <index-key-eq> ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]}) => 
+   *     ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]})
+   *   <index-key-eq> ("Foo"{[Entity(), "Foo"]}, "Bar"{[Entity(), "Bar"]}) => fail
+   *
+   * @type (k1, k2) -> ?(k1, k2)
+   */      
+  index-key-eq:
+    (k1, k2) -> <id>
+    where
+      <eq> (<index-key-unwrap> k1, <index-key-unwrap> k2)
+      
+  /**
+   * Given a list of file pairs, returns the list of real files.
+   *
+   * @type List((file, subfile)) -> List(file)
+   */    
+  index-filepairs-to-files:
+    filePairs -> files
+    with
+      files := <make-set> <map(Fst; string-replace(|<conc-strings> (<project-path>, "/"), ""))> filePairs

Added: spoofax-contrib/spoofax-lambda/trunk/lib/compilation-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/lib/compilation-library.generated.str	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,244 @@
+module lib/compilation-library.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  
+rules // Extension points
+  
+  /**
+   * Extension point. Override this rule to define a desugaring that is applied to AST before analyzing and compiling.
+   *
+   * Extension example:
+   *   index-desugar-ast:
+   *     ast -> <desugar> ast
+   *
+   * @type ast -> ast'
+   */
+  index-desugar-ast = fail
+    
+  /**
+   * Extension point. Override this rule to define a compilation or transformation to some other target language. The
+   * index manages which files have to be compiled and calls this rule for each AST that has changed since the last
+   * compilation.
+   *
+   * Extensions example:
+   *   index-compile-ast(|file, subfile):
+   *     ast -> None()
+   *     with
+   *       java := <to-java> ast;
+   *       full-path := <dirname> file;
+   *       filename := <guarantee-extension(|"java")> <base-filename> file;
+   *       writePath := $[[full-path]/java/];
+   *       writeFile :=  $[[writePath][filename]];
+   *       try(<mkdir> writePath);
+   *       <fclose> <fputs> (java, <fopen> (writeFile, "w"))
+   *
+   * @param file    The file that must be compiled.
+   * @param subfile The subfile that must be compiled ("" if there is no subfile).
+   * @type ast -> None()
+   */
+  index-compile-ast(|file, subfile) = fail
+
+  /**
+   * Extension point. 
+   */
+  index-is-partial-ast = fail
+
+  /**
+   * Extension point. 
+   */
+  index-combine-asts = fail
+  
+rules // Compilation
+  
+  /**
+   * Schedules compilation in the background of all files that have changed since the last compilation.
+   *
+   * @type x -> x
+   */
+  index-schedule-compilation:
+    _ -> None()
+    with
+      queue-strategy(|"index-compilation", "Compiling files")
+  
+  /** @internal */
+  index-compilation:
+    language -> None()
+    with
+      // Init
+      project-path := <project-path>;
+      index-setup(|language, [project-path], ".")
+    with
+      // Determine the files to compile by looking at changed files
+      diffs         := <analyze-get-compilediffs>;
+      files         := <map(index-compilation-restore-read-file)> diffs;
+      filteredFiles := <make-set> <remove-all(index-compilation-filter-file)> files;
+      (completeFiles, partialFiles) := <index-split-partial-files> filteredFiles;
+      
+      // Clean compile time reads
+      <filter(index-compilation-clean-reads)> completeFiles;
+      <filter(index-compilation-clean-reads)> partialFiles;
+      
+      // Set total work units to number of files to compile for visual indication
+      <set-total-work-units> <add> (<length> completeFiles, <length> partialFiles);
+      
+      // Compile the files
+      <filter(index-compilation-file; complete-work-unit)> completeFiles;
+      <filter(index-compilation-partial-file; complete-work-unit)> partialFiles
+      
+  /** @internal */    
+  index-split-partial-files:
+    files -> (completeFiles, <make-set> splitFiles)
+    with
+      (completeFiles, splitFiles) := <partition(not(index-file-is-partial), index-file-is-partial)> files
+
+  /** @internal */
+  index-compilation-file:
+    (path, subfile) -> None()
+    with
+    	asts := <index-get-all-values> AST(subfile, ());
+      <map(index-compilation-ast(|path, subfile))> asts
+      
+  /** @internal */    
+  index-compilation-partial-file:
+    (path, subfile) -> None()
+    with
+      asts := <index-get-all-values> AST(subfile, ());
+      if 1 := <length> asts then
+      	ast := <?[<id>|_]> asts
+    	else
+    		ast := <try(index-combine-asts)> asts
+  		end;
+      <index-compilation-ast(|path, subfile)> ast
+      
+  /** @internal */
+  index-compilation-ast(|path, subfile):
+    ast -> None()
+    with
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Compile file
+        <try(index-compile-ast(|path, subfile))> ast;
+        
+        // Store compile-time reads.
+        reads := <iset-elements> readSet;
+        <index-add-all(|<index-compilation-file-tuple> (path, subfile))> reads
+      |} 
+
+  /** @internal */
+  index-compilation-filter-file:
+    (file, subfile) -> (file, subfile)
+    where
+      <is-test-file <+ index-is-fake-file <+ not(file-exists)> file
+    
+rules // On save handling
+  
+  /**
+   * Commits the index to disk and schedules compilation. Use trigger-commit-and-compile instead of this strategy.
+   *
+   * @see trigger-commit-and-compile
+   *
+   * @internal
+   */
+  commit-and-compile:
+    language -> None()
+    with
+      index-commit
+    with
+      index-schedule-compilation
+
+  /**
+   * Triggers commit and compilation, requires target language as current term.
+   * Compilation can be delayed by using disable-commit-and-compile. Compilation will be triggered when 
+   * enable-commit-and-compile is called.
+   *
+   * @type language -> language
+   *
+   * @see enable-commit-and-compile
+   * @see disable-commit-and-compile
+   */
+  trigger-commit-and-compile:
+    language -> <id>
+    with
+      if not(index-is-global-enabled(|"delay-compile")) then
+        commit-and-compile
+      else
+        index-enable-global(|"trigger-compile")
+      end
+  
+  /**
+   * Delays commit and compilation until enable-commit-and-compile is called.
+   *
+   * @type x -> x
+   *
+   * @see enable-commit-and-compile
+   */
+  disable-commit-and-compile = 
+    index-enable-global(|"delay-compile")
+  
+  /**
+   * Cancels the commit and compilation delay, requires target language as current term. 
+   * If commit and compilation was triggered during the delay, it is triggered now.
+   *
+   * @type language -> language
+   *
+   * @see disable-commit-and-compile
+   */
+  enable-commit-and-compile:
+    language -> <id>
+    with
+      if index-is-global-enabled(|"trigger-compile") then
+        commit-and-compile
+      end;
+      index-disable-global(|"delay-compile")
+      
+/** @internal */
+rules // Compile time reads
+
+  /** @internal */
+  index-compilation-restore-read-file:
+    (file, subfile) -> (file', subfile)
+    where
+      if removedPath := <string-replace(|<index-compilation-read-path>, "")> file then
+        file' := removedPath
+      else
+        file' := file
+      end
+
+  /** @internal */
+  index-compilation-restore-read-file:
+    file -> file'
+    where
+      not(<is-tuple> file);
+      if removedPath := <string-replace(|<index-compilation-read-path>, "")> file then
+        file' := removedPath
+      else
+        file' := file
+      end
+      
+  /** @internal */
+  index-compilation-clean-reads = 
+    ?(file, subfile); index-compilation-file-tuple; index-clear-file
+      
+  /** @internal */
+  index-compilation-file-tuple:
+    (file, subfile) -> ($[[<index-compilation-read-path>]/[file]], subfile)
+    
+  /** @internal */
+  index-compilation-read-path =
+    !"/.internal/reads/compile"
+    
+/** @internal */
+rules // Utility
+
+  /** @internal */
+  index-file-is-partial:
+  	file -> file
+  	where 
+      Snd; index-uri; index-is-partial-ast

Added: spoofax-contrib/spoofax-lambda/trunk/lib/editor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/lib/editor-common.generated.str	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,269 @@
+module lib/editor-common.generated
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-gpp
+
+strategies
+
+  parse-file = parse-spoofax_lambda-file
+  parse-spoofax_lambda-file =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(include/Spoofax-lambda.tbl)>
+    )
+
+  parse-string = parse-spoofax_lambda-string
+  parse-spoofax_lambda-string =
+    parse-string(
+      strsglr-report-parse-error
+    | <import-term(include/Spoofax-lambda.tbl)>
+    )
+  
+  parse-stream = parse-spoofax_lambda-stream
+  parse-spoofax_lambda-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(include/Spoofax-lambda.tbl)>
+    )
+
+  pp-spoofax_lambda-string =
+    ast2abox(|[<import-term(include/Spoofax-lambda.generated.pp.af)>,
+               <import-term(include/Spoofax-lambda.pp.af)>]);
+    box2text-string(|100)
+    
+  language = !"Spoofax-lambda"
+
+strategies
+  
+  /**
+   * Processes an import during semantic analysis.
+   * Ensures proper caching of files and prevents
+   * processing duplicate imports more than once.
+   *
+   * @param resolve-path  Resolves the filesystem path of this import
+   * @param parse-file    Parses a file (optionally removing definition bodies
+   *                      so only signatures are stored in the cache)
+   * @param record-declarations
+   *                      Performs semantic analysis on a tree
+   */
+  open-import(resolve-path, parse-file, record-declarations):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path       := <resolve-path> import;
+        cache-path := <import-cache-path> path;
+        if not(<IsImported> path) then
+          rules(
+            IsImported: path
+          );
+          ( <is-newer> (cache-path, path);
+            file := <ReadFromFile> cache-path
+          <+
+            file := <parse-file> path;
+            if <file-exists> path then
+              // Only cache if on filesystem (e.g., ignore libstratego-lib)
+              <WriteToBinaryFile> (cache-path, file)
+            end        
+          );
+          {| CurrentFile:
+            rules(CurrentFile := path);
+            <record-declarations> file
+          |}
+        end
+      end
+
+  open-wildcard-import(resolve-path, parse-file, record-declarations, is-source-file):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path := <resolve-path> import;
+        readdir;
+        list-loop(
+          if is-source-file then
+            <open-import(id, parse-file, record-declarations)>
+              $[[path]/[<id>]]
+          <+
+            try(?one-failed)
+          end
+        );
+        not(!one-failed)
+      end
+  
+  import-cache-path:
+    full-path -> cache-path
+    with
+      project-path := <project-path>;
+      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
+      full-path'   := <string-replace(|"/", "+"); string-replace(|"\\", "+"); string-replace(|":", "+")> full-path;
+      cache-path   := $[[cache-dir]/[full-path'].sig]
+
+  project-path = prim("SSL_EXT_projectpath")
+  
+  plugin-path = prim("SSL_EXT_pluginpath")
+  
+  candidate-sorts = prim("SSL_EXT_candidatesorts")
+
+  is-newer:
+    (file1, file2) -> <id>
+    where
+      <gt> (<file-exists; modification-time> file1, <file-exists; modification-time> file2) 
+
+strategies
+  
+  editor-init =
+    // Ensure all dynamic rules are properly scoped
+    try(dr-scope-all-end);
+    dr-scope-all-start
+  
+  refresh-workspace-file:
+    path -> <prim("SSL_EXT_refreshresource", path)>
+  
+  string-starts-with-capital =
+    explode-string; Hd; is-upper
+
+strategies
+  
+  origin-term      = prim("SSL_EXT_origin_term", <id>)
+  origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-offset    = prim("SSL_EXT_origin_offset", <id>)
+  origin-location  = prim("SSL_EXT_origin_location", <id>)
+  origin-line      = origin-location => (<id>, _, _, _)
+  origin-column    = origin-location => (_, <id>, _, _)
+  origin-file      = prim("SSL_EXT_origin_file", <id>)
+  origin-strip     = prim("SSL_EXT_origin_strip", <id>)
+  origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+
+  origin-language =
+    prim("SSL_EXT_origin_language", <id>)
+  
+  origin-surrounding-comments =
+    prim("SSL_EXT_origin_surrounding_comments", "Spoofax-lambda", <id>)
+    
+  origin-documentation-comment =
+    origin-surrounding-comments;
+    filter(string-as-chars(documentation-comment-chars));
+    concat-strings
+  
+  documentation-comment-chars:
+    ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
+  
+  origin-track-forced(s) =
+    ![<id>]; all(s); ?[<id>]
+
+strategies
+
+  desugar-position(desugar|ast):
+    position -> position'
+    where
+      ast'  := <at-position(!<id>{MARKER()}|position)> ast;
+      ast'' := <topdown(repeat(preserve-annos({?x; desugar; not(?x)})))> ast';
+      position' := <position-of-term({?_{a*}; <one(?MARKER())> a*})> ast''
+   
+  at-position(s|position):
+    c#(t*) -> t'
+    where
+      !position => [i | position']
+    where
+      t' := c#(<at-index(at-position(s|position'))> (i, t*))
+
+  at-position(s|position):
+    t -> t'
+    where
+      !position => [];
+      t' := <s> t
+
+  position-of-term(is-term):
+    t -> []
+    where
+      is-term
+  
+  position-of-term(is-term):
+    _#(t*) -> <position-of-term(is-term|0)> t*
+  
+  position-of-term(is-term|start-index):
+    [t | t*] -> position
+    where
+      if i* := <position-of-term(is-term)> t then
+        position := [start-index | i*]
+      else
+        position := <position-of-term(is-term | <inc> start-index)> t*
+      end
+
+  term-at-position(|position):
+    t -> t'
+    where
+      at-position(?t'|position) 
+
+  parent-at-position(|position):
+    t -> t'
+    where
+      !position => [i, _];
+      t' := <subterm-at(|i)> t
+  
+  parent-at-position(|position):
+    t -> <parent-at-position(|position')> t'
+    where
+      !position => [i | position' @ [_, _ | _]];
+      t' := <subterm-at(|i)> t
+
+  subterm-at(|index):
+    _#(t*) -> <index(|<inc> index)> t*
+  
+signature constructors
+
+  COMPLETION : String -> Term
+  NOCONTEXT  : Term   -> Term
+  MARKER     : Term
+  True       : Term
+
+  // Below are copies of the signatures of the terms used in example
+  // trans/spoofax_lambda.str file. These definitions should also be automatically 
+  // generated in the imported include/Spoofax-lambda.str module. However,
+  // to ensure that the example transformation doesn't break when the
+  // syntax is changed, we also hard-coded them here.
+          
+  Module   : ID * List(Entity)   -> Module
+  Entity   : ID * List(Property) -> Entity
+  Property : ID * Type           -> Property
+  Type     : ID                  -> Type
+  
+  Type     : Namespace
+  Property : Namespace
+
+strategies
+  
+  // Set markers for a given file. Use when checking files from a queued strategy.
+  // Current term: (ast-desugared, errors, warnings, notes) tuple
+  // ast: the root node of the file to set markers on 
+  set-markers(|ast) = prim("SSL_EXT_set_markers", ast)
+
+  // Indicate that one or more files need analysis. 
+  // Current term: ss a list of absolute file paths, or a single absolute file path to analyze
+  queue-analysis = 
+       (is-list; list-loop(queue-analysis))
+    <+ prim("SSL_EXT_queue_analysis")
+    
+  // Gets the number of background analyses for currenct project and language.
+  // Current term: ignored
+  analysis-count = prim("SSL_EXT_queue_analysis_count")
+
+  // Set the total number of work units to complete. Can be called multiple times. 
+  // Current term: number of work units (int).
+  set-total-work-units = prim("SSL_EXT_set_total_work_units")
+  
+  // Complete one work unit and update progress monitors.
+  // Current term: ignored
+  complete-work-unit = prim("SSL_EXT_complete_work_unit")
+  
+  // Queue a strategy for background processing with a progress indicator.
+  // Current term: the term to pass to the background strategy
+  // s: the strategy, as string
+  // description: name of the task (will be shown in progress view)
+  queue-strategy(|s,description) = prim("SSL_EXT_queue_strategy", s, description)
+  
+  // Return the result of this strategy to indicate a non-completed (backgrounded) analysis.
+  // Editor services (hover, resolve) will be delayed until a complete analysis is performed. 
+  set-analysis-backgrounded = !"BACKGROUNDED"
+  

Added: spoofax-contrib/spoofax-lambda/trunk/lib/index-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/lib/index-library.generated.str	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,733 @@
+module lib/index-library.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+signature constructors
+  
+  // Index elements
+  DefData      : List(UriPart) * DefDataType * Term -> Summary
+    
+  // URI header
+  Namespace      : UriPart
+  Unresolved     : Namespace -> UriPart
+  INTERNAL_ERROR : UriPart
+  Timestamp      : UriPart
+ 
+  // Remainder of URI
+  String : UriPart
+  Anon   : Int -> UriPart
+  Anon   : UriPart
+  
+  FileEntries : Term * Term -> Term
+  
+  // Globals
+  Global : Namespace
+  Global : List(UriPart) -> Summary
+  Global : List(UriPart) * List(Summary) -> Summary
+  
+  // None namespace
+  None   : Namespace
+  
+rules // Index management
+   
+  /**
+   * Sets up the index library for given language and project paths.
+   * Must be called once before doing anything with the library.
+   *
+   * @param language      The language to set the index up for.
+   * @param project-path  The project paths that contain all source files to analyse and compile.
+   *
+   * @obsolete
+   * @type x -> x
+   */
+  index-setup(|language, project-paths) =
+    obsolete(!"index-setup(|language, project-paths); use index-setup(|language, project-paths, current-file)");
+    index-setup(|language, project-paths, ".")
+    
+  /**
+   * Sets up the index library for given language, project paths and current file.
+   * Must be called once before doing anything with the library.
+   *
+   * Example:
+   *   <index-setup(|"MiniJava", [<project-path>], "test/test.mjv")
+   *
+   * @param language      The language to set the index up for.
+   * @param project-path  The project paths that contain all source files to analyse and compile.
+   * @param current-file  The current file that is being analysed. Can be retrieved later using index-get-current-file.
+   *                      Can also be changed later using index-set-current-file.
+   * @type x -> x
+   */
+  index-setup(|language, project-paths, current-file) =
+    prim("LANG_index_setup", language, project-paths, current-file)
+    
+  /**
+   * Sets the current file the index (analysis) is operating on to the given file.
+   *
+   * Example:
+   *   <index-set-current-file> "fullpath/file.ext"
+   *   <index-set-current-file> ("fullpath/file.ext", "subfile")
+   *
+   * @type x -> ?x
+   */
+  index-set-current-file = 
+    prim("LANG_index_set_current_file", <id>)
+
+  /**
+   * Adds given element to the index with given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-add(|"fullpath/file.ext")> Def([Entity(), "Bar"])
+   *   <index-add(|("fullpath/file.ext", "subfile"))> Def([Entity(), "Bar"])
+   *
+   * @param file  The file (and subfile) to add the element to.
+   * @type x -> ?x
+   */
+  index-add(|file) =
+    prim("LANG_index_add", <id>, file)
+
+  /**
+   * Adds all given elements to the index with given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-add-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
+   *   <index-add-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
+   *
+   * @param file  The file (and subfile) to add the elements to.
+   * @type List(x) -> ?List(x)
+   */
+  index-add-all(|file) =
+    list-loop(with(index-add(|file)))
+    
+  /**
+   * Removes given element from the index that is contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-remove(|"fullpath/file.ext")> Def([Entity(), "Bar"])
+   *   <index-remove(|("fullpath/file.ext", "subfile"))> Def([Entity(), "Bar"])
+   * 
+   * @param file  The file (and subfile) to remove the element from.
+   * @type x -> ?x
+   */
+  index-remove(|file) =
+    prim("LANG_index_remove", <id>, file)
+    
+  /**
+   * Removes all given elements from the index that are contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-remove-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
+   *   <index-remove-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
+   *
+   * @param file  The file (and subfile) to remove the elements from.
+   * @type List(x) -> ?List(x)
+   */
+  index-remove-all(|file) =
+    list-loop(with(index-remove(|file)))
+    
+  /**
+   * Removes all elements from the index that are contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-clear-file> "fullpath/file.ext"
+   *   <index-clear-file> ("fullpath/file.ext", "subfile")
+   *
+   * @type x -> ?x
+   */
+  index-clear-file = 
+    prim("LANG_index_clear_file", <id>)
+    
+  /**
+   * Clears all elements from the index.
+   *
+   * @type x -> x
+   */
+  index-clear = 
+    prim("LANG_index_clear_all")
+    
+  /**
+   * Clears all elements from the index and re-analyzes all files in the project.
+   *
+   * @type x -> x
+   */
+  index-reload = 
+    prim("LANG_index_reload")
+   
+  /**
+   * Commits index to a file on disk.
+   *
+   * @type x -> x
+   */
+  index-commit = 
+    prim("LANG_index_commit")
+
+  /**
+   * Starts a transaction on the index for the current file. Additions to the index are not visible to other files 
+   * until index-end-transaction is called. Operations on the index are only thread safe during a transaction.
+   *
+   * @type x -> x
+   */
+  index-start-transaction = 
+    prim("LANG_index_start_transaction")
+  
+  /**
+   * Ends a transaction on the index for the current file. Additions made to the index during the transaction are
+   * added to the global index visible for other files. Operations on the index are not thread safe any more after 
+   * this call.
+   *
+   * @type x -> x
+   */
+  index-end-transaction = 
+    prim("LANG_index_end_transaction")
+  
+  /**
+   * Starts a transaction, applies given strategy and ends the transaction. All index operations used from the given
+   * strategy are thread safe.
+   * 
+   * @param s The strategy to apply. Transaction will still properly end if strategy fails.
+   * @type x -> x'
+   *
+   * @see index-start-transaction
+   * @see index-end-transaction
+   */
+  index-transaction(s) = 
+    prim("LANG_index_start_transaction"); try(s); prim("LANG_index_end_transaction")
+  
+rules // Index querying
+  
+  /**
+   * Gets the file that the analysis is currently in.
+   *
+   * @type x -> (file, subfile)
+   *
+   * @see index-setup(|language, project-paths, current-file)
+   * @see index-set-current-file
+   */
+  index-get-current-file =
+    prim("LANG_index_get_current_file")
+  
+  /**
+   * Gets a list of all files and subfiles for current project.
+   *
+   * Example:
+   *   <index-get-all-files> => [("fullpath/file.ext", "subfile"), ...]
+   *
+   * @type x -> List((file, subfile))
+   */   
+  index-get-all-files =
+    prim("LANG_index_all_files")
+  
+  /**
+   * Gets all index entries for the given file path and optionally subfile.
+   *
+   * Examples:
+   *   <index-get-all-in-file> "fullpath/file.ext" => [Def([Entity(), "Bar"]), ...]
+   *   <index-get-all-in-file> ("fullpath/file.ext", "subfile") => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type file or (file, subfile) -> List(elem)
+   */  
+  index-get-all-in-file:
+    filepath -> entries
+    with
+      entries := <prim("LANG_index_get_all_in_file", filepath)>
+   
+  /**
+   * Gets index entries in some namespace for the given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-get-all-in-file(|Import())> "fullpath/file.ext" => [Def([Import(), "Bar"]), ...]
+   *   <index-get-all-in-file(|Import())> ("fullpath/file.ext", "subfile") => [Def([Import(), "Bar"]), ...]
+   *
+   * @param namespace Only index entries from this namespace are retrieved.
+   * @type file or (file, subfile) -> List(elem)
+   */  
+  index-get-all-in-file(|namespace):
+    filepath -> entries
+    with
+      // TODO: Optimize -- add an argument to LANG_index_get_all_in_file to do this filtering
+      entries := <prim("LANG_index_get_all_in_file", filepath)>;
+      filter(where(index-uri => [namespace | _]))
+    
+  /**
+   * Gets the revision of a file and optionally subfile.
+   *
+   * Example:
+   *   <index-get-file-revision> "fullpath/file.ext" => 13
+   *   <index-get-file-revision> ("fullpath/file.ext", "subfile") => 37
+   *
+   * @type file or (file, subfile) -> Int
+   */
+  index-get-file-revision:
+    file -> <prim("LANG_index_get_file_revision", file)>
+    
+  /**
+   * Gets the containing files and subfiles of index entry with given template.
+   *
+   * Example:
+   *   <index-get-files-of> Def([Entity(), "Bar"]) => [("fullpath/file.ext", "subfile"), ...]
+   *
+   * @type template -> List((file, subfile))
+   */  
+  index-get-files-of:
+    template -> <prim("LANG_index_get_files_of", template)>
+    
+  /**
+   * Get all index entries that match the given template.
+   *
+   * Example:
+   *   <indexlib-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type template -> List(elem)
+   */
+  indexlib-get-all:
+    template -> <prim("LANG_index_get", template)>
+    
+  /**
+   * Get all values of index entries that match the given template.
+   *
+   * Example:
+   *   <indexlib-get-all-values> DefData([Property(), "s"], Type(), ()) => [TYPE("String"), ...]
+   *
+   * @type template -> List(value)
+   *
+   * @see index-value
+   */
+  indexlib-get-all-values:
+    template -> <map(index-value)> <indexlib-get-all> template
+ 
+  /**
+   * Get the first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <indexlib-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   *
+   * @type template -> ?elem
+   */
+  indexlib-get:
+    template -> <?[<id>|_]> <indexlib-get-all> template
+   
+  /**
+   * Get the value of first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <indexlib-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
+   *
+   * @type template -> ?value
+   *
+   * @see index-value
+   */
+  indexlib-get-value:
+    template -> <index-value> <?[<id>|_]> <indexlib-get-all> template
+    
+rules // Index globals
+    
+  /**
+   * Gets the 'fake' path where globals are stored in the index.
+   *
+   * @internal
+   */
+  index-globals-path = 
+    !"/.internal/globals"
+    
+  /**
+   * Gets the URI where globals are stored in the index for given name or names.
+   *
+   * @internal
+   * @type name or List(name) -> uri
+   */
+  index-globals-uri:
+    names -> uri
+    with
+      if is-list then
+        uri := <concat> [[Global()], names, ["globals", ".internal"]]
+      else
+        uri := [Global(), names, "global", ".internal"]
+      end
+    
+  /**
+   * Gets the first value in global storage with given name, or fail.
+   *
+   * Example:
+   *   index-get-global(|"last-compile") => Timestamp(1334322856)
+   *   index-get-global(|["last-compile", "file.str"]) => Timestamp(1334322856)
+   * 
+   * @param name  The name or list of names to identify the global value.
+   * @type _ -> ?value
+   */
+  index-get-global(|name):
+    _ -> value
+    where
+      value := <indexlib-get-value> Global(<index-globals-uri> name, ())
+    
+  /**
+   * Gets all values in global storage with given name.
+   *
+   * Example:
+   *   index-get-global(|"last-compile") => [Timestamp(1334322856), ...]
+   *   index-get-global(|["last-compile", "file.str"]) => [Timestamp(1334322856), ...]
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type _ -> List(value)
+   */ 
+  index-get-all-globals(|name):
+    _ -> values
+    with
+      values := <indexlib-get-all-values> Global(<index-globals-uri> name, ())
+    
+  /**
+   * Add value to global storage with given name.
+   *
+   * Example:
+   *   <index-add-global(|"last-compile")> Timestamp(1334322856)
+   *   <index-add-global(|["last-compile", "file.str"])> Timestamp(1334322856)
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-add-global(|name):
+    value -> <id>
+    with
+      <index-add(|<index-globals-path>)> Global(<index-globals-uri> name, value)
+      
+  /**
+   * Overwrites value in global storage with given value.
+   *
+   * Example:
+   *   <index-set-global(|"last-compile")> Timestamp(1334322856)
+   *   <index-set-global(|["last-compile", "file.str"])> Timestamp(1334322856)
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-set-global(|name):
+    value -> <id>
+    with
+      index-clear-global(|name);
+      <index-add-global(|name)> value
+    
+  /**
+   * Removes all values from global storage with given name.
+   *
+   * Example:
+   *   index-clear-global(|"last-compile")
+   *   index-clear-global(|["last-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-clear-global(|name):
+    _ -> <id>
+    with
+      <index-remove(|<index-globals-path>)> Global(<index-globals-uri> name, ())
+      
+  /**
+   * Gets the URI where boolean globals are stored in the index for given name or names.
+   *
+   * @internal
+   */
+  index-boolean-globals-uri:
+    names -> uri
+    with
+      if is-list then
+        uri := <concat> [[Global()], names, ["boolean", "globals", ".internal"]]
+      else
+        uri := [Global(), names, "boolean", "global", ".internal"]
+      end
+      
+  /**
+   * Sets boolean value true to global boolean storage with given name.
+   *
+   * Example:
+   *   index-enable-global(|"can-compile")
+   *   index-enable-global(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> x
+   */   
+  index-enable-global(|name):
+    _ -> <id>
+    with
+      <index-add(|<index-globals-path>)> Global(<index-boolean-globals-uri> name)
+      
+  /**
+   * Sets boolean value false to global boolean storage with given name.
+   *
+   * Example:
+   *   index-disable-global(|"can-compile")
+   *   index-disable-global(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> x
+   */   
+  index-disable-global(|name):
+    _ -> <id>
+    with
+      <index-remove(|<index-globals-path>)> Global(<index-boolean-globals-uri> name)
+      
+  /**
+   * Query for boolean value true in global boolean storage with given name.
+   *
+   * Example:
+   *   index-is-global-enabled(|"can-compile")
+   *   index-is-global-enabled(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> ?x
+   */   
+  index-is-global-enabled(|name):
+    _ -> <id>
+    where
+      <indexlib-get> Global(<index-boolean-globals-uri> name)
+
+rules // Index utility
+  
+  /**
+   * Gets the URI part for given term. Can be extended by defining a index-uri-impl rule. If no index-uri-impl rule
+   * is defined for the given term the first subterm is used as the URI. Fails if no URI can be retrieved from the
+   * given term.
+   *
+   * Example:
+   *   <index-uri> DefData([Entity(), "Bar", "Baz"], Type(), TYPE("Bar")) => [Entity(), "Bar", "Baz"]
+   *
+   * @type elem -> ?uri
+   *
+   * @see index-uri-impl
+   * @see index-uri-generic
+   */ 
+  index-uri = 
+    index-uri-impl <+ index-uri-generic
+  
+  /**
+   * Gets the namespace part of the given URI.
+   *
+   * Example:
+   *   <index-uri-path> [Entity(), "Bar", "Baz"] => Entity()
+   *
+   * @type uri@[namespace|path] -> namespace
+   */ 
+  index-uri-namespace =
+    ?[<id>|_]
+  
+  /**
+   * Gets the path part of the given URI.
+   *
+   * Example:
+   *   <index-uri-path> [Entity(), "Bar", "Baz"] => ["Bar", "Baz"]
+   *   <index-uri-path> [Entity()] => []
+   *
+   * @type uri@[namespace|path] -> path
+   */ 
+  index-uri-path =
+    ?[_|<id>]
+    
+  /**
+   * Gets the name part of the given URI or fail if there is no name.
+   *
+   * Example:
+   *   <index-uri-name> [Entity(), "Bar", "Baz"] => "Bar"
+   *   <index-uri-name> [Entity()] => fail
+   *
+   * @type uri@[namespace|[name|restPath]] -> ?name
+   */ 
+  index-uri-name =
+    ?[_|[<id>|_]]
+    
+  /**
+   * Gets the parent of given URI or fail if the URI doesn't have a parent.
+   *
+   * Example:
+   *   <index-uri-parent> [Entity(), "Bar", "Baz"] => [Entity(), "Baz"]
+   *   <index-uri-parent> [Entity(), "Baz"] => [Entity()]
+   *   <index-uri-parent> [Entity()] => fail
+   *
+   * @type uri@[namespace|[name|restPath]] -> ?name
+   */     
+  index-uri-parent =
+    ?[ns|[_|<id>]]; ![ns|<id>]
+  
+  /**
+   * Gets the value part for given term. Can be extended by defining a index-value-impl rule. If no index-value-impl 
+   * rule is defined for the given term the second subterm is used as the value. Fails if no value can be retrieved
+   * from the given term.
+   *
+   * Example:
+   *   <index-value> DefData([Entity(), "Bar", "Baz"], Type(), TYPE("Bar")) => TYPE("Bar")
+   *
+   * @type elem -> ?value
+   *
+   * @see index-value-impl
+   * @see index-value-generic
+   */  
+  index-value = 
+    index-value-impl <+ index-value-generic
+  
+  /**
+   * Queries if given index file is a 'fake' file for storing internal data.
+   *
+   * @type x -> ?x
+   */
+  index-is-fake-file = 
+    string-starts-with(|"/.internal")
+  
+  /**
+   * Checks if given URI's are equal. Discards anonymous scopes if necessary.
+   *
+   * Example:
+   *   <index-uri-eq> ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"]) => 
+   *     ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"])
+   *   <index-uri-eq> ([Entity(), "Foo"], [Entity(), "Bar"]) => fail
+   *
+   * @type (u1, u2) -> ?(u1, u2)
+   */
+  index-uri-eq:
+    (u1, u2) -> <id>
+    where
+      u1' := <index-uri-unwrap> u1;
+      u2' := <index-uri-unwrap> u2;
+      (<eq> (u1', u2') <+ <eq> (<remove-all(?Anon(_))> u1', <remove-all(?Anon(_))> u2'))
+  
+  /**
+   * Finds the first key (term{uri} element) for given term, or fail. 
+   *
+   * @type x -> ?name{uri}
+   */
+  index-find-key:
+    x -> key
+    where
+      key := <collect-one(?_{_})> x
+
+  /**
+   * Converts a path from an URI to a string.
+   *
+   * Example:
+   *   <index-path-to-string> ["Bar", "Baz"] => "Bar.Baz"
+   *
+   * @type path -> str
+   */
+  index-path-to-string:
+    path -> str
+    with
+      str := <take-until(?Anon(_)); reverse; separate-by(|"."); concat-strings> path
+      
+  /**
+   * Converts a URI to a string.
+   *
+   * Example:
+   *   <index-uri-to-string> [Entity(), "Bar", "Baz"] => "Entity://Bar.Baz"
+   *
+   * @type uri -> str
+   */
+  index-uri-to-string:
+    [ns|path] -> <concat-strings> [nsStr, "://", pathStr]
+    with
+      pathStr := <index-path-to-string> path;
+      nsStr := <?<id>#(_)> ns
+  
+  /**
+   * Converts a file to a string.
+   *
+   * Example:
+   *   <index-file-to-string> "fullpath/file.ext" => "fullpath/file.ext"
+   *
+   * @type file -> file
+   */
+  index-file-to-string:
+    file -> file
+    where
+      not(<is-tuple> file)
+  
+  /**
+   * Converts a file ((file, subfile) tuple) to a string.
+   *
+   * Example:
+   *   <index-file-to-string> ("fullpath/file.ext", []) => "fullpath/file.ext"
+   *
+   * @type (file, []) -> file
+   */
+  index-file-to-string:
+    (file, []) -> file
+    
+  /**
+   * Converts a file ((file, subfile) tuple) to a string.
+   *
+   * Example:
+   *   <index-file-to-string> ("fullpath/file.ext", [Entity(), "Foo" "Bar"]) => "fullpath/file.ext at Entity://Foo.Bar"
+   *
+   * @type (file, subfile) -> str
+   */
+  index-file-to-string:
+    (file, subfile) -> <concat-strings> [file, "@", <index-uri-to-string> subfile]
+    where
+      not([] := subfile)
+
+  /**
+   * Converts a file to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> "fullpath/file.ext" => [None(), "fullpath/file.ext"]
+   *
+   * @type file -> uri
+   */      
+  index-file-to-uri:
+    file -> [None(), file]
+    where
+      not(<is-tuple> file)
+      
+  /**
+   * Converts a file ((file, subfile) tuple) to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> ("fullpath/file.ext", []) => [None(), "fullpath/file.ext]
+   *
+   * @type (file, subfile) -> uri
+   */      
+  index-file-to-uri:
+    (file, []) -> [None(), file]
+    
+  /**
+   * Converts a file ((file, subfile) tuple) to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> ("fullpath/file.ext", [Entity(), "Foo" "Bar"]) => [Entity(), "Foo", "Bar", "fullpath/file.ext"]
+   *
+   * @type (file, subfile) -> uri
+   */      
+  index-file-to-uri:
+    (file, subfile) -> <conc> ([file], subfile)
+    where
+      not([] := subfile)
+      
+/** @internal */
+rules // URI and value projections
+
+  /** @internal */
+  index-uri-impl:
+    [_|_] -> <id>
+  
+  /** @internal */
+  index-uri-impl:
+    DefData(uri, _, _) -> uri
+
+  /** @internal */
+  index-uri-generic:
+    term -> <?_#(<?[<id>|_]>)> term
+  
+  /** @internal */
+  index-value-impl:
+    DefData(_, _, value) -> value
+    
+  /** @internal */
+  index-value-generic:
+    term -> <?_#(<?[_, <id>|_]> )> term
+     
+/** @internal */ 
+rules // Internal helpers
+  
+  /** @internal */
+  index-namespace-unwrap =
+    \Unresolved(n) -> n\ <+ id
+    
+  /** @internal */
+  index-uri-unwrap =
+    \[ns|xs] -> [<index-namespace-unwrap> ns|xs]\ <+ id

Added: spoofax-contrib/spoofax-lambda/trunk/lib/nbl-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/lib/nbl-library.generated.str	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,144 @@
+module lib/nbl-library.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  
+signature constructors
+  
+  Type        : DefDataKind
+  Import      : DefDataKind
+  Transitive  : ImportAnno
+  CurrentFile : ImportAnno
+  
+rules // Import adjust rule
+     
+  import-transitive =
+    collect-one(?Transitive())
+  import-standard =
+    not(import-transitive)
+    
+  import-values(|namespace, path) =
+    <index-get-all-values> DefData([namespace| path], Import(), ())
+    
+  import-currentfile-values(|namespace) =
+    <index-get-all-values> DefData([namespace|[<index-file-to-string> <index-get-current-file>]], Import(), ())  
+    
+  adjust-index-import(|namespace, path):
+    _ -> <concat> [[[namespace | path]], currentFileImportDefs, importDefs]
+    with
+      uri := [namespace | path]
+    where
+      allImports := <import-values(|namespace, path)> ;
+      importDefs := <mapconcat(import-defs(|namespace, [uri]))> allImports
+    where
+      currentfileImports := <import-currentfile-values(|namespace)> ;
+      currentFileImportDefs := <mapconcat(import-defs(|namespace, [uri]))> currentfileImports
+    
+  import-defs(|namespace, seen):
+    (key, <import-standard>) -> [uri]
+    with
+      uri := [namespace | <index-uri-path> key]
+      
+  import-defs(|namespace, seen):
+    (key, <import-transitive>) -> <conc> ([uri], transitiveUris)
+    with
+      path := <index-uri-path> key ;
+      uri := [namespace | path] ;
+      
+      if not(<elem> (uri, seen)) then
+        allImports := <import-values(|namespace, path)> ;
+        transitiveUris := <mapconcat(import-defs(|namespace, [uri|seen]))> allImports
+      else
+        transitiveUris := []
+      end
+
+rules // Adjust difference comparison
+    
+  // Add Type to the constructors to check for differences.
+  index-diff-constructors = ?DefData(_, Type(), _)
+  
+  // Type definitions are equal if their URI is equal and if their values are equal.
+  index-diff-compare:
+    (DefData(u1, Type(), v1), DefData(u2, Type(), v2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2);
+       <index-key-eq> (v1, v2)
+
+rules // Error checks
+  
+  constraint-error:
+    x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
+    
+  constraint-error:
+    definition -> (key, $[Duplicate definition])
+    where
+      <nam-unique> definition;
+      key := <nam-get-definition-key> definition;
+      defs := <index-lookup-all-scoped-noimports> key;
+      <gt> (<length> defs, 1)
+      
+rules // Type dependant lookup
+	
+	/**
+   * Given an annotated AST node and a type, resolves it and checks if type equals given type, returning its definition.
+   * Uses precise matching for names.
+   *
+   * @param type	Only definitions with this type are returned.
+   * @type "name"{uri} -> ?Def(uri')
+   */
+  index-lookup-typed(|type):
+    x{[namespace|path]} -> <index-lookup-internal(index-compare-nametype-equal(|name, type)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
+
+  /**
+   * Given an annotated AST node, a prefix and a type, looks for all definitions with given prefix and type starting at the scope of 
+   * the given node.
+   * Uses substring matching for names.
+   *
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @param type			Only definitions with this type are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-typed(|prefix, type):
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-nametype-substring(|prefix, type)|ns, path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace
+
+  /**
+   * Compares given element (with an URI) to given name using string equality comparison and given type using equality.
+   * 
+   * @internal 
+   */     
+  index-compare-nametype-equal(|name, type):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <SRTS-EXT-eq-ignore-annos(|name)> <index-uri-name> uri;
+      <nbl-type-eq(|type)> <nbl-get-type> uri
+      
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison and given type using equality.
+   * 
+   * @internal 
+   */     
+  index-compare-nametype-substring(|prefix, type):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <is-substring(!prefix)> <index-uri-name> uri;
+      <nbl-type-eq(|type)> <nbl-get-type> uri
+  
+  /** @internal */
+  nbl-get-type:
+  	uri -> <index-get-data(|Type())> Def(uri)
+  
+  // TODO: Allow user defined type equality.
+  /** @internal */	
+  nbl-type-eq(|type) = 
+  	<eq> (<id>, type)

Added: spoofax-contrib/spoofax-lambda/trunk/lib/refactor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/lib/refactor-common.generated.str	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,67 @@
+module lib/refactor-common.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+
+strategies //transformation
+
+/**
+ * Replaces elements in a list (once, starting from the right)
+ * @param match strategy for partial list
+ * @param new elements List(b)
+ * @type List(a) -> List(a,b)
+ */
+replace-sublist(match-sublist|new-elems): 
+  list -> <
+    at-suffix(match-sublist;!new-elems) <+
+    (
+      init; 
+      replace-sublist(match-sublist|new-elems);
+      at-end(![<last> list])
+    )
+  > list 
+
+/**
+ * Inserts an element at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list element 
+ * @type Term -> Term
+ */
+insert-elem(|pos, elem)=
+  insert-sublist(|pos, [elem])
+
+/**
+ * Inserts a list of elements at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list elements 
+ * @type Term -> Term
+ */	
+insert-sublist(|pos, elems)=
+  at-position(
+    split-at(|<last> pos);
+    ?(prefix, suffix);
+    <concat>[prefix, elems, suffix]
+    |<init> pos
+  )
+
+
+strategies //user-input
+
+/**
+ * Opens an input dialog for one string value that represents an identifier
+ * The language is used to check if the input value matches the identifier pattern
+ * @type (String, String, String, String) -> String
+ */
+input-dialog:
+  (language, title, label, default-value) -> <prim("SSL_EXT_newnamedialog", language, title, label, default-value)>
+  
+input-dialog:
+  (title, label, default-value) -> <input-dialog>("", title, label, default-value)
+
+strategies //pp-table
+	
+get-pp-table=
+  import-term(include/Spoofax-lambda.generated.pp.af)
+	

Added: spoofax-contrib/spoofax-lambda/trunk/plugin.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/plugin.xml	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<?eclipse version="3.0"?>
+
+<plugin>
+       <extension point="org.eclipse.imp.runtime.languageDescription">
+          <language extensions="lam" description="Spoofax-lambda" language="Spoofax-lambda" derivedFrom="DynamicRoot" validator="spoofaxlambda.SpoofaxlambdaValidator" validatorClass="spoofaxlambda.SpoofaxlambdaValidator"></language>
+       </extension>
+       <extension id="spoofaxlambda.parser" name="Spoofax-lambda Parser" point="org.eclipse.imp.runtime.parser">
+          <parser class="spoofaxlambda.SpoofaxlambdaParseController" language="Spoofax-lambda">
+          </parser>
+       </extension>    
+    </plugin>
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/syntax/Common.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/syntax/Common.sdf	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,46 @@
+module Common
+
+exports
+
+  lexical syntax
+  
+    [a-zA-Z][a-zA-Z0-9\_]* -> ID
+    "-"? [0-9]+          -> INT
+    
+    "\"" StringChar* "\"" -> STRING
+    ~[\"\n]               -> StringChar
+    "\\\""                -> StringChar
+    BackSlashChar         -> StringChar
+    "\\"                  -> BackSlashChar
+    
+    [\ \t\n\r] -> LAYOUT
+    
+    [\*]                             -> CommentChar
+    "/*" (~[\*] | CommentChar)* "*/" -> LAYOUT
+    "//" ~[\n\r]* ([\n\r] | EOF)     -> LAYOUT
+    
+    -> EOF
+  
+  lexical restrictions
+  
+    %% Ensure greedy matching for lexicals
+  
+    CommentChar   -/- [\/]
+    INT           -/- [0-9]
+    ID            -/- [a-zA-Z0-9\_]
+    
+    %% EOF may not be followed by any char
+    
+    EOF           -/- ~[]
+
+    %% Backslash chars in strings may not be followed by " 
+    
+    BackSlashChar -/- [\"]
+
+  context-free restrictions
+  
+    %% Ensure greedy matching for comments
+
+    LAYOUT? -/- [\ \t\n\r]
+    LAYOUT? -/- [\/].[\/]
+    LAYOUT? -/- [\/].[\*]

Added: spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.generated.pp
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.generated.pp	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,10 @@
+[
+   Module             -- KW["module"] _1 _2 KW["eval"] _3,
+   Module.2:iter-star -- _1,
+   Imports            -- KW["imports"] _1,
+   Def                -- KW["def"] _1 KW["="] _2,
+   Var                -- _1,
+   Lam                -- KW["\\"] _1 KW["."] _2,
+   App                -- _1 KW["@"] _2,
+   App                -- _1 _2
+]
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.pp
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.pp	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,11 @@
+%% Pretty printing table (see also Spoofax-lambda.generated.pp)
+[
+   Module             -- V vs=1[H[KW["module"] _1] _2 V is=2[KW["eval"] H[_3]]],
+   Module.2:iter-star -- _1,
+   Imports            -- H[KW["imports"] _1],
+   Def                -- H[KW["def"] _1 KW["="] _2],
+   Var                -- _1,
+   Lam                -- KW["\\"] _1 KW["."] _2,
+   App                -- _1 KW["@"] _2,
+   App                -- _1 _2
+]
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.sdf	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,30 @@
+%% Grammar for the Spoofax-lambda language
+%% By default, based on an example "entities" syntax
+module Spoofax-lambda
+
+imports Common
+
+exports
+
+  context-free start-symbols Start
+
+  sorts Module Definition
+  context-free syntax
+    Module                             -> Start
+    "module" ID Definition* "eval" Exp -> Module {"Module"}
+    "imports" ID                       -> Definition {"Imports"}
+    "def" ID "=" Exp                   -> Definition {"Def"}
+    
+    
+  sorts Exp
+  context-free syntax
+    ID              -> Exp {"Var"}
+    "\\" ID "." Exp -> Exp {"Lam"}
+    Exp "@" Exp     -> Exp {"App",left}
+    Exp     Exp     -> Exp {"App",left,deprecated("use @")}
+    "(" Exp ")"     -> Exp {bracket}
+    
+  context-free priorities
+    {left : Exp     Exp     -> Exp
+            Exp "@" Exp     -> Exp }
+    > "\\" ID "." Exp -> Exp

Added: spoofax-contrib/spoofax-lambda/trunk/test/example.-eval.lam
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example.-eval.lam	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1 @@
+module example-norm eval \ t_43134 . \ v_43134 . t_43134 @ t_43134 @ v_43134
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/test/example.java
==============================================================================

Added: spoofax-contrib/spoofax-lambda/trunk/test/example.lam
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example.lam	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,18 @@
+module example
+ 
+//imports example2
+
+def zero = \s.(\z.z)
+def succ = \w.\y.\x. y @ (w @ y @ x) 
+def add  = \x.\y. x @ succ @ y 
+def one  = succ @ zero
+def two  = succ @ one
+//def two  = two
+ 
+eval
+  succ @ (add @ one @ zero)
+   //w @ add @ two @ two 
+   
+   //(\x . (\x . x)) @ z
+   
+ 
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/test/example.norm.lam
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example.norm.lam	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,4 @@
+module examplenorm
+
+eval
+  \ h_46744 . \ j_46744 . h_46744 @ h_46744 @ j_46744
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/test/example2.lam
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example2.lam	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,9 @@
+module example2
+
+imports example
+
+def three = succ @ two
+def four = succ @ three
+
+eval
+  zero
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/test/test-example.spt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/test/test-example.spt	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,58 @@
+/**
+* Unit tests for the Spoofax-lambda language.
+*/
+module test-example
+
+language Spoofax-lambda
+
+setup Common [[
+  module 
+]]
+
+test Simple expression [[
+  eval 
+    (\x . x)
+]] 0 errors
+
+test Simple definition [[
+  def zero = \s.(\z.z)
+]] 0 errors
+
+test Resolve type fails [[
+  entity User {
+    name  : Strin
+    other : Use
+  }
+]] 2 errors
+
+test Duplicate entity fails [[
+  entity User {}
+  entity User {}
+]] 2 errors
+
+test Duplicate property fails [[
+  entity User {
+  	name : String
+  	name : String
+  }
+]] 2 errors
+
+test Resolve type [[
+  entity [[User]] {}
+  
+  entity Owner {
+    owns : [[User]]
+  }
+]] resolve #2 to #1
+
+test Complete primitive type [[
+  entity User {
+    name : [[Str]]
+  }
+]] complete to "String"
+
+test Complete user type [[
+  entity User {
+    owner : [[Us]]
+  }
+]] complete to "User"

Added: spoofax-contrib/spoofax-lambda/trunk/trans/check.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/check.str	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,21 @@
+module check
+
+imports
+  libstratego-lib
+  include/Spoofax-lambda
+  lib/editor-common.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  lib/nbl-library.generated
+
+rules // Other
+  
+  // constraint-warning:
+  //   Entity(x, _) -> (x, $[Entity names must start with a capital])
+  //   where
+  //     not(<string-starts-with-capital> x)
+  // 
+  // constraint-note:
+  //   Module(x @ "example", _) -> (x, $[This is just an example program in the "entities" language
+  //                                     (this note is defined in trans/check.str) ])

Added: spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,106 @@
+module evaluate
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/Spoofax-lambda 
+  lib/editor-common.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  lib/nbl-library.generated
+    
+rules // beta reduction
+  
+  beta : 
+    App(Lam(x, e1), e2) -> <substitute(|x,e2)>e1
+    
+  inline :
+    Var(x) -> e
+    where e := <Definition>x
+    
+  beta-red = 
+    innermost(beta <+ inline)
+    
+  beta-red-pp =
+    beta-red; pp-spoofax_lambda-string
+    
+  eval :
+    mod at Module(m, def*, e) -> Module($[[m]norm], [], <beta-red> e)
+    where <rename>mod
+    
+  eval-pp =
+    eval; pp-spoofax_lambda-string
+      
+rules // substitution
+  
+  substitute(|x, e1) :
+    e2 at Var(x) -> e1
+    
+  substitute(|x, e1) :
+    e2 at Var(y) -> e2
+    where <not(eq)>(x, y)
+    
+  substitute(|x,e1) :
+    e2 at Lam(x, e3) -> e2
+       
+  substitute(|x,e1) :
+    Lam(y, e2) -> Lam(z, <substitute(|y,Var(z)); substitute(|x, e1)>e2)
+    where <not(eq)>(x,y)
+    with  z := <new> y
+    
+  substitute(|x,e1) :
+    App(e2, e3) -> App(<substitute(|x, e1)>e2, <substitute(|x,e1)>e3)
+    
+rules // free-variables
+  
+  free-vars :
+    e at Var(x) -> [e]
+    
+  free-vars :
+    App(e1, e2) -> <union>(<free-vars> e1, <free-vars> e2)
+    
+  free-vars :
+    Lam(x, e) -> <diff>(<free-vars>e, Var(x))
+    
+rules // renaming
+      
+  rename =
+    alltd(rename-def <+ rename-lam <+ rename-var)
+    
+  rename-def :
+    Def(x, e1) -> Def(x, e2)
+    where e2 := <rename> e1;
+          rules( 
+            Binding    : x -> e2 
+            Definition : x -> e2
+          )
+    
+  rename-lam :
+    e0 at Lam(x, e1) -> Lam(y, e2)
+    where {| Rename 
+           : y := x{<new>}
+           ; rules( 
+               Rename  : x -> y 
+               Binding : y -> e0
+             )
+           ; e2 := <rename> e1
+           |}
+           
+  rename-var :
+    Var(x) -> Var(y)
+    where y := <Rename> x
+
+rules // checks and warnings
+  
+  constraint-error : 
+    Def(x, e1) -> (x, $[Multiple definitions for [x]])
+    where e2 := <Binding> x
+    where require(<eq>(e1,e2))
+  
+  constraint-warning :
+    Var(x) -> (x, $[[x] is a free variable])
+    where not(<index-lookup>x)
+    
+  require(s) = not(s)

Added: spoofax-contrib/spoofax-lambda/trunk/trans/generate.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/generate.str	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,66 @@
+module generate
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/Spoofax-lambda
+  lib/editor-common.generated
+  lib/compilation-library.generated
+
+rules // Incremental code generation of project using compilation library.
+      
+  index-compile-ast(|file, subfile):
+    ast -> None()
+    with
+      java := <to-java> ast;
+      full-path := <dirname> file;
+      filename := <guarantee-extension(|"java")> <base-filename> file;
+      writePath := $[[full-path]/];
+      writeFile :=  $[[writePath][filename]];
+      try(<mkdir> writePath);
+      <fclose> <fputs> (java, <fopen> (writeFile, "w"))
+
+rules // Transformation to java strings.
+  
+  to-java: _ -> ""
+
+  to-java:
+    [_] -> <concat-strings> <map(to-java)>
+
+//   to-java:
+//     Module(x, d*) ->
+//     $[ package [x];
+//        
+//        [d'*]
+//      ]
+//     with
+//       d'* := <to-java> d*
+//   
+//   to-java:
+//     Entity(x, p*) ->
+//     $[ class [x] {
+//            [p'*]
+//        }
+//      ]
+//     with
+//       p'* := <to-java> p*
+// 
+//   to-java:
+//     Property(x, Type(t)) -> $[
+//       private [t] [x];
+//       
+//       public [t] get_[x] {
+//           return [x];
+//       }
+//       
+//       public void set_[x] ([t] [x]) {
+//           this.[x] = [x];    
+//       }
+//   ]
+//   
+//   to-java:
+//     Type(t) -> t
+// 
+//   to-java:
+//     t* -> <map(to-java)> t*

Added: spoofax-contrib/spoofax-lambda/trunk/trans/names.nd
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/names.nd	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,27 @@
+module names
+
+imports include/Spoofax-lambda
+	
+namespaces Module Variable
+	
+rules
+
+  Module(m, def*, e) :
+    defines Module m
+    scopes Variable
+
+  Imports(m) :
+    refers to Module m
+    imports Variable from Module m {transitive}
+    
+  Def(x, e) :
+    defines Variable x
+    		
+	Lam(x, e) :
+		defines Variable x in e
+		
+	Var(x) :
+		refers to Variable x
+
+
+    
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/trans/names.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/names.str	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,107 @@
+module names
+
+imports
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  lib/index-library.generated
+
+
+imports
+  include/Spoofax-lambda
+
+
+signature
+  constructors
+    Type        : DefDataKind
+    Import      : DefDataKind
+    Transitive  : ImportAnno
+    CurrentFile : ImportAnno
+
+  constructors
+    Module   : Namespace
+    Variable : Namespace
+
+
+rules
+
+  nam-get-scope-types :
+    Module(m, def*, e) -> [Variable()]
+
+  nam-get-definition-keys :
+    Module(m, def*, e) -> [m]
+
+  nam-get-definitions :
+    Module(m, def*, e) -> [(Module(), [m])]
+
+  nam-annotate-names(|paths__, path__):
+    Module(m, def*, e) -> <Module(nam-annotate-def(|path__), id, id)>
+
+  nam-unique :
+    Module(m, def*, e) -> <id>
+
+
+rules
+
+  nam-get-uses-keys :
+    Imports(m) -> [m]
+
+  nam-get-uses :
+    Imports(m) -> [(Module(), [m])]
+
+  nam-annotate-names(|paths__, path__):
+    Imports(m) -> <Imports(nam-annotate-use(|paths__, Module()))>
+
+  adjust-index-def-data(store__|namespace__, path__):
+    Imports(m) -> <store__> DefData(
+                              [Variable()|path__]
+                            , Import()
+                            , (m, [Transitive()])
+                            )
+
+
+rules
+
+  nam-get-definition-keys :
+    Def(x, e) -> [x]
+
+  nam-get-definitions :
+    Def(x, e) -> [(Variable(), [x])]
+
+  nam-annotate-names(|paths__, path__):
+    Def(x, e) -> <Def(nam-annotate-def(|path__), id)>
+
+  nam-unique :
+    Def(x, e) -> <id>
+
+
+rules
+
+  nam-get-definition-keys :
+    Lam(x, e) -> [x]
+
+  nam-get-definitions :
+    Lam(x, e) -> [ ( Variable()
+                   , [x, Anon(<new>)]
+                   )
+                 ]
+
+  nam-annotate-scopes(|path__):
+    Lam(x, e) -> <Lam(id, nam-annotate-scope(|path__))>
+
+  nam-annotate-names(|paths__, path__):
+    Lam(x, e) -> <Lam(nam-annotate-def(|path__), id)>
+
+  nam-unique :
+    Lam(x, e) -> <id>
+
+
+rules
+
+  nam-get-uses-keys :
+    Var(x) -> [x]
+
+  nam-get-uses :
+    Var(x) -> [(Variable(), [x])]
+
+  nam-annotate-names(|paths__, path__):
+    Var(x) -> <Var(nam-annotate-use(|paths__, Variable()))>
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/trans/refactor.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/refactor.str	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,31 @@
+module refactor
+
+imports
+  lib/refactor-common.generated
+  include/Spoofax-lambda
+  lib/editor-common.generated  
+  spoofax_lambda
+
+rules
+ 
+  rename-variable:
+    (newname, selected-name, position, ast, path, project-path) -> ([(ast, new-ast)], fatal-errors, errors, warnings)
+    with
+      new-ast  := <topdown(try(rename-var(|selected-name, newname)))> ast; 
+      (errors, warnings) := <semantic-constraint-issues> (ast, new-ast);
+      fatal-errors := []
+
+  rename-var(|old-name, new-name):
+    Lam(old-name, e) -> Lam(new-name, e)
+
+  rename-var(|old-name, new-name):
+    Def(old-name, e) -> Def(new-name, e)
+    
+  rename-var(|old-name, new-name):
+    Var(old-name) -> Var(new-name)
+    
+  semantic-constraint-issues:
+    (ast, new-ast) -> (<diff>(new-errors, errors), <diff>(new-warnings, warnings))
+    where
+    	(_, errors, warnings, _) := <editor-analyze> (ast, "", "");
+    	(_, new-errors, new-warnings, _) := <editor-analyze> (new-ast, "", "")

Added: spoofax-contrib/spoofax-lambda/trunk/trans/spoofax_lambda.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/spoofax_lambda.str	Sat Jul 21 13:38:08 2012	(r25223)
@@ -0,0 +1,183 @@
+module spoofax_lambda
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/Spoofax-lambda
+  lib/editor-common.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  lib/compilation-library.generated
+  lib/nbl-library.generated
+  names
+  check
+  generate
+  refactor
+  evaluate
+
+rules // Analysis
+  
+	// Analyzes the current program, returning a tuple with the analyzed AST, errors, warnings, notes and
+	// files that should be re-analyzed.
+  analyze:
+    (ast, path, project-path) -> (ast'', errors, warnings, notes, filesToAnalyze')
+    with
+      ast'                    := <id> ast; // Optional AST desugaring
+      (ast'', filesToAnalyze) := <analyze-top(|<language>)> (ast', path, project-path);
+      index-transaction(
+	      errors                := <collect-all(constraint-error, conc)> ast'';
+	      warnings              := <collect-all(constraint-warning, conc)> ast'';
+	      notes                 := <collect-all(constraint-note, conc)> ast''
+      );
+      filesToAnalyze'         := <index-filepairs-to-files> filesToAnalyze
+      
+  //constraint-error = fail
+  //constraint-warning = fail
+  constraint-note = fail
+
+  // Main entry point for analyzes, called when a single file is opened in the editor.
+  editor-analyze:
+    (ast, path, project-path) -> (ast', errors, warnings, notes)
+    with
+      editor-init;
+      (ast', errors, warnings, notes, filesToAnalyze) := <analyze> (ast, path, project-path);
+      <try(editor-queue-analysis)> <remove-all(?path)> filesToAnalyze
+      
+  // Main entry point for analyzes, called when multiple files have changed. 
+  editor-analyze:
+    files -> None()
+    where
+      not(is-tuple)
+    with
+    	index-setup(|<language>, [<project-path>], ".");
+      disable-commit-and-compile // Disable compilation during analysis.
+    with
+      editor-queue-analysis
+    with
+      // Enable and trigger compilation after all files have been analysed.
+      <enable-commit-and-compile> <language>;
+      <trigger-commit-and-compile> <language>
+      
+  // Called when current file is saved.
+  editor-save:
+    (_, _, _, _, _) -> None()
+    with
+      index-setup(|<language>, [<project-path>], ".");
+      <trigger-commit-and-compile> <language>
+
+rules // Editor services
+  
+  // Resolves a reference when the user control-clicks or presses F3 in the editor.
+  editor-resolve:
+    (node, position, ast, path, project-path) -> target
+    where
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      index-transaction(
+        target := <index-lookup> node
+      )
+
+  // Returns "hover help" information for a particular node in the editor.
+  // For references, this rule is invoked using the resolved term.
+  editor-hover:
+    (target, position, ast, path, project-path) -> $[[uriString]]
+    where
+      uriString := <index-uri-to-string> <index-uri> <index-find-key> target
+
+  // Completes an identifier when the user presses control-space
+  // (the completion identifier in the AST provides additional context information)
+  editor-complete:
+    (node, position, ast, path, project-path) -> proposals'
+    where
+      editor-init;
+      (ast', _) := <analyze-top(|<language>)> (ast, path, project-path);
+      item at COMPLETION(name) := <collect-one(?COMPLETION(_))> ast';
+      index-transaction(
+        (<index-lookup-all(|name)> item <+ ![]) => proposals
+      );
+      proposals' := <map(index-uri; index-uri-name)> proposals
+
+rules // Debugging
+  
+  // Prints the abstract syntax ATerm of a selection.
+  debug-generate-aterm:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"aterm")> path;
+      result   := selected
+      
+  // Prints the definition annotated abstract syntax ATerm of a selection.
+  debug-generate-deffed:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      filename := <guarantee-extension(|"aterm")> path;
+      result   := <analyze-defs> selected
+      
+  // Prints the analyzed annotated abstract syntax ATerm of a selection.
+  debug-generate-analyzed:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      editor-init;
+      filename := <guarantee-extension(|"analyzed.aterm")> path;
+      result   := <analyze-top(|<language>)> (selected, path, project-path)   
+      
+  // Prints the entries in the index of the current file.
+  debug-index-show-current-file:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      filename := <guarantee-extension(|"index.currentfile.aterm")> path;
+      result   := <index-get-all-in-file> path
+      
+  // Prints the entries in the index of all files.
+  debug-index-show-all-files:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      filename := <guarantee-extension(|"index.allfiles.aterm")> path;
+      result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
+
+  // Cleans current file from the index.
+  debug-index-clear-current:
+    (selected, position, ast, path, project-path)  -> None()
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      <index-clear-file> $[[project-path]/[path]]
+      
+  // Cleans all data from the index.
+  debug-index-clear:
+    (selected, position, ast, path, project-path)  -> None()
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      index-clear
+      
+  // Cleans all data from the index and re-analyzes every file.
+  debug-index-reload:
+    (selected, position, ast, path, project-path)  -> None()
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      index-reload
+    
+rules // Utility
+  
+  // Queue parallel analysis for given list of files.
+  editor-queue-analysis = 
+    not(?[]); queue-strategy(|"editor-parallel-analyze", "Analyzing files")
+      
+  // Executes parallel analysis using the index library.
+  editor-parallel-analyze:
+    files -> None()
+    with
+      index-parallel-analyze-files(analyze)
+
+rules // Evaluation
+  
+  editor-evaluate-module :
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      //index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      filename := <guarantee-extension(|"norm.lam")> path;
+      result   := <eval-pp> ast
+    
\ No newline at end of file

From E.Visser at tudelft.nl  Sat Jul 21 15:53:11 2012
From: E.Visser at tudelft.nl (Eelco Visser)
Date: Sat, 21 Jul 2012 13:53:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25224 - in
	spoofax-contrib/spoofax-lambda/trunk: test trans
Message-ID: <20120721135311.EC62FCC44A@mx4.tudelft.nl>

Author: visser
Date: Sat Jul 21 13:53:10 2012
New Revision: 25224
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25224&sc=1

Log:
import = defines (not a fix for importing variables)

Modified:
   spoofax-contrib/spoofax-lambda/trunk/test/example.lam
   spoofax-contrib/spoofax-lambda/trunk/test/example2.lam
   spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str
   spoofax-contrib/spoofax-lambda/trunk/trans/names.nd
   spoofax-contrib/spoofax-lambda/trunk/trans/names.str

Modified: spoofax-contrib/spoofax-lambda/trunk/test/example.lam
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/test/example.lam	Sat Jul 21 13:38:08 2012	(r25223)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example.lam	Sat Jul 21 13:53:10 2012	(r25224)
@@ -1,18 +1,16 @@
 module example
  
-//imports example2
-
 def zero = \s.(\z.z)
 def succ = \w.\y.\x. y @ (w @ y @ x) 
 def add  = \x.\y. x @ succ @ y 
 def one  = succ @ zero
 def two  = succ @ one
-//def two  = two
+def three = succ @ two
+def one = two
  
 eval
   succ @ (add @ one @ zero)
-   //w @ add @ two @ two 
-   
-   //(\x . (\x . x)) @ z
-   
- 
\ No newline at end of file
+  
+  //w @ add @ two @ two  
+  //(\x . (\x . x)) @ z
+   
\ No newline at end of file

Modified: spoofax-contrib/spoofax-lambda/trunk/test/example2.lam
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/test/example2.lam	Sat Jul 21 13:38:08 2012	(r25223)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example2.lam	Sat Jul 21 13:53:10 2012	(r25224)
@@ -4,6 +4,6 @@
 
 def three = succ @ two
 def four = succ @ three
-
-eval
-  zero
\ No newline at end of file
+ 
+eval 
+  zero 
\ No newline at end of file

Modified: spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str	Sat Jul 21 13:38:08 2012	(r25223)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str	Sat Jul 21 13:53:10 2012	(r25224)
@@ -18,7 +18,8 @@
     
   inline :
     Var(x) -> e
-    where e := <Definition>x
+    where debug(!"inlining: ");
+          e := <Definition>x
     
   beta-red = 
     innermost(beta <+ inline)
@@ -28,7 +29,7 @@
     
   eval :
     mod at Module(m, def*, e) -> Module($[[m]norm], [], <beta-red> e)
-    where <rename>mod
+    //where <rename>mod
     
   eval-pp =
     eval; pp-spoofax_lambda-string
@@ -64,43 +65,32 @@
   free-vars :
     Lam(x, e) -> <diff>(<free-vars>e, Var(x))
     
-rules // renaming
-      
-  rename =
-    alltd(rename-def <+ rename-lam <+ rename-var)
-    
-  rename-def :
-    Def(x, e1) -> Def(x, e2)
-    where e2 := <rename> e1;
-          rules( 
-            Binding    : x -> e2 
-            Definition : x -> e2
-          )
-    
-  rename-lam :
-    e0 at Lam(x, e1) -> Lam(y, e2)
-    where {| Rename 
-           : y := x{<new>}
-           ; rules( 
-               Rename  : x -> y 
-               Binding : y -> e0
-             )
-           ; e2 := <rename> e1
-           |}
-           
-  rename-var :
-    Var(x) -> Var(y)
-    where y := <Rename> x
+// rules // renaming
+//       
+//   rename =
+//     alltd(rename-def <+ rename-lam <+ rename-var)
+//     
+//   rename-def :
+//     Def(x, e1) -> Def(x, e2)
+//     where e2 := <rename> e1;
+//           rules( 
+//             Binding    : x -> e2 
+//             Definition : x -> e2
+//           )
+//     
+//   rename-lam :
+//     e0 at Lam(x, e1) -> Lam(y, e2)
+//     where {| Rename 
+//            : y := x{<new>}
+//            ; rules( 
+//                Rename  : x -> y 
+//                Binding : y -> e0
+//              )
+//            ; e2 := <rename> e1
+//            |}
+//            
+//   rename-var :
+//     Var(x) -> Var(y)
+//     where y := <Rename> x
+// 
 
-rules // checks and warnings
-  
-  constraint-error : 
-    Def(x, e1) -> (x, $[Multiple definitions for [x]])
-    where e2 := <Binding> x
-    where require(<eq>(e1,e2))
-  
-  constraint-warning :
-    Var(x) -> (x, $[[x] is a free variable])
-    where not(<index-lookup>x)
-    
-  require(s) = not(s)

Modified: spoofax-contrib/spoofax-lambda/trunk/trans/names.nd
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/names.nd	Sat Jul 21 13:38:08 2012	(r25223)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/names.nd	Sat Jul 21 13:53:10 2012	(r25224)
@@ -2,7 +2,7 @@
 
 imports include/Spoofax-lambda
 	
-namespaces Module Variable
+namespaces Module Import Variable
 	
 rules
 
@@ -10,9 +10,10 @@
     defines Module m
     scopes Variable
 
-  Imports(m) :
-    refers to Module m
-    imports Variable from Module m {transitive}
+  Imports(m) : 
+    defines Import m
+    //refers to Module m
+    imports Variable from Module m {current-file}
     
   Def(x, e) :
     defines Variable x

Modified: spoofax-contrib/spoofax-lambda/trunk/trans/names.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/names.str	Sat Jul 21 13:38:08 2012	(r25223)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/names.str	Sat Jul 21 13:53:10 2012	(r25224)
@@ -19,6 +19,7 @@
 
   constructors
     Module   : Namespace
+    Import   : Namespace
     Variable : Namespace
 
 
@@ -42,20 +43,23 @@
 
 rules
 
-  nam-get-uses-keys :
+  nam-get-definition-keys :
     Imports(m) -> [m]
 
-  nam-get-uses :
-    Imports(m) -> [(Module(), [m])]
+  nam-get-definitions :
+    Imports(m) -> [(Import(), [m])]
 
   nam-annotate-names(|paths__, path__):
-    Imports(m) -> <Imports(nam-annotate-use(|paths__, Module()))>
+    Imports(m) -> <Imports(nam-annotate-def(|path__))>
+
+  nam-unique :
+    Imports(m) -> <id>
 
   adjust-index-def-data(store__|namespace__, path__):
     Imports(m) -> <store__> DefData(
                               [Variable()|path__]
                             , Import()
-                            , (m, [Transitive()])
+                            , (m, [CurrentFile()])
                             )
 
 

From E.Visser at tudelft.nl  Sat Jul 21 16:41:16 2012
From: E.Visser at tudelft.nl (Eelco Visser)
Date: Sat, 21 Jul 2012 14:41:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25225 - in
	spoofax-contrib/spoofax-lambda/trunk: test trans
Message-ID: <20120721144116.7D987108C02E@mx3.tudelft.nl>

Author: visser
Date: Sat Jul 21 14:41:16 2012
New Revision: 25225
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25225&sc=1

Log:


Modified:
   spoofax-contrib/spoofax-lambda/trunk/test/example.lam
   spoofax-contrib/spoofax-lambda/trunk/test/example.norm.lam
   spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str
   spoofax-contrib/spoofax-lambda/trunk/trans/names.nd
   spoofax-contrib/spoofax-lambda/trunk/trans/names.str
   spoofax-contrib/spoofax-lambda/trunk/trans/spoofax_lambda.str

Modified: spoofax-contrib/spoofax-lambda/trunk/test/example.lam
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/test/example.lam	Sat Jul 21 13:53:10 2012	(r25224)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example.lam	Sat Jul 21 14:41:16 2012	(r25225)
@@ -6,7 +6,7 @@
 def one  = succ @ zero
 def two  = succ @ one
 def three = succ @ two
-def one = two
+//def one = two
  
 eval
   succ @ (add @ one @ zero)

Modified: spoofax-contrib/spoofax-lambda/trunk/test/example.norm.lam
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/test/example.norm.lam	Sat Jul 21 13:53:10 2012	(r25224)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example.norm.lam	Sat Jul 21 14:41:16 2012	(r25225)
@@ -1,4 +1,4 @@
 module examplenorm
 
 eval
-  \ h_46744 . \ j_46744 . h_46744 @ h_46744 @ j_46744
\ No newline at end of file
+  succ @ add @ one @ zero
\ No newline at end of file

Modified: spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str	Sat Jul 21 13:53:10 2012	(r25224)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str	Sat Jul 21 14:41:16 2012	(r25225)
@@ -5,6 +5,7 @@
   libstratego-gpp
   libstratego-aterm
   include/Spoofax-lambda 
+  names
   lib/editor-common.generated
   lib/index-library.generated
   lib/analysis-library.generated
@@ -19,7 +20,7 @@
   inline :
     Var(x) -> e
     where debug(!"inlining: ");
-          e := <Definition>x
+          e := <value-of> Var(x)
     
   beta-red = 
     innermost(beta <+ inline)
@@ -64,6 +65,21 @@
     
   free-vars :
     Lam(x, e) -> <diff>(<free-vars>e, Var(x))
+
+rules
+  
+  value-of :
+    Var(x) -> <debug(!"index-lookup: "); index-lookup; debug(!$[value of Var([x]): ])> x
+  
+  value-of :
+    Def(x, e) -> e
+  
+  adjust-index-def-data(store__|namespace__, path__):
+    Def(x, e) -> <store__> DefData(
+                             [namespace__|path__]
+                           , Value()
+                           , e
+                           )
     
 // rules // renaming
 //       

Modified: spoofax-contrib/spoofax-lambda/trunk/trans/names.nd
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/names.nd	Sat Jul 21 13:53:10 2012	(r25224)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/names.nd	Sat Jul 21 14:41:16 2012	(r25225)
@@ -2,7 +2,7 @@
 
 imports include/Spoofax-lambda
 	
-namespaces Module Import Variable
+namespaces Module Import Variable Value
 	
 rules
 
@@ -11,14 +11,14 @@
     scopes Variable
 
   Imports(m) : 
-    defines Import m
-    //refers to Module m
+    //defines Import m // this should not be necessary
+    refers to Module m
     imports Variable from Module m {current-file}
     
   Def(x, e) :
-    defines Variable x
-    		
-	Lam(x, e) :
+    defines Variable x of type e
+    
+  Lam(x, e) :
 		defines Variable x in e
 		
 	Var(x) :

Modified: spoofax-contrib/spoofax-lambda/trunk/trans/names.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/names.str	Sat Jul 21 13:53:10 2012	(r25224)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/names.str	Sat Jul 21 14:41:16 2012	(r25225)
@@ -21,6 +21,7 @@
     Module   : Namespace
     Import   : Namespace
     Variable : Namespace
+    Value    : Namespace
 
 
 rules
@@ -43,17 +44,14 @@
 
 rules
 
-  nam-get-definition-keys :
+  nam-get-uses-keys :
     Imports(m) -> [m]
 
-  nam-get-definitions :
-    Imports(m) -> [(Import(), [m])]
+  nam-get-uses :
+    Imports(m) -> [(Module(), [m])]
 
   nam-annotate-names(|paths__, path__):
-    Imports(m) -> <Imports(nam-annotate-def(|path__))>
-
-  nam-unique :
-    Imports(m) -> <id>
+    Imports(m) -> <Imports(nam-annotate-use(|paths__, Module()))>
 
   adjust-index-def-data(store__|namespace__, path__):
     Imports(m) -> <store__> DefData(
@@ -74,6 +72,16 @@
   nam-annotate-names(|paths__, path__):
     Def(x, e) -> <Def(nam-annotate-def(|path__), id)>
 
+  adjust-index-def-data(store__|namespace__, path__):
+    Def(x, e) -> <store__> DefData(
+                             [namespace__|path__]
+                           , Type()
+                           , e
+                           )
+
+  type-of :
+    Def(x, e) -> e
+
   nam-unique :
     Def(x, e) -> <id>
 

Modified: spoofax-contrib/spoofax-lambda/trunk/trans/spoofax_lambda.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/spoofax_lambda.str	Sat Jul 21 13:53:10 2012	(r25224)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/spoofax_lambda.str	Sat Jul 21 14:41:16 2012	(r25225)
@@ -33,8 +33,8 @@
       );
       filesToAnalyze'         := <index-filepairs-to-files> filesToAnalyze
       
-  //constraint-error = fail
-  //constraint-warning = fail
+  constraint-error = fail
+  constraint-warning = fail
   constraint-note = fail
 
   // Main entry point for analyzes, called when a single file is opened in the editor.

From gabrielkonat at gmail.com  Sat Jul 21 17:45:01 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Sat, 21 Jul 2012 15:45:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25226 -
	spoofax-imp/branches/unstable
Message-ID: <20120721154501.9DEE7CC46B@mx4.tudelft.nl>

Author: gkonat
Date: Sat Jul 21 15:44:59 2012
New Revision: 25226
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25226&sc=1

Log:
Branch for unstable (but not trunk) version.

Added:
   spoofax-imp/branches/unstable/   (props changed)
      - copied from r25199, spoofax-imp/trunk/

From gabrielkonat at gmail.com  Sat Jul 21 17:48:36 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Sat, 21 Jul 2012 15:48:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25227 -
	spoofax-imp/branches/unstable/org.strategoxt.imp.names/trans
Message-ID: <20120721154836.B1F63CC46B@mx4.tudelft.nl>

Author: gkonat
Date: Sat Jul 21 15:48:35 2012
New Revision: 25227
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25227&sc=1

Log:
Fix incorrect code generation for current-file.

Modified:
   spoofax-imp/branches/unstable/org.strategoxt.imp.names/trans/generate.str

Modified: spoofax-imp/branches/unstable/org.strategoxt.imp.names/trans/generate.str
==============================================================================
--- spoofax-imp/branches/unstable/org.strategoxt.imp.names/trans/generate.str	Sat Jul 21 15:44:59 2012	(r25226)
+++ spoofax-imp/branches/unstable/org.strategoxt.imp.names/trans/generate.str	Sat Jul 21 15:48:35 2012	(r25227)
@@ -329,15 +329,13 @@
 rules
   
   import-currentfile =
-    collect-one(?CurrentFile())
-  import-standard =
-    not(import-currentfile)
-  
+    one(?CurrentFile())
+
   to-import-rules(|term, clause*):
     ND-Import(NsRef(namespace), _, source, _, Annos(annos*)) ->
     [ ADJUST_DATA(term, LIST([TERM(namespace)], Var("path__")), "Import", TUPLE([source, LIST(<map(to-stratego-term)> annos*)]), clause*) ]
     where
-      <import-standard> annos*
+      not(<import-currentfile> annos*)
       
   to-import-rules(|term, clause*):
     ND-Import(NsRef(namespace), _, source, _, Annos(annos*)) ->

From E.Visser at tudelft.nl  Sat Jul 21 23:26:41 2012
From: E.Visser at tudelft.nl (Eelco Visser)
Date: Sat, 21 Jul 2012 21:26:41 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25228 - in
	spoofax-contrib/spoofax-lambda/trunk: editor test trans
Message-ID: <20120721212641.EA6267F8082@mx1.tudelft.nl>

Author: visser
Date: Sat Jul 21 21:26:40 2012
New Revision: 25228
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25228&sc=1

Log:
evaluation of lambda terms

Modified:
   spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Builders.esv
   spoofax-contrib/spoofax-lambda/trunk/test/example.lam
   spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str
   spoofax-contrib/spoofax-lambda/trunk/trans/names.nd
   spoofax-contrib/spoofax-lambda/trunk/trans/names.str
   spoofax-contrib/spoofax-lambda/trunk/trans/spoofax_lambda.str

Modified: spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Builders.esv
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Builders.esv	Sat Jul 21 15:48:35 2012	(r25227)
+++ spoofax-contrib/spoofax-lambda/trunk/editor/Spoofax-lambda-Builders.esv	Sat Jul 21 21:26:40 2012	(r25228)
@@ -24,6 +24,7 @@
   builder  : "Clear index"                         = debug-index-clear (meta) (source)                                      
   builder  : "Reload index"                        = debug-index-reload (meta) (source)  
   
+  builder : "Evaluate AST" = editor-evaluate-module-ast (meta) (openeditor) (realtime) (source)                                  
   builder : "Evaluate" = editor-evaluate-module (openeditor) (realtime) (source)                                  
                                                                                                                             
 

Modified: spoofax-contrib/spoofax-lambda/trunk/test/example.lam
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/test/example.lam	Sat Jul 21 15:48:35 2012	(r25227)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example.lam	Sat Jul 21 21:26:40 2012	(r25228)
@@ -1,4 +1,6 @@
 module example
+
+imports example2
  
 def zero = \s.(\z.z)
 def succ = \w.\y.\x. y @ (w @ y @ x) 

Modified: spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str	Sat Jul 21 15:48:35 2012	(r25227)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str	Sat Jul 21 21:26:40 2012	(r25228)
@@ -29,8 +29,8 @@
     beta-red; pp-spoofax_lambda-string
     
   eval :
-    mod at Module(m, def*, e) -> Module($[[m]norm], [], <beta-red> e)
-    //where <rename>mod
+    Module(m, def*, e) -> Module($[[m]norm], [], <beta-red> e)
+    where debug(!"eval: ")
     
   eval-pp =
     eval; pp-spoofax_lambda-string
@@ -68,45 +68,20 @@
 
 rules
   
+  value-of:
+    Def(uri) -> <debug(!"value-of Def(uri): "); index-get-data(|Value()); debug(!"  value-of:")> Def(uri)
+  
   value-of :
-    Var(x) -> <debug(!"index-lookup: "); index-lookup; debug(!$[value of Var([x]): ])> x
+    Var(x) -> <value-of> <debug(!"index-lookup: "); index-lookup; debug(!$[value of Var([x]): ])> x
   
   value-of :
     Def(x, e) -> e
   
-  adjust-index-def-data(store__|namespace__, path__):
-    Def(x, e) -> <store__> DefData(
-                             [namespace__|path__]
-                           , Value()
-                           , e
-                           )
-    
-// rules // renaming
-//       
-//   rename =
-//     alltd(rename-def <+ rename-lam <+ rename-var)
-//     
-//   rename-def :
-//     Def(x, e1) -> Def(x, e2)
-//     where e2 := <rename> e1;
-//           rules( 
-//             Binding    : x -> e2 
-//             Definition : x -> e2
-//           )
-//     
-//   rename-lam :
-//     e0 at Lam(x, e1) -> Lam(y, e2)
-//     where {| Rename 
-//            : y := x{<new>}
-//            ; rules( 
-//                Rename  : x -> y 
-//                Binding : y -> e0
-//              )
-//            ; e2 := <rename> e1
-//            |}
-//            
-//   rename-var :
-//     Var(x) -> Var(y)
-//     where y := <Rename> x
-// 
+  adjust-index-def-data(store|namespace, path):
+    Def(x, e) -> <store> DefData([namespace|path], Value(), e)
+    
+signature
+  constructors
+    Value: Namespace * Exp -> DefData
+    
 

Modified: spoofax-contrib/spoofax-lambda/trunk/trans/names.nd
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/names.nd	Sat Jul 21 15:48:35 2012	(r25227)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/names.nd	Sat Jul 21 21:26:40 2012	(r25228)
@@ -11,9 +11,9 @@
     scopes Variable
 
   Imports(m) : 
-    //defines Import m // this should not be necessary
+    defines Import m // this should not be necessary
     refers to Module m
-    imports Variable from Module m {current-file}
+    imports Variable from Module m {current-file}  
     
   Def(x, e) :
     defines Variable x of type e

Modified: spoofax-contrib/spoofax-lambda/trunk/trans/names.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/names.str	Sat Jul 21 15:48:35 2012	(r25227)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/names.str	Sat Jul 21 21:26:40 2012	(r25228)
@@ -44,6 +44,12 @@
 
 rules
 
+  nam-get-definition-keys :
+    Imports(m) -> [m]
+
+  nam-get-definitions :
+    Imports(m) -> [(Import(), [m])]
+
   nam-get-uses-keys :
     Imports(m) -> [m]
 
@@ -51,11 +57,14 @@
     Imports(m) -> [(Module(), [m])]
 
   nam-annotate-names(|paths__, path__):
-    Imports(m) -> <Imports(nam-annotate-use(|paths__, Module()))>
+    Imports(m) -> <Imports(nam-annotate-def(|path__))>
+
+  nam-unique :
+    Imports(m) -> <id>
 
   adjust-index-def-data(store__|namespace__, path__):
     Imports(m) -> <store__> DefData(
-                              [Variable()|path__]
+                              [Variable()|[<index-file-to-string> <index-get-current-file>]]
                             , Import()
                             , (m, [CurrentFile()])
                             )

Modified: spoofax-contrib/spoofax-lambda/trunk/trans/spoofax_lambda.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/spoofax_lambda.str	Sat Jul 21 15:48:35 2012	(r25227)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/spoofax_lambda.str	Sat Jul 21 21:26:40 2012	(r25228)
@@ -174,10 +174,25 @@
 
 rules // Evaluation
   
+  editor-evaluate-module-ast :
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      editor-init;
+      filename := <guarantee-extension(|"norm.aterm")> path;
+      debug(!"filename: ");
+      (ast',_,_,_)   := <editor-analyze> (ast, path, project-path);
+      debug(!"analyzed: ");
+      result := <eval> ast';
+      debug(!"normalized: ")
+
   editor-evaluate-module :
     (selected, position, ast, path, project-path) -> (filename, result)
     with
-      //index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      editor-init;
       filename := <guarantee-extension(|"norm.lam")> path;
-      result   := <eval-pp> ast
+      debug(!"filename: ");
+      (ast',_,_,_)   := <editor-analyze> (ast, path, project-path);
+      debug(!"analyzed: ");
+      result := <eval-pp> ast';
+      debug(!"normalized: ")
     
\ No newline at end of file

From E.Visser at tudelft.nl  Sat Jul 21 23:31:48 2012
From: E.Visser at tudelft.nl (Eelco Visser)
Date: Sat, 21 Jul 2012 21:31:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25229 - in
	spoofax-contrib/spoofax-lambda/trunk: test trans
Message-ID: <20120721213148.47BFB108C00A@mx3.tudelft.nl>

Author: visser
Date: Sat Jul 21 21:31:47 2012
New Revision: 25229
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25229&sc=1

Log:
evaluation works

Modified:
   spoofax-contrib/spoofax-lambda/trunk/test/example2.lam
   spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str

Modified: spoofax-contrib/spoofax-lambda/trunk/test/example2.lam
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/test/example2.lam	Sat Jul 21 21:26:40 2012	(r25228)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example2.lam	Sat Jul 21 21:31:47 2012	(r25229)
@@ -6,4 +6,4 @@
 def four = succ @ three
  
 eval 
-  zero 
\ No newline at end of file
+  succ @ three 
\ No newline at end of file

Modified: spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str	Sat Jul 21 21:26:40 2012	(r25228)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str	Sat Jul 21 21:31:47 2012	(r25229)
@@ -15,12 +15,11 @@
 rules // beta reduction
   
   beta : 
-    App(Lam(x, e1), e2) -> <substitute(|x,e2)>e1
+    App(Lam(x, e1), e2) -> <substitute(|x,e2)> e1
     
   inline :
     Var(x) -> e
-    where debug(!"inlining: ");
-          e := <value-of> Var(x)
+    where e := <value-of> Var(x)
     
   beta-red = 
     innermost(beta <+ inline)
@@ -30,7 +29,6 @@
     
   eval :
     Module(m, def*, e) -> Module($[[m]norm], [], <beta-red> e)
-    where debug(!"eval: ")
     
   eval-pp =
     eval; pp-spoofax_lambda-string
@@ -66,13 +64,13 @@
   free-vars :
     Lam(x, e) -> <diff>(<free-vars>e, Var(x))
 
-rules
+rules // values of definitions
   
   value-of:
-    Def(uri) -> <debug(!"value-of Def(uri): "); index-get-data(|Value()); debug(!"  value-of:")> Def(uri)
+    Def(uri) -> <index-get-data(|Value())> Def(uri)
   
   value-of :
-    Var(x) -> <value-of> <debug(!"index-lookup: "); index-lookup; debug(!$[value of Var([x]): ])> x
+    Var(x) -> <value-of> <index-lookup> x
   
   value-of :
     Def(x, e) -> e

From E.Visser at tudelft.nl  Sat Jul 21 23:37:17 2012
From: E.Visser at tudelft.nl (Eelco Visser)
Date: Sat, 21 Jul 2012 21:37:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25230 -
	spoofax-contrib/spoofax-lambda/trunk/test
Message-ID: <20120721213717.8B0472B8015@mx2.tudelft.nl>

Author: visser
Date: Sat Jul 21 21:37:17 2012
New Revision: 25230
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25230&sc=1

Log:
examples

Added:
   spoofax-contrib/spoofax-lambda/trunk/test/example1.lam
   spoofax-contrib/spoofax-lambda/trunk/test/example1.norm.lam
   spoofax-contrib/spoofax-lambda/trunk/test/example2.norm.lam
Modified:
   spoofax-contrib/spoofax-lambda/trunk/test/example2.lam

Added: spoofax-contrib/spoofax-lambda/trunk/test/example1.lam
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example1.lam	Sat Jul 21 21:37:17 2012	(r25230)
@@ -0,0 +1,7 @@
+module example1
+
+def id = \x.x
+
+eval
+  
+  id @ id
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/test/example1.norm.lam
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example1.norm.lam	Sat Jul 21 21:37:17 2012	(r25230)
@@ -0,0 +1,4 @@
+module example1norm
+
+eval
+  z
\ No newline at end of file

Modified: spoofax-contrib/spoofax-lambda/trunk/test/example2.lam
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/test/example2.lam	Sat Jul 21 21:31:47 2012	(r25229)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example2.lam	Sat Jul 21 21:37:17 2012	(r25230)
@@ -6,4 +6,5 @@
 def four = succ @ three
  
 eval 
-  succ @ three 
\ No newline at end of file
+  add @ one @ one
+  //succ @ (succ @ (succ @ zero))
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/test/example2.norm.lam
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example2.norm.lam	Sat Jul 21 21:37:17 2012	(r25230)
@@ -0,0 +1,4 @@
+module example2norm
+
+eval
+  \ i_19972 . \ k_19972 . i_19972 @ i_19972 @ k_19972
\ No newline at end of file

From E.Visser at tudelft.nl  Sat Jul 21 23:39:13 2012
From: E.Visser at tudelft.nl (Eelco Visser)
Date: Sat, 21 Jul 2012 21:39:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25231 -
	spoofax-contrib/spoofax-lambda/branches
Message-ID: <20120721213913.6D49FCC4CF@mx4.tudelft.nl>

Author: visser
Date: Sat Jul 21 21:39:13 2012
New Revision: 25231
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25231&sc=1

Log:


Added:
   spoofax-contrib/spoofax-lambda/branches/

From E.Visser at tudelft.nl  Mon Jul 23 01:34:17 2012
From: E.Visser at tudelft.nl (Eelco Visser)
Date: Sun, 22 Jul 2012 23:34:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25232 - in
	spoofax-contrib/spoofax-lambda/trunk: syntax test trans
Message-ID: <20120722233417.F2EF27F8086@mx1.tudelft.nl>

Author: visser
Date: Sun Jul 22 23:34:16 2012
New Revision: 25232
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25232&sc=1

Log:


Added:
   spoofax-contrib/spoofax-lambda/trunk/test/primitives.lam
   spoofax-contrib/spoofax-lambda/trunk/trans/types.str
Modified:
   spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.generated.pp
   spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.pp
   spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.sdf
   spoofax-contrib/spoofax-lambda/trunk/test/example.lam
   spoofax-contrib/spoofax-lambda/trunk/test/example.norm.lam
   spoofax-contrib/spoofax-lambda/trunk/test/example1.lam
   spoofax-contrib/spoofax-lambda/trunk/test/example1.norm.lam
   spoofax-contrib/spoofax-lambda/trunk/test/example2.lam
   spoofax-contrib/spoofax-lambda/trunk/test/example2.norm.lam
   spoofax-contrib/spoofax-lambda/trunk/test/test-example.spt
   spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str
   spoofax-contrib/spoofax-lambda/trunk/trans/names.nd
   spoofax-contrib/spoofax-lambda/trunk/trans/names.str
   spoofax-contrib/spoofax-lambda/trunk/trans/refactor.str
   spoofax-contrib/spoofax-lambda/trunk/trans/spoofax_lambda.str

Modified: spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.generated.pp
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.generated.pp	Sat Jul 21 21:39:13 2012	(r25231)
+++ spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.generated.pp	Sun Jul 22 23:34:16 2012	(r25232)
@@ -2,9 +2,12 @@
    Module             -- KW["module"] _1 _2 KW["eval"] _3,
    Module.2:iter-star -- _1,
    Imports            -- KW["imports"] _1,
-   Def                -- KW["def"] _1 KW["="] _2,
+   Def                -- KW["def"] _1 KW[":"] _2 KW["="] _3,
+   Decl               -- KW["def"] _1 KW[":"] _2,
    Var                -- _1,
-   Lam                -- KW["\\"] _1 KW["."] _2,
+   Lam                -- KW["\\"] _1 KW[":"] _2 KW["."] _3,
    App                -- _1 KW["@"] _2,
-   App                -- _1 _2
+   App                -- _1 _2,
+   Type               -- _1,
+   Fun                -- _1 KW["->"] _2
 ]
\ No newline at end of file

Modified: spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.pp
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.pp	Sat Jul 21 21:39:13 2012	(r25231)
+++ spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.pp	Sun Jul 22 23:34:16 2012	(r25232)
@@ -5,7 +5,6 @@
    Imports            -- H[KW["imports"] _1],
    Def                -- H[KW["def"] _1 KW["="] _2],
    Var                -- _1,
-   Lam                -- KW["\\"] _1 KW["."] _2,
-   App                -- _1 KW["@"] _2,
-   App                -- _1 _2
+   Lam                -- KW["\\"] _1 KW["."] "(" _2 ")",
+   App                -- H hs=1["(" _1 _2 ")"]
 ]
\ No newline at end of file

Modified: spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.sdf
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.sdf	Sat Jul 21 21:39:13 2012	(r25231)
+++ spoofax-contrib/spoofax-lambda/trunk/syntax/Spoofax-lambda.sdf	Sun Jul 22 23:34:16 2012	(r25232)
@@ -13,18 +13,21 @@
     Module                             -> Start
     "module" ID Definition* "eval" Exp -> Module {"Module"}
     "imports" ID                       -> Definition {"Imports"}
-    "def" ID "=" Exp                   -> Definition {"Def"}
-    
+    "def" ID ":" Type "=" Exp          -> Definition {"Def"}
+    "def" ID ":" Type                  -> Definition {"Decl"}
     
   sorts Exp
   context-free syntax
-    ID              -> Exp {"Var"}
-    "\\" ID "." Exp -> Exp {"Lam"}
-    Exp "@" Exp     -> Exp {"App",left}
-    Exp     Exp     -> Exp {"App",left,deprecated("use @")}
-    "(" Exp ")"     -> Exp {bracket}
+    ID                       -> Exp {"Var"}
+    "\\" ID ":" Type "." Exp -> Exp {"Lam"}
+    Exp "@" Exp              -> Exp {"App",left,deprecated("use @")}
+    Exp     Exp              -> Exp {"App",left}
+    "(" Exp ")"              -> Exp {bracket}
+    
+    ID                       -> Type {"Type"}
+    Type "->" Type           -> Type {"Fun", right}
     
   context-free priorities
     {left : Exp     Exp     -> Exp
             Exp "@" Exp     -> Exp }
-    > "\\" ID "." Exp -> Exp
+    > "\\" ID ":" Type "." Exp -> Exp

Modified: spoofax-contrib/spoofax-lambda/trunk/test/example.lam
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/test/example.lam	Sat Jul 21 21:39:13 2012	(r25231)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example.lam	Sun Jul 22 23:34:16 2012	(r25232)
@@ -2,16 +2,16 @@
 
 imports example2
  
-def zero = \s.(\z.z)
-def succ = \w.\y.\x. y @ (w @ y @ x) 
-def add  = \x.\y. x @ succ @ y 
-def one  = succ @ zero
-def two  = succ @ one
-def three = succ @ two
+def zero : (i -> i -> i) -> (i -> i -> i) = \s : i -> i -> i. (\z: i.z)  
+def succ : i -> i = \w: i.\y:i->i.\x:i. (y (w y x))
+def add : i -> i -> i  = \x:i->i.\y:i. (x succ y)
+def one : i -> i = succ zero
+def two : i -> i = succ one
+def three : i -> i = succ two 
 //def one = two
  
-eval
-  succ @ (add @ one @ zero)
+eval 
+  succ (add one zero)
   
   //w @ add @ two @ two  
   //(\x . (\x . x)) @ z

Modified: spoofax-contrib/spoofax-lambda/trunk/test/example.norm.lam
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/test/example.norm.lam	Sat Jul 21 21:39:13 2012	(r25231)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example.norm.lam	Sun Jul 22 23:34:16 2012	(r25232)
@@ -1,4 +1,4 @@
 module examplenorm
 
 eval
-  succ @ add @ one @ zero
\ No newline at end of file
+  \ o_34909 : i -> i . \ q_34909 : i . o_34909 o_34909 q_34909
\ No newline at end of file

Modified: spoofax-contrib/spoofax-lambda/trunk/test/example1.lam
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/test/example1.lam	Sat Jul 21 21:39:13 2012	(r25231)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example1.lam	Sun Jul 22 23:34:16 2012	(r25232)
@@ -1,7 +1,21 @@
 module example1
 
-def id = \x.x
+imports primitives
+
+def one : N = S O
+def two : N = S one
+
+def add : N -> N -> N = 
+      \x: N. \y: N. 
+        if(isO x) 
+          y 
+          (S (add (P x) y))
+      
+def mul : N -> N -> N =
+      \x: N. \y: N. 
+        if(isO x) 
+          O
+          (add y (mul (P x) y))
 
 eval
-  
-  id @ id
\ No newline at end of file
+  mul two two
\ No newline at end of file

Modified: spoofax-contrib/spoofax-lambda/trunk/test/example1.norm.lam
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/test/example1.norm.lam	Sat Jul 21 21:39:13 2012	(r25231)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example1.norm.lam	Sun Jul 22 23:34:16 2012	(r25232)
@@ -1,4 +1,4 @@
 module example1norm
 
 eval
-  z
\ No newline at end of file
+  ( S ( S ( S ( S O ) ) ) )
\ No newline at end of file

Modified: spoofax-contrib/spoofax-lambda/trunk/test/example2.lam
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/test/example2.lam	Sat Jul 21 21:39:13 2012	(r25231)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example2.lam	Sun Jul 22 23:34:16 2012	(r25232)
@@ -2,9 +2,9 @@
 
 imports example
 
-def three = succ @ two
-def four = succ @ three
+def three : i = succ two
+def four : i = succ three
  
 eval 
-  add @ one @ one
+  add one one
   //succ @ (succ @ (succ @ zero))
\ No newline at end of file

Modified: spoofax-contrib/spoofax-lambda/trunk/test/example2.norm.lam
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/test/example2.norm.lam	Sat Jul 21 21:39:13 2012	(r25231)
+++ spoofax-contrib/spoofax-lambda/trunk/test/example2.norm.lam	Sun Jul 22 23:34:16 2012	(r25232)
@@ -1,4 +1,4 @@
 module example2norm
 
 eval
-  \ i_19972 . \ k_19972 . i_19972 @ i_19972 @ k_19972
\ No newline at end of file
+  \ h_65766 : i -> i . \ j_65766 : i . h_65766 h_65766 j_65766
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/test/primitives.lam
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/test/primitives.lam	Sun Jul 22 23:34:16 2012	(r25232)
@@ -0,0 +1,11 @@
+module primitives
+
+def O : N
+def S : N -> N
+def P : N -> N
+def isO : N -> B
+def T : B
+def F : B
+def if : B -> N -> N -> N
+
+eval O
\ No newline at end of file

Modified: spoofax-contrib/spoofax-lambda/trunk/test/test-example.spt
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/test/test-example.spt	Sat Jul 21 21:39:13 2012	(r25231)
+++ spoofax-contrib/spoofax-lambda/trunk/test/test-example.spt	Sun Jul 22 23:34:16 2012	(r25232)
@@ -5,54 +5,58 @@
 
 language Spoofax-lambda
 
-setup Common [[
-  module 
-]]
-
 test Simple expression [[
+  module test
   eval 
     (\x . x)
 ]] 0 errors
 
 test Simple definition [[
-  def zero = \s.(\z.z)
+  module test
+    def zero = \s.(\z.z)
+  eval
+    zero
 ]] 0 errors
 
-test Resolve type fails [[
-  entity User {
-    name  : Strin
-    other : Use
-  }
-]] 2 errors
+test Resolve definition [[
+  module test
+    def [[zero]] = \s.(\z.z)
+  eval
+    [[zero]]
+]] resolve #2 to #1
 
-test Duplicate entity fails [[
-  entity User {}
-  entity User {}
-]] 2 errors
+test Resolve definition [[
+  module test
+    def [[zero]] = \s.(\z.z)
+  eval
+    \x . x @ [[zero]]
+]] resolve #2 to #1
 
-test Duplicate property fails [[
-  entity User {
-  	name : String
-  	name : String
-  }
+test Resolve variable [[
+  module test
+  eval
+    \[[x]] . [[x]]
+]] resolve #2 to #1
+
+test Duplicate definition fails [[
+  module test
+    def id = \x.x
+    def id = \y.y
+  eval id
 ]] 2 errors
 
-test Resolve type [[
-  entity [[User]] {}
-  
-  entity Owner {
-    owns : [[User]]
-  }
-]] resolve #2 to #1
+test Complete definition [[
+  module test
+    def id = \x.x
+  eval
+    [[i]]
+]] complete to "id"
+
+test Complete local variable [[
+  module test
+    def id = \local.[[loc]]
+  eval
+    [[i]]
+]] complete to "local"
+
 
-test Complete primitive type [[
-  entity User {
-    name : [[Str]]
-  }
-]] complete to "String"
-
-test Complete user type [[
-  entity User {
-    owner : [[Us]]
-  }
-]] complete to "User"

Modified: spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str	Sat Jul 21 21:39:13 2012	(r25231)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str	Sun Jul 22 23:34:16 2012	(r25232)
@@ -11,28 +11,28 @@
   lib/analysis-library.generated
   lib/analysis-library-internal.generated
   lib/nbl-library.generated
-    
-rules // beta reduction
   
-  beta : 
-    App(Lam(x, e1), e2) -> <substitute(|x,e2)> e1
-    
-  inline :
-    Var(x) -> e
-    where e := <value-of> Var(x)
-    
-  beta-red = 
-    innermost(beta <+ inline)
-    
-  beta-red-pp =
-    beta-red; pp-spoofax_lambda-string
-    
-  eval :
-    Module(m, def*, e) -> Module($[[m]norm], [], <beta-red> e)
+overlays
+  
+  T             = Var("T")
+  F             = Var("F")
+  O             = Var("O")
+  Succ(e)       = App(Var("S"), e)
+  P(e)          = App(Var("P"), e)
+  isO(e)        = App(Var("isO"), e)
+  If(e1,e2,e3)  = App(App(App(Var("if"), e1), e2), e3)
+    
+rules // reduction rules
+  
+  beta : App(Lam(x, t1, e1), e2) -> <substitute(|x,e2)> e1
+    
+  prm : P(O()) -> O()  
+  prm : P(Succ(e)) -> e 
+  prm : If(T(), e1, e2) -> e1  
+  prm : If(F(), e1, e2) -> e2  
+  prm : isO(O()) -> T()  
+  prm : isO(Succ(e)) -> F() 
     
-  eval-pp =
-    eval; pp-spoofax_lambda-string
-      
 rules // substitution
   
   substitute(|x, e1) :
@@ -43,16 +43,54 @@
     where <not(eq)>(x, y)
     
   substitute(|x,e1) :
-    e2 at Lam(x, e3) -> e2
+    e2 at Lam(x, t, e3) -> e2
        
   substitute(|x,e1) :
-    Lam(y, e2) -> Lam(z, <substitute(|y,Var(z)); substitute(|x, e1)>e2)
+    Lam(y, t, e2) -> Lam(z, t, <substitute(|y,Var(z)); substitute(|x, e1)>e2)
     where <not(eq)>(x,y)
     with  z := <new> y
     
   substitute(|x,e1) :
     App(e2, e3) -> App(<substitute(|x, e1)>e2, <substitute(|x,e1)>e3)
     
+strategies // evaluation
+
+  // head normal form
+  hnf(s) =
+    try(If(hnf(s), id, id) <+ App(hnf(s), id)); 
+    try(s; hnf(s))
+    
+  // applicative normal form
+  anf(s) =
+    try(If(anf(s), id, id) <+ App(anf(s), anf(s))); 
+    try(s; anf(s))
+     
+  anf = 
+    anf(prm <+ beta <+ definition-of)
+  
+  hnf = 
+    hnf(prm <+ beta <+ definition-of)
+  
+rules // evaluation in context
+    
+  definition-of:
+    Def(uri) -> <index-get-data(|Definition())> Def(uri)
+  
+  definition-of :
+    Var(x) -> <index-lookup; definition-of> x
+  
+  definition-of :
+    Def(x, t, e) -> e
+  
+  adjust-index-def-data(store|namespace, path):
+    Def(x, t, e) -> <store> DefData([namespace|path], Definition(), e)
+              
+  eval :
+    Module(m, def*, e) -> Module($[[m]norm], [], <anf> e)
+    
+  eval-pp =
+    eval; pp-spoofax_lambda-string
+    
 rules // free-variables
   
   free-vars :
@@ -62,24 +100,12 @@
     App(e1, e2) -> <union>(<free-vars> e1, <free-vars> e2)
     
   free-vars :
-    Lam(x, e) -> <diff>(<free-vars>e, Var(x))
-
-rules // values of definitions
-  
-  value-of:
-    Def(uri) -> <index-get-data(|Value())> Def(uri)
-  
-  value-of :
-    Var(x) -> <value-of> <index-lookup> x
+    Lam(x, t, e) -> <diff>(<free-vars>e, Var(x))
+    
+rules
   
-  value-of :
-    Def(x, e) -> e
+  pp : Type(i) -> i
+  pp : Fun(t1, t2) -> $[[<pp>t1] -> [<pp>t2]]
   
-  adjust-index-def-data(store|namespace, path):
-    Def(x, e) -> <store> DefData([namespace|path], Value(), e)
-    
-signature
-  constructors
-    Value: Namespace * Exp -> DefData
     
 

Modified: spoofax-contrib/spoofax-lambda/trunk/trans/names.nd
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/names.nd	Sat Jul 21 21:39:13 2012	(r25231)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/names.nd	Sun Jul 22 23:34:16 2012	(r25232)
@@ -2,7 +2,7 @@
 
 imports include/Spoofax-lambda
 	
-namespaces Module Import Variable Value
+namespaces Module Import Type Variable Definition
 	
 rules
 
@@ -14,12 +14,15 @@
     defines Import m // this should not be necessary
     refers to Module m
     imports Variable from Module m {current-file}  
+      
+  Decl(x, t) :
+    defines Variable x of type t
     
-  Def(x, e) :
-    defines Variable x of type e
+  Def(x, t, e) :
+    defines Variable x of type t
     
-  Lam(x, e) :
-		defines Variable x in e
+  Lam(x, t, e) :
+		defines Variable x of type t in e
 		
 	Var(x) :
 		refers to Variable x

Modified: spoofax-contrib/spoofax-lambda/trunk/trans/names.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/names.str	Sat Jul 21 21:39:13 2012	(r25231)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/names.str	Sun Jul 22 23:34:16 2012	(r25232)
@@ -18,10 +18,11 @@
     CurrentFile : ImportAnno
 
   constructors
-    Module   : Namespace
-    Import   : Namespace
-    Variable : Namespace
-    Value    : Namespace
+    Module     : Namespace
+    Import     : Namespace
+    Type       : Namespace
+    Variable   : Namespace
+    Definition : Namespace
 
 
 rules
@@ -73,47 +74,82 @@
 rules
 
   nam-get-definition-keys :
-    Def(x, e) -> [x]
+    Decl(x, t) -> [x]
 
   nam-get-definitions :
-    Def(x, e) -> [(Variable(), [x])]
+    Decl(x, t) -> [(Variable(), [x])]
 
   nam-annotate-names(|paths__, path__):
-    Def(x, e) -> <Def(nam-annotate-def(|path__), id)>
+    Decl(x, t) -> <Decl(nam-annotate-def(|path__), id)>
 
   adjust-index-def-data(store__|namespace__, path__):
-    Def(x, e) -> <store__> DefData(
-                             [namespace__|path__]
-                           , Type()
-                           , e
-                           )
+    Decl(x, t) -> <store__> DefData(
+                              [namespace__|path__]
+                            , Type()
+                            , t
+                            )
+
+  type-of :
+    Decl(x, t) -> t
+
+  nam-unique :
+    Decl(x, t) -> <id>
+
+
+rules
+
+  nam-get-definition-keys :
+    Def(x, t, e) -> [x]
+
+  nam-get-definitions :
+    Def(x, t, e) -> [(Variable(), [x])]
+
+  nam-annotate-names(|paths__, path__):
+    Def(x, t, e) -> <Def(nam-annotate-def(|path__), id, id)>
+
+  adjust-index-def-data(store__|namespace__, path__):
+    Def(x, t, e) -> <store__> DefData(
+                                [namespace__|path__]
+                              , Type()
+                              , t
+                              )
 
   type-of :
-    Def(x, e) -> e
+    Def(x, t, e) -> t
 
   nam-unique :
-    Def(x, e) -> <id>
+    Def(x, t, e) -> <id>
 
 
 rules
 
   nam-get-definition-keys :
-    Lam(x, e) -> [x]
+    Lam(x, t, e) -> [x]
 
   nam-get-definitions :
-    Lam(x, e) -> [ ( Variable()
-                   , [x, Anon(<new>)]
-                   )
-                 ]
+    Lam(x, t, e) -> [ ( Variable()
+                      , [x, Anon(<new>)]
+                      )
+                    ]
 
   nam-annotate-scopes(|path__):
-    Lam(x, e) -> <Lam(id, nam-annotate-scope(|path__))>
+    Lam(x, t, e) -> <Lam(id, id, nam-annotate-scope(|path__))>
 
   nam-annotate-names(|paths__, path__):
-    Lam(x, e) -> <Lam(nam-annotate-def(|path__), id)>
+    Lam(x, t, e) -> <Lam(nam-annotate-def(|path__), id, id)>
+
+  adjust-index-def-data(store__|namespace__, path__):
+    Lam(x, t, e) -> <store__> DefData(
+                                [namespace__|path__]
+                              , Type()
+                              , t
+                              )
+
+  type-of :
+    Lam(x, t, e) -> t
 
   nam-unique :
-    Lam(x, e) -> <id>
+    Lam(x, t, e) -> <id>
 
 
 rules

Modified: spoofax-contrib/spoofax-lambda/trunk/trans/refactor.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/refactor.str	Sat Jul 21 21:39:13 2012	(r25231)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/refactor.str	Sun Jul 22 23:34:16 2012	(r25232)
@@ -16,10 +16,10 @@
       fatal-errors := []
 
   rename-var(|old-name, new-name):
-    Lam(old-name, e) -> Lam(new-name, e)
+    Lam(old-name, t, e) -> Lam(new-name, t, e)
 
   rename-var(|old-name, new-name):
-    Def(old-name, e) -> Def(new-name, e)
+    Def(old-name, t, e) -> Def(new-name, t, e)
     
   rename-var(|old-name, new-name):
     Var(old-name) -> Var(new-name)

Modified: spoofax-contrib/spoofax-lambda/trunk/trans/spoofax_lambda.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/spoofax_lambda.str	Sat Jul 21 21:39:13 2012	(r25231)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/spoofax_lambda.str	Sun Jul 22 23:34:16 2012	(r25232)
@@ -16,7 +16,8 @@
   generate
   refactor
   evaluate
-
+  types
+  
 rules // Analysis
   
 	// Analyzes the current program, returning a tuple with the analyzed AST, errors, warnings, notes and
@@ -85,6 +86,13 @@
     where
       uriString := <index-uri-to-string> <index-uri> <index-find-key> target
 
+  // editor-hover:
+  //   (target, position, ast, path, project-path) -> $[[tpp]]
+  //   where
+  //     // <debug(!"editor-hover: ")> target;
+  //     t := <type-of>target;
+  //     tpp := <pp> t
+      
   // Completes an identifier when the user presses control-space
   // (the completion identifier in the AST provides additional context information)
   editor-complete:
@@ -179,20 +187,14 @@
     with
       editor-init;
       filename := <guarantee-extension(|"norm.aterm")> path;
-      debug(!"filename: ");
       (ast',_,_,_)   := <editor-analyze> (ast, path, project-path);
-      debug(!"analyzed: ");
-      result := <eval> ast';
-      debug(!"normalized: ")
+      result := <eval> ast'
 
   editor-evaluate-module :
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       editor-init;
       filename := <guarantee-extension(|"norm.lam")> path;
-      debug(!"filename: ");
       (ast',_,_,_)   := <editor-analyze> (ast, path, project-path);
-      debug(!"analyzed: ");
-      result := <eval-pp> ast';
-      debug(!"normalized: ")
-    
\ No newline at end of file
+      result := <eval-pp> ast'
+          
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/trunk/trans/types.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/trunk/trans/types.str	Sun Jul 22 23:34:16 2012	(r25232)
@@ -0,0 +1,51 @@
+module types
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/Spoofax-lambda 
+  names
+  lib/editor-common.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  lib/nbl-library.generated
+  evaluate
+
+rules
+  
+  type-of:
+    Def(uri) -> <index-get-data(|Type())> Def(uri)
+  
+  type-of:
+    Def(x, t, e) -> t
+    
+  type-of:
+    Lam(x, t, e) -> Fun(t, <type-of>e)
+    
+  type-of:
+    Var(x) -> <index-lookup; type-of> x
+    
+  type-of:
+    App(e1, e2) -> t2
+    where Fun(t1, t2) := <type-of> e1;
+          <eq>(t1, <type-of> e2)
+    
+rules
+
+  constraint-error:
+    Def(x, t1, e) -> (t1, $[Type of expression [<pp>t2] does not comply with declaration [<pp>t1]])
+    where t2 := <type-of> e;
+          not(<eq>(t2, t1))
+            
+  constraint-error:
+    App(e1, e2) -> (e1, $[Application of term that is not a function])
+    where t := <type-of> e1;
+          not(Fun(t1,t2) := t)
+          
+  constraint-error:
+    App(e1, e2) -> (e2, $[Type of argument does not match type of function argument])
+    where Fun(t1, t2) := <type-of> e1;
+          t3 := <type-of> e2;
+          not(<eq>(t1, t3))
\ No newline at end of file

From oskarvanrest at gmail.com  Mon Jul 23 05:54:07 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 23 Jul 2012 03:54:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25233 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual
Message-ID: <20120723035407.866387F82AE@mx1.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 23 03:54:05 2012
New Revision: 25233
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25233&sc=1

Log:


Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/pom.xml

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/pom.xml
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/pom.xml	Sun Jul 22 23:34:16 2012	(r25232)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/pom.xml	Mon Jul 23 03:54:05 2012	(r25233)
@@ -11,4 +11,34 @@
 	</parent>
 	<artifactId>org.behaviorengineering.combe.textual</artifactId>
 	<packaging>eclipse-plugin</packaging>
+	<build>
+	    <plugins>
+	        <plugin>
+	            <groupId>org.eclipse.tycho.extras</groupId>
+	            <artifactId>tycho-eclipserun-plugin</artifactId>
+	            <version>${tycho-version}</version>
+	            <configuration>
+	                <appArgLine>-application org.eclipse.ant.core.antRunner -buildfile build.main.xml</appArgLine>
+	                <dependencies>
+	                    <dependency>
+	                        <artifactId>org.apache.ant</artifactId>
+	                        <type>eclipse-plugin</type>
+	                    </dependency>
+	                    <dependency>
+	                        <artifactId>org.eclipse.help.base</artifactId>
+	                        <type>eclipse-plugin</type>
+	                    </dependency>
+	                </dependencies>
+	            </configuration>
+	            <executions>
+	                <execution>
+	                    <goals>
+	                        <goal>eclipse-run</goal>
+	                    </goals>
+	                    <phase>compile</phase>
+	                </execution>
+	            </executions>
+	        </plugin>
+	    </plugins>
+	</build>
 </project>
\ No newline at end of file

From oskarvanrest at gmail.com  Mon Jul 23 06:30:59 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 23 Jul 2012 04:30:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25234 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature
Message-ID: <20120723043059.4624C108C004@mx3.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 23 04:30:58 2012
New Revision: 25234
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25234&sc=1

Log:


Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/   (props changed)
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/feature.xml

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/feature.xml
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/feature.xml	Mon Jul 23 03:54:05 2012	(r25233)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/feature.xml	Mon Jul 23 04:30:58 2012	(r25234)
@@ -63,4 +63,11 @@
          version="0.0.0"
          unpack="false"/>
 
+   <plugin
+         id="org.spoofax.graphical"
+         download-size="0"
+         install-size="0"
+         version="0.0.0"
+         unpack="false"/>
+
 </feature>

From oskarvanrest at gmail.com  Mon Jul 23 08:40:13 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 23 Jul 2012 06:40:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25235 - in
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual:
	. META-INF
Message-ID: <20120723064013.4F44B2B8017@mx2.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 23 06:40:11 2012
New Revision: 25235
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25235&sc=1

Log:
https://issues.sonatype.org/browse/TYCHO-555

Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/META-INF/MANIFEST.MF
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/pom.xml

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/META-INF/MANIFEST.MF
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/META-INF/MANIFEST.MF	Mon Jul 23 04:30:58 2012	(r25234)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/META-INF/MANIFEST.MF	Mon Jul 23 06:40:11 2012	(r25235)
@@ -21,3 +21,4 @@
 Bundle-ActivationPolicy: lazy
 Export-Package: org.behaviorengineering.combe.textual
 Eclipse-RegisterBuddy: org.strategoxt.imp.runtime
+Eclipse-BundleShape: dir

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/pom.xml
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/pom.xml	Mon Jul 23 04:30:58 2012	(r25234)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.textual/pom.xml	Mon Jul 23 06:40:11 2012	(r25235)
@@ -35,7 +35,7 @@
 	                    <goals>
 	                        <goal>eclipse-run</goal>
 	                    </goals>
-	                    <phase>compile</phase>
+	                    <phase>generate-resources</phase>
 	                </execution>
 	            </executions>
 	        </plugin>

From oskarvanrest at gmail.com  Mon Jul 23 08:43:21 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 23 Jul 2012 06:43:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25236 -
	experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature
Message-ID: <20120723064321.AF796108C004@mx3.tudelft.nl>

Author: OskarVanRest
Date: Mon Jul 23 06:43:21 2012
New Revision: 25236
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25236&sc=1

Log:


Modified:
   experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/feature.xml

Modified: experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/feature.xml
==============================================================================
--- experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/feature.xml	Mon Jul 23 06:40:11 2012	(r25235)
+++ experimental/graphical-editor/combe/trunk/org.behaviorengineering.combe.feature/feature.xml	Mon Jul 23 06:43:21 2012	(r25236)
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <feature
       id="org.behaviorengineering.combe.feature"
-      label="Feature"
+      label="ComBE"
       version="1.0.0.qualifier">
 
-   <description url="http://www.example.com/description">
-      [Enter Feature Description here.]
+   <description url="http://www.behaviorengineering.org/">
+      ComBE
    </description>
 
    <copyright url="http://www.example.com/copyright">

From g.h.wachsmuth at tudelft.nl  Mon Jul 23 09:46:13 2012
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Mon, 23 Jul 2012 07:46:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25237 - in
	spoofax-contrib/spoofax-lambda/branches/nbl-evolution: .
	META-INF lib trans
Message-ID: <20120723074613.DA1D02B8002@mx2.tudelft.nl>

Author: GuidoWachsmuth
Date: Mon Jul 23 07:46:12 2012
New Revision: 25237
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25237&sc=1

Log:
implementation using evolved version of NBL

Added:
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/
      - copied from r25234, spoofax-contrib/spoofax-lambda/trunk/
Deleted:
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/analysis-auto.generated.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/analysis-library-internal.generated.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/analysis-library.generated.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/compilation-library.generated.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/index-library.generated.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/nbl-library.generated.str
Modified:
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/.project
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/META-INF/MANIFEST.MF
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/check.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/evaluate.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/generate.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/names.nd
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/names.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/spoofax_lambda.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/types.str

Modified: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/.project
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/.project	Mon Jul 23 04:30:58 2012	(r25234)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/.project	Mon Jul 23 07:46:12 2012	(r25237)
@@ -1,37 +1,38 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-
+<?xml version="1.0" encoding="UTF-8"?>
 <projectDescription>
-      <name>spoofaxlambda</name>
-      <comment></comment>
-      <buildSpec>
-        <buildCommand>
-          <name>org.eclipse.jdt.core.javabuilder</name>
-          <arguments>
-          </arguments>
-        </buildCommand>
-        <buildCommand>
-            <name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
-            <triggers>full,incremental,</triggers>
-            <arguments>
-                <dictionary>
-                    <key>LaunchConfigHandle</key>
-                    <value>&lt;project&gt;/.externalToolBuilders/Spoofax-lambda build.main.xml.launch</value>
-                </dictionary>
-            </arguments>
-        </buildCommand>
-        <buildCommand>
-          <name>org.eclipse.pde.ManifestBuilder</name>
-          <arguments>
-          </arguments>
-        </buildCommand>
-        <buildCommand>
-          <name>org.eclipse.pde.SchemaBuilder</name>
-          <arguments>
-          </arguments>
-        </buildCommand>
-      </buildSpec>
-      <natures>
-        <nature>org.eclipse.pde.PluginNature</nature>
-        <nature>org.eclipse.jdt.core.javanature</nature>
-      </natures>
-    </projectDescription>
\ No newline at end of file
+	<name>spoofax-lambda</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+			<triggers>full,incremental,</triggers>
+			<arguments>
+				<dictionary>
+					<key>LaunchConfigHandle</key>
+					<value>&lt;project&gt;/.externalToolBuilders/Spoofax-lambda build.main.xml.launch</value>
+				</dictionary>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

Modified: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/META-INF/MANIFEST.MF
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/META-INF/MANIFEST.MF	Mon Jul 23 04:30:58 2012	(r25234)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/META-INF/MANIFEST.MF	Mon Jul 23 07:46:12 2012	(r25237)
@@ -1,7 +1,7 @@
 Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: Spoofaxlambda Plug-in
-Bundle-SymbolicName: spoofaxlambda; singleton:=true
+Bundle-SymbolicName: spoofax-lambda;singleton:=true
 Bundle-Version: 1.0.0
 Bundle-Activator: spoofaxlambda.Activator
 Import-Package: org.osgi.framework;version="1.3.0"

Modified: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/check.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/check.str	Mon Jul 23 04:30:58 2012	(r25234)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/check.str	Mon Jul 23 07:46:12 2012	(r25237)
@@ -3,11 +3,6 @@
 imports
   libstratego-lib
   include/Spoofax-lambda
-  lib/editor-common.generated
-  lib/index-library.generated
-  lib/analysis-library.generated
-  lib/analysis-library-internal.generated
-  lib/nbl-library.generated
 
 rules // Other
   

Modified: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/evaluate.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/evaluate.str	Mon Jul 23 04:30:58 2012	(r25234)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/evaluate.str	Mon Jul 23 07:46:12 2012	(r25237)
@@ -2,15 +2,15 @@
 
 imports
   libstratego-lib
-  libstratego-gpp
-  libstratego-aterm
   include/Spoofax-lambda 
-  names
   lib/editor-common.generated
-  lib/index-library.generated
-  lib/analysis-library.generated
-  lib/analysis-library-internal.generated
-  lib/nbl-library.generated
+  lib/index-library
+  lib/analysis-library
+  lib/analysis-library-internal
+ 
+signature constructors
+
+  Definition: DefDataKind
   
 overlays
   
@@ -72,12 +72,9 @@
     hnf(prm <+ beta <+ definition-of)
   
 rules // evaluation in context
-    
-  definition-of:
-    Def(uri) -> <index-get-data(|Definition())> Def(uri)
-  
+     
   definition-of :
-    Var(x) -> <index-lookup; definition-of> x
+    Var(x) -> <index-lookup; index-get-data(|Definition())> x
   
   definition-of :
     Def(x, t, e) -> e

Modified: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/generate.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/generate.str	Mon Jul 23 04:30:58 2012	(r25234)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/generate.str	Mon Jul 23 07:46:12 2012	(r25237)
@@ -6,7 +6,6 @@
   libstratego-aterm
   include/Spoofax-lambda
   lib/editor-common.generated
-  lib/compilation-library.generated
 
 rules // Incremental code generation of project using compilation library.
       

Modified: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/names.nd
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/names.nd	Mon Jul 23 04:30:58 2012	(r25234)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/names.nd	Mon Jul 23 07:46:12 2012	(r25237)
@@ -2,18 +2,16 @@
 
 imports include/Spoofax-lambda
 	
-namespaces Module Import Type Variable Definition
+namespaces Module Variable
 	
-rules
+binding rules
 
   Module(m, def*, e) :
     defines Module m
-    scopes Variable
+    scope for Variable
 
   Imports(m) : 
-    defines Import m // this should not be necessary
-    refers to Module m
-    imports Variable from Module m {current-file}  
+    imports Variable from Module m into subsequent scope  
       
   Decl(x, t) :
     defines Variable x of type t
@@ -26,6 +24,3 @@
 		
 	Var(x) :
 		refers to Variable x
-
-
-    
\ No newline at end of file

Modified: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/names.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/names.str	Mon Jul 23 04:30:58 2012	(r25234)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/names.str	Mon Jul 23 07:46:12 2012	(r25237)
@@ -1,9 +1,9 @@
 module names
 
 imports
-  lib/analysis-library.generated
-  lib/analysis-library-internal.generated
-  lib/index-library.generated
+  lib/analysis-library
+  lib/analysis-library-internal
+  lib/index-library
 
 
 imports
@@ -12,12 +12,6 @@
 
 signature
   constructors
-    Type        : DefDataKind
-    Import      : DefDataKind
-    Transitive  : ImportAnno
-    CurrentFile : ImportAnno
-
-  constructors
     Module     : Namespace
     Import     : Namespace
     Type       : Namespace
@@ -27,138 +21,108 @@
 
 rules
 
-  nam-get-scope-types :
-    Module(m, def*, e) -> [Variable()]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Module(m, def*, e) -> ( <Module(nam-annotate-def(|uri0), id, id)>
+                          , [Def(uri0)]
+                          , []
+                          )
+    where uri0 := [Module(), m|<lookup-index-path> (Module(), paths__)]
 
   nam-get-definition-keys :
     Module(m, def*, e) -> [m]
 
-  nam-get-definitions :
-    Module(m, def*, e) -> [(Module(), [m])]
-
-  nam-annotate-names(|paths__, path__):
-    Module(m, def*, e) -> <Module(nam-annotate-def(|path__), id, id)>
-
-  nam-unique :
-    Module(m, def*, e) -> <id>
+  nam-get-scope-types :
+    Module(m, def*, e) -> [ (Module(), m, Variable(), anon0)
+                          ]
+    where anon0 := Anon(<newname> "anon")
 
 
 rules
 
-  nam-get-definition-keys :
-    Imports(m) -> [m]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Imports(m) -> ( <Imports(!import0)>
+                  , []
+                  , [DefData(uri1, Import(), import0)]
+                  )
+    where import0 := <nam-annotate-use(|paths'__, [Module()])> m
+    where uri1 := [Variable(), subsequent__|<lookup-index-path> (Variable(), paths'__)]
 
-  nam-get-definitions :
-    Imports(m) -> [(Import(), [m])]
-
-  nam-get-uses-keys :
+  nam-get-use-keys :
     Imports(m) -> [m]
 
-  nam-get-uses :
-    Imports(m) -> [(Module(), [m])]
-
-  nam-annotate-names(|paths__, path__):
-    Imports(m) -> <Imports(nam-annotate-def(|path__))>
+  nam-resolve(target__|):
+    Imports(m) -> [Regular(Module(), m)]
+    where <target__> m
 
-  nam-unique :
-    Imports(m) -> <id>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Imports(m) -> <store__> DefData(
-                              [Variable()|[<index-file-to-string> <index-get-current-file>]]
-                            , Import()
-                            , (m, [CurrentFile()])
-                            )
+  nam-ordered-def :
+    Imports(m) -> [Variable()]
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Decl(x, t) -> ( <Decl(nam-annotate-def(|uri2), id)>
+                  , [Def(uri2)]
+                  , []
+                  )
+    where uri2 := [Variable(), x|<lookup-index-path> (Variable(), paths__)]
+
   nam-get-definition-keys :
     Decl(x, t) -> [x]
 
-  nam-get-definitions :
-    Decl(x, t) -> [(Variable(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Decl(x, t) -> <Decl(nam-annotate-def(|path__), id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Decl(x, t) -> <store__> DefData(
-                              [namespace__|path__]
-                            , Type()
-                            , t
-                            )
-
-  type-of :
-    Decl(x, t) -> t
-
-  nam-unique :
-    Decl(x, t) -> <id>
+  nam-get-type :
+    Decl(x, t) -> (x, t)
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Def(x, t, e) -> ( <Def(nam-annotate-def(|uri3), id, id)>
+                    , [Def(uri3)]
+                    , []
+                    )
+    where uri3 := [Variable(), x|<lookup-index-path> (Variable(), paths__)]
+
   nam-get-definition-keys :
     Def(x, t, e) -> [x]
 
-  nam-get-definitions :
-    Def(x, t, e) -> [(Variable(), [x])]
-
-  nam-annotate-names(|paths__, path__):
-    Def(x, t, e) -> <Def(nam-annotate-def(|path__), id, id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Def(x, t, e) -> <store__> DefData(
-                                [namespace__|path__]
-                              , Type()
-                              , t
-                              )
-
-  type-of :
-    Def(x, t, e) -> t
-
-  nam-unique :
-    Def(x, t, e) -> <id>
+  nam-get-type :
+    Def(x, t, e) -> (x, t)
 
 
 rules
 
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Lam(x, t, e) -> ( <Lam(
+                         nam-annotate-def(|uri4)
+                       , id
+                       , nam-annotate-scope(|[uri4])
+                       )>
+                    , [Def(uri4)]
+                    , []
+                    )
+    where uri4 := [Variable(), x, Anon(<newname> "anon")|<lookup-index-path> (Variable(), paths__)]
+
   nam-get-definition-keys :
     Lam(x, t, e) -> [x]
 
-  nam-get-definitions :
-    Lam(x, t, e) -> [ ( Variable()
-                      , [x, Anon(<new>)]
-                      )
-                    ]
-
-  nam-annotate-scopes(|path__):
-    Lam(x, t, e) -> <Lam(id, id, nam-annotate-scope(|path__))>
-
-  nam-annotate-names(|paths__, path__):
-    Lam(x, t, e) -> <Lam(nam-annotate-def(|path__), id, id)>
-
-  adjust-index-def-data(store__|namespace__, path__):
-    Lam(x, t, e) -> <store__> DefData(
-                                [namespace__|path__]
-                              , Type()
-                              , t
-                              )
-
-  type-of :
-    Lam(x, t, e) -> t
-
-  nam-unique :
-    Lam(x, t, e) -> <id>
+  nam-get-type :
+    Lam(x, t, e) -> (x, t)
 
 
 rules
 
-  nam-get-uses-keys :
-    Var(x) -> [x]
+  nam-get-definitions(|paths__, paths'__, subsequent__):
+    Var(x) -> ( <Var(
+                   nam-annotate-use(|paths'__, [Variable()])
+                 )>
+              , []
+              , []
+              )
 
-  nam-get-uses :
-    Var(x) -> [(Variable(), [x])]
+  nam-get-use-keys :
+    Var(x) -> [x]
 
-  nam-annotate-names(|paths__, path__):
-    Var(x) -> <Var(nam-annotate-use(|paths__, Variable()))>
\ No newline at end of file
+  nam-resolve(target__|):
+    Var(x) -> [Regular(Variable(), x)]
+    where <target__> x
\ No newline at end of file

Modified: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/spoofax_lambda.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/spoofax_lambda.str	Mon Jul 23 04:30:58 2012	(r25234)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/spoofax_lambda.str	Mon Jul 23 07:46:12 2012	(r25237)
@@ -6,11 +6,10 @@
   libstratego-aterm
   include/Spoofax-lambda
   lib/editor-common.generated
-  lib/index-library.generated
-  lib/analysis-library.generated
-  lib/analysis-library-internal.generated
-  lib/compilation-library.generated
-  lib/nbl-library.generated
+  lib/index-library
+  lib/analysis-library
+  lib/analysis-library-internal
+  lib/compilation-library
   names
   check
   generate
@@ -96,15 +95,12 @@
   // Completes an identifier when the user presses control-space
   // (the completion identifier in the AST provides additional context information)
   editor-complete:
-    (node, position, ast, path, project-path) -> proposals'
+    (node, position, ast, path, project-path) -> proposals
     where
       editor-init;
       (ast', _) := <analyze-top(|<language>)> (ast, path, project-path);
-      item at COMPLETION(name) := <collect-one(?COMPLETION(_))> ast';
-      index-transaction(
-        (<index-lookup-all(|name)> item <+ ![]) => proposals
-      );
-      proposals' := <map(index-uri; index-uri-name)> proposals
+      _{defs}   := <collect-one(?COMPLETION(_))> ast';
+      proposals := <filter(?Def([_, <id>|_]))> defs
 
 rules // Debugging
   

Modified: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/types.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/trunk/trans/types.str	Mon Jul 23 04:30:58 2012	(r25234)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/types.str	Mon Jul 23 07:46:12 2012	(r25237)
@@ -2,21 +2,11 @@
 
 imports
   libstratego-lib
-  libstratego-gpp
-  libstratego-aterm
   include/Spoofax-lambda 
-  names
-  lib/editor-common.generated
-  lib/index-library.generated
-  lib/analysis-library.generated
-  lib/analysis-library-internal.generated
-  lib/nbl-library.generated
+  lib/analysis-library
   evaluate
-
-rules
   
-  type-of:
-    Def(uri) -> <index-get-data(|Type())> Def(uri)
+rules
   
   type-of:
     Def(x, t, e) -> t
@@ -25,7 +15,7 @@
     Lam(x, t, e) -> Fun(t, <type-of>e)
     
   type-of:
-    Var(x) -> <index-lookup; type-of> x
+    Var(x) -> <index-type-of> x
     
   type-of:
     App(e1, e2) -> t2

From g.h.wachsmuth at tudelft.nl  Mon Jul 23 14:53:43 2012
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Mon, 23 Jul 2012 12:53:43 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25238 - in
	spoofax-contrib/spoofax-lambda/branches/nbl-evolution: lib
	test trans
Message-ID: <20120723125343.5F2CE2B801E@mx2.tudelft.nl>

Author: GuidoWachsmuth
Date: Mon Jul 23 12:53:43 2012
New Revision: 25238
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25238&sc=1

Log:
evolved NBL version of lambda

Added:
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/analysis-library-internal.generated.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/analysis-library-internal.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/analysis-library.generated.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/analysis-library.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/compilation-library.generated.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/compilation-library.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/index-library.generated.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/index-library.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/nbl-library.generated.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/test/example1.analyzed.aterm
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/test/example1.aterm
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/test/example1.index.currentfile.aterm
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/names.aterm
Modified:
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/test/example1.lam
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/test/example1.norm.lam
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/evaluate.str
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/names.nd
   spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/names.str

Added: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/analysis-library-internal.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/analysis-library-internal.generated.str	Mon Jul 23 12:53:43 2012	(r25238)
@@ -0,0 +1,836 @@
+module lib/analysis-library-internal.generated
+ 
+imports
+  libstratego-lib
+  libstratego-parallel
+  lib/editor-common.generated
+  lib/analysis-library.generated
+  lib/index-library.generated
+  
+signature constructors
+  
+  // Analysis
+  Results         : AST * List(Def) * List(Use) * List(DefData) * List(Def) * List(Def) * List(File) -> Results
+  ParallelResults : AST * AST * List(Error) * List(Warning) * List(Note) * List(File) -> ParallelResults
+  
+  // Namespaces
+  Diff            : Namespace
+  ASTDiff         : Namespace
+  AST             : Namespace
+  
+  // Data
+  AST             : List(UriPart) * AST -> AST
+  
+  // Annotations 
+  Scope: Term -> Anno
+  
+rules // Analysis traversals
+  
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   *
+   * @internal
+   * @type List((ast, (file, subfile))) -> Results(List(ast), List(def), List(use), List(data), List(addedElem), 
+   *                                       List(removedElem), List(fileToAnalyze@(file, subfile))))
+   */
+  analyze-top-internal(|phase, language, project-path, full-path):
+    astFilePairs -> Results(asts, defs, uses, data, added, removed, filesToAnalyze)
+    with
+      // Init
+      index-setup(|language, [project-path], full-path);
+      revision := <index-start-transaction>
+    with
+      // Store old elements
+      oldElems := <filter(index-diff-constructors)> <index-get-all-in-file> full-path;
+      <index-clear-file> full-path
+    with
+      {| Index-UnresolvedSet:
+        unresolvedSet := <new-iset>;
+        rules(Index-UnresolvedSet: _ -> unresolvedSet);
+        
+        (astFilePairs2, defsList) := <unzip> <map(analyze-top-defs)> astFilePairs;
+        defs := <concat> defsList;
+        (astFilePairs3, dataList) := <unzip> <map(analyze-top-data(|language, full-path))> astFilePairs2;
+        data := <concat> dataList;
+        (astFilePairs4, usesList) := <unzip> <map(analyze-top-uses(|language, full-path))> astFilePairs3;
+        uses := <concat> usesList;
+        (asts, _) := <unzip> astFilePairs4
+      |}
+    with
+      index-end-transaction
+    with
+      // Schedule re-analysis of dependent files (if current file is not testing language file)
+      // HACK: Depends on file extension, could be other languages with .spt extension?
+      if Editor() := phase; not(<is-test-file> full-path) then
+        newElems := <conc> (defs, <filter(index-diff-constructors)> data);
+        
+        // Find added and removed definitions
+        (added, removed) := <analyze-diff> (oldElems, newElems);
+        changed := <conc> (added, removed);
+        
+        // Store files that have changed in the index
+        index-transaction(
+          filesToAnalyze := <analyze-store-diff(|changed, revision)> astFilePairs4
+        )
+      else
+        (added, removed) := ([], []);
+        filesToAnalyze := []
+      end
+    with
+      <list-loop(analyze-top-store-ast(|full-path))> astFilePairs4
+      
+  /**
+   * Add URI annotations to each definition and unresolved URI annotations to each use site.
+   *
+   * @internal
+   */
+  analyze-top-defs:
+    (ast, file) -> ((ast2, file), defs)
+    with
+      <index-set-current-file> file;
+      (Some(ast2), edefs) := <analyze-defs> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
+      defs := <map(Snd)> edefs; 
+      <index-add-all(|file)> defs
+      
+  /**
+   * Gathers all data for each definition.
+   *
+   * @internal
+   */
+  analyze-top-data(|language, full-path):
+    (ast, file) -> ((ast2, file), data2)
+    with
+      <index-set-current-file> file;
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Gather all data for each definition.
+        ast2 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast; // Parent pointers needed.
+        data := <origin-track-forced(analyze-tree-data)> ast2;
+        
+				// Resolve all references in gathered data.
+				(data2, _) := <analyze-uses> data;
+				<index-add-all(|file)> data2;
+				
+        // Store reads into the index (if not testing language)
+        if not(is-test-input(|language, full-path)) then
+          <index-add-all(|file)> <iset-elements> readSet
+        end
+      |}
+      
+  /**
+   * Resolves all unresolved references for each use site.
+   *
+   * @internal
+   */
+  analyze-top-uses(|language, full-path):
+    (ast, file) -> ((ast3, file), uses)
+    with
+      <index-set-current-file> file;
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Resolve all unresolved references for each use site.
+        (ast2, uses) := <analyze-uses> ast;
+        <index-add-all(|file)> uses;
+        
+        ast3 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast2; // AST changed, reset parent pointers.
+        
+        // Store reads into the index (if not testing language)
+        if not(is-test-input(|language, full-path)) then
+          <index-add-all(|file)> <iset-elements> readSet
+        end
+      |}
+      
+  /**
+   * Stores AST from file to the index.
+   *
+   * @internal
+   */   
+  analyze-top-store-ast(|full-path):
+    (ast, (_, subfile)) -> <id>
+    where
+      <index-add(|full-path)> AST(subfile, ast)
+
+  /**
+   * Stores AST from file to the index.
+   *
+   * @internal
+   */   
+  analyze-top-store-ast(|full-path):
+    (ast, file) -> <id>
+    where
+      <is-string> file;
+      <index-add(|full-path)> AST([], ast)
+      
+  /**
+   * Identifies all definitions in the tree and annotates them with their URI.
+   * Also annotates uses with a preliminary "Unresolved(_)" URI.
+   *
+   * @internal
+   */
+  analyze-defs:
+  	ast -> (<analyze-defs(|[], set, Anon(), Anon())> ast, <iset-elements> set)
+  	where
+  		set := <new-iset>
+  		 
+  /** @internal */
+  analyze-defs(|paths, defs, head-scope, head-scope-ns):
+    ast{Scope([namespace, name | path])} -> ast'
+    where
+      paths' := <update-index-paths(|[(namespace, path)])> paths ;
+      ast'   := <rm-annotations; analyze-defs(|paths', defs, Anon(), Anon())> ast
+      
+  
+  /** @internal */
+  analyze-defs(|paths, defs, head-scope, head-scope-ns):
+    ast -> ast'
+    where
+    	<not(has-annos)> ast    	
+    with
+      if (namespace, path) := <nam-get-definition> ast then
+      	definition     := <nam-get-def(|paths, namespace)> path;
+      	Def(def-path)  := definition; 
+        head-scope-ns' := namespace;
+        head-scope'    := <Hd> path;
+        f#(children)   := <try(nam-annotate-scopes(|def-path))> ast;
+        <iset-add(|(<new>, definition))> defs
+      else
+        def-path       := INTERNAL_ERROR();
+        head-scope-ns' := head-scope-ns;
+        head-scope'    := head-scope;
+        f#(children)   := ast
+      end;
+      if scope-types := <nam-get-scope-types> ast then
+      	unique          := Anon(<new>);
+        updates         := <map(construct-index-path(|paths, head-scope', head-scope-ns', unique, ast))> scope-types;
+        paths'          := <update-index-paths(|updates)> paths;
+        head-scope-ns'' := Anon();
+        head-scope''    := Anon()
+      else
+      	paths'          := paths;
+      	head-scope-ns'' := head-scope-ns';
+        head-scope''    := head-scope'
+      end;
+      children' := <origin-track-forced(analyze-child-defs(|paths', defs, head-scope'', head-scope-ns''))> children;
+      ast'      := <try(nam-annotate-names(|paths', def-path))> f#(children') 
+       
+  /** @internal */
+  analyze-child-defs(|paths, defs, head-scope, head-scope-ns):
+  	[] -> []
+  	
+  /** @internal */
+  analyze-child-defs(|paths, defs, head-scope, head-scope-ns):
+  	[d|ds] -> [d'|ds']
+  	where
+  	  d'  := <analyze-defs(|paths, defs, head-scope, head-scope-ns)> d ;
+  	  if <nam-ordered-def> d then
+  	  	[namespace, name | path] := <nam-get-definition-key ; index-uri> d' ;
+        paths'                   := <update-index-paths(|[(namespace, path)])> paths ;
+  	  	ds'                      := <analyze-child-defs(|paths', defs, Anon(), Anon())> ds
+  	  else
+  	    ds' := <analyze-child-defs(|paths, defs, head-scope, head-scope-ns)> ds
+  	  end
+  
+  /** @internal */
+  construct-index-path(|paths, head-scope, head-scope-ns, unique, ast):
+    scope-type -> (scope-type, path'')
+    where
+      if !head-scope-ns => Anon() then
+        path  := <lookup-index-path> (scope-type, paths);
+        path' := <index-do-adjust-path(|scope-type, path, Anon(<new>))> ast
+      else
+        path  := <lookup-index-path> (head-scope-ns, paths);
+        path' := <index-do-adjust-path(|scope-type, path, head-scope)> ast
+      end;
+      // HACK: Disable generation of anonymous namespaces for unique definitions to let FieldAccess-like constructs work.
+      if /*<nam-unique> ast*/ fail then
+      	path'' := <index-do-adjust-path(|scope-type, path', unique)> ast
+      else
+      	path'' := path'
+      end
+      
+  /** @internal */
+  update-index-paths(|updates) = 
+    remove-all(?(<id>, _); !(<id>, updates) ; lookup') ; at-end(!updates)
+  
+  /** @internal */
+  lookup-index-path = 
+    lookup' <+ ![]
+ 
+  /** @internal */
+  index-do-adjust-path(|namespace, path, scope) =
+    adjust-index-path(origin-equal(|scope)|namespace, path)
+  <+
+    ![scope|path]
+ 
+  /**
+   * Analyze all uses, changing their preliminary "Unresolved(_)" URI to a definite URI of their definition.
+   *
+   * @internal
+   */
+  analyze-uses:
+    ast -> (ast'', uses')
+    with
+      analyzed     := <all(analyze-uses)> ast;
+      (ast', uses) := <unzip-analyzed> analyzed;
+      if !ast' => _{unresolved@[Unresolved(namespace), x | path]} then
+        if Def(def-uri) := <index-lookup> ast' then
+          ast'' := ast{def-uri};
+          uses' := [Use(def-uri) | uses]
+        else
+          ast'' := ast';
+          uses' := [BadUse([namespace, x]) | uses]
+        end
+      else
+        ast'' := ast';
+        uses' := uses
+      end
+ 
+  /**
+   * Collects all index data (e.g. types of definitions).
+   *
+   * @internal
+   */
+  analyze-tree-data:
+    tree -> data
+    where
+      set := <new-iset>;
+      <topdown(analyze-tree-data-part(|set))> tree;
+      data := <iset-elements> set
+      
+  /** @internal */
+  analyze-tree-data-part(|set):
+    tree -> tree
+    where
+      if def-term := <nam-get-definition-key> then
+        _{[namespace | path]} := def-term;
+        if result := <adjust-index-def-data(store-index-data-results(|set) |namespace, path)> tree then
+          <fatal-err(|"Unexpected result from adjust-index-def-data; should call <store-results>")> result
+        end
+      end
+  
+  /** @internal */
+  store-index-data-results(|set):
+    t -> <fail>
+    where
+      if is-list then
+        <iset-addlist(|t)> set
+      else
+        <iset-add(|t)> set
+      end
+      
+rules // Parallel analysis
+  
+  /** @internal */
+  index-parallel-analyze(analyze):
+    files -> allResults
+    with
+      map(index-parse-file); // Parsing cannot be done in parallel.
+      map(\(ast, file) -> (ast, file, <project-path>)\);
+      parallel-unordered(all(index-analyze(analyze)));
+      ?results;
+      with(<eq> (<length> results, <length> files) | "Input size not equal to output size");
+      filesToAnalyze := <make-set> <mapconcat(?ParallelResults(_, _, _, _, _, <id>))> results;
+      if not([] := filesToAnalyze) then
+        allResults := <concat> [results, <index-parallel-analyze(analyze)> filesToAnalyze]
+      else
+        allResults := results
+      end
+  
+  /** @internal */   
+  index-parse-file:
+    file -> (ast', file)
+    with
+	    if <file-exists> file then
+	    	if ast := <parse-file> file then
+	    		ast' := ast
+	      else
+	      	ast' := ()
+      	end
+	    else
+	      ast' := ()
+	    end
+   
+  /** @internal */   
+  index-set-markers:
+    ParallelResults(ast, ast', errors, warnings, notes, diffs) -> <id>
+    with
+      <set-markers(|ast)> (ast', errors, warnings, notes)
+      
+  /** @internal */
+  index-analyze(analyze):
+    (ast, path, project-path) -> ParallelResults(ast, ast', errors, warnings, notes, filesToAnalyze)
+    with
+      (ast', errors, warnings, notes, filesToAnalyze) := <analyze>;
+      if [] := filesToAnalyze then
+        complete-work-unit
+      end
+      
+/** @internal */
+rules // Splitter
+  
+  /** @internal */
+  index-split = fail
+  /** @internal */
+  index-is-toplevel = fail
+  /** @internal */
+  index-is-qualifier = fail
+  /** @internal */
+  index-qualifier-subelements = fail
+  /** @internal */
+  index-create-qualifier(|qualifier) = fail
+  
+  /** @internal */
+  index-toplevel-split:
+    ast -> asts'
+    with
+      (ast', _) := <analyze-defs> ast;
+      asts      := <index-toplevel-split-internal> ast';
+      asts'     := <strip-annos> asts
+      
+  /** @internal */
+  index-toplevel-split-internal:
+    node -> units
+    with
+      switch id
+        case ?():
+          units := [((), [])]
+        case index-is-qualifier:
+          elems := <mapconcat(index-toplevel-split-internal)> <index-qualifier-subelements> node;
+          units := <map(index-transform-qualifier(|node))> elems
+        case index-is-toplevel:
+          units := [(node, <index-uri> <nam-get-definition-key> node)]
+        otherwise:
+          units := [(node, [])]
+      end
+      
+  /** @internal */
+  index-transform-qualifier(|node):
+    (elem, subfileName) -> (qualifier, subfileName)
+    with
+      qualifier := <index-create-qualifier(|node)> elem
+
+/** @internal */
+rules // Diffs
+  
+  /** @internal */
+  analyze-diff:
+    (defs1, defs2) -> (added, removed)
+    with
+      added   := <diff(index-diff-compare)> (defs2, defs1);
+      removed := <diff(index-diff-compare)> (defs1, defs2)
+    
+  /** @internal */
+  analyze-store-diff(|changedEntries, revision): 
+    astFilePairs -> analyzeFiles'
+    with
+      changedFiles    := <mapconcat(index-get-files-of)> changedEntries;
+      dependentFiles  := <index-get-dependent-files> changedEntries;
+      
+      // Files to analyze
+      analyzeFiles := <make-set> <remove-all(fake-file)> dependentFiles;
+      analyzeFiles' := analyzeFiles;
+      // TODO: Is this extra check needed?
+      /*if <getfirst(index-get-file-revision; \r -> (r, revision)\; gt)> analyzeFiles then
+        // Add current file if the current file has read information from another file with a higher revision.
+        // This indicates that potentially outdated information was read.
+        analyzeFiles' := [file|analyzeFiles]
+      else
+        analyzeFiles' := analyzeFiles
+      end;*/
+      
+      // Files to compile
+      changedAstFiles := <filter(analyze-astdiff)> astFilePairs;
+      compileFiles := <make-set> <concat> [analyzeFiles', changedFiles, changedAstFiles];
+      // TODO: Optimize so that there are no duplicate files stored in the index, use iset?
+      <map(analyze-add-compilediff)> compileFiles
+      
+  /** 
+   * Checks if ast for given file has changed. Succeeds if old ASTDiff is not found or if ASTDiff is different.
+   *
+   * @internal
+   */
+  analyze-astdiff:
+    (ast, file) -> file
+    where
+      name := <conc> (<index-file-to-uri> file, ["ast-checksum"]);
+      newChecksum := <checksum> ast;
+      if oldChecksum := <index-get-global(|name)> then
+        <index-set-global(|name)> newChecksum;
+        not(<eq> (oldChecksum, newChecksum))
+      else
+        <index-set-global(|name)> newChecksum
+      end
+      
+  /** 
+   * Adds given file to the list of files to compile.
+   *
+   * @internal
+   */
+  analyze-add-compilediff = index-add-global(|"compile-diff")
+  
+  /** 
+   * Gets the list of files to compile, and then clear it.
+   *
+   * @internal
+   */
+  analyze-get-compilediffs = index-get-all-globals(|"compile-diff"); index-clear-global(|"compile-diff")
+  
+rules // Index lookup rules (that take into account adjust-index-lookup)
+  
+  /**
+   * Given a term x, namespace n, path s and prefix p, looks for a definition in the 
+   * scope of s and outer scopes in namespace n that start with prefix p, returning the first 
+   * found definition.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path or part of this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   *
+   * @type term -> ?Def(uri')
+   *
+   * @internal
+   */
+  index-lookup-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> definition
+    where
+      defs := <index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix)> x;
+      
+      if StopLookup() := defs then
+        fail
+      end;
+      
+      if not(definition := <Hd> defs) then
+        [_|path']  := path;
+        definition := <index-lookup-internal(adjust-import, adjust-lookup, name-compare|namespace, path', prefix)> x
+      end
+      
+  /** @internal */
+  index-lookup-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-internal(id, id, name-compare|namespace, path, prefix)
+
+  /**
+   * Given a term x, namespace n, path s and prefix p, looks for definitions in the scope of s 
+   * and outer scopes in namespace n that start with prefix p, returning all found definition.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path or part of this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   *
+   * @internal
+   */
+  index-lookup-all-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> defs'
+    where
+      defs := <index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix)> x;
+      
+      if [_|path'] := path then
+        defs2 := <index-lookup-all-internal(adjust-import, adjust-lookup, name-compare|namespace, path', prefix)> x;
+        defs' := <conc> (defs, defs2)
+      else
+        defs' := defs
+      end
+
+  /** @internal */
+  index-lookup-all-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-all-internal(id, id, name-compare|namespace, path, prefix)
+      
+  /**
+   * Given a term x, namespace n, path s and prefix p, looks for a definition in the 
+   * scope of s in namespace n that start with prefix p, returning the first found definition.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type term -> List(Def(uri))
+   *
+   * @internal
+   */
+  index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> defs
+    with
+      adjust-lookup;
+      adjusted := <index-do-adjust-lookup(|namespace, path, x, prefix)> x;
+      defs     := <index-get-adjust-lookup-results(adjust-import, name-compare|adjusted, prefix)> x
+    <+
+      adjust-import;
+      adjusted := <index-do-adjust-import(|namespace, path)> x;
+      defs     := <index-get-adjust-import-results(adjust-lookup, name-compare|adjusted, prefix)> x
+    <+
+      defs     := <index-get-children(\uri -> Def(uri)\, name-compare|namespace, prefix)> [namespace | path]
+      
+  /** @internal */
+  index-lookup-all-scoped-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-all-scoped-internal(id, id, name-compare|namespace, path, prefix)
+  
+  /** @internal */
+  index-do-adjust-import(|namespace, path) =
+    adjust-index-import(|namespace, path)
+    
+  /** @internal */
+  index-get-adjust-import-results(adjust-lookup, name-compare|adjusted, prefix):
+    x -> defs'
+    with
+      defs := 
+        <mapconcat(
+             index-adjust-import-recurse(adjust-lookup, name-compare|x, prefix)
+          <+ fatal-err(|"Unexpected result from adjust-index-import, should be a list of [namespace | path].")
+        )> adjusted;
+        if not(<elem> (StopLookup(), defs)) then
+        	defs' := <filter(name-compare)> defs
+        else
+        	defs' := StopLookup()
+      	end
+      	
+  /** @internal */
+  index-adjust-import-recurse(adjust-lookup, name-compare|x, prefix):
+  	[namespace|path] -> results'
+  	with
+  		results := <index-lookup-all-scoped-internal(fail, adjust-lookup, name-compare|namespace, path, prefix)> x;
+  		if not(<is-list> results) then
+  			results' := [results]
+  		else
+  			results' := results
+			end
+        
+  /** @internal */
+  index-do-adjust-lookup(|namespace, path, use, prefix) =
+    repeat-until(
+      prim("SSL_EXT_get_parent", <id>)
+    , adjust-index-lookup(origin-equal(|use)|namespace, path, prefix) 
+    )
+    
+  /** @internal */  
+  index-get-adjust-lookup-results(adjust-import, name-compare|adjusted, prefix):
+    x -> defs'
+    with
+      if StopLookup() := adjusted then
+        defs' := StopLookup()
+      else
+        defs := 
+          <mapconcat(
+               \d at Def(p) -> [d]\
+            <+ \[namespace'|path'] -> <index-lookup-all-scoped-internal(adjust-import, fail, name-compare|namespace', path', prefix)> x\
+            <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list of Def(uri) or [namespace | path], or StopLookup() to stop the lookup.")
+          )> adjusted;
+          defs' := <filter(name-compare)> defs
+      end
+      
+rules // Name comparisons
+
+  /**
+   * Compares given element (with an URI) to given name using string equality comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-equal(|name):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <SRTS-EXT-eq-ignore-annos(|name)> <index-uri-name> uri
+  
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-substring(|prefix):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <is-substring(!prefix)> <index-uri-name> uri
+      
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison and given namespace.
+   * 
+   * @internal 
+   */      
+  index-compare-name-substring(|prefix, namespace):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <eq> (namespace, <index-uri-namespace> uri);
+      <is-substring(!prefix)> <index-uri-name> uri
+      
+rules // URI and value projections
+       
+  /** @internal */
+  index-uri-impl:
+    Def(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    Use(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    Read(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    x{[namespace | path]} -> [<index-namespace-unwrap> namespace | path]
+ 
+  /**
+   * TODO: Should second part of ReadWildcard be included in the URI, between namespace and path?
+   * 
+   * @internal 
+   */
+  index-uri-impl:
+    ReadWildcard(uri, _) -> uri
+
+  /** @internal */
+  index-value-impl:
+    Def(value) -> value
+
+  /** @internal */
+  index-value-impl:
+    Use(value) -> value
+
+  /** @internal */
+  index-value-impl:
+    Read(value) -> value
+  
+  /** @internal */
+  index-value-impl:
+    ReadWildcard(_, value) -> value
+    
+rules // Internal helpers
+
+  /**
+   * Transforms a term C( (a1, [b1]), (a2, [b2, b3]) ) to a tuple (C(a1, a2), [b1, b2, b3]).
+   *
+   * @internal
+   */
+  unzip-analyzed:
+    appl -> (appl', unzipped-parts)
+    with
+      appl'          := <all(\(a, _) -> a\)> appl;
+      unzipped-parts := <concat> <get-appl-arguments(\(_, b) -> b\) <+ map(\(_, b) -> b\) <+ ![]> appl
+       
+  /**
+   * Tests if the current file is just a testing language input
+   *
+   * @internal
+   */
+  is-test-file = 
+    string-ends-with(|".spt")
+  /** @internal */
+  is-test-language = 
+    ?"Spoofax-Testing"
+  /** @internal */
+  is-test-input(|language, path) = 
+    <is-test-language> language <+ <is-test-file> path
+      
+  /** @internal */
+  fake-file = 
+    is-test-file <+ index-is-fake-file
+  
+  /** @internal */
+  ast-uri-to-ast-file(|full-path):
+    (ast, uri) -> (ast, (full-path, uri))
+   
+  /** @internal */    
+  index-readwildcard-substring(|prefix):
+    ReadWildcard(_, name) -> <id>
+    where <is-substring(!prefix)> name
+  
+  /** @internal */  
+  store-wildcard-read(|namespace, path, prefix):
+    children -> <id>
+    with
+      if set := <Index-ReadSet> then
+        if 1 := <length> children then
+          // HACK: This solves the problem of ReadWildcards making too many files re-analyze, but this should
+          // be handled in the index primitives instead.
+          <iset-add(|Read([namespace, prefix|path]))> set
+        else
+          <iset-add(|ReadWildcard([namespace|path], prefix))> set
+        end
+      end
+  
+  /** @internal */    
+  index-is-unresolved(|x, uri) = 
+    Index-UnresolvedSet; (iset-contains(|(x, uri)) <+ fail)
+  /** @internal */
+  index-add-unresolved(|x, uri) = 
+    (Index-UnresolvedSet; iset-add(|(x, uri))) <+ id
+  
+  /** @internal */
+  index-file-dependent-construct: 
+    uri -> <conc> (uses, reads)
+    with
+      uses := <index-get-uses-all> Def(uri);
+      reads := <index-get-reads-all> Def(uri)
+  
+  /** @internal */  
+  index-file-dependency-filter = 
+    ?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_)
+ 
+  /** @internal */
+  index-eq(|namespace, expected) =
+    where(
+      ?Def([_, name | _]);
+      <SRTS-EXT-eq-ignore-annos(|expected)> name
+    )
+  
+  /** @internal */
+  external SRTS-EXT-eq-ignore-annos(|t)
+  
+  /** @internal */
+  index-key-unwrap = 
+    \key{uri} -> key{<index-uri-unwrap> uri}\ <+ id
+    
+rules // Interface for generated code
+ 
+  /** @internal */
+  nam-get-def(|paths, namespace):
+    part* -> Def([namespace, part* | <lookup-index-path> (namespace, paths)])
+  
+  /** @internal */ 
+  nam-annotate-def(|path):
+    t -> result
+    with
+    	result := t{path}
+  
+  /** @internal */ 
+  nam-annotate-use(|paths, namespace):
+    t -> t{[Unresolved(namespace), t | <lookup-index-path> (namespace, paths)]}
+  
+  /** @internal */ 
+  nam-annotate-use(|paths, namespace, namespace2, name):
+  	t -> t{[Unresolved(namespace), t | <lookup-index-path> (namespace, paths)]}
+  	
+  /** @internal */ 
+  nam-annotate-scope(|path):
+    t -> t{Scope(path)}
+  
+  /** @internal */ 
+  nam-get-scope-types = fail
+  /** @internal */ 
+  nam-ordered-def = fail
+  /** @internal */
+  nam-get-definitions = fail
+  /** @internal */
+  nam-get-definition = nam-get-definitions ; Hd 
+  /** @internal */
+  nam-get-definition-keys = fail
+  /** @internal */
+  nam-get-definition-key = nam-get-definition-keys ; Hd
+  /** @internal */
+  nam-get-uses = fail
+  /** @internal */
+  nam-get-use = nam-get-uses ; Hd 
+  /** @internal */
+  nam-get-uses-keys = fail
+  /** @internal */
+  nam-get-use-key = nam-get-uses-keys ; Hd
+  /** @internal */
+  nam-annotate-names(|paths, def-path) = fail
+  /** @internal */
+  nam-annotate-scopes(|def-path) = fail
+  /** @internal */
+  nam-unique = fail

Added: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/analysis-library-internal.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/analysis-library-internal.str	Mon Jul 23 12:53:43 2012	(r25238)
@@ -0,0 +1,958 @@
+module lib/analysis-library-internal
+ 
+imports
+  libstratego-lib
+  libstratego-parallel
+  lib/editor-common.generated
+  lib/analysis-library
+  lib/index-library
+
+signature
+
+  constructors // data kinds stored in the index
+
+    Type    : DefDataKind
+    Import  : DefDataKind
+    TImport : DefDataKind
+    Unique  : DefDataKind
+  
+  constructors // resolution kinds for use sites
+
+  	Regular : Namespace * Name                           -> ResolutionKind
+  	Regular : Namespace * Name * Type                    -> ResolutionKind
+  	Child   : Namespace * Name * Namespace * Name        -> ResolutionKind
+  	Child   : Namespace * Name * Namespace * Name * Type -> ResolutionKind
+  	
+  constructors // annotations used in analysis
+
+    Scope: Term -> Anno
+  
+  constructors
+  
+  // Analysis
+  Results         : AST * List(Def) * List(Use) * List(DefData) * List(Def) * List(Def) * List(File) -> Results
+  ParallelResults : AST * AST * List(Error) * List(Warning) * List(Note) * List(File) -> ParallelResults
+  
+  // Namespaces
+  Diff            : Namespace
+  ASTDiff         : Namespace
+  AST             : Namespace
+  
+  // Data
+  AST             : List(UriPart) * AST -> AST
+  
+rules // Analysis traversals
+  
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   *
+   * @internal
+   * @type List((ast, (file, subfile))) -> Results(List(ast), List(def), List(use), List(data), List(addedElem), 
+   *                                       List(removedElem), List(fileToAnalyze@(file, subfile))))
+   */
+  analyze-top-internal(|phase, language, project-path, full-path):
+    astFilePairs -> Results(asts, defs, uses, data, added, removed, filesToAnalyze)
+    with
+      // Init
+      index-setup(|language, [project-path], full-path);
+      revision := <index-start-transaction>
+    with
+      // Store old elements
+      oldElems := <filter(index-diff-constructors)> <index-get-all-in-file> full-path;
+      <index-clear-file> full-path
+    with
+      {| Index-UnresolvedSet:
+        unresolvedSet := <new-iset>;
+        rules(Index-UnresolvedSet: _ -> unresolvedSet);
+        
+        (astFilePairs2, defsList) := <map(analyze-top-defs); unzip> astFilePairs;
+        defs := <concat> defsList;
+        (astFilePairs3, dataList) := <map(analyze-top-data(|language, full-path)); unzip> astFilePairs2;
+        data := <concat> dataList;
+        (astFilePairs4, usesList) := <map(analyze-top-uses(|language, full-path)); unzip> astFilePairs3;
+        uses := <concat> usesList;
+        (asts, _) := <unzip> astFilePairs4
+      |}
+    with
+      index-end-transaction
+    with
+      // Schedule re-analysis of dependent files (if current file is not testing language file)
+      // HACK: Depends on file extension, could be other languages with .spt extension?
+      if Editor() := phase; not(<is-test-file> full-path) then
+        newElems := <conc> (defs, <filter(index-diff-constructors)> data);
+        
+        // Find added and removed definitions
+        (added, removed) := <analyze-diff> (oldElems, newElems);
+        changed := <conc> (added, removed);
+        
+        // Store files that have changed in the index
+        index-transaction(
+          filesToAnalyze := <analyze-store-diff(|changed, revision)> astFilePairs4
+        )
+      else
+        (added, removed) := ([], []);
+        filesToAnalyze := []
+      end
+    with
+      <list-loop(analyze-top-store-ast)> astFilePairs4
+
+rules  // Phase 1: scope analysis
+
+  /**
+   * Add URI annotations to each definition and unresolved annotations to each use site.
+   *
+   * @internal
+   */
+  analyze-top-defs:
+    (ast, file) -> ((ast2, file), defs)
+    with
+      <index-set-current-file> file;
+      (ast2, defs, data) := <analyze-defs> ast; 
+      <index-add-all(|file)> defs;
+      (data2, _) := <analyze-uses> data;
+      <index-add-all(|file)> data2
+  
+  /**
+   * Identifies all definitions in the tree and annotates them with their URI.
+   * Also annotates uses with a preliminary "Unresolved(pathes)" annotation, 
+   * where "pathes" maps relevant namespaces to their pathes.
+   *
+   * @internal
+   */
+  analyze-defs:
+  	ast -> (ast', defs, data) 
+  	with 
+  		def-set  := <new-iset>; 
+  		data-set := <new-iset>;
+  		ast'     := <analyze-defs(|[], Anon(<newname> "subsequent"), def-set, data-set)> ast;
+  		defs     := <iset-elements; map(try(Snd))> def-set;
+  		data     := <iset-elements> data-set
+  	 
+  /**
+   * Special case for tree nodes which are defined as scopes at parent nodes. 
+   *
+   * @internal 
+   */
+  analyze-defs(|paths, subsequent, defs, data):
+    ast{a*} -> ast'
+    where
+  	  a'* := <split-fetch(?Scope(uri*)) ; conc> a*
+    with
+    updates := <map(!(<Hd>, <Tl;Tl>))> uri* ;
+      paths'  := <update-index-paths(|updates)> paths ;
+      ast'    := <analyze-defs(|paths', subsequent, defs, data)> ast{a'*}
+       
+  /**
+   * Default case for all other tree nodes. 
+   *
+   * Uses the following rules generated from a NBL definition:
+   *
+   * nam-get-definitions: definition sites of the current node
+   * nam-get-scope-types: namespaces scoped by the current node
+   * nam-annotate-use   : use sites of the current node
+   *
+   * @internal 
+   */
+  analyze-defs(|paths, subsequent, defs, data):
+    ast{a*} -> f#(children'){a*}
+    where 
+      not(<fetch(?Scope(_))> a*)
+    with
+      // check wether the current AST node scopes other definitions
+      // scope*: list of scope information
+      //
+      // updates the pathes for scoped namespaces
+      if scope* := <nam-get-scope-types> ast then
+      	update* := <map(construct-index-path(|paths, defs, ast))> scope*;
+        paths'  := <update-index-paths(|update*)> paths
+      else
+      	paths'  := paths
+      end;
+      // check wether the current AST node defines names
+      // ast1 : AST node with annotated definition sites and scopes
+      // def* : list of definition entries
+      // imp* : list of import entries
+      //
+      // definitions are paired with unique identifier to keep duplicates
+      if (ast', def*, imp*) := <nam-get-definitions(|paths, paths', subsequent)> ast then
+      	<iset-addlist(|<map(!(<new>, <id>))> def*)> defs;
+      	<iset-addlist(|imp*)> data
+      else
+        ast' := ast 
+      end;
+      // analyze children and annotate use sites afterwards
+      f#(children) := ast';
+      children'    := <origin-track-forced(analyze-child-defs(|paths', defs, data))> children
+      
+  /** @internal */
+  analyze-child-defs(|paths, defs, data):
+  	[] -> []
+  	
+  /** @internal */
+  analyze-child-defs(|paths, defs, data):
+  	[d|ds] -> [d'|ds']
+  	with
+      subsequent := Anon(<newname> "subsequent");
+  	  d'         := <analyze-defs(|paths, subsequent, defs, data)> d ;
+  	  if scopes := <nam-ordered-def> d then
+  	  	updates := <map(\scope -> (scope, [subsequent|<lookup-index-path> (scope, paths)])\)> scopes ; 
+        paths'  := <update-index-paths(|updates)> paths 
+      else
+  	    paths' := paths
+  	  end;
+  	  ds'  := <analyze-child-defs(|paths', defs, data)> ds
+
+rules // helper for phase 1
+	 
+  /** @internal */
+  construct-index-path(|paths, defs, ast):
+    (ns, name, scope-type, unique) -> (scope-type, path'')
+    with
+      path  := <lookup-index-path> (ns, paths);
+      path' := <index-do-adjust-path(|scope-type, path, name)> ast;
+      if () := unique then
+      	path'' := path'
+      else
+      	path'' := <index-do-adjust-path(|scope-type, path', unique)> ast;
+      	<iset-add(|DefData([scope-type| path'], Unique(), path''))> defs
+      end
+  
+  update-import(|source, paths):
+  	namespace -> DefData([namespace | path], Import(), source)
+  	with
+  	  path := <lookup-index-path> (namespace, paths)
+  	  
+  /** @internal */
+  update-index-paths(|updates) = 
+    remove-all({key: Fst => key; <fetch-elem(Fst => key)> updates}); 
+    at-end(!updates)
+  
+  /** @internal */
+  lookup-index-path = 
+    lookup' <+ ![]
+ 
+  /** 
+   * Kept for backward compatibility.
+   *
+   * @internal 
+   */
+  index-do-adjust-path(|namespace, path, scope) =
+    adjust-index-path(origin-equal(|scope)|namespace, path) <+ ![scope|path]
+
+rules // interface to NBL generator for phase 1
+	
+  /** @internal */
+  nam-get-definitions(|paths, paths', subsequent) 
+    = fail
+
+  /** 
+   * Callback for nam-get-definitions
+   *
+   * @internal */ 
+  nam-annotate-def(|uris):
+    t{a*} -> t{uris, a*}
+  
+  /** 
+   * Callback for nam-get-definitions
+   *
+   * @internal */ 
+  nam-annotate-scope(|paths):
+    t -> t{Scope(paths)}
+  
+  /** @internal */ 
+  nam-get-scope-types 
+     = fail
+  
+  /** @internal */
+  nam-annotate-uses(|paths) 
+     = fail
+  
+  /**
+   * Callback for nam-get-definitions (imports) and nam-annotate-uses
+   * 
+   * @internal 
+   */ 
+  nam-annotate-use(|paths, namespace*):
+    t{a*} -> t{Unresolved(<filter(nam-is-relevant(|namespace*))> paths), a*}
+    
+  nam-is-relevant(|namespace*):
+  	(ns, _) -> <id> where <fetch-elem(?ns)> namespace*
+ 
+  /** @internal */ 
+  nam-ordered-def 
+     = fail
+
+rules // Phase 2: type analysis of definition sites     
+
+  /**
+   * Gathers all data for each definition.
+   *
+   * @internal
+   */
+  analyze-top-data(|language, full-path):
+    (ast, file) -> ((ast2, file), data2)
+    with
+      <index-set-current-file> file;
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        // Gather all data for each definition.
+        ast2 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast; // Parent pointers needed.
+        data := <origin-track-forced(analyze-data)> ast2;
+      		// Resolve all references in gathered data.
+				(data2, _) := <analyze-uses> data;
+		<index-add-all(|file)> data2;		
+        // Store reads into the index (if not testing language)
+        if not(is-test-input(|language, full-path)) then
+          <index-add-all(|file)> <iset-elements> readSet
+        end
+      |}
+
+ /**
+   * Collects all index data (e.g. types of definitions).
+   *
+   * @internal
+   */
+  analyze-data:
+    ast -> types
+    with
+      set := <new-iset>;
+      <topdown(try(analyze-type(|set)); analyze-data-part(|set))> ast;
+      types := <iset-elements> set
+      
+  /** @internal */
+  analyze-type(|set):
+    ast -> ast
+    where
+      (_{uri}, type) := <nam-get-type> ast;
+      <iset-add(|DefData(uri, Type(), type))> set
+      
+  /** @internal */
+  analyze-data-part(|set):
+    ast -> ast
+    where
+      if keys := <nam-get-definition-keys> then
+      	<list-loop(do-adjust-index-def-data(|set, ast))> keys
+      end
+
+rules // helper for phase 2
+	 
+  /**
+   * Kept for backward compability and possibly additional data.
+   * 
+   * @internal 
+   */
+  do-adjust-index-def-data(|set, ast):
+  	key -> key
+  	where
+      if 
+        _{[ns|path]} := key; 
+        result       := <adjust-index-def-data(store-index-data-results(|set) |ns, path)> ast 
+      then
+         <fatal-err(|"Unexpected result from adjust-index-def-data; should call <store-results>")> result
+      end
+  
+  /** @internal */
+  store-index-data-results(|set):
+    t -> <fail>
+    where
+      if is-list then
+        <iset-addlist(|t)> set
+      else
+        <iset-add(|t)> set
+      end
+
+rules // interface to NBL generator for phase 2
+	
+  /** @internal */
+  nam-get-definition-keys
+    = fail
+
+  /** @internal */
+  nam-get-type
+    = fail
+
+rules // Phase 3: resolution of use sites     
+
+  /**
+   * Resolves all unresolved references for each use site.
+   *
+   * @internal
+   */
+  analyze-top-uses(|language, full-path):
+    (ast, file) -> ((ast3, file), uses)
+    with
+      <index-set-current-file> file;
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Resolve all unresolved references for each use site.
+        (ast2, uses) := <analyze-uses> ast;
+        <index-add-all(|file)> uses;
+        
+        ast3 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast2; // AST changed, reset parent pointers.
+        
+        // Store reads into the index (if not testing language)
+        if not(is-test-input(|language, full-path)) then
+          <index-add-all(|file)> <iset-elements> readSet
+        end
+      |}
+
+  /**
+   * Analyze all uses, changing their preliminary "Unresolved(_)" annotation 
+   * to an URI of their definition.
+   *
+   * @internal
+   */
+  analyze-uses:
+    ast -> (ast', uses)
+    with
+    	use-set := <new-iset>;
+    	ast'    := <bottomup(try(analyze-use(|use-set)))> ast;
+    	uses    := <iset-elements ; map(Snd)> use-set
+  
+  analyze-use(|uses):
+  	ast -> ast'
+    where
+      _{Unresolved(paths)} := ast;
+      origin               := <origin-term> ast;
+      resolution*          := <repeat-until(prim("SSL_EXT_get_parent", <id>), nam-resolve(origin-equal(|ast)))> origin;
+      if 
+        COMPLETION(_) := ast 
+      then
+        ast' := ast{<filter(index-complete(|paths, ast)); concat> resolution*}
+      else
+        Def(def-uri) := <fetch-elem(index-resolve(|paths, ast))> resolution*;
+        ast'         := ast{def-uri};
+        <iset-add(|(<new>, Use(def-uri)))> uses
+      end
+
+rules // resolution rules for phase 3
+	
+  index-resolve(|paths, target):
+  	Regular(ns, name) -> <index-lookup> (ns, name', path)
+  	where
+  	  name' := <strip-annos> name;
+  	  path  := <lookup-index-path> (ns, paths)
+  	  
+  // TODO take type into account
+  index-resolve(|paths, target):
+  	Regular(ns, name, type) -> <index-lookup> (ns, name', path)
+  	where
+  	  name' := <strip-annos> name;
+  	  path  := <lookup-index-path> (ns, paths)
+  
+  index-resolve(|paths, target):
+  	Child(ns, name, pns, parent) -> <index-lookup-child> (ns, name', pns, path)
+  	where
+  	  name'           := <strip-annos> name;
+  	  Def([pns|path]) := <index-resolve(|paths, parent)> Regular(pns, parent)
+  	  
+  // TODO take type into account
+  index-resolve(|paths, target):
+   	Child(ns, name, pns, parent, type) -> <index-lookup-child> (ns, name', pns, path)
+  	where
+  	  name'           := <strip-annos> name;
+  	  Def([pns|path]) := <index-resolve(|paths, parent)> Regular(pns, parent)
+
+rules // completion rules for phase 3
+
+  index-complete(|paths, target):
+  	Regular(ns, COMPLETION(name)) -> <index-lookup-prefix> (ns, name, path)
+  	where
+  	  path := <lookup-index-path> (ns, paths)
+
+  // TODO take type into account??
+  index-complete(|paths, target):
+  	Regular(ns, COMPLETION(name), type) -> <index-lookup-prefix> (ns, name, path)
+  	where
+  	  path := <lookup-index-path> (ns, paths)
+
+  index-complete(|paths, target):
+  	Child(ns, COMPLETION(name), pns, parent) -> <index-lookup-child-prefix> (ns, name, path)
+  	where
+  	  path := <lookup-index-path> (ns, paths)
+
+  // TODO take type into account??
+  index-resolve(|paths, target):
+  	Child(ns, COMPLETION(name), pns, parent, type) -> <index-lookup-child-prefix> (ns, name, path)
+  	where
+  	  path := <lookup-index-path> (ns, paths)
+
+rules // name-based lookup, first result
+	
+  index-lookup-child:
+  	elem -> <index-lookup-child(index-first-name(|name))> [ns|path]
+  	where
+  		(ns, name, path) := elem <+
+  		[ns, name|path]  := <index-uri> elem
+  		
+  index-lookup:
+  	elem -> <index-lookup(index-first-name(|name))> [ns|path]
+  	where
+  		(ns, name, path) := elem <+
+  		[ns, name|path]  := <index-uri> elem
+  		
+  index-lookup-local:
+  	elem -> <index-lookup-local(index-first-name(|name))> [ns|path]
+    where
+  		(ns, name, path) := elem <+
+  		[ns, name|path]  := <index-uri> elem
+  		
+  index-lookup-imported:
+  	elem -> <index-lookup-imported(index-first-name(|name))> [ns|path]
+    where
+  		(ns, name, path) := elem <+
+  		[ns, name|path]  := <index-uri> elem
+  		  
+rules // name-based lookup, all results
+	  
+  index-lookup-children:
+  	elem -> <index-lookup-child(index-all-name(|name))> [ns|path]
+    where
+  		(ns, name, path) := elem <+
+  		[ns, name|path]  := <index-uri> elem
+
+  index-lookup-all:
+  	elem -> <index-lookup(index-all-name(|name))> [ns|path]
+    where
+  		(ns, name, path) := elem <+
+  		[ns, name|path]  := <index-uri> elem
+
+  index-lookup-all-local:
+  	elem -> <index-lookup-local(index-all-name(|name))> [ns|path]
+    where
+  		(ns, name, path) := elem <+
+  		[ns, name|path]  := <index-uri> elem
+
+  index-lookup-all-imported:
+  	elem -> <index-lookup-imported(index-all-name(|name))> [ns|path]
+    where
+  		(ns, name, path) := elem <+
+  		[ns, name|path]  := <index-uri> elem
+ 	
+rules // prefix-based lookup
+	 	
+  index-lookup-child-prefix:
+  	(ns, prefix, path) -> <index-lookup-child(index-all-prefix(|prefix))> [ns|path]
+  
+  index-lookup-prefix:
+  	(ns, prefix, path) -> <index-lookup-all(index-all-prefix(|prefix))> [ns|path]
+  	
+  index-lookup-local-prefix:
+  	(ns, prefix, path) -> <index-lookup-local(index-all-prefix(|prefix))> [ns|path]
+  
+  index-lookup-imported-prefix:
+  	(ns, prefix, path) -> <index-lookup-imported(index-all-prefix(|prefix))> [ns|path]
+	
+rules // generic lookups
+	
+  index-lookup-child(select) = 
+  	index-unique-path ; index-lookup-local(select)
+  	
+  // extends path with its unique extension
+  index-unique-path:
+  	[ns|path] -> [ns|<index-get-value <+ !path> DefData([ns|path], Unique(), ())] 	
+  	  
+  // path -> list of selected children
+  index-lookup-local(select):
+  	ns-path -> definition
+  	where
+  	  candidate* := <prim("LANG_index_get_children", Def(ns-path))>;
+  	  definition := <select> candidate*
+  
+  // path -> list of selected imports
+  index-lookup-imported(select) =
+  	index-import-paths; 
+    select 
+  
+  // performs a lookup in current and enclosing scopes
+  // stops on first result
+  // considers imports
+  index-lookup(select) =
+  	index-lookup-local(select) <+
+  	index-lookup-imported(fetch-elem(index-lookup-local(select))) <+
+  	([id|Tl]; index-lookup(select))
+
+  // performs a lookup in current and enclosing scopes
+  // combines the results
+  // considers imports
+  index-lookup-all(select):
+  	p -> [local*, imported*, scoped*]
+  	where
+  	  local*    := <index-lookup-local(select)> p;
+  	  imported* := <index-lookup-imported(filter(index-lookup-local(select))); concat> p;
+  	  scoped*   := <([id|Tl]; index-lookup-all(select)) <+ ![]> p
+  		
+rules // helper for imports
+	
+  index-import-paths = MkSingleton ; index-import-paths(|[], [])
+   
+  /**
+   * Finds all import paths.
+   * 
+   * i*: accumulator for the result
+   * t*: already analyzed paths
+   *
+   * list of paths to consider -> list of all import paths
+   *
+   * @internal
+   */
+  index-import-paths(|i*, t*): 
+  	[] -> i*
+  
+  index-import-paths(|i*, t*): 
+  	[p|p*] -> p'*
+    where
+      [ns|path] := p;
+      if <elem> (p, t*) then
+      	p'* := <index-import-paths(|i*, t*)> p*
+      else
+      	i'* := <indexlib-get-all-values; map(index-uri; [!ns|id]; index-unique-path)> DefData(p, Import(), ());
+      	t'* := <indexlib-get-all-values; map(index-uri; [!ns|id]; index-unique-path)> DefData(p, TImport(), ());
+      	p'* := <index-import-paths(|[i*, i'*], [p, t*])> [p*, t'*]
+      end
+
+rules // low-level comparisons
+
+  index-first-name(|name) = 
+  	fetch-elem(index-compare-name-equal(|name))
+ 
+  index-all-name(|name) = 
+  	filter(index-compare-name-equal(|name))
+ 
+  index-all-prefix(|prefix) =
+  	filter(index-compare-name-substring(|prefix))
+ 
+   /**
+   * Compares given element (with an URI) to given name using string equality comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-equal(|name) =
+    where(
+      ?Def([_,<id>|_]); 
+      SRTS-EXT-eq-ignore-annos(|name)
+    )
+  
+  index-compare-name-equal(|name) =
+  	where(
+  		?Def([_,<?name; not(is-string)>|_])
+  	)
+  	
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-substring(|prefix) =
+  	where (
+  	  ?Def([_,<id>|_]); 
+      is-substring(!prefix)
+    )
+      
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison and given namespace.
+   * 
+   * @internal 
+   */      
+  index-compare-name-substring(|prefix, namespace) =
+    where (
+      ?Def([ns,name|_]); 
+      <eq> (namespace, ns);
+      <is-substring(!prefix)> name
+   )
+   
+rules // interface to NBL generator for phase 3
+	
+  /** @internal */
+  nam-get-uses 
+    = fail
+  
+  /** @internal */
+  nam-resolve(target) 
+    = fail
+
+rules // Final: storing analyzed AST
+	     
+  /**
+   * Stores AST from file to the index.
+   *
+   * @internal
+   */   
+  analyze-top-store-ast:
+    (ast, file) -> <id>
+    with
+      <index-set-global(|<conc> (<index-file-to-uri> file, ["ast"]))> ast
+        		      
+rules // Parallel analysis
+  
+  /** @internal */
+  index-parallel-analyze(analyze):
+    files -> allResults
+    with
+      map(index-parse-file); // Parsing cannot be done in parallel.
+      map(\(ast, file) -> (ast, file, <project-path>)\);
+      parallel-unordered(all(index-analyze(analyze)));
+      ?results;
+      with(<eq> (<length> results, <length> files) | "Input size not equal to output size");
+      filesToAnalyze := <make-set> <mapconcat(?ParallelResults(_, _, _, _, _, <id>))> results;
+      if not([] := filesToAnalyze) then
+        allResults := <concat> [results, <index-parallel-analyze(analyze)> filesToAnalyze]
+      else
+        allResults := results
+      end
+  
+  /** @internal */   
+  index-parse-file:
+    file -> (ast, file)
+    with
+    if <file-exists> file then
+      ast := <parse-file> file
+    else
+      ast := ()
+    end
+   
+  /** @internal */   
+  index-set-markers:
+    ParallelResults(ast, ast', errors, warnings, notes, diffs) -> <id>
+    with
+      <set-markers(|ast)> (ast', errors, warnings, notes)
+      
+  /** @internal */
+  index-analyze(analyze):
+    (ast, path, project-path) -> ParallelResults(ast, ast', errors, warnings, notes, filesToAnalyze)
+    with
+      (ast', errors, warnings, notes, filesToAnalyze) := <analyze>;
+      if [] := filesToAnalyze then
+        complete-work-unit
+      end
+      
+/** @internal */
+rules // Splitter
+  
+  /** @internal */
+  index-split = fail
+  /** @internal */
+  index-is-toplevel = fail
+  /** @internal */
+  index-is-qualifier = fail
+  /** @internal */
+  index-qualifier-subelements = fail
+  /** @internal */
+  index-create-qualifier(|qualifier) = fail
+  
+  /** @internal */
+  index-toplevel-split:
+    ast -> asts'
+    with
+      (ast', _) := <analyze-defs> ast;
+      asts      := <index-toplevel-split-internal> ast';
+      asts'     := <strip-annos> asts
+      
+  /** @internal */
+  index-toplevel-split-internal:
+    node -> units
+    with
+      switch id
+        case ?():
+          units := [((), [])]
+        case index-is-qualifier:
+          elems := <mapconcat(index-toplevel-split-internal)> <index-qualifier-subelements> node;
+          units := <map(index-transform-qualifier(|node))> elems
+        case index-is-toplevel:
+          units := [(node, <index-uri> <nam-get-definition-keys; Hd> node)]
+        otherwise:
+          units := [(node, [])]
+      end
+      
+  /** @internal */
+  index-transform-qualifier(|node):
+    (elem, subfileName) -> (qualifier, subfileName)
+    with
+      qualifier := <index-create-qualifier(|node)> elem
+
+/** @internal */
+rules // Diffs
+  
+  /** @internal */
+  analyze-diff:
+    (defs1, defs2) -> (added, removed)
+    with
+      added   := <diff(index-diff-compare)> (defs2, defs1);
+      removed := <diff(index-diff-compare)> (defs1, defs2)
+    
+  /** @internal */
+  analyze-store-diff(|changedEntries, revision): 
+    astFilePairs -> analyzeFiles'
+    with
+      changedFiles    := <mapconcat(index-get-files-of)> changedEntries;
+      dependentFiles  := <index-get-dependent-files> changedEntries;
+      
+      // Files to analyze
+      analyzeFiles := <make-set> <remove-all(fake-file)> dependentFiles;
+      analyzeFiles' := analyzeFiles;
+      // TODO: Is this extra check needed?
+      /*if <getfirst(index-get-file-revision; \r -> (r, revision)\; gt)> analyzeFiles then
+        // Add current file if the current file has read information from another file with a higher revision.
+        // This indicates that potentially outdated information was read.
+        analyzeFiles' := [file|analyzeFiles]
+      else
+        analyzeFiles' := analyzeFiles
+      end;*/
+      
+      // Files to compile
+      changedAstFiles := <filter(analyze-astdiff)> astFilePairs;
+      compileFiles := <make-set> <concat> [analyzeFiles', changedFiles, changedAstFiles];
+      // TODO: Optimize so that there are no duplicate files stored in the index, use iset?
+      <map(analyze-add-compilediff)> compileFiles
+      
+  /** 
+   * Checks if ast for given file has changed. Succeeds if old ASTDiff is not found or if ASTDiff is different.
+   *
+   * @internal
+   */
+  analyze-astdiff:
+    (ast, file) -> file
+    where
+      name := <conc> (<index-file-to-uri> file, ["ast-checksum"]);
+      newChecksum := <checksum> ast;
+      if oldChecksum := <index-get-global(|name)> then
+        <index-set-global(|name)> newChecksum;
+        not(<eq> (oldChecksum, newChecksum))
+      else
+        <index-set-global(|name)> newChecksum
+      end
+      
+  /** 
+   * Adds given file to the list of files to compile.
+   *
+   * @internal
+   */
+  analyze-add-compilediff = index-add-global(|"compile-diff")
+  
+  /** 
+   * Gets the list of files to compile, and then clear it.
+   *
+   * @internal
+   */
+  analyze-get-compilediffs = index-get-all-globals(|"compile-diff"); index-clear-global(|"compile-diff")
+             
+rules // URI and value projections
+       
+  /** @internal */
+  index-uri-impl:
+    Def(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    Use(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    Read(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    x{[namespace | path]} -> [<index-namespace-unwrap> namespace | path]
+ 
+  /**
+   * TODO: Should second part of ReadWildcard be included in the URI, between namespace and path?
+   * 
+   * @internal 
+   */
+  index-uri-impl:
+    ReadWildcard(uri, _) -> uri
+
+  /** @internal */
+  index-value-impl:
+    Def(value) -> value
+
+  /** @internal */
+  index-value-impl:
+    Use(value) -> value
+
+  /** @internal */
+  index-value-impl:
+    Read(value) -> value
+  
+  /** @internal */
+  index-value-impl:
+    ReadWildcard(_, value) -> value
+    
+rules // Internal helpers
+
+  /**
+   * Tests if the current file is just a testing language input
+   *
+   * @internal
+   */
+  is-test-file = 
+    string-ends-with(|".spt")
+  /** @internal */
+  is-test-language = 
+    ?"Spoofax-Testing"
+  /** @internal */
+  is-test-input(|language, path) = 
+    <is-test-language> language <+ <is-test-file> path
+      
+  /** @internal */
+  fake-file = 
+    is-test-file <+ index-is-fake-file
+  
+  /** @internal */
+  ast-uri-to-ast-file(|full-path):
+    (ast, uri) -> (ast, (full-path, uri))
+   
+  /** @internal */    
+  index-readwildcard-substring(|prefix):
+    ReadWildcard(_, name) -> <id>
+    where <is-substring(!prefix)> name
+  
+  /** @internal */  
+  store-wildcard-read(|namespace, path, prefix):
+    children -> <id>
+    with
+      if set := <Index-ReadSet> then
+        if 1 := <length> children then
+          // HACK: This solves the problem of ReadWildcards making too many files re-analyze, but this should
+          // be handled in the index primitives instead.
+          <iset-add(|Read([namespace, prefix|path]))> set
+        else
+          <iset-add(|ReadWildcard([namespace|path], prefix))> set
+        end
+      end
+  
+  /** @internal */    
+  index-is-unresolved(|x, uri) = 
+    Index-UnresolvedSet; (iset-contains(|(x, uri)) <+ fail)
+  /** @internal */
+  index-add-unresolved(|x, uri) = 
+    (Index-UnresolvedSet; iset-add(|(x, uri))) <+ id
+  
+  /** @internal */
+  index-file-dependent-construct: 
+    uri -> <conc> (uses, reads)
+    with
+      uses := <index-get-uses-all> Def(uri);
+      reads := <index-get-reads-all> Def(uri)
+  
+  /** @internal */  
+  index-file-dependency-filter = 
+    ?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_)
+ 
+  /** @internal */
+  index-eq(|namespace, expected) =
+    where(
+      ?Def([_, name | _]);
+      <SRTS-EXT-eq-ignore-annos(|expected)> name
+    )
+  
+  /** @internal */
+  external SRTS-EXT-eq-ignore-annos(|t)
+  
+  /** @internal */
+  index-key-unwrap = 
+    \key{uri} -> key{<index-uri-unwrap> uri}\ <+ id
+    

Added: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/analysis-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/analysis-library.generated.str	Mon Jul 23 12:53:43 2012	(r25238)
@@ -0,0 +1,634 @@
+module lib/analysis-library.generated
+ 
+imports
+  libstratego-lib
+  libstratego-parallel
+  lib/editor-common.generated
+  lib/analysis-library-internal.generated
+  lib/index-library.generated
+ 
+signature constructors
+ 
+  // Analyze constructors
+  Editor      : AnalysisPhase
+  Compile     : AnalysisPhase
+ 
+  // Index elements
+  Def          : List(UriPart) -> Summary
+  Use          : List(UriPart) -> Summary
+  BadUse       : List(UriPart) -> Summary
+  Read         : List(UriPart) -> Summary
+  ReadWildcard : List(UriPart) * String -> Summary
+  Diff         : List(UriPart) * List(Summary) -> Summary
+  
+  // Adjust lookup actions
+  StopLookup   : LookupAction
+  
+rules // Index analysis extension points
+ 
+  /**
+   * Extension point. Override this rule to adjust how the index analysis looks up use sites to definitions.
+   *
+   * The overriden rule must return a list that contains any of the following items:
+   *   - Def(uri)         : A definition with exactly this URI has been found. This tells the lookup to resolve the
+   *                        use site to this definition.
+   *   - [namespace|path] : This tells the lookup to do a new lookup at the given namespace and path.
+   * 
+   * Returning multiple of these in the list is allowed, these will all show up during content completion and possibly
+   * other custom strategies. If multiple items are returned during reference resolving for example, the first item
+   * will be used.
+   *
+   * If the lookup has failed, for example your custom rule cannot find any definitions, you can also return 
+   * StopLookup() instead of a list. This tells the lookup algorithm to stop any further lookups for this use site.
+   * This can be useful to stop lookups for recursive expressions like property access, preventing a lot of useless
+   * lookups that will always fail anyway.
+   *
+   * Extension example:
+   *   adjust-index-lookup(check-target-name|namespace, path, prefix):
+   *     PropAccess(exp, name) -> properties
+   *     where
+   *       <check-target-name> name
+   *     with
+   *       if TYPE(type{_}) := <type-of> exp then
+   *         properties := <index-lookup-children(|Property(), prefix)> type
+   *       else
+   *         properties := StopLookup()
+   *       end
+   *
+   *   adjust-index-lookup(check-target-name|namespace, path, prefix):
+   *     Var(name) -> [[Var() | path], [Property() | path]]
+   *     where
+   *       <check-target-name> name
+   *
+   * @param check-target-name   A strategy that should be used to check if the name of the current element is what the
+   *                            lookup algorithm is looking for.
+   * @param namespace           The namespace of the element that should be looked up.
+   * @param path                The path the lookup algorithm is currently looking at for the element.
+   * @param prefix              The prefix name of the element the lookup algorithm is looking for. This is usually the
+   *                            full name of the element, but could be a partial prefix during content completion.
+   * @type def -> List(Def(uri) or [namespace|path]) or StopLookup()
+   */
+  adjust-index-lookup(check-target-name|namespace, path, prefix) = fail
+  
+  /**
+   * Extension point.
+   */
+  adjust-index-import(|namespace, path) = fail
+  
+  /** 
+   * Extension point. Override this rule to store data about definitions in the index. Should call <store-results> on 
+   * a (list of) data that must be stored in the index.
+   *
+   * Note that store-results always fails, this is a trick to make every adjust-index-def-data override always fail so 
+   * that every overriden rule is called once for each definition. This can lead to unexpected behaviour when trying to 
+   * store multiple items by calling store-results in a map or filter! Be sure to always let your adjust-index-def-data 
+   * rule fail if you are doing a <filter(store-results)> for example.
+   *
+   * Extension example:
+   *   adjust-index-def-data(store-results|namespace, path):
+   *     def -> <store-results> Type([namespace|path], type)
+   *     where
+   *       type := <type-of> def
+   *
+   * @param store-results Call this on the data you want to store in the index.
+   * @param namespace     The namespace of the definition that the rule is being called on.
+   * @param path          The path of the definition that the rule is being called on.
+   * @type def -> fail 
+   */
+  adjust-index-def-data(store-results|namespace, path) = fail
+  
+  /**
+   * Extension point. Override this rule to adjust how the index assigns a namespace and path (URI) to definitions and
+   * use sites. Should return a path that will be assigned to the definition or use site.
+   *
+   * Extension example:
+   *   adjust-index-path(check-target-definition|namespace, path):
+   *     Start(_, _) -> [<string-replace(|<project-path>, "")> <Fst> <index-get-current-file>]
+   *
+   *
+   * @param check-target-definition 
+   * @param namespace               The namespace that would be given to the current definition or use site.
+   * @param path                    The path that would be given to the current definition or use site.
+   * @type def -> uri@[namespace|path]
+   */
+  adjust-index-path(check-target-definition|namespace, path) = fail
+  
+  /**
+   * Extension point. Override this rule to define index-stored constructors to check for difference during analysis.
+   * The index-diff-compare extension point is used to do the actual comparison. Defaults to Def constructs.
+   *
+   * Extension example:
+   *   index-diff-constructors = ?Type(_, _)
+   *
+   * @type a -> ?a
+   *
+   * @see index-diff-compare
+   */
+  index-diff-constructors = 
+    ?Def(_)
+  
+  /**
+   * Extension point. Override this rule to define a custom comparison of two index elements. It should fail if they 
+   * are not equal and return the indentity if they are equal. Only constructors defined by index-diff-constructors are
+   * compared.
+   *
+   * Extension example:
+   *   index-diff-compare:
+   *     (Type(u1, v1), Type(u2, v2)) -> <id>
+   *     where
+   *       <index-uri-eq> (u1, u2);
+   *       <eq> (v1, v2)
+   *
+   * @type (a, b) -> ?(a, b)
+   *
+   * @see index-diff-constructors
+   */
+  index-diff-compare:
+    (Def(u1), Def(u2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2)
+ 
+rules // Analysis traversals
+  
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   * Defaults to Editor() phase.
+   *
+   * @param language  The name of the language that is being analysed.
+   *
+   * @type (ast, path, project-path) -> (ast', List(fileToAnalyze@(file, subfile)))
+   *
+   * @see analyze-top(|phase, language)
+   */
+  analyze-top(|language):
+    (ast, path, project-path) -> <analyze-top(|Editor(), language, path, project-path)> ast
+   
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   *
+   * @param phase         The type of analysis phase. There are 2 phases to choose from:
+   *                      - Editor():   File dependencies are analysed.
+   *                      - Compile():  File dependencies are not analysed.
+   * @param language      The name of the language that is being analysed.
+   * @param path          The path of the file to analyze relative to project-path.
+   * @param project-path  The path of the directory that contains all the source files.
+   * @type ast -> (ast', List(fileToAnalyze@(file, subfile)))
+   *
+   * @see analyze-top-internal(|phase, language, project-path, full-path)
+   */
+  analyze-top(|phase, language, path, project-path):
+    ast -> (ast', filesToAnalyze)
+    with
+      full-path := $[[project-path]/[path]];
+      if index-split then
+        index-setup(|language, [project-path], full-path); // Set up the index, splitting may require index calls.
+        asts := <index-toplevel-split> ast;
+        astsFilePairs := <map(ast-uri-to-ast-file(|full-path))> asts;
+        Results(ast', _, _, _, _, _, filesToAnalyze) := 
+          <analyze-top-internal(|phase, language, project-path, full-path)> astsFilePairs
+      else
+        Results(asts, _, _, _, _, _, filesToAnalyze) := 
+          <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, (full-path, []))];
+        ast' := <Hd> asts // Always returns a list of 1 AST if there is no splitter, so take the head.
+      end
+  
+rules // Parallel analysis
+  
+  /**
+   * Does a parallel analysis of given files using the specified analysis strategy. Automatically does parallel
+   * analysis of dependent files that have changed during the analysis.
+   *
+   * Example:
+   *   <index-parallel-analyze-files(analyze)> ["text/file1.ext", "text/file2.ext"]
+   *
+   * @param analyze (ast, path, project-path) -> (ast', errors, warnings, notes, filesToAnalyze). Strategy that 
+   *                analyzes a file using the index. Gets a (ast, path, project-path) tuple as input and must return 
+   *                a (ast', errors, warnings, notes, filesToAnalyze) tuple as output.
+   * @type List((file, subfile) or file) -> None()
+   */
+  index-parallel-analyze-files(analyze):
+    files -> None()
+    with
+      length; 
+      set-total-work-units
+    with
+      index-parallel-analyze(analyze);
+      filter(not(?ParallelResults((), (), _, _, _, _) <+ ?ParallelResults((), [()], _, _, _, _)); index-set-markers)
+      
+rules // Splitter
+  
+  /**
+   * Merges a top level definition back into an AST using splitter rules.
+   *
+   * @param toplevel  The top level definition to merge back into the given AST.
+   * @type ast -> ast'
+   */
+  index-merge-ast(|toplevel):
+    term -> merged
+    with
+      if <is-list> term then
+        [first-ast|_] := term;
+        merged        := <index-merge-ast(|toplevel)> first-ast
+      else
+        if <index-is-qualifier> term then
+          [elem|_]    := <index-qualifier-subelements> term;
+          merged      := <index-create-qualifier(|term)> <index-merge-ast(|toplevel)> elem
+        else
+          merged      := toplevel
+        end
+      end
+ 
+rules // Query primitives
+ 
+  /**
+   * Gets a DefData entry that matches the kind of data and given URI, or fail.
+   *
+   * Example:
+   *   <index-get-data(|Type())> Def([Entity(), "Bar"]) => [DefData([Entity(), "Bar"], Type(), TYPE("Bar")), ...]
+   *
+   * @param kind Only data of this kind is returned.
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(DefData(uri, kind, value))
+   */
+  index-get-data(|kind):
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-value> DefData(uri, kind, ())
+      
+  /**
+   * Gets all DefData entries that match the kind of data and given URI
+   *
+   * Example:
+   *   <index-get-data-all(|Type())> Def([Entity(), "Bar"]) => [TYPE("Bar"), ...]
+   *
+   * @param kind Only data of this kind is returned.
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(value)
+   */
+  index-get-data-all(|kind):
+     <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-all-values> DefData(uri, kind, ())
+
+  /**
+   * Gets a Use entry that matches given URI, or fail.
+   *
+   * Example:
+   *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"]), ...]
+   *
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Use(uri))
+   */
+  index-get-use:
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-all> Use(uri)
+     
+  /**
+   * Gets all Use entries that match the given URI.
+   *
+   * Example:
+   *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"]), ...]
+   *
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Use(uri))
+   */
+  index-get-uses-all:
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-all> Use(uri)
+     
+  /**
+   * Gets all Read and ReadWildcard entries that match the given URI.
+   *
+   * Example:
+   *   <index-get-reads-all> [Property(), "Bar", "p"] => [Read([Property(), "Bar", "p"]), ...]
+   *
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Read(uri) or ReadWildcard(uri, prefix))
+   */
+  index-get-reads-all:
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <conc> (reads, readwildcards')
+    where
+      reads := <index-get-all> Read(uri);
+      if !uri => [namespace, prefix | path-parent] then
+        readwildcards  := <index-get-all> ReadWildcard([namespace | path-parent], ());
+        readwildcards' := <filter(index-readwildcard-substring(|prefix))> readwildcards
+      else
+        readwildcards' := []
+      end
+ 
+  /**
+   * Get all index entries that match the given template.
+   *
+   * Example:
+   *   <index-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type template -> List(elem)
+   */
+  index-get-all:
+    template -> <indexlib-get-all> template
+      with
+       if set := <Index-ReadSet> then
+         uri := <index-uri>;
+         <iset-add(|Read(uri))> set
+       end
+       
+  /**
+   * Get all values of index entries that match the given template.
+   *
+   * Example:
+   *   <index-get-all-values> DefData([Property(), "s"], Type(), ()) => [TYPE("String"), ...]
+   *
+   * @type template -> List(value)
+   *
+   * @see index-value
+   */
+  index-get-all-values:
+    template -> <map(index-value)> <index-get-all> template
+       
+  /**
+   * Get the first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <index-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   *
+   * @type template -> ?elem
+   */
+  index-get:
+    template -> <?[<id>|_]> <index-get-all> template
+      
+  /**
+   * Get the value of first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <index-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
+   *
+   * @type template -> ?value
+   *
+   * @see index-value
+   */
+  index-get-value:
+    template -> <index-value> <?[<id>|_]> <index-get-all> template
+
+  /**
+   * Gets all Def children elements of an URI in a certain namespace.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * Example:
+   *   <index-get-children(|Field())> Def([Entity(), "Baz"]) => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
+   *   <index-get-children(|Field())> "Foo"{[Entity(), "Baz"]} => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
+   *   <index-get-children(|Field())> [Entity(), "Baz"] => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
+   *
+   * @param namespace Only child Def elements in this namespace are returned.
+   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
+   */
+  index-get-children(|namespace) = 
+    index-get-children(\uri -> Def(uri)\, id|namespace)
+  
+  /**
+   * Gets all children elements of an URI in a certain namespace using custom templates.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * @param construct-template  uri -> template. Should create a template to match index entries with, given an URI.
+   * @param name-compare        element -> ?element. Strategy for filtering children elements.
+   * @param namespace           Only child elements in this namespace are returned.
+   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
+   */
+  index-get-children(construct-template, name-compare|namespace):
+    <with([parent-ns | path] := <index-uri> | "Def, key or URI expected")> -> children
+    with
+      template  := <construct-template> [namespace | path];
+      children  := <prim("LANG_index_get_children", template)>;
+      <store-wildcard-read(|namespace, path, "")> children
+
+  /**
+   * Gets all Def children elements of an URI in a certain namespace where the name starts with a prefix.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * Example:
+   *   <index-get-children(|Field(), "fo")> Def([Entity(), "Baz"]) => [Def([Field(), "Foo"]), ...]
+   *   <index-get-children(|Field(), "ba")> "Foo"{[Entity(), "Baz"]} => [Def([Field(), "Bar"]), ...]
+   *   <index-get-children(|Field(), "ze")> [Entity(), "Baz"] => [...]
+   *
+   * @param namespace Only child Def elements in this namespace are returned.
+   * @param prefix    Only child Def elements where the name starts with this prefix are returned.
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Def(uri))
+   */
+  index-get-children(|namespace, prefix) = 
+    index-get-children(\uri -> Def(uri)\, index-compare-name-substring(|prefix, namespace)|namespace, prefix)
+  
+  /**
+   * Gets all children elements of an URI in a certain namespace where the name starts with a prefix
+   * using custom templates.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * @param construct-template  uri -> template. Should create a template to match index entries with, given an URI.
+   * @param name-compare        element -> ?element. Strategy for filtering children elements.
+   * @param namespace           Only child elements in this namespace are returned.
+   * @param prefix              Only child elements where the name starts with this prefix are returned.
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Def(uri))
+   */
+  index-get-children(construct-template, name-compare|namespace, prefix):
+    <with([parent-ns | path] := <index-uri> | "Def, key or URI expected")> -> children'
+    with
+      template  := <construct-template> [namespace | path];
+      children  := <prim("LANG_index_get_children", template)>;
+      children' := <filter(name-compare)> children;
+      <store-wildcard-read(|namespace, path, prefix)> children'
+
+  /**
+   * Gets a set of all files that have a reference to the given index entries.
+   *
+   * Example:
+   *   <index-get-referenced-files(\uri -> [Read(uri), Use(uri, [])]\)> [Def([Entity(), "Bar"]), ...] => 
+   *     [("fullpath/otherfile.ext", "subfile"), ...]
+   *
+   * @param construct-from-uri  uri -> List(elements). Construction strategy that creates a list of reference 
+   *                            constructs from all given entries, such as \uri -> [Read(uri), Use(uri, [])]\
+   * @type List(elem) -> List((file, subfile))
+   */
+  index-get-referenced-files(construct-from-uri):
+    entries -> files
+    where
+      uris        := <filter(index-uri)> entries;
+      referenced  := <concat> <filter(construct-from-uri)> uris;
+      files       := <iset-elements> <iset-addlist(|<mapconcat(index-get-files-of)> referenced)> <new-iset>
+ 
+  /**
+   * Convenience function for finding files with Read and Use dependencies to the given definitions.
+   *
+   * Example:
+   *   <index-get-dependent-files> [Def([Entity(), "Bar"]), ...] => [("fullpath/otherfile.ext", "subfile"), ...]
+   *
+   * @type List(elem) -> List((file, subfile))
+   *
+   * @see index-get-referenced-files(construct-from-uri)
+   * @see index-file-dependent-construct
+   */
+  index-get-dependent-files = 
+    index-get-referenced-files(index-file-dependent-construct)
+     
+rules // Index lookup rules (that take into account adjust-index-lookup)
+ 
+  /**
+   * Given an annotated AST node, resolves it, returning its definition.
+   * Uses precise matching for names.
+   *
+   * @type "name"{uri} -> ?Def(uri')
+   */
+  index-lookup:
+    x{[namespace|path]} -> <index-lookup-internal(index-compare-name-equal(|name)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
+ 
+  /**
+   * Given an annotated AST node, resolves it, returning all its definitions.
+   * Uses precise matching for names.
+   * 
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all:
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-name-equal(|name)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
+ 
+  /**
+   * Given an annotated AST node and a prefix, looks for all definitions with given prefix starting at the scope of 
+   * the given node.
+   * Uses substring matching for names.
+   *
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all(|prefix):
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-name-substring(|prefix)|ns, path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace
+      
+  /**
+   * Given an annotated AST node, resolves it in only the parent scope of the given node, returning all its definitions.
+   * Uses precise matching for names.
+   *
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-scoped:
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(index-compare-name-equal(|name)|ns, parent-path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x;
+      (<?[_|<id>]> path <+ !path) => parent-path
+      
+  /**
+   * Given an annotated AST node, resolves it in only the parent scope of the given node, returning all its definitions.
+   * Uses precise matching for names. Imports are not considered.
+   *
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-scoped-noimports:
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(fail, id, index-compare-name-equal(|name)|ns, parent-path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x;
+      (<?[_|<id>]> path <+ !path) => parent-path
+  
+  /**
+   * Given an annotated AST node and a prefix, looks for all definitions with given prefix in only the parent scope of 
+   * the given node.
+   * Uses substring matching for names.
+   *
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-scoped(|prefix):
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(index-compare-name-substring(|prefix)|ns, parent-path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      (<?[_|<id>]> path <+ !path) => parent-path
+
+  /**
+   * Given an annotated AST node and a namespace, returns all definitions inside given node with given namespace.
+   * Does not match names, all names are allowed.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-children(|namespace) = 
+    index-lookup-children(|namespace, "")
+      
+  /**
+   * Given an annotated AST node, a namespace and prefix, returns all definitions inside given node with given 
+   * namespace and prefix.
+   * Uses substring matching for names.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */    
+  index-lookup-children(|namespace, prefix):
+    x{[_|path]} -> <index-lookup-all-scoped-internal(index-compare-name-substring(|prefix, namespace)|namespace, path, prefix)> x
+      
+rules // Index utilities
+  
+  /**
+   * Gets the namespace part of the URI for given key (term{uri} element).
+   *
+   * Example:
+   *   <index-uri-namespace> "Bar"{[Entity(), "Bar", "Baz"]} => Entity()
+   *
+   * @type "name"{uri@[namespace|path]} -> namespace
+   */
+  index-uri-namespace:
+    x{[namespace|path]} -> <index-namespace-unwrap> namespace
+
+  /**
+   * Gets the path part of the URI for given key (term{uri} element). Resolves it if unresolved.
+   *
+   * Example:
+   *   <index-uri-path> "Bar"{[Entity(), "Bar", "Baz"]} => ["Bar", "Baz"]
+   *
+   * @type "name"{uri@[namespace|path]} -> path'
+   */
+  index-uri-path:
+    x{[namespace|path]} -> path'
+    where
+      if !namespace => Unresolved(namespace) then
+        Def(path') := <index-lookup>
+      else
+        path' := path
+      end
+      
+  /**
+   * Gets the name part of the URI for given key (term{uri} element).
+   *
+   * Example:
+   *   <index-uri-name> "Bar"{[Entity(), "Bar", "Baz"] => "Bar"
+   *
+   * @type "name"{uri@[namespace|[name|restPath]]} -> name
+   */ 
+  index-uri-name:
+    x{[_|[name|_]]} -> name
+    
+  /**
+   * Determines if a given AST node is a definition site, according to the syntax.
+   *
+   * FIXME: Also succeeds on use sites.
+   *
+   * @type def -> ?def
+   */
+  index-is-definition =
+    where(nam-get-definition-key)
+    
+  /**
+   * Checks if given keys (term{uri} elements) are equal. Discards unresolved URI's.
+   *
+   * Example:
+   *   <index-key-eq> ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]}) => 
+   *     ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]})
+   *   <index-key-eq> ("Foo"{[Entity(), "Foo"]}, "Bar"{[Entity(), "Bar"]}) => fail
+   *
+   * @type (k1, k2) -> ?(k1, k2)
+   */      
+  index-key-eq:
+    (k1, k2) -> <id>
+    where
+      <eq> (<index-key-unwrap> k1, <index-key-unwrap> k2)
+      
+  /**
+   * Given a list of file pairs, returns the list of real files.
+   *
+   * @type List((file, subfile)) -> List(file)
+   */    
+  index-filepairs-to-files:
+    filePairs -> files
+    with
+      files := <make-set> <map(Fst; string-replace(|<conc-strings> (<project-path>, "/"), ""))> filePairs

Added: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/analysis-library.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/analysis-library.str	Mon Jul 23 12:53:43 2012	(r25238)
@@ -0,0 +1,476 @@
+module lib/analysis-library
+ 
+imports
+  libstratego-lib
+  libstratego-parallel
+  lib/editor-common.generated
+  lib/analysis-library-internal
+  lib/index-library
+ 
+signature constructors
+ 
+  // Analyze constructors
+  Editor      : AnalysisPhase
+  Compile     : AnalysisPhase
+ 
+  // Index elements
+  Def          : List(UriPart) -> Summary
+  Use          : List(UriPart) -> Summary
+  BadUse       : List(UriPart) -> Summary
+  Read         : List(UriPart) -> Summary
+  ReadWildcard : List(UriPart) * String -> Summary
+  Diff         : List(UriPart) * List(Summary) -> Summary
+  
+  // Adjust lookup actions
+  StopLookup   : LookupAction
+  
+rules // Index analysis extension points
+ 
+  index-type-of:
+  	Def(uri) -> <index-get-data(|Type())>
+  	where
+  		<is-list> uri
+  		
+  index-type-of:
+  	_{uri} -> <index-type-of> Def(uri)
+  	
+  type-of = fail
+  
+  /**
+   * Extension point. Override this rule to adjust how the index analysis looks up use sites to definitions.
+   *
+   * The overriden rule must return a list that contains any of the following items:
+   *   - Def(uri)         : A definition with exactly this URI has been found. This tells the lookup to resolve the
+   *                        use site to this definition.
+   *   - [namespace|path] : This tells the lookup to do a new lookup at the given namespace and path.
+   * 
+   * Returning multiple of these in the list is allowed, these will all show up during content completion and possibly
+   * other custom strategies. If multiple items are returned during reference resolving for example, the first item
+   * will be used.
+   *
+   * If the lookup has failed, for example your custom rule cannot find any definitions, you can also return 
+   * StopLookup() instead of a list. This tells the lookup algorithm to stop any further lookups for this use site.
+   * This can be useful to stop lookups for recursive expressions like property access, preventing a lot of useless
+   * lookups that will always fail anyway.
+   *
+   * Extension example:
+   *   adjust-index-lookup(check-target-name|namespace, path, prefix):
+   *     PropAccess(exp, name) -> properties
+   *     where
+   *       <check-target-name> name
+   *     with
+   *       if TYPE(type{_}) := <type-of> exp then
+   *         properties := <index-lookup-children(|Property(), prefix)> type
+   *       else
+   *         properties := StopLookup()
+   *       end
+   *
+   *   adjust-index-lookup(check-target-name|namespace, path, prefix):
+   *     Var(name) -> [[Var() | path], [Property() | path]]
+   *     where
+   *       <check-target-name> name
+   *
+   * @param check-target-name   A strategy that should be used to check if the name of the current element is what the
+   *                            lookup algorithm is looking for.
+   * @param namespace           The namespace of the element that should be looked up.
+   * @param path                The path the lookup algorithm is currently looking at for the element.
+   * @param prefix              The prefix name of the element the lookup algorithm is looking for. This is usually the
+   *                            full name of the element, but could be a partial prefix during content completion.
+   * @type def -> List(Def(uri) or [namespace|path]) or StopLookup()
+   */
+  adjust-index-lookup(check-target-name|namespace, path, prefix) = fail
+    
+  /** 
+   * Extension point. Override this rule to store data about definitions in the index. Should call <store-results> on 
+   * a (list of) data that must be stored in the index.
+   *
+   * Note that store-results always fails, this is a trick to make every adjust-index-def-data override always fail so 
+   * that every overriden rule is called once for each definition. This can lead to unexpected behaviour when trying to 
+   * store multiple items by calling store-results in a map or filter! Be sure to always let your adjust-index-def-data 
+   * rule fail if you are doing a <filter(store-results)> for example.
+   *
+   * Extension example:
+   *   adjust-index-def-data(store-results|namespace, path):
+   *     def -> <store-results> Type([namespace|path], type)
+   *     where
+   *       type := <type-of> def
+   *
+   * @param store-results Call this on the data you want to store in the index.
+   * @param namespace     The namespace of the definition that the rule is being called on.
+   * @param path          The path of the definition that the rule is being called on.
+   * @type def -> fail 
+   */
+  adjust-index-def-data(store-results|namespace, path) = fail
+  
+  /**
+   * Extension point. Override this rule to adjust how the index assigns a namespace and path (URI) to definitions and
+   * use sites. Should return a path that will be assigned to the definition or use site.
+   *
+   * Extension example:
+   *   adjust-index-path(check-target-definition|namespace, path):
+   *     Start(_, _) -> [<string-replace(|<project-path>, "")> <Fst> <index-get-current-file>]
+   *
+   *
+   * @param check-target-definition 
+   * @param namespace               The namespace that would be given to the current definition or use site.
+   * @param path                    The path that would be given to the current definition or use site.
+   * @type def -> uri@[namespace|path]
+   */
+  adjust-index-path(check-target-definition|namespace, path) = fail
+  
+  /**
+   * Extension point. Override this rule to define index-stored constructors to check for difference during analysis.
+   * The index-diff-compare extension point is used to do the actual comparison. Defaults to Def constructs.
+   *
+   * Extension example:
+   *   index-diff-constructors = ?Type(_, _)
+   *
+   * @type a -> ?a
+   *
+   * @see index-diff-compare
+   */
+  index-diff-constructors = 
+    ?Def(_)
+  
+  /**
+   * Extension point. Override this rule to define a custom comparison of two index elements. It should fail if they 
+   * are not equal and return the indentity if they are equal. Only constructors defined by index-diff-constructors are
+   * compared.
+   *
+   * Extension example:
+   *   index-diff-compare:
+   *     (Type(u1, v1), Type(u2, v2)) -> <id>
+   *     where
+   *       <index-uri-eq> (u1, u2);
+   *       <eq> (v1, v2)
+   *
+   * @type (a, b) -> ?(a, b)
+   *
+   * @see index-diff-constructors
+   */
+  index-diff-compare:
+    (Def(u1), Def(u2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2)
+ 
+rules // Analysis traversals
+  
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   * Defaults to Editor() phase.
+   *
+   * @param language  The name of the language that is being analysed.
+   *
+   * @type (ast, path, project-path) -> (ast', List(fileToAnalyze@(file, subfile)))
+   *
+   * @see analyze-top(|phase, language)
+   */
+  analyze-top(|language):
+    (ast, path, project-path) -> <analyze-top(|Editor(), language, path, project-path)> ast
+   
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   *
+   * @param phase         The type of analysis phase. There are 2 phases to choose from:
+   *                      - Editor():   File dependencies are analysed.
+   *                      - Compile():  File dependencies are not analysed.
+   * @param language      The name of the language that is being analysed.
+   * @param path          The path of the file to analyze relative to project-path.
+   * @param project-path  The path of the directory that contains all the source files.
+   * @type ast -> (ast', List(fileToAnalyze@(file, subfile)))
+   *
+   * @see analyze-top-internal(|phase, language, project-path, full-path)
+   */
+  analyze-top(|phase, language, path, project-path):
+    ast -> (ast', filesToAnalyze)
+    with
+      full-path := $[[project-path]/[path]];
+      if index-split then
+        index-setup(|language, [project-path], full-path); // Set up the index, splitting may require index calls.
+        asts := <index-toplevel-split> ast;
+        astsFilePairs := <map(ast-uri-to-ast-file(|full-path))> asts;
+        Results(ast', _, _, _, _, _, filesToAnalyze) := 
+          <analyze-top-internal(|phase, language, project-path, full-path)> astsFilePairs
+      else
+        Results(asts, _, _, _, _, _, filesToAnalyze) := 
+          <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, full-path)];
+        ast' := <Hd> asts
+      end
+  
+rules // Parallel analysis
+  
+  /**
+   * Does a parallel analysis of given files using the specified analysis strategy. Automatically does parallel
+   * analysis of dependent files that have changed during the analysis.
+   *
+   * Example:
+   *   <index-parallel-analyze-files(analyze)> ["text/file1.ext", "text/file2.ext"]
+   *
+   * @param analyze (ast, path, project-path) -> (ast', errors, warnings, notes, filesToAnalyze). Strategy that 
+   *                analyzes a file using the index. Gets a (ast, path, project-path) tuple as input and must return 
+   *                a (ast', errors, warnings, notes, filesToAnalyze) tuple as output.
+   * @type List((file, subfile) or file) -> None()
+   */
+  index-parallel-analyze-files(analyze):
+    files -> None()
+    with
+      length; 
+      set-total-work-units
+    with
+      index-parallel-analyze(analyze);
+      filter(not(?ParallelResults((), (), _, _, _, _) <+ ?ParallelResults((), [()], _, _, _, _)); index-set-markers)
+
+rules // Splitter
+  
+  /**
+   * Merges a top level definition back into an AST using splitter rules.
+   *
+   * @param toplevel  The top level definition to merge back into the given AST.
+   * @type ast -> ast'
+   */
+  index-merge-ast(|toplevel):
+    term -> merged
+    with
+      if <is-list> term then
+        [first-ast|_] := term;
+        merged        := <index-merge-ast(|toplevel)> first-ast
+      else
+        if <index-is-qualifier> term then
+          [elem|_]    := <index-qualifier-subelements> term;
+          merged      := <index-create-qualifier(|term)> <index-merge-ast(|toplevel)> elem
+        else
+          merged      := toplevel
+        end
+      end
+  
+rules // Query primitives
+ 
+  index-is-unresolved = get-annos; fetch(?Unresolved(_))
+  
+  index-is-unused: 
+  	_{uri} -> <index-get-uses-all; ?[]> Def(uri)
+  	
+  /**
+   * Gets all DefData entries that match the kind of data and URI in given definition.
+   *
+   * Example:
+   *   <index-get-data(|Type())> Def([Entity(), "Bar"]) => [DefData([Entity(), "Bar"], Type(), TYPE("Bar")), ...]
+   *
+   * @param kind Only data of this kind is returned.
+   * @type Def(uri) -> List(DefData(uri, kind, value))
+   */
+  index-get-data(|kind):
+    <with(?Def(uri) | "Def expected")> -> <index-get-value> DefData(uri, kind, ())
+      
+  /**
+   * Gets all data entries that match the kind of data and URI in given definition.
+   *
+   * Example:
+   *   <index-get-data-all(|Type())> Def([Entity(), "Bar"]) => [TYPE("Bar"), ...]
+   *
+   * @param kind Only data of this kind is returned.
+   * @type Def(uri) -> List(value)
+   */
+  index-get-data-all(|kind):
+    <with(?Def(uri) | "Def expected")> -> <index-get-all-values> DefData(uri, kind, ())
+     
+  /**
+   * Gets all Use entries that match the URI in given definition.
+   *
+   * Example:
+   *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"]), ...]
+   *
+   * @type Def(uri) -> List(Use(uri))
+   */
+  index-get-uses-all:
+    <with(?Def(uri) | "Def expected")> -> <index-get-all> Use(uri)
+     
+  /**
+   * Gets all Read or ReadWildcard entries that match the given template.
+   *
+   * Example:
+   *   <index-get-reads-all> [Property(), "Bar", "p"] => [Read([Property(), "Bar", "p"]), ...]
+   *
+   * @type Def(uri) -> List(Read(uri) or ReadWildcard(uri, prefix))
+   */
+  index-get-reads-all:
+    template -> <conc> (reads, readwildcards')
+    where
+      uri   := <index-uri> template;
+      reads := <index-get-all> Read(uri);
+      if !uri => [namespace, prefix | path-parent] then
+        readwildcards  := <index-get-all> ReadWildcard([namespace | path-parent], ());
+        readwildcards' := <filter(index-readwildcard-substring(|prefix))> readwildcards
+      else
+        readwildcards' := []
+      end
+ 
+  /**
+   * Get all index entries that match the given template.
+   *
+   * Example:
+   *   <index-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type template -> List(elem)
+   */
+  index-get-all:
+    template -> <indexlib-get-all> template
+      with
+       if set := <Index-ReadSet> then
+         uri := <index-uri>;
+         <iset-add(|Read(uri))> set
+       end
+       
+  /**
+   * Get all values of index entries that match the given template.
+   *
+   * Example:
+   *   <index-get-all-values> DefData([Property(), "s"], Type(), ()) => [TYPE("String"), ...]
+   *
+   * @type template -> List(value)
+   *
+   * @see index-value
+   */
+  index-get-all-values:
+    template -> <map(index-value)> <index-get-all> template
+       
+  /**
+   * Get the first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <index-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   *
+   * @type template -> ?elem
+   */
+  index-get:
+    template -> <?[<id>|_]> <index-get-all> template
+      
+  /**
+   * Get the value of first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <index-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
+   *
+   * @type template -> ?value
+   *
+   * @see index-value
+   */
+  index-get-value:
+    template -> <index-value> <?[<id>|_]> <index-get-all> template
+
+  /**
+   * Gets a set of all files that have a reference to the given index entries.
+   *
+   * Example:
+   *   <index-get-referenced-files(\uri -> [Read(uri), Use(uri, [])]\)> [Def([Entity(), "Bar"]), ...] => 
+   *     [("fullpath/otherfile.ext", "subfile"), ...]
+   *
+   * @param construct-from-uri  uri -> List(elements). Construction strategy that creates a list of reference 
+   *                            constructs from all given entries, such as \uri -> [Read(uri), Use(uri, [])]\
+   * @type List(elem) -> List((file, subfile))
+   */
+  index-get-referenced-files(construct-from-uri):
+    entries -> files
+    where
+      uris        := <filter(index-uri)> entries;
+      referenced  := <concat> <filter(construct-from-uri)> uris;
+      files       := <iset-elements> <iset-addlist(|<mapconcat(index-get-files-of)> referenced)> <new-iset>
+ 
+  /**
+   * Convenience function for finding files with Read and Use dependencies to the given definitions.
+   *
+   * Example:
+   *   <index-get-dependent-files> [Def([Entity(), "Bar"]), ...] => [("fullpath/otherfile.ext", "subfile"), ...]
+   *
+   * @type List(elem) -> List((file, subfile))
+   *
+   * @see index-get-referenced-files(construct-from-uri)
+   * @see index-file-dependent-construct
+   */
+  index-get-dependent-files = 
+    index-get-referenced-files(index-file-dependent-construct)
+           
+rules // Index utilities
+  
+  /**
+   * Gets the namespace part of the URI for given key (term{uri} element).
+   *
+   * Example:
+   *   <index-uri-namespace> "Bar"{[Entity(), "Bar", "Baz"]} => Entity()
+   *
+   * @type "name"{uri@[namespace|path]} -> namespace
+   */
+  index-uri-namespace:
+    x{[namespace|path]} -> <index-namespace-unwrap> namespace
+
+  /**
+   * Gets the path part of the URI for given key (term{uri} element). Resolves it if unresolved.
+   *
+   * Example:
+   *   <index-uri-path> "Bar"{[Entity(), "Bar", "Baz"]} => ["Bar", "Baz"]
+   *
+   * @type "name"{uri@[namespace|path]} -> path'
+   */
+  index-uri-path:
+    x{[namespace|path]} -> path
+      
+  /**
+   * Gets the name part of the URI for given key (term{uri} element).
+   *
+   * Example:
+   *   <index-uri-name> "Bar"{[Entity(), "Bar", "Baz"] => "Bar"
+   *
+   * @type "name"{uri@[namespace|[name|restPath]]} -> name
+   */ 
+  index-uri-name:
+    x{[_|[name|_]]} -> name
+    
+  /**
+   * Tries to get the name part of the URI for given term or fail if given term does not have an URI or name.
+   *
+   * Example:
+   *   <index-uri-name> Def([Entity(), "Bar", "Baz"]) => "Bar"
+   *   <index-uri-name> Type("Foo") => fail
+   *   <index-uri-name> Read([Entity()]) => fail
+   *
+   * @type x -> name
+   */   
+  index-uri-name:
+    x -> <index-uri-name> <index-uri> x
+    where
+      not(<has-annos> x)
+    
+  /**
+   * Determines if a given AST node is a definition site, according to the syntax.
+   *
+   * FIXME: Also succeeds on use sites.
+   *
+   * @type def -> ?def
+   */
+  index-is-definition =
+    where(nam-get-definition-keys; Hd)
+    
+  /**
+   * Checks if given keys (term{uri} elements) are equal. Discards unresolved URI's.
+   *
+   * Example:
+   *   <index-key-eq> ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]}) => 
+   *     ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]})
+   *   <index-key-eq> ("Foo"{[Entity(), "Foo"]}, "Bar"{[Entity(), "Bar"]}) => fail
+   *
+   * @type (k1, k2) -> ?(k1, k2)
+   */      
+  index-key-eq:
+    (k1, k2) -> <id>
+    where
+      <eq> (<index-key-unwrap> k1, <index-key-unwrap> k2)
+      
+  /**
+   * Given a list of file pairs, returns the list of real files.
+   *
+   * @type List((file, subfile)) -> List(file)
+   */    
+  index-filepairs-to-files:
+    filePairs -> files
+    with
+      files := <make-set> <map(Fst; string-replace(|<conc-strings> (<project-path>, "/"), ""))> filePairs
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/compilation-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/compilation-library.generated.str	Mon Jul 23 12:53:43 2012	(r25238)
@@ -0,0 +1,244 @@
+module lib/compilation-library.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  
+rules // Extension points
+  
+  /**
+   * Extension point. Override this rule to define a desugaring that is applied to AST before analyzing and compiling.
+   *
+   * Extension example:
+   *   index-desugar-ast:
+   *     ast -> <desugar> ast
+   *
+   * @type ast -> ast'
+   */
+  index-desugar-ast = fail
+    
+  /**
+   * Extension point. Override this rule to define a compilation or transformation to some other target language. The
+   * index manages which files have to be compiled and calls this rule for each AST that has changed since the last
+   * compilation.
+   *
+   * Extensions example:
+   *   index-compile-ast(|file, subfile):
+   *     ast -> None()
+   *     with
+   *       java := <to-java> ast;
+   *       full-path := <dirname> file;
+   *       filename := <guarantee-extension(|"java")> <base-filename> file;
+   *       writePath := $[[full-path]/java/];
+   *       writeFile :=  $[[writePath][filename]];
+   *       try(<mkdir> writePath);
+   *       <fclose> <fputs> (java, <fopen> (writeFile, "w"))
+   *
+   * @param file    The file that must be compiled.
+   * @param subfile The subfile that must be compiled ("" if there is no subfile).
+   * @type ast -> None()
+   */
+  index-compile-ast(|file, subfile) = fail
+
+  /**
+   * Extension point. 
+   */
+  index-is-partial-ast = fail
+
+  /**
+   * Extension point. 
+   */
+  index-combine-asts = fail
+  
+rules // Compilation
+  
+  /**
+   * Schedules compilation in the background of all files that have changed since the last compilation.
+   *
+   * @type x -> x
+   */
+  index-schedule-compilation:
+    _ -> None()
+    with
+      queue-strategy(|"index-compilation", "Compiling files")
+  
+  /** @internal */
+  index-compilation:
+    language -> None()
+    with
+      // Init
+      project-path := <project-path>;
+      index-setup(|language, [project-path], ".")
+    with
+      // Determine the files to compile by looking at changed files
+      diffs         := <analyze-get-compilediffs>;
+      files         := <map(index-compilation-restore-read-file)> diffs;
+      filteredFiles := <make-set> <remove-all(index-compilation-filter-file)> files;
+      (completeFiles, partialFiles) := <index-split-partial-files> filteredFiles;
+      
+      // Clean compile time reads
+      <filter(index-compilation-clean-reads)> completeFiles;
+      <filter(index-compilation-clean-reads)> partialFiles;
+      
+      // Set total work units to number of files to compile for visual indication
+      <set-total-work-units> <add> (<length> completeFiles, <length> partialFiles);
+      
+      // Compile the files
+      <filter(index-compilation-file; complete-work-unit)> completeFiles;
+      <filter(index-compilation-partial-file; complete-work-unit)> partialFiles
+      
+  /** @internal */    
+  index-split-partial-files:
+    files -> (completeFiles, <make-set> splitFiles)
+    with
+      (completeFiles, splitFiles) := <partition(not(index-file-is-partial), index-file-is-partial)> files
+
+  /** @internal */
+  index-compilation-file:
+    (path, subfile) -> None()
+    with
+    	asts := <index-get-all-values> AST(subfile, ());
+      <map(index-compilation-ast(|path, subfile))> asts
+      
+  /** @internal */    
+  index-compilation-partial-file:
+    (path, subfile) -> None()
+    with
+      asts := <index-get-all-values> AST(subfile, ());
+      if 1 := <length> asts then
+      	ast := <?[<id>|_]> asts
+    	else
+    		ast := <try(index-combine-asts)> asts
+  		end;
+      <index-compilation-ast(|path, subfile)> ast
+      
+  /** @internal */
+  index-compilation-ast(|path, subfile):
+    ast -> None()
+    with
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Compile file
+        <try(index-compile-ast(|path, subfile))> ast;
+        
+        // Store compile-time reads.
+        reads := <iset-elements> readSet;
+        <index-add-all(|<index-compilation-file-tuple> (path, subfile))> reads
+      |} 
+
+  /** @internal */
+  index-compilation-filter-file:
+    (file, subfile) -> (file, subfile)
+    where
+      <is-test-file <+ index-is-fake-file <+ not(file-exists)> file
+    
+rules // On save handling
+  
+  /**
+   * Commits the index to disk and schedules compilation. Use trigger-commit-and-compile instead of this strategy.
+   *
+   * @see trigger-commit-and-compile
+   *
+   * @internal
+   */
+  commit-and-compile:
+    language -> None()
+    with
+      index-commit
+    with
+      index-schedule-compilation
+
+  /**
+   * Triggers commit and compilation, requires target language as current term.
+   * Compilation can be delayed by using disable-commit-and-compile. Compilation will be triggered when 
+   * enable-commit-and-compile is called.
+   *
+   * @type language -> language
+   *
+   * @see enable-commit-and-compile
+   * @see disable-commit-and-compile
+   */
+  trigger-commit-and-compile:
+    language -> <id>
+    with
+      if not(index-is-global-enabled(|"delay-compile")) then
+        commit-and-compile
+      else
+        index-enable-global(|"trigger-compile")
+      end
+  
+  /**
+   * Delays commit and compilation until enable-commit-and-compile is called.
+   *
+   * @type x -> x
+   *
+   * @see enable-commit-and-compile
+   */
+  disable-commit-and-compile = 
+    index-enable-global(|"delay-compile")
+  
+  /**
+   * Cancels the commit and compilation delay, requires target language as current term. 
+   * If commit and compilation was triggered during the delay, it is triggered now.
+   *
+   * @type language -> language
+   *
+   * @see disable-commit-and-compile
+   */
+  enable-commit-and-compile:
+    language -> <id>
+    with
+      if index-is-global-enabled(|"trigger-compile") then
+        commit-and-compile
+      end;
+      index-disable-global(|"delay-compile")
+      
+/** @internal */
+rules // Compile time reads
+
+  /** @internal */
+  index-compilation-restore-read-file:
+    (file, subfile) -> (file', subfile)
+    where
+      if removedPath := <string-replace(|<index-compilation-read-path>, "")> file then
+        file' := removedPath
+      else
+        file' := file
+      end
+
+  /** @internal */
+  index-compilation-restore-read-file:
+    file -> file'
+    where
+      not(<is-tuple> file);
+      if removedPath := <string-replace(|<index-compilation-read-path>, "")> file then
+        file' := removedPath
+      else
+        file' := file
+      end
+      
+  /** @internal */
+  index-compilation-clean-reads = 
+    ?(file, subfile); index-compilation-file-tuple; index-clear-file
+      
+  /** @internal */
+  index-compilation-file-tuple:
+    (file, subfile) -> ($[[<index-compilation-read-path>]/[file]], subfile)
+    
+  /** @internal */
+  index-compilation-read-path =
+    !"/.internal/reads/compile"
+    
+/** @internal */
+rules // Utility
+
+  /** @internal */
+  index-file-is-partial:
+  	file -> file
+  	where 
+      Snd; index-uri; index-is-partial-ast

Added: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/compilation-library.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/compilation-library.str	Mon Jul 23 12:53:43 2012	(r25238)
@@ -0,0 +1,245 @@
+module lib/compilation-library
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  lib/index-library
+  lib/analysis-library
+  lib/analysis-library-internal
+  
+rules // Extension points
+  
+  /**
+   * Extension point. Override this rule to define a desugaring that is applied to AST before analyzing and compiling.
+   *
+   * Extension example:
+   *   index-desugar-ast:
+   *     ast -> <desugar> ast
+   *
+   * @type ast -> ast'
+   */
+  index-desugar-ast = fail
+    
+  /**
+   * Extension point. Override this rule to define a compilation or transformation to some other target language. The
+   * index manages which files have to be compiled and calls this rule for each AST that has changed since the last
+   * compilation.
+   *
+   * Extensions example:
+   *   index-compile-ast(|file, subfile):
+   *     ast -> None()
+   *     with
+   *       java := <to-java> ast;
+   *       full-path := <dirname> file;
+   *       filename := <guarantee-extension(|"java")> <base-filename> file;
+   *       writePath := $[[full-path]/java/];
+   *       writeFile :=  $[[writePath][filename]];
+   *       try(<mkdir> writePath);
+   *       <fclose> <fputs> (java, <fopen> (writeFile, "w"))
+   *
+   * @param file    The file that must be compiled.
+   * @param subfile The subfile that must be compiled ("" if there is no subfile).
+   * @type ast -> None()
+   */
+  index-compile-ast(|file, subfile) = fail
+
+  /**
+   * Extension point. 
+   */
+  index-is-partial-ast = fail
+
+  /**
+   * Extension point. 
+   */
+  index-combine-asts = fail
+  
+rules // Compilation
+  
+  /**
+   * Schedules compilation in the background of all files that have changed since the last compilation.
+   *
+   * @type x -> x
+   */
+  index-schedule-compilation:
+    _ -> None()
+    with
+      queue-strategy(|"index-compilation", "Compiling files")
+  
+  /** @internal */
+  index-compilation:
+    language -> None()
+    with
+      // Init
+      project-path := <project-path>;
+      index-setup(|language, [project-path], ".")
+    with
+      // Determine the files to compile by looking at changed files
+      diffs         := <analyze-get-compilediffs>;
+      files         := <map(index-compilation-restore-read-file)> diffs;
+      filteredFiles := <make-set> <remove-all(index-compilation-filter-file)> files;
+      (completeFiles, partialFiles) := <index-split-partial-files> filteredFiles;
+      
+      // Clean compile time reads
+      <filter(index-compilation-clean-reads)> completeFiles;
+      <filter(index-compilation-clean-reads)> partialFiles;
+      
+      // Set total work units to number of files to compile for visual indication
+      <set-total-work-units> <add> (<length> completeFiles, <length> partialFiles);
+      
+      // Compile the files
+      <filter(index-compilation-file; complete-work-unit)> completeFiles;
+      <filter(index-compilation-partial-file; complete-work-unit)> partialFiles
+      
+  /** @internal */    
+  index-split-partial-files:
+    files -> (completeFiles, <make-set> splitFiles)
+    with
+      (completeFiles, splitFiles) := <partition(not(index-file-is-partial), index-file-is-partial)> files
+
+  /** @internal */
+  index-compilation-file:
+    (path, subfile) -> None()
+    with
+    	asts := <index-get-all-values> AST(subfile, ());
+      <map(index-compilation-ast(|path, subfile))> asts
+      
+  /** @internal */    
+  index-compilation-partial-file:
+    (path, subfile) -> None()
+    with
+      asts := <index-get-all-values> AST(subfile, ());
+      if 1 := <length> asts then
+      	ast := <?[<id>|_]> asts
+    	else
+    		ast := <try(index-combine-asts)> asts
+  		end;
+      <index-compilation-ast(|path, subfile)> ast
+      
+  /** @internal */
+  index-compilation-ast(|path, subfile):
+    ast -> None()
+    with
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Compile file
+        <try(index-compile-ast(|path, subfile))> ast;
+        
+        // Store compile-time reads.
+        reads := <iset-elements> readSet;
+        <index-add-all(|<index-compilation-file-tuple> (path, subfile))> reads
+      |} 
+
+  /** @internal */
+  index-compilation-filter-file:
+    (file, subfile) -> (file, subfile)
+    where
+      <is-test-file <+ index-is-fake-file <+ not(file-exists)> file
+    
+rules // On save handling
+  
+  /**
+   * Commits the index to disk and schedules compilation. Use trigger-commit-and-compile instead of this strategy.
+   *
+   * @see trigger-commit-and-compile
+   *
+   * @internal
+   */
+  commit-and-compile:
+    language -> None()
+    with
+      index-commit
+    with
+      index-schedule-compilation
+
+  /**
+   * Triggers commit and compilation, requires target language as current term.
+   * Compilation can be delayed by using disable-commit-and-compile. Compilation will be triggered when 
+   * enable-commit-and-compile is called.
+   *
+   * @type language -> language
+   *
+   * @see enable-commit-and-compile
+   * @see disable-commit-and-compile
+   */
+  trigger-commit-and-compile:
+    language -> <id>
+    with
+      if not(index-is-global-enabled(|"delay-compile")) then
+        commit-and-compile
+      else
+        index-enable-global(|"trigger-compile")
+      end
+  
+  /**
+   * Delays commit and compilation until enable-commit-and-compile is called.
+   *
+   * @type x -> x
+   *
+   * @see enable-commit-and-compile
+   */
+  disable-commit-and-compile = 
+    index-enable-global(|"delay-compile")
+  
+  /**
+   * Cancels the commit and compilation delay, requires target language as current term. 
+   * If commit and compilation was triggered during the delay, it is triggered now.
+   *
+   * @type language -> language
+   *
+   * @see disable-commit-and-compile
+   */
+  enable-commit-and-compile:
+    language -> <id>
+    with
+      if index-is-global-enabled(|"trigger-compile") then
+        commit-and-compile
+      end;
+      index-disable-global(|"delay-compile")
+      
+/** @internal */
+rules // Compile time reads
+
+  /** @internal */
+  index-compilation-restore-read-file:
+    (file, subfile) -> (file', subfile)
+    where
+      if removedPath := <string-replace(|<index-compilation-read-path>, "")> file then
+        file' := removedPath
+      else
+        file' := file
+      end
+
+  /** @internal */
+  index-compilation-restore-read-file:
+    file -> file'
+    where
+      not(<is-tuple> file);
+      if removedPath := <string-replace(|<index-compilation-read-path>, "")> file then
+        file' := removedPath
+      else
+        file' := file
+      end
+      
+  /** @internal */
+  index-compilation-clean-reads = 
+    ?(file, subfile); index-compilation-file-tuple; index-clear-file
+      
+  /** @internal */
+  index-compilation-file-tuple:
+    (file, subfile) -> ($[[<index-compilation-read-path>]/[file]], subfile)
+    
+  /** @internal */
+  index-compilation-read-path =
+    !"/.internal/reads/compile"
+    
+/** @internal */
+rules // Utility
+
+  /** @internal */
+  index-file-is-partial:
+  	file -> file
+  	where 
+      Snd; index-uri; index-is-partial-ast
+  	 

Added: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/index-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/index-library.generated.str	Mon Jul 23 12:53:43 2012	(r25238)
@@ -0,0 +1,733 @@
+module lib/index-library.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+signature constructors
+  
+  // Index elements
+  DefData      : List(UriPart) * DefDataType * Term -> Summary
+    
+  // URI header
+  Namespace      : UriPart
+  Unresolved     : Namespace -> UriPart
+  INTERNAL_ERROR : UriPart
+  Timestamp      : UriPart
+ 
+  // Remainder of URI
+  String : UriPart
+  Anon   : Int -> UriPart
+  Anon   : UriPart
+  
+  FileEntries : Term * Term -> Term
+  
+  // Globals
+  Global : Namespace
+  Global : List(UriPart) -> Summary
+  Global : List(UriPart) * List(Summary) -> Summary
+  
+  // None namespace
+  None   : Namespace
+  
+rules // Index management
+   
+  /**
+   * Sets up the index library for given language and project paths.
+   * Must be called once before doing anything with the library.
+   *
+   * @param language      The language to set the index up for.
+   * @param project-path  The project paths that contain all source files to analyse and compile.
+   *
+   * @obsolete
+   * @type x -> x
+   */
+  index-setup(|language, project-paths) =
+    obsolete(!"index-setup(|language, project-paths); use index-setup(|language, project-paths, current-file)");
+    index-setup(|language, project-paths, ".")
+    
+  /**
+   * Sets up the index library for given language, project paths and current file.
+   * Must be called once before doing anything with the library.
+   *
+   * Example:
+   *   <index-setup(|"MiniJava", [<project-path>], "test/test.mjv")
+   *
+   * @param language      The language to set the index up for.
+   * @param project-path  The project paths that contain all source files to analyse and compile.
+   * @param current-file  The current file that is being analysed. Can be retrieved later using index-get-current-file.
+   *                      Can also be changed later using index-set-current-file.
+   * @type x -> x
+   */
+  index-setup(|language, project-paths, current-file) =
+    prim("LANG_index_setup", language, project-paths, current-file)
+    
+  /**
+   * Sets the current file the index (analysis) is operating on to the given file.
+   *
+   * Example:
+   *   <index-set-current-file> "fullpath/file.ext"
+   *   <index-set-current-file> ("fullpath/file.ext", "subfile")
+   *
+   * @type x -> ?x
+   */
+  index-set-current-file = 
+    prim("LANG_index_set_current_file", <id>)
+
+  /**
+   * Adds given element to the index with given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-add(|"fullpath/file.ext")> Def([Entity(), "Bar"])
+   *   <index-add(|("fullpath/file.ext", "subfile"))> Def([Entity(), "Bar"])
+   *
+   * @param file  The file (and subfile) to add the element to.
+   * @type x -> ?x
+   */
+  index-add(|file) =
+    prim("LANG_index_add", <id>, file)
+
+  /**
+   * Adds all given elements to the index with given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-add-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
+   *   <index-add-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
+   *
+   * @param file  The file (and subfile) to add the elements to.
+   * @type List(x) -> ?List(x)
+   */
+  index-add-all(|file) =
+    list-loop(with(index-add(|file)))
+    
+  /**
+   * Removes given element from the index that is contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-remove(|"fullpath/file.ext")> Def([Entity(), "Bar"])
+   *   <index-remove(|("fullpath/file.ext", "subfile"))> Def([Entity(), "Bar"])
+   * 
+   * @param file  The file (and subfile) to remove the element from.
+   * @type x -> ?x
+   */
+  index-remove(|file) =
+    prim("LANG_index_remove", <id>, file)
+    
+  /**
+   * Removes all given elements from the index that are contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-remove-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
+   *   <index-remove-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
+   *
+   * @param file  The file (and subfile) to remove the elements from.
+   * @type List(x) -> ?List(x)
+   */
+  index-remove-all(|file) =
+    list-loop(with(index-remove(|file)))
+    
+  /**
+   * Removes all elements from the index that are contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-clear-file> "fullpath/file.ext"
+   *   <index-clear-file> ("fullpath/file.ext", "subfile")
+   *
+   * @type x -> ?x
+   */
+  index-clear-file = 
+    prim("LANG_index_clear_file", <id>)
+    
+  /**
+   * Clears all elements from the index.
+   *
+   * @type x -> x
+   */
+  index-clear = 
+    prim("LANG_index_clear_all")
+    
+  /**
+   * Clears all elements from the index and re-analyzes all files in the project.
+   *
+   * @type x -> x
+   */
+  index-reload = 
+    prim("LANG_index_reload")
+   
+  /**
+   * Commits index to a file on disk.
+   *
+   * @type x -> x
+   */
+  index-commit = 
+    prim("LANG_index_commit")
+
+  /**
+   * Starts a transaction on the index for the current file. Additions to the index are not visible to other files 
+   * until index-end-transaction is called. Operations on the index are only thread safe during a transaction.
+   *
+   * @type x -> x
+   */
+  index-start-transaction = 
+    prim("LANG_index_start_transaction")
+  
+  /**
+   * Ends a transaction on the index for the current file. Additions made to the index during the transaction are
+   * added to the global index visible for other files. Operations on the index are not thread safe any more after 
+   * this call.
+   *
+   * @type x -> x
+   */
+  index-end-transaction = 
+    prim("LANG_index_end_transaction")
+  
+  /**
+   * Starts a transaction, applies given strategy and ends the transaction. All index operations used from the given
+   * strategy are thread safe.
+   * 
+   * @param s The strategy to apply. Transaction will still properly end if strategy fails.
+   * @type x -> x'
+   *
+   * @see index-start-transaction
+   * @see index-end-transaction
+   */
+  index-transaction(s) = 
+    prim("LANG_index_start_transaction"); try(s); prim("LANG_index_end_transaction")
+  
+rules // Index querying
+  
+  /**
+   * Gets the file that the analysis is currently in.
+   *
+   * @type x -> (file, subfile)
+   *
+   * @see index-setup(|language, project-paths, current-file)
+   * @see index-set-current-file
+   */
+  index-get-current-file =
+    prim("LANG_index_get_current_file")
+  
+  /**
+   * Gets a list of all files and subfiles for current project.
+   *
+   * Example:
+   *   <index-get-all-files> => [("fullpath/file.ext", "subfile"), ...]
+   *
+   * @type x -> List((file, subfile))
+   */   
+  index-get-all-files =
+    prim("LANG_index_all_files")
+  
+  /**
+   * Gets all index entries for the given file path and optionally subfile.
+   *
+   * Examples:
+   *   <index-get-all-in-file> "fullpath/file.ext" => [Def([Entity(), "Bar"]), ...]
+   *   <index-get-all-in-file> ("fullpath/file.ext", "subfile") => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type file or (file, subfile) -> List(elem)
+   */  
+  index-get-all-in-file:
+    filepath -> entries
+    with
+      entries := <prim("LANG_index_get_all_in_file", filepath)>
+   
+  /**
+   * Gets index entries in some namespace for the given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-get-all-in-file(|Import())> "fullpath/file.ext" => [Def([Import(), "Bar"]), ...]
+   *   <index-get-all-in-file(|Import())> ("fullpath/file.ext", "subfile") => [Def([Import(), "Bar"]), ...]
+   *
+   * @param namespace Only index entries from this namespace are retrieved.
+   * @type file or (file, subfile) -> List(elem)
+   */  
+  index-get-all-in-file(|namespace):
+    filepath -> entries
+    with
+      // TODO: Optimize -- add an argument to LANG_index_get_all_in_file to do this filtering
+      entries := <prim("LANG_index_get_all_in_file", filepath)>;
+      filter(where(index-uri => [namespace | _]))
+    
+  /**
+   * Gets the revision of a file and optionally subfile.
+   *
+   * Example:
+   *   <index-get-file-revision> "fullpath/file.ext" => 13
+   *   <index-get-file-revision> ("fullpath/file.ext", "subfile") => 37
+   *
+   * @type file or (file, subfile) -> Int
+   */
+  index-get-file-revision:
+    file -> <prim("LANG_index_get_file_revision", file)>
+    
+  /**
+   * Gets the containing files and subfiles of index entry with given template.
+   *
+   * Example:
+   *   <index-get-files-of> Def([Entity(), "Bar"]) => [("fullpath/file.ext", "subfile"), ...]
+   *
+   * @type template -> List((file, subfile))
+   */  
+  index-get-files-of:
+    template -> <prim("LANG_index_get_files_of", template)>
+    
+  /**
+   * Get all index entries that match the given template.
+   *
+   * Example:
+   *   <indexlib-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type template -> List(elem)
+   */
+  indexlib-get-all:
+    template -> <prim("LANG_index_get", template)>
+    
+  /**
+   * Get all values of index entries that match the given template.
+   *
+   * Example:
+   *   <indexlib-get-all-values> DefData([Property(), "s"], Type(), ()) => [TYPE("String"), ...]
+   *
+   * @type template -> List(value)
+   *
+   * @see index-value
+   */
+  indexlib-get-all-values:
+    template -> <map(index-value)> <indexlib-get-all> template
+ 
+  /**
+   * Get the first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <indexlib-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   *
+   * @type template -> ?elem
+   */
+  indexlib-get:
+    template -> <?[<id>|_]> <indexlib-get-all> template
+   
+  /**
+   * Get the value of first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <indexlib-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
+   *
+   * @type template -> ?value
+   *
+   * @see index-value
+   */
+  indexlib-get-value:
+    template -> <index-value> <?[<id>|_]> <indexlib-get-all> template
+    
+rules // Index globals
+    
+  /**
+   * Gets the 'fake' path where globals are stored in the index.
+   *
+   * @internal
+   */
+  index-globals-path = 
+    !"/.internal/globals"
+    
+  /**
+   * Gets the URI where globals are stored in the index for given name or names.
+   *
+   * @internal
+   * @type name or List(name) -> uri
+   */
+  index-globals-uri:
+    names -> uri
+    with
+      if is-list then
+        uri := <concat> [[Global()], names, ["globals", ".internal"]]
+      else
+        uri := [Global(), names, "global", ".internal"]
+      end
+    
+  /**
+   * Gets the first value in global storage with given name, or fail.
+   *
+   * Example:
+   *   index-get-global(|"last-compile") => Timestamp(1334322856)
+   *   index-get-global(|["last-compile", "file.str"]) => Timestamp(1334322856)
+   * 
+   * @param name  The name or list of names to identify the global value.
+   * @type _ -> ?value
+   */
+  index-get-global(|name):
+    _ -> value
+    where
+      value := <indexlib-get-value> Global(<index-globals-uri> name, ())
+    
+  /**
+   * Gets all values in global storage with given name.
+   *
+   * Example:
+   *   index-get-global(|"last-compile") => [Timestamp(1334322856), ...]
+   *   index-get-global(|["last-compile", "file.str"]) => [Timestamp(1334322856), ...]
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type _ -> List(value)
+   */ 
+  index-get-all-globals(|name):
+    _ -> values
+    with
+      values := <indexlib-get-all-values> Global(<index-globals-uri> name, ())
+    
+  /**
+   * Add value to global storage with given name.
+   *
+   * Example:
+   *   <index-add-global(|"last-compile")> Timestamp(1334322856)
+   *   <index-add-global(|["last-compile", "file.str"])> Timestamp(1334322856)
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-add-global(|name):
+    value -> <id>
+    with
+      <index-add(|<index-globals-path>)> Global(<index-globals-uri> name, value)
+      
+  /**
+   * Overwrites value in global storage with given value.
+   *
+   * Example:
+   *   <index-set-global(|"last-compile")> Timestamp(1334322856)
+   *   <index-set-global(|["last-compile", "file.str"])> Timestamp(1334322856)
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-set-global(|name):
+    value -> <id>
+    with
+      index-clear-global(|name);
+      <index-add-global(|name)> value
+    
+  /**
+   * Removes all values from global storage with given name.
+   *
+   * Example:
+   *   index-clear-global(|"last-compile")
+   *   index-clear-global(|["last-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-clear-global(|name):
+    _ -> <id>
+    with
+      <index-remove(|<index-globals-path>)> Global(<index-globals-uri> name, ())
+      
+  /**
+   * Gets the URI where boolean globals are stored in the index for given name or names.
+   *
+   * @internal
+   */
+  index-boolean-globals-uri:
+    names -> uri
+    with
+      if is-list then
+        uri := <concat> [[Global()], names, ["boolean", "globals", ".internal"]]
+      else
+        uri := [Global(), names, "boolean", "global", ".internal"]
+      end
+      
+  /**
+   * Sets boolean value true to global boolean storage with given name.
+   *
+   * Example:
+   *   index-enable-global(|"can-compile")
+   *   index-enable-global(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> x
+   */   
+  index-enable-global(|name):
+    _ -> <id>
+    with
+      <index-add(|<index-globals-path>)> Global(<index-boolean-globals-uri> name)
+      
+  /**
+   * Sets boolean value false to global boolean storage with given name.
+   *
+   * Example:
+   *   index-disable-global(|"can-compile")
+   *   index-disable-global(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> x
+   */   
+  index-disable-global(|name):
+    _ -> <id>
+    with
+      <index-remove(|<index-globals-path>)> Global(<index-boolean-globals-uri> name)
+      
+  /**
+   * Query for boolean value true in global boolean storage with given name.
+   *
+   * Example:
+   *   index-is-global-enabled(|"can-compile")
+   *   index-is-global-enabled(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> ?x
+   */   
+  index-is-global-enabled(|name):
+    _ -> <id>
+    where
+      <indexlib-get> Global(<index-boolean-globals-uri> name)
+
+rules // Index utility
+  
+  /**
+   * Gets the URI part for given term. Can be extended by defining a index-uri-impl rule. If no index-uri-impl rule
+   * is defined for the given term the first subterm is used as the URI. Fails if no URI can be retrieved from the
+   * given term.
+   *
+   * Example:
+   *   <index-uri> DefData([Entity(), "Bar", "Baz"], Type(), TYPE("Bar")) => [Entity(), "Bar", "Baz"]
+   *
+   * @type elem -> ?uri
+   *
+   * @see index-uri-impl
+   * @see index-uri-generic
+   */ 
+  index-uri = 
+    index-uri-impl <+ index-uri-generic
+  
+  /**
+   * Gets the namespace part of the given URI.
+   *
+   * Example:
+   *   <index-uri-path> [Entity(), "Bar", "Baz"] => Entity()
+   *
+   * @type uri@[namespace|path] -> namespace
+   */ 
+  index-uri-namespace =
+    ?[<id>|_]
+  
+  /**
+   * Gets the path part of the given URI.
+   *
+   * Example:
+   *   <index-uri-path> [Entity(), "Bar", "Baz"] => ["Bar", "Baz"]
+   *   <index-uri-path> [Entity()] => []
+   *
+   * @type uri@[namespace|path] -> path
+   */ 
+  index-uri-path =
+    ?[_|<id>]
+    
+  /**
+   * Gets the name part of the given URI or fail if there is no name.
+   *
+   * Example:
+   *   <index-uri-name> [Entity(), "Bar", "Baz"] => "Bar"
+   *   <index-uri-name> [Entity()] => fail
+   *
+   * @type uri@[namespace|[name|restPath]] -> ?name
+   */ 
+  index-uri-name =
+    ?[_|[<id>|_]]
+    
+  /**
+   * Gets the parent of given URI or fail if the URI doesn't have a parent.
+   *
+   * Example:
+   *   <index-uri-parent> [Entity(), "Bar", "Baz"] => [Entity(), "Baz"]
+   *   <index-uri-parent> [Entity(), "Baz"] => [Entity()]
+   *   <index-uri-parent> [Entity()] => fail
+   *
+   * @type uri@[namespace|[name|restPath]] -> ?name
+   */     
+  index-uri-parent =
+    ?[ns|[_|<id>]]; ![ns|<id>]
+  
+  /**
+   * Gets the value part for given term. Can be extended by defining a index-value-impl rule. If no index-value-impl 
+   * rule is defined for the given term the second subterm is used as the value. Fails if no value can be retrieved
+   * from the given term.
+   *
+   * Example:
+   *   <index-value> DefData([Entity(), "Bar", "Baz"], Type(), TYPE("Bar")) => TYPE("Bar")
+   *
+   * @type elem -> ?value
+   *
+   * @see index-value-impl
+   * @see index-value-generic
+   */  
+  index-value = 
+    index-value-impl <+ index-value-generic
+  
+  /**
+   * Queries if given index file is a 'fake' file for storing internal data.
+   *
+   * @type x -> ?x
+   */
+  index-is-fake-file = 
+    string-starts-with(|"/.internal")
+  
+  /**
+   * Checks if given URI's are equal. Discards anonymous scopes if necessary.
+   *
+   * Example:
+   *   <index-uri-eq> ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"]) => 
+   *     ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"])
+   *   <index-uri-eq> ([Entity(), "Foo"], [Entity(), "Bar"]) => fail
+   *
+   * @type (u1, u2) -> ?(u1, u2)
+   */
+  index-uri-eq:
+    (u1, u2) -> <id>
+    where
+      u1' := <index-uri-unwrap> u1;
+      u2' := <index-uri-unwrap> u2;
+      (<eq> (u1', u2') <+ <eq> (<remove-all(?Anon(_))> u1', <remove-all(?Anon(_))> u2'))
+  
+  /**
+   * Finds the first key (term{uri} element) for given term, or fail. 
+   *
+   * @type x -> ?name{uri}
+   */
+  index-find-key:
+    x -> key
+    where
+      key := <collect-one(?_{_})> x
+
+  /**
+   * Converts a path from an URI to a string.
+   *
+   * Example:
+   *   <index-path-to-string> ["Bar", "Baz"] => "Bar.Baz"
+   *
+   * @type path -> str
+   */
+  index-path-to-string:
+    path -> str
+    with
+      str := <take-until(?Anon(_)); reverse; separate-by(|"."); concat-strings> path
+      
+  /**
+   * Converts a URI to a string.
+   *
+   * Example:
+   *   <index-uri-to-string> [Entity(), "Bar", "Baz"] => "Entity://Bar.Baz"
+   *
+   * @type uri -> str
+   */
+  index-uri-to-string:
+    [ns|path] -> <concat-strings> [nsStr, "://", pathStr]
+    with
+      pathStr := <index-path-to-string> path;
+      nsStr := <?<id>#(_)> ns
+  
+  /**
+   * Converts a file to a string.
+   *
+   * Example:
+   *   <index-file-to-string> "fullpath/file.ext" => "fullpath/file.ext"
+   *
+   * @type file -> file
+   */
+  index-file-to-string:
+    file -> file
+    where
+      not(<is-tuple> file)
+  
+  /**
+   * Converts a file ((file, subfile) tuple) to a string.
+   *
+   * Example:
+   *   <index-file-to-string> ("fullpath/file.ext", []) => "fullpath/file.ext"
+   *
+   * @type (file, []) -> file
+   */
+  index-file-to-string:
+    (file, []) -> file
+    
+  /**
+   * Converts a file ((file, subfile) tuple) to a string.
+   *
+   * Example:
+   *   <index-file-to-string> ("fullpath/file.ext", [Entity(), "Foo" "Bar"]) => "fullpath/file.ext at Entity://Foo.Bar"
+   *
+   * @type (file, subfile) -> str
+   */
+  index-file-to-string:
+    (file, subfile) -> <concat-strings> [file, "@", <index-uri-to-string> subfile]
+    where
+      not([] := subfile)
+
+  /**
+   * Converts a file to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> "fullpath/file.ext" => [None(), "fullpath/file.ext"]
+   *
+   * @type file -> uri
+   */      
+  index-file-to-uri:
+    file -> [None(), file]
+    where
+      not(<is-tuple> file)
+      
+  /**
+   * Converts a file ((file, subfile) tuple) to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> ("fullpath/file.ext", []) => [None(), "fullpath/file.ext]
+   *
+   * @type (file, subfile) -> uri
+   */      
+  index-file-to-uri:
+    (file, []) -> [None(), file]
+    
+  /**
+   * Converts a file ((file, subfile) tuple) to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> ("fullpath/file.ext", [Entity(), "Foo" "Bar"]) => [Entity(), "Foo", "Bar", "fullpath/file.ext"]
+   *
+   * @type (file, subfile) -> uri
+   */      
+  index-file-to-uri:
+    (file, subfile) -> <conc> ([file], subfile)
+    where
+      not([] := subfile)
+      
+/** @internal */
+rules // URI and value projections
+
+  /** @internal */
+  index-uri-impl:
+    [_|_] -> <id>
+  
+  /** @internal */
+  index-uri-impl:
+    DefData(uri, _, _) -> uri
+
+  /** @internal */
+  index-uri-generic:
+    term -> <?_#(<?[<id>|_]>)> term
+  
+  /** @internal */
+  index-value-impl:
+    DefData(_, _, value) -> value
+    
+  /** @internal */
+  index-value-generic:
+    term -> <?_#(<?[_, <id>|_]> )> term
+     
+/** @internal */ 
+rules // Internal helpers
+  
+  /** @internal */
+  index-namespace-unwrap =
+    \Unresolved(n) -> n\ <+ id
+    
+  /** @internal */
+  index-uri-unwrap =
+    \[ns|xs] -> [<index-namespace-unwrap> ns|xs]\ <+ id

Added: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/index-library.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/index-library.str	Mon Jul 23 12:53:43 2012	(r25238)
@@ -0,0 +1,733 @@
+module lib/index-library
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+signature constructors
+  
+  // Index elements
+  DefData      : List(UriPart) * DefDataType * Term -> Summary
+    
+  // URI header
+  Namespace      : UriPart
+  Unresolved     : Namespace -> UriPart
+  INTERNAL_ERROR : UriPart
+  Timestamp      : UriPart
+ 
+  // Remainder of URI
+  String : UriPart
+  Anon   : Int -> UriPart
+  Anon   : UriPart
+  
+  FileEntries : Term * Term -> Term
+  
+  // Globals
+  Global : Namespace
+  Global : List(UriPart) -> Summary
+  Global : List(UriPart) * List(Summary) -> Summary
+  
+  // None namespace
+  None   : Namespace
+  
+rules // Index management
+   
+  /**
+   * Sets up the index library for given language and project paths.
+   * Must be called once before doing anything with the library.
+   *
+   * @param language      The language to set the index up for.
+   * @param project-path  The project paths that contain all source files to analyse and compile.
+   *
+   * @obsolete
+   * @type x -> x
+   */
+  index-setup(|language, project-paths) =
+    obsolete(!"index-setup(|language, project-paths); use index-setup(|language, project-paths, current-file)");
+    index-setup(|language, project-paths, ".")
+    
+  /**
+   * Sets up the index library for given language, project paths and current file.
+   * Must be called once before doing anything with the library.
+   *
+   * Example:
+   *   <index-setup(|"MiniJava", [<project-path>], "test/test.mjv")
+   *
+   * @param language      The language to set the index up for.
+   * @param project-path  The project paths that contain all source files to analyse and compile.
+   * @param current-file  The current file that is being analysed. Can be retrieved later using index-get-current-file.
+   *                      Can also be changed later using index-set-current-file.
+   * @type x -> x
+   */
+  index-setup(|language, project-paths, current-file) =
+    prim("LANG_index_setup", language, project-paths, current-file)
+    
+  /**
+   * Sets the current file the index (analysis) is operating on to the given file.
+   *
+   * Example:
+   *   <index-set-current-file> "fullpath/file.ext"
+   *   <index-set-current-file> ("fullpath/file.ext", "subfile")
+   *
+   * @type x -> ?x
+   */
+  index-set-current-file = 
+    prim("LANG_index_set_current_file", <id>)
+
+  /**
+   * Adds given element to the index with given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-add(|"fullpath/file.ext")> Def([Entity(), "Bar"])
+   *   <index-add(|("fullpath/file.ext", "subfile"))> Def([Entity(), "Bar"])
+   *
+   * @param file  The file (and subfile) to add the element to.
+   * @type x -> ?x
+   */
+  index-add(|file) =
+    prim("LANG_index_add", <id>, file)
+
+  /**
+   * Adds all given elements to the index with given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-add-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
+   *   <index-add-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
+   *
+   * @param file  The file (and subfile) to add the elements to.
+   * @type List(x) -> ?List(x)
+   */
+  index-add-all(|file) =
+    list-loop(with(index-add(|file)))
+    
+  /**
+   * Removes given element from the index that is contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-remove(|"fullpath/file.ext")> Def([Entity(), "Bar"])
+   *   <index-remove(|("fullpath/file.ext", "subfile"))> Def([Entity(), "Bar"])
+   * 
+   * @param file  The file (and subfile) to remove the element from.
+   * @type x -> ?x
+   */
+  index-remove(|file) =
+    prim("LANG_index_remove", <id>, file)
+    
+  /**
+   * Removes all given elements from the index that are contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-remove-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
+   *   <index-remove-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
+   *
+   * @param file  The file (and subfile) to remove the elements from.
+   * @type List(x) -> ?List(x)
+   */
+  index-remove-all(|file) =
+    list-loop(with(index-remove(|file)))
+    
+  /**
+   * Removes all elements from the index that are contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-clear-file> "fullpath/file.ext"
+   *   <index-clear-file> ("fullpath/file.ext", "subfile")
+   *
+   * @type x -> ?x
+   */
+  index-clear-file = 
+    prim("LANG_index_clear_file", <id>)
+    
+  /**
+   * Clears all elements from the index.
+   *
+   * @type x -> x
+   */
+  index-clear = 
+    prim("LANG_index_clear_all")
+    
+  /**
+   * Clears all elements from the index and re-analyzes all files in the project.
+   *
+   * @type x -> x
+   */
+  index-reload = 
+    prim("LANG_index_reload")
+   
+  /**
+   * Commits index to a file on disk.
+   *
+   * @type x -> x
+   */
+  index-commit = 
+    prim("LANG_index_commit")
+
+  /**
+   * Starts a transaction on the index for the current file. Additions to the index are not visible to other files 
+   * until index-end-transaction is called. Operations on the index are only thread safe during a transaction.
+   *
+   * @type x -> x
+   */
+  index-start-transaction = 
+    prim("LANG_index_start_transaction")
+  
+  /**
+   * Ends a transaction on the index for the current file. Additions made to the index during the transaction are
+   * added to the global index visible for other files. Operations on the index are not thread safe any more after 
+   * this call.
+   *
+   * @type x -> x
+   */
+  index-end-transaction = 
+    prim("LANG_index_end_transaction")
+  
+  /**
+   * Starts a transaction, applies given strategy and ends the transaction. All index operations used from the given
+   * strategy are thread safe.
+   * 
+   * @param s The strategy to apply. Transaction will still properly end if strategy fails.
+   * @type x -> x'
+   *
+   * @see index-start-transaction
+   * @see index-end-transaction
+   */
+  index-transaction(s) = 
+    prim("LANG_index_start_transaction"); try(s); prim("LANG_index_end_transaction")
+  
+rules // Index querying
+  
+  /**
+   * Gets the file that the analysis is currently in.
+   *
+   * @type x -> (file, subfile)
+   *
+   * @see index-setup(|language, project-paths, current-file)
+   * @see index-set-current-file
+   */
+  index-get-current-file =
+    prim("LANG_index_get_current_file")
+  
+  /**
+   * Gets a list of all files and subfiles for current project.
+   *
+   * Example:
+   *   <index-get-all-files> => [("fullpath/file.ext", "subfile"), ...]
+   *
+   * @type x -> List((file, subfile))
+   */   
+  index-get-all-files =
+    prim("LANG_index_all_files")
+  
+  /**
+   * Gets all index entries for the given file path and optionally subfile.
+   *
+   * Examples:
+   *   <index-get-all-in-file> "fullpath/file.ext" => [Def([Entity(), "Bar"]), ...]
+   *   <index-get-all-in-file> ("fullpath/file.ext", "subfile") => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type file or (file, subfile) -> List(elem)
+   */  
+  index-get-all-in-file:
+    filepath -> entries
+    with
+      entries := <prim("LANG_index_get_all_in_file", filepath)>
+   
+  /**
+   * Gets index entries in some namespace for the given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-get-all-in-file(|Import())> "fullpath/file.ext" => [Def([Import(), "Bar"]), ...]
+   *   <index-get-all-in-file(|Import())> ("fullpath/file.ext", "subfile") => [Def([Import(), "Bar"]), ...]
+   *
+   * @param namespace Only index entries from this namespace are retrieved.
+   * @type file or (file, subfile) -> List(elem)
+   */  
+  index-get-all-in-file(|namespace):
+    filepath -> entries
+    with
+      // TODO: Optimize -- add an argument to LANG_index_get_all_in_file to do this filtering
+      entries := <prim("LANG_index_get_all_in_file", filepath)>;
+      filter(where(index-uri => [namespace | _]))
+    
+  /**
+   * Gets the revision of a file and optionally subfile.
+   *
+   * Example:
+   *   <index-get-file-revision> "fullpath/file.ext" => 13
+   *   <index-get-file-revision> ("fullpath/file.ext", "subfile") => 37
+   *
+   * @type file or (file, subfile) -> Int
+   */
+  index-get-file-revision:
+    file -> <prim("LANG_index_get_file_revision", file)>
+    
+  /**
+   * Gets the containing files and subfiles of index entry with given template.
+   *
+   * Example:
+   *   <index-get-files-of> Def([Entity(), "Bar"]) => [("fullpath/file.ext", "subfile"), ...]
+   *
+   * @type template -> List((file, subfile))
+   */  
+  index-get-files-of:
+    template -> <prim("LANG_index_get_files_of", template)>
+    
+  /**
+   * Get all index entries that match the given template.
+   *
+   * Example:
+   *   <indexlib-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type template -> List(elem)
+   */
+  indexlib-get-all:
+    template -> <prim("LANG_index_get", template)>
+    
+  /**
+   * Get all values of index entries that match the given template.
+   *
+   * Example:
+   *   <indexlib-get-all-values> DefData([Property(), "s"], Type(), ()) => [TYPE("String"), ...]
+   *
+   * @type template -> List(value)
+   *
+   * @see index-value
+   */
+  indexlib-get-all-values:
+    template -> <map(index-value)> <indexlib-get-all> template
+ 
+  /**
+   * Get the first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <indexlib-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   *
+   * @type template -> ?elem
+   */
+  indexlib-get:
+    template -> <?[<id>|_]> <indexlib-get-all> template
+   
+  /**
+   * Get the value of first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <indexlib-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
+   *
+   * @type template -> ?value
+   *
+   * @see index-value
+   */
+  indexlib-get-value:
+    template -> <index-value> <?[<id>|_]> <indexlib-get-all> template
+    
+rules // Index globals
+    
+  /**
+   * Gets the 'fake' path where globals are stored in the index.
+   *
+   * @internal
+   */
+  index-globals-path = 
+    !"/.internal/globals"
+    
+  /**
+   * Gets the URI where globals are stored in the index for given name or names.
+   *
+   * @internal
+   * @type name or List(name) -> uri
+   */
+  index-globals-uri:
+    names -> uri
+    with
+      if is-list then
+        uri := <concat> [[Global()], names, ["globals", ".internal"]]
+      else
+        uri := [Global(), names, "global", ".internal"]
+      end
+    
+  /**
+   * Gets the first value in global storage with given name, or fail.
+   *
+   * Example:
+   *   index-get-global(|"last-compile") => Timestamp(1334322856)
+   *   index-get-global(|["last-compile", "file.str"]) => Timestamp(1334322856)
+   * 
+   * @param name  The name or list of names to identify the global value.
+   * @type _ -> ?value
+   */
+  index-get-global(|name):
+    _ -> value
+    where
+      value := <indexlib-get-value> Global(<index-globals-uri> name, ())
+    
+  /**
+   * Gets all values in global storage with given name.
+   *
+   * Example:
+   *   index-get-global(|"last-compile") => [Timestamp(1334322856), ...]
+   *   index-get-global(|["last-compile", "file.str"]) => [Timestamp(1334322856), ...]
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type _ -> List(value)
+   */ 
+  index-get-all-globals(|name):
+    _ -> values
+    with
+      values := <indexlib-get-all-values> Global(<index-globals-uri> name, ())
+    
+  /**
+   * Add value to global storage with given name.
+   *
+   * Example:
+   *   <index-add-global(|"last-compile")> Timestamp(1334322856)
+   *   <index-add-global(|["last-compile", "file.str"])> Timestamp(1334322856)
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-add-global(|name):
+    value -> <id>
+    with
+      <index-add(|<index-globals-path>)> Global(<index-globals-uri> name, value)
+      
+  /**
+   * Overwrites value in global storage with given value.
+   *
+   * Example:
+   *   <index-set-global(|"last-compile")> Timestamp(1334322856)
+   *   <index-set-global(|["last-compile", "file.str"])> Timestamp(1334322856)
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-set-global(|name):
+    value -> <id>
+    with
+      index-clear-global(|name);
+      <index-add-global(|name)> value
+    
+  /**
+   * Removes all values from global storage with given name.
+   *
+   * Example:
+   *   index-clear-global(|"last-compile")
+   *   index-clear-global(|["last-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-clear-global(|name):
+    _ -> <id>
+    with
+      <index-remove(|<index-globals-path>)> Global(<index-globals-uri> name, ())
+      
+  /**
+   * Gets the URI where boolean globals are stored in the index for given name or names.
+   *
+   * @internal
+   */
+  index-boolean-globals-uri:
+    names -> uri
+    with
+      if is-list then
+        uri := <concat> [[Global()], names, ["boolean", "globals", ".internal"]]
+      else
+        uri := [Global(), names, "boolean", "global", ".internal"]
+      end
+      
+  /**
+   * Sets boolean value true to global boolean storage with given name.
+   *
+   * Example:
+   *   index-enable-global(|"can-compile")
+   *   index-enable-global(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> x
+   */   
+  index-enable-global(|name):
+    _ -> <id>
+    with
+      <index-add(|<index-globals-path>)> Global(<index-boolean-globals-uri> name)
+      
+  /**
+   * Sets boolean value false to global boolean storage with given name.
+   *
+   * Example:
+   *   index-disable-global(|"can-compile")
+   *   index-disable-global(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> x
+   */   
+  index-disable-global(|name):
+    _ -> <id>
+    with
+      <index-remove(|<index-globals-path>)> Global(<index-boolean-globals-uri> name)
+      
+  /**
+   * Query for boolean value true in global boolean storage with given name.
+   *
+   * Example:
+   *   index-is-global-enabled(|"can-compile")
+   *   index-is-global-enabled(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> ?x
+   */   
+  index-is-global-enabled(|name):
+    _ -> <id>
+    where
+      <indexlib-get> Global(<index-boolean-globals-uri> name)
+
+rules // Index utility
+  
+  /**
+   * Gets the URI part for given term. Can be extended by defining a index-uri-impl rule. If no index-uri-impl rule
+   * is defined for the given term the first subterm is used as the URI. Fails if no URI can be retrieved from the
+   * given term.
+   *
+   * Example:
+   *   <index-uri> DefData([Entity(), "Bar", "Baz"], Type(), TYPE("Bar")) => [Entity(), "Bar", "Baz"]
+   *
+   * @type elem -> ?uri
+   *
+   * @see index-uri-impl
+   * @see index-uri-generic
+   */ 
+  index-uri = 
+    index-uri-impl <+ index-uri-generic
+  
+  /**
+   * Gets the namespace part of the given URI.
+   *
+   * Example:
+   *   <index-uri-path> [Entity(), "Bar", "Baz"] => Entity()
+   *
+   * @type uri@[namespace|path] -> namespace
+   */ 
+  index-uri-namespace =
+    ?[<id>|_]
+  
+  /**
+   * Gets the path part of the given URI.
+   *
+   * Example:
+   *   <index-uri-path> [Entity(), "Bar", "Baz"] => ["Bar", "Baz"]
+   *   <index-uri-path> [Entity()] => []
+   *
+   * @type uri@[namespace|path] -> path
+   */ 
+  index-uri-path =
+    ?[_|<id>]
+    
+  /**
+   * Gets the name part of the given URI or fail if there is no name.
+   *
+   * Example:
+   *   <index-uri-name> [Entity(), "Bar", "Baz"] => "Bar"
+   *   <index-uri-name> [Entity()] => fail
+   *
+   * @type uri@[namespace|[name|restPath]] -> ?name
+   */ 
+  index-uri-name =
+    ?[_|[<id>|_]]
+    
+  /**
+   * Gets the parent of given URI or fail if the URI doesn't have a parent.
+   *
+   * Example:
+   *   <index-uri-parent> [Entity(), "Bar", "Baz"] => [Entity(), "Baz"]
+   *   <index-uri-parent> [Entity(), "Baz"] => [Entity()]
+   *   <index-uri-parent> [Entity()] => fail
+   *
+   * @type uri@[namespace|[name|restPath]] -> ?name
+   */     
+  index-uri-parent =
+    ?[ns|[_|<id>]]; ![ns|<id>]
+  
+  /**
+   * Gets the value part for given term. Can be extended by defining a index-value-impl rule. If no index-value-impl 
+   * rule is defined for the given term the second subterm is used as the value. Fails if no value can be retrieved
+   * from the given term.
+   *
+   * Example:
+   *   <index-value> DefData([Entity(), "Bar", "Baz"], Type(), TYPE("Bar")) => TYPE("Bar")
+   *
+   * @type elem -> ?value
+   *
+   * @see index-value-impl
+   * @see index-value-generic
+   */  
+  index-value = 
+    index-value-impl <+ index-value-generic
+  
+  /**
+   * Queries if given index file is a 'fake' file for storing internal data.
+   *
+   * @type x -> ?x
+   */
+  index-is-fake-file = 
+    string-starts-with(|"/.internal")
+  
+  /**
+   * Checks if given URI's are equal. Discards anonymous scopes if necessary.
+   *
+   * Example:
+   *   <index-uri-eq> ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"]) => 
+   *     ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"])
+   *   <index-uri-eq> ([Entity(), "Foo"], [Entity(), "Bar"]) => fail
+   *
+   * @type (u1, u2) -> ?(u1, u2)
+   */
+  index-uri-eq:
+    (u1, u2) -> <id>
+    where
+      u1' := <index-uri-unwrap> u1;
+      u2' := <index-uri-unwrap> u2;
+      (<eq> (u1', u2') <+ <eq> (<remove-all(?Anon(_))> u1', <remove-all(?Anon(_))> u2'))
+  
+  /**
+   * Finds the first key (term{uri} element) for given term, or fail. 
+   *
+   * @type x -> ?name{uri}
+   */
+  index-find-key:
+    x -> key
+    where
+      key := <collect-one(?_{_})> x
+
+  /**
+   * Converts a path from an URI to a string.
+   *
+   * Example:
+   *   <index-path-to-string> ["Bar", "Baz"] => "Bar.Baz"
+   *
+   * @type path -> str
+   */
+  index-path-to-string:
+    path -> str
+    with
+      str := <take-until(?Anon(_)); reverse; separate-by(|"."); concat-strings> path
+      
+  /**
+   * Converts a URI to a string.
+   *
+   * Example:
+   *   <index-uri-to-string> [Entity(), "Bar", "Baz"] => "Entity://Bar.Baz"
+   *
+   * @type uri -> str
+   */
+  index-uri-to-string:
+    [ns|path] -> <concat-strings> [nsStr, "://", pathStr]
+    with
+      pathStr := <index-path-to-string> path;
+      nsStr := <?<id>#(_)> ns
+  
+  /**
+   * Converts a file to a string.
+   *
+   * Example:
+   *   <index-file-to-string> "fullpath/file.ext" => "fullpath/file.ext"
+   *
+   * @type file -> file
+   */
+  index-file-to-string:
+    file -> file
+    where
+      not(<is-tuple> file)
+  
+  /**
+   * Converts a file ((file, subfile) tuple) to a string.
+   *
+   * Example:
+   *   <index-file-to-string> ("fullpath/file.ext", []) => "fullpath/file.ext"
+   *
+   * @type (file, []) -> file
+   */
+  index-file-to-string:
+    (file, []) -> file
+    
+  /**
+   * Converts a file ((file, subfile) tuple) to a string.
+   *
+   * Example:
+   *   <index-file-to-string> ("fullpath/file.ext", [Entity(), "Foo" "Bar"]) => "fullpath/file.ext at Entity://Foo.Bar"
+   *
+   * @type (file, subfile) -> str
+   */
+  index-file-to-string:
+    (file, subfile) -> <concat-strings> [file, "@", <index-uri-to-string> subfile]
+    where
+      not([] := subfile)
+
+  /**
+   * Converts a file to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> "fullpath/file.ext" => [None(), "fullpath/file.ext"]
+   *
+   * @type file -> uri
+   */      
+  index-file-to-uri:
+    file -> [None(), file]
+    where
+      not(<is-tuple> file)
+      
+  /**
+   * Converts a file ((file, subfile) tuple) to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> ("fullpath/file.ext", []) => [None(), "fullpath/file.ext]
+   *
+   * @type (file, subfile) -> uri
+   */      
+  index-file-to-uri:
+    (file, []) -> [None(), file]
+    
+  /**
+   * Converts a file ((file, subfile) tuple) to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> ("fullpath/file.ext", [Entity(), "Foo" "Bar"]) => [Entity(), "Foo", "Bar", "fullpath/file.ext"]
+   *
+   * @type (file, subfile) -> uri
+   */      
+  index-file-to-uri:
+    (file, subfile) -> <conc> ([file], subfile)
+    where
+      not([] := subfile)
+      
+/** @internal */
+rules // URI and value projections
+
+  /** @internal */
+  index-uri-impl:
+    [_|_] -> <id>
+  
+  /** @internal */
+  index-uri-impl:
+    DefData(uri, _, _) -> uri
+
+  /** @internal */
+  index-uri-generic:
+    term -> <?_#(<?[<id>|_]>)> term
+  
+  /** @internal */
+  index-value-impl:
+    DefData(_, _, value) -> value
+    
+  /** @internal */
+  index-value-generic:
+    term -> <?_#(<?[_, <id>|_]> )> term
+     
+/** @internal */ 
+rules // Internal helpers
+  
+  /** @internal */
+  index-namespace-unwrap =
+    \Unresolved(n) -> n\ <+ id
+    
+  /** @internal */
+  index-uri-unwrap =
+    \[ns|xs] -> [<index-namespace-unwrap> ns|xs]\ <+ id

Added: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/nbl-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/lib/nbl-library.generated.str	Mon Jul 23 12:53:43 2012	(r25238)
@@ -0,0 +1,144 @@
+module lib/nbl-library.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  
+signature constructors
+  
+  Type        : DefDataKind
+  Import      : DefDataKind
+  Transitive  : ImportAnno
+  CurrentFile : ImportAnno
+  
+rules // Import adjust rule
+     
+  import-transitive =
+    collect-one(?Transitive())
+  import-standard =
+    not(import-transitive)
+    
+  import-values(|namespace, path) =
+    <index-get-all-values> DefData([namespace| path], Import(), ())
+    
+  import-currentfile-values(|namespace) =
+    <index-get-all-values> DefData([namespace|[<index-file-to-string> <index-get-current-file>]], Import(), ())  
+    
+  adjust-index-import(|namespace, path):
+    _ -> <concat> [[[namespace | path]], currentFileImportDefs, importDefs]
+    with
+      uri := [namespace | path]
+    where
+      allImports := <import-values(|namespace, path)> ;
+      importDefs := <mapconcat(import-defs(|namespace, [uri]))> allImports
+    where
+      currentfileImports := <import-currentfile-values(|namespace)> ;
+      currentFileImportDefs := <mapconcat(import-defs(|namespace, [uri]))> currentfileImports
+    
+  import-defs(|namespace, seen):
+    (key, <import-standard>) -> [uri]
+    with
+      uri := [namespace | <index-uri-path> key]
+      
+  import-defs(|namespace, seen):
+    (key, <import-transitive>) -> <conc> ([uri], transitiveUris)
+    with
+      path := <index-uri-path> key ;
+      uri := [namespace | path] ;
+      
+      if not(<elem> (uri, seen)) then
+        allImports := <import-values(|namespace, path)> ;
+        transitiveUris := <mapconcat(import-defs(|namespace, [uri|seen]))> allImports
+      else
+        transitiveUris := []
+      end
+
+rules // Adjust difference comparison
+    
+  // Add Type to the constructors to check for differences.
+  index-diff-constructors = ?DefData(_, Type(), _)
+  
+  // Type definitions are equal if their URI is equal and if their values are equal.
+  index-diff-compare:
+    (DefData(u1, Type(), v1), DefData(u2, Type(), v2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2);
+       <index-key-eq> (v1, v2)
+
+rules // Error checks
+  
+  constraint-error:
+    x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
+    
+  constraint-error:
+    definition -> (key, $[Duplicate definition])
+    where
+      <nam-unique> definition;
+      key := <nam-get-definition-key> definition;
+      defs := <index-lookup-all-scoped-noimports> key;
+      <gt> (<length> defs, 1)
+      
+rules // Type dependant lookup
+	
+	/**
+   * Given an annotated AST node and a type, resolves it and checks if type equals given type, returning its definition.
+   * Uses precise matching for names.
+   *
+   * @param type	Only definitions with this type are returned.
+   * @type "name"{uri} -> ?Def(uri')
+   */
+  index-lookup-typed(|type):
+    x{[namespace|path]} -> <index-lookup-internal(index-compare-nametype-equal(|name, type)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
+
+  /**
+   * Given an annotated AST node, a prefix and a type, looks for all definitions with given prefix and type starting at the scope of 
+   * the given node.
+   * Uses substring matching for names.
+   *
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @param type			Only definitions with this type are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-typed(|prefix, type):
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-nametype-substring(|prefix, type)|ns, path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace
+
+  /**
+   * Compares given element (with an URI) to given name using string equality comparison and given type using equality.
+   * 
+   * @internal 
+   */     
+  index-compare-nametype-equal(|name, type):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <SRTS-EXT-eq-ignore-annos(|name)> <index-uri-name> uri;
+      <nbl-type-eq(|type)> <nbl-get-type> uri
+      
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison and given type using equality.
+   * 
+   * @internal 
+   */     
+  index-compare-nametype-substring(|prefix, type):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <is-substring(!prefix)> <index-uri-name> uri;
+      <nbl-type-eq(|type)> <nbl-get-type> uri
+  
+  /** @internal */
+  nbl-get-type:
+  	uri -> <index-get-data(|Type())> Def(uri)
+  
+  // TODO: Allow user defined type equality.
+  /** @internal */	
+  nbl-type-eq(|type) = 
+  	<eq> (<id>, type)

Added: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/test/example1.analyzed.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/test/example1.analyzed.aterm	Mon Jul 23 12:53:43 2012	(r25238)
@@ -0,0 +1,74 @@
+( Module(
+    "example1"{[Module(), "example1"]}
+  , [ Imports("primitives"{[Module(), "primitives"]})
+    , Def(
+        "one"{[Variable(), "one", Anon("unique15"), "example1"]}
+      , Type("N")
+      , App(Var("S"{[Variable(), "S", Anon("anon368"), "primitives"]}), Var("O"{[Variable(), "O", Anon("anon368"), "primitives"]}))
+      )
+    , Def(
+        "two"{[Variable(), "two", Anon("unique15"), "example1"]}
+      , Type("N")
+      , App(Var("S"{[Variable(), "S", Anon("anon368"), "primitives"]}), Var("one"{[Variable(), "one", Anon("unique15"), "example1"]}))
+      )
+    , Def(
+        "add"{[Variable(), "add", Anon("unique15"), "example1"]}
+      , Fun(Type("N"), Fun(Type("N"), Type("N")))
+      , Lam(
+          "x"{[Variable(), "x", Anon("scope33"), Anon("unique15"), "example1"]}
+        , Type("N")
+        , Lam(
+            "y"{ [Variable(), "y", Anon("scope34"), Anon("scope33"), Anon("unique15"), "example1"]
+               }
+          , Type("N")
+          , App(
+              App(
+                App(Var("if"{[Variable(), "if", Anon("anon368"), "primitives"]}), App(Var("isO"{[Variable(), "isO", Anon("anon368"), "primitives"]}), Var("x"{[Variable(), "x", Anon("scope33"), Anon("unique15"), "example1"]})))
+              , Var("y"{ [Variable(), "y", Anon("scope34"), Anon("scope33"), Anon("unique15"), "example1"]
+                       })
+              )
+            , App(
+                Var("S"{[Variable(), "S", Anon("anon368"), "primitives"]})
+              , App(
+                  App(Var("add"{[Variable(), "add", Anon("unique15"), "example1"]}), App(Var("P"{[Variable(), "P", Anon("anon368"), "primitives"]}), Var("x"{[Variable(), "x", Anon("scope33"), Anon("unique15"), "example1"]})))
+                , Var("y"{ [Variable(), "y", Anon("scope34"), Anon("scope33"), Anon("unique15"), "example1"]
+                         })
+                )
+              )
+            )
+          )
+        )
+      )
+    , Def(
+        "mul"{[Variable(), "mul", Anon("unique15"), "example1"]}
+      , Fun(Type("N"), Fun(Type("N"), Type("N")))
+      , Lam(
+          "x"{[Variable(), "x", Anon("scope35"), Anon("unique15"), "example1"]}
+        , Type("N")
+        , Lam(
+            "y"{ [Variable(), "y", Anon("scope36"), Anon("scope35"), Anon("unique15"), "example1"]
+               }
+          , Type("N")
+          , App(
+              App(
+                App(Var("if"{[Variable(), "if", Anon("anon368"), "primitives"]}), App(Var("isO"{[Variable(), "isO", Anon("anon368"), "primitives"]}), Var("x"{[Variable(), "x", Anon("scope35"), Anon("unique15"), "example1"]})))
+              , Var("O"{[Variable(), "O", Anon("anon368"), "primitives"]})
+              )
+            , App(
+                App(Var("add"{[Variable(), "add", Anon("unique15"), "example1"]}), Var("y"{ [Variable(), "y", Anon("scope36"), Anon("scope35"), Anon("unique15"), "example1"]
+                                                                                          }))
+              , App(
+                  App(Var("mul"{[Variable(), "mul", Anon("unique15"), "example1"]}), App(Var("P"{[Variable(), "P", Anon("anon368"), "primitives"]}), Var("x"{[Variable(), "x", Anon("scope35"), Anon("unique15"), "example1"]})))
+                , Var("y"{ [Variable(), "y", Anon("scope36"), Anon("scope35"), Anon("unique15"), "example1"]
+                         })
+                )
+              )
+            )
+          )
+        )
+      )
+    ]
+  , App(Var("S"{[Variable(), "S", Anon("anon368"), "primitives"]}), Var("O"{[Variable(), "O", Anon("anon368"), "primitives"]}))
+  )
+, []
+)
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/test/example1.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/test/example1.aterm	Mon Jul 23 12:53:43 2012	(r25238)
@@ -0,0 +1,66 @@
+Module(
+  "example1"
+, [ Imports("primitives")
+  , Def(
+      "one"
+    , Type("N")
+    , App(Var("S"), Var("O"))
+    )
+  , Def(
+      "two"
+    , Type("N")
+    , App(Var("S"), Var("one"))
+    )
+  , Def(
+      "add"
+    , Fun(Type("N"), Fun(Type("N"), Type("N")))
+    , Lam(
+        "x"
+      , Type("N")
+      , Lam(
+          "y"
+        , Type("N")
+        , App(
+            App(
+              App(Var("if"), App(Var("isO"), Var("x")))
+            , Var("y")
+            )
+          , App(
+              Var("S")
+            , App(
+                App(Var("add"), App(Var("P"), Var("x")))
+              , Var("y")
+              )
+            )
+          )
+        )
+      )
+    )
+  , Def(
+      "mul"
+    , Fun(Type("N"), Fun(Type("N"), Type("N")))
+    , Lam(
+        "x"
+      , Type("N")
+      , Lam(
+          "y"
+        , Type("N")
+        , App(
+            App(
+              App(Var("if"), App(Var("isO"), Var("x")))
+            , Var("O")
+            )
+          , App(
+              App(Var("add"), Var("y"))
+            , App(
+                App(Var("mul"), App(Var("P"), Var("x")))
+              , Var("y")
+              )
+            )
+          )
+        )
+      )
+    )
+  ]
+, App(Var("S"), Var("O"))
+)
\ No newline at end of file

Added: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/test/example1.index.currentfile.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/test/example1.index.currentfile.aterm	Mon Jul 23 12:53:43 2012	(r25238)
@@ -0,0 +1,296 @@
+[ DefData(
+    [ Variable()
+    , "y"
+    , Anon("anon87")
+    , Anon("anon86")
+    , Anon("t_19596")
+    , Anon("anon83")
+    , "example1"
+    ]
+  , Type()
+  , Type("N")
+  )
+, Use(
+    [ Variable()
+    , "y"
+    , Anon("anon85")
+    , Anon("anon84")
+    , Anon("t_19596")
+    , Anon("anon83")
+    , "example1"
+    ]
+  )
+, Use(
+    [ Variable()
+    , "y"
+    , Anon("anon85")
+    , Anon("anon84")
+    , Anon("t_19596")
+    , Anon("anon83")
+    , "example1"
+    ]
+  )
+, Def(
+    [ Variable()
+    , "y"
+    , Anon("anon85")
+    , Anon("anon84")
+    , Anon("t_19596")
+    , Anon("anon83")
+    , "example1"
+    ]
+  )
+, Use([Variable(), "isO", Anon("anon64"), "primitives"])
+, Use([Variable(), "isO", Anon("anon64"), "primitives"])
+, Use([Variable(), "if", Anon("anon64"), "primitives"])
+, Use([Variable(), "if", Anon("anon64"), "primitives"])
+, DefData(
+    [Variable(), "two", Anon("t_19596"), Anon("anon83"), "example1"]
+  , Type()
+  , Type("N")
+  )
+, DefData(
+    [Variable(), "add", Anon("t_19596"), Anon("anon83"), "example1"]
+  , Type()
+  , Fun(Type("N"), Fun(Type("N"), Type("N")))
+  )
+, Def([Module(), "example1"])
+, Def(
+    [Variable(), "one", Anon("t_19596"), Anon("anon83"), "example1"]
+  )
+, Use(
+    [ Variable()
+    , "y"
+    , Anon("anon87")
+    , Anon("anon86")
+    , Anon("t_19596")
+    , Anon("anon83")
+    , "example1"
+    ]
+  )
+, Use(
+    [ Variable()
+    , "y"
+    , Anon("anon87")
+    , Anon("anon86")
+    , Anon("t_19596")
+    , Anon("anon83")
+    , "example1"
+    ]
+  )
+, Def(
+    [Variable(), "mul", Anon("t_19596"), Anon("anon83"), "example1"]
+  )
+, Use(
+    [Variable(), "x", Anon("anon86"), Anon("t_19596"), Anon("anon83"), "example1"]
+  )
+, Use(
+    [Variable(), "x", Anon("anon86"), Anon("t_19596"), Anon("anon83"), "example1"]
+  )
+, Read([Variable(), "primitives"])
+, Read([Variable(), "primitives"])
+, DefData(
+    [ Variable()
+    , "y"
+    , Anon("anon85")
+    , Anon("anon84")
+    , Anon("t_19596")
+    , Anon("anon83")
+    , "example1"
+    ]
+  , Type()
+  , Type("N")
+  )
+, DefData(
+    [Variable(), "one", Anon("t_19596"), Anon("anon83"), "example1"]
+  , Definition()
+  , App(Var("S"{[Variable(), "S", Anon("anon64"), "primitives"]}), Var("O"{[Variable(), "O", Anon("anon64"), "primitives"]}))
+  )
+, Def(
+    [ Variable()
+    , "y"
+    , Anon("anon87")
+    , Anon("anon86")
+    , Anon("t_19596")
+    , Anon("anon83")
+    , "example1"
+    ]
+  )
+, DefData(
+    [Variable(), Anon("t_19596"), Anon("anon83"), "example1"]
+  , Import()
+  , "primitives"{[Module(), "primitives"]}
+  )
+, Def(
+    [Variable(), "x", Anon("anon86"), Anon("t_19596"), Anon("anon83"), "example1"]
+  )
+, Def(
+    [Variable(), "x", Anon("anon84"), Anon("t_19596"), Anon("anon83"), "example1"]
+  )
+, Use([Variable(), "S", Anon("anon64"), "primitives"])
+, Use([Variable(), "S", Anon("anon64"), "primitives"])
+, Use([Variable(), "S", Anon("anon64"), "primitives"])
+, Def(
+    [Variable(), "add", Anon("t_19596"), Anon("anon83"), "example1"]
+  )
+, Use([Variable(), "O", Anon("anon64"), "primitives"])
+, Use([Variable(), "O", Anon("anon64"), "primitives"])
+, Def(
+    [Variable(), "two", Anon("t_19596"), Anon("anon83"), "example1"]
+  )
+, DefData(
+    [Variable(), "x", Anon("anon84"), Anon("t_19596"), Anon("anon83"), "example1"]
+  , Type()
+  , Type("N")
+  )
+, Use(
+    [Variable(), "one", Anon("t_19596"), Anon("anon83"), "example1"]
+  )
+, Use([Module(), "primitives"])
+, DefData(
+    [Variable(), "x", Anon("anon86"), Anon("t_19596"), Anon("anon83"), "example1"]
+  , Type()
+  , Type("N")
+  )
+, Use(
+    [Variable(), "mul", Anon("t_19596"), Anon("anon83"), "example1"]
+  )
+, DefData(
+    [Variable(), "add", Anon("t_19596"), Anon("anon83"), "example1"]
+  , Definition()
+  , Lam(
+      "x"{ [Variable(), "x", Anon("anon84"), Anon("t_19596"), Anon("anon83"), "example1"]
+         }
+    , Type("N")
+    , Lam(
+        "y"{ [ Variable()
+             , "y"
+             , Anon("anon85")
+             , Anon("anon84")
+             , Anon("t_19596")
+             , Anon("anon83")
+             , "example1"
+             ]
+           }
+      , Type("N")
+      , App(
+          App(
+            App(Var("if"{[Variable(), "if", Anon("anon64"), "primitives"]}), App(Var("isO"{[Variable(), "isO", Anon("anon64"), "primitives"]}), Var("x"{ [Variable(), "x", Anon("anon84"), Anon("t_19596"), Anon("anon83"), "example1"]
+                                                                                                                                                       })))
+          , Var("y"{ [ Variable()
+                     , "y"
+                     , Anon("anon85")
+                     , Anon("anon84")
+                     , Anon("t_19596")
+                     , Anon("anon83")
+                     , "example1"
+                     ]
+                   })
+          )
+        , App(
+            Var("S"{[Variable(), "S", Anon("anon64"), "primitives"]})
+          , App(
+              App(Var("add"{[Variable(), "add", Anon("t_19596"), Anon("anon83"), "example1"]}), App(Var("P"{[Variable(), "P", Anon("anon64"), "primitives"]}), Var("x"{ [Variable(), "x", Anon("anon84"), Anon("t_19596"), Anon("anon83"), "example1"]
+                                                                                                                                                                      })))
+            , Var("y"{ [ Variable()
+                       , "y"
+                       , Anon("anon85")
+                       , Anon("anon84")
+                       , Anon("t_19596")
+                       , Anon("anon83")
+                       , "example1"
+                       ]
+                     })
+            )
+          )
+        )
+      )
+    )
+  )
+, DefData(
+    [Variable(), "two", Anon("t_19596"), Anon("anon83"), "example1"]
+  , Definition()
+  , App(Var("S"{[Variable(), "S", Anon("anon64"), "primitives"]}), Var("one"{[Variable(), "one", Anon("t_19596"), Anon("anon83"), "example1"]}))
+  )
+, DefData(
+    [Variable(), "mul", Anon("t_19596"), Anon("anon83"), "example1"]
+  , Type()
+  , Fun(Type("N"), Fun(Type("N"), Type("N")))
+  )
+, DefData(
+    [Variable(), "mul", Anon("t_19596"), Anon("anon83"), "example1"]
+  , Definition()
+  , Lam(
+      "x"{ [Variable(), "x", Anon("anon86"), Anon("t_19596"), Anon("anon83"), "example1"]
+         }
+    , Type("N")
+    , Lam(
+        "y"{ [ Variable()
+             , "y"
+             , Anon("anon87")
+             , Anon("anon86")
+             , Anon("t_19596")
+             , Anon("anon83")
+             , "example1"
+             ]
+           }
+      , Type("N")
+      , App(
+          App(
+            App(Var("if"{[Variable(), "if", Anon("anon64"), "primitives"]}), App(Var("isO"{[Variable(), "isO", Anon("anon64"), "primitives"]}), Var("x"{ [Variable(), "x", Anon("anon86"), Anon("t_19596"), Anon("anon83"), "example1"]
+                                                                                                                                                       })))
+          , Var("O"{[Variable(), "O", Anon("anon64"), "primitives"]})
+          )
+        , App(
+            App(Var("add"{[Variable(), "add", Anon("t_19596"), Anon("anon83"), "example1"]}), Var("y"{ [ Variable()
+                                                                                                       , "y"
+                                                                                                       , Anon("anon87")
+                                                                                                       , Anon("anon86")
+                                                                                                       , Anon("t_19596")
+                                                                                                       , Anon("anon83")
+                                                                                                       , "example1"
+                                                                                                       ]
+                                                                                                     }))
+          , App(
+              App(Var("mul"{[Variable(), "mul", Anon("t_19596"), Anon("anon83"), "example1"]}), App(Var("P"{[Variable(), "P", Anon("anon64"), "primitives"]}), Var("x"{ [Variable(), "x", Anon("anon86"), Anon("t_19596"), Anon("anon83"), "example1"]
+                                                                                                                                                                      })))
+            , Var("y"{ [ Variable()
+                       , "y"
+                       , Anon("anon87")
+                       , Anon("anon86")
+                       , Anon("t_19596")
+                       , Anon("anon83")
+                       , "example1"
+                       ]
+                     })
+            )
+          )
+        )
+      )
+    )
+  )
+, DefData(
+    [Variable(), "example1"]
+  , Unique()
+  , [Anon("anon83"), "example1"]
+  )
+, DefData(
+    [Variable(), "one", Anon("t_19596"), Anon("anon83"), "example1"]
+  , Type()
+  , Type("N")
+  )
+, Use(
+    [Variable(), "x", Anon("anon84"), Anon("t_19596"), Anon("anon83"), "example1"]
+  )
+, Use(
+    [Variable(), "x", Anon("anon84"), Anon("t_19596"), Anon("anon83"), "example1"]
+  )
+, Use([Variable(), "P", Anon("anon64"), "primitives"])
+, Use([Variable(), "P", Anon("anon64"), "primitives"])
+, Use(
+    [Variable(), "add", Anon("t_19596"), Anon("anon83"), "example1"]
+  )
+, Use(
+    [Variable(), "add", Anon("t_19596"), Anon("anon83"), "example1"]
+  )
+]
\ No newline at end of file

Modified: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/test/example1.lam
==============================================================================
--- spoofax-contrib/spoofax-lambda/branches/nbl-evolution/test/example1.lam	Mon Jul 23 07:46:12 2012	(r25237)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/test/example1.lam	Mon Jul 23 12:53:43 2012	(r25238)
@@ -18,4 +18,4 @@
           (add y (mul (P x) y))
 
 eval
-  mul two two
\ No newline at end of file
+  P (S O)
\ No newline at end of file

Modified: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/test/example1.norm.lam
==============================================================================
--- spoofax-contrib/spoofax-lambda/branches/nbl-evolution/test/example1.norm.lam	Mon Jul 23 07:46:12 2012	(r25237)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/test/example1.norm.lam	Mon Jul 23 12:53:43 2012	(r25238)
@@ -1,4 +1,4 @@
 module example1norm
 
 eval
-  ( S ( S ( S ( S O ) ) ) )
\ No newline at end of file
+  O
\ No newline at end of file

Modified: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/evaluate.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/evaluate.str	Mon Jul 23 07:46:12 2012	(r25237)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/evaluate.str	Mon Jul 23 12:53:43 2012	(r25238)
@@ -75,7 +75,7 @@
      
   definition-of :
     Var(x) -> <index-lookup; index-get-data(|Definition())> x
-  
+    	
   definition-of :
     Def(x, t, e) -> e
   

Added: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/names.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/names.aterm	Mon Jul 23 12:53:43 2012	(r25238)
@@ -0,0 +1,92 @@
+Naming(
+  "names"
+, [Import("include/Spoofax-lambda")]
+, [ ND-Namespaces([Namespace("Module"), Namespace("Variable")])
+  , ND-Rules(
+      [ ND-Rule(
+          NoAnnoList(
+            Op(
+              "Module"
+            , [Var("m"), ListVar("def*"), Var("e")]
+            )
+          )
+        , [ ND-Def(
+              Unique()
+            , NsRef("Module")
+            , VarRef("m")
+            , None()
+            , None()
+            , [NsRef("Variable")]
+            , []
+            )
+          ]
+        )
+      , ND-Rule(
+          NoAnnoList(Op("Imports", [Var("m")]))
+        , [ ND-Import(
+              [NonTransitive(NsRef("Variable"))]
+            , ND-Ref(NsRef("Module"), VarRef("m"), None(), None(), [])
+            , OrderedScope()
+            )
+          ]
+        )
+      , ND-Rule(
+          NoAnnoList(Op("Decl", [Var("x"), Var("t")]))
+        , [ ND-Def(
+              Unique()
+            , NsRef("Variable")
+            , VarRef("x")
+            , TypeBinding(VarRef("t"))
+            , None()
+            , []
+            , []
+            )
+          ]
+        )
+      , ND-Rule(
+          NoAnnoList(
+            Op(
+              "Def"
+            , [Var("x"), Var("t"), Var("e")]
+            )
+          )
+        , [ ND-Def(
+              Unique()
+            , NsRef("Variable")
+            , VarRef("x")
+            , TypeBinding(VarRef("t"))
+            , None()
+            , []
+            , []
+            )
+          ]
+        )
+      , ND-Rule(
+          NoAnnoList(
+            Op(
+              "Lam"
+            , [Var("x"), Var("t"), Var("e")]
+            )
+          )
+        , [ ND-Def(
+              Unique()
+            , NsRef("Variable")
+            , VarRef("x")
+            , TypeBinding(VarRef("t"))
+            , DefScope([VarRef("e")])
+            , []
+            , []
+            )
+          ]
+        )
+      , ND-Rule(
+          NoAnnoList(Op("Var", [Var("x")]))
+        , [ ND-Refs(
+              [ND-Ref(NsRef("Variable"), VarRef("x"), None(), None(), [])]
+            )
+          ]
+        )
+      ]
+    )
+  ]
+)
\ No newline at end of file

Modified: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/names.nd
==============================================================================
--- spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/names.nd	Mon Jul 23 07:46:12 2012	(r25237)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/names.nd	Mon Jul 23 12:53:43 2012	(r25238)
@@ -11,7 +11,7 @@
     scope for Variable
 
   Imports(m) : 
-    imports Variable from Module m into subsequent scope  
+    imports Variable from Module m //into subsequent scope  
       
   Decl(x, t) :
     defines Variable x of type t
@@ -20,7 +20,7 @@
     defines Variable x of type t
     
   Lam(x, t, e) :
-		defines Variable x of type t in e
+	defines Variable x of type t in e
 		
-	Var(x) :
-		refers to Variable x
+  Var(x) :
+	refers to Variable x

Modified: spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/names.str
==============================================================================
--- spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/names.str	Mon Jul 23 07:46:12 2012	(r25237)
+++ spoofax-contrib/spoofax-lambda/branches/nbl-evolution/trans/names.str	Mon Jul 23 12:53:43 2012	(r25238)
@@ -12,40 +12,37 @@
 
 signature
   constructors
-    Module     : Namespace
-    Import     : Namespace
-    Type       : Namespace
-    Variable   : Namespace
-    Definition : Namespace
+    Module   : Namespace
+    Variable : Namespace
 
 
 rules
 
   nam-get-definitions(|paths__, paths'__, subsequent__):
-    Module(m, def*, e) -> ( <Module(nam-annotate-def(|uri0), id, id)>
-                          , [Def(uri0)]
+    Module(m, def*, e) -> ( <Module(nam-annotate-def(|uri48), id, id)>
+                          , [Def(uri48)]
                           , []
                           )
-    where uri0 := [Module(), m|<lookup-index-path> (Module(), paths__)]
+    where uri48 := [Module(), m|<lookup-index-path> (Module(), paths__)]
 
   nam-get-definition-keys :
     Module(m, def*, e) -> [m]
 
   nam-get-scope-types :
-    Module(m, def*, e) -> [ (Module(), m, Variable(), anon0)
+    Module(m, def*, e) -> [ (Module(), m, Variable(), anon430)
                           ]
-    where anon0 := Anon(<newname> "anon")
+    where anon430 := Anon(<newname> "unique")
 
 
 rules
 
   nam-get-definitions(|paths__, paths'__, subsequent__):
-    Imports(m) -> ( <Imports(!import0)>
+    Imports(m) -> ( <Imports(!import10)>
                   , []
-                  , [DefData(uri1, Import(), import0)]
+                  , [DefData(uri49, Import(), import10)]
                   )
-    where import0 := <nam-annotate-use(|paths'__, [Module()])> m
-    where uri1 := [Variable(), subsequent__|<lookup-index-path> (Variable(), paths'__)]
+    where import10 := <nam-annotate-use(|paths'__, [Module()])> m
+    where uri49 := [Variable()|<lookup-index-path> (Variable(), paths'__)]
 
   nam-get-use-keys :
     Imports(m) -> [m]
@@ -54,18 +51,15 @@
     Imports(m) -> [Regular(Module(), m)]
     where <target__> m
 
-  nam-ordered-def :
-    Imports(m) -> [Variable()]
-
 
 rules
 
   nam-get-definitions(|paths__, paths'__, subsequent__):
-    Decl(x, t) -> ( <Decl(nam-annotate-def(|uri2), id)>
-                  , [Def(uri2)]
+    Decl(x, t) -> ( <Decl(nam-annotate-def(|uri50), id)>
+                  , [Def(uri50)]
                   , []
                   )
-    where uri2 := [Variable(), x|<lookup-index-path> (Variable(), paths__)]
+    where uri50 := [Variable(), x|<lookup-index-path> (Variable(), paths__)]
 
   nam-get-definition-keys :
     Decl(x, t) -> [x]
@@ -77,11 +71,11 @@
 rules
 
   nam-get-definitions(|paths__, paths'__, subsequent__):
-    Def(x, t, e) -> ( <Def(nam-annotate-def(|uri3), id, id)>
-                    , [Def(uri3)]
+    Def(x, t, e) -> ( <Def(nam-annotate-def(|uri51), id, id)>
+                    , [Def(uri51)]
                     , []
                     )
-    where uri3 := [Variable(), x|<lookup-index-path> (Variable(), paths__)]
+    where uri51 := [Variable(), x|<lookup-index-path> (Variable(), paths__)]
 
   nam-get-definition-keys :
     Def(x, t, e) -> [x]
@@ -94,14 +88,14 @@
 
   nam-get-definitions(|paths__, paths'__, subsequent__):
     Lam(x, t, e) -> ( <Lam(
-                         nam-annotate-def(|uri4)
+                         nam-annotate-def(|uri52)
                        , id
-                       , nam-annotate-scope(|[uri4])
+                       , nam-annotate-scope(|[uri52])
                        )>
-                    , [Def(uri4)]
+                    , [Def(uri52)]
                     , []
                     )
-    where uri4 := [Variable(), x, Anon(<newname> "anon")|<lookup-index-path> (Variable(), paths__)]
+    where uri52 := [Variable(), x, Anon(<newname> "scope")|<lookup-index-path> (Variable(), paths__)]
 
   nam-get-definition-keys :
     Lam(x, t, e) -> [x]


From richard at vogelij.nl  Thu Jul 26 03:54:03 2012
From: richard at vogelij.nl (Richard Vogelij)
Date: Thu, 26 Jul 2012 01:54:03 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25239 - in
	spoofax-ace/trunk/spoofax-ace/src/spoofax/ace: .
	generate/java generate/javascript
Message-ID: <20120726015403.19327108C002@mx3.tudelft.nl>

Author: rvogelij
Date: Thu Jul 26 01:54:01 2012
New Revision: 25239
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25239&sc=1

Log:
-fixed stratego entrypoint implementations
-rewritten the client-server partitioner. Can now be setup to de biased toward a certain area regarding workload (more at server or more at client)
-improved theme to show errors/warnings in proper colors

Modified:
   spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/S2ASettings.java
   spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/SpoofaxToAce.java
   spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/java/S2AJavaEntryPoint.java
   spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/java/S2AJavaGenerator.java
   spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/javascript/S2ACloud9PluginGenerator.java
   spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/javascript/S2AJSEntryPointMeasure.java
   spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/javascript/S2AJSGenerator.java
   spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/javascript/S2ANodeJSExecutableGenerator.java

Modified: spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/S2ASettings.java
==============================================================================
--- spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/S2ASettings.java	Mon Jul 23 12:53:43 2012	(r25238)
+++ spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/S2ASettings.java	Thu Jul 26 01:54:01 2012	(r25239)
@@ -6,7 +6,7 @@
 	//protected S2AGenerator(String spoofaxProjdir, String jssglr, String str2jsPath, String strategoLib, String strategoCtrees, String mainSrcFile) throws IOException, S2ASpoofaxSetupException
 	public final String SpoofaxProjectDir;
 	public final String JssglrImplementation;
-	public final String Str2JSPath;
+	public final String Str2JSPath; 
 	public final String StrategoLibPath;
 	public final String StrategoCtreePath;
 	

Modified: spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/SpoofaxToAce.java
==============================================================================
--- spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/SpoofaxToAce.java	Mon Jul 23 12:53:43 2012	(r25238)
+++ spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/SpoofaxToAce.java	Thu Jul 26 01:54:01 2012	(r25239)
@@ -105,7 +105,7 @@
 		System.err.println("\t"+P_TESTSRC+" <file>\tFull path to a source file from the target language");
 		System.err.println("\t"+P_CLIEXEC+" <file>\tOutput a (NodeJS) executable");
 		System.err.println("\t"+P_CLOUD9PLUGIN+" <dir>\tInstall language into Cloud9 installation at <dir>");
-		System.err.println("\t"+P_WITHSERVER+" <dir>\tAlso create native java serverside executable at <dir> (Not fully implemented!)");
+		System.err.println("\t"+P_WITHSERVER+" <dir>\tAlso create native java serverside executable at <dir>");
 	}
 }
 

Modified: spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/java/S2AJavaEntryPoint.java
==============================================================================
--- spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/java/S2AJavaEntryPoint.java	Mon Jul 23 12:53:43 2012	(r25238)
+++ spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/java/S2AJavaEntryPoint.java	Thu Jul 26 01:54:01 2012	(r25239)
@@ -52,6 +52,7 @@
 
 	        //"      where start-task(|$[java_analyze]) "+
 	        "      where print-elapsed((ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(ast, \"\", \"\")|\"Analyzed source\") \n" +
+        
 	        //"      where finished-task(|$[java_analyze]) "+
 	        //"      where record-task(|$[java_analyze], $["+esvParser.GetCtreeName()+"], $[CharsOfCode], <strlen>sourcecode) "+
 	        //"      where record-task(|$[java_analyze], $["+esvParser.GetCtreeName()+"], $[LinesOfCode], <linecount-in-string>sourcecode) "+

Modified: spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/java/S2AJavaGenerator.java
==============================================================================
--- spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/java/S2AJavaGenerator.java	Mon Jul 23 12:53:43 2012	(r25238)
+++ spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/java/S2AJavaGenerator.java	Thu Jul 26 01:54:01 2012	(r25239)
@@ -68,16 +68,16 @@
 	
 	private void PackRequiredJars(String atPath) throws IOException
 	{
+		System.out.println("Packing to: " + atPath);
 		new File(atPath).mkdirs();
 		S2AUtils.EmptyDir(atPath);
 		S2AUtils.WriteFileToFile(outputJar, atPath+"/prog.jar");
 		S2AUtils.WriteFileToFile("strategoxt.jar", atPath+"/strategoxt.jar");
-		S2AUtils.WriteFileToFile(_tmpDir + _esvParser.GetCtreeName() + ".jar", atPath+"/"+_esvParser.GetCtreeName() + ".jar");
+		S2AUtils.WriteFileToFile(_tmpDir + _esvParser.GetCtreeName() + ".jar", atPath+"/"+"language" + ".jar");
 		if (new File(_tmpDir + _esvParser.GetCtreeName() + "-java.jar").exists())
-			S2AUtils.WriteFileToFile(_tmpDir + _esvParser.GetCtreeName() + "-java.jar", atPath+"/"+_esvParser.GetCtreeName() + "-java.jar");
+			S2AUtils.WriteFileToFile(_tmpDir + _esvParser.GetCtreeName() + "-java.jar", atPath+"/"+"language" + "-java.jar");
 	}
 	
-	
 	/*
 	 * Function produces a jar file with suitable manifest 
 	 */
@@ -88,7 +88,7 @@
 		FileOutputStream fstream = new FileOutputStream(_tmpDir + "MANUFEST.MF");
 		S2AUtils.WriteStringToStream("Manifest-Version: 1.0\n", fstream);
 		S2AUtils.WriteStringToStream("Main-Class: jbuild\n", fstream);
-		S2AUtils.WriteStringToStream("Class-Path: strategoxt.jar "+_esvParser.GetCtreeName()+"-java.jar \n", fstream);
+		S2AUtils.WriteStringToStream("Class-Path: strategoxt.jar language-java.jar \n", fstream);
 		fstream.flush();
 		fstream.close();
 		S2AUtils.ExecCommandLine(_tmpDir, "jar cf " + outputJar + " " +

Modified: spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/javascript/S2ACloud9PluginGenerator.java
==============================================================================
--- spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/javascript/S2ACloud9PluginGenerator.java	Mon Jul 23 12:53:43 2012	(r25238)
+++ spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/javascript/S2ACloud9PluginGenerator.java	Thu Jul 26 01:54:01 2012	(r25239)
@@ -52,7 +52,7 @@
 			System.err.println("###CRITICAL ERROR### " + e.getMessage());
 			throw new S2ASpoofaxSetupException();
 		}
-		System.err.println("Done! (Warning - not implemented dropdown menu appending yet)");
+		System.err.println("Done! (Warning - not implemented dropdown menu appending yet)\n\n"+cloud9Path);
 		return true;
 	}
 }

Modified: spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/javascript/S2AJSEntryPointMeasure.java
==============================================================================
--- spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/javascript/S2AJSEntryPointMeasure.java	Mon Jul 23 12:53:43 2012	(r25238)
+++ spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/javascript/S2AJSEntryPointMeasure.java	Thu Jul 26 01:54:01 2012	(r25239)
@@ -33,12 +33,17 @@
 	        "      where print-elapsed(table := <import-term("+esvParser.GetTableName()+")>|\"Loaded parsetable\") \n" +
 	        "      where print-elapsed(parser := <prim(\"JSSGLR_GET_PARSER\")>table|\"Loaded parser\") \n" +
 	        
-	        /*
-	        "      where print-elapsed(testast := <prim(\"JSSGLR_PARSE_STRING\",parser)>sourcecode|\"Parsed source (PRE RUN)\")\n" +
+	        //Warm up 1
+			"      where print-elapsed(testast := <prim(\"JSSGLR_PARSE_STRING\",parser)>sourcecode|\"PRE RUN Parsed source\")\n" +
+			"      where print-elapsed((ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(testast, \"\", \"\")|\"PRE CACHE RUN Analyzed source\") \n" +
+	        "      where print-elapsed(testast := <prim(\"JSSGLR_PARSE_STRING\",parser)>sourcecode|\"PRE RUN Parsed source\")\n" +
 	        "      where print-elapsed((ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(testast, \"\", \"\")|\"PRE CACHE RUN Analyzed source\") \n" +
-	        "      where print-elapsed(testast := <prim(\"JSSGLR_PARSE_STRING\",parser)>sourcecode|\"Parsed source (PRE RUN)\")\n" +
+	        "      where print-elapsed(testast := <prim(\"JSSGLR_PARSE_STRING\",parser)>sourcecode|\"PRE RUN Parsed source\")\n" +
 	        "      where print-elapsed((ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(testast, \"\", \"\")|\"PRE CACHE RUN Analyzed source\") \n" +
-	        */
+	        "      where print-elapsed(testast := <prim(\"JSSGLR_PARSE_STRING\",parser)>sourcecode|\"PRE RUN Parsed source\")\n" +
+	        "      where print-elapsed((ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(testast, \"\", \"\")|\"PRE CACHE RUN Analyzed source\") \n" +
+	        "      where print-elapsed(testast := <prim(\"JSSGLR_PARSE_STRING\",parser)>sourcecode|\"PRE RUN Parsed source\")\n" +
+	        "      where print-elapsed((ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(testast, \"\", \"\")|\"PRE CACHE RUN Analyzed source\") \n" +	        
 	        
 			"      where <prim(\"SSL_eval_js\")>$[ StrategoJSDataCollect.StartWork('js_parse'); ] \n" +
 	        "      where print-elapsed(ast := <prim(\"JSSGLR_PARSE_STRING\",parser)>sourcecode|\"Parsed source\")\n" +
@@ -52,6 +57,21 @@
 	        "      where <prim(\"SSL_eval_js\")>$[ StrategoJSDataCollect.RecordData('js_parse', '"+esvParser.GetCtreeName()+"', 'MaxDepthS', [ max-depths-summed ]); ] \n" +
 			"      where <prim(\"SSL_eval_js\")>$[ StrategoJSDataCollect.RecordHeapSize('memsize_after_js_parse', '"+esvParser.GetCtreeName()+"', 'LinesOfCode', [ <linecount-in-string>sourcecode ]); ] \n" +
 			"      where <prim(\"SSL_eval_js\")>$[ StrategoJSDataCollect.RecordHeapSize('memsize_after_js_parse', '"+esvParser.GetCtreeName()+"', 'MaxDepthS', [ max-depths-summed ]); ] \n" +
+			
+			//Warm up 2
+			"      where print-elapsed(testast := <prim(\"JSSGLR_PARSE_STRING\",parser)>sourcecode|\"PRE RUN Parsed source\")\n" +
+			"      where print-elapsed((ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(testast, \"\", \"\")|\"PRE CACHE RUN Analyzed source\") \n" +
+	        "      where print-elapsed(testast := <prim(\"JSSGLR_PARSE_STRING\",parser)>sourcecode|\"PRE RUN Parsed source\")\n" +
+	        "      where print-elapsed((ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(testast, \"\", \"\")|\"PRE CACHE RUN Analyzed source\") \n" +
+	        "      where print-elapsed(testast := <prim(\"JSSGLR_PARSE_STRING\",parser)>sourcecode|\"PRE RUN Parsed source\")\n" +
+	        "      where print-elapsed((ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(testast, \"\", \"\")|\"PRE CACHE RUN Analyzed source\") \n" +
+	        "      where print-elapsed(testast := <prim(\"JSSGLR_PARSE_STRING\",parser)>sourcecode|\"PRE RUN Parsed source\")\n" +
+	        "      where print-elapsed((ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(testast, \"\", \"\")|\"PRE CACHE RUN Analyzed source\") \n" +
+	        "      where print-elapsed(testast := <prim(\"JSSGLR_PARSE_STRING\",parser)>sourcecode|\"PRE RUN Parsed source\")\n" +
+	        "      where print-elapsed((ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(testast, \"\", \"\")|\"PRE CACHE RUN Analyzed source\") \n" +	        
+
+			
+	        
 	        "      where <prim(\"SSL_eval_js\")>$[ StrategoJSDataCollect.StartWork('js_analyze'); ] \n" +
 	        "      where print-elapsed((ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(ast, \"\", \"\")|\"Analyzed source\") \n" +
 	        "      where <prim(\"SSL_eval_js\")>$[ StrategoJSDataCollect.FinishedWork('js_analyze'); ] \n" +

Modified: spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/javascript/S2AJSGenerator.java
==============================================================================
--- spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/javascript/S2AJSGenerator.java	Mon Jul 23 12:53:43 2012	(r25238)
+++ spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/javascript/S2AJSGenerator.java	Thu Jul 26 01:54:01 2012	(r25239)
@@ -27,7 +27,7 @@
 	protected final String esvFile;
 	protected final S2AEsvParser esvParser;
 	protected final IS2AJSEntryPoint entryPointGenerator;
-	 
+	
 	
 	protected S2AJSGenerator(S2ASettings pSettings) throws IOException, S2ASpoofaxSetupException
 	{
@@ -42,6 +42,10 @@
 		S2AUtils.EmptyDir(tmpDir);
 		
 		entryPointGenerator = new S2AJSEntryPointRelease();
+		//entryPointGenerator = new S2AJSEntryPointMeasure();
+		
+		
+		
 		//entryPointGenerator = new S2AJSEntryPointProfile();
 		//entryPointGenerator = new S2AJSEntryPointReleaseOnlySyntax();
 		//entryPointGenerator = new S2AJSEntryPointProfileOnlySyntax();
@@ -97,9 +101,11 @@
 			S2AUtils.WriteResourceToFile(getClass(), "/ace/static.py", wwwroot+"/static.py");
 			S2AUtils.WriteResourceToFile(getClass(), "/ace/src/ace-uncompressed.js", wwwroot+"/src/ace-uncompressed.js");
 			S2AUtils.WriteResourceToFile(getClass(), "/ace/src/mode-spoofax2ace.js", wwwroot+"/src/mode-spoofax2ace.js");
+			
 			//S2AUtils.WriteResourceToFile(getClass(), "/ace/src/theme-dawn.js", wwwroot+"/src/theme-dawn.js");
 			S2AUtils.WriteResourceToFile(getClass(), "/ace/src/theme-dawn-original.js", wwwroot+"/src/theme-dawn.js");
-			//S2AUtils.WriteResourceToFile(getClass(), "/ace/src/theme-eclipse.js", wwwroot+"/src/theme-eclipse.js");
+			
+			
 			S2AUtils.WriteFileToFile(wrappedAceWorker, wwwroot+"/src/worker-spoofax2ace.js");
 			new File(wwwroot+"/static.py").setExecutable(true, false);
 		} catch (IOException e) {

Modified: spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/javascript/S2ANodeJSExecutableGenerator.java
==============================================================================
--- spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/javascript/S2ANodeJSExecutableGenerator.java	Mon Jul 23 12:53:43 2012	(r25238)
+++ spoofax-ace/trunk/spoofax-ace/src/spoofax/ace/generate/javascript/S2ANodeJSExecutableGenerator.java	Thu Jul 26 01:54:01 2012	(r25239)
@@ -14,7 +14,7 @@
 {
 
 	public S2ANodeJSExecutableGenerator(S2ASettings settings) throws IOException, S2ASpoofaxSetupException {
-		super(settings);
+		super(settings); 
 	}
 	
 	/*
@@ -23,7 +23,7 @@
 	 */ 
 	
 	public boolean Build(String outputFile) throws S2ASpoofaxSetupException, S2AWrapperException, S2ACompilerException, S2AValidatorException, IOException
-	{
+	{ 
 		BuildStrProgram();
 		WrapStratego(jsbin, wrappedJsBin, false);
 		S2AUtils.WriteFileToFile(wrappedJsBin, outputFile);

From richard at vogelij.nl  Thu Jul 26 03:57:10 2012
From: richard at vogelij.nl (Richard Vogelij)
Date: Thu, 26 Jul 2012 01:57:10 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25240 - in
	spoofax-ace/trunk/spoofax-ace: . resources/ace/src
	resources/html resources/javascript
Message-ID: <20120726015710.BFFFD7F80DE@mx1.tudelft.nl>

Author: rvogelij
Date: Thu Jul 26 01:57:10 2012
New Revision: 25240
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25240&sc=1

Log:
.

Modified:
   spoofax-ace/trunk/spoofax-ace/build.xml
   spoofax-ace/trunk/spoofax-ace/resources/ace/src/theme-dawn-original.js
   spoofax-ace/trunk/spoofax-ace/resources/html/editor_prepend.html
   spoofax-ace/trunk/spoofax-ace/resources/html/test_append.html
   spoofax-ace/trunk/spoofax-ace/resources/javascript/measurements.js
   spoofax-ace/trunk/spoofax-ace/resources/javascript/partitioner.js
   spoofax-ace/trunk/spoofax-ace/resources/javascript/s2aclient.js
   spoofax-ace/trunk/spoofax-ace/resources/javascript/s2alocal.js

Modified: spoofax-ace/trunk/spoofax-ace/build.xml
==============================================================================
--- spoofax-ace/trunk/spoofax-ace/build.xml	Thu Jul 26 01:54:01 2012	(r25239)
+++ spoofax-ace/trunk/spoofax-ace/build.xml	Thu Jul 26 01:57:10 2012	(r25240)
@@ -77,7 +77,7 @@
 			<arg value="--cliexecutable"/>
 				<arg value="prog.js"/>
 			<arg value="--withserver"/>
-				<arg value="s2aserver/"/>
+				<arg value="./s2aserver/"/>
                 </java>
         </target>
 

Modified: spoofax-ace/trunk/spoofax-ace/resources/ace/src/theme-dawn-original.js
==============================================================================
--- spoofax-ace/trunk/spoofax-ace/resources/ace/src/theme-dawn-original.js	Thu Jul 26 01:54:01 2012	(r25239)
+++ spoofax-ace/trunk/spoofax-ace/resources/ace/src/theme-dawn-original.js	Thu Jul 26 01:57:10 2012	(r25240)
@@ -1 +1 @@
-define("ace/theme/dawn",["require","exports","module"],function(a,b,c){b.isDark=!1,b.cssClass="ace-dawn",b.cssText=".ace-dawn .ace_editor {  border: 2px solid rgb(159, 159, 159);}.ace-dawn .ace_editor.ace_focus {  border: 2px solid #327fbd;}.ace-dawn .ace_gutter {  width: 50px;  background: #e8e8e8;  color: #333;  overflow : hidden;}.ace-dawn .ace_gutter-layer {  width: 100%;  text-align: right;}.ace-dawn .ace_gutter-layer .ace_gutter-cell {  padding-right: 6px;}.ace-dawn .ace_print_margin {  width: 1px;  background: #e8e8e8;}.ace-dawn .ace_scroller {  background-color: #F9F9F9;}.ace-dawn .ace_text-layer {  cursor: text;  color: #080808;}.ace-dawn .ace_cursor {  border-left: 2px solid #000000;}.ace-dawn .ace_cursor.ace_overwrite {  border-left: 0px;  border-bottom: 1px solid #000000;} .ace-dawn .ace_marker-layer .ace_selection {  background: rgba(39, 95, 255, 0.30);}.ace-dawn .ace_marker-layer .ace_step {  background: rgb(198, 219, 174);}.ace-dawn .ace_marker-layer .ace_brac
 ket {  margin: -1px 0 0 -1px;  border: 1px solid rgba(75, 75, 126, 0.50);}.ace-dawn .ace_marker-layer .ace_active_line {  background: rgba(36, 99, 180, 0.12);}.ace-dawn .ace_marker-layer .ace_selected_word {  border: 1px solid rgba(39, 95, 255, 0.30);}       .ace-dawn .ace_invisible {  color: rgba(75, 75, 126, 0.50);}.ace-dawn .ace_keyword {  color:#794938;}.ace-dawn .ace_constant {  color:#811F24;}.ace-dawn .ace_invalid.ace_illegal {  font-style:italic;background-image:url(underline.gif);background-position: bottom;background-repeat: repeat-x; }.ace-dawn .ace_invalid.ace_deprecated {  text-decoration:underline;font-style:italic;color:#B52A1D;}.ace-dawn .ace_support {  color:#691C97;}.ace-dawn .ace_fold {}.ace-dawn .ace_support.ace_function {  color:#693A17;}.ace-dawn .ace_string {  color:#0B6125;}.ace-dawn .ace_string.ace_regexp {  color:#CF5628;}.ace-dawn .ace_comment {  font-style:italic;color:#5A525F;}.ace-dawn .ace_variable {  color:#234A97;}.ace-dawn .ace_markup.ace_un
 derline {    text-decoration:underline;}.ace-dawn .ace_markup.ace_hea\ No newline at end of file
+define("ace/theme/dawn",["require","exports","module"],function(a,b,c){b.isDark=!1,b.cssClass="ace-dawn",b.cssText=".ace-dawn .ace_editor {  border: 2px solid rgb(159, 159, 159);}.ace-dawn .ace_editor.ace_focus {  border: 2px solid #327fbd;}.ace-dawn .ace_gutter {  width: 50px;  background: #e8e8e8;  color: #333;  overflow : hidden;}.ace-dawn .ace_gutter-layer {  width: 100%;  text-align: right;}.ace-dawn .ace_gutter-layer .ace_gutter-cell {  padding-right: 6px;}.ace-dawn .ace_print_margin {  width: 1px;  background: #e8e8e8;}.ace-dawn .ace_scroller {  background-color: #F9F9F9;}.ace-dawn .ace_text-layer {  cursor: text;  color: #080808;}.ace-dawn .ace_cursor {  border-left: 2px solid #000000;}.ace-dawn .ace_cursor.ace_overwrite {  border-left: 0px;  border-bottom: 1px solid #000000;} .ace-dawn .ace_marker-layer .ace_selection {  background: rgba(39, 95, 255, 0.30);}.ace-dawn .ace_marker-layer .ace_step {  background: rgb(198, 219, 174);}.ace-dawn .ace_marker-layer .ace_brac
 ket {  margin: -1px 0 0 -1px;  border: 1px solid rgba(75, 75, 126, 0.50);}.ace-dawn .ace_marker-layer .ace_active_line {  background: rgba(36, 99, 180, 0.12);}.ace-dawn .ace_marker-layer .ace_selected_word {  border: 1px solid rgba(39, 95, 255, 0.30);}       .ace-dawn .ace_invisible {  color: rgba(75, 75, 126, 0.50);}.ace-dawn .ace_keyword {  color:#794938;}.ace-dawn .ace_constant {  color:#811F24;}.ace-dawn .ace_invalid.ace_illegal {  font-style:italic;background-image:url(underline.gif);background-position: bottom;background-repeat: repeat-x; }.ace-dawn .ace_invalid.ace_deprecated {  text-decoration:underline;font-style:italic;color:#B52A1D;}.ace-dawn .ace_support {  color:#691C97;}.ace-dawn .ace_fold {}.ace-dawn .ace_support.ace_function {  color:#693A17;}.ace-dawn .ace_string {  color:#0B6125;}.ace-dawn .ace_string.ace_regexp {  color:#CF5628;}.ace-dawn .ace_comment {  font-style:italic;color:#397D02;}.ace-dawn .ace_variable {  color:#234A97;}.ace-dawn .ace_markup.ace_un
 derline {    text-decoration:underline;}.ace-dawn .ace_markup.ace_hea\ No newline at end of file

Modified: spoofax-ace/trunk/spoofax-ace/resources/html/editor_prepend.html
==============================================================================
--- spoofax-ace/trunk/spoofax-ace/resources/html/editor_prepend.html	Thu Jul 26 01:54:01 2012	(r25239)
+++ spoofax-ace/trunk/spoofax-ace/resources/html/editor_prepend.html	Thu Jul 26 01:57:10 2012	(r25240)
@@ -9,7 +9,7 @@
         overflow: hidden;
     }
     
-    #editor2 { 
+    #editor { 
         margin: 0;
         position: absolute;
         top: 0;
@@ -20,6 +20,4 @@
   </style>
 </head>
 <body>
-<input type=checkbox id='local'>
-<input type=checkbox id='bla'>
 <div id="editor" style="height: 100%; width: 100%;">
\ No newline at end of file

Modified: spoofax-ace/trunk/spoofax-ace/resources/html/test_append.html
==============================================================================
--- spoofax-ace/trunk/spoofax-ace/resources/html/test_append.html	Thu Jul 26 01:54:01 2012	(r25239)
+++ spoofax-ace/trunk/spoofax-ace/resources/html/test_append.html	Thu Jul 26 01:57:10 2012	(r25240)
@@ -9,6 +9,7 @@
 go = function(sourcecode)
 {
 	analyzer.main(["aap", sourcecode]);
+	//Partitioner.delegateWork(sourcecode);
 };
 
 window.onload = function() 

Modified: spoofax-ace/trunk/spoofax-ace/resources/javascript/measurements.js
==============================================================================
--- spoofax-ace/trunk/spoofax-ace/resources/javascript/measurements.js	Thu Jul 26 01:54:01 2012	(r25239)
+++ spoofax-ace/trunk/spoofax-ace/resources/javascript/measurements.js	Thu Jul 26 01:57:10 2012	(r25240)
@@ -9,7 +9,7 @@
  */
 
 //var DATACOLLECTINGSERVERURL = "http://richard.vogelij.nl:8889";
-var DATACOLLECTINGSERVERURL = "http://192.168.1.125:8889";
+var DATACOLLECTINGSERVERURL = "http://127.0.0.1:8889";
 StrategoJSDataCollect = {};
 var StrategoJSDataCollectors = new Array();
 

Modified: spoofax-ace/trunk/spoofax-ace/resources/javascript/partitioner.js
==============================================================================
--- spoofax-ace/trunk/spoofax-ace/resources/javascript/partitioner.js	Thu Jul 26 01:54:01 2012	(r25239)
+++ spoofax-ace/trunk/spoofax-ace/resources/javascript/partitioner.js	Thu Jul 26 01:57:10 2012	(r25240)
@@ -4,60 +4,96 @@
 
 var Partitioner = {};
 
-Partitioner.partitionerIsRunningAJob = false;
-Partitioner.delegatedMode = -1;
-Partitioner.startTimerunningAJob;
-
+Partitioner.DOC = "";
 Partitioner.S2A_LOCAL_MODE=0;
 Partitioner.S2A_CLIENT_MODE_LOW_CPU_HIGH_BANDWIDTH=1;
 Partitioner.S2A_CLIENT_MODE_HIGH_CPU_LOW_BANDWIDTH=2;
-
-Partitioner.S2A_RUNCOUNT = [];
-Partitioner.S2A_RUNCOUNT[Partitioner.S2A_LOCAL_MODE] = 1;
-Partitioner.S2A_RUNCOUNT[Partitioner.S2A_CLIENT_MODE_LOW_CPU_HIGH_BANDWIDTH] = 1;
-Partitioner.S2A_RUNCOUNT[Partitioner.S2A_CLIENT_MODE_HIGH_CPU_LOW_BANDWIDTH] = 1;
 Partitioner.S2A_RUNTIME = [];
-Partitioner.S2A_RUNTIME[Partitioner.S2A_LOCAL_MODE] = 1;
-Partitioner.S2A_RUNTIME[Partitioner.S2A_CLIENT_MODE_LOW_CPU_HIGH_BANDWIDTH] = 1;
-Partitioner.S2A_RUNTIME[Partitioner.S2A_CLIENT_MODE_HIGH_CPU_LOW_BANDWIDTH] = 1;
+Partitioner.S2A_VAPORIZE_CONST = [];
 
+//Settings
+Partitioner.PENALTY = 500;
+Partitioner.MODE_TIMEOUT = 2500;
+Partitioner.S2A_VAPORIZE_CONST[Partitioner.S2A_LOCAL_MODE] 							= 2; //Prefer client side
+Partitioner.S2A_VAPORIZE_CONST[Partitioner.S2A_CLIENT_MODE_LOW_CPU_HIGH_BANDWIDTH] 	= 1;
+Partitioner.S2A_VAPORIZE_CONST[Partitioner.S2A_CLIENT_MODE_HIGH_CPU_LOW_BANDWIDTH] 	= 1;
 
-Partitioner.delegateWork = function(doc)
+Partitioner.partitionerIsRunningAJob = false;
+Partitioner.startTimerunningAJob = null;
+Partitioner.delegatedMode = -1;
+
+Partitioner.S2A_RUNTIME[Partitioner.S2A_LOCAL_MODE] = 0;
+Partitioner.S2A_RUNTIME[Partitioner.S2A_CLIENT_MODE_LOW_CPU_HIGH_BANDWIDTH] = 0;
+Partitioner.S2A_RUNTIME[Partitioner.S2A_CLIENT_MODE_HIGH_CPU_LOW_BANDWIDTH] = 0;
+Partitioner.VaporizeTimer = null; //setInterval(Partitioner.Vaporize, 1000);
+
+
+Partitioner.DetermineMode = function()
+{
+	
+	var bestMode = Partitioner.S2A_LOCAL_MODE;
+	var best = Infinity;
+	for (mode in Partitioner.S2A_RUNTIME)
+	{
+		if (Partitioner.S2A_RUNTIME[mode] < best)
+		{
+			bestMode = mode;
+			best = Partitioner.S2A_RUNTIME[mode];
+		} 
+	}
+	Partitioner.S2A_RUNTIME[bestMode] += Partitioner.PENALTY;//subtract penalty on completion, but add runtime
+	return Number(bestMode);
+}
+
+Partitioner.Vaporize = function()
 {
-	var DEBUG = false;
-	if (!DEBUG)
+	console.log(Partitioner.S2A_RUNTIME);
+	for (mode in Partitioner.S2A_RUNTIME)
 	{
-		Partitioner.handleDelegationOfWork(doc);
+		if (Partitioner.S2A_RUNTIME[mode] >= 1)
+			Partitioner.S2A_RUNTIME[mode] *= (100-Partitioner.S2A_VAPORIZE_CONST[mode])/100;
 	}
-	else
+	//Check if last attempt timed out;
+	if ((Partitioner.partitionerIsRunningAJob) && (Partitioner.startTimerunningAJob != null) && 
+			((new Date().getTime() - Partitioner.startTimerunningAJob) > Partitioner.MODE_TIMEOUT))
 	{
-		Partitioner.partitionerIsRunningAJob = true;
-		Partitioner.delegatedMode = 0;
-		
-		//Comment out a line here to make sure only that strategy is used in stead of letting the client-server-partitioner determine the fastest.
-		//S2ALocal.s2alocal(doc);
-		//S2AClient.s2aclient(doc, false);
-		S2AClient.s2aclient(doc, true);
+		console.log("Timed out!");
+		Partitioner.S2A_RUNTIME[Partitioner.delegatedMode] += Partitioner.MODE_TIMEOUT;
+		Partitioner.partitionerIsRunningAJob = false;
+		Partitioner.startTimerunningAJob = null;
+		Partitioner.handleDelegationOfWork(Partitioner.DOC);
 	}
 }
 
 
+Partitioner.delegateWork = function(doc)
+{
+	Partitioner.DOC = doc;
+	if (Partitioner.VaporizeTimer == null)
+		Partitioner.VaporizeTimer = setInterval(Partitioner.Vaporize, 1000);
+	Partitioner.handleDelegationOfWork(Partitioner.DOC);
+
+}
+
+
 Partitioner.handleDelegationOfWork = function(doc)
 {
 	console.log("delegateWork");
 	if (Partitioner.partitionerIsRunningAJob)
 	{
-		console.log("Busy with last request");
+		console.log("Busy with last request - ignoring last request.");
 		return;
 	}
 	Partitioner.partitionerIsRunningAJob = true;
 	Partitioner.startTimerunningAJob = new Date().getTime();
-	Partitioner.delegatedMode = Partitioner.determineMode(); 
+	var newMode = Partitioner.DetermineMode();
+	Partitioner.delegatedMode = newMode; 
 	try
 	{
-		console.log("Client/Server Partitioner will run mode: " + Partitioner.delegatedMode);
-		switch (Partitioner.delegatedMode)
+		console.log("Client/Server Partitioner will run mode: " + newMode);
+		switch (newMode)
 		{
+		
 			case Partitioner.S2A_LOCAL_MODE:
 				S2ALocal.s2alocal(doc);
 				Partitioner.WorkIsDone();//synchronous
@@ -69,14 +105,14 @@
 				S2AClient.s2aclient(doc, true);//asynchronous
 				break;
 			default:
-				throw "Mode: '"+mode+"' not defined " + S2A_CLIENT_MODE_HIGH_CPU_LOW_BANDWIDTH;
+				throw "Mode: '"+newMode+"' not defined " + Partitioner.S2A_CLIENT_MODE_HIGH_CPU_LOW_BANDWIDTH;
 		}
 	} catch (err)
 	{
 		console.log("ERROR");
 		console.log(err);
 		
-		Partitioner.S2A_RUNTIME[Partitioner.delegatedMode] += 9999; //penalty for crashing methods
+		Partitioner.S2A_RUNTIME[Partitioner.delegatedMode] += 999; //penalty for crashing methods
 		Partitioner.partitionerIsRunningAJob = false;
 	}
 }
@@ -84,28 +120,11 @@
 Partitioner.ModeCrashed = function()
 {
 	console.log("ModeCrashed ; working=" + Partitioner.partitionerIsRunningAJob );
-	if (Partitioner.partitionerIsRunningAJob === false)
-	{
-		console.log("ModeCrashed called but not in a working state!");
-		return;
-	}
-	Partitioner.S2A_RUNTIME[Partitioner.delegatedMode] += 200; //penalty for crashing. won't use for some time.
-	Partitioner.S2A_RUNCOUNT[Partitioner.delegatedMode]++;
+	Partitioner.S2A_RUNTIME[Partitioner.delegatedMode] += 9999; //penalty for crashing. won't use for some time.
 	Partitioner.partitionerIsRunningAJob = false;
+	Partitioner.handleDelegationOfWork(Partitioner.DOC);
 }
 
-Partitioner.StillLoading = function()
-{
-	console.log("StillLoading ; working=" + Partitioner.partitionerIsRunningAJob );
-	if (Partitioner.partitionerIsRunningAJob === false)
-	{
-		console.log("StillLoading called but not in a working state!");
-		return;
-	}
-	Partitioner.S2A_RUNTIME[Partitioner.delegatedMode] += 100;
-	Partitioner.S2A_RUNCOUNT[Partitioner.delegatedMode]++;
-	Partitioner.partitionerIsRunningAJob = false;
-}
 
 Partitioner.WorkIsDone = function()
 {
@@ -115,41 +134,8 @@
 		console.log("WorkIsDone called but not in a working state!");
 		return;
 	}
-	
 	var elapsed = (new Date().getTime()) - Partitioner.startTimerunningAJob;
-	
-	if (Partitioner.S2A_RUNCOUNT[Partitioner.delegatedMode] === 1)
-	{
-		Partitioner.S2A_RUNCOUNT[Partitioner.delegatedMode] = 2;
-		Partitioner.S2A_RUNTIME[Partitioner.delegatedMode] = 2;
-	} else
-	{
-		//Ignore first go to make sure there is no penalty for a parse table cache etc.
-		Partitioner.S2A_RUNCOUNT[Partitioner.delegatedMode]++;
-		Partitioner.S2A_RUNTIME[Partitioner.delegatedMode] += elapsed;
-	}
-	Partitioner.delegatedMode = -1;
+	Partitioner.S2A_RUNTIME[Partitioner.delegatedMode] += elapsed - Partitioner.PENALTY;
+	Partitioner.delegatedMode = null;
 	Partitioner.partitionerIsRunningAJob = false;	
 }
-
-Partitioner.determineMode = function()
-{
-	//get best average speed - also vaporizes previous results so occasionally each option gets a try
-	var result;
-	var bestAvg = Infinity;
-	for (mode in Partitioner.S2A_RUNCOUNT)
-	{
-		if (Partitioner.S2A_RUNTIME[mode] > 1000)
-			Partitioner.S2A_RUNTIME[mode] -= 100;
-		
-		var avg = Number(Partitioner.S2A_RUNTIME[mode]) / Number(Partitioner.S2A_RUNCOUNT[mode]);
-		if (avg <= bestAvg)
-		{
-			bestAvg = avg;
-			result = mode;
-		}
-		console.log("Mode:"+ mode + " " + avg + "/" + bestAvg + " Current result: " + result);
-	}
-	console.log("determineMode -> " + result);
-	return Number(result);
-}
\ No newline at end of file

Modified: spoofax-ace/trunk/spoofax-ace/resources/javascript/s2aclient.js
==============================================================================
--- spoofax-ace/trunk/spoofax-ace/resources/javascript/s2aclient.js	Thu Jul 26 01:54:01 2012	(r25239)
+++ spoofax-ace/trunk/spoofax-ace/resources/javascript/s2aclient.js	Thu Jul 26 01:57:10 2012	(r25240)
@@ -1,19 +1,25 @@
 
 var S2AClient = {};
+S2AClient.SERVERURL = 'ws://richard.vogelij.nl:8080/s2aserver';
 S2AClient.S2A_FULL_MESSAGE = "0";
 S2AClient.S2A_DIFF_PATCH_MESSAGE = "1";
 S2AClient.s2aclient_loading=false;
 S2AClient.s2aclient_loaded=false;
 S2AClient.s2aclient_start;
+
+S2AClient.diff_presend;
+
 S2AClient.dmp;
 S2AClient.s2aclient_lastknownsrc="";
 S2AClient.s2aclient_lastknowntokenstring="";
 
 //debuglog = function(str) { console.log(str); }
+statslog = function(str) { console.log(str); }
 debuglog = function(str) {}
 
 
 
+
 S2AClient.s2aclient = function(pDoc, lowBandWidth) {
 	debuglog("s2aclient");
 	if (!S2AClient.s2aclient_loaded || !S2AClient.s2awebsocket.connected())
@@ -29,7 +35,7 @@
 			S2AClient.s2aclient_loaded = true;
 			S2AClient.s2aclient_loading = false;
 		}
-		Partitioner.StillLoading();
+		//Partitioner.StillLoading();
 		return;
 	}
 	var value = pDoc.getValue();
@@ -41,10 +47,13 @@
 	}
 	else
 	{
+		var diff_overhead_start = new Date().getTime();
 		var patch_text = '';
 		var diff = S2AClient.dmp.diff_main(S2AClient.s2aclient_lastknownsrc, value, true);
 		var patch_list = S2AClient.dmp.patch_make(S2AClient.s2aclient_lastknownsrc, value, diff);
 		patch_text = S2AClient.dmp.patch_toText(patch_list);
+		S2AClient.diff_presend = new Date().getTime() - diff_overhead_start; 
+		statslog("Diff message created in: " + S2AClient.diff_presend);
 		S2AClient.s2awebsocket.send(S2AClient.S2A_DIFF_PATCH_MESSAGE+patch_text);
 		S2AClient.s2aclient_lastknownsrc = value;
 	}
@@ -59,12 +68,13 @@
 
 S2AClient.ProcessS2AServerRawResponse = function(pResponseMsg)
 {
+	
 	debuglog('ProcessS2AServerRawResponse');
 	if (!pResponseMsg.data)
 		return;
 	var pResponse = pResponseMsg.data;
 	
-	debuglog('Size of recieved message !: ' + pResponse.length);
+	statslog("Recieved message of " + pResponse.length + " bytes");
 	//process recieved data
 	
 	var responseType = pResponse.substring(0, 1);
@@ -91,7 +101,17 @@
 		}
 	} else if (responseType === S2AClient.S2A_DIFF_PATCH_MESSAGE)
 	{
+		var before_patch = new Date().getTime();
 		response = S2AClient.dmp.patch_apply(S2AClient.dmp.patch_fromText(response), S2AClient.s2aclient_lastknowntokenstring)[0];
+		var patchapplytime = new Date().getTime() - before_patch;
+		
+		statslog("Diff patch applied in " + patchapplytime);
+		
+		
+		
+		
+		
+		
 		S2AClient.s2aclient_lastknowntokenstring = response;
 		try
 		{
@@ -146,7 +166,10 @@
 				obj.parsed[tokenLineID].tokens.push(x);
 			}
 		}
-		debuglog("Time to traverse token string: " + ( new Date().getTime() - start));
+		var tokenstrtotokenrtime = new Date().getTime() - start;
+		var totalDiffOverhead = tokenstrtotokenrtime+patchapplytime+S2AClient.diff_presend;
+		statslog("Time to traverse token string: " + tokenstrtotokenrtime);
+		statslog("%%%Total DIFF-Patch OVERHEAD: " + totalDiffOverhead + "ms");
 	} else
 	{
 		throw "Unrecognised message";
@@ -168,7 +191,7 @@
 	},
 	connect : function(datacallback) {
 		debuglog("Connecting...");
-		var location = 'ws://richard.vogelij.nl:8080/s2aserver';
+		var location = S2AClient.SERVERURL;
 		this._ws = ("undefined" !== typeof MozWebSocket) ? new MozWebSocket(location) : new WebSocket(location);//new WebSocket(location);
 		this._ws.onopen = this._onopen;
 		this._ws.onmessage = datacallback;//S2AClient._onmessage;
@@ -209,6 +232,7 @@
 	send : function(text) {
 		if (text != null && text.length > 0)
 		{
+			statslog("Size of data to send: " + text.length + "bytes");
 			this._send(text);
 		}
 	},

Modified: spoofax-ace/trunk/spoofax-ace/resources/javascript/s2alocal.js
==============================================================================
--- spoofax-ace/trunk/spoofax-ace/resources/javascript/s2alocal.js	Thu Jul 26 01:54:01 2012	(r25239)
+++ spoofax-ace/trunk/spoofax-ace/resources/javascript/s2alocal.js	Thu Jul 26 01:57:10 2012	(r25240)
@@ -7,7 +7,7 @@
 	console.log("s2alocal");
     if (!S2ALocal.s2alocal_loaded)
     {
-    	Partitioner.StillLoading();
+    	//Partitioner.StillLoading();
 		sender.emit("log", "Not yet loaded...");
 		if (!S2ALocal.s2alocal_loading)
 		{

From m.dejonge at tudelft.nl  Thu Jul 26 11:49:58 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 26 Jul 2012 09:49:58 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25241 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff
Message-ID: <20120726094958.12E702B800B@mx2.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu Jul 26 09:49:56 2012
New Revision: 25241
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25241&sc=1

Log:


Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCS.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCS.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCS.java	Thu Jul 26 01:57:10 2012	(r25240)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/LCS.java	Thu Jul 26 09:49:56 2012	(r25241)
@@ -1,11 +1,8 @@
 package org.spoofax.interpreter.library.jsglr.treediff;
 
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.List;
 
-import org.spoofax.interpreter.terms.IStrategoTerm;
-
 /**
  * Implements a Longest Common Subsequence algorithm
  * @author maartje
@@ -14,21 +11,35 @@
  */
 public class LCS<T> {
 	
+	private LCSCommand<T> lcsCommand;
 	private List<T> elems1;
 	private List<T> elems2;
-	private ArrayList<T> resultLCS1;
-	private ArrayList<T> resultLCS2;
-	private ArrayList<T> resultUnmatched1;
-	private ArrayList<T> resultUnmatched2;
-	private LCSCommand<T> lcsCommand;
-	
+	private ArrayList<Integer> matchedIndices1;
+	private ArrayList<Integer> matchedIndices2;
+
+	public ArrayList<Integer> getMatchedIndices1() {
+		return matchedIndices1;
+	}
+
+	public ArrayList<Integer> getMatchedIndices2() {
+		return matchedIndices2;
+	}
+
+	public ArrayList<Integer> getUnMatchedIndices1() {
+		return getUnmatchedIndices(elems1, matchedIndices1);
+	}
+
+	public ArrayList<Integer> getUnMatchedIndices2() {
+		return getUnmatchedIndices(elems2, matchedIndices2);
+	}
+
 	/**
 	 * LCS result for input 1
 	 * (empty before algorithm is applied)
 	 * @return LCS elements for input 1
 	 */
 	public ArrayList<T> getResultLCS1() {
-		return new ArrayList<T>(resultLCS1);
+		return getIncludedElems(elems1, matchedIndices1);
 	}
 
 	/**
@@ -37,7 +48,7 @@
 	 * @return LCS elements for input 2
 	 */
 	public ArrayList<T> getResultLCS2() {
-		return new ArrayList<T>(resultLCS2);
+		return getIncludedElems(elems2, matchedIndices2);
 	}
 
 	/**
@@ -46,7 +57,7 @@
 	 * @return non-LCS elements for input 1
 	 */
 	public ArrayList<T> getResultUnmatched1() {
-		return new ArrayList<T>(resultUnmatched1);
+		return getIncludedElems(elems1, getUnMatchedIndices1());
 	}
 
 	/**
@@ -55,9 +66,18 @@
 	 * @return non-LCS elements for input 2
 	 */
 	public ArrayList<T> getResultUnmatched2() {
-		return new ArrayList<T>(resultUnmatched2);
+		return getIncludedElems(elems2, getUnMatchedIndices2());
+	}
+	
+	/**
+	 * Size of the LCS
+	 * @return Size of the LCS
+	 */
+	public int getLCSSize(){
+		return matchedIndices1.size();
 	}
 
+
 	/**
 	 * LCS command implements the function that says wether or not two elements can be matched
 	 * @param lcsCommand Implements the matching criterion
@@ -73,26 +93,14 @@
 	public LCS(LCSCommand<T> lcsCommand){
 		elems1 = new ArrayList<T>();
 		elems2 = new ArrayList<T>();
-		resultLCS1 = new ArrayList<T>();
-		resultLCS2 = new ArrayList<T>();
-		resultUnmatched1 = new ArrayList<T>();
-		resultUnmatched2 = new ArrayList<T>();
+		matchedIndices1 = new ArrayList<Integer>();
+		matchedIndices2 = new ArrayList<Integer>();
 		this.lcsCommand = lcsCommand;
 	}
-	
-	/**
-	 * Size of the LCS
-	 * @return Size of the LCS
-	 */
-	public int getLCSSize(){
-		return resultLCS1.size();
-	}
-	
+		
 	private void clearResults(){
-		resultLCS1.clear();
-		resultLCS2.clear();
-		resultUnmatched1.clear();
-		resultUnmatched2.clear();
+		matchedIndices1.clear();
+		matchedIndices2.clear();
 	}
 	
 	/**
@@ -105,35 +113,124 @@
 		clearResults();
 		this.elems1 = elems1;
 		this.elems2 = elems2;
+		return createLCSResultsOptimized();
+	}
+
+	private ArrayList<Integer> getUnmatchedIndices(List<T> elems, ArrayList<Integer> indices) {
+		assert elems.size() >= indices.size();
+		ArrayList<Integer> unmatchedIndices = new ArrayList<Integer>();
+		int indexIndices = 0;
+		int nextIncludedIndex = -1;
+		if(indexIndices < indices.size())
+			nextIncludedIndex = indices.get(indexIndices).intValue();
+		for (int elems_index = 0; elems_index < elems.size(); elems_index++) {
+			if(elems_index == nextIncludedIndex){				
+				//set next included index
+				indexIndices += 1;
+				nextIncludedIndex = -1;
+				if(indexIndices < indices.size())
+					nextIncludedIndex = indices.get(indexIndices).intValue();
+			}
+			else{
+				//no match at elems_index!
+				unmatchedIndices.add(elems_index);
+			}
+		}
+		assert unmatchedIndices.size() + indices.size() == elems.size();
+		return unmatchedIndices;
+	}
+
+	private ArrayList<T> getIncludedElems(List<T> elems, ArrayList<Integer> indices) {
+		assert elems.size() >= indices.size();
+		ArrayList<T> includedElems = new ArrayList<T>();
+		int indexIndices = 0;
+		int nextIncludedIndex = -1;
+		if(indexIndices < indices.size())
+			nextIncludedIndex = indices.get(indexIndices).intValue();
+		for (int elems_index = 0; elems_index < elems.size(); elems_index++) {
+			if(elems_index == nextIncludedIndex){
+				//matched at elems_index!
+				includedElems.add(elems.get(elems_index));
+				
+				//set next included index
+				indexIndices += 1;
+				nextIncludedIndex = -1;
+				if(indexIndices < indices.size())
+					nextIncludedIndex = indices.get(indexIndices).intValue();
+			}
+		}
+		assert includedElems.size() == indices.size();
+		return includedElems;
+	}
+	
+	private LCS<T> createLCSResultsOptimized() {
+		int commonPrefixLength = commonPrefixLength();
+		int commonSuffixLength = commonSuffixLength(commonPrefixLength);
+		addPrefixIndices(commonPrefixLength);
+		addMidIndices(commonPrefixLength, commonSuffixLength);
+		addSuffixIndices(commonSuffixLength);		
+		checkAssertions(elems1, elems2);
+		return this;
+	}
+
+	private void addMidIndices(int commonPrefixLength, int commonSuffixLength) {
+		List<T> elems1_mid = elems1.subList(commonPrefixLength, elems1.size() - commonSuffixLength);
+		List<T> elems2_mid = elems2.subList(commonPrefixLength, elems2.size() - commonSuffixLength);
+		lcs(
+			elems1_mid, 
+			elems2_mid,
+			commonPrefixLength
+		);
+	}
+
+	private void addSuffixIndices(int commonSuffixLength) {
+		for (int suffixIndex = commonSuffixLength - 1; suffixIndex >= 0 ; suffixIndex--) {
+			int el1_index = elems1.size() - 1 - suffixIndex;
+			int el2_index = elems2.size() - 1 - suffixIndex;
+			assert lcsCommand.isMatch(elems1.get(el1_index), elems2.get(el2_index)): "elements should match since they are in the common suffix"; 
+			matchedIndices1.add(el1_index); 
+			matchedIndices2.add(el2_index);			
+		}
+	}
+
+	private void addPrefixIndices(int commonPrefixLength) {
+		for (int prefixIndex = 0; prefixIndex < commonPrefixLength; prefixIndex++) {
+			assert lcsCommand.isMatch(elems1.get(prefixIndex), elems2.get(prefixIndex)): "elements should match since they are in the common prefix"; 
+			matchedIndices1.add(prefixIndex);
+			matchedIndices2.add(prefixIndex);			
+		}
+	}
+
+	private int commonPrefixLength() {
 		int minLength = Math.min(elems1.size(), elems2.size()); 
 		int commonPrefixLength = 0;
 		while (commonPrefixLength < minLength) {
 			T el1 = elems1.get(commonPrefixLength);
 			T el2 = elems2.get(commonPrefixLength);
 			if(lcsCommand.isMatch(el1, el2)){
-				addToLCS(el1, el2);
 				commonPrefixLength++;
 			}
 			else
 				break;
-		}		
+		}
+		return commonPrefixLength;
+	}
+
+	private int commonSuffixLength(int commonPrefixLength) {
+		int minLength = Math.min(elems1.size(), elems2.size()); 
 		int commonSuffixLength = 0;
 		while (commonSuffixLength < minLength - commonPrefixLength) {
-			T el1 = elems1.get(elems1.size() - commonSuffixLength -1);
-			T el2 = elems2.get(elems2.size() - commonSuffixLength - 1);
+			int el1_index = elems1.size() - commonSuffixLength -1;
+			int el2_index = elems2.size() - commonSuffixLength - 1;
+			T el1 = elems1.get(el1_index);
+			T el2 = elems2.get(el2_index);
 			if(lcsCommand.isMatch(el1, el2)){
-				addToLCS(el1, el2);
 				commonSuffixLength++;
 			}
 			else
 				break;
 		}
-		lcs(
-			elems1.subList(commonPrefixLength, elems1.size() - commonSuffixLength), 
-			elems2.subList(commonPrefixLength, elems2.size() - commonSuffixLength)
-		);
-		checkAssertions(elems1, elems2);
-		return this;
+		return commonSuffixLength;
 	}
 
 	/**
@@ -145,12 +242,12 @@
 		clearResults();
 		this.elems1 = elems1;
 		this.elems2 = elems2;
-		lcs(elems1, elems2);
+		lcs(elems1, elems2, 0);
 		checkAssertions(elems1, elems2);
 		return this;
 	}
 
-	private void lcs(List<T> elems1, List<T> elems2) {
+	private void lcs(List<T> elems1, List<T> elems2, int startIndex) {
 		int lengthElems1 = elems1.size();
         int lengthElems2 = elems2.size();
 
@@ -173,38 +270,33 @@
 	        T el1 = elems1.get(i);
 			T el2 = elems2.get(j);
             if (lcsCommand.isMatch(el1, el2)) {
-				addToLCS(el1, el2);
+				matchedIndices1.add(i + startIndex);
+				matchedIndices2.add(j + startIndex);
                 i++;
                 j++;
             }
             else if (opt[i+1][j] >= opt[i][j+1]){
-            	resultUnmatched1.add(el1);
             	i++;
             }
             else { 
-            	resultUnmatched2.add(el2);
             	j++;
             }
         }
-		while (i < lengthElems1) {
-        	resultUnmatched1.add(elems1.get(i));
-			i++;
-		}
-		while (j < lengthElems2) {
-        	resultUnmatched2.add(elems2.get(j));
-			j++;
-		}
 	}
 
-	private void addToLCS(T el1, T el2) {
-		resultLCS1.add(el1);
-		resultLCS2.add(el2);
-	}
 	
 	private void checkAssertions(List<T> elems1, List<T> elems2) {
-		assert resultLCS1.size() == resultLCS2.size();
-		assert resultLCS1.size() + resultUnmatched1.size() == elems1.size();
-		assert resultLCS2.size() + resultUnmatched2.size() == elems2.size();
+		assert matchedIndices1.size() == matchedIndices2.size();
+		assert matchedIndices1.size() <= elems1.size();
+		assert matchedIndices2.size() <=  elems2.size();
+		for (int i = 0; i < matchedIndices1.size(); i++) {
+			T el1 = elems1.get(matchedIndices1.get(i).intValue());
+			T el2 = elems2.get(matchedIndices2.get(i).intValue());
+			assert lcsCommand.isMatch(el1, el2);
+		}
+		for (int i = 1; i < matchedIndices1.size(); i++) {
+			assert matchedIndices1.get(i).intValue() > matchedIndices1.get(i-1).intValue();
+			assert matchedIndices2.get(i).intValue() > matchedIndices2.get(i-1).intValue();
+		}
 	}
-
 }

From m.dejonge at tudelft.nl  Thu Jul 26 12:06:42 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 26 Jul 2012 10:06:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25242 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff
Message-ID: <20120726100642.E8A1C108C004@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu Jul 26 10:06:42 2012
New Revision: 25242
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25242&sc=1

Log:


Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/TreeEditDistance.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/TreeEditDistance.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/TreeEditDistance.java	Thu Jul 26 09:49:56 2012	(r25241)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/treediff/TreeEditDistance.java	Thu Jul 26 10:06:42 2012	(r25242)
@@ -7,16 +7,16 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
+
 import org.spoofax.interpreter.core.Tools;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.jsglr.client.imploder.TermTreeFactory;
 import org.spoofax.terms.StrategoAppl;
 import org.spoofax.terms.TermFactory;
 import org.spoofax.terms.attachments.ParentAttachment;
-import org.spoofax.terms.attachments.ParentTermFactory;
 
 /**
- * Simple AST comparison module that counts the number of primitive edit operations
+ * Simple AST comparison module that collects primitive edit operations
  * required to transform AST1 into AST2.
  * @author maartje
  *

