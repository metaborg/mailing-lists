From R.B.Vermaas at tudelft.nl  Tue Jun  1 13:49:17 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 01 Jun 2010 11:49:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20903 - rob -
	strategoxt/trunk/stratego-libraries
Message-ID: <201006011149.o51BnHsF006880@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2010-06-01 11:49:17 +0000 (Tue, 01 Jun 2010)
New Revision: 20903

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20903&view=rev

Modified:
   strategoxt/trunk/stratego-libraries/Makefile.am

Log:
removed duplicate line in Makefile.am

Changes:

Modified: strategoxt/trunk/stratego-libraries/Makefile.am
===================================================================
--- strategoxt/trunk/stratego-libraries/Makefile.am	2010-05-31 21:05:22 UTC (rev 20902)
+++ strategoxt/trunk/stratego-libraries/Makefile.am	2010-06-01 11:49:17 UTC (rev 20903)
@@ -20,7 +20,6 @@
   stratego-sglr.pc \
   stratego-gpp.pc \
   stratego-sdf.pc \
-  stratego-lib.pc \
   stratego-xtc.pc \
   stratego-runtime.pc \
   stratego-rtg.pc \



From L.C.L.Kats at tudelft.nl  Tue Jun  1 13:59:11 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 01 Jun 2010 11:59:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20904 - LennartKats -
	strategoxt/trunk/xml-front/sig/xml
Message-ID: <201006011159.o51BxB3H006960@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-01 11:59:11 +0000 (Tue, 01 Jun 2010)
New Revision: 20904

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20904&view=rev

Modified:
   strategoxt/trunk/xml-front/sig/xml/Makefile.am

Log:
removed another duplicate in a Makefile.am

Changes:

Modified: strategoxt/trunk/xml-front/sig/xml/Makefile.am
===================================================================
--- strategoxt/trunk/xml-front/sig/xml/Makefile.am	2010-06-01 11:49:17 UTC (rev 20903)
+++ strategoxt/trunk/xml-front/sig/xml/Makefile.am	2010-06-01 11:59:11 UTC (rev 20904)
@@ -1,7 +1,7 @@
 include $(top_srcdir)/Makefile.xt
 include $(wildcard *.dep)
 
-pkgdata_DATA   = xml-doc.rtg xml-doc.str xml-doc.str
+pkgdata_DATA   = xml-doc.rtg xml-doc.str
 #pkgdata_DATA   = xml-doc.rtg xml-doc.str xml-doc.rtree 
 
 EXTRA_DIST     = $(pkgdata_DATA)



From L.C.L.Kats at tudelft.nl  Tue Jun  1 14:02:13 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 01 Jun 2010 12:02:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20905 - LennartKats -
	strc-java/trunk/tools
Message-ID: <201006011202.o51C2Dj0007231@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-01 12:02:13 +0000 (Tue, 01 Jun 2010)
New Revision: 20905

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20905&view=rev

Modified:
   strc-java/trunk/tools/strj-jar

Log:


Changes:

Modified: strc-java/trunk/tools/strj-jar
===================================================================
--- strc-java/trunk/tools/strj-jar	2010-06-01 11:59:11 UTC (rev 20904)
+++ strc-java/trunk/tools/strj-jar	2010-06-01 12:02:13 UTC (rev 20905)
@@ -3,7 +3,6 @@
 ## SETTINGS
 
 PRINT_CLASSPATH=
-CLASSPATH=strategoxt.jar # override with option -cp
 JAR=`if type -p fastjar &>/dev/null; then echo fastjar; else echo jar; fi`
 JAVAC=`if type -p ecj &>/dev/null; then echo ecj; else echo javac; fi`
 if [ "$JAVAFLAGS" == "" ]; then
@@ -76,6 +75,9 @@
   PACKAGE="`head -n 1 $INPUT | sed 's/package //; s/\;//'`."
   # PACKAGEDIR=`echo "$PACKAGE" | sed 's!\.!/!g	'`
   INPUT2="$INPUTDIR/Main.java"
+  if [ "$INPUT2" == "$INPUT" ]; then
+    INPUT2=
+  fi
   INPUTDIR2=`cd $INPUTDIR; pwd` # canonicalize
   INPUT3="$INPUTDIR/`basename $INPUTDIR2`.java"
   if [ ! -e $INPUT3 ]; then
@@ -107,7 +109,7 @@
 echo >> $TEMPDIR/MANIFEST.MF
 
 if ls $INPUTDIR/*.str &>/dev/null; then
-  echo "WARNING: using this build directory may mean non-term files are included as attachments" >&2
+  echo "WARNING: using this build directory may mean that non-term files are included as attachments" >&2
 fi
 
 ATTACHMENTS=`ls $INPUTDIR | grep -vE '^.*\.(java|jar|log|astr|str|meta|dep|c|lo|o|class|MF)$' | sed "s!^!-C $INPUTDIR !"`



From L.C.L.Kats at tudelft.nl  Tue Jun  1 14:14:24 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 01 Jun 2010 12:14:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20906 - LennartKats -
	strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode
Message-ID: <201006011214.o51CEN5n007405@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-01 12:14:22 +0000 (Tue, 01 Jun 2010)
New Revision: 20906

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20906&view=rev

Modified:
   strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode/indent-padding.str

Log:
Added an additional 'with' for problems like StrategoXT/821.

Changes:

Modified: strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode/indent-padding.str
===================================================================
--- strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode/indent-padding.str	2010-06-01 12:02:13 UTC (rev 20905)
+++ strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode/indent-padding.str	2010-06-01 12:14:22 UTC (rev 20906)
@@ -67,7 +67,7 @@
     with
       if !a* => [PaddingContext(context)] then
         asfix'   := <strip-tree-before(?context)> asfix
-      ; padding  := <asfix-yield-appl-chars; chars-after-newlines> asfix'
+      ; <with(padding := <asfix-yield-appl-chars; chars-after-newlines>)> asfix'
       ; padding' := <chars-to-whitespace> padding
       ; s'       := <conc; implode-string> (padding', <explode-string> s)
       else



From L.C.L.Kats at tudelft.nl  Wed Jun  2 10:19:29 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 02 Jun 2010 08:19:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20913 - LennartKats - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	parser services
Message-ID: <201006020819.o528JTNd020582@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-02 08:19:29 +0000 (Wed, 02 Jun 2010)
New Revision: 20913

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20913&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueueFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundJob.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverUpdateJob.java

Log:
- Spoofax/145: Syntax error marker does not appear when opening a file
- Fixed some race conditions in the new code (be sure to test Spoofax with assertions enabled!)
- Some style changes (all fields should be final unless mutability is required!)


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-06-01 22:11:24 UTC (rev 20912)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-06-02 08:19:29 UTC (rev 20913)
@@ -99,7 +99,7 @@
 	
 	private boolean isReplaced;
 	
-	private boolean performInitialUpdate;
+	private volatile boolean performInitialUpdate;
 
 	// Simple accessors
 	
@@ -381,7 +381,7 @@
 		// must never block the main thread with a lock here since
 		// it must be available to draw error markers
 		
-		if (!Environment.isMainThread() || !isStartupParsed) {
+		if (!Environment.isMainThread() || !wasStartupParsed) {
 			if (!monitor.isCanceled() && !Thread.holdsLock(Environment.getSyncRoot())) {
 				// Note that a resource lock is acquired here
 				errorHandler.commitMultiErrorLineAdditions();

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java	2010-06-01 22:11:24 UTC (rev 20912)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java	2010-06-02 08:19:29 UTC (rev 20913)
@@ -150,7 +150,7 @@
 	 * Indicates whether a job is currently running.
 	 * Only one job can be running at any given time.
 	 */
-	private boolean running = false;
+	private volatile boolean running = false;
 
 	private void wake() {
 		if (running)

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueueFactory.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueueFactory.java	2010-06-01 22:11:24 UTC (rev 20912)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueueFactory.java	2010-06-02 08:19:29 UTC (rev 20913)
@@ -3,21 +3,10 @@
 
 public class StrategoAnalysisQueueFactory {
 
-	private static StrategoAnalysisQueue INSTANCE;
+	private static final StrategoAnalysisQueue INSTANCE = new StrategoAnalysisQueue();
 	
 	public static StrategoAnalysisQueue getInstance() {
-		if (INSTANCE == null) initialize();
 		return INSTANCE; 
 	}
 	
-	public static void initialize() {
-		if (INSTANCE == null) {
-			INSTANCE = new StrategoAnalysisQueue();
-		}
-	}
-	
-	public static void initialize(StrategoAnalysisQueue queue) {
-		INSTANCE = queue;
-	}
-	
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-01 22:11:24 UTC (rev 20912)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-02 08:19:29 UTC (rev 20913)
@@ -84,6 +84,8 @@
 	
 	private final AstMessageHandler messages = new AstMessageHandler(AstMessageHandler.ANALYSIS_MARKER_TYPE);
 	
+	private final Lock observerSchedulerLock = new SWTSafeLock(true);
+	
 	private HybridInterpreter runtime;
 	
 	private volatile Descriptor descriptor;
@@ -92,8 +94,6 @@
 	
 	private volatile boolean rushNextUpdate;
 	
-	private Lock observerSchedulerLock = new SWTSafeLock(true);
-	
 	private UpdateJob updateJob;
 	
 	private boolean wasExceptionLogged;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundJob.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundJob.java	2010-06-01 22:11:24 UTC (rev 20912)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundJob.java	2010-06-02 08:19:29 UTC (rev 20913)
@@ -7,6 +7,7 @@
 import org.eclipse.core.runtime.Status;
 import org.eclipse.imp.parser.IParseController;
 import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
 import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
 
@@ -44,8 +45,7 @@
 			observer.invoke(strategyName, term, project);
 		    
 		} catch (Exception e) {
-			// hmm.
-			e.printStackTrace();
+			Environment.logException("Background job failed", e);
 		}
 		
 		return Status.OK_STATUS;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverUpdateJob.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverUpdateJob.java	2010-06-01 22:11:24 UTC (rev 20912)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverUpdateJob.java	2010-06-02 08:19:29 UTC (rev 20913)
@@ -23,10 +23,12 @@
 	
 	public IStatus analyze(IProgressMonitor monitor) {
 		
-		this.progress = new StrategoProgressMonitor(monitor);
-		((EditorIOAgent)observer.getRuntime().getIOAgent()).setJob(this);
-		observer.update(parseController, monitor);
-		return Status.OK_STATUS;
+		synchronized (observer.getSyncRoot()) {
+			this.progress = new StrategoProgressMonitor(monitor);
+			((EditorIOAgent)observer.getRuntime().getIOAgent()).setJob(this);
+			observer.update(parseController, monitor);
+			return Status.OK_STATUS;
+		}
 		
 	}
 



From L.C.L.Kats at tudelft.nl  Wed Jun  2 10:58:29 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 02 Jun 2010 08:58:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20914 - LennartKats - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser:
	. ast
Message-ID: <201006020858.o528wT8C020922@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-02 08:58:29 +0000 (Wed, 02 Jun 2010)
New Revision: 20914

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20914&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java

Log:
Another fix for Spoofax/145: Syntax error marker does not appear when opening a file

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	2010-06-02 08:19:29 UTC (rev 20913)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	2010-06-02 08:58:29 UTC (rev 20914)
@@ -155,10 +155,7 @@
 		assert source.getParseLock().isHeldByCurrentThread();
 		assert !Thread.holdsLock(Environment.getSyncRoot()) : "Potential deadlock";
 		
-		for (Runnable marker : errorReports) {
-			marker.run();
-		}
-		errorReports.clear();
+		processErrorReportsQueue();
 		handler.commitDeletions();
 	}
 	
@@ -170,10 +167,7 @@
 		assert source.getParseLock().isHeldByCurrentThread();
 		assert !Thread.holdsLock(Environment.getSyncRoot()) : "Potential deadlock";
 
-		for (Runnable marker : errorReports) {
-			marker.run();
-		}
-		errorReports.clear();
+		processErrorReportsQueue();
 		handler.commitMultiErrorLineAdditions();
 	}
 
@@ -194,9 +188,7 @@
 	 * @see AstMessageHandler#commitAllChanges()
 	 */
 	public void scheduleCommitAllChanges() {
-		for (Runnable marker : errorReports) {
-			marker.run();
-		}
+		processErrorReportsQueue();
 
 		final int expectedVersion = ++additionsVersionId;
 
@@ -240,6 +232,13 @@
 			job.schedule((long) (PARSE_ERROR_DELAY * (isRecoveryAvailable ? 1 : 1.5)));
 		}
 	}
+
+	private void processErrorReportsQueue() {
+		for (Runnable marker : errorReports) {
+			marker.run();
+		}
+		errorReports.clear();
+	}
 	
 	public void abortScheduledCommit() {
 		additionsVersionId++;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java	2010-06-02 08:19:29 UTC (rev 20913)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java	2010-06-02 08:58:29 UTC (rev 20914)
@@ -46,8 +46,12 @@
 
 /**
  * Reports messages for a group of files, associating
- * errors and other markers with AST nodes. 
+ * errors and other markers with AST nodes.
  * 
+ * Threading concerns: should be synchronized externally.
+ * Individual methods may document particular threading concerns
+ * and exceptions to this rule.
+ * 
  * @see IMessageHandler		Handles message reporting for single files.
  * 
  * @author Lennart Kats <lennart add lclnet.nl>
@@ -81,6 +85,8 @@
 	
 	private final List<MarkerSignature> markersToAdd = new ArrayList<MarkerSignature>();
 	
+	private boolean initMarkersToReuse = false;
+	
 	public AstMessageHandler(String markerType) {
 		this.markerType = markerType;
 	}
@@ -263,11 +269,14 @@
 	 */
 	public void clearMarkers(IResource file) {
 		try {
-			IMarker[] markers = file.findMarkers(markerType, true, 0);
-			for (IMarker marker : markers) {
-				IMarker dupe = markersToReuse.put(new MarkerSignature(marker), marker);
-				if (dupe != null) markersToDelete.add(dupe);
+			if (initMarkersToReuse) {
+				IMarker[] markers = file.findMarkers(markerType, true, 0);
+				for (IMarker marker : markers) {
+					IMarker dupe = markersToReuse.put(new MarkerSignature(marker), marker);
+					if (dupe != null) markersToDelete.add(dupe);
+				}
 			}
+			initMarkersToReuse = true; // redraw markers the first time, then reuse them
 			Iterator<MarkerSignature> markersToAdd = this.markersToAdd.iterator();
 			while (markersToAdd.hasNext()) {
 				MarkerSignature marker = markersToAdd.next();
@@ -298,8 +307,10 @@
 		try {
 			runInWorkspace(new Runnable() {
 				public void run() {
+					// Delete reusable markers that were not reused
 					deleteMarkers(markersToReuse.values());
 					markersToReuse.clear();
+					// Delete non-reusable non-reused markers
 					deleteMarkers(markersToDelete);
 					markersToDelete.clear();
 				}



From g.h.wachsmuth at tudelft.nl  Tue Jun  1 21:03:46 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Tue, 01 Jun 2010 19:03:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20907 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses
Message-ID: <201006011903.o51J3kUx012759@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-01 19:03:46 +0000 (Tue, 01 Jun 2010)
New Revision: 20907

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20907&view=rev

Added:
   lenses/trunk/Strategic Lenses/build.generated.xml

Log:
needed to build the project

Changes:

Added: lenses/trunk/Strategic Lenses/build.generated.xml
===================================================================
--- lenses/trunk/Strategic Lenses/build.generated.xml	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/build.generated.xml	2010-06-01 19:03:46 UTC (rev 20907)
@@ -0,0 +1,380 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="build.generated">
+    
+        <target name="spoofaximp.default" depends="sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+    
+        <!-- Initialization -->
+        <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
+        <dirname property="externaldefdir" file="${externaldef}"/>
+        <condition property="externaldefimport" value="-I ${externaldefdir}" else="">
+            <isset property="externaldef"/>
+        </condition>
+        <condition property="externaljarimport" value=":${externaljar}" else="">
+            <isset property="externaljar"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <isset property="eclipse.running"/>
+        </condition>
+        <condition property="externaljarflags" value="${externaljarflags}" else="">
+            <isset property="externaljarflags"/>
+        </condition>
+        <mkdir dir="${build}"/>
+        <mkdir dir="${src-gen}"/>
+        <mkdir dir="${dist}"/>
+        <mkdir dir="${include}"/>
+        <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
+
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+        
+        <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder">
+                <arg value="${include}/${esvmodule}.packed.esv"/>
+            </java>
+        </target>
+        
+        <target name="refresh" if="eclipse.running">
+            <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Builders.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Colorer.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Completions.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+            <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
+            <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+        </target>
+        
+        <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
+                <arg value="-p"/>
+                <arg value="${include}/${sdfmodule}.tbl"/>
+            </java>
+        </target>
+    
+        <target name="sdf2table" depends="make-permissive">
+            <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                
+                <fileset file="${include}/${sdfmodule}-Permissive.def"/>
+                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+            </apply>
+        </target>
+        
+        <target name="make-permissive" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-Permissive.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <antcall target="make-permissive.helper"/>
+        </target>
+    
+        <target name="make-permissive.helper" unless="permissive-grammar.available">
+            <java classname="org.strategoxt.permissivegrammars.make_permissive" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-Permissive.def"/>
+                <arg line="--optimize on"/>
+            </java>
+        </target>
+
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
+            <mkdir dir="utils"/>
+            <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/aster.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.strategojar}" todir="utils" failonerror="false"/>
+        </target>
+    
+        <target name="pack-sdf" unless="externaldef">
+            <dependset>
+                <srcfileset dir="${syntax}">
+                    <include name="**/*.sdf"/>
+                </srcfileset>
+                <targetfileset file="${include}/${sdfmodule}.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.def" property="pack-sdf.available"/>
+            <antcall target="pack-sdf.helper"/>
+        </target>
+    
+        <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-pack-sdf"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.sdf"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-I"/>
+                <arg value="${syntax}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg line="${build.sdf.imports}"/>
+            </java>
+        </target>
+    
+        <target name="copy-sdf" if="externaldef">
+            <copy file="${externaldef}" tofile="${include}/${sdfmodule}.def" preservelastmodified="true"/>
+        </target>
+    
+        <target name="copy-jar" if="externaljar">
+            <copy file="${externaljar}" todir="${include}" preservelastmodified="true"/>
+        </target>
+    
+        <target name="rtg2sig" if="build.stratego.enabled" depends="sdf2rtg">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.rtg"/>
+                <targetfileset file="${include}/${sdfmodule}.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.str" property="rtg2sig.available"/>
+            <antcall target="rtg2sig.helper"/>
+        </target>
+    
+        <target name="rtg2sig.helper" unless="rtg2sig.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-rtg2sig"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.str"/>
+                <arg value="--module"/>
+                <arg value="${sdfmodule}"/>
+            </java>
+        </target>
+        
+        <target name="sdf2rtg" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}.rtg"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.rtg" property="sdf2rtg.available"/>
+            <antcall target="sdf2rtg.helper"/>
+        </target>
+    
+        <target name="sdf2rtg.helper" unless="sdf2rtg.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-sdf2rtg"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="--ignore-missing-cons"/>
+                <arg value="-Xnativepath"/>
+                <arg value="${build.strategoxt.sdf}"/>
+            </java>
+        </target>
+        
+        <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${syntax}/${sdfmodule}.generated.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.generated.pp.af"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
+        </target>
+    
+        <target name="ppgen.helper" unless="ppgen.available">
+            <!-- Any failures here are ignored; they are only a problem when imported from Stratego -->
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-ppgen"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+                <arg value="-t"/>
+            </java>
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-pp-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+                <arg value="-o"/>
+                <arg value="${syntax}/${sdfmodule}.generated.pp"/>
+            </java>
+        </target>
+    
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
+        
+        <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${syntax}/${sdfmodule}.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+            </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
+        </target>
+    
+        <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-parse-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.pp"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.pp.af"/>
+            </java>
+        </target>
+    
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+    
+        <!-- Aster to Stratego -->
+        <target name="stratego.aster">
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <pathconvert property="aster-input" setonempty="false" pathsep=" ">
+                <path><fileset dir="${basedir}" includes="*.astr"/></path>
+            </pathconvert>
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.astr"/>
+                </srcfileset>
+                <targetfileset file="${trans}/${strmodule}.rtree"/>
+            </dependset>
+            <condition property="aster-output.uptodate">
+                <and>
+                    <isset property="aster-output.available"/>
+                    <available file="${trans}/${strmodule}.rtree"/>
+                </and>
+            </condition>
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.uptodate"/>
+            <antcall target="stratego.aster.helper"/>
+        </target>
+    
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
+                <arg value="-i"/>
+                <fileset dir="${basedir}">
+                    <include name="**/*.astr"/>
+                </fileset>
+            </java>
+        </target>
+    
+        <!-- Stratego to Java interpreter -->
+        <target name="stratego.ctree" depends="rtg2sig">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${include}/${strmodule}.ctree"/>
+            </dependset>
+            <available file="${include}/${strmodule}.ctree" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputpath" value="${include}"/>
+                <param name="build.stratego.extraargs" value="-F"/>
+                <param name="build.stratego.extension" value="ctree"/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+    
+        <!-- Stratego to Java compiler -->
+        <target name="stratego.jar" depends="rtg2sig">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputpath" value="${src-gen}/trans"/>
+                <param name="build.stratego.extraargs" value="-la java-front"/>
+                <param name="build.stratego.extension" value="java"/>
+            </antcall>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="trans/**"/>
+                <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+        </target>
+            
+        <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans}/${strmodule}.str"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputpath}/${strmodule}.${build.stratego.extension}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
+                
+        <!-- Stratego to C-based native executable -->
+        <target name="stratego.c">
+            <antcall target="stratego.c.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/include"/>
+                <param name="build.stratego.extraargs" value=""/>
+                <param name="build.stratego.extension" value=""/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+        
+        <!-- Helper target for calling the stratego compiler -->
+        <target name="stratego.c.helper" depends="rtg2sig" if="build.stratego.enabled">
+            <apply executable="${build.strategoxt.stratego}/${build.stratego.compiler}" dest="${build.stratego.outputpath}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaldefimport}"/>
+                
+                <fileset file="${trans}/${strmodule}.str"/>
+                <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>
+            </apply>
+        </target>
+        
+        <target name="clean" description="clean up">
+            <delete dir="${build}"/>
+            <delete file="${src-gen}/trans/Main.java"/>
+        </target>
+    </project>
\ No newline at end of file



From g.h.wachsmuth at tudelft.nl  Tue Jun  1 22:37:14 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Tue, 01 Jun 2010 20:37:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20908 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/lib/languages/entity/syntax
Message-ID: <201006012037.o51KbEV4013541@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-01 20:37:13 +0000 (Tue, 01 Jun 2010)
New Revision: 20908

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20908&view=rev

Modified:
   lenses/trunk/Strategic Lenses/lib/languages/entity/syntax/Outline.sdf

Log:
more concise syntax

Changes:

Modified: lenses/trunk/Strategic Lenses/lib/languages/entity/syntax/Outline.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/lib/languages/entity/syntax/Outline.sdf	2010-06-01 19:03:46 UTC (rev 20907)
+++ lenses/trunk/Strategic Lenses/lib/languages/entity/syntax/Outline.sdf	2010-06-01 20:37:13 UTC (rev 20908)
@@ -7,7 +7,7 @@
 
   context-free syntax
   
-    "outline" ID Entity*      -> Outline {cons("Outline")}
-    "+" ID Property*  		  -> Entity {cons("Entity")}
-    "+-" ID                   -> Property {cons("Property")}
+    ID Entity*      	-> Outline {cons("Outline")}
+    "+" ID Property*  	-> Entity {cons("OutlineEntity")}
+    "+-" ID             -> Property {cons("OutlineProperty")}
     
\ No newline at end of file



From g.h.wachsmuth at tudelft.nl  Wed Jun  2 00:07:03 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Tue, 01 Jun 2010 22:07:03 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20909 - GuidoWachsmuth
	- in lenses/trunk/Strategic Lenses: syntax test
Message-ID: <201006012207.o51M73uM016572@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-01 22:07:03 +0000 (Tue, 01 Jun 2010)
New Revision: 20909

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20909&view=rev

Modified:
   lenses/trunk/Strategic Lenses/syntax/Embedding.sdf
   lenses/trunk/Strategic Lenses/test/Outline.lns

Log:
removed keywords for embeddings

Changes:

Modified: lenses/trunk/Strategic Lenses/syntax/Embedding.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Embedding.sdf	2010-06-01 20:37:13 UTC (rev 20908)
+++ lenses/trunk/Strategic Lenses/syntax/Embedding.sdf	2010-06-01 22:07:03 UTC (rev 20909)
@@ -15,21 +15,15 @@
 
 	context-free syntax
 		
-		Entity:Module				-> CModel {cons("Ast")} 
-		Entity:Definition			-> CModel {cons("Ast")}
-		"property" Entity:Property	-> CModel {cons("Ast")} 
-		"type" Entity:Type			-> CModel {cons("Ast")} 
-		"id" Entity:ID				-> CModel {cons("Ast")}
-		
-		Entity:Module				-> AModel {cons("Ast")} 
-		Entity:Definition			-> AModel {cons("Ast")}
-		"property" Entity:Property	-> AModel {cons("Ast")} 
-		"type" Entity:Type			-> AModel {cons("Ast")} 
-		"id" Entity:ID				-> AModel {cons("Ast")}
-		
+		Entity:Module 		-> CModel {cons("Ast")} 
+		Entity:Definition 	-> CModel {cons("Ast")}
+		Entity:Property		-> CModel {cons("Ast")} 
+		Entity:Type			-> CModel {cons("Ast")} 
+		Entity:ID			-> CModel {cons("Ast")}
+				
 	context-free syntax
 		
-		Outline:Outline				-> AModel {cons("Ast")}
-		"entity" Outline:Entity		-> AModel {cons("Ast")}
-		"property" Outline:Property	-> AModel {cons("Ast")} 
+		Outline:Outline	 	-> AModel {cons("Ast")}
+		Outline:Entity 		-> AModel {cons("Ast")}
+		Outline:Property	-> AModel {cons("Ast")} 
 		
\ No newline at end of file

Modified: lenses/trunk/Strategic Lenses/test/Outline.lns
===================================================================
--- lenses/trunk/Strategic Lenses/test/Outline.lns	2010-06-01 20:37:13 UTC (rev 20908)
+++ lenses/trunk/Strategic Lenses/test/Outline.lns	2010-06-01 22:07:03 UTC (rev 20909)
@@ -1,33 +1,33 @@
 module Outline
 
 lenses
-	Property < outlineProperty > Property :=  
-		select Property(1) property p: int ; plunge Property
+	Property < outlineProperty > OutlineProperty :=  
+		select Property(1) p: int ; plunge OutlineProperty
 		
 tests
 	
 	lens outlineProperty with
 	
-		property p:e 
+		p:e 
 			< get put >
-		property +-p
+		+-p
 
-		property +-p
+		+-p
 			> create >
-		property p: int
+		p: int
 		
-		property p:e 
+		p:e 
 			> get > 
-		property +-p
+		+-p
 			> update >
-		property +-q
+		+-q
 			> put >
-		property q:e
+		q:e
 
 lenses
 
-	Entity < outlineEntity > Entity :=
-		fork Entity(n, ps) < > Entity(n, ps)
+	Entity < outlineEntity > OutlineEntity :=
+		fork Entity(n, ps) < > OutlineEntity(n, ps)
 				(n)  < id > (n)
 				(ps) < map outlineProperty > (ps)
 
@@ -35,14 +35,13 @@
 
 	lens outlineEntity with
 	
-	entity e {p: e q: e}
+	entity e {p: e q: e} 
 		< get put >
-	entity 
 	+e
 	+-p
 	+-q	
 	
-	entity 
+	 
 	+e
 	+-p
 	+-q	
@@ -51,12 +50,10 @@
 	
 	entity e {p: e q: e}
 		> get > 
-	entity 
 	+e
 	+-p
 	+-q	
 		> update > 
-	entity 
 	+e
 	+-p
 	+-r
@@ -79,7 +76,7 @@
 	
 	> get > 
 	
-	outline m
+	m
 	+e1
 	+-p1
 	+-p2
@@ -89,7 +86,7 @@
 	
 	> update > 
 	
-	outline m
+	m
 	+e1
 	+-p1
 	+-p2



From g.h.wachsmuth at tudelft.nl  Wed Jun  2 00:07:21 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Tue, 01 Jun 2010 22:07:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20910 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/test
Message-ID: <201006012207.o51M7LbD016595@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-01 22:07:21 +0000 (Tue, 01 Jun 2010)
New Revision: 20910

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20910&view=rev

Added:
   lenses/trunk/Strategic Lenses/test/Outline2.lns

Log:
example for traversals

Changes:

Added: lenses/trunk/Strategic Lenses/test/Outline2.lns
===================================================================
--- lenses/trunk/Strategic Lenses/test/Outline2.lns	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/test/Outline2.lns	2010-06-01 22:07:21 UTC (rev 20910)
@@ -0,0 +1,49 @@
+module Outline
+
+lenses
+	Property < outlineProperty > OutlineProperty :=  
+		select Property(1) p: int ; plunge OutlineProperty
+
+	Entity < outlineEntity > OutlineEntity :=
+		hoist Entity ; plunge OutlineEntity	
+
+	Module < outlineModule > Outline :=
+		hoist Module ; plunge Outline	
+
+	Module < main > Outline :=
+		topdown (outlineProperty || outlineEntity || outlineModule)
+tests
+	
+	lens main with
+	
+	module m 
+		entity e1 {p1: e1 p2: e2}
+		entity e2 {p1: e1 p2: e2} 
+	
+	> get > 
+	
+	m
+	+e1
+	+-p1
+	+-p2
+	+e2
+	+-p1
+	+-p2
+	
+	> update > 
+	
+	m
+	+e1
+	+-p1
+	+-p2
+	+e2
+	+-p1
+	+-p3
+	
+	> put > 
+	
+	module m 
+		entity e1 {p1: e1 p2: e2}
+		entity e2 {p1: e1 p3: e2} 
+		
+	
\ No newline at end of file



From g.h.wachsmuth at tudelft.nl  Wed Jun  2 00:08:34 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Tue, 01 Jun 2010 22:08:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20911 - GuidoWachsmuth
	- in lenses/trunk/Strategic Lenses: . editor
Message-ID: <201006012208.o51M8Yat016658@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-01 22:08:34 +0000 (Tue, 01 Jun 2010)
New Revision: 20911

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20911&view=rev

Modified:
   lenses/trunk/Strategic Lenses/
   lenses/trunk/Strategic Lenses/editor/

Log:
svn-ignore for generated editor files and .cache

Changes:


Property changes on: lenses/trunk/Strategic Lenses
___________________________________________________________________
Added: svn:ignore
   + .cache



Property changes on: lenses/trunk/Strategic Lenses/editor
___________________________________________________________________
Added: svn:ignore
   + *.esv




From g.h.wachsmuth at tudelft.nl  Wed Jun  2 00:11:25 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Tue, 01 Jun 2010 22:11:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20912 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses
Message-ID: <201006012211.o51MBPY8016863@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-01 22:11:24 +0000 (Tue, 01 Jun 2010)
New Revision: 20912

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20912&view=rev

Modified:
   lenses/trunk/Strategic Lenses/

Log:
svn-ignore for utils

Changes:


Property changes on: lenses/trunk/Strategic Lenses
___________________________________________________________________
Modified: svn:ignore
   - .cache

   + .cache
utils




From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:07:38 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:07:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20915 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/backup
Message-ID: <201006021507.o52F7ctg028154@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:07:38 +0000 (Wed, 02 Jun 2010)
New Revision: 20915

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20915&view=rev

Added:
   lenses/trunk/Strategic Lenses/backup/tracetrans/

Log:
moved all the traces stuff to backup

Changes:


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:07:54 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:07:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20916 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses
Message-ID: <201006021507.o52F7sXK028156@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:07:54 +0000 (Wed, 02 Jun 2010)
New Revision: 20916

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20916&view=rev

Removed:
   lenses/trunk/Strategic Lenses/tracetrans/

Log:
moved all the traces stuff to backup

Changes:


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:08:41 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:08:41 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20917 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses
Message-ID: <201006021508.o52F8fRj028161@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:08:41 +0000 (Wed, 02 Jun 2010)
New Revision: 20917

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20917&view=rev

Modified:
   lenses/trunk/Strategic Lenses/.classpath
   lenses/trunk/Strategic Lenses/build.main.xml
   lenses/trunk/Strategic Lenses/build.properties

Log:
now working with spoofax 0.5

Changes:

Modified: lenses/trunk/Strategic Lenses/.classpath
===================================================================
--- lenses/trunk/Strategic Lenses/.classpath	2010-06-02 15:07:54 UTC (rev 20916)
+++ lenses/trunk/Strategic Lenses/.classpath	2010-06-02 15:08:41 UTC (rev 20917)
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
 <classpath>
-	<classpathentry kind="src" path="editor/java"/>
+	<classpathentry kind="src" excluding="trans/**" path="editor/java"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
-	<classpathentry kind="lib" path="utils/strategoxt.jar"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>
\ No newline at end of file

Modified: lenses/trunk/Strategic Lenses/build.main.xml
===================================================================
--- lenses/trunk/Strategic Lenses/build.main.xml	2010-06-02 15:07:54 UTC (rev 20916)
+++ lenses/trunk/Strategic Lenses/build.main.xml	2010-06-02 15:08:41 UTC (rev 20917)
@@ -18,7 +18,7 @@
         
         <!-- Imports -->
         <property name="build.sdf.imports" value=""/>
-        <property name="build.stratego.args" value="--library
+        <property name="build.stratego.args" value=" --library
                         -I &quot;${trans}&quot; -I &quot;${basedir}&quot;
                         -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm"/>
         
@@ -38,6 +38,4 @@
     
         <!-- Main target -->
         <target name="all" depends="spoofaximp.default"/>
-	<eclipse.convertPath fileSystemPath="${basedir}" property="resourcePath" />
-	<eclipse.refreshLocal resource="${resourcePath}" depth="infinite" />
-    </project>
\ No newline at end of file
+   </project>
\ No newline at end of file

Modified: lenses/trunk/Strategic Lenses/build.properties
===================================================================
--- lenses/trunk/Strategic Lenses/build.properties	2010-06-02 15:07:54 UTC (rev 20916)
+++ lenses/trunk/Strategic Lenses/build.properties	2010-06-02 15:08:41 UTC (rev 20917)
@@ -1,7 +1,6 @@
 source.. = editor/java/
 output.. = bin/
 bin.includes = META-INF/,\
-               .,\
                plugin.xml,\
                include/,\
                bin/,\


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:09:14 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:09:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20918 - GuidoWachsmuth
	- in lenses/trunk/Strategic Lenses: lib syntax
Message-ID: <201006021509.o52F9Euh028163@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:09:14 +0000 (Wed, 02 Jun 2010)
New Revision: 20918

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20918&view=rev

Added:
   lenses/trunk/Strategic Lenses/syntax/basic/
   lenses/trunk/Strategic Lenses/syntax/languages/
Removed:
   lenses/trunk/Strategic Lenses/lib/basic/
   lenses/trunk/Strategic Lenses/lib/languages/

Log:
moved languages to the syntax directory

Changes:


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:09:38 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:09:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20919 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/syntax
Message-ID: <201006021509.o52F9c7P028165@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:09:38 +0000 (Wed, 02 Jun 2010)
New Revision: 20919

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20919&view=rev

Modified:
   lenses/trunk/Strategic Lenses/syntax/Lenses.sdf

Log:
special case for single arguments in forks

Changes:

Modified: lenses/trunk/Strategic Lenses/syntax/Lenses.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Lenses.sdf	2010-06-02 15:09:14 UTC (rev 20918)
+++ lenses/trunk/Strategic Lenses/syntax/Lenses.sdf	2010-06-02 15:09:38 UTC (rev 20919)
@@ -64,6 +64,7 @@
 		{Index ","}+					-> Indices 		{cons("Indices")}
 		
 		ID								-> Var
+		Var 							-> Pattern		{cons("SPattern")}
 		"(" {Var ","}+ ")"				-> Pattern		{cons("TPattern")}
 		QFunctor "(" {Var ","}+ ")"		-> Pattern		{cons("FPattern")}
 		


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:10:08 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:10:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20920 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/syntax
Message-ID: <201006021510.o52FA8um028184@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:10:08 +0000 (Wed, 02 Jun 2010)
New Revision: 20920

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20920&view=rev

Modified:
   lenses/trunk/Strategic Lenses/syntax/Tests.sdf

Log:
made arrows mandatory to keep AST clean

Changes:

Modified: lenses/trunk/Strategic Lenses/syntax/Tests.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Tests.sdf	2010-06-02 15:09:38 UTC (rev 20919)
+++ lenses/trunk/Strategic Lenses/syntax/Tests.sdf	2010-06-02 15:10:08 UTC (rev 20920)
@@ -12,9 +12,9 @@
 		SimpleTest						-> Test	{cons("Success")}		
 		"failure" SimpleTest			-> Test	{cons("Failure")}
 		
-		CModel ">"? "get" ">"? AModel 			-> SimpleTest {cons("Get")}
-		CModel "<"? "get" "put" ">"? AModel 	-> SimpleTest {cons("GetPut")}
-		AModel ">"? "create" ">"? CModel 		-> SimpleTest {cons("Create")}
-		AModel "<"? "create" "get" ">"? CModel 	-> SimpleTest {cons("CreateGet")}
+		CModel ">" "get" ">" AModel 			-> SimpleTest {cons("Get")}
+		CModel "<" "get" "put" ">" AModel 		-> SimpleTest {cons("GetPut")}
+		AModel ">" "create" ">" CModel 			-> SimpleTest {cons("Create")}
+		AModel "<" "create" "get" ">" CModel 	-> SimpleTest {cons("CreateGet")}
 		
-		CModel ">"? "get" ">"? AModel ">"? "update" ">"? AModel ">"? "put" ">"? CModel -> SimpleTest {cons("GetUpdatePut")}
+		CModel ">" "get" ">" AModel ">" "update" ">" AModel ">" "put" ">" CModel -> SimpleTest {cons("GetUpdatePut")}


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:10:32 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:10:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20921 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/syntax
Message-ID: <201006021510.o52FAWwO028186@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:10:31 +0000 (Wed, 02 Jun 2010)
New Revision: 20921

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20921&view=rev

Modified:
   lenses/trunk/Strategic Lenses/syntax/Embedding.sdf

Log:
allow for entities as abstract models

Changes:

Modified: lenses/trunk/Strategic Lenses/syntax/Embedding.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Embedding.sdf	2010-06-02 15:10:08 UTC (rev 20920)
+++ lenses/trunk/Strategic Lenses/syntax/Embedding.sdf	2010-06-02 15:10:31 UTC (rev 20921)
@@ -23,6 +23,14 @@
 				
 	context-free syntax
 		
+		Entity:Module 		-> AModel {cons("Ast")} 
+		Entity:Definition 	-> AModel {cons("Ast")}
+		Entity:Property		-> AModel {cons("Ast")} 
+		Entity:Type			-> AModel {cons("Ast")} 
+		Entity:ID			-> AModel {cons("Ast")}
+				
+	context-free syntax
+		
 		Outline:Outline	 	-> AModel {cons("Ast")}
 		Outline:Entity 		-> AModel {cons("Ast")}
 		Outline:Property	-> AModel {cons("Ast")} 


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:11:26 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:11:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20922 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/test
Message-ID: <201006021511.o52FBQX5028211@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:11:26 +0000 (Wed, 02 Jun 2010)
New Revision: 20922

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20922&view=rev

Modified:
   lenses/trunk/Strategic Lenses/test/TestSuite.lns

Log:
for testing the <eq> bug

Changes:

Modified: lenses/trunk/Strategic Lenses/test/TestSuite.lns
===================================================================
--- lenses/trunk/Strategic Lenses/test/TestSuite.lns	2010-06-02 15:10:31 UTC (rev 20921)
+++ lenses/trunk/Strategic Lenses/test/TestSuite.lns	2010-06-02 15:11:26 UTC (rev 20922)
@@ -1,67 +1,10 @@
 module TestSuite
 
-lenses
-
-	A < ourlens > B := id
-	
 tests
-
-	// test for get and put
-	ast (a, b) 	<+ id > 				ast (a, b)
 	
-	ast f(a, b) <+ hoist f > 			ast (a, b)
-	ast a(b)	<+ hoist a > 			ast (b)
+	lens select Property(1) p: int with
 	
-	ast (a, b) 	<+ plunge f > 			ast f(a, b)
-	ast (a)		<+ plunge f > 			ast f(a)
-	ast (a(b))	<+ plunge f > 			ast f(a(b))
-	
-	ast (a, b)  <+ select 1 ast (a, b) > 	ast a
-	ast f(a, b) <+ select _.f(1) ast f(a, b) > 	ast a
-	
-	ast (a, b, c, d) <+ 
-		fork 1 < id > 4 2 <id> 3 3 < id > 2 4 < id > 1  
-		>
-	ast (d, c, b, a)
-	
-	ast [a, b, c, d] <+ map id > ast [a, b, c, d]
-	ast [a(1, a), a(2, a), a(3, a), a(4, a)] <+ map select a(1) ast a(x, a) > ast [1, 2, 3, 4]
-	
-	failure 
-		ast [a, b, c] <+ map id < ast [a, c, b]
-	
-	ast a(b, c(d, e)) <+ topdown id > ast a(b, c(d, e))
-	ast ((a, b), ((c, d), e)) <+ topdown plunge f > ast f(f(a, b), f(f(c, d), e))
-	ast f(f(a, b), f(f(c, d), e)) <+ topdown hoist f > ast ((a, b), ((c, d), e))
-	ast a(b, c(a(d, e), f)) <+ topdown select _.a(2) ast a(b, x) > ast c(e, f)
-	
-	// test for create
-	ast f(a, b) < id > 	ast f(a, b)
-	
-	ast f(a, b) < hoist f > 			ast (a, b)
-	
-	ast (a, b) 	< plunge f > 			ast f(a, b)
-	
-	ast (a, b)  < select 1 ast (a, b) > ast a
-	
-	ast f(a, b)  < select f(1) ast f(a, b) > ast a
-	
-	ast [a(1, a), a(2, a), a(3, a), a(4, a)] < map select a(1) ast a(x, a) > ast [1, 2, 3, 4]
-	
-	ast a(b, c(d, e)) < topdown id > ast a(b, c(d, e))
-	
-	failure
-		ast ((a, b), ((c, d), e)) < topdown plunge f > ast f(f(a, b), f(f(c, d), e))
-	
-	failure
-		ast f(f(a, b), f(f(c, d), e)) < topdown hoist f > ast ((a, b), ((c, d), e))
-	
-	ast (f(a, b), f(f(c, d), e)) < topdown plunge f > ast f(f(a, b), f(f(c, d), e))
-	
-	ast f((a, b), ((c, d), e)) < topdown hoist f > ast ((a, b), ((c, d), e))
-	
-	ast a(b, c(e, f)) < topdown select _.a(2) ast a(b, x) > ast c(e, f)
-	
-	// test for desugaring
-	//select f(1) ast f(a,b) >=> hoist _.f ; select 1 ast (a,b)
-	hoist f >=> hoist _.f
\ No newline at end of file
+		ast Property(p, Type(e)) 
+			> get > 
+		ast q 
+	
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:11:39 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:11:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20923 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/test
Message-ID: <201006021511.o52FBd6M028214@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:11:39 +0000 (Wed, 02 Jun 2010)
New Revision: 20923

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20923&view=rev

Modified:
   lenses/trunk/Strategic Lenses/test/Outline2.lns

Log:
only works for get

Changes:

Modified: lenses/trunk/Strategic Lenses/test/Outline2.lns
===================================================================
--- lenses/trunk/Strategic Lenses/test/Outline2.lns	2010-06-02 15:11:26 UTC (rev 20922)
+++ lenses/trunk/Strategic Lenses/test/Outline2.lns	2010-06-02 15:11:39 UTC (rev 20923)
@@ -16,34 +16,36 @@
 	
 	lens main with
 	
-	module m 
-		entity e1 {p1: e1 p2: e2}
-		entity e2 {p1: e1 p2: e2} 
+	p1: e1
 	
 	> get > 
 	
-	m
+	+-p1
+	
+	lens main with
+	
+	entity e1 {p1: e1 p2: e2}
+	
+	> get > 
+	
 	+e1
 	+-p1
 	+-p2
-	+e2
-	+-p1
-	+-p2
 	
-	> update > 
+	lens main with
 	
+	module m 
+		entity e1 {p1: e1 p2: e2}
+		entity e2 {p1: e1 p2: e2} 
+	
+	> get > 
+	
 	m
 	+e1
 	+-p1
 	+-p2
 	+e2
 	+-p1
-	+-p3
+	+-p2
 	
-	> put > 
-	
-	module m 
-		entity e1 {p1: e1 p2: e2}
-		entity e2 {p1: e1 p3: e2} 
-		
 	
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:12:19 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:12:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20924 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/test
Message-ID: <201006021512.o52FCJna028216@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:12:19 +0000 (Wed, 02 Jun 2010)
New Revision: 20924

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20924&view=rev

Modified:
   lenses/trunk/Strategic Lenses/test/Outline.lns

Log:
new syntax in forks

Changes:

Modified: lenses/trunk/Strategic Lenses/test/Outline.lns
===================================================================
--- lenses/trunk/Strategic Lenses/test/Outline.lns	2010-06-02 15:11:39 UTC (rev 20923)
+++ lenses/trunk/Strategic Lenses/test/Outline.lns	2010-06-02 15:12:19 UTC (rev 20924)
@@ -28,76 +28,76 @@
 
 	Entity < outlineEntity > OutlineEntity :=
 		fork Entity(n, ps) < > OutlineEntity(n, ps)
-				(n)  < id > (n)
-				(ps) < map outlineProperty > (ps)
+				n  < id > n
+				ps < map outlineProperty > ps
 
 tests
 
 	lens outlineEntity with
 	
-	entity e {p: e q: e} 
-		< get put >
-	+e
-	+-p
-	+-q	
-	
-	 
-	+e
-	+-p
-	+-q	
-		> create >
-	entity e {p: int q: int}
-	
-	entity e {p: e q: e}
-		> get > 
-	+e
-	+-p
-	+-q	
-		> update > 
-	+e
-	+-p
-	+-r
-		> put > 	
-	entity e {p: e r: e}	
+		entity e {p: e q: e} 
+			< get put >
+		+e
+		+-p
+		+-q	
+		
+		 
+		+e
+		+-p
+		+-q	
+			> create >
+		entity e {p: int q: int}
+		
+		entity e {p: e q: e}
+			> get > 
+		+e
+		+-p
+		+-q	
+			> update > 
+		+e
+		+-p
+		+-r
+			> put > 	
+		entity e {p: e r: e}	
 
 lenses
 	Module < outlineModule > Outline :=
 		fork Module(n, es) < > Outline(n, es)
-			(n)  < id > (n)
-			(es) < map outlineEntity > (es) 	
+			n  < id > n
+			es < map outlineEntity > es 	
 
 tests
 	
 	lens outlineModule with
 	
-	module m 
-		entity e1 {p1: e1 p2: e2}
-		entity e2 {p1: e1 p2: e2} 
-	
-	> get > 
-	
-	m
-	+e1
-	+-p1
-	+-p2
-	+e2
-	+-p1
-	+-p2
-	
-	> update > 
-	
-	m
-	+e1
-	+-p1
-	+-p2
-	+e2
-	+-p1
-	+-p3
-	
-	> put > 
-	
-	module m 
-		entity e1 {p1: e1 p2: e2}
-		entity e2 {p1: e1 p3: e2} 
+		module m 
+			entity e1 {p1: e1 p2: e2}
+			entity e2 {p1: e1 p2: e2} 
 		
-	
\ No newline at end of file
+		> get > 
+		
+		m
+		+e1
+		+-p1
+		+-p2
+		+e2
+		+-p1
+		+-p2
+		
+		> update > 
+		
+		mm
+		+e1
+		+-p1
+		+-p3
+		+e2
+		+-p2
+		+-p4
+		
+		> put > 
+		
+		module mm 
+			entity e1 {p1: e1 p3: e2}
+			entity e2 {p2: e1 p4: e2} 
+			
+		
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:12:47 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:12:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20925 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/trans
Message-ID: <201006021512.o52FClQd028226@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:12:47 +0000 (Wed, 02 Jun 2010)
New Revision: 20925

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20925&view=rev

Added:
   lenses/trunk/Strategic Lenses/trans/analysis.str

Log:
renamed signatures to analysis

Changes:

Copied: lenses/trunk/Strategic Lenses/trans/analysis.str (from rev 20910, lenses/trunk/Strategic Lenses/trans/signatures.str)
===================================================================
--- lenses/trunk/Strategic Lenses/trans/analysis.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/analysis.str	2010-06-02 15:12:47 UTC (rev 20925)
@@ -0,0 +1,33 @@
+module analysis
+
+imports
+	libstratego-lib
+  	include/StrategicLenses
+  	lib/editor-common.generated
+  	desugar
+  
+strategies
+	analyse = topdown(try(record-signature <+ record-lens))
+
+rules	
+	record-signature: TypeDef(f, ts, t) -> TypeDef(f, ts, t)
+		with rules (
+			GetFunctor: (t, f) -> Functor(f, ts)
+		)
+		with rules (
+			GetFunctor: (Every(), f) -> Functor(f, ts)
+		)		
+		with rules (
+			GetSort: Functor(f, ts) -> t
+			) 
+		with rules (
+			GetConstructor: t -> Functor(f, ts)
+		)
+		
+rules
+	record-lens: LensDef(tc, name, ti, def) -> LensDef(tc, name, ti, def)
+		with 
+			<desugar> def => desugared 
+		with rules (
+			GetLens: name -> desugared
+		)
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:13:08 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:13:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20926 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/trans
Message-ID: <201006021513.o52FD86I028228@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:13:08 +0000 (Wed, 02 Jun 2010)
New Revision: 20926

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20926&view=rev

Added:
   lenses/trunk/Strategic Lenses/trans/desugar.str
Removed:
   lenses/trunk/Strategic Lenses/trans/desugar.str

Log:
new rules for single patterns in forks

Changes:

Deleted: lenses/trunk/Strategic Lenses/trans/desugar.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/desugar.str	2010-06-02 15:12:47 UTC (rev 20925)
+++ lenses/trunk/Strategic Lenses/trans/desugar.str	2010-06-02 15:13:08 UTC (rev 20926)
@@ -1,53 +0,0 @@
-module desugar
-
-imports
-	include/StrategicLenses
-	libstratego-lib
-	libstratego-aterm
-	indices
-	
-strategies
-
-	desugar = topdown(try(desugar-local)) // <+ implode-local))
-	implode = topdown(try(implode-local))
-	
-rules
-	implode-local: ATerm(t)	-> Ast(<implode-aterm> t)
-	desugar-local: ATerm(t)	-> Ast(<implode-aterm> t)
-
-rules // typeless functor
-	desugar-local: Functor(f) -> QFunctor(Every(), f)
-	
-rules // select with functor
-	desugar-local: 	FSelect(qf, i*, d) 	-> Comp(Hoist(qf), Select(i*, Ast(""#(c*)))) 
-		where
-			<desugar> d => Ast(f#(c*)) 
-	
-rules // select deep pathes
-	desugar-local: 	PSelect([Segment(qf, i)], d)		-> Comp(Hoist(qf), SSelect(i, Ast(""#(c*)))) where
-						<desugar> d => Ast(f#(c*)) 
-				
-	desugar-local: 	PSelect([Segment(qf, i),s|s*], Ast(f#(c*)))	-> Comp(lens1, lens2) with
-						lens1 := Comp(Hoist(qf), SSelect(i, Ast(Ast(""#(c*))))) ;
-						lens2 := PSelect([s|s*], <select-child> (i, c*))
-
-rules // list lenses	
-	desugar-local: 	Hd(d*)	-> SSelect(Segment(QFunctor("List", "Cons"), 1), [1|d*])
-	desugar-local: 	Tl(d)	-> SSelect(Segment(QFunctor("List", "Cons"), 2), [d])
-
-rules // fork with functor patterns	
-	desugar-local: PFork(FPattern(f, cv*), ap, b*)	-> Comp(Hoist(f), PFork(TPattern(cv*), ap, b*))
-	desugar-local: PFork(cp, FPattern(f, av*), b*)	-> Comp(PFork(TPattern(av*), cp, b*), Plunge(f))
-
-rules // branch with functor patterns	
-	desugar-local: PBranch(FPattern(f, cv*), l, ap)	-> PBranch(TPattern(cv*), Comp(Plunge(f), l), ap)
-	desugar-local: PBranch(cp, l, FPattern(f, cv*))	-> PBranch(cp, Comp(l, Hoist(f)), TPattern(cv*))
-
-rules // fork/branches with patterns	
-	desugar-local: PFork(TPattern(cv*), TPattern(av*), b*)	-> Fork(<map(desugar-branch(|cv*, av*))> b*)
-	
-	desugar-branch(|cv*, av*): 	PBranch(TPattern(pcv*), l, TPattern(pav*))	-> Branch(Indices(ci*), l, Indices(ai*)) with
-									<map(get-index(|cv*))> pcv* 	=> ci* ;
-									<map(get-index(|av*))> pav*		=> ai*
-	
-	get-index(|e*):	e 	-> <int-to-string> <get-index> (e, e*)
\ No newline at end of file

Copied: lenses/trunk/Strategic Lenses/trans/desugar.str (from rev 20910, lenses/trunk/Strategic Lenses/trans/desugar.str)
===================================================================
--- lenses/trunk/Strategic Lenses/trans/desugar.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/desugar.str	2010-06-02 15:13:08 UTC (rev 20926)
@@ -0,0 +1,64 @@
+module desugar
+
+imports
+	include/StrategicLenses
+	libstratego-lib
+	libstratego-aterm
+	indices
+	
+strategies
+
+	desugar = topdown(try(desugar-local)) 
+	implode = topdown(try(implode-local))
+	
+rules
+	implode-local: ATerm(t)	-> Ast(<implode-aterm> t)
+	desugar-local: ATerm(t)	-> Ast(<implode-aterm> t)
+
+rules // typeless functor
+	desugar-local: Functor(f) -> QFunctor(Every(), f)
+	
+rules // select with functor
+	desugar-local: 	FSelect(qf, i*, d) 	-> Comp(Hoist(qf), Select(i*, Ast(""#(c*)))) 
+		where
+			<desugar> d => Ast(f#(c*)) 
+	
+rules // select deep pathes
+	desugar-local: 	PSelect([Segment(qf, i)], d)		-> Comp(Hoist(qf), SSelect(i, Ast(""#(c*)))) where
+						<desugar> d => Ast(f#(c*)) 
+				
+	desugar-local: 	PSelect([Segment(qf, i),s|s*], Ast(f#(c*)))	-> Comp(lens1, lens2) with
+						lens1 := Comp(Hoist(qf), SSelect(i, Ast(Ast(""#(c*))))) ;
+						lens2 := PSelect([s|s*], <select-child> (i, c*))
+
+rules // list lenses	
+	desugar-local: 	Hd(d*)	-> SSelect(Segment(QFunctor("List", "Cons"), 1), [1|d*])
+	desugar-local: 	Tl(d)	-> SSelect(Segment(QFunctor("List", "Cons"), 2), [d])
+
+rules // fork with functor patterns	
+	desugar-local: PFork(FPattern(f, cv*), ap, b*)	-> Comp(Hoist(f), PFork(TPattern(cv*), ap, b*))
+	desugar-local: PFork(cp, FPattern(f, av*), b*)	-> Comp(PFork(TPattern(av*), cp, b*), Plunge(f))
+
+rules // branch with functor patterns	
+	desugar-local: PBranch(FPattern(f, cv*), l, ap)	-> PBranch(TPattern(cv*), Comp(Plunge(f), l), ap)
+	desugar-local: PBranch(cp, l, FPattern(f, cv*))	-> PBranch(cp, Comp(l, Hoist(f)), TPattern(cv*))
+
+rules // fork/branches with patterns	
+	desugar-local: PFork(cp, ap, bs) -> Fork(bs') 
+						where
+							<vars> cp => cvs ;
+							<vars> ap => avs ;
+							<map(desugar-branch(|cvs, avs))> bs => bs'
+
+	desugar-branch(|cvs, avs): 	PBranch(cp, l, ap) -> Branch(Indices(cis), l, Indices(ais)) 
+									with
+										<vars> cp => bcvs ;
+										<vars> ap => bavs ;
+										<map(get-index(|cvs))> bcvs => cis ;
+										<map(get-index(|avs))> bavs	=> ais
+		
+	get-index(|e*):	e 	-> <int-to-string> <get-index> (e, e*)
+			
+	vars: TPattern(vs) -> vs
+	vars: SPattern(v) -> [v]
+	


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:14:15 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:14:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20927 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/trans
Message-ID: <201006021514.o52FEFff028241@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:14:15 +0000 (Wed, 02 Jun 2010)
New Revision: 20927

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20927&view=rev

Added:
   lenses/trunk/Strategic Lenses/trans/indices.str
   lenses/trunk/Strategic Lenses/trans/tuples.str
Removed:
   lenses/trunk/Strategic Lenses/trans/indices.str

Log:
correct support for single terms in the context of tuples

Changes:

Deleted: lenses/trunk/Strategic Lenses/trans/indices.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/indices.str	2010-06-02 15:13:08 UTC (rev 20926)
+++ lenses/trunk/Strategic Lenses/trans/indices.str	2010-06-02 15:14:15 UTC (rev 20927)
@@ -1,35 +0,0 @@
-module indices
-
-imports
-	libstratego-lib
-
-rules 
-	elem-by-key(|d*):	i 	-> <lookup> (<int-to-string> i, d*) 
-	elem-by-index(|e*): i 	-> <index> (<string-to-int> i, e*)
-	
-strategies
-	dict-to-list =
-		?d* ; length ; upto ; Tl ; 
-		map(elem-by-key(|d*))
-	
-	dict-to-tuple =
-		dict-to-list ; ListToTuple
-	
-	indices-to-list(|e*) = 
-		map(elem-by-index(|e*)) 
-			
-	indices-to-tuple(|e*) = 
-		indices-to-list(|e*) ; ListToTuple 
-
-rules // Child Selection/Update
-	select-child:	(i, c*)		-> <index> (<string-to-int> i, c*) 
-	update-child: 	(i, u, c*)	-> <set-index> (<dec><string-to-int> i, u, c*)
-
-rules
-	select-child(|c*): 	i 				-> <select-child> (i, c*)
-	update-child: 		((i, u), c*) 	-> <update-child> (i, u, c*) //where <debug> (c*, (i, u))
-
-rules
-	select-children: 	(i*, c*) 		-> <map(select-child(|c*))> i*
-	update-children: 	(i*, u*, c*)	-> <foldr(!c*, update-child)> <zip> (i*, u*)
-	
\ No newline at end of file

Copied: lenses/trunk/Strategic Lenses/trans/indices.str (from rev 20910, lenses/trunk/Strategic Lenses/trans/indices.str)
===================================================================
--- lenses/trunk/Strategic Lenses/trans/indices.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/indices.str	2010-06-02 15:14:15 UTC (rev 20927)
@@ -0,0 +1,39 @@
+module indices
+
+imports
+	libstratego-lib
+	tuples
+
+rules 
+	elem-by-key(|d*):	i 	-> <lookup> (<int-to-string> i, d*) 
+	elem-by-index(|e*): i 	-> <index> (<string-to-int> i, e*)
+	
+strategies
+	dict-to-list =
+		?d* ; length ; upto ; Tl ; 
+		map(elem-by-key(|d*))
+	
+	dict-to-tuple =
+		dict-to-list ; list-to-tuple
+	
+	indices-to-list(|e*) = 
+		map(elem-by-index(|e*)) 
+			
+	indices-to-tuple(|e*) = 
+		indices-to-list(|e*) ; list-to-tuple 
+
+rules
+	indices-to-tuple: (is, es) -> <indices-to-tuple(|es)> is
+	
+rules // Child Selection/Update
+	select-child:	(i, c*)		-> <index> (<string-to-int> i, c*) 
+	update-child: 	(i, u, c*)	-> <set-index> (<dec><string-to-int> i, u, c*)
+
+rules
+	select-child(|c*): 	i 				-> <select-child> (i, c*)
+	update-child: 		((i, u), c*) 	-> <update-child> (i, u, c*) //where <debug> (c*, (i, u))
+
+rules
+	select-children: 	(i*, c*) 		-> <map(select-child(|c*))> i*
+	update-children: 	(i*, u*, c*)	-> <foldr(!c*, update-child)> <zip> (i*, u*)
+	
\ No newline at end of file

Added: lenses/trunk/Strategic Lenses/trans/tuples.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/tuples.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/tuples.str	2010-06-02 15:14:15 UTC (rev 20927)
@@ -0,0 +1,10 @@
+module tuples
+
+rules
+	
+	tuple-to-list: ""#(as) 	-> as
+	tuple-to-list: t 		-> [t] where not (<is-tuple> t)
+	
+	list-to-tuple: [t]			-> t
+	list-to-tuple: as@[_, _|_] 	-> ""#(as)
+	
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:15:10 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:15:10 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20928 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/trans
Message-ID: <201006021515.o52FFAPB028252@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:15:10 +0000 (Wed, 02 Jun 2010)
New Revision: 20928

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20928&view=rev

Added:
   lenses/trunk/Strategic Lenses/trans/run-tests.str
Removed:
   lenses/trunk/Strategic Lenses/trans/run-tests.str

Log:
debug messages to trace the <eq> bug

Changes:

Deleted: lenses/trunk/Strategic Lenses/trans/run-tests.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/run-tests.str	2010-06-02 15:14:15 UTC (rev 20927)
+++ lenses/trunk/Strategic Lenses/trans/run-tests.str	2010-06-02 15:15:10 UTC (rev 20928)
@@ -1,94 +0,0 @@
-module run-tests
-
-imports
-	libstratego-lib
-	include/StrategicLenses
-	lib/editor-common.generated
-	semantics
-	desugar
-	
-rules
-	test-error: Case(l, tests) -> errors 
-		where 
-			<collect-all(test-error(|<desugar> l), conc)> tests => errors
-			
-	test-error(|l): Success(t) -> error 
-		where
-			<run-test> (l, t) => error
-	
-	test-error(|l): Failure(t) -> (t, $[Test yields no error.]) 
-		where
-			not(<run-test> (l, t))
-					
-	run-test: (lens, case at Get(concrete, abstract)) -> (case, $[Test for get fails.])
-		where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			not (<get(|lens)> dconcrete)
-					
-	run-test: (lens, case at Get(concrete, abstract)) -> (case, $[Test for get yields [failure].]) 
-		where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			<implode> abstract 	=> Ast(dabstract) ;
-			<get(|lens)> dconcrete => fabstract ;
-			not (<equal> (fabstract, dabstract)) ;
-			<write-to-string> fabstract => failure 
-					
-	run-test: (lens, case at GetPut(concrete, abstract)) -> (case, error) 
-		where
-			<run-test> (lens, Get(concrete, abstract)) => (_, error)
-	
-	run-test: (lens, case at GetPut(concrete, abstract)) -> (case, $[Test for put fails.])
-	 	where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			<implode> abstract 	=> Ast(dabstract) ;
-			not ( <put(|lens)> (dabstract, dconcrete))
-					
-	run-test: (lens, case at GetPut(concrete, abstract)) -> (case, $[Test for put yields [failure].]) 
-		where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			<implode> abstract 	=> Ast(dabstract) ;
-			 <put(|lens)> (dabstract, dconcrete) => fconcrete ;
-			not (<equal> (fconcrete, dconcrete)) ;
-			 <write-to-string> fconcrete => failure 
-						
-	run-test: (lens, case at CreateGet(abstract, concrete)) -> (case, error) 
-		where 
-			<run-test> (lens, Get(concrete, abstract)) => (_, error)	
-							
-	run-test: (lens, case at CreateGet(abstract, concrete)) -> (case, error)
-		 where 
-			<run-test> (lens, Create(abstract, concrete)) => (_, error)	
-
-	run-test:	(lens, case at Create(abstract, concrete)) -> (case, $[Test for create fails.]) 
-		where
-			<implode> abstract 	=> Ast(dabstract) ;
-			not ( <create(|lens)> dabstract )
-					
-	run-test:	(lens, case at Create(abstract, concrete)) -> (case, $[Test for create yields [failure].]) 
-		where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			<implode> abstract 	=> Ast(dabstract) ;
-			<create(|lens)> dabstract => fconcrete ;
-			not (<equal> (fconcrete, dconcrete)) ;
-			<write-to-string> fconcrete => failure 
-	
-	run-test:	(lens, case at GetUpdatePut(concrete, abstract, uabstract, uconcrete)) -> (case, error)
-		where
-			<run-test> (lens, Get(concrete, abstract)) => (_, error)
-	
-	run-test: (lens, case at GetUpdatePut(concrete, abstract, uabstract, uconcrete)) -> (case, $[Test for put fails.])
-	 	where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			<implode> uabstract => Ast(dabstract) ;
-			not ( <put(|lens)> (dabstract, dconcrete))
-					
-	run-test: (lens, case at GetUpdatePut(concrete, abstract, uabstract, uconcrete)) -> (case, $[Test for put yields [failure].]) 
-		where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			<implode> uabstract => Ast(dabstract) ;
-			<implode> uconcrete => Ast(duconcrete) ;
-			<put(|lens)> (dabstract, dconcrete) => fconcrete ;
-			not (<equal> (fconcrete, duconcrete)) ;
-			 <write-to-string> fconcrete => failure 
-						
-			
\ No newline at end of file

Copied: lenses/trunk/Strategic Lenses/trans/run-tests.str (from rev 20910, lenses/trunk/Strategic Lenses/trans/run-tests.str)
===================================================================
--- lenses/trunk/Strategic Lenses/trans/run-tests.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/run-tests.str	2010-06-02 15:15:10 UTC (rev 20928)
@@ -0,0 +1,100 @@
+module run-tests
+
+imports
+	libstratego-lib
+	include/StrategicLenses
+	lib/editor-common.generated
+	semantics
+	desugar
+	
+rules
+	test-error: Case(l, tests) -> errors 
+		where 
+			<desugar> l => dl ;
+			<collect-all(test-error(|dl), conc)> tests => errors 
+			
+	test-error(|l): Success(t) -> error 
+		where
+			<run-test> (l, t) => error 
+	
+	test-error(|l): Failure(t) -> (t, $[Test yields no error.]) 
+		where
+			not(<run-test> (l, t))
+					
+	run-test: (lens, case at Get(concrete, abstract)) -> (case, $[Test for get fails.])
+		where
+			<implode> concrete 	=> Ast(dconcrete) ;
+			not (<get> (lens, dconcrete))
+					
+	run-test: (lens, case at Get(concrete, abstract)) -> (case, $[Test for get yields [failure].]) 
+		where
+			<implode> concrete 	=> Ast(dconcrete) ;
+			<implode> abstract 	=> Ast(dabstract) ;
+			<debug> "get" ;
+			<get(|lens)> dconcrete => fabstract ;
+			<debug> fabstract ;
+			<debug> dabstract ;
+			(<eq> (dabstract, fabstract) < <debug> "equal" + <debug> "unequal" ) ;
+			(<eq> (fabstract, dabstract) < <debug> "equal" + <debug> "unequal" ) ;
+			not (<eq> (dabstract, fabstract)) ;
+			<write-to-string> fabstract => failure 
+			
+	run-test: (lens, case at GetPut(concrete, abstract)) -> (case, error) 
+		where
+			<run-test> (lens, Get(concrete, abstract)) => (_, error)
+	
+	run-test: (lens, case at GetPut(concrete, abstract)) -> (case, $[Test for put fails.])
+	 	where
+			<implode> concrete 	=> Ast(dconcrete) ;
+			<implode> abstract 	=> Ast(dabstract) ;
+			not ( <put(|lens)> (dabstract, dconcrete))
+					
+	run-test: (lens, case at GetPut(concrete, abstract)) -> (case, $[Test for put yields [failure].]) 
+		where
+			<implode> concrete 	=> Ast(dconcrete) ;
+			<implode> abstract 	=> Ast(dabstract) ;
+			 <put(|lens)> (dabstract, dconcrete) => fconcrete ;
+			not (<equal> (fconcrete, dconcrete)) ;
+			 <write-to-string> fconcrete => failure 
+						
+	run-test: (lens, case at CreateGet(abstract, concrete)) -> (case, error) 
+		where 
+			<run-test> (lens, Get(concrete, abstract)) => (_, error)	
+							
+	run-test: (lens, case at CreateGet(abstract, concrete)) -> (case, error)
+		 where 
+			<run-test> (lens, Create(abstract, concrete)) => (_, error)	
+
+	run-test:	(lens, case at Create(abstract, concrete)) -> (case, $[Test for create fails.]) 
+		where
+			<implode> abstract 	=> Ast(dabstract) ;
+			not ( <create(|lens)> dabstract )
+					
+	run-test:	(lens, case at Create(abstract, concrete)) -> (case, $[Test for create yields [failure].]) 
+		where
+			<implode> concrete 	=> Ast(dconcrete) ;
+			<implode> abstract 	=> Ast(dabstract) ;
+			<create(|lens)> dabstract => fconcrete ;
+			not (<equal> (fconcrete, dconcrete)) ;
+			<write-to-string> fconcrete => failure 
+	
+	run-test:	(lens, case at GetUpdatePut(concrete, abstract, uabstract, uconcrete)) -> (case, error)
+		where
+			<run-test> (lens, Get(concrete, abstract)) => (_, error)
+	
+	run-test: (lens, case at GetUpdatePut(concrete, abstract, uabstract, uconcrete)) -> (case, $[Test for put fails.])
+	 	where
+			<implode> concrete 	=> Ast(dconcrete) ;
+			<implode> uabstract => Ast(dabstract) ;
+			not ( <put(|lens)> (dabstract, dconcrete))
+					
+	run-test: (lens, case at GetUpdatePut(concrete, abstract, uabstract, uconcrete)) -> (case, $[Test for put yields [failure].]) 
+		where
+			<implode> concrete 	=> Ast(dconcrete) ;
+			<implode> uabstract => Ast(dabstract) ;
+			<implode> uconcrete => Ast(duconcrete) ;
+			<put(|lens)> (dabstract, dconcrete) => fconcrete ;
+			not (<equal> (fconcrete, duconcrete)) ;
+			 <write-to-string> fconcrete => failure 
+						
+			
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:15:40 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:15:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20929 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/trans
Message-ID: <201006021515.o52FFeOW028254@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:15:39 +0000 (Wed, 02 Jun 2010)
New Revision: 20929

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20929&view=rev

Added:
   lenses/trunk/Strategic Lenses/trans/semantics.str
Removed:
   lenses/trunk/Strategic Lenses/trans/semantics.str

Log:
correct support of single terms in tuples, rewriting for readibility in the paper

Changes:

Deleted: lenses/trunk/Strategic Lenses/trans/semantics.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/semantics.str	2010-06-02 15:15:10 UTC (rev 20928)
+++ lenses/trunk/Strategic Lenses/trans/semantics.str	2010-06-02 15:15:39 UTC (rev 20929)
@@ -1,209 +0,0 @@
-module semantics
-
-imports
-	include/StrategicLenses
-	libstratego-lib
-	libstratego-aterm
-	indices
-	signatures
-
-signature constructors
-
-	Ast: Term -> CModel
-	Ast: Term -> AModel
-	
-rules // Lens as parameter
-	get(|lens): c -> a 
-		where
-			<get> (lens, c) => a <+
-			(
-				!c => ""#([cc]) ;
-				<get> (lens, cc) => ac ;
-				!""#([ac]) => a
-			)
-			
-	put(|lens): (a, c) -> c' 
-		where
-			<put> (lens, a, c) => c' <+
-			(
-				!c => ""#([cc]) ;
-				!a => ""#([ac]) ;
-				<put> (lens, ac, cc) => cc' ; 
-				!""#([cc']) => c'
-			)
-			
-	create(|lens): a -> c 
-		where
-			<create> (lens, a) => c <+
-			(
-				!a => ""#([ac]) ;
-				<create> (lens, ac) => cc ;
-				!""#([cc]) => c 
-			)
-			
-rules // Identity
-	get: 	(Id(), c)		-> c
-	put: 	(Id(), a, c)	-> a //with <debug> "id put"; <debug> a; <debug> c
-	create:	(Id(), a)		-> a
-	
-rules // Composition
-	get:	(Comp(l1, l2), c)		-> <get(|l2)> <get(|l1)> c
-	put:	(Comp(l1, l2), a, c)	-> <put(|l1)> (<put(|l2)> (a, <get(|l1)> c), c)
-	create:	(Comp(l1, l2), a)		-> <create(|l1)> <create(|l2)> a
-
-rules // Matching lens
-	get:	(Match(l1, l2), c)		-> a where
-				//<type> l1 => (ct, at) ;
-				//<type> c => ct ;
-				<get(|l1)> c => a <+ 
-				<get(|l2)> c => a
-	put:	(Match(l1, l2), a, oc)	-> nc where
-				<put(|l1)> (a, oc) => nc <+
-				<put(|l2)> (a, oc) => nc <+
-				<create(|Match(l1, l2))> a => nc
-	create:	(Match(l1, l2), a)		-> c where
-				<create(|l1)> a => c <+
-				<create(|l2)> a => c
-
-rules // Hoist
-	get:	(Hoist(QFunctor(t, f)), f#(c*))		-> ""#(c*)	
-	put:	(Hoist(f), a, c)					-> <create(|Hoist(f))> a
-	create:	(Hoist(QFunctor(t, f)), ""#(c*))	-> f#(c*)
-	 
-rules // Plunge
-	get:	(Plunge(QFunctor(t, f)), ""#(c*))	-> f#(c*) 
-	put:	(Plunge(f), a, c)					-> <create(|Plunge(f))> a
-	create:	(Plunge(QFunctor(t, f)), f#(c*))	-> ""#(c*)
-
-rules // Single selection 
-	get:	(SSelect(i, d), ""#(c*))		-> <select-child> (i, c*)
-	put:	(SSelect(i, d), a, ""#(c*))		-> ""#(<update-child> (i, a, c*))
-	create:	(SSelect(i, Ast(""#(c*))), a)	-> ""#(<update-child> (i, a, c*))
-
-rules // Multiple selection
-	get:	(Select(i*, d), ""#(c*))				-> ""#(<select-children> (i*, c*)) 
-	put:	(Select(i*, d), ""#(a*), ""#(c*))		-> ""#(<update-children> (i*, a*, c*))
-	create:	(Select(i*, Ast(""#(c*))), ""#(a*))		-> ""#(<update-children> (i*, a*, c*))		
-		
-rules // Insertion
-	get:	(Insert(i, Ast(""#(c*))), c)	-> ""#(<update-child> (i, c, c*))
-	put:	(Insert(i, d), a, c)			-> <create(|Insert(i, d))> a
-	create:	(Insert(i, d), ""#(c*))			-> <select-child> (i, c*)
-	
-rules // Fork
-	get:	(Fork(b*), ""#(c*)) 			-> <dict-to-tuple> <mapconcat(getb(|c*))> b*							
-	put:	(Fork(b*), ""#(a*), ""#(c*)) 	-> <dict-to-tuple> <mapconcat(putb(|a*, c*))> b*
-	create:	(Fork(b*), ""#(a*))				-> <dict-to-tuple> <mapconcat(createb(|a*))> b*
-
-rules // Branches							
-	getb(|c*):		Branch(Indices(ci*), l, Indices(ai*))	-> d* where
-						<indices-to-tuple(|c*)> ci* => ct ;
-						<TupleToList><get(|l)> ct 	=> a* ;
-						<zip> (ai*, a*)				=> d*
-	
-	putb(|a*, c*):	Branch(Indices(ci*), l, Indices(ai*)) 	-> d* where
-						<indices-to-tuple(|a*)> ai* 	=> at ;
-						<indices-to-tuple(|c*)> ci* 	=> ct ;
-						<TupleToList><put(|l)> (at, ct) => c'* ;
-						<zip> (ci*, c'*)				=> d*
-				
-	createb(|a*):	Branch(Indices(ci*), l, Indices(ai*)) 	-> d* where
-						<indices-to-tuple(|a*)> ai* => at ;
-						<create(|l)> at 			=> ""#(c*) ;
-						<zip> (ci*, c*)				=> d*
-
-rules // map
-	get:	(Map(lens), concrete*) 				-> abstract* where
-				<map(get(|lens))> concrete* => abstract*
-	put:	(Map(lens), abstract*, concrete*)	-> concrete'* where
-				<zip(put(|lens))> (abstract*, concrete*) => concrete'* 
-	create:	(Map(lens), abstract*)				-> concrete* where
-				<map(create(|lens))> abstract* => concrete*
-					
-rules // new topdown
-	get: 	(TopDown(lens), concrete)	-> abstract where
-				( 
-					<get(|lens)> concrete => func#(temp_arg*) ;
-					<map(get(|TopDown(lens)))> temp_arg* => abstract_arg* ;
-					abstract := func#(abstract_arg*) 
-				) <+ abstract := concrete
-	
-	put:	(TopDown(lens), abstract, old_concrete) -> concrete where
-				
-				( 
-					<get(|lens)> old_concrete => old_abstract ;
-					!abstract 		=> func#(arg*) ;
-					!old_abstract	=> _#(old_arg*) ;
-					<map(put(|TopDown(lens)))> <zip> (arg*,old_arg*) => new_arg* ;
-					<put(|lens)> (func#(new_arg*), old_concrete) => concrete
-				) <+
-				concrete := abstract
-				
-	oldput:	(TopDown(lens), abstract, old_concrete) -> new_concrete where
-				(
-					<put(|lens)> (abstract, old_concrete) => func#(temp_arg*) ;
-					!old_concrete => _#(old_arg*) ;
-					<map(put(|TopDown(lens)))> <zip> (temp_arg*, old_arg*) => new_arg* ;
-					new_concrete := func#(new_arg*)
-				) <+
-				new_concrete := abstract
-				
-	create:	(TopDown(lens), abstract) -> concrete where
-				(
-					<create(|lens)> abstract => func#(arg*) ;
-					//<map(create(|TopDown(lens)))> arg* => concrete_arg* ;
-					concrete := func#(arg*) 
-				) <+ concrete := abstract
-				
-/*rules // TopDown
-	get: 	(TopDown(b*), c)	-> c where
-				<filter(get(|c))> b* => []
-	
-	get: 	(TopDown(b*), c)	-> a where
-				<filter(get(|c))> b* => [f#(a*)|_] ;
-				<map(get(|b*))> a* => aa* ;
-				!f#(aa*) => a
-	
-	put:	(TopDown(b*), a, c)	-> a where
-				<filter(put(|a, c))> b* => []
-	
-	put:	(TopDown(b*), a, c)	-> m where
-				<filter(put(|a, c))> b* => [f#(a*)|_] ;
-				!c ; ?_#(c*) ;
-				<map(put(|b*))> <zip> (a*, c*) => m* ;
-				!f#(m*) => m
-				
-	get(|c): 	TDBranch(FPattern(f1, v1*), FPattern(f2, v2*)) -> f2#(a2*) where
-					!c ; 
-					?f1#(a1*) ; 
-					<zip> (v1*, a1*) => dict ;
-					<map(elem-by-key(|dict))> v2* => a2*
-	
-	put(|a, c): TDBranch(FPattern(f1, v1*), FPattern(f2, v2*)) -> f1#(c2*) where
-					!a ; ?f2#(a2*) ; <zip> (v2*, a2*) => dicta ;
-					!c ; ?f1#(c1*) ; <zip> (v1*, c1*) => dictc ;
-					<map(elem-by-key(|dicta) <+ elem-by-key(|dictc))> v1* => c2*
-							
-	get(|b*): c -> <get> (TopDown(b*), c) 		
-	
-	put(|b*): (a, c) -> <put> (TopDown(b*), a, c)
-			
-	//get:	(TopDown(b*), c)	-> a where
-	//			c => a
-*/
-
-rules // User-defined
-	get: 	(LensRef(n), c)	-> a 
-		where
-			<GetLens> n => l ;
-			<get(|l)> c => a
-			
-	put: 	(LensRef(n), a, c)	-> c' 
-		where
-			<GetLens> n => l ;
-			<put(|l)> (a, c) => c'
-			
-	create:	(LensRef(n), a)		-> c
-		where
-			<GetLens> n => l ;
-			<create(|l)> a => c

Copied: lenses/trunk/Strategic Lenses/trans/semantics.str (from rev 20910, lenses/trunk/Strategic Lenses/trans/semantics.str)
===================================================================
--- lenses/trunk/Strategic Lenses/trans/semantics.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/semantics.str	2010-06-02 15:15:39 UTC (rev 20929)
@@ -0,0 +1,304 @@
+module semantics
+
+imports
+	include/StrategicLenses
+	libstratego-lib
+	libstratego-aterm
+	indices
+	analysis
+	simplecheck
+	tuples
+
+signature constructors
+
+	Ast: Term -> CModel
+	Ast: Term -> AModel
+	
+rules // Lens as parameter
+	get(|l): 	c -> <get> (l, c)  
+			
+	put(|l): 	(a, c) -> <put> (l, a, c) 
+	
+	create(|l): a -> <create> (l, a)
+	
+rules // Identity
+	get: 	(Id(), c) -> c
+
+	put: 	(Id(), a, c) -> a
+	
+	create:	(Id(), a) -> a
+	
+rules // Composition
+	get:	(Comp(l1, l2), c) -> a
+				where
+					<get> (l1, c) 	=> t ;
+					<get> (l2, t) 	=> a 
+						
+	put:	(Comp(l1, l2), a, c) -> c'
+				where
+					<get> (l1, c) 		=> tc ;
+					<put> (l2, a, tc)	=> ta ;
+					<put> (l1, ta, c)	=> c' 
+					
+	create:	(Comp(l1, l2), a) -> c
+				where
+					<create> (l2, a) => t ;
+					<create> (l1, t) => c
+
+rules // Matching lens
+	get:	(Match(l1, l2), c) -> a 
+				where	
+					<get> (l1, c) => a <+ <get> (l2, c) => a
+				
+				/*<cmatch> (l1, c) 
+					<	<get> (l1, c) => a 
+					+	<get> (l2, c) => a*/
+				
+	put:	(Match(l1, l2), a, c) -> c' 
+				where
+					<put> (l1, a, c) => c' <+
+					<put> (l2, a, c) => c' 
+					
+					/*
+					<cmatch> (l1, c) 
+						< (	<amatch> (l1, a)
+								<	<put> (l1, a, c) => c'
+								+	<create> (l2, a) => c'
+						)
+						+ ( <amatch> (l2, a)
+								<	<put(|l2)> (a, c) => c'
+								+	<create> (l1, a) => c'
+						)*/
+					
+	create:	(Match(l1, l2), a) -> c 
+				where
+				<amatch> (l1, a)
+					< 	<create(|l1)> a => c
+					+	<create(|l2)> a => c
+
+rules // Hoist
+	get:	(Hoist(QFunctor(_, f)), c) -> a
+				where
+					<explode-term> c 	=> (f, as) ;
+					<list-to-tuple> as 	=> a		
+
+	put:	(Hoist(qf), a, _) -> c
+				where
+					<create> (Hoist(qf), a) => c				
+
+	create:	(Hoist(QFunctor(_, f)), a) -> c
+				where
+					<tuple-to-list> a 	=> as ;
+					<mkterm> (f, as) 	=> c
+			 
+rules // Plunge
+	get:	(Plunge(QFunctor(_, f)), c) -> a
+				where
+					<tuple-to-list> c 	=> as ;
+					<mkterm> (f, as) 	=> a
+
+	put:	(Plunge(qf), a, _)	-> c
+				where
+					<create> (Plunge(qf), a) => c
+					
+	create:	(Plunge(QFunctor(_, f)), a) -> c
+				where
+					<explode-term> a 	=> (f, as) ;
+					<list-to-tuple> as 	=> c
+
+rules // Single selection 
+	get:	(SSelect(i, _), c) -> a
+				where
+					<tuple-to-list> c 		=> cs ;
+					<select-child> (i, cs)	=> a
+					
+	put:	(SSelect(i, _), a, c)	-> c'
+				where
+					<tuple-to-list> c 			=> cs ;
+					<update-child> (i, a, cs) 	=> cs' ;
+					<list-to-tuple> cs' 		=> c'
+					
+	create:	(SSelect(i, Ast(d)), a) -> c
+				where
+					<tuple-to-list> d 			=> ds ;
+					<update-child> (i, a, ds) 	=> cs ;
+					<list-to-tuple> cs	 		=> c
+				
+rules // Multiple selection
+	get:	(Select(is, _), c) -> a
+				where
+					<tuple-to-list> c			=> cs ;
+					<select-children> (is, cs)	=> as ;
+					<list-to-tuple> as			=> a
+	
+	put:	(Select(is, _), a, c) -> c'
+				where
+					<tuple-to-list> a 				=> as ;
+					<tuple-to-list> c 				=> cs ;
+					<update-children> (is, as, cs) 	=> cs' ;
+					<list-to-tuple> cs'			 	=> c' 
+					
+	create:	(Select(is, Ast(d)), a) -> c		
+				where
+					<tuple-to-list> a 				=> as ;
+					<tuple-to-list> d 				=> ds ;
+					<update-children> (is, as, ds) 	=> cs ;
+					<list-to-tuple> cs	 			=> c
+					 
+rules // Insertion
+	get:	(Insert(i, Ast(""#(cs))), c)	-> ""#(<update-child> (i, c, cs))
+	put:	(Insert(i, d), a, c)			-> <create(|Insert(i, d))> a
+	create:	(Insert(i, d), ""#(cs))			-> <select-child> (i, cs)
+	
+rules // Fork
+	get:	(Fork(bs), c) -> a
+				where
+					<tuple-to-list> c 			=> cs ;
+					<mapconcat(bget(|cs))> bs 	=> dict ;
+					<dict-to-tuple> dict 		=> a
+					
+	put:	(Fork(bs), a, c) -> c'
+				where
+					<tuple-to-list> c				=> cs ;
+					<tuple-to-list> a				=> as ;
+					<mapconcat(bput(|as, cs))> bs	=> dict ;
+					<dict-to-tuple> dict			=> c'
+					
+	create:	(Fork(bs), a) -> c
+				where
+					<tuple-to-list> a 				=> as ;
+					<mapconcat(bcreate(|as))> bs	=> dict ;
+					<dict-to-tuple> dict			=> c
+
+rules // Branches							
+	bget(|cs):		Branch(Indices(cis), l, Indices(ais)) -> dict 
+						where
+							<indices-to-tuple> (cis, cs) 	=> c ;
+							<get> (l, c)					=> a ;
+							<tuple-to-list> a				=> as ;
+							<zip> (ais, as)					=> dict
+				
+	bput(|as, cs):	Branch(Indices(cis), l, Indices(ais)) -> dict
+						where
+							<indices-to-tuple> (ais, as) 	=> a ;
+							<indices-to-tuple> (cis, cs)	=> c ;
+							<put> (l, a, c) 				=> c' ;
+							<tuple-to-list> c'				=> cs' ;
+							<zip> (cis, cs')				=> dict
+						
+	bcreate(|as):	Branch(Indices(cis), l, Indices(ais)) -> dict
+						where
+							<indices-to-tuple> (ais, as)	=> a ;
+							<create> (l, a) 				=> c ;
+							<tuple-to-list> c				=> cs ;
+							<zip> (cis, cs)					=> dict
+
+rules // map
+	get:	(Map(lens), cs) -> as 
+				where
+					<map(get(|lens))> cs => as
+		
+	put:	(Map(lens), as, cs)	-> cs' 
+				where
+					<zip(put(|lens))> (as, cs) => cs'
+					 
+	create:	(Map(lens), as)	-> cs 
+				where
+					<map(create(|lens))> as => cs
+						
+rules // new topdown
+	get:	(TopDown(l), c)	-> a'
+				where
+					( 
+						<get(|l)> c => a  <+ <id> c => a
+					) ; 
+					<explode-term> a 			=> (f, as) ;
+					<map(get(|TopDown(l)))> as 	=> as' ;
+					<mkterm> (f, as')			=> a' 
+		
+	put:	(TopDown(l), a, c) -> c' 
+				where	
+					( 
+						<get(|l)> c => a' <+ <id> a => a'
+					);
+					<explode-term>	a						=> (f, as) ;
+					<explode-term>	a'						=> (f, as') ;
+					<map(put(|TopDown(l)))> <zip> (as, as') => as'' ;
+					<mkterm> (f, as'') 						=> a'' ;
+					(
+						<put(|l)> (a'', c) => c' <+ <id> a'' => c'
+					) ;
+					<debug> c'
+					
+	create:	(TopDown(l), a) -> c 
+				where
+					(
+						<create(|l)> a 		=> c ;
+						<explode-term> c	=> (f, as)
+						//<map(create(|TopDown(l)))> as => cs ;
+						 
+					) <+ 
+					<id> a => c
+	
+	oldput:	(TopDown(lens), a, old_c) -> new_c where
+				(
+					<put(|lens)> (a, old_c) => func#(temp_arg*) ;
+					!old_c => _#(old_arg*) ;
+					<map(put(|TopDown(lens)))> <zip> (temp_arg*, old_arg*) => new_arg* ;
+					new_c := func#(new_arg*)
+				) <+
+				new_c := a
+				
+					
+/*rules // TopDown
+	get: 	(TopDown(b*), c)	-> c where
+				<filter(get(|c))> b* => []
+	
+	get: 	(TopDown(b*), c)	-> a where
+				<filter(get(|c))> b* => [f#(as)|_] ;
+				<map(get(|b*))> as => aas ;
+				!f#(aas) => a
+	
+	put:	(TopDown(b*), a, c)	-> a where
+				<filter(put(|a, c))> b* => []
+	
+	put:	(TopDown(b*), a, c)	-> m where
+				<filter(put(|a, c))> b* => [f#(as)|_] ;
+				!c ; ?_#(cs) ;
+				<map(put(|b*))> <zip> (as, cs) => m* ;
+				!f#(m*) => m
+				
+	get(|c): 	TDBranch(FPattern(f1, v1*), FPattern(f2, v2*)) -> f2#(a2*) where
+					!c ; 
+					?f1#(a1*) ; 
+					<zip> (v1*, a1*) => dict ;
+					<map(elem-by-key(|dict))> v2* => a2*
+	
+	put(|a, c): TDBranch(FPattern(f1, v1*), FPattern(f2, v2*)) -> f1#(c2*) where
+					!a ; ?f2#(a2*) ; <zip> (v2*, a2*) => dicta ;
+					!c ; ?f1#(c1*) ; <zip> (v1*, c1*) => dictc ;
+					<map(elem-by-key(|dicta) <+ elem-by-key(|dictc))> v1* => c2*
+							
+	get(|b*): c -> <get> (TopDown(b*), c) 		
+	
+	put(|b*): (a, c) -> <put> (TopDown(b*), a, c)
+			
+	//get:	(TopDown(b*), c)	-> a where
+	//			c => a
+*/
+
+rules // User-defined
+	get: 	(LensRef(n), c)	-> a 
+				where
+					<GetLens> n 	=> l ;
+					<get> (l, c) 	=> a
+					
+	put: 	(LensRef(n), a, c) -> c' 
+				where
+					<GetLens> n 	=> l ;
+					<put> (l, a, c) => c'
+					
+	create:	(LensRef(n), a) -> c
+				where
+					<GetLens> n 	=> l ;
+					<create> (l, a) => c


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:16:21 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:16:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20930 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/trans
Message-ID: <201006021516.o52FGLT5028261@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:16:21 +0000 (Wed, 02 Jun 2010)
New Revision: 20930

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20930&view=rev

Added:
   lenses/trunk/Strategic Lenses/trans/simplecheck.str
Removed:
   lenses/trunk/Strategic Lenses/trans/simplecheck.str

Log:
diff works again

Changes:

Deleted: lenses/trunk/Strategic Lenses/trans/simplecheck.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/simplecheck.str	2010-06-02 15:15:39 UTC (rev 20929)
+++ lenses/trunk/Strategic Lenses/trans/simplecheck.str	2010-06-02 15:16:21 UTC (rev 20930)
@@ -1,121 +0,0 @@
-module simplecheck
-
-imports
-	include/StrategicLenses
-	libstratego-lib
-	semantics
-	signatures
-	indices
-	pp
-	desugar
-	
-rules
-	
-	type-error: 
-		LensDef(tc, n, ta, l) -> (tc, $[Left-hand side of lens [n] is of type [<pp-safe> tc'].])
-			where
-				<type-of> <desugar> l => (tc', ta') ;
-				not (<id> tc' => tc)
-	
-	type-error: 
-		LensDef(tc, n, ta, l) -> (ta, $[Right-hand side of lens [n] is of type [<pp-safe> ta'].])
-			where
-				<type-of> <desugar> l => (tc', ta') ;
-				not (<id> ta' => ta)
-	
-rules
-	
-	type-of: Id() -> (TypeVar(x), TypeVar(x))
-		where
-			<new> "x" => x
-
-	type-of: Comp(l1, l2) -> (tc, ta)
-		where
-			<type-of> l1 => (tc1, ta1) ;
-			<type-of> l2 => (tc2, ta2) ;
-			<match> (ta1, tc2) => binding ;
-			<bind(|binding)> tc1 => tc ;
-			<bind(|binding)> ta2 => ta
-			
-	type-of: Match(l1, l2) -> (tc, ta)
-		where
-			<type-of> l1 => (tc1, ta1) ;
-			<type-of> l2 => (tc2, ta2) ;
-			<simplify> <union> (tc1, tc2) => tc ;
-			<simplify> <union> (ta1, ta2) => ta
-	
-	type-of: Plunge(QFunctor(t, f)) -> (tc, ta)
-		with
-			<bagof-GetFunctor> (t, f) => tas ;
-			<map(anonymous)> tas => tcs ;
-			<simplify> tas => ta ;
-			<simplify> tcs => tc 
-			
-	type-of: Hoist(QFunctor(t, f)) -> (tc, ta)
-		where
-			<bagof-GetFunctor> (t, f) => tcs ;
-			<map(anonymous)> tcs => tas ;
-			<simplify> tas => ta ;
-			<simplify> tcs => tc 
-			
-	type-of: Select(i, cm) -> (tc, ta)
-		where
-			<type-of> cm => tc ;
-			<id> tc => ta
-	
-	type-of: Fork(bs) -> (Functor("", tcs), Functor("", tas))
-		where
-			<mapconcat(type-of-branch;Fst)> bs => dtcs ;
-			<mapconcat(type-of-branch;Snd)> bs => dtas ;
-			<dict-to-list> dtcs => tcs ;
-			<dict-to-list> dtas => tas
-			
-	type-of-branch: Branch(ci, lens, ai) -> (tc, ta)
-		where
-			<type-of> lens => (Functor("", tcs), Functor("", tas)) ;
-			<zip> (ci, tcs) => tc ;
-			<zip> (ai, tas) => ta
-	
-	type-of: Map(l) -> (GenericType("List", tc), GenericType("List", ta))
-		where
-			<type-of> l => (tc, ta)
-				
-	type-of: Ast(f#(cs)) -> Functor(f, ts)
-		where
-			<map(type-of-helper)> cs => ts
-	
-	type-of-helper: Ast(ast) -> t
-		where
-			<type-of> ast => Functor(f, ts) ;
-			<GetSort> Functor(f, ts) => t
-			
-	anonymous: Functor(f, ts) -> Functor("", ts)
-						
-	
-	match: (TypeVar(x), SimpleType(y)) -> (x, SimpleType(y))
-	
-	bind(|binding) = topdown(try(apply-binding(|binding)))
-	
-	simplify = try(simplify-local3 <+ simplify-local2 <+ simplify-local1)
-	
-	simplify-local1: [t] -> <simplify> t
-	simplify-local2: Functor("", [t]) -> t
-	
-	simplify-local3: ts -> <simplify> [t|rts]
-		where
-			<fetch-elem(?f)> ts ;
-			<GetSort> f => t ;
-			<bagof-GetConstructor> t => cs ;
-			<subseteq> (cs, ts) ;
-			<diff> (ts, cs) => rts
-		
-	apply-binding(|binding): TypeVar(x) -> t
-		where
-			<fetch-elem(?(x, _))> binding => (x, t)
-			
-	type_of: (t, Id()) -> t
-	
-	type_of: (t1, Comp(l1, l2)) -> t3
-		where
-			<type_of> (t1, l1) => t2 ;
-			<type_of> (t2, l2) => t3	
\ No newline at end of file

Copied: lenses/trunk/Strategic Lenses/trans/simplecheck.str (from rev 20910, lenses/trunk/Strategic Lenses/trans/simplecheck.str)
===================================================================
--- lenses/trunk/Strategic Lenses/trans/simplecheck.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/simplecheck.str	2010-06-02 15:16:21 UTC (rev 20930)
@@ -0,0 +1,126 @@
+module simplecheck
+
+imports
+	include/StrategicLenses
+	libstratego-lib
+	semantics
+	analysis
+	indices
+	pp
+	desugar
+	
+rules
+	
+	type-error: 
+		LensDef(tc, n, ta, l) -> (tc, $[Left-hand side of lens [n] is of type [<pp-safe> tc'].])
+			where
+				<type-of> <desugar> l => (tc', ta') ;
+				not (<id> tc' => tc)
+	
+	type-error: 
+		LensDef(tc, n, ta, l) -> (ta, $[Right-hand side of lens [n] is of type [<pp-safe> ta'].])
+			where
+				<type-of> <desugar> l => (tc', ta') ;
+				not (<id> ta' => ta)
+
+strategies
+	
+	cmatch = id
+	amatch = id
+		
+rules
+	
+	type-of: Id() -> (TypeVar(x), TypeVar(x))
+		where
+			<new> "x" => x
+
+	type-of: Comp(l1, l2) -> (tc, ta)
+		where
+			<type-of> l1 => (tc1, ta1) ;
+			<type-of> l2 => (tc2, ta2) ;
+			<match> (ta1, tc2) => binding ;
+			<bind(|binding)> tc1 => tc ;
+			<bind(|binding)> ta2 => ta
+			
+	type-of: Match(l1, l2) -> (tc, ta)
+		where
+			<type-of> l1 => (tc1, ta1) ;
+			<type-of> l2 => (tc2, ta2) ;
+			<simplify> <unions> [tc1, tc2] => tc ;
+			<simplify> <unions> [ta1, ta2] => ta
+	
+	type-of: Plunge(QFunctor(t, f)) -> (tc, ta)
+		with
+			<bagof-GetFunctor> (t, f) => tas ;
+			<map(anonymous)> tas => tcs ;
+			<simplify> tas => ta ;
+			<simplify> tcs => tc 
+			
+	type-of: Hoist(QFunctor(t, f)) -> (tc, ta)
+		where
+			<bagof-GetFunctor> (t, f) => tcs ;
+			<map(anonymous)> tcs => tas ;
+			<simplify> tas => ta ;
+			<simplify> tcs => tc 
+			
+	type-of: Select(i, cm) -> (tc, ta)
+		where
+			<type-of> cm => tc ;
+			<id> tc => ta
+	
+	type-of: Fork(bs) -> (Functor("", tcs), Functor("", tas))
+		where
+			<mapconcat(type-of-branch;Fst)> bs => dtcs ;
+			<mapconcat(type-of-branch;Snd)> bs => dtas ;
+			<dict-to-list> dtcs => tcs ;
+			<dict-to-list> dtas => tas
+			
+	type-of-branch: Branch(ci, lens, ai) -> (tc, ta)
+		where
+			<type-of> lens => (Functor("", tcs), Functor("", tas)) ;
+			<zip> (ci, tcs) => tc ;
+			<zip> (ai, tas) => ta
+	
+	type-of: Map(l) -> (GenericType("List", tc), GenericType("List", ta))
+		where
+			<type-of> l => (tc, ta)
+				
+	type-of: Ast(f#(cs)) -> Functor(f, ts)
+		where
+			<map(type-of-helper)> cs => ts
+	
+	type-of-helper: Ast(ast) -> t
+		where
+			<type-of> ast => Functor(f, ts) ;
+			<GetSort> Functor(f, ts) => t
+			
+	anonymous: Functor(f, ts) -> Functor("", ts)
+						
+	
+	match: (TypeVar(x), SimpleType(y)) -> (x, SimpleType(y))
+	
+	bind(|binding) = topdown(try(apply-binding(|binding)))
+	
+	simplify = try(simplify-local3 <+ simplify-local2 <+ simplify-local1)
+	
+	simplify-local1: [t] -> <simplify> t
+	simplify-local2: Functor("", [t]) -> t
+	
+	simplify-local3: ts -> <simplify> [t|rts]
+		where
+			<fetch-elem(?f)> ts ;
+			<GetSort> f => t ;
+			<bagof-GetConstructor> t => cs ;
+			<subseteq> (cs, ts) ;
+			<diff> (ts, cs) => rts
+		
+	apply-binding(|binding): TypeVar(x) -> t
+		where
+			<fetch-elem(?(x, _))> binding => (x, t)
+			
+	type_of: (t, Id()) -> t
+	
+	type_of: (t1, Comp(l1, l2)) -> t3
+		where
+			<type_of> (t1, l1) => t2 ;
+			<type_of> (t2, l2) => t3	
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:16:47 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:16:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20931 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/trans
Message-ID: <201006021516.o52FGl2q028264@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:16:47 +0000 (Wed, 02 Jun 2010)
New Revision: 20931

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20931&view=rev

Modified:
   lenses/trunk/Strategic Lenses/trans/strategiclenses.str

Log:
union works again

Changes:

Modified: lenses/trunk/Strategic Lenses/trans/strategiclenses.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/strategiclenses.str	2010-06-02 15:16:21 UTC (rev 20930)
+++ lenses/trunk/Strategic Lenses/trans/strategiclenses.str	2010-06-02 15:16:47 UTC (rev 20931)
@@ -7,7 +7,7 @@
   lib/editor-common.generated
   run-tests
   desugar
-  signatures
+  analysis
   simplecheck
   pp
 
@@ -19,7 +19,7 @@
     (ast, path, project-path) -> (errors, [], [])
     with
 		editor-init;
-      	<analyze> ast ;
+		<analyse> ast ;
       	<collect-all(test-error, conc)> ast => errors1 ;
       	<collect-all(type-error, conc)> ast => errors2 ;
       	<union> (errors1, errors2) => errors
@@ -35,14 +35,14 @@
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       filename := <guarantee-extension(|"aterm")> path;
-      result   := <desugar> selected // we just return the input term
+      result   := selected //<desugar> selected 
 
   // Returns "hover help" information for a particular node in the editor.
   // For references, this rule is invoked using the resolved term.
   editor-hover:
     (target, position, ast, path, project-path) -> $[[<write-to-string> desugared]: [<pp-safe> tc] -> [<pp-safe> ta]] //
     	where
-    		<analyze> ast ;
+    		<analyse> ast ;
     		<desugar> target => desugared ;
     		<type-of> desugared => (tc, ta)
   
@@ -53,7 +53,6 @@
     where
       fail
 
-
  /* // Completes an identifier when the user presses control-space
   // (the completion identifier in the AST provides additional context information)
   editor-complete:


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:18:09 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:18:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20932 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/trans
Message-ID: <201006021518.o52FI9P2028269@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:18:09 +0000 (Wed, 02 Jun 2010)
New Revision: 20932

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20932&view=rev

Removed:
   lenses/trunk/Strategic Lenses/trans/run-trace-tests.str
   lenses/trunk/Strategic Lenses/trans/signatures.str
   lenses/trunk/Strategic Lenses/trans/testing.str
   lenses/trunk/Strategic Lenses/trans/trace-semantics.str
   lenses/trunk/Strategic Lenses/trans/typecheck.str

Log:
removed obsolete files

Changes:

Deleted: lenses/trunk/Strategic Lenses/trans/run-trace-tests.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/run-trace-tests.str	2010-06-02 15:16:47 UTC (rev 20931)
+++ lenses/trunk/Strategic Lenses/trans/run-trace-tests.str	2010-06-02 15:18:09 UTC (rev 20932)
@@ -1,63 +0,0 @@
-module run-trace-tests
-
-imports
-	libstratego-lib
-	include/StrategicLenses
-	lib/editor-common.generated
-	trace-semantics
-	desugar
-	
-rules
-
-	run-test: TGet(concrete, TLens(lens), abstract) -> (lens, $[Test for tget fails.]) where
-					<desugar> lens 		=> dlens ;
-					<desugar> concrete 	=> Ast(dconcrete) ;
-					<desugar> abstract 	=> Ast(dabstract) ;
-					not (<tget> (dlens, dconcrete, [dconcrete]))
-					
-	run-test: TGet(concrete, TLens(lens), abstract) -> (lens, $[Test for tget yields [failure].]) where
-					<desugar> lens 		=> dlens ;
-					<desugar> concrete 	=> Ast(dconcrete) ;
-					<desugar> abstract 	=> Ast(dabstract) ;
-					<tget> (dlens, dconcrete, [dconcrete]) => (fabstract, _) ;
-					not (<strip-annos> fabstract => dabstract) ;
-					<write-to-string> fabstract => failure
-					
-	run-test: TGetPut(concrete, TLens(lens), abstract) -> error where 
-					<run-test> TGet(concrete, TLens(lens), abstract) => error	
-								
-	run-test: TGetPut(concrete, TLens(lens), abstract) -> (lens, $[Test for put fails.]) where 
-					<desugar> lens 		=> dlens ;
-					<desugar> concrete 	=> Ast(dconcrete) ;
-					<desugar> abstract 	=> Ast(dabstract) ;
-					 <tget> (dlens, dconcrete) => (dabstract, trace) ;
-					 not ( <tput> (dlens, dabstract, trace))
-	
-	run-test: TGetPut(concrete, TLens(lens), abstract) -> (lens, $[Test for put yields [failure].]) where 
-					<desugar> lens 		=> dlens ;
-					<desugar> concrete 	=> Ast(dconcrete) ;
-					<desugar> abstract 	=> Ast(dabstract) ;
-					 <tget> (dlens, dconcrete) => (dabstract, trace) ;
-					 <tput> (dlens, dabstract, trace) => (fconcrete, _) ;
-					 not ( !fconcrete => dconcrete ) ;
-					 <write-to-string> fconcrete => failure
-	
-	run-test: TGetCreate(concrete, TLens(lens), abstract) -> error where 
-					<run-test> Get(concrete, TLens(lens), abstract) => error	
-								
-	run-test: TGetCreate(concrete, TLens(lens), abstract) -> error where 
-					<run-test> Create(concrete, TLens(lens), abstract) => error	
-	
-	run-test:	TCreate(concrete, TLens(lens), abstract) -> (lens, $[Test for create fails.]) where
-					<desugar> lens 		=> dlens ;
-					<desugar> concrete 	=> Ast(dconcrete) ;
-					<desugar> abstract 	=> Ast(dabstract) ;
-					not ( <tcreate> (dlens, dabstract) )
-					
-	run-test:	TCreate(concrete, TLens(lens), abstract) -> (lens, $[Test for create yields [failure].]) where
-					<desugar> lens 		=> dlens ;
-					<desugar> concrete 	=> Ast(dconcrete) ;
-					<desugar> abstract 	=> Ast(dabstract) ;
-					<tcreate> (dlens, dabstract) => fconcrete ;
-					not (!fconcrete => dconcrete) ;
-					 <write-to-string> fconcrete => failure 
\ No newline at end of file

Deleted: lenses/trunk/Strategic Lenses/trans/signatures.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/signatures.str	2010-06-02 15:16:47 UTC (rev 20931)
+++ lenses/trunk/Strategic Lenses/trans/signatures.str	2010-06-02 15:18:09 UTC (rev 20932)
@@ -1,33 +0,0 @@
-module signatures
-
-imports
-	libstratego-lib
-  	include/StrategicLenses
-  	lib/editor-common.generated
-  	desugar
-  
-strategies
-	analyze = topdown(try(record-signature <+ record-lens))
-
-rules	
-	record-signature: TypeDef(f, ts, t) -> TypeDef(f, ts, t)
-		with rules (
-			GetFunctor: (t, f) -> Functor(f, ts)
-		)
-		with rules (
-			GetFunctor: (Every(), f) -> Functor(f, ts)
-		)		
-		with rules (
-			GetSort: Functor(f, ts) -> t
-			) 
-		with rules (
-			GetConstructor: t -> Functor(f, ts)
-		)
-		
-rules
-	record-lens: LensDef(tc, name, ti, def) -> LensDef(tc, name, ti, def)
-		with 
-			<desugar> def => desugared 
-		with rules (
-			GetLens: name -> desugared
-		)
\ No newline at end of file

Deleted: lenses/trunk/Strategic Lenses/trans/testing.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/testing.str	2010-06-02 15:16:47 UTC (rev 20931)
+++ lenses/trunk/Strategic Lenses/trans/testing.str	2010-06-02 15:18:09 UTC (rev 20932)
@@ -1,25 +0,0 @@
-module testing
-
-imports
-	include/StrategicLenses
-	semantics
-	desugar
-	libstratego-lib
-	
-rules
-	runTest:	Module(_, s*)   -> r* where
-					<filter(runTest)> s* => r*
-	
-	runTest:	Tests(c*) -> Tests(c*) where
-					<map(runTest)> c* => c*
-							
-	runTest: 	GetPut(Ast(c), l, Ast(a)) -> GetPut(Ast(c), l, Ast(a)) where
-					<get> (l, c) => a ;
-					<put> (l, a, c) => c
-					
-	runTest:	Create(Ast(c), l, Ast(a)) -> Create(Ast(c), l, Ast(a)) where
-					<create> (l, a) => c
-					
-	runTest:	Desugar(l1, l2) -> Desugar(l1, l2) where
-					!l1 => l2 
-	
\ No newline at end of file

Deleted: lenses/trunk/Strategic Lenses/trans/trace-semantics.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/trace-semantics.str	2010-06-02 15:16:47 UTC (rev 20931)
+++ lenses/trunk/Strategic Lenses/trans/trace-semantics.str	2010-06-02 15:18:09 UTC (rev 20932)
@@ -1,167 +0,0 @@
-module trace-semantics
-
-imports
-	include/StrategicLenses
-	libstratego-lib
-	libstratego-aterm
-	semantics
-	
-signature constructors
-
-	: AModel -> Model
-	: CModel -> Model
-	Trace: List(Model) -> Trace
-	: List(Trace) -> Traces
-
-strategies
-	
-	annotate-IDs = topdown(try(annotate-ID))
-	
-rules
-	annotate-ID: 	term{anno*} -> term{("id", <newname> "id"), anno*} where
-						not (<fetch-elem(?("id", _))> anno*)
-
-	get-ID:			t{anno*}	-> <Snd> <fetch-elem(?("id", _))> anno*
-
-rules
-
-	trace-by-id(|ID):	Trace([h|t]) -> Trace([h|t]) where
-							<get-ID> h => ID
-							
-	get-trace:		(traces, model) -> <fetch-elem(trace-by-id(|<get-ID> model))> traces  
-
-	get-concrete = get-trace ; Tl ; Hd
-
-	update-trace(|c, a): 	Trace([c|t*]) -> Trace([a, c|t*])
-	update-trace(|a): 		Trace([a|t*]) -> Trace(t*)
-	
-	update-traces:	(traces, c, a) 	-> <map(try(update-trace(|c, a)))> traces
-	update-traces:	(traces, a) 	-> <map(try(update-trace(|a)))> traces
-
-
-rules // Lens as parameter
-	tget(|lens): 	c 		-> <tget> (lens, c, [c]) 
-	tput(|lens): 	(a, t) 	-> <tput> (lens, a, t)
-	tcreate(|lens):  a 		-> <tcreate> (lens, a)
-
-rules
-	tget:	(lens, c, traces) -> (a', traces'') where
-				<tget'> (lens, c, traces) 	=> (a, traces') ;
-				<annotate-IDs> a 			=> a' ;
-				<update-traces> (traces', c, a') => traces''
-	
-	tput:	(lens, a, traces) -> (c, traces'') where
-				<tput'> (lens, a, traces) 	=> (c, traces') ;
-				<update-traces> (traces', a) => traces''
-							
-rules // Identity
-	tget': 		(Id(), c, t)	-> (c, t)
-	tput': 		(Id(), a, t)	-> (a, t)
-	tcreate:	(Id(), a)		-> a
-	
-rules // Composition
-	tget':	(Comp(l1, l2), c, t)	-> (a, t'') where
-				<tget> (l1, c, t) 		=> (temp, t') ;
-				<tget> (l2, temp, t') 	=> (a, t'')				
-	tput':	(Comp(l1, l2), a, t)	-> (c, t'') where
-				<tput> (l2, a, t)		=> (temp, t') ;
-				<tput> (l1, temp, t')	=> (c, t'')
-	tcreate:	(Comp(l1, l2), a)	-> <tcreate> (l1, <tcreate> (l2, a))
-
-rules // Hoist
-	tget':		(Hoist(QFunctor(t, f)), f#(c*), traces)		-> (""#(c*), traces) 	
-	tput':		(Hoist(QFunctor(t, f)), ""#(c*), traces)	-> (f#(c*), traces)
-	tcreate:	(Hoist(QFunctor(t, f)), ""#(c*))			-> f#(c*)
-
-rules // Plunge
-	tget':		(Plunge(QFunctor(t, f)), ""#(c*), traces)	-> (f#(c*), traces)	
-	tput':		(Plunge(f), f#(c*), traces)					-> (""#(c*), traces)
-	tcreate:	(Plunge(QFunctor(t, f)), f#(c*))	-> ""#(c*)
-
-rules // Selection 
-	tget':		(Select(i, d), ""#(c*), traces)	-> (<select-child> (i, c*), traces)
-	tput':		(Select(i, d), a, traces)		-> (""#(<update-child> (i, a, c*)), traces) where
-					<TupleToList> <get-concrete> (traces, a) => c*
-	tcreate:	(Select(i, Ast(""#(c*))), a)	-> ""#(<update-child> (i, a, c*))
-		
-rules // Fork
-	tget':	(Fork(b*), ""#(c*), traces) 	-> (c*, traces) where //(a, traces') where
-				<mapconcat2(tget(|c*))> b* 	=> (dict, traces') //;
-				//<dict-to-tuple> dict 		=> a					
-	tput':	(Fork(b*), a, traces) 	-> (c, traces') where
-				<TupleToList> a						=> a* ;
-				<mapconcat2(tput(|a*, traces))> b* 	=> (dict, traces') ;
-				<dict-to-tuple> dict 				=> c
-	tcreate:	(Fork(b*), a)			-> c where
-				<TupleToList> a => a* ;
-				<mapconcat(tcreate(|a*))> b* => d ;
-				<dict-to-tuple> d => c
-
-	mapconcat2(s) = foldr(!([],[]), conc2, s)
-	
-	conc2 = id
-	conc3: (l1, l2) -> (<conc> l1, <conc> l2)
-
-rules // Branches							
-	tget(|c*):		Branch(Indices(ci*), l, Indices(ai*))	-> (ci*, []) where //(d*, traces) where
-						<indices-to-tuple(|c*)> ci* 		=> ctemp ;
-						<tget> (l, ctemp, [Trace([ctemp])]) => (a, traces) //;
-						//<ListToTuple> a 			=> a* ;
-						//<zip> (ai*, a*)				=> d*
-	
-	tput(|a*, traces):	Branch(Indices(ci*), l, Indices(ai*)) 	-> (dict, traces') where
-							<indices-to-tuple(|a*)> ai*	=> at ;
-							<tput> (l, at, traces) 		=> (c, traces') ;
-							<TupleToList> c				=> c* ;
-							<zip> (ci*, c*)				=> dict
-				
-	tcreate(|a*):	Branch(Indices(ci*), l, Indices(ai*)) 		-> d* where
-						<indices-to-tuple(|a*)> ai* => at ;
-						<tcreate> (l, at) 			=> c ;
-						<TupleToList> c				=> c* ;
-						<zip> (ci*, c*)				=> d*
-
-rules // map	
-	tget:	(Map(lens), concrete*, trace) 		-> (abstract*, [abstract*|trace]) where
-				<map(tget(|lens) ; Fst)> concrete* => abstract*
-	
-	tput:	(Map(lens), abstract'*, [abstract*, concrete*|trace])	-> (concrete'*, [concrete*|trace]) where
-				<TupleToList> <zip> (abstract*, concrete*) 	=> trace* ;
-				<map(get-ID)> abstract* 					=> id* ;
-				<zip> (id*, trace*)							=> dict ;
-				<map(tput(|lens, dict))> abstract'*			=> concrete'*
-	
-	tcreate:	(Map(lens), abstract*)				-> concrete* where
-				<map(tcreate(|lens))> abstract* => concrete*
-					
-	tput(|lens, dict):	abstract -> concrete where
-							<get-ID> abstract	 			=> ID ;
-							<lookup> (ID, dict)  			=> trace ;
-							<tput> (lens, abstract, trace) 	=> concrete <+
-							<tcreate> (lens, abstract)		=> concrete
-							
-	
-rules // new topdown
-	tget: 	(TopDown(lens), concrete)	-> abstract where
-				( 
-					<tget> (lens, concrete) => func#(temp_arg*) ;
-					<map(tget(|TopDown(lens)))> temp_arg* => abstract_arg* ;
-					abstract := func#(abstract_arg*) 
-				) <+ abstract := concrete
-	
-	tput:	(TopDown(lens), abstract, old_concrete) -> new_concrete where
-				(
-					<tput> (lens, abstract, old_concrete) => func#(temp_arg*) ;
-					!old_concrete => _#(old_arg*) ;
-					<map(tput(|TopDown(lens)))> <zip> (temp_arg*, old_arg*) => new_arg* ;
-					new_concrete := func#(new_arg*)
-				) <+
-				new_concrete := abstract
-				
-	tcreate:	(TopDown(lens), abstract) -> concrete where
-				(
-					<tcreate> (lens, abstract) => func#(temp_arg*) ;
-					<map(tcreate(|TopDown(lens)))> temp_arg* => concrete_arg* ;
-					concrete := func#(concrete_arg*) 
-				) <+ concrete := abstract
-				

Deleted: lenses/trunk/Strategic Lenses/trans/typecheck.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/typecheck.str	2010-06-02 15:16:47 UTC (rev 20931)
+++ lenses/trunk/Strategic Lenses/trans/typecheck.str	2010-06-02 15:18:09 UTC (rev 20932)
@@ -1,41 +0,0 @@
-module typecheck
-
-imports
-	include/StrategicLenses
-	libstratego-lib
-	semantics
-	
-rules
-	check(|lens): type -> <check> (lens, type)
-	check_select(|lens): type -> <check_select> (lens, type)
-	
-rules
-	
-	check: (Id(), type) -> type
-	
-	check: (Hoist(qf), Functor(qf, type*)) 	-> Tuple(type*)
-	check: (Hoist(qf), Union(ftype*)) 		-> Union(ttype*) where
-				<map(check(|Hoist(qf)))> ftype* => ttype*
-	
-	check: (Plunge(qf), Tuple(type*)) 	-> Functor(qf, type*)
-	check: (Plunge(qf), Union(ttype*)) 	-> Union(ftype*) where
-				<map(check(|Plunge(qf)))> ttype* => ftype*
-	
-	check: 	(Select(index, default), Tuple(type*)) -> type where
-				<check_select> (Select(index, default), Tuple(type*)) => type ;
-				<check> default => Tuple(type*)						
-	check: 	(Select(index, default), Union(ttype*)) -> Union(type*) where
-				<map(check_select(|Select(index, default)))> ttype* => type* ;
-				<check> default => Union(ttype*)
-	
-	check_select: 	(Select(index, default), Tuple(type*)) -> type where
-						<select-child> (index, type*) => type 
-	
-	check:  (Fork(branch*), Tuple(ctype*)) -> Tuple(atype*) where
-				<dict-to-list> <mapconcat(check(|ctype*))> branch* => atype* 
-				
-	check(|type*): 	Branch(cindex*, lens, aindex*) -> dict* where
-						<indices-to-tuple(|type*)> cindex* 	=> ctype* ;
-						<check> (lens, Tuple(ctype*)) 		=> Tuple(atype*) ;
-						<zip> (aindex*, atype*)				=> dict*	
-		
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:18:50 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:18:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20933 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/test
Message-ID: <201006021518.o52FIoJG028275@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:18:50 +0000 (Wed, 02 Jun 2010)
New Revision: 20933

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20933&view=rev

Removed:
   lenses/trunk/Strategic Lenses/test/TraceTestSuite.lns

Log:
moved all the trace stuff to backup

Changes:

Deleted: lenses/trunk/Strategic Lenses/test/TraceTestSuite.lns
===================================================================
--- lenses/trunk/Strategic Lenses/test/TraceTestSuite.lns	2010-06-02 15:18:09 UTC (rev 20932)
+++ lenses/trunk/Strategic Lenses/test/TraceTestSuite.lns	2010-06-02 15:18:50 UTC (rev 20933)
@@ -1,69 +0,0 @@
-module TraceTestSuite
-
-lenses
-
-	A < ourlens > B := id
-	
-tests
-
-	// test for get and put
-	ast a 	<+ trace id > 	ast a
-	
-	ast f(a, b) <+ trace hoist f > 			ast (a, b)
-	ast a(b)	<+ trace hoist a > 			ast (b)
-	
-	ast (a, b) 	<+ trace plunge f > 			ast f(a, b)
-	ast (a)		<+ trace plunge f > 			ast f(a)
-	ast (a(b))	<+ trace plunge f > 			ast f(a(b))
-	
-	ast (a, b)  <+ trace select 1 ast (a, b) > 	ast a
-	ast f(a, b) <+ trace select _.f(1) ast f(a, b) > 	ast a
-	
-	ast (a,b) <+ trace fork 1,2 < id > 1,2 > ast (a,b)
-	
-	ast (a, b, c, d) <+ 
-		trace fork 1 < id > 4 2 <id> 3 3 < id > 2 4 < id > 1  
-		>
-	ast (d, c, b, a)
-	
-	ast [a, b, c, d] <+ trace map id > ast [a, b, c, d]
-	ast [a(1, a), a(2, a), a(3, a), a(4, a)] <+ trace map select a(1) ast a(x, a) > ast [1, 2, 3, 4]
-	
-	failure 
-		ast [a, b, c] <+ trace map id < ast [a, c, b]
-	
-	ast a(b, c(d, e)) <+ trace topdown id > ast a(b, c(d, e))
-	ast ((a, b), ((c, d), e)) <+ trace topdown plunge f > ast f(f(a, b), f(f(c, d), e))
-	ast f(f(a, b), f(f(c, d), e)) <+ trace topdown hoist f > ast ((a, b), ((c, d), e))
-	ast a(b, c(a(d, e), f)) <+ trace topdown select _.a(2) ast a(b, x) > ast c(e, f)
-	
-	// test for create
-	ast f(a, b) < trace id > 	ast f(a, b)
-	
-	ast f(a, b) < trace hoist f > 			ast (a, b)
-	
-	ast (a, b) 	< trace plunge f > 			ast f(a, b)
-	
-	ast (a, b)  < trace select 1 ast (a, b) > ast a
-	
-	ast f(a, b)  < trace select f(1) ast f(a, b) > ast a
-	
-	ast [a(1, a), a(2, a), a(3, a), a(4, a)] < trace map select a(1) ast a(x, a) > ast [1, 2, 3, 4]
-	
-	ast a(b, c(d, e)) < trace topdown id > ast a(b, c(d, e))
-	
-	failure
-		ast ((a, b), ((c, d), e)) < trace topdown plunge f > ast f(f(a, b), f(f(c, d), e))
-	
-	failure
-		ast f(f(a, b), f(f(c, d), e)) < trace topdown hoist f > ast ((a, b), ((c, d), e))
-	
-	ast (f(a, b), f(f(c, d), e)) < trace topdown plunge f > ast f(f(a, b), f(f(c, d), e))
-	
-	ast f((a, b), ((c, d), e)) < trace topdown hoist f > ast ((a, b), ((c, d), e))
-	
-	ast a(b, c(e, f)) < trace topdown select _.a(2) ast a(b, x) > ast c(e, f)
-	
-	// test for desugaring
-	//select f(1) ast f(a,b) >=> hoist _.f ; select 1 ast (a,b)
-	hoist f >=> hoist _.f
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Wed Jun  2 17:29:12 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 02 Jun 2010 15:29:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20934 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/test
Message-ID: <201006021529.o52FTCBP028339@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-02 15:29:05 +0000 (Wed, 02 Jun 2010)
New Revision: 20934

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20934&view=rev

Modified:
   lenses/trunk/Strategic Lenses/test/TestSuite.lns

Log:
another test case

Changes:

Modified: lenses/trunk/Strategic Lenses/test/TestSuite.lns
===================================================================
--- lenses/trunk/Strategic Lenses/test/TestSuite.lns	2010-06-02 15:18:50 UTC (rev 20933)
+++ lenses/trunk/Strategic Lenses/test/TestSuite.lns	2010-06-02 15:29:05 UTC (rev 20934)
@@ -4,7 +4,10 @@
 	
 	lens select Property(1) p: int with
 	
-		ast Property(p, Type(e)) 
+		ast Property(p, Type(e))
 			> get > 
-		ast q 
-	
\ No newline at end of file
+		ast q
+	 
+	lens id with
+	
+		ast [a,b] > get > ast [d,e]
\ No newline at end of file


From L.C.L.Kats at tudelft.nl  Wed Jun  2 17:47:44 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 02 Jun 2010 15:47:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20935 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter
	org.strategoxt.imp.updatesite
Message-ID: <201006021547.o52Fli0h028450@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-02 15:47:44 +0000 (Wed, 02 Jun 2010)
New Revision: 20935

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20935&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Spoofax/146: Strings in lists are always equal

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-02 15:29:05 UTC (rev 20934)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-02 15:47:44 UTC (rev 20935)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.5"
+      version="0.5.1.2"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-02 15:29:05 UTC (rev 20934)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-02 15:47:44 UTC (rev 20935)
@@ -166,7 +166,8 @@
 		Debug.stopTimer("Loaded analysis components");
 		
 		monitor.subTask(null);
-		runtimePrototypes.put(descriptor, runtime);
+		if (runtime != null)
+			runtimePrototypes.put(descriptor, runtime);
 	}
 	
 	/**

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java	2010-06-02 15:29:05 UTC (rev 20934)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java	2010-06-02 15:47:44 UTC (rev 20935)
@@ -59,7 +59,7 @@
 
 	@Override
 	protected boolean doSlowMatch(IStrategoTerm second, int commonStorageType) {
-		return wrapped == second || wrapped.match(this);
+		return wrapped == second || wrapped.match(second);
 	}
 
 	@Override

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-02 15:29:05 UTC (rev 20934)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-02 15:47:44 UTC (rev 20935)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.5.0.jar" id="org.strategoxt.imp" version="0.5">
+   <feature url="features/org.strategoxt.imp_0.5.1.2.jar" id="org.strategoxt.imp" version="0.5.1.2">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">


From g.h.wachsmuth at tudelft.nl  Thu Jun  3 09:49:51 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 03 Jun 2010 07:49:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20936 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/trans
Message-ID: <201006030749.o537npDv010291@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-03 07:49:50 +0000 (Thu, 03 Jun 2010)
New Revision: 20936

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20936&view=rev

Removed:
   lenses/trunk/Strategic Lenses/trans/generate.str

Log:
removed old transformation from the Entity example

Changes:

Deleted: lenses/trunk/Strategic Lenses/trans/generate.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/generate.str	2010-06-02 15:47:44 UTC (rev 20935)
+++ lenses/trunk/Strategic Lenses/trans/generate.str	2010-06-03 07:49:50 UTC (rev 20936)
@@ -1,46 +0,0 @@
-module generate
-
-imports
-  libstratego-lib
-  libstratego-gpp
-  include/StrategicLenses
-  lib/editor-common.generated
-
-rules
-
-  to-java:
-    Module(x, d*) ->
-    $[ package [x];
-       
-       [d'*]
-     ]
-    with
-      d'* := <to-java> d*
-  
-  to-java:
-    Entity(x, p*) ->
-    $[ class [x] {
-           [p'*]
-       }
-     ]
-    with
-      p'* := <to-java> p*
-
-  to-java:
-    Property(x, Type(t)) -> $[
-      private [t] [x];
-      
-      public [t] get_[x] {
-          return [x];
-      }
-      
-      public [t] set_[x] ([t] [x]) {
-          this.[x] = [x];    
-      }
-  ]
-  
-  to-java:
-    Type(t) -> t
-
-  to-java:
-    t* -> <map(to-java)> t*


From g.h.wachsmuth at tudelft.nl  Thu Jun  3 10:18:52 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 03 Jun 2010 08:18:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20937 - GuidoWachsmuth
	- in lenses/trunk/Strategic Lenses: editor lib trans
	trans/analysis trans/helper trans/semantics
Message-ID: <201006030818.o538Iq4a010790@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-03 08:18:51 +0000 (Thu, 03 Jun 2010)
New Revision: 20937

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20937&view=rev

Added:
   lenses/trunk/Strategic Lenses/trans/analysis/
   lenses/trunk/Strategic Lenses/trans/analysis/main.str
   lenses/trunk/Strategic Lenses/trans/analysis/resolve.str
   lenses/trunk/Strategic Lenses/trans/analysis/tests.str
   lenses/trunk/Strategic Lenses/trans/analysis/typecheck.str
   lenses/trunk/Strategic Lenses/trans/helper/
   lenses/trunk/Strategic Lenses/trans/helper/indices.str
   lenses/trunk/Strategic Lenses/trans/helper/pp.str
   lenses/trunk/Strategic Lenses/trans/helper/tuples.str
   lenses/trunk/Strategic Lenses/trans/semantics/
   lenses/trunk/Strategic Lenses/trans/semantics/desugar.str
   lenses/trunk/Strategic Lenses/trans/semantics/semantics.str
Removed:
   lenses/trunk/Strategic Lenses/trans/analysis.str
   lenses/trunk/Strategic Lenses/trans/desugar.str
   lenses/trunk/Strategic Lenses/trans/indices.str
   lenses/trunk/Strategic Lenses/trans/pp.str
   lenses/trunk/Strategic Lenses/trans/run-tests.str
   lenses/trunk/Strategic Lenses/trans/semantics.str
   lenses/trunk/Strategic Lenses/trans/simplecheck.str
   lenses/trunk/Strategic Lenses/trans/tuples.str
Modified:
   lenses/trunk/Strategic Lenses/editor/StrategicLenses-Builders.esv
   lenses/trunk/Strategic Lenses/lib/editor-common.generated.str
   lenses/trunk/Strategic Lenses/trans/strategiclenses.str

Log:
reorganised file structure

Changes (first 1000 lines of the diffs):

Modified: lenses/trunk/Strategic Lenses/editor/StrategicLenses-Builders.esv
===================================================================
--- lenses/trunk/Strategic Lenses/editor/StrategicLenses-Builders.esv	2010-06-03 07:49:50 UTC (rev 20936)
+++ lenses/trunk/Strategic Lenses/editor/StrategicLenses-Builders.esv	2010-06-03 08:18:51 UTC (rev 20937)
@@ -13,7 +13,7 @@
                                                                                             
   provider : include/strategiclenses.ctree                                                  
                                                                                             
-  observer : editor-analyze                                                                 
+  observer : editor-analyse                                                                 
                                                                                             
   builder  : "Show abstract syntax"		= generate-aterm (openeditor) (realtime) (meta)  
   builder  : "Desugar"					= generate-desugared (openeditor) (realtime) (meta)  

Modified: lenses/trunk/Strategic Lenses/lib/editor-common.generated.str
===================================================================
--- lenses/trunk/Strategic Lenses/lib/editor-common.generated.str	2010-06-03 07:49:50 UTC (rev 20936)
+++ lenses/trunk/Strategic Lenses/lib/editor-common.generated.str	2010-06-03 08:18:51 UTC (rev 20937)
@@ -213,3 +213,35 @@
   Entity   : ID * List(Property) -> Entity
   Property : ID * Type           -> Property
   Type     : ID                  -> Type
+
+strategies
+  
+  // Set markers for a given file. Use when checking files from a queued strategy.
+  // Current term: (ast-desugared, errors, warnings, notes) tuple
+  // ast: the root node of the file to set markers on 
+  set-markers(|ast) = prim("SSL_EXT_set_markers", ast)
+
+  // Indicate that one or more files need analysis. 
+  // Current term: ss a list of absolute file paths, or a single absolute file path to analyze
+  queue-analysis = 
+       (is-list; list-loop(queue-analysis))
+    <+ prim("SSL_EXT_queue_analysis")
+
+  // Set the total number of work units to complete. Can be called multiple times. 
+  // Current term: number of work units (int).
+  set-total-work-units = prim("SSL_EXT_set_total_work_units")
+  
+  // Complete one work unit and update progress monitors.
+  // Current term: ignored
+  complete-work-unit = prim("SSL_EXT_complete_work_unit")
+  
+  // Queue a strategy for background processing with a progress indicator.
+  // Current term: the term to pass to the background strategy
+  // s: the strategy, as string
+  // description: name of the task (will be shown in progress view)
+  queue-strategy(|s,description) = prim("SSL_EXT_queue_strategy", s, description)
+  
+  // Return the result of this strategy to indicate a non-completed (backgrounded) analysis.
+  // Editor services (hover, resolve) will be delayed until a complete analysis is performed. 
+  set-analysis-backgrounded = !"BACKGROUNDED"
+  

Copied: lenses/trunk/Strategic Lenses/trans/analysis/main.str (from rev 20925, lenses/trunk/Strategic Lenses/trans/analysis.str)
===================================================================
--- lenses/trunk/Strategic Lenses/trans/analysis/main.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/analysis/main.str	2010-06-03 08:18:51 UTC (rev 20937)
@@ -0,0 +1,47 @@
+module analysis/main
+
+imports
+	lib/editor-common.generated
+  	include/StrategicLenses
+	analysis/typecheck
+	analysis/tests
+  	semantics/desugar
+  
+strategies
+	
+  editor-analyse:
+    (ast, path, project-path) -> (errors, [], [])
+    with
+		editor-init;
+		<analyse> ast ;
+      	<collect-all(test-error, conc)> ast => errors1 ;
+      	<collect-all(type-error, conc)> ast => errors2 ;
+      	<union> (errors1, errors2) => errors
+
+	analyse = topdown(try(record-signature <+ record-lens))
+
+rules	
+	record-signature: TypeDef(f, ts, t) -> TypeDef(f, ts, t)
+		with rules (
+			GetFunctor: (t, f) -> Functor(f, ts)
+		)
+		with rules (
+			GetFunctor: (Every(), f) -> Functor(f, ts)
+		)		
+		with rules (
+			GetSort: Functor(f, ts) -> t
+			) 
+		with rules (
+			GetConstructor: t -> Functor(f, ts)
+		)
+		
+rules
+	record-lens: LensDef(tc, name, ti, def) -> LensDef(tc, name, ti, def)
+		with 
+			<desugar> def => desugared 
+		with rules (
+			GetLens: name -> desugared
+		)
+		with rules (
+			GetLensDef: name -> name
+		)
\ No newline at end of file

Added: lenses/trunk/Strategic Lenses/trans/analysis/resolve.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/analysis/resolve.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/analysis/resolve.str	2010-06-03 08:18:51 UTC (rev 20937)
@@ -0,0 +1,12 @@
+module analysis/resolve
+
+imports
+	include/StrategicLenses
+	analysis/main
+	
+rules
+	
+	editor-resolve:
+		(LensRef(name), position, ast, path, project-path) -> def
+			where
+				<GetLensDef> name => def

Copied: lenses/trunk/Strategic Lenses/trans/analysis/tests.str (from rev 20928, lenses/trunk/Strategic Lenses/trans/run-tests.str)
===================================================================
--- lenses/trunk/Strategic Lenses/trans/analysis/tests.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/analysis/tests.str	2010-06-03 08:18:51 UTC (rev 20937)
@@ -0,0 +1,100 @@
+module tests
+
+imports
+	libstratego-lib
+	include/StrategicLenses
+	lib/editor-common.generated
+	semantics/semantics
+	semantics/desugar
+	
+rules
+	test-error: Case(l, tests) -> errors 
+		where 
+			<desugar> l => dl ;
+			<collect-all(test-error(|dl), conc)> tests => errors 
+			
+	test-error(|l): Success(t) -> error 
+		where
+			<run-test> (l, t) => error 
+	
+	test-error(|l): Failure(t) -> (t, $[Test yields no error.]) 
+		where
+			not(<run-test> (l, t))
+					
+	run-test: (lens, case at Get(concrete, abstract)) -> (case, $[Test for get fails.])
+		where
+			<implode> concrete 	=> Ast(dconcrete) ;
+			not (<get> (lens, dconcrete))
+					
+	run-test: (lens, case at Get(concrete, abstract)) -> (case, $[Test for get yields [failure].]) 
+		where
+			<implode> concrete 	=> Ast(dconcrete) ;
+			<implode> abstract 	=> Ast(dabstract) ;
+			<debug> "get" ;
+			<get(|lens)> dconcrete => fabstract ;
+			<debug> fabstract ;
+			<debug> dabstract ;
+			(<eq> (dabstract, fabstract) < <debug> "equal" + <debug> "unequal" ) ;
+			(<eq> (fabstract, dabstract) < <debug> "equal" + <debug> "unequal" ) ;
+			not (<eq> (dabstract, fabstract)) ;
+			<write-to-string> fabstract => failure 
+			
+	run-test: (lens, case at GetPut(concrete, abstract)) -> (case, error) 
+		where
+			<run-test> (lens, Get(concrete, abstract)) => (_, error)
+	
+	run-test: (lens, case at GetPut(concrete, abstract)) -> (case, $[Test for put fails.])
+	 	where
+			<implode> concrete 	=> Ast(dconcrete) ;
+			<implode> abstract 	=> Ast(dabstract) ;
+			not ( <put(|lens)> (dabstract, dconcrete))
+					
+	run-test: (lens, case at GetPut(concrete, abstract)) -> (case, $[Test for put yields [failure].]) 
+		where
+			<implode> concrete 	=> Ast(dconcrete) ;
+			<implode> abstract 	=> Ast(dabstract) ;
+			 <put(|lens)> (dabstract, dconcrete) => fconcrete ;
+			not (<equal> (fconcrete, dconcrete)) ;
+			 <write-to-string> fconcrete => failure 
+						
+	run-test: (lens, case at CreateGet(abstract, concrete)) -> (case, error) 
+		where 
+			<run-test> (lens, Get(concrete, abstract)) => (_, error)	
+							
+	run-test: (lens, case at CreateGet(abstract, concrete)) -> (case, error)
+		 where 
+			<run-test> (lens, Create(abstract, concrete)) => (_, error)	
+
+	run-test:	(lens, case at Create(abstract, concrete)) -> (case, $[Test for create fails.]) 
+		where
+			<implode> abstract 	=> Ast(dabstract) ;
+			not ( <create(|lens)> dabstract )
+					
+	run-test:	(lens, case at Create(abstract, concrete)) -> (case, $[Test for create yields [failure].]) 
+		where
+			<implode> concrete 	=> Ast(dconcrete) ;
+			<implode> abstract 	=> Ast(dabstract) ;
+			<create(|lens)> dabstract => fconcrete ;
+			not (<equal> (fconcrete, dconcrete)) ;
+			<write-to-string> fconcrete => failure 
+	
+	run-test:	(lens, case at GetUpdatePut(concrete, abstract, uabstract, uconcrete)) -> (case, error)
+		where
+			<run-test> (lens, Get(concrete, abstract)) => (_, error)
+	
+	run-test: (lens, case at GetUpdatePut(concrete, abstract, uabstract, uconcrete)) -> (case, $[Test for put fails.])
+	 	where
+			<implode> concrete 	=> Ast(dconcrete) ;
+			<implode> uabstract => Ast(dabstract) ;
+			not ( <put(|lens)> (dabstract, dconcrete))
+					
+	run-test: (lens, case at GetUpdatePut(concrete, abstract, uabstract, uconcrete)) -> (case, $[Test for put yields [failure].]) 
+		where
+			<implode> concrete 	=> Ast(dconcrete) ;
+			<implode> uabstract => Ast(dabstract) ;
+			<implode> uconcrete => Ast(duconcrete) ;
+			<put(|lens)> (dabstract, dconcrete) => fconcrete ;
+			not (<equal> (fconcrete, duconcrete)) ;
+			 <write-to-string> fconcrete => failure 
+						
+			
\ No newline at end of file

Copied: lenses/trunk/Strategic Lenses/trans/analysis/typecheck.str (from rev 20930, lenses/trunk/Strategic Lenses/trans/simplecheck.str)
===================================================================
--- lenses/trunk/Strategic Lenses/trans/analysis/typecheck.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/analysis/typecheck.str	2010-06-03 08:18:51 UTC (rev 20937)
@@ -0,0 +1,125 @@
+module analysis/typecheck
+
+imports
+	include/StrategicLenses
+	analysis/main
+	helper/indices
+	helper/pp
+	semantics/semantics
+	semantics/desugar
+	
+rules
+	
+	type-error: 
+		LensDef(tc, n, ta, l) -> (tc, $[Left-hand side of lens [n] is of type [<pp-safe> tc'].])
+			where
+				<type-of> <desugar> l => (tc', ta') ;
+				not (<id> tc' => tc)
+	
+	type-error: 
+		LensDef(tc, n, ta, l) -> (ta, $[Right-hand side of lens [n] is of type [<pp-safe> ta'].])
+			where
+				<type-of> <desugar> l => (tc', ta') ;
+				not (<id> ta' => ta)
+
+strategies
+	
+	cmatch = id
+	amatch = id
+		
+rules
+	
+	type-of: Id() -> (TypeVar(x), TypeVar(x))
+		where
+			<new> "x" => x
+
+	type-of: Comp(l1, l2) -> (tc, ta)
+		where
+			<type-of> l1 => (tc1, ta1) ;
+			<type-of> l2 => (tc2, ta2) ;
+			<match> (ta1, tc2) => binding ;
+			<bind(|binding)> tc1 => tc ;
+			<bind(|binding)> ta2 => ta
+			
+	type-of: Match(l1, l2) -> (tc, ta)
+		where
+			<type-of> l1 => (tc1, ta1) ;
+			<type-of> l2 => (tc2, ta2) ;
+			<simplify> <unions> [tc1, tc2] => tc ;
+			<simplify> <unions> [ta1, ta2] => ta
+	
+	type-of: Plunge(QFunctor(t, f)) -> (tc, ta)
+		with
+			<bagof-GetFunctor> (t, f) => tas ;
+			<map(anonymous)> tas => tcs ;
+			<simplify> tas => ta ;
+			<simplify> tcs => tc 
+			
+	type-of: Hoist(QFunctor(t, f)) -> (tc, ta)
+		where
+			<bagof-GetFunctor> (t, f) => tcs ;
+			<map(anonymous)> tcs => tas ;
+			<simplify> tas => ta ;
+			<simplify> tcs => tc 
+			
+	type-of: Select(i, cm) -> (tc, ta)
+		where
+			<type-of> cm => tc ;
+			<id> tc => ta
+	
+	type-of: Fork(bs) -> (Functor("", tcs), Functor("", tas))
+		where
+			<mapconcat(type-of-branch;Fst)> bs => dtcs ;
+			<mapconcat(type-of-branch;Snd)> bs => dtas ;
+			<dict-to-list> dtcs => tcs ;
+			<dict-to-list> dtas => tas
+			
+	type-of-branch: Branch(ci, lens, ai) -> (tc, ta)
+		where
+			<type-of> lens => (Functor("", tcs), Functor("", tas)) ;
+			<zip> (ci, tcs) => tc ;
+			<zip> (ai, tas) => ta
+	
+	type-of: Map(l) -> (GenericType("List", tc), GenericType("List", ta))
+		where
+			<type-of> l => (tc, ta)
+				
+	type-of: Ast(f#(cs)) -> Functor(f, ts)
+		where
+			<map(type-of-helper)> cs => ts
+	
+	type-of-helper: Ast(ast) -> t
+		where
+			<type-of> ast => Functor(f, ts) ;
+			<GetSort> Functor(f, ts) => t
+			
+	anonymous: Functor(f, ts) -> Functor("", ts)
+						
+	
+	match: (TypeVar(x), SimpleType(y)) -> (x, SimpleType(y))
+	
+	bind(|binding) = topdown(try(apply-binding(|binding)))
+	
+	simplify = try(simplify-local3 <+ simplify-local2 <+ simplify-local1)
+	
+	simplify-local1: [t] -> <simplify> t
+	simplify-local2: Functor("", [t]) -> t
+	
+	simplify-local3: ts -> <simplify> [t|rts]
+		where
+			<fetch-elem(?f)> ts ;
+			<GetSort> f => t ;
+			<bagof-GetConstructor> t => cs ;
+			<subseteq> (cs, ts) ;
+			<diff> (ts, cs) => rts
+		
+	apply-binding(|binding): TypeVar(x) -> t
+		where
+			<fetch-elem(?(x, _))> binding => (x, t)
+			
+	type_of: (t, Id()) -> t
+	
+	type_of: (t1, Comp(l1, l2)) -> t3
+		where
+			<type_of> (t1, l1) => t2 ;
+			<type_of> (t2, l2) => t3	
\ No newline at end of file

Deleted: lenses/trunk/Strategic Lenses/trans/analysis.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/analysis.str	2010-06-03 07:49:50 UTC (rev 20936)
+++ lenses/trunk/Strategic Lenses/trans/analysis.str	2010-06-03 08:18:51 UTC (rev 20937)
@@ -1,33 +0,0 @@
-module analysis
-
-imports
-	libstratego-lib
-  	include/StrategicLenses
-  	lib/editor-common.generated
-  	desugar
-  
-strategies
-	analyse = topdown(try(record-signature <+ record-lens))
-
-rules	
-	record-signature: TypeDef(f, ts, t) -> TypeDef(f, ts, t)
-		with rules (
-			GetFunctor: (t, f) -> Functor(f, ts)
-		)
-		with rules (
-			GetFunctor: (Every(), f) -> Functor(f, ts)
-		)		
-		with rules (
-			GetSort: Functor(f, ts) -> t
-			) 
-		with rules (
-			GetConstructor: t -> Functor(f, ts)
-		)
-		
-rules
-	record-lens: LensDef(tc, name, ti, def) -> LensDef(tc, name, ti, def)
-		with 
-			<desugar> def => desugared 
-		with rules (
-			GetLens: name -> desugared
-		)
\ No newline at end of file

Deleted: lenses/trunk/Strategic Lenses/trans/desugar.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/desugar.str	2010-06-03 07:49:50 UTC (rev 20936)
+++ lenses/trunk/Strategic Lenses/trans/desugar.str	2010-06-03 08:18:51 UTC (rev 20937)
@@ -1,64 +0,0 @@
-module desugar
-
-imports
-	include/StrategicLenses
-	libstratego-lib
-	libstratego-aterm
-	indices
-	
-strategies
-
-	desugar = topdown(try(desugar-local)) 
-	implode = topdown(try(implode-local))
-	
-rules
-	implode-local: ATerm(t)	-> Ast(<implode-aterm> t)
-	desugar-local: ATerm(t)	-> Ast(<implode-aterm> t)
-
-rules // typeless functor
-	desugar-local: Functor(f) -> QFunctor(Every(), f)
-	
-rules // select with functor
-	desugar-local: 	FSelect(qf, i*, d) 	-> Comp(Hoist(qf), Select(i*, Ast(""#(c*)))) 
-		where
-			<desugar> d => Ast(f#(c*)) 
-	
-rules // select deep pathes
-	desugar-local: 	PSelect([Segment(qf, i)], d)		-> Comp(Hoist(qf), SSelect(i, Ast(""#(c*)))) where
-						<desugar> d => Ast(f#(c*)) 
-				
-	desugar-local: 	PSelect([Segment(qf, i),s|s*], Ast(f#(c*)))	-> Comp(lens1, lens2) with
-						lens1 := Comp(Hoist(qf), SSelect(i, Ast(Ast(""#(c*))))) ;
-						lens2 := PSelect([s|s*], <select-child> (i, c*))
-
-rules // list lenses	
-	desugar-local: 	Hd(d*)	-> SSelect(Segment(QFunctor("List", "Cons"), 1), [1|d*])
-	desugar-local: 	Tl(d)	-> SSelect(Segment(QFunctor("List", "Cons"), 2), [d])
-
-rules // fork with functor patterns	
-	desugar-local: PFork(FPattern(f, cv*), ap, b*)	-> Comp(Hoist(f), PFork(TPattern(cv*), ap, b*))
-	desugar-local: PFork(cp, FPattern(f, av*), b*)	-> Comp(PFork(TPattern(av*), cp, b*), Plunge(f))
-
-rules // branch with functor patterns	
-	desugar-local: PBranch(FPattern(f, cv*), l, ap)	-> PBranch(TPattern(cv*), Comp(Plunge(f), l), ap)
-	desugar-local: PBranch(cp, l, FPattern(f, cv*))	-> PBranch(cp, Comp(l, Hoist(f)), TPattern(cv*))
-
-rules // fork/branches with patterns	
-	desugar-local: PFork(cp, ap, bs) -> Fork(bs') 
-						where
-							<vars> cp => cvs ;
-							<vars> ap => avs ;
-							<map(desugar-branch(|cvs, avs))> bs => bs'
-
-	desugar-branch(|cvs, avs): 	PBranch(cp, l, ap) -> Branch(Indices(cis), l, Indices(ais)) 
-									with
-										<vars> cp => bcvs ;
-										<vars> ap => bavs ;
-										<map(get-index(|cvs))> bcvs => cis ;
-										<map(get-index(|avs))> bavs	=> ais
-		
-	get-index(|e*):	e 	-> <int-to-string> <get-index> (e, e*)
-			
-	vars: TPattern(vs) -> vs
-	vars: SPattern(v) -> [v]
-	

Copied: lenses/trunk/Strategic Lenses/trans/helper/indices.str (from rev 20927, lenses/trunk/Strategic Lenses/trans/indices.str)
===================================================================
--- lenses/trunk/Strategic Lenses/trans/helper/indices.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/helper/indices.str	2010-06-03 08:18:51 UTC (rev 20937)
@@ -0,0 +1,38 @@
+module helper/indices
+
+imports
+	helper/tuples
+
+rules 
+	elem-by-key(|d*):	i 	-> <lookup> (<int-to-string> i, d*) 
+	elem-by-index(|e*): i 	-> <index> (<string-to-int> i, e*)
+	
+strategies
+	dict-to-list =
+		?d* ; length ; upto ; Tl ; 
+		map(elem-by-key(|d*))
+	
+	dict-to-tuple =
+		dict-to-list ; list-to-tuple
+	
+	indices-to-list(|e*) = 
+		map(elem-by-index(|e*)) 
+			
+	indices-to-tuple(|e*) = 
+		indices-to-list(|e*) ; list-to-tuple 
+
+rules
+	indices-to-tuple: (is, es) -> <indices-to-tuple(|es)> is
+	
+rules // Child Selection/Update
+	select-child:	(i, c*)		-> <index> (<string-to-int> i, c*) 
+	update-child: 	(i, u, c*)	-> <set-index> (<dec><string-to-int> i, u, c*)
+
+rules
+	select-child(|c*): 	i 				-> <select-child> (i, c*)
+	update-child: 		((i, u), c*) 	-> <update-child> (i, u, c*) //where <debug> (c*, (i, u))
+
+rules
+	select-children: 	(i*, c*) 		-> <map(select-child(|c*))> i*
+	update-children: 	(i*, u*, c*)	-> <foldr(!c*, update-child)> <zip> (i*, u*)
+	
\ No newline at end of file

Copied: lenses/trunk/Strategic Lenses/trans/helper/pp.str (from rev 20927, lenses/trunk/Strategic Lenses/trans/pp.str)
===================================================================
--- lenses/trunk/Strategic Lenses/trans/helper/pp.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/helper/pp.str	2010-06-03 08:18:51 UTC (rev 20937)
@@ -0,0 +1,23 @@
+module helper/pp
+
+imports
+	include/StrategicLenses
+	
+rules
+	
+	pp-safe = pp <+ write-to-string
+	
+	pp: Functor(f, ts) -> $[[f]: [<lpp(|" * ")> ts]]
+	
+	pp: SimpleType(t) -> t
+	
+	pp: GenericType(t, ts) -> $[t([<lpp(|", ")> ts])]
+	
+	pp: TypeVar(v) -> v
+	
+	lpp(|s): [] -> $[]
+	
+	lpp(|s): [e] -> <pp> e
+	
+	lpp(|s): [e1, e2|e*] -> $[[<pp> e1][s][<lpp(|s)>[e2|e*]]]
+	
\ No newline at end of file

Copied: lenses/trunk/Strategic Lenses/trans/helper/tuples.str (from rev 20927, lenses/trunk/Strategic Lenses/trans/tuples.str)
===================================================================
--- lenses/trunk/Strategic Lenses/trans/helper/tuples.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/helper/tuples.str	2010-06-03 08:18:51 UTC (rev 20937)
@@ -0,0 +1,10 @@
+module helper/tuples
+
+rules
+	
+	tuple-to-list: ""#(as) 	-> as
+	tuple-to-list: t 		-> [t] where not (<is-tuple> t)
+	
+	list-to-tuple: [t]			-> t
+	list-to-tuple: as@[_, _|_] 	-> ""#(as)
+	
\ No newline at end of file

Deleted: lenses/trunk/Strategic Lenses/trans/indices.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/indices.str	2010-06-03 07:49:50 UTC (rev 20936)
+++ lenses/trunk/Strategic Lenses/trans/indices.str	2010-06-03 08:18:51 UTC (rev 20937)
@@ -1,39 +0,0 @@
-module indices
-
-imports
-	libstratego-lib
-	tuples
-
-rules 
-	elem-by-key(|d*):	i 	-> <lookup> (<int-to-string> i, d*) 
-	elem-by-index(|e*): i 	-> <index> (<string-to-int> i, e*)
-	
-strategies
-	dict-to-list =
-		?d* ; length ; upto ; Tl ; 
-		map(elem-by-key(|d*))
-	
-	dict-to-tuple =
-		dict-to-list ; list-to-tuple
-	
-	indices-to-list(|e*) = 
-		map(elem-by-index(|e*)) 
-			
-	indices-to-tuple(|e*) = 
-		indices-to-list(|e*) ; list-to-tuple 
-
-rules
-	indices-to-tuple: (is, es) -> <indices-to-tuple(|es)> is
-	
-rules // Child Selection/Update
-	select-child:	(i, c*)		-> <index> (<string-to-int> i, c*) 
-	update-child: 	(i, u, c*)	-> <set-index> (<dec><string-to-int> i, u, c*)
-
-rules
-	select-child(|c*): 	i 				-> <select-child> (i, c*)
-	update-child: 		((i, u), c*) 	-> <update-child> (i, u, c*) //where <debug> (c*, (i, u))
-
-rules
-	select-children: 	(i*, c*) 		-> <map(select-child(|c*))> i*
-	update-children: 	(i*, u*, c*)	-> <foldr(!c*, update-child)> <zip> (i*, u*)
-	
\ No newline at end of file

Deleted: lenses/trunk/Strategic Lenses/trans/pp.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/pp.str	2010-06-03 07:49:50 UTC (rev 20936)
+++ lenses/trunk/Strategic Lenses/trans/pp.str	2010-06-03 08:18:51 UTC (rev 20937)
@@ -1,24 +0,0 @@
-module pp
-
-imports
-	include/StrategicLenses
-	libstratego-lib
-	
-rules
-	
-	pp-safe = pp <+ write-to-string
-	
-	pp: Functor(f, ts) -> $[[f]: [<lpp(|" * ")> ts]]
-	
-	pp: SimpleType(t) -> t
-	
-	pp: GenericType(t, ts) -> $[t([<lpp(|", ")> ts])]
-	
-	pp: TypeVar(v) -> v
-	
-	lpp(|s): [] -> $[]
-	
-	lpp(|s): [e] -> <pp> e
-	
-	lpp(|s): [e1, e2|e*] -> $[[<pp> e1][s][<lpp(|s)>[e2|e*]]]
-	
\ No newline at end of file

Deleted: lenses/trunk/Strategic Lenses/trans/run-tests.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/run-tests.str	2010-06-03 07:49:50 UTC (rev 20936)
+++ lenses/trunk/Strategic Lenses/trans/run-tests.str	2010-06-03 08:18:51 UTC (rev 20937)
@@ -1,100 +0,0 @@
-module run-tests
-
-imports
-	libstratego-lib
-	include/StrategicLenses
-	lib/editor-common.generated
-	semantics
-	desugar
-	
-rules
-	test-error: Case(l, tests) -> errors 
-		where 
-			<desugar> l => dl ;
-			<collect-all(test-error(|dl), conc)> tests => errors 
-			
-	test-error(|l): Success(t) -> error 
-		where
-			<run-test> (l, t) => error 
-	
-	test-error(|l): Failure(t) -> (t, $[Test yields no error.]) 
-		where
-			not(<run-test> (l, t))
-					
-	run-test: (lens, case at Get(concrete, abstract)) -> (case, $[Test for get fails.])
-		where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			not (<get> (lens, dconcrete))
-					
-	run-test: (lens, case at Get(concrete, abstract)) -> (case, $[Test for get yields [failure].]) 
-		where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			<implode> abstract 	=> Ast(dabstract) ;
-			<debug> "get" ;
-			<get(|lens)> dconcrete => fabstract ;
-			<debug> fabstract ;
-			<debug> dabstract ;
-			(<eq> (dabstract, fabstract) < <debug> "equal" + <debug> "unequal" ) ;
-			(<eq> (fabstract, dabstract) < <debug> "equal" + <debug> "unequal" ) ;
-			not (<eq> (dabstract, fabstract)) ;
-			<write-to-string> fabstract => failure 
-			
-	run-test: (lens, case at GetPut(concrete, abstract)) -> (case, error) 
-		where
-			<run-test> (lens, Get(concrete, abstract)) => (_, error)
-	
-	run-test: (lens, case at GetPut(concrete, abstract)) -> (case, $[Test for put fails.])
-	 	where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			<implode> abstract 	=> Ast(dabstract) ;
-			not ( <put(|lens)> (dabstract, dconcrete))
-					
-	run-test: (lens, case at GetPut(concrete, abstract)) -> (case, $[Test for put yields [failure].]) 
-		where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			<implode> abstract 	=> Ast(dabstract) ;
-			 <put(|lens)> (dabstract, dconcrete) => fconcrete ;
-			not (<equal> (fconcrete, dconcrete)) ;
-			 <write-to-string> fconcrete => failure 
-						
-	run-test: (lens, case at CreateGet(abstract, concrete)) -> (case, error) 
-		where 
-			<run-test> (lens, Get(concrete, abstract)) => (_, error)	
-							
-	run-test: (lens, case at CreateGet(abstract, concrete)) -> (case, error)
-		 where 
-			<run-test> (lens, Create(abstract, concrete)) => (_, error)	
-
-	run-test:	(lens, case at Create(abstract, concrete)) -> (case, $[Test for create fails.]) 
-		where
-			<implode> abstract 	=> Ast(dabstract) ;
-			not ( <create(|lens)> dabstract )
-					
-	run-test:	(lens, case at Create(abstract, concrete)) -> (case, $[Test for create yields [failure].]) 
-		where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			<implode> abstract 	=> Ast(dabstract) ;
-			<create(|lens)> dabstract => fconcrete ;
-			not (<equal> (fconcrete, dconcrete)) ;
-			<write-to-string> fconcrete => failure 
-	
-	run-test:	(lens, case at GetUpdatePut(concrete, abstract, uabstract, uconcrete)) -> (case, error)
-		where
-			<run-test> (lens, Get(concrete, abstract)) => (_, error)
-	
-	run-test: (lens, case at GetUpdatePut(concrete, abstract, uabstract, uconcrete)) -> (case, $[Test for put fails.])
-	 	where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			<implode> uabstract => Ast(dabstract) ;
-			not ( <put(|lens)> (dabstract, dconcrete))
-					
-	run-test: (lens, case at GetUpdatePut(concrete, abstract, uabstract, uconcrete)) -> (case, $[Test for put yields [failure].]) 
-		where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			<implode> uabstract => Ast(dabstract) ;
-			<implode> uconcrete => Ast(duconcrete) ;
-			<put(|lens)> (dabstract, dconcrete) => fconcrete ;
-			not (<equal> (fconcrete, duconcrete)) ;
-			 <write-to-string> fconcrete => failure 
-						
-			
\ No newline at end of file

Copied: lenses/trunk/Strategic Lenses/trans/semantics/desugar.str (from rev 20926, lenses/trunk/Strategic Lenses/trans/desugar.str)
===================================================================
--- lenses/trunk/Strategic Lenses/trans/semantics/desugar.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/semantics/desugar.str	2010-06-03 08:18:51 UTC (rev 20937)
@@ -0,0 +1,63 @@
+module semantics/desugar
+
+imports
+	libstratego-aterm
+	include/StrategicLenses
+	helper/indices
+	
+strategies
+
+	desugar = topdown(try(desugar-local)) 
+	implode = topdown(try(implode-local))
+	
+rules
+	implode-local: ATerm(t)	-> Ast(<implode-aterm> t)
+	desugar-local: ATerm(t)	-> Ast(<implode-aterm> t)
+
+rules // typeless functor
+	desugar-local: Functor(f) -> QFunctor(Every(), f)
+	
+rules // select with functor
+	desugar-local: 	FSelect(qf, i*, d) 	-> Comp(Hoist(qf), Select(i*, Ast(""#(c*)))) 
+		where
+			<desugar> d => Ast(f#(c*)) 
+	
+rules // select deep pathes
+	desugar-local: 	PSelect([Segment(qf, i)], d)		-> Comp(Hoist(qf), SSelect(i, Ast(""#(c*)))) where
+						<desugar> d => Ast(f#(c*)) 
+				
+	desugar-local: 	PSelect([Segment(qf, i),s|s*], Ast(f#(c*)))	-> Comp(lens1, lens2) with
+						lens1 := Comp(Hoist(qf), SSelect(i, Ast(Ast(""#(c*))))) ;
+						lens2 := PSelect([s|s*], <select-child> (i, c*))
+
+rules // list lenses	
+	desugar-local: 	Hd(d*)	-> SSelect(Segment(QFunctor("List", "Cons"), 1), [1|d*])
+	desugar-local: 	Tl(d)	-> SSelect(Segment(QFunctor("List", "Cons"), 2), [d])
+
+rules // fork with functor patterns	
+	desugar-local: PFork(FPattern(f, cv*), ap, b*)	-> Comp(Hoist(f), PFork(TPattern(cv*), ap, b*))
+	desugar-local: PFork(cp, FPattern(f, av*), b*)	-> Comp(PFork(TPattern(av*), cp, b*), Plunge(f))
+
+rules // branch with functor patterns	
+	desugar-local: PBranch(FPattern(f, cv*), l, ap)	-> PBranch(TPattern(cv*), Comp(Plunge(f), l), ap)
+	desugar-local: PBranch(cp, l, FPattern(f, cv*))	-> PBranch(cp, Comp(l, Hoist(f)), TPattern(cv*))
+
+rules // fork/branches with patterns	
+	desugar-local: PFork(cp, ap, bs) -> Fork(bs') 
+						where
+							<vars> cp => cvs ;
+							<vars> ap => avs ;
+							<map(desugar-branch(|cvs, avs))> bs => bs'
+
+	desugar-branch(|cvs, avs): 	PBranch(cp, l, ap) -> Branch(Indices(cis), l, Indices(ais)) 
+									with
+										<vars> cp => bcvs ;
+										<vars> ap => bavs ;
+										<map(get-index(|cvs))> bcvs => cis ;
+										<map(get-index(|avs))> bavs	=> ais
+		
+	get-index(|e*):	e 	-> <int-to-string> <get-index> (e, e*)
+			
+	vars: TPattern(vs) -> vs
+	vars: SPattern(v) -> [v]
+	

Copied: lenses/trunk/Strategic Lenses/trans/semantics/semantics.str (from rev 20929, lenses/trunk/Strategic Lenses/trans/semantics.str)
===================================================================
--- lenses/trunk/Strategic Lenses/trans/semantics/semantics.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/semantics/semantics.str	2010-06-03 08:18:51 UTC (rev 20937)
@@ -0,0 +1,302 @@
+module semantics/semantics
+
+imports
+	include/StrategicLenses
+	analysis/main
+	analysis/typecheck
+	helper/indices
+	helper/tuples
+
+signature constructors
+
+	Ast: Term -> CModel
+	Ast: Term -> AModel
+	
+rules // Lens as parameter
+	get(|l): 	c -> <get> (l, c)  
+			
+	put(|l): 	(a, c) -> <put> (l, a, c) 
+	
+	create(|l): a -> <create> (l, a)
+	
+rules // Identity
+	get: 	(Id(), c) -> c
+
+	put: 	(Id(), a, c) -> a
+	
+	create:	(Id(), a) -> a
+	
+rules // Composition
+	get:	(Comp(l1, l2), c) -> a
+				where
+					<get> (l1, c) 	=> t ;
+					<get> (l2, t) 	=> a 
+						
+	put:	(Comp(l1, l2), a, c) -> c'
+				where
+					<get> (l1, c) 		=> tc ;
+					<put> (l2, a, tc)	=> ta ;
+					<put> (l1, ta, c)	=> c' 
+					
+	create:	(Comp(l1, l2), a) -> c
+				where
+					<create> (l2, a) => t ;
+					<create> (l1, t) => c
+
+rules // Matching lens
+	get:	(Match(l1, l2), c) -> a 
+				where	
+					<get> (l1, c) => a <+ <get> (l2, c) => a
+				
+				/*<cmatch> (l1, c) 
+					<	<get> (l1, c) => a 
+					+	<get> (l2, c) => a*/
+				
+	put:	(Match(l1, l2), a, c) -> c' 
+				where
+					<put> (l1, a, c) => c' <+
+					<put> (l2, a, c) => c' 
+					
+					/*
+					<cmatch> (l1, c) 
+						< (	<amatch> (l1, a)
+								<	<put> (l1, a, c) => c'
+								+	<create> (l2, a) => c'
+						)
+						+ ( <amatch> (l2, a)
+								<	<put(|l2)> (a, c) => c'
+								+	<create> (l1, a) => c'
+						)*/
+					
+	create:	(Match(l1, l2), a) -> c 
+				where
+				<amatch> (l1, a)
+					< 	<create(|l1)> a => c
+					+	<create(|l2)> a => c
+
+rules // Hoist
+	get:	(Hoist(QFunctor(_, f)), c) -> a
+				where
+					<explode-term> c 	=> (f, as) ;
+					<list-to-tuple> as 	=> a		
+
+	put:	(Hoist(qf), a, _) -> c
+				where
+					<create> (Hoist(qf), a) => c				
+
+	create:	(Hoist(QFunctor(_, f)), a) -> c
+				where
+					<tuple-to-list> a 	=> as ;
+					<mkterm> (f, as) 	=> c
+			 
+rules // Plunge
+	get:	(Plunge(QFunctor(_, f)), c) -> a
+				where
+					<tuple-to-list> c 	=> as ;
+					<mkterm> (f, as) 	=> a
+
+	put:	(Plunge(qf), a, _)	-> c
+				where
+					<create> (Plunge(qf), a) => c
+					
+	create:	(Plunge(QFunctor(_, f)), a) -> c
+				where
+					<explode-term> a 	=> (f, as) ;
+					<list-to-tuple> as 	=> c
+
+rules // Single selection 
+	get:	(SSelect(i, _), c) -> a
+				where
+					<tuple-to-list> c 		=> cs ;
+					<select-child> (i, cs)	=> a
+					
+	put:	(SSelect(i, _), a, c)	-> c'
+				where
+					<tuple-to-list> c 			=> cs ;
+					<update-child> (i, a, cs) 	=> cs' ;
+					<list-to-tuple> cs' 		=> c'
+					
+	create:	(SSelect(i, Ast(d)), a) -> c
+				where
+					<tuple-to-list> d 			=> ds ;
+					<update-child> (i, a, ds) 	=> cs ;
+					<list-to-tuple> cs	 		=> c
+				
+rules // Multiple selection
+	get:	(Select(is, _), c) -> a
+				where
+					<tuple-to-list> c			=> cs ;
+					<select-children> (is, cs)	=> as ;
+					<list-to-tuple> as			=> a
+	
+	put:	(Select(is, _), a, c) -> c'
+				where
+					<tuple-to-list> a 				=> as ;
+					<tuple-to-list> c 				=> cs ;
+					<update-children> (is, as, cs) 	=> cs' ;
+					<list-to-tuple> cs'			 	=> c' 
+					
+	create:	(Select(is, Ast(d)), a) -> c		
+				where
+					<tuple-to-list> a 				=> as ;
+					<tuple-to-list> d 				=> ds ;
+					<update-children> (is, as, ds) 	=> cs ;
+					<list-to-tuple> cs	 			=> c
+					 
+rules // Insertion
+	get:	(Insert(i, Ast(""#(cs))), c)	-> ""#(<update-child> (i, c, cs))
+	put:	(Insert(i, d), a, c)			-> <create(|Insert(i, d))> a
+	create:	(Insert(i, d), ""#(cs))			-> <select-child> (i, cs)
+	
+rules // Fork
+	get:	(Fork(bs), c) -> a
+				where
+					<tuple-to-list> c 			=> cs ;
+					<mapconcat(bget(|cs))> bs 	=> dict ;
+					<dict-to-tuple> dict 		=> a
+					
+	put:	(Fork(bs), a, c) -> c'
+				where
+					<tuple-to-list> c				=> cs ;
+					<tuple-to-list> a				=> as ;
+					<mapconcat(bput(|as, cs))> bs	=> dict ;
+					<dict-to-tuple> dict			=> c'
+					
+	create:	(Fork(bs), a) -> c
+				where
+					<tuple-to-list> a 				=> as ;
+					<mapconcat(bcreate(|as))> bs	=> dict ;
+					<dict-to-tuple> dict			=> c
+
+rules // Branches							
+	bget(|cs):		Branch(Indices(cis), l, Indices(ais)) -> dict 
+						where
+							<indices-to-tuple> (cis, cs) 	=> c ;

(643 diff lines omitted)

From g.h.wachsmuth at tudelft.nl  Thu Jun  3 10:44:40 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 03 Jun 2010 08:44:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20938 - GuidoWachsmuth
	- in lenses/trunk/Strategic Lenses: test trans/analysis
Message-ID: <201006030844.o538ieff011049@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-03 08:44:40 +0000 (Thu, 03 Jun 2010)
New Revision: 20938

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20938&view=rev

Modified:
   lenses/trunk/Strategic Lenses/test/TestSuite.lns
   lenses/trunk/Strategic Lenses/trans/analysis/tests.str

Log:
<eq> bug was resolved

removed debug code, marked tests as failure

Changes:

Modified: lenses/trunk/Strategic Lenses/test/TestSuite.lns
===================================================================
--- lenses/trunk/Strategic Lenses/test/TestSuite.lns	2010-06-03 08:18:51 UTC (rev 20937)
+++ lenses/trunk/Strategic Lenses/test/TestSuite.lns	2010-06-03 08:44:40 UTC (rev 20938)
@@ -4,10 +4,12 @@
 	
 	lens select Property(1) p: int with
 	
-		ast Property(p, Type(e))
-			> get > 
-		ast q
+		failure
+			ast Property(p, Type(e))
+				> get > 
+			ast q
 	 
 	lens id with
 	
-		ast [a,b] > get > ast [d,e]
\ No newline at end of file
+		failure
+			ast [a,b] > get > ast [d,e]
\ No newline at end of file

Modified: lenses/trunk/Strategic Lenses/trans/analysis/tests.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/analysis/tests.str	2010-06-03 08:18:51 UTC (rev 20937)
+++ lenses/trunk/Strategic Lenses/trans/analysis/tests.str	2010-06-03 08:44:40 UTC (rev 20938)
@@ -1,9 +1,8 @@
 module tests
 
 imports
-	libstratego-lib
 	include/StrategicLenses
-	lib/editor-common.generated
+	helper/pp
 	semantics/semantics
 	semantics/desugar
 	
@@ -30,14 +29,9 @@
 		where
 			<implode> concrete 	=> Ast(dconcrete) ;
 			<implode> abstract 	=> Ast(dabstract) ;
-			<debug> "get" ;
 			<get(|lens)> dconcrete => fabstract ;
-			<debug> fabstract ;
-			<debug> dabstract ;
-			(<eq> (dabstract, fabstract) < <debug> "equal" + <debug> "unequal" ) ;
-			(<eq> (fabstract, dabstract) < <debug> "equal" + <debug> "unequal" ) ;
 			not (<eq> (dabstract, fabstract)) ;
-			<write-to-string> fabstract => failure 
+			<pp-safe> fabstract => failure 
 			
 	run-test: (lens, case at GetPut(concrete, abstract)) -> (case, error) 
 		where
@@ -55,7 +49,7 @@
 			<implode> abstract 	=> Ast(dabstract) ;
 			 <put(|lens)> (dabstract, dconcrete) => fconcrete ;
 			not (<equal> (fconcrete, dconcrete)) ;
-			 <write-to-string> fconcrete => failure 
+			 <pp-safe> fconcrete => failure 
 						
 	run-test: (lens, case at CreateGet(abstract, concrete)) -> (case, error) 
 		where 
@@ -76,7 +70,7 @@
 			<implode> abstract 	=> Ast(dabstract) ;
 			<create(|lens)> dabstract => fconcrete ;
 			not (<equal> (fconcrete, dconcrete)) ;
-			<write-to-string> fconcrete => failure 
+			<pp-safe> fconcrete => failure 
 	
 	run-test:	(lens, case at GetUpdatePut(concrete, abstract, uabstract, uconcrete)) -> (case, error)
 		where
@@ -95,6 +89,6 @@
 			<implode> uconcrete => Ast(duconcrete) ;
 			<put(|lens)> (dabstract, dconcrete) => fconcrete ;
 			not (<equal> (fconcrete, duconcrete)) ;
-			 <write-to-string> fconcrete => failure 
+			 <pp-safe> fconcrete => failure 
 						
 			
\ No newline at end of file


From L.C.L.Kats at tudelft.nl  Thu Jun  3 10:48:05 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 03 Jun 2010 08:48:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20939 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.feature strc-java/trunk
	strc-java/trunk/META-INF
Message-ID: <201006030848.o538m5tH011098@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-03 08:48:05 +0000 (Thu, 03 Jun 2010)
New Revision: 20939

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20939&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   strc-java/trunk/META-INF/MANIFEST.MF
   strc-java/trunk/configure.ac

Log:
version bump

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-03 08:44:40 UTC (rev 20938)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-03 08:48:05 UTC (rev 20939)
@@ -212,7 +212,7 @@
          id="org.strategoxt.strj"
          download-size="0"
          install-size="0"
-         version="0.17.9.qualifier"/>
+         version="0.17.91.qualifier"/>
 
    <plugin
          id="org.strategoxt.imp.generator"

Modified: strc-java/trunk/META-INF/MANIFEST.MF
===================================================================
--- strc-java/trunk/META-INF/MANIFEST.MF	2010-06-03 08:44:40 UTC (rev 20938)
+++ strc-java/trunk/META-INF/MANIFEST.MF	2010-06-03 08:48:05 UTC (rev 20939)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: Stratego/XT Java runtime
 Bundle-SymbolicName: org.strategoxt.strj;singleton:=true
-Bundle-Version: 0.17.9.qualifier
+Bundle-Version: 0.17.91.qualifier
 Export-Package: .,
  aterm,
  aterm.pure,

Modified: strc-java/trunk/configure.ac
===================================================================
--- strc-java/trunk/configure.ac	2010-06-03 08:44:40 UTC (rev 20938)
+++ strc-java/trunk/configure.ac	2010-06-03 08:48:05 UTC (rev 20939)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.58])
-AC_INIT([strc-java],[0.17.9],[bugs at strategoxt.org])
+AC_INIT([strc-java],[0.17.91],[bugs at strategoxt.org])
 AM_INIT_AUTOMAKE
 
 # set the prefix immediately to the default prefix


From L.C.L.Kats at tudelft.nl  Thu Jun  3 11:24:10 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 03 Jun 2010 09:24:10 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20940 - LennartKats -
	strc-java/trunk/trans
Message-ID: <201006030924.o539OA8p011912@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-03 09:24:10 +0000 (Thu, 03 Jun 2010)
New Revision: 20940

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20940&view=rev

Modified:
   strc-java/trunk/trans/strj-options.str

Log:
Fix --version

Changes:

Modified: strc-java/trunk/trans/strj-options.str
===================================================================
--- strc-java/trunk/trans/strj-options.str	2010-06-03 08:48:05 UTC (rev 20939)
+++ strc-java/trunk/trans/strj-options.str	2010-06-03 09:24:10 UTC (rev 20940)
@@ -33,7 +33,7 @@
   ; parse-options(
       strj-options
     )
-  //; display-version
+  ; display-version
   ; if not(output-dirname); <get-config> "-o" then
       fatal-err-msg(|"Illegal output directory")
     end


From L.C.L.Kats at gmail.com  Thu Jun  3 12:42:19 2010
From: L.C.L.Kats at gmail.com (Lennart Kats)
Date: Thu, 03 Jun 2010 10:42:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20941 - LennartKats -
	strc-java/trunk
Message-ID: <201006031042.o53AgJRe013101@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-03 10:42:19 +0000 (Thu, 03 Jun 2010)
New Revision: 20941

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20941&view=rev

Modified:
   strc-java/trunk/configure.ac

Log:
test commit

Changes:

Modified: strc-java/trunk/configure.ac
===================================================================
--- strc-java/trunk/configure.ac	2010-06-03 09:24:10 UTC (rev 20940)
+++ strc-java/trunk/configure.ac	2010-06-03 10:42:19 UTC (rev 20941)
@@ -2,7 +2,7 @@
 AC_INIT([strc-java],[0.17.91],[bugs at strategoxt.org])
 AM_INIT_AUTOMAKE
 
-# set the prefix immediately to the default prefix
+# set the prefix immediately to the default prefix 
 test "x$prefix" = xNONE && prefix=$ac_default_prefix
 
 m4_pattern_forbid([^XT_])


From g.h.wachsmuth at tudelft.nl  Thu Jun  3 13:40:13 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 03 Jun 2010 11:40:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20942 - GuidoWachsmuth
	- in lenses/trunk/Strategic Lenses: test trans/analysis
Message-ID: <201006031140.o53BeDMG014016@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-03 11:40:13 +0000 (Thu, 03 Jun 2010)
New Revision: 20942

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20942&view=rev

Modified:
   lenses/trunk/Strategic Lenses/test/Outline.lns
   lenses/trunk/Strategic Lenses/trans/analysis/main.str
   lenses/trunk/Strategic Lenses/trans/analysis/resolve.str

Log:
now checks for missing or multiple lens definitions

Changes:

Modified: lenses/trunk/Strategic Lenses/test/Outline.lns
===================================================================
--- lenses/trunk/Strategic Lenses/test/Outline.lns	2010-06-03 10:42:19 UTC (rev 20941)
+++ lenses/trunk/Strategic Lenses/test/Outline.lns	2010-06-03 11:40:13 UTC (rev 20942)
@@ -3,7 +3,7 @@
 lenses
 	Property < outlineProperty > OutlineProperty :=  
 		select Property(1) p: int ; plunge OutlineProperty
-		
+			
 tests
 	
 	lens outlineProperty with

Modified: lenses/trunk/Strategic Lenses/trans/analysis/main.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/analysis/main.str	2010-06-03 10:42:19 UTC (rev 20941)
+++ lenses/trunk/Strategic Lenses/trans/analysis/main.str	2010-06-03 11:40:13 UTC (rev 20942)
@@ -3,6 +3,7 @@
 imports
 	lib/editor-common.generated
   	include/StrategicLenses
+	analysis/resolve
 	analysis/typecheck
 	analysis/tests
   	semantics/desugar
@@ -16,7 +17,8 @@
 		<analyse> ast ;
       	<collect-all(test-error, conc)> ast => errors1 ;
       	<collect-all(type-error, conc)> ast => errors2 ;
-      	<union> (errors1, errors2) => errors
+      	<collect-all(ref-error, conc)> ast => errors3 ;
+      	<unions> [errors1, errors2, errors3] => errors
 
 	analyse = topdown(try(record-signature <+ record-lens))
 
@@ -43,5 +45,5 @@
 			GetLens: name -> desugared
 		)
 		with rules (
-			GetLensDef: name -> name
+			GetLensDef:+ name -> name
 		)
\ No newline at end of file

Modified: lenses/trunk/Strategic Lenses/trans/analysis/resolve.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/analysis/resolve.str	2010-06-03 10:42:19 UTC (rev 20941)
+++ lenses/trunk/Strategic Lenses/trans/analysis/resolve.str	2010-06-03 11:40:13 UTC (rev 20942)
@@ -10,3 +10,15 @@
 		(LensRef(name), position, ast, path, project-path) -> def
 			where
 				<GetLensDef> name => def
+
+rules
+	
+	ref-error:
+		LensRef(name) -> (name, $[Undefined lens [name].]) 
+			where
+				not (<GetLensDef> name )
+				
+	ref-error:
+		LensDef(_, name, _, _) -> (name, $[Multiple definitions for [name].]) 
+			where
+				not ( <bagof-GetLensDef> name => [name] )
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Thu Jun  3 13:42:31 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 03 Jun 2010 11:42:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20943 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/editor
Message-ID: <201006031142.o53BgVdu014027@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-03 11:42:31 +0000 (Thu, 03 Jun 2010)
New Revision: 20943

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20943&view=rev

Modified:
   lenses/trunk/Strategic Lenses/editor/StrategicLenses-Colorer.esv

Log:
now highlights ASTs in the same way like embedded syntax

Changes:

Modified: lenses/trunk/Strategic Lenses/editor/StrategicLenses-Colorer.esv
===================================================================
--- lenses/trunk/Strategic Lenses/editor/StrategicLenses-Colorer.esv	2010-06-03 11:40:13 UTC (rev 20942)
+++ lenses/trunk/Strategic Lenses/editor/StrategicLenses-Colorer.esv	2010-06-03 11:42:31 UTC (rev 20943)
@@ -8,4 +8,5 @@
   //                                                                  
   // See the imported file for a brief introduction and examples.     
   environment _.Ast:   _ 220 230 200 
+  environment _.ATerm:   _ 220 230 200 
   
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Thu Jun  3 17:31:43 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 03 Jun 2010 15:31:43 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20944 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/syntax
Message-ID: <201006031531.o53FVhq3016976@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-03 15:31:43 +0000 (Thu, 03 Jun 2010)
New Revision: 20944

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20944&view=rev

Modified:
   lenses/trunk/Strategic Lenses/syntax/Embedding.sdf

Log:
no Commons needed

Changes:

Modified: lenses/trunk/Strategic Lenses/syntax/Embedding.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Embedding.sdf	2010-06-03 11:42:31 UTC (rev 20943)
+++ lenses/trunk/Strategic Lenses/syntax/Embedding.sdf	2010-06-03 15:31:43 UTC (rev 20944)
@@ -1,7 +1,6 @@
 module Embedding
 
 imports
-	Common
 	languages/aterm/syntax/ATerms
 	languages/entity/syntax/Entity
 	languages/entity/syntax/Outline


From g.h.wachsmuth at tudelft.nl  Sat Jun  5 11:04:45 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Sat, 05 Jun 2010 09:04:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20945 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/trans/semantics
Message-ID: <201006050904.o5594jd7018124@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-05 09:04:44 +0000 (Sat, 05 Jun 2010)
New Revision: 20945

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20945&view=rev

Modified:
   lenses/trunk/Strategic Lenses/trans/semantics/semantics.str

Log:
fixing map lens

put function can now handle additions/removals from lists

Changes:

Modified: lenses/trunk/Strategic Lenses/trans/semantics/semantics.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/semantics/semantics.str	2010-06-03 15:31:43 UTC (rev 20944)
+++ lenses/trunk/Strategic Lenses/trans/semantics/semantics.str	2010-06-05 09:04:44 UTC (rev 20945)
@@ -196,14 +196,26 @@
 				where
 					<map(get(|lens))> cs => as
 		
-	put:	(Map(lens), as, cs)	-> cs' 
+	put:	(Map(lens), as, cs)	-> cs'
 				where
-					<zip(put(|lens))> (as, cs) => cs'
+					<match-length> (as, cs) 		=> (as1, cs1, as2) ;
+					<zip(put(|lens))> (as1, cs1) 	=> cs2 ;
+					<map(create(|lens))> as2		=> cs3 ;
+					<concat> [cs2, cs3]				=> cs' 
 					 
 	create:	(Map(lens), as)	-> cs 
 				where
 					<map(create(|lens))> as => cs
-						
+
+	match-length:
+		 (as, cs) -> (as', cs', rs)
+			where
+				<length> as 			=> na ;
+				<length> cs 			=> nc ;
+				<take(|nc) <+ id> as	=> as';
+				<take(|na) <+ id> cs	=> cs';
+				<drop(|nc) <+ ![]> as	=> rs 
+				
 rules // new topdown
 	get:	(TopDown(l), c)	-> a'
 				where


From g.h.wachsmuth at tudelft.nl  Sat Jun  5 11:04:57 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Sat, 05 Jun 2010 09:04:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20946 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/test
Message-ID: <201006050904.o5594vil018126@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-05 09:04:57 +0000 (Sat, 05 Jun 2010)
New Revision: 20946

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20946&view=rev

Added:
   lenses/trunk/Strategic Lenses/test/Map.lns

Log:
tests for map with additions/removals in lists

Changes:

Added: lenses/trunk/Strategic Lenses/test/Map.lns
===================================================================
--- lenses/trunk/Strategic Lenses/test/Map.lns	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/test/Map.lns	2010-06-05 09:04:57 UTC (rev 20946)
@@ -0,0 +1,33 @@
+module map
+
+tests
+
+	lens map id with
+	
+		ast [a, b]
+		 
+			> get >
+			
+		ast [a, b]
+		
+			> update >
+			
+		ast [a, b, c]
+		
+			> put >
+			
+		ast [a, b, c]
+		
+		ast [a, b]
+		 
+			> get >
+			
+		ast [a, b]
+		
+			> update >
+			
+		ast [a]
+		
+			> put >
+			
+		ast [a]
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Sat Jun  5 11:05:27 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Sat, 05 Jun 2010 09:05:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20947 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/test
Message-ID: <201006050905.o5595RXj018135@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-05 09:05:27 +0000 (Sat, 05 Jun 2010)
New Revision: 20947

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20947&view=rev

Modified:
   lenses/trunk/Strategic Lenses/test/Outline.lns

Log:
additional test case with addition of properties

Changes:

Modified: lenses/trunk/Strategic Lenses/test/Outline.lns
===================================================================
--- lenses/trunk/Strategic Lenses/test/Outline.lns	2010-06-05 09:04:57 UTC (rev 20946)
+++ lenses/trunk/Strategic Lenses/test/Outline.lns	2010-06-05 09:05:27 UTC (rev 20947)
@@ -1,5 +1,9 @@
 module Outline
 
+signature constructors
+
+a: A -> B
+
 lenses
 	Property < outlineProperty > OutlineProperty :=  
 		select Property(1) p: int ; plunge OutlineProperty
@@ -12,9 +16,9 @@
 			< get put >
 		+-p
 
-		+-p
+		+-q
 			> create >
-		p: int
+		q: int
 		
 		p:e 
 			> get > 
@@ -100,4 +104,37 @@
 			entity e1 {p1: e1 p3: e2}
 			entity e2 {p2: e1 p4: e2} 
 			
+ 	lens outlineModule with
+	
+		module m 
+			entity e1 {p1: e1 p2: e2}
+			entity e2 {p1: e1 p2: e2} 
+		
+		> get > 
+		
+		m
+		+e1
+		+-p1
+		+-p2
+		+e2
+		+-p1
+		+-p2
+		
+		> update > 
+		
+		mm
+		+e1
+		+-p1
+		+-p3
+		+e2
+		+-p2
+		+-p4
+		+-p5
+		
+		> put > 
+		
+		module mm 
+			entity e1 {p1: e1 p3: e2}
+			entity e2 {p2: e1 p4: e2 p5: int} 
+			
 		
\ No newline at end of file


From L.C.L.Kats at tudelft.nl  Sat Jun  5 18:18:15 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 05 Jun 2010 16:18:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20948 - LennartKats -
	strategoxt/trunk/sdf-front/parse
	strc-java/trunk/java/tools/org/strategoxt/tools/lib
Message-ID: <201006051618.o55GIFup024510@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-05 16:18:15 +0000 (Sat, 05 Jun 2010)
New Revision: 20948

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20948&view=rev

Modified:
   strategoxt/trunk/sdf-front/parse/pack-sdf.str
   strc-java/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf-options.str
   strc-java/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf.str

Log:
- Fixed .def imports in Java-bundled pack-sdf
- Removed misleading "output format" error from pack-sdf

Changes:

Modified: strategoxt/trunk/sdf-front/parse/pack-sdf.str
===================================================================
--- strategoxt/trunk/sdf-front/parse/pack-sdf.str	2010-06-05 09:05:27 UTC (rev 20947)
+++ strategoxt/trunk/sdf-front/parse/pack-sdf.str	2010-06-05 16:18:15 UTC (rev 20948)
@@ -37,11 +37,13 @@
     ; <maybe-create-depfile> files
     ; !spec
     ; where( (<fopen> (<get-config> "-o", "w") <+ stdout-stream ) => stream ) 
-    ; (  where(of-config => "txt")   < ( asfix-yield(|stream) ; <xtc-exit>0 )
-      +  where(of-config => "ast")   < implode-asfix
-      +  where(of-config => "asfix")
-      ) ; write-to <+ <fatal-error> ["pack-sdf: ", <id>, " is not a valid output format."]
-    )
+    ; with(
+        (  where(of-config => "txt")   < ( asfix-yield(|stream) ; <xtc-exit>0 )
+        +  where(of-config => "ast")   < implode-asfix
+        +  where(of-config => "asfix")
+        ); write-to
+      | "failed to write output"
+      )
 
 /**
  * Main strategy

Modified: strc-java/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf-options.str
===================================================================
--- strc-java/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf-options.str	2010-06-05 09:05:27 UTC (rev 20947)
+++ strc-java/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf-options.str	2010-06-05 16:18:15 UTC (rev 20948)
@@ -83,10 +83,7 @@
   process-Idef =
       ?IncludeDef(def)
     ; !FILE(def)
-    ; xtc-temp-files(
-        parse-xtc-file-report-errors(|<get-sdf-parse-table>, "Module")
-      ; read-from
-      )
+    ; parse-xtc-file-pt-report-errors(|<get-sdf-parse-table>, "SDF")
     ; collect-om(?
         appl(prod(_, cf(sort("Module")), attrs([term(cons("module"))])), _)
       )

Modified: strc-java/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf.str
===================================================================
--- strc-java/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf.str	2010-06-05 09:05:27 UTC (rev 20947)
+++ strc-java/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf.str	2010-06-05 16:18:15 UTC (rev 20948)
@@ -30,10 +30,12 @@
     ; <maybe-create-depfile> files
     ; !spec
     ; where( (<fopen> (<get-config> "-o", "w") <+ stdout-stream ) => stream ) 
-    ; (  where(of-config => "txt")   < ( asfix-yield(|stream) ; <xtc-exit>0 )
-      +  where(of-config => "ast")   < implode-asfix
-      +  where(of-config => "asfix")
-      ); write-to <+ <fatal-error> ["pack-sdf: ", <id>, " is not a valid output format."]
+    ; with(
+        (  where(of-config => "txt")   < ( asfix-yield(|stream) ; <xtc-exit>0 )
+        +  where(of-config => "ast")   < implode-asfix
+        +  where(of-config => "asfix")
+        ); write-to
+      | "failed to write output")
     )
   
   external asfix-yield(|stream) // HACK


From L.C.L.Kats at tudelft.nl  Sat Jun  5 18:33:12 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 05 Jun 2010 16:33:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20949 - LennartKats -
	strategoxt/trunk/sdf-front/parse
	strc-java/trunk/java/tools/org/strategoxt/tools/lib
Message-ID: <201006051633.o55GXC5P024609@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-05 16:33:12 +0000 (Sat, 05 Jun 2010)
New Revision: 20949

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20949&view=rev

Modified:
   strategoxt/trunk/sdf-front/parse/pack-sdf.str
   strc-java/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf.str

Log:


Changes:

Modified: strategoxt/trunk/sdf-front/parse/pack-sdf.str
===================================================================
--- strategoxt/trunk/sdf-front/parse/pack-sdf.str	2010-06-05 16:18:15 UTC (rev 20948)
+++ strategoxt/trunk/sdf-front/parse/pack-sdf.str	2010-06-05 16:33:12 UTC (rev 20949)
@@ -44,6 +44,7 @@
         ); write-to
       | "failed to write output"
       )
+    )
 
 /**
  * Main strategy

Modified: strc-java/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf.str
===================================================================
--- strc-java/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf.str	2010-06-05 16:18:15 UTC (rev 20948)
+++ strc-java/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf.str	2010-06-05 16:33:12 UTC (rev 20949)
@@ -35,7 +35,8 @@
         +  where(of-config => "ast")   < implode-asfix
         +  where(of-config => "asfix")
         ); write-to
-      | "failed to write output")
+      | "failed to write output"
+      )
     )
   
   external asfix-yield(|stream) // HACK


From L.C.L.Kats at tudelft.nl  Sat Jun  5 19:11:16 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 05 Jun 2010 17:11:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20950 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.generator/lib
Message-ID: <201006051711.o55HBGas025290@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-05 17:11:16 +0000 (Sat, 05 Jun 2010)
New Revision: 20950

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20950&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.generator/lib/StrategoMix.def

Log:
Added file for easy download and future use.

Changes:

Added: spoofax-imp/trunk/org.strategoxt.imp.generator/lib/StrategoMix.def
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/lib/StrategoMix.def	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/lib/StrategoMix.def	2010-06-05 17:11:16 UTC (rev 20950)
@@ -0,0 +1,930 @@
+definition
+module Stratego-Sugar-Overlays
+imports
+  Stratego-Core-Identifiers
+  Stratego-Sugar-Terms
+
+exports
+  sorts Overlay
+  context-free syntax
+    Id 			 "=" Term 	-> Overlay {cons("OverlayNoArgs")}
+    Id "(" {Id ","}* ")" "=" Term 	-> Overlay {cons("Overlay")}
+
+module Stratego-Sugar-DynamicRules
+imports
+  Stratego-Core-Identifiers
+  Stratego-Sugar-Strategies
+  Stratego-Sugar-Rules
+
+exports
+ 
+  sorts ScopeLabels
+  context-free syntax
+
+    "{|" ScopeLabels ":" Strategy "|}" -> Strategy {cons("DynRuleScope")}
+
+    {DynRuleScopeId ","}*   -> ScopeLabels
+    "~" Term		    -> ScopeLabels {cons("ScopeLabels")}
+
+  sorts DynRuleDef DynRuleId DynRuleScopeId RuleDec
+  context-free syntax
+
+    "rules" "(" DynRuleDef* ")" -> Strategy {cons("GenDynRules")}
+
+    Id "+" Term                 -> DynRuleDef {cons("AddScopeLabel")} 
+    DynRuleId ":-"  Term        -> DynRuleDef {cons("UndefineDynRule")}
+    DynRuleId ":"   Rule        -> DynRuleDef {cons("SetDynRule")}
+    DynRuleId ":+"  Rule        -> DynRuleDef {cons("AddDynRule")}
+    DynRuleId ":"   Term        -> DynRuleDef {cons("SetDynRuleMatch")}
+
+    DynRuleId ":="  Term        -> DynRuleDef {cons("DynRuleAssign")}
+    DynRuleId ":+="  Term       -> DynRuleDef {cons("DynRuleAssignAdd")}
+
+    DynRuleId ":"   Rule "depends" "on" Term -> DynRuleDef {cons("SetDynRuleDepends")}
+
+    RuleDec "." Term            -> DynRuleId {cons("LabeledDynRuleId")}
+    RuleDec "+" Term            -> DynRuleId {cons("AddLabelDynRuleId")}
+    RuleDec                     -> DynRuleId {cons("DynRuleId")}
+
+    Id "." Term                 -> DynRuleScopeId {cons("LabeledDynRuleScopeId")}
+    Id                          -> DynRuleScopeId {cons("DynRuleScopeId")}
+
+  context-free syntax
+
+    Id                          -> RuleDec {cons("RDecNoArgs")}
+    Id "(" {Typedid ","}* ")"   -> RuleDec {cons("RDec")}
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")"   -> RuleDec {cons("RDecT")}
+
+  sorts RuleNames
+  context-free syntax
+    {Id ","}*				  -> RuleNames
+    "~" Term				  -> RuleNames {cons("RuleNames")}
+
+    "/" RuleNames "\\*" Strategy          -> Strategy {cons("DynRuleIntersectFix")}
+
+  syntax
+    %% no space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% 1 space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% no space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+    %% 1 space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+
+  context-free syntax
+    Strategy "/" RuleNames"\\" Strategy  -> Strategy {cons("DynRuleIntersect"),right}
+    Strategy "\\" RuleNames "/" Strategy  -> Strategy {cons("DynRuleUnion"),right}
+
+    Strategy "/" RuleNames "\\" 
+                 RuleNames "/"  Strategy  -> Strategy {cons("DynRuleIntersectUnion"),right}
+
+  priorities
+    <StrategyAngle-CF> <LAYOUT?-CF> <Term-CF> -> <Strategy-CF> {cons("BA")}
+  > {
+
+    %% no space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% 1 space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% no space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+    %% 1 space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+    }
+  > <Strategy-CF> <LAYOUT?-CF> "=>" <LAYOUT?-CF> <Term-CF> -> <Strategy-CF> {cons("AM")}
+
+  context-free priorities
+    StrategyAngle Term 		          -> Strategy {cons("BA")}
+  > "/" RuleNames "\\*" Strategy          -> Strategy {cons("DynRuleIntersectFix")}
+  > Strategy "=>" Term 		  	  -> Strategy {cons("AM")}
+  > Strategy "/" RuleNames "\\" Strategy  -> Strategy {cons("DynRuleIntersect"),right}
+  > Strategy "\\" RuleNames "/" Strategy  -> Strategy {cons("DynRuleUnion"),right}
+  > Strategy "/" RuleNames "\\" 
+                 RuleNames "/"  Strategy  -> Strategy {cons("DynRuleIntersectUnion"),right}
+  > Strategy ";" Strategy 		  -> Strategy {cons("Seq"),right}
+
+module Stratego-Sugar-Rules
+imports Stratego-Sugar-Strategies
+exports
+
+  sorts RuleDef
+  context-free syntax
+    Id ":" Rule 				-> RuleDef {cons("RDefNoArgs")}
+    
+    Anno+ RuleDef               -> Def {cons("AnnoDef")}
+
+    Id "(" {Typedid ","}* ")" ":" Rule 		-> RuleDef {cons("RDef")}
+
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")" ":" Rule 		-> RuleDef {cons("RDefT")}
+
+  sorts Rule RuleCond
+  context-free syntax
+    Term "->" Term           	    -> Rule {cons("RuleNoCond")} %% backward comp.
+    Term "->" Term "where" Strategy -> Rule {cons("Rule")}       %% backward comp.
+    Term "->" Term RuleCond+	    -> Rule {cons("Rule"), avoid}
+
+    "where" Strategy -> RuleCond {cons("WhereClause")}
+    "with"  Strategy -> RuleCond {cons("WithClause")}
+
+module Stratego-Sugar-Strategies
+imports
+  Stratego-Core-Strategies
+  Stratego-Sugar-Terms
+  Stratego-Sugar-Constants
+  Stratego-Sugar-Signatures
+
+exports
+  context-free syntax
+    Id  		      "=" Strategy -> StrategyDef {cons("SDefNoArgs")}
+    Id "(" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("SDef")}
+
+  context-free syntax
+    ID 				  	  -> Typedid {cons("DefaultVarDec")}
+
+  sorts Rule
+
+  sorts StrategyParen StrategyCurly StrategyAngle
+  context-free syntax
+
+    %% Abstraction
+
+    SVar "(" {Strategy ","}* ")" 	  -> Strategy {cons("Call")}
+
+    %% Match and build
+
+    "{" Strategy "}" 			  -> Strategy {cons("ScopeDefault")}
+
+     %%"<" Strategy ">" Term 		  -> Strategy {cons("BA")}
+     StrategyAngle Term 		  -> Strategy {cons("BA")}
+     "<" Strategy ">"			  -> StrategyAngle {bracket} %% {cons("AngleStrat")}
+
+    %% Combinators
+
+    Strategy "<+" Strategy 		  -> Strategy {cons("LChoice"),right}
+
+    "rec" Id "(" Strategy ")" 		  -> Strategy {cons("Rec")}
+
+    "not"   "(" Strategy ")" 		  -> Strategy {cons("Not")}
+    "where" "(" Strategy ")" 		  -> Strategy {cons("Where")}
+    "with"  "(" Strategy ")" 		  -> Strategy {cons("With"), prefer}
+    "test"  "(" Strategy ")" 		  -> Strategy {cons("Test")}
+
+    %% Primitives
+
+    "prim" "(" String ")" 		  -> Strategy {cons("PrimNoArgs")}
+    "prim" "(" String "," {Term ","}* ")" -> Strategy {cons("Prim")}
+
+    %% Congruence operators
+
+    String 				  -> Strategy {cons("StrCong")}
+    Int 				  -> Strategy {cons("IntCong")}
+    Real 				  -> Strategy {cons("RealCong")}
+    Char 			 	  -> Strategy {cons("CharCong")}
+
+    String "(" {Strategy ","}* ")" 	  -> Strategy {cons("CongQ")}
+
+    %%"(" {Strategy ","}* ")" 		  -> Strategy {cons("TupleCong"),avoid}
+
+    Strategy StrategyCurly		  -> Strategy {cons("AnnoCong")}
+    
+    "{" Strategy "}"		  	  -> StrategyCurly {cons("StrategyCurly")}
+
+    "("  ")" 		  		  -> Strategy {cons("EmptyTupleCong")}
+   "(" Strategy  ")" 		          -> Strategy {bracket}
+    "(" Strategy "," {Strategy ","}+ ")"  -> Strategy {cons("TupleCong")}
+
+%%    Mod 	  			  -> Strategy {cons("ModCongNoArgs")}
+%%    Mod "(" {Strategy ","}* ")"	  	  -> Strategy {cons("ModCong")}
+%%    Id "^" Id				  -> Mod {cons("Mod")}
+    "[" {Strategy ","}* "]" 		  -> Strategy {cons("ListCongNoTail")}
+    "[" {Strategy ","}* "|" Strategy "]"  -> Strategy {cons("ListCong")}
+
+%%    Strategy "#" "(" StrategyInj ")" 	  -> Strategy {cons("ExplodeCong")}
+%%    Strategy "#" "(" Strategy ")" 	  -> Strategy {cons("ExplodeCong")}
+    Strategy "#" StrategyParen	  	  -> Strategy {cons("ExplodeCong")}
+
+  %% Syntactic sugar sugar
+
+  sorts SwitchCase
+  context-free syntax
+
+    SVar  		  		  -> Strategy {cons("CallNoArgs")}
+    "\\" Rule "\\" 			  -> Strategy {cons("LRule")}
+    "(" Rule ")" 			  -> Strategy {cons("SRule")}
+    Strategy "+" Strategy 		  -> Strategy {cons("Choice"),right} 
+    Strategy "+>" Strategy 		  -> Strategy {cons("RChoice"),right}
+
+    "proceed"                          -> Strategy {cons("ProceedNoArgs"), prefer}
+    "proceed" "(" {Strategy "," }+ ")" -> Strategy {cons("Proceed"), prefer}
+
+    "if" Strategy "then" Strategy 
+                  "else" Strategy "end"   -> Strategy {cons("CondChoice")}
+    "if" Strategy "then" Strategy "end"   -> Strategy {cons("IfThen")}
+
+    "switch" Strategy SwitchCase* "end"   -> Strategy {cons("SwitchChoiceNoOtherwise")}
+    "switch" Strategy SwitchCase*
+         "otherwise" ":" Strategy "end"   -> Strategy {cons("SwitchChoice")}
+
+    "case" Strategy ":" Strategy          -> SwitchCase {cons("SwitchCase")}
+
+    Strategy "=>" Term 		  	  -> Strategy {cons("AM")}
+
+    Term ":=" Term			  -> Strategy {cons("Assign")}
+
+  %% Priorities
+
+  context-free priorities
+    { Strategy StrategyCurly		  -> Strategy
+      Strategy "#" StrategyParen          -> Strategy
+    }
+  > { "!" Term 				  -> Strategy
+      "?" Term 				  -> Strategy
+    }
+  > StrategyAngle Term 		          -> Strategy
+  > Strategy "=>" Term 		  	  -> Strategy
+  > Strategy ";" Strategy 		  -> Strategy
+  > {right: 
+     Strategy "+" Strategy 		  -> Strategy
+     Strategy "<+" Strategy 		  -> Strategy
+     Strategy "+>" Strategy 		  -> Strategy
+     
+     Strategy "<" StrategyMid 
+              "+" Strategy 		  -> Strategy
+    }
+
+  context-free priorities
+    Strategy 				  -> StrategyMid
+  > Strategy "+" Strategy 		  -> Strategy
+
+  context-free priorities
+    { Strategy StrategyCurly      -> Strategy
+      Strategy "#" StrategyParen  -> Strategy
+    }
+    .> Term ":=" Term -> Strategy
+
+
+module Stratego-Sugar-Terms
+imports
+  Stratego-Core-Terms
+  Stratego-Sugar-Strategies
+
+exports
+  sorts LID
+  context-free syntax
+    LId 			-> LID  {cons("ListVar")}
+    LID				-> Var  {cons("Var")}
+    LID				-> ID
+
+  context-free syntax
+    "_" PreTerm 		 -> PreTerm {cons("BuildDefaultPT")}
+    "_" Term 			 -> Term {cons("BuildDefault"),prefer}
+
+    Char 			 -> PreTerm {cons("Char")}
+
+    PreTerm "{" {Term ","}* "}"	 -> Term {cons("AnnoList")}
+    PreTerm                      -> Term {cons("NoAnnoList")}
+
+    "<" Strategy ">" Term 	 -> PreTerm {cons("App")}
+    "<" Strategy ">" Term 	 -> Term {cons("App"),prefer}
+
+    StrategyAngle		 -> PreTerm {cons("RootApp")}
+    StrategyAngle		 -> Term {cons("RootApp"),prefer}
+
+    "(" {Term ","}* ")" 	 -> PreTerm {cons("Tuple")}
+    "[" {Term ","}* "]" 	 -> PreTerm {cons("List")}
+    "[" {Term ","}* "|" Term "]" -> PreTerm {cons("ListTail")}
+
+  context-free priorities
+    Term "#" "(" Term ")" 	 -> PreTerm {cons("Explode")}
+  > PreTerm "{" {Term ","}* "}"	 -> Term {cons("AnnoList")}
+  > Var "@" Term 		 -> Term {cons("As")}
+
+module Stratego-Sugar-Signatures
+imports
+  Stratego-Core-Signatures
+  Stratego-Sugar-Constants
+
+exports
+
+  sorts Sort
+  context-free syntax
+    "[" {Sort ","}* "]"		 -> Sort {cons("SortList")}
+    "[" {Sort ","}* "|" Sort "]" -> Sort {cons("SortListTl")}
+    "(" {Sort ","}* ")"		 -> Sort {cons("SortTuple")}
+
+  sorts Kind
+  context-free syntax
+    "*" 			-> Kind {cons("Star")}
+    "**" 			-> Kind {cons("StarStar")}
+
+module Stratego-Core-Signatures
+imports
+  Stratego-Core-Identifiers
+  Stratego-Core-Constants
+exports
+  sorts Sdecl
+  context-free syntax
+    "sorts" Sort* 		-> Sdecl {cons("Sorts")}
+    "constructors" Opdecl* 	-> Sdecl {cons("Constructors")}
+
+  sorts Sort
+  context-free syntax
+    LCID 			 -> Sort {cons("SortVar")}
+    UCID 			 -> Sort {cons("SortNoArgs")}
+    Id "(" {Sort ","}* ")" 	 -> Sort {cons("Sort")}
+
+  sorts Opdecl
+  context-free syntax
+    Id     ":" Type 		-> Opdecl {cons("OpDecl")}
+    String ":" Type 		-> Opdecl {cons("OpDeclQ")}
+           ":" Type 		-> Opdecl {cons("OpDeclInj")}
+
+  context-free syntax
+    "external" Id     ":" Type 	-> Opdecl {cons("ExtOpDecl")}
+    "external" String ":" Type 	-> Opdecl {cons("ExtOpDeclQ")}
+    "external"        ":" Type 	-> Opdecl {cons("ExtOpDeclInj")}
+
+  sorts Type ArgType ConstType FunType RetType
+  context-free syntax
+    Sort	                -> ConstType {cons("ConstType")}
+    {ArgType "*"}+ "->" RetType -> FunType {cons("FunType")}
+    "(" Type ")"                -> ArgType {bracket}
+    ConstType			-> ArgType
+    Type	                -> RetType
+    FunType			-> RetType {reject}
+
+    FunType			-> Type
+    ConstType			-> Type
+
+  %%%
+   %% Restriction is required for the Sort* in Sdecl: List(a) is
+   %% ambiguous.
+   %%%
+  context-free restrictions
+    Sort -/- [\(]
+
+module Stratego-Core-Terms
+imports
+  Stratego-Core-Identifiers
+  Stratego-Core-Constants
+
+exports
+  sorts ID Var Wld
+  context-free syntax
+    Id 				-> Var  {cons("Var")}
+    Id				-> ID
+    %% ":" Var                  -> Var  {cons("SeqVar")}
+
+  sorts Term PreTerm
+  context-free syntax
+    Var 			 -> PreTerm 
+    Var 			 -> Term {prefer}
+
+    "_" 			 -> Wld {cons("Wld")}
+    Wld 			 -> PreTerm
+    Wld 			 -> Term {prefer}
+
+    Int 			 -> PreTerm {cons("Int")}
+    Real 			 -> PreTerm {cons("Real")}
+    String 			 -> PreTerm {cons("Str")}
+
+    Id "(" {Term ","}* ")" 	 -> PreTerm {cons("Op")}
+    String "(" {Term ","}* ")" 	 -> PreTerm {cons("OpQ")}
+    Term "#" "(" Term ")" 	 -> PreTerm {cons("Explode")}
+
+    PreTerm "{^" PreTerm "}"	 -> Term {cons("Anno")}
+
+    Var "@" Term 		 -> Term {cons("As"),prefer}
+    Var "@" PreTerm 		 -> PreTerm {cons("As")}
+
+  context-free priorities
+    Term "#" "(" Term ")" 	 -> PreTerm {cons("Explode")}
+  > Var "@" Term 		 -> Term {cons("As")}
+
+module Stratego-Core-Strategies
+imports
+  Stratego-Core-Terms
+  Stratego-Core-Constants
+  Stratego-Core-Signatures
+
+exports
+  sorts Def
+  context-free syntax
+    StrategyDef					 -> Def 
+    Id						 -> SVar {cons("SVar")}
+    "let" Def* "in" Strategy "end"		 -> Strategy {cons("Let")}
+    SVar "(" {Strategy ","}* "|" {Term ","}* ")" -> Strategy {cons("CallT")}
+
+    "call" "(" Term "|" {Strategy ","}* "|" {Term ","}* ")" -> Strategy {cons("CallDynamic")}
+
+
+  sorts StrategyDef
+  context-free syntax
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("SDefT")}
+
+    Anno+ StrategyDef -> Def {cons("AnnoDef")}
+
+    "external"
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("ExtSDefInl")}
+
+    "external"
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")"		   -> StrategyDef {cons("ExtSDef")}
+
+    "external"
+    EmptyId "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")"		   -> StrategyDef {cons("ExtSDef")}
+
+
+  sorts EmptyId
+  lexical syntax
+  
+    -> EmptyId
+
+  sorts Anno
+  context-free syntax
+    "extend"      -> Anno {cons("Extend")}
+    "override"    -> Anno {cons("Override")}
+    "internal"    -> Anno {cons("Internal")}
+%%  "sealed"      -> Anno {cons("Sealed")}
+%%  "extensible"  -> Anno {cons("Extensible")}
+%%  "overridable" -> Anno {cons("Overridable")}
+
+  lexical syntax
+    
+    "extend"      -> Keyword
+    "override"    -> Keyword
+    "internal"    -> Keyword
+    "sealed"      -> Keyword
+    "extensible"  -> Keyword
+    "overridable" -> Keyword
+
+  lexical restrictions
+  
+    "extend"
+    "override"
+    "internal"
+    "sealed"
+    "extensible"
+    "overridable" -/- [a-zA-Z0-9\'\-\_]
+
+  sorts Typedid
+  context-free syntax
+    ID ":" Type 			  -> Typedid {cons("VarDec")}
+
+
+  sorts Strategy SVar StrategyParen StrategyMid 
+  context-free syntax
+    "(" Strategy ")"			  -> StrategyParen {cons("ParenStrat")}
+
+    "fail" 				  -> Strategy {cons("Fail")}
+    "id" 				  -> Strategy {cons("Id")}
+
+    "proceed" "(" {Strategy ","}* "|" {Term ","}* ")" -> Strategy {cons("ProceedT"), prefer}
+    "proceed"                                         -> Strategy {cons("ProceedNoArgs"), prefer}
+
+    %% Match and build
+
+    "?" Term 				  -> Strategy {cons("Match")}
+    "!" Term 				  -> Strategy {cons("Build")}
+    "{" {ID ","}* ":" Strategy "}" 	  -> Strategy {cons("Scope")}
+
+    %% Combinators
+
+    Strategy ";" Strategy 		  -> Strategy {cons("Seq"),right}
+    Strategy "<" StrategyMid 
+             "+" Strategy 		  -> Strategy {cons("GuardedLChoice"),right}
+    Strategy 				  -> StrategyMid
+
+    %% Primitives
+
+    "prim" "(" String "," {Strategy ","}* "|" {Term ","}*")"  -> Strategy {cons("PrimT")}
+
+    %% Traversal
+
+    "some" "(" Strategy ")" 		  -> Strategy {cons("Some")}
+    "one" "(" Strategy ")" 		  -> Strategy {cons("One")}
+    "all" "(" Strategy ")" 		  -> Strategy {cons("All")}
+
+  %% Priorities
+
+  context-free priorities
+    { "!" Term 				  -> Strategy {cons("Build")}
+      "?" Term 				  -> Strategy {cons("Match")}
+    }
+  > Strategy ";" Strategy 		  -> Strategy {cons("Seq"),right}
+  > {right: 
+     Strategy "<" StrategyMid 
+              "+" Strategy 		  -> Strategy {cons("GuardedLChoice"),right}
+    }
+
+  context-free syntax
+    "import-term" "(" ModName ")" -> Strategy {cons("ImportTerm")}
+
+module Stratego-Core-Modules
+imports
+  Stratego-Core-Identifiers
+  Stratego-Core-Strategies
+  Stratego-Core-Signatures
+
+exports 
+  sorts Module
+  context-free syntax
+    "module" ModName Decl* 	 -> Module {cons("Module")}
+    "specification" Decl*	 -> Module {cons("Specification")}
+
+  sorts Decl 
+  context-free syntax
+    "imports" ImportModName* 	-> Decl {cons("Imports")}
+    "strategies" Def* 		-> Decl {cons("Strategies")}
+    "signature" Sdecl*  	-> Decl {cons("Signature")}
+
+  sorts ImportModName
+  context-free syntax
+    ModName              -> ImportModName {cons("Import")}
+  syntax
+    <ModName-CF> "/" "-" -> <ImportModName-CF> {cons("ImportWildcard")}
+
+module Stratego-Sugar-Modules
+imports
+  Stratego-Core-Modules
+  Stratego-Sugar-Strategies
+  Stratego-Sugar-Signatures
+  Stratego-Sugar-Overlays
+  Stratego-Sugar-Rules
+
+exports 
+
+  sorts Decl Def
+  context-free syntax
+    "rules" Def* 		-> Decl {cons("Rules")}
+    "overlays" Overlay* 	-> Decl {cons("Overlays")}
+
+    RuleDef 			-> Def 
+
+
+module Stratego-Sugar-StringQuotations
+exports
+
+  sorts
+    StringQuotation
+    StringQuotedPart1 StringQuotedChars1 DollarOpen1 DollarClose1 QuotedBracket1 Dollar1
+    StringQuotedPart2 StringQuotedChars2 DollarOpen2 DollarClose2 QuotedBracket2 Dollar2
+    StringQuotedPart3 StringQuotedChars3 DollarOpen3 DollarClose3 QuotedBracket3 Dollar3
+    StringQuotedPart4 StringQuotedChars4 DollarOpen4 DollarClose4 QuotedBracket4  Dollar4
+    Padding
+
+  context-free syntax
+
+    StringQuotation -> PreTerm
+
+  syntax
+
+    StringQuotation -> <PreTerm-CF>
+
+    "$" "[" Padding StringQuotedPart1*               "]"    -> StringQuotation {cons("StringQuotation1") }
+     Padding "[" <LAYOUT?-CF> <Term-CF> <LAYOUT?-CF> "]"    -> StringQuotedPart1 {cons("StringEscape1")}
+    <StringQuotedChars1-LEX>                                -> StringQuotedPart1 {cons("QStr")}
+    <Dollar1-LEX>                                           -> StringQuotedPart1 {cons("QDollar")}
+    "$" <QuotedBracket1-LEX> "$"                            -> StringQuotedPart1 {cons("QBr")}
+    ~[\[\]\$]+                                              -> <StringQuotedChars1-LEX>
+    [\[\]]                                                  -> <QuotedBracket1-LEX>
+    "$"                                                     -> <Dollar1-LEX>
+
+    "$" "{" Padding StringQuotedPart2*               "}"    -> StringQuotation {cons("StringQuotation2") }
+     Padding "{" <LAYOUT?-CF> <Term-CF> <LAYOUT?-CF> "}"    -> StringQuotedPart2 {cons("StringEscape2")}
+    <StringQuotedChars2-LEX>                                -> StringQuotedPart2 {cons("QStr")}
+    <Dollar2-LEX>                                           -> StringQuotedPart2 {cons("QDollar")}
+    "$" <QuotedBracket2-LEX> "$"                            -> StringQuotedPart2 {cons("QBr")}
+    ~[\{\}\$]+                                              -> <StringQuotedChars2-LEX>
+    [\{\}]                                                  -> <QuotedBracket2-LEX>
+    "$"                                                     -> <Dollar2-LEX>
+
+    "$" "(" Padding StringQuotedPart3*              ")"     -> StringQuotation {cons("StringQuotation3") }
+    Padding "(" <LAYOUT?-CF> <Term-CF> <LAYOUT?-CF> ")"     -> StringQuotedPart3 {cons("StringEscape3")}
+    <StringQuotedChars3-LEX>                                -> StringQuotedPart3 {cons("QStr")}
+    <Dollar3-LEX>                                           -> StringQuotedPart3 {cons("QDollar")}
+    "$" <QuotedBracket3-LEX> "$"                            -> StringQuotedPart3 {cons("QBr")}
+    ~[\(\)\$]+                                              -> <StringQuotedChars3-LEX>
+    [\(\)]                                                  -> <QuotedBracket3-LEX>
+    "$"                                                     -> <Dollar3-LEX>
+
+    "$" "<" Padding StringQuotedPart4*               ">"    -> StringQuotation {cons("StringQuotation4") }
+    Padding "<"  <LAYOUT?-CF> <Term-CF> <LAYOUT?-CF> ">"    -> StringQuotedPart4 {cons("StringEscape4")}
+    <StringQuotedChars4-LEX>                                -> StringQuotedPart4 {cons("QStr")}
+    <Dollar4-LEX>                                           -> StringQuotedPart4 {cons("QDollar")}
+    "$" <QuotedBracket4-LEX> "$"                            -> StringQuotedPart4 {cons("QBr")}
+    ~[\<\>\$]+                                              -> <StringQuotedChars4-LEX>
+    [\<\>]                                                  -> <QuotedBracket4-LEX>
+    "$"                                                     -> <Dollar4-LEX>
+   
+    %% Padding is a dummy lexical that will contain the indentation prefix of every quotation
+    <Padding-LEX>                                           -> Padding
+                                                            -> <Padding-LEX> {indentpadding}
+
+  lexical restrictions
+
+    StringQuotedChars1 -/- ~[\[\]\$]   
+    StringQuotedChars2 -/- ~[\{\}\$]    
+    StringQuotedChars3 -/- ~[\(\)\$]    
+    StringQuotedChars4 -/- ~[\<\>\$]
+    Dollar1            -/- [\[\]] . [\$]
+    Dollar2            -/- [\{\}] . [\$]
+    Dollar3            -/- [\(\)] . [\$]
+    Dollar4            -/- [\<\>] . [\$]
+
+module Stratego-Core-Constants
+exports
+  sorts Int Real String StrChar
+  lexical syntax
+    [\-]? [0-9]+ 		-> Int
+    [\-]? [0-9]+ [\.] [0-9]+ 	-> Real
+    "\"" StrChar* "\"" 		-> String
+    ~[\"\\] 			-> StrChar
+    [\\] [\"tnr\\] 		-> StrChar
+
+
+module Stratego-Sugar-Constants
+imports
+  Stratego-Core-Identifiers
+  Stratego-Core-Constants
+  Stratego-Sugar-StringQuotations
+exports
+  sorts Char CharChar
+  lexical syntax
+    "'" CharChar "'"		-> Char
+    ~[\']			-> CharChar
+    [\\] [\'ntr\ ]		-> CharChar
+    Char		 	-> Id {reject}
+
+module Stratego-Core-Identifiers
+exports
+  sorts ModName ModNamePart
+  lexical syntax
+    {ModNamePart "/"}+ -> ModName
+    [a-zA-Z\.\_] [a-zA-Z0-9\'\.\-\_]* -> ModNamePart
+  lexical restrictions
+    ModName -/- [a-zA-Z0-9\'\.\-\_]
+  lexical syntax
+    "imports" 		-> ModName {reject}
+    "overlays" 		-> ModName {reject}
+    "rules" 		-> ModName {reject}
+    "signature" 	-> ModName {reject}
+    "strategies" 	-> ModName {reject}
+
+  sorts Id LId LCID UCID Wld
+  lexical syntax
+    [a-zA-Z\_] [a-zA-Z0-9\'\-\_]*     -> Id
+    [a-zA-Z\_] [a-zA-Z0-9\'\-\_]* "*" -> LId
+    [\'] [a-z]+                       -> Id
+
+    [a-z] [a-zA-Z0-9\'\-\_]*  -> LCID
+    [A-Z] [a-zA-Z0-9\'\-\_]*  -> UCID
+
+  lexical restrictions
+    Id   -/- [a-zA-Z0-9\'\-\_\*]
+    LId  -/- [a-zA-Z0-9\'\-\_]
+    LCID -/- [a-zA-Z0-9\'\-\_]
+    UCID -/- [a-zA-Z0-9\'\-\_]
+
+  lexical syntax
+    "_"     -> Id {reject}
+    "'"     -> Id {reject}
+
+    Keyword -> Id   {reject}
+    Keyword -> LId  {reject}
+    Keyword -> LCID {reject}
+    Keyword -> UCID {reject}
+
+  lexical restrictions
+    "all"
+    "case" %% not reserved kw
+    "constructors"
+    "else" %% not reserved kw
+    "end" %% not reserved kw
+    "external" %% not reserved kw
+    "fail"
+    "id"
+    "if" %% not reserved kw
+    "in"
+    "imports" %% not reserved kw
+    "let"
+    "module"
+    "not"
+    "one"
+    "overlays"
+    "otherwise" %% not reserved kw
+    "prim"
+    "rec" %% not reserved kw
+    "rules"
+    "script"
+    "signature"
+    "some"
+    "sorts"
+    "strategies"
+    "stratego"
+    "switch" %% not reserved kw
+    "test"
+    "then" %% not reserved kw
+    "where"
+    "import-term"
+      -/- [a-zA-Z0-9\'\-\_]
+  
+  context-free restrictions
+    Wld -/- [a-zA-Z0-9\'\-\_]
+
+  sorts Keyword
+  lexical syntax
+    "all"               -> Keyword
+    "constructors" 	-> Keyword
+    "fail" 		-> Keyword
+    "id" 		-> Keyword
+    "in" 		-> Keyword
+    "let" 		-> Keyword
+    "module" 		-> Keyword
+    "not" 		-> Keyword
+    "one" 		-> Keyword
+    "overlays" 		-> Keyword
+    "prim" 		-> Keyword
+    "rules" 		-> Keyword
+    "script" 		-> Keyword
+    "signature" 	-> Keyword
+    "some" 		-> Keyword
+    "sorts" 		-> Keyword
+    "strategies" 	-> Keyword
+    "stratego" 		-> Keyword
+    "test" 		-> Keyword
+    "where" 		-> Keyword
+    "import-term"	-> Keyword
+
+
+module Stratego-Core-Layout
+exports
+  sorts Ws ShortCom LongCom CommChar Asterisk Eof 
+  lexical syntax
+    [\t\ \n\r]			-> Ws
+
+    "//" ~[\n]* ([\n] | Eof)	-> ShortCom
+    "/*" CommChar* "*/"	-> LongCom
+				-> Eof  
+
+    ~[\*]     -> CommChar
+
+    "*"       -> Asterisk
+    Asterisk  -> CommChar
+
+  lexical restrictions
+    Asterisk -/- [\/]
+    Eof      -/- ~[]
+
+  lexical syntax
+    ShortCom 	-> LAYOUT
+    LongCom 	-> LAYOUT
+    Ws 		-> LAYOUT
+
+  context-free restrictions
+    LAYOUT? -/- [\ \t\n\r]
+    LAYOUT? -/- [\/].[\*]
+    LAYOUT? -/- [\/].[\/]
+
+module Stratego-Sugar-Layout
+imports Stratego-Core-Layout
+%%exports
+%%  sorts VeryLongCom Eof VLCchar Backslash
+%%  lexical syntax
+%%    "\\end{code}" VLCchar* "\\begin{code}" -> VeryLongCom
+%%    "\\begin{code}" 			   -> VeryLongCom
+%%    "\\end{code}" VLCchar* Eof 		   -> VeryLongCom
+%%    "\\literate" VLCchar* "\\begin{code}"  -> VeryLongCom
+%%    ~[\\] 				   -> VLCchar
+%%    Backslash 				   -> VLCchar
+%%    [\\] 				   -> Backslash
+
+%%  lexical restrictions
+%%    Backslash -/- [b].[e].[g].[i].[n].[\{].[c].[o].[d].[e].[\}]
+%%    Eof -/- ~[]
+
+%%  lexical syntax
+%%    VeryLongCom -> LAYOUT
+
+
+
+module Stratego-Sugar
+imports
+  Stratego-Sugar-Layout
+  Stratego-Core-Identifiers
+  Stratego-Sugar-Constants 
+  Stratego-Sugar-Modules
+  Stratego-Sugar-Signatures
+  Stratego-Sugar-Terms
+  Stratego-Sugar-Strategies
+  Stratego-Sugar-Rules
+  Stratego-Sugar-DynamicRules
+  Stratego-Sugar-Overlays
+
+hiddens
+  context-free start-symbols Module
+
+module Stratego
+imports Stratego-Sugar
+hiddens
+  context-free start-symbols Module
+
+module StrategoMix[Ctx0]
+imports Stratego
+          [ RuleNames          => RuleNames[[Ctx0]]
+            RuleDec            => RuleDec[[Ctx0]]
+            DynRuleScopeId     => DynRuleScopeId[[Ctx0]]
+            DynRuleId          => DynRuleId[[Ctx0]]
+            DynRuleDef         => DynRuleDef[[Ctx0]]
+            ScopeLabels        => ScopeLabels[[Ctx0]]
+            RuleCond           => RuleCond[[Ctx0]]
+            Rule               => Rule[[Ctx0]]
+            RuleDef            => RuleDef[[Ctx0]]
+            Overlay            => Overlay[[Ctx0]]
+            SwitchCase         => SwitchCase[[Ctx0]]
+            StrategyCurly      => StrategyCurly[[Ctx0]]
+            StrategyAngle      => StrategyAngle[[Ctx0]]
+            Kind               => Kind[[Ctx0]]
+            LID                => LID[[Ctx0]]
+            ImportModName      => ImportModName[[Ctx0]]
+            Decl               => Decl[[Ctx0]]
+            Module             => Module[[Ctx0]]
+            StrategyParen      => StrategyParen[[Ctx0]]
+            Typedid            => Typedid[[Ctx0]]
+            Anno               => Anno[[Ctx0]]
+            EmptyId            => EmptyId[[Ctx0]]
+            StrategyDef        => StrategyDef[[Ctx0]]
+            SVar               => SVar[[Ctx0]]
+            Def                => Def[[Ctx0]]
+            Type               => Type[[Ctx0]]
+            RetType            => RetType[[Ctx0]]
+            ArgType            => ArgType[[Ctx0]]
+            FunType            => FunType[[Ctx0]]
+            ConstType          => ConstType[[Ctx0]]
+            Opdecl             => Opdecl[[Ctx0]]
+            Sort               => Sort[[Ctx0]]
+            Sdecl              => Sdecl[[Ctx0]]
+            Wld                => Wld[[Ctx0]]
+            ID                 => ID[[Ctx0]]
+            Var                => Var[[Ctx0]]
+            CharChar           => CharChar[[Ctx0]]
+            Char               => Char[[Ctx0]]
+            Padding            => Padding[[Ctx0]]
+            Dollar4            => Dollar4[[Ctx0]]
+            QuotedBracket4     => QuotedBracket4[[Ctx0]]
+            StringQuotedChars4 => StringQuotedChars4[[Ctx0]]
+            StringQuotedPart4  => StringQuotedPart4[[Ctx0]]
+            Dollar3            => Dollar3[[Ctx0]]
+            QuotedBracket3     => QuotedBracket3[[Ctx0]]
+            StringQuotedChars3 => StringQuotedChars3[[Ctx0]]
+            StringQuotedPart3  => StringQuotedPart3[[Ctx0]]
+            Dollar2            => Dollar2[[Ctx0]]
+            QuotedBracket2     => QuotedBracket2[[Ctx0]]
+            StringQuotedChars2 => StringQuotedChars2[[Ctx0]]
+            StringQuotedPart2  => StringQuotedPart2[[Ctx0]]
+            Dollar1            => Dollar1[[Ctx0]]
+            QuotedBracket1     => QuotedBracket1[[Ctx0]]
+            StringQuotedChars1 => StringQuotedChars1[[Ctx0]]
+            StringQuotedPart1  => StringQuotedPart1[[Ctx0]]
+            StringQuotation    => StringQuotation[[Ctx0]]
+            StrChar            => StrChar[[Ctx0]]
+            String             => String[[Ctx0]]
+            Real               => Real[[Ctx0]]
+            Int                => Int[[Ctx0]]
+            Keyword            => Keyword[[Ctx0]]
+            UCID               => UCID[[Ctx0]]
+            LCID               => LCID[[Ctx0]]
+            LId                => LId[[Ctx0]]
+            Id                 => Id[[Ctx0]]
+            ModNamePart        => ModNamePart[[Ctx0]]
+            ModName            => ModName[[Ctx0]]
+            PreTerm            => PreTerm[[Ctx0]]
+            Term               => Term[[Ctx0]]
+            StrategyMid        => StrategyMid[[Ctx0]]
+            Strategy           => Strategy[[Ctx0]] ]


From L.C.L.Kats at tudelft.nl  Mon Jun  7 11:15:14 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 07 Jun 2010 09:15:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20951 - LennartKats -
	strategoxt/trunk/stratego-front/syn
	strategoxt/trunk/strc-core/lib/stratego/strc/pack
	strategoxt/trunk/strc-core/lib/stratego/strc/parse
	strategoxt/trunk/strc-core/lib/stratego/strc/strc
	strc-java/trunk/trans
Message-ID: <201006070915.o579FEjS007269@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-07 09:15:13 +0000 (Mon, 07 Jun 2010)
New Revision: 20951

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20951&view=rev

Modified:
   strategoxt/trunk/stratego-front/syn/Stratego-Sugar-Strategies.sdf
   strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego-options.str
   strategoxt/trunk/strc-core/lib/stratego/strc/parse/parse-stratego.str
   strategoxt/trunk/strc-core/lib/stratego/strc/strc/strc-options.str
   strc-java/trunk/trans/strj-options.str

Log:
- StrategoXT/826: Add a --default-syntax option to strc/strj
- New --cache-dir option (first step towards integrating sep-comp-tool)


Changes:

Modified: strategoxt/trunk/stratego-front/syn/Stratego-Sugar-Strategies.sdf
===================================================================
--- strategoxt/trunk/stratego-front/syn/Stratego-Sugar-Strategies.sdf	2010-06-05 17:11:16 UTC (rev 20950)
+++ strategoxt/trunk/stratego-front/syn/Stratego-Sugar-Strategies.sdf	2010-06-07 09:15:13 UTC (rev 20951)
@@ -86,7 +86,6 @@
     Strategy "+" Strategy 		  -> Strategy {cons("Choice"),right} 
     Strategy "+>" Strategy 		  -> Strategy {cons("RChoice"),right}
 
-    "proceed"                          -> Strategy {cons("ProceedNoArgs"), prefer}
     "proceed" "(" {Strategy "," }+ ")" -> Strategy {cons("Proceed"), prefer}
 
     "if" Strategy "then" Strategy 

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego-options.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego-options.str	2010-06-05 17:11:16 UTC (rev 20950)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego-options.str	2010-06-07 09:15:13 UTC (rev 20951)
@@ -27,6 +27,9 @@
 	where(<set-config> ("--slack", ())); !(),
 	!"--slack              Continue when module is not found")
 
+    + ArgOption("--default-syntax", where(<set-config>("--default-syntax", <id>)),
+	      !"--default-syntax syn        use syntax syn as default")
+
     + Option("--asfix",
         where(<set-config> ("--asfix", "")); !(),
         !"--asfix              Do not implode the concrete syntax parts")
@@ -34,6 +37,10 @@
     + Option("--prefer-str",
         where(<set-config> ("--prefer-str", "")); !(),
         !"--prefer-str              Prefer .str files over .rtree files")
+
+  + ArgOption("--cache-dir",
+        where(<set-config> ("--cache-dir", <where(file-exists; filemode; isdir <+ mkdir)>)); !(),
+        !"--cache-dir <dir>  Maintain a parse cache in <dir>")
  
     + ArgOption("--desugaring", 
         where(<set-config>("--desugaring", <id>)),

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/parse/parse-stratego.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/parse/parse-stratego.str	2010-06-05 17:11:16 UTC (rev 20950)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/parse/parse-stratego.str	2010-06-07 09:15:13 UTC (rev 20951)
@@ -19,6 +19,10 @@
     On  : Switch
     Off : Switch
 
+overlays
+  
+  PS_FS_TIMESTAMP_GRANULARITY = 2
+
 strategies
 
   parse-stratego-options =
@@ -38,6 +42,10 @@
 
   + Option("--asfix", where(<set-config>("--asfix", 1)), !"--asfix")
 
+  + ArgOption("--cache-dir",
+        where(<set-config> ("--cache-dir", <where(file-exists; filemode; isdir <+ mkdir)>)); !(),
+        !"--cache-dir <dir>  Maintain a parse cache in <dir>")
+
   + ArgOption("--desugaring", where(<set-config>("--desugaring", <id>)),
 	      !"--desugaring on/off : turn desugaring on or off (default: off)")
 
@@ -128,17 +136,19 @@
    */
   ps-parse-module-trm =
       file at FILE(filename) := <xtc-ensure-file>
-    ; log(|Notice(), <concat-strings>["Parsing file ", filename])
     ; where(id
       ; base := <remove-extension> filename
       ; path := <path-of-xtc-file> file
+      )
+    ; !path
+    ; ps-parse-cached(
+        log(|Notice(), <concat-strings>["Parsing file ", filename])
       ; meta := <ps-get-meta> file
       ; tbl  := <ps-get-syntax; ps-get-parse-table> meta
     
       // sglr settings
       ; <ps-set-filters> meta
       ; srt := <ps-get-sort> meta
-      )
     
     ; <parse-xtc-file-pt(err(|["cannot open file ", path]), strsglr-report-parse-error | tbl, srt, path)> file
 
@@ -170,6 +180,7 @@
           meta-explode(false)
         end
       end
+    )
 
     ; where(if-not-silent(ps-check-module-name(|base)))
 
@@ -178,6 +189,52 @@
       end
 
 /**
+ * Parse caching.
+ */
+strategies
+
+  ps-parse-cached(parse):
+    path -> ast
+    with
+      if <get-config> "--cache-dir"; ps-uses-default-implode-options then
+        abs-path   := <abspath> path
+      ; cache-path := <ps-cache-path> abs-path
+      ; (   <ps-is-newer> (cache-path, path)
+          ; ast := <ReadFromFile> cache-path
+        <+
+            ast := <parse> path
+          ; <WriteToBinaryFile> (cache-path, ast)
+        )
+      else
+        ast := <parse>
+      end
+  
+  /** Succeeds if the default option flags are used. (Ignores --desugar.) */
+  ps-uses-default-implode-options =
+    not(
+      ps-must-preserve-comments
+    + ps-must-preserve-positions
+    + ps-must-preserve-asfix-in-quotes
+    + ps-must-yield-quotes
+    )
+    
+  ps-is-newer:
+    (file1, file2) -> <id>
+    where
+      <gt> (<file-exists; modification-time> file1,
+            <file-exists; modification-time; ps-add-fs-granularity> file2)
+  
+  ps-add-fs-granularity:
+    timestamp -> <add> (timestamp, PS_FS_TIMESTAMP_GRANULARITY())
+  
+  ps-cache-path:
+    full-path -> cache-path
+    with
+      cache-dir  := <get-config> "--cache-dir";
+      full-path' := <string-replace(|"/", "+"); string-replace(|"\\", "+"); string-replace(|":", "+")> <guarantee-extension(|"rtree")> full-path;
+      cache-path := $[[cache-dir]/[full-path']]
+
+/**
  * Main parsing strategies.
  */
 

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/strc/strc-options.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/strc/strc-options.str	2010-06-05 17:11:16 UTC (rev 20950)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/strc/strc-options.str	2010-06-07 09:15:13 UTC (rev 20951)
@@ -214,6 +214,13 @@
   + Option("--prefer-str",
         where(<set-config> ("--prefer-str", "")); !(),
         !"--prefer-str       Prefer .str files over .rtree files")
+
+  + ArgOption("--default-syntax", where(<set-config>("--default-syntax", <id>)),
+	      !"--default-syntax syn        use syntax syn as default")
+
+  + ArgOption("--cache-dir",
+        where(<set-config> ("--cache-dir", <where(file-exists; filemode; isdir <+ mkdir)>)); !(),
+        !"--cache-dir <dir>  Maintain a compilation cache in <dir>")
  
   + ArgOption("-O",
         where(<set-config>("-O", <string-to-int; strc-set-opt-level> )); !(),

Modified: strc-java/trunk/trans/strj-options.str
===================================================================
--- strc-java/trunk/trans/strj-options.str	2010-06-05 17:11:16 UTC (rev 20950)
+++ strc-java/trunk/trans/strj-options.str	2010-06-07 09:15:13 UTC (rev 20951)
@@ -100,6 +100,13 @@
     where(<set-config> ("--prefer-str", "")); !(),
     !"--prefer-str       Prefer .str files over .rtree files")
   <+
+    ArgOption("--default-syntax", where(<set-config>("--default-syntax", <id>)),
+	!"--default-syntax syn        use syntax syn as default")
+  <+
+    ArgOption("--cache-dir",
+    where(<set-config> ("--cache-dir", <where(file-exists; filemode; isdir <+ mkdir)>)),
+    !"--cache-dir <dir>  Maintain a compilation cache in <dir>")
+  <+
     Option("--fusion",     
     where(<toggle-config>("--fusion",())); !(),
     !"--fusion           Toggle specialize applications of innermost (default: on)" )


From L.C.L.Kats at tudelft.nl  Mon Jun  7 11:16:00 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 07 Jun 2010 09:16:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20952 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr
	spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr
	strc-java/trunk/java
Message-ID: <201006070916.o579G0ng007274@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-07 09:15:59 +0000 (Mon, 07 Jun 2010)
New Revision: 20952

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20952&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_stratego.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Action.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Label.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Main.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseTable.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/RangeList.java
   strc-java/trunk/java/spoofax-libs.jar

Log:
tweaks

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_stratego.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_stratego.java	2010-06-07 09:15:13 UTC (rev 20951)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_stratego.java	2010-06-07 09:15:59 UTC (rev 20952)
@@ -1,5 +1,6 @@
 package org.spoofax.interpreter.library.jsglr;
 
+import java.io.BufferedInputStream;
 import java.io.FileInputStream;
 import java.io.FileNotFoundException;
 import java.io.IOException;
@@ -43,7 +44,7 @@
 		if(StrategoSGLR == null)
 			return false;
 		try {
-			parsed = StrategoSGLR.parse(new FileInputStream(path));
+			parsed = StrategoSGLR.parse(new BufferedInputStream(new FileInputStream(path)));
 		} catch (FileNotFoundException e) {
 			System.err.println("File not found.");
 			return false;

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Action.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Action.java	2010-06-07 09:15:13 UTC (rev 20951)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Action.java	2010-06-07 09:15:59 UTC (rev 20952)
@@ -49,7 +49,7 @@
 
     public boolean rejectable() {
         for(ActionItem ai : items) {
-            if(ai instanceof Reduce) {
+            if(ai.type == ActionItem.REDUCE) {
                 Reduce r = (Reduce) ai;
                 if(r.status == ProductionType.REJECT)
                     return true;
@@ -61,7 +61,7 @@
 
     public boolean hasPrefer() {
         for(ActionItem ai : items)
-            if(ai instanceof Reduce) {
+            if(ai.type == ActionItem.REDUCE) {
                 Reduce r = (Reduce) ai;
                 if(r.status == ProductionType.PREFER)
                     return true;
@@ -71,7 +71,7 @@
 
     public boolean hasAvoid() {
         for(ActionItem ai : items)
-            if(ai instanceof Reduce) {
+            if(ai.type == ActionItem.REDUCE) {
                 Reduce r = (Reduce) ai;
                 if(r.status == ProductionType.AVOID) {
                     if(SGLR.isDebugging()) {

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Label.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Label.java	2010-06-07 09:15:13 UTC (rev 20951)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Label.java	2010-06-07 09:15:59 UTC (rev 20952)
@@ -13,12 +13,12 @@
 
 public class Label implements Serializable {
 
-    static final long serialVersionUID = -4080621639747161438L;
+    private static final long serialVersionUID = -4080621639747161438L;
     
-    public final int labelNumber;
-    public final transient ATermAppl prod;
-    public final ProductionAttributes productionAttributes;
-    public final boolean injection;
+    final int labelNumber;
+    final ATermAppl prod;
+    private final ProductionAttributes productionAttributes;
+    private final boolean injection;
     
     public Label(int labelNumber, ATermAppl prod, ProductionAttributes productionAttributes, boolean injection) {
         this.labelNumber = labelNumber;
@@ -54,6 +54,10 @@
         return injection;
     }
     
+    public ATermAppl getProduction() {
+        return prod;
+    }
+    
     @Override
     public boolean equals(Object obj) {
         return obj instanceof Label && ((Label) obj).labelNumber == labelNumber;

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Main.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Main.java	2010-06-07 09:15:13 UTC (rev 20951)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Main.java	2010-06-07 09:15:59 UTC (rev 20952)
@@ -7,6 +7,7 @@
  */
 package org.spoofax.jsglr;
 
+import java.io.BufferedInputStream;
 import java.io.FileInputStream;
 import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
@@ -94,7 +95,7 @@
         if(input == null)
             fis = System.in;
         else
-            fis = new FileInputStream(input);
+            fis = new BufferedInputStream(new FileInputStream(input));
         OutputStream ous = null;
         if(output != null)
             ous = new FileOutputStream(output);

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseTable.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseTable.java	2010-06-07 09:15:13 UTC (rev 20951)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseTable.java	2010-06-07 09:15:59 UTC (rev 20952)
@@ -7,6 +7,8 @@
  */
 package org.spoofax.jsglr;
 
+import static java.util.Arrays.asList;
+
 import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.Collections;
@@ -608,4 +610,8 @@
 	public void lookupAction(int stateNumber, int peekNextToken) {
 		throw new NotImplementedException();
 	}
+	
+	public List<Label> getLabels() {
+	    return Collections.unmodifiableList(asList(labels));
+	}
 }

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/RangeList.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/RangeList.java	2010-06-07 09:15:13 UTC (rev 20951)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/RangeList.java	2010-06-07 09:15:59 UTC (rev 20952)
@@ -18,13 +18,14 @@
     private final int singularRange;
     
     public RangeList(Range... ranges) {
-        // Assume unsanitized input
-        List<Range> sortedRanges = toSortedList(ranges);
-        List<Range> sanitizedRanges = mergeOverlap(sortedRanges);
-        this.ranges = rangesToArray(sanitizedRanges);
         if (ranges.length == 1 && ranges[0].low == ranges[0].high) {
+            this.ranges = null;
             singularRange = ranges[0].low;
         } else {
+            // Assume unsanitized input
+            List<Range> sortedRanges = toSortedList(ranges);
+            List<Range> sanitizedRanges = mergeOverlap(sortedRanges);
+            this.ranges = rangesToArray(sanitizedRanges);
             singularRange = NONE;
         }
     }
@@ -65,7 +66,7 @@
     }
     
     public boolean within(int c) {
-        if (c == singularRange) return true;
+        if (singularRange != NONE) return c == singularRange;
         for (int i = 0; i < ranges.length; i += 2) {
             int low = ranges[i];
             if (low <= c) {
@@ -93,35 +94,48 @@
      * Returns a char value that can be used for "brute-force" recovery
      */
     public int getFirstRangeElement() {
-        return ranges[0];
+        return singularRange == NONE ? ranges[0] : singularRange;
     }
     
+    public int getLastRangeElement() {
+        return singularRange == NONE ? ranges[ranges.length - 1] : singularRange;
+    }
+    
     @Override
     public boolean equals(Object obj) {
-        return obj instanceof RangeList
-            && Arrays.equals(((RangeList) obj).ranges, ranges);
+        if (!(obj instanceof RangeList))
+            return false;
+        if (singularRange == NONE) {
+            return Arrays.equals(((RangeList) obj).ranges, ranges);
+        } else {
+            return singularRange == ((RangeList) obj).singularRange;
+        }
     }
     
     @Override
     public int hashCode() {
-        return Arrays.hashCode(ranges);
+        return singularRange == NONE ? Arrays.hashCode(ranges) : singularRange;
     }
     
     @Override
     public String toString() {
         StringBuilder sb = new StringBuilder();
-        sb.append('[');
-        for (int i = 0, end = ranges.length - 1; i < end; i++) {
-            int low = ranges[i];
-            int high = ranges[i + 1];
-            sb.append(low);
-            if (low != high) {
-                sb.append('-');
-                sb.append(high);
+        if (singularRange != NONE) {
+            sb.append(singularRange);
+        } else {
+            sb.append('[');
+            for (int i = 0, end = ranges.length - 1; i < end; i++) {
+                int low = ranges[i];
+                int high = ranges[i + 1];
+                sb.append(low);
+                if (low != high) {
+                    sb.append('-');
+                    sb.append(high);
+                }
+                sb.append(',');
             }
-            sb.append(',');
+            sb.replace(sb.length() - 1, sb.length(), "]");
         }
-        sb.replace(sb.length() - 1, sb.length(), "]");
         return sb.toString();
     }
 }

Modified: strc-java/trunk/java/spoofax-libs.jar
===================================================================
(Binary files differ)


From L.C.L.Kats at tudelft.nl  Mon Jun  7 11:17:59 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 07 Jun 2010 09:17:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20953 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.aterm/editor
	org.strategoxt.imp.generator
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <201006070917.o579Hxh7007284@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-07 09:17:59 +0000 (Mon, 07 Jun 2010)
New Revision: 20953

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20953&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/editor/ATerm.main.esv
   spoofax-imp/trunk/org.strategoxt.imp.generator/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java

Log:
- Added --cache-dir option to build.generated.xml
- Added -I lib option to build.generated.xml
- New spoofax.default.jar/ctree targets (as suggested by Zef)
- Added tentative new meta-sdf2table target


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/editor/ATerm.main.esv
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/editor/ATerm.main.esv	2010-06-07 09:15:59 UTC (rev 20952)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/editor/ATerm.main.esv	2010-06-07 09:17:59 UTC (rev 20953)
@@ -11,6 +11,6 @@
   description   : "Spoofax/IMP-generated editor for the ATerm language"
   url           : http://strategoxt.org
                   
-  extensions    : aterm,term
+  extensions    : aterm,term,meta
   table         : include/ATerm.tbl
   start symbols : ATerm

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/build.properties
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/build.properties	2010-06-07 09:15:59 UTC (rev 20952)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/build.properties	2010-06-07 09:17:59 UTC (rev 20953)
@@ -5,6 +5,7 @@
                includes,\
                lib/make_permissive.jar,\
                lib/sdf2imp.jar,\
-               lib/aster.jar
+               lib/aster.jar,\
+               lib/StrategoMix.def
 src.includes = src/,\
                lib/

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.str	2010-06-07 09:15:59 UTC (rev 20952)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.str	2010-06-07 09:17:59 UTC (rev 20953)
@@ -15,5 +15,6 @@
                plugin.xml,\\
                include/,\\
                bin/,\\
+               lib/,\\
                .
 "
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-06-07 09:15:59 UTC (rev 20952)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-06-07 09:17:59 UTC (rev 20953)
@@ -26,6 +26,7 @@
         
         <!-- Key input modules -->
         <property name="sdfmodule" value="<%= name %>"/>
+        <property name="metasdfmodule" value="Stratego-<%= name %>"/>
         <property name="esvmodule" value="<%= name %>"/>
         <property name="strmodule" value="<%= name' %>"/>
     
@@ -40,8 +41,10 @@
         
         <!-- Imports -->
         <property name="build.sdf.imports" value=""/>
-        <property name="build.stratego.args" value="--library
-                        -I &quot;${trans}&quot; -I &quot;${basedir}&quot;
+        <property name="build.stratego.args" value="
+                        --library
+                        -I &quot;${trans}&quot;
+                        -I &quot;${basedir}&quot;
                         -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm"/>
         
         <!-- External .def and .jar locations
@@ -59,7 +62,7 @@
         <import file="build.generated.xml"/>
     
         <!-- Main target -->
-        <target name="all" depends="spoofaximp.default"/>
+        <target name="all" depends="spoofaximp.default.ctree"/>
     </project>
     <%
   
@@ -73,9 +76,11 @@
     %>
     <?xml version="1.0" encoding="UTF-8"?>
     <project name="build.generated">
+
+        <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
+        <target name="spoofaximp.default.ctree" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar"   depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
     
-        <target name="spoofaximp.default" depends="sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-    
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
         <dirname property="externaldefdir" file="${externaldef}"/>
@@ -147,6 +152,14 @@
             </apply>
         </target>
         
+        <target name="meta-sdf2table">
+            <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+            <antcall target="sdf2table">
+                <param name="sdfmodule" value="${metasdfmodule}"/>
+                <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+            </antcall>
+        </target>
+        
         <target name="make-permissive" depends="pack-sdf,copy-sdf">
             <dependset>
                 <srcfileset file="${include}/${sdfmodule}.def"/>
@@ -195,6 +208,8 @@
                 <arg value="-I"/>
                 <arg value="${syntax}"/>
                 <arg value="-I"/>
+                <arg value="${utils}"/>
+                <arg value="-I"/>
                 <arg value="${lib}"/>
                 <arg line="${build.sdf.imports}"/>
             </java>
@@ -414,6 +429,7 @@
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaljarflags}"/>
                 <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
             </java>
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <mkdir dir="${build}/trans"/>
@@ -439,6 +455,7 @@
                 <arg line="${build.stratego.args}"/>
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
                 
                 <fileset file="${trans}/${strmodule}.str"/>
                 <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str	2010-06-07 09:15:59 UTC (rev 20952)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str	2010-06-07 09:17:59 UTC (rev 20953)
@@ -69,15 +69,15 @@
           rules(
             IsImported: path
           );
-          if <is-newer> (cache-path, path) then
+          ( <is-newer> (cache-path, path);
             file := <ReadFromFile> cache-path
-          else
+          <+
             file := <parse-file> path;
             if <file-exists> path then
               // Only cache if on filesystem (e.g., ignore libstratego-lib)
               <WriteToBinaryFile> (cache-path, file)
             end        
-          end;
+          );
           ${$| CurrentFile:
             rules(CurrentFile := path);
             <record-declarations> file

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java	2010-06-07 09:15:59 UTC (rev 20952)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java	2010-06-07 09:17:59 UTC (rev 20953)
@@ -30,8 +30,14 @@
 
 	private static final long serialVersionUID = 1L;
 
-	PriorityBlockingQueue<UpdateJob> queue;
+	private final PriorityBlockingQueue<UpdateJob> queue;
 
+	/*
+	 * Indicates whether a job is currently running.
+	 * Only one job can be running at any given time.
+	 */
+	private volatile boolean running = false;
+
 	public class UpdateJob extends Job {
 
 		StrategoAnalysisJob job;
@@ -146,12 +152,6 @@
 
 	}
 
-	/*
-	 * Indicates whether a job is currently running.
-	 * Only one job can be running at any given time.
-	 */
-	private volatile boolean running = false;
-
 	private void wake() {
 		if (running)
 			return;
@@ -188,8 +188,7 @@
 	 */
 	public UpdateJob queueAnalysis(IPath path, IProject project) {
 
-		StrategoObserverBackgroundUpdateJob job = new StrategoObserverBackgroundUpdateJob();
-		job.setup(path, project);
+		StrategoObserverBackgroundUpdateJob job = new StrategoObserverBackgroundUpdateJob(path, project);
 
 		UpdateJob updateJob = new UpdateJob(job, path, UpdateJob.BACKGROUND, true, 0);
 		add(updateJob);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java	2010-06-07 09:15:59 UTC (rev 20952)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java	2010-06-07 09:17:59 UTC (rev 20953)
@@ -23,23 +23,13 @@
 
 public class StrategoObserverBackgroundUpdateJob implements StrategoAnalysisJob {
 
-	IPath path;
-	IProject project;
-	StrategoProgressMonitor progress;
-	StrategoObserver observer;
-	SGLRParseController parseController;
+	private final IPath path;
+	private final IProject project;
+	private StrategoProgressMonitor progress;
+	private StrategoObserver observer;
+	private SGLRParseController parseController;
 	
-	/**
-	 * Constructor
-	 */
-	public StrategoObserverBackgroundUpdateJob() {
-	}
-	
-	/**
-	 * Setup
-	 * @param path
-	 */
-	public void setup(IPath path, IProject project) {
+	public StrategoObserverBackgroundUpdateJob(IPath path, IProject project) {
 		this.path = path;
 		this.project = project;
 	}


From L.C.L.Kats at tudelft.nl  Mon Jun  7 15:52:11 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 07 Jun 2010 13:52:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20954 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.aster
	org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.pp org.strategoxt.imp.editors.sdf
	org.strategoxt.imp.editors.stratego
Message-ID: <201006071352.o57DqCwg011570@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-07 13:52:11 +0000 (Mon, 07 Jun 2010)
New Revision: 20954

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20954&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml

Log:
updated build files

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-06-07 09:17:59 UTC (rev 20953)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-06-07 13:52:11 UTC (rev 20954)
@@ -1,9 +1,11 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
 <project name="build.generated">
+
+        <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
+        <target name="spoofaximp.default.ctree" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
     
-        <target name="spoofaximp.default" depends="sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-    
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
         <dirname property="externaldefdir" file="${externaldef}"/>
@@ -75,6 +77,14 @@
             </apply>
         </target>
         
+        <target name="meta-sdf2table">
+            <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+            <antcall target="sdf2table">
+                <param name="sdfmodule" value="${metasdfmodule}"/>
+                <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+            </antcall>
+        </target>
+        
         <target name="make-permissive" depends="pack-sdf,copy-sdf">
             <dependset>
                 <srcfileset file="${include}/${sdfmodule}.def"/>
@@ -123,6 +133,8 @@
                 <arg value="-I"/>
                 <arg value="${syntax}"/>
                 <arg value="-I"/>
+                <arg value="${utils}"/>
+                <arg value="-I"/>
                 <arg value="${lib}"/>
                 <arg line="${build.sdf.imports}"/>
             </java>
@@ -342,6 +354,7 @@
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaljarflags}"/>
                 <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
             </java>
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <mkdir dir="${build}/trans"/>
@@ -367,6 +380,7 @@
                 <arg line="${build.stratego.args}"/>
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
                 
                 <fileset file="${trans}/${strmodule}.str"/>
                 <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-06-07 09:17:59 UTC (rev 20953)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-06-07 13:52:11 UTC (rev 20954)
@@ -1,9 +1,11 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
 <project name="build.generated">
+
+        <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
+        <target name="spoofaximp.default.ctree" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
     
-        <target name="spoofaximp.default" depends="sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-    
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
         <dirname property="externaldefdir" file="${externaldef}"/>
@@ -75,6 +77,14 @@
             </apply>
         </target>
         
+        <target name="meta-sdf2table">
+            <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+            <antcall target="sdf2table">
+                <param name="sdfmodule" value="${metasdfmodule}"/>
+                <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+            </antcall>
+        </target>
+        
         <target name="make-permissive" depends="pack-sdf,copy-sdf">
             <dependset>
                 <srcfileset file="${include}/${sdfmodule}.def"/>
@@ -123,6 +133,8 @@
                 <arg value="-I"/>
                 <arg value="${syntax}"/>
                 <arg value="-I"/>
+                <arg value="${utils}"/>
+                <arg value="-I"/>
                 <arg value="${lib}"/>
                 <arg line="${build.sdf.imports}"/>
             </java>
@@ -342,6 +354,7 @@
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaljarflags}"/>
                 <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
             </java>
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <mkdir dir="${build}/trans"/>
@@ -367,6 +380,7 @@
                 <arg line="${build.stratego.args}"/>
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
                 
                 <fileset file="${trans}/${strmodule}.str"/>
                 <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-06-07 09:17:59 UTC (rev 20953)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-06-07 13:52:11 UTC (rev 20954)
@@ -1,9 +1,11 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
 <project name="build.generated">
+
+        <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
+        <target name="spoofaximp.default.ctree" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
     
-        <target name="spoofaximp.default" depends="sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-    
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
         <dirname property="externaldefdir" file="${externaldef}"/>
@@ -75,6 +77,14 @@
             </apply>
         </target>
         
+        <target name="meta-sdf2table">
+            <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+            <antcall target="sdf2table">
+                <param name="sdfmodule" value="${metasdfmodule}"/>
+                <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+            </antcall>
+        </target>
+        
         <target name="make-permissive" depends="pack-sdf,copy-sdf">
             <dependset>
                 <srcfileset file="${include}/${sdfmodule}.def"/>
@@ -123,6 +133,8 @@
                 <arg value="-I"/>
                 <arg value="${syntax}"/>
                 <arg value="-I"/>
+                <arg value="${utils}"/>
+                <arg value="-I"/>
                 <arg value="${lib}"/>
                 <arg line="${build.sdf.imports}"/>
             </java>
@@ -342,6 +354,7 @@
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaljarflags}"/>
                 <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
             </java>
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <mkdir dir="${build}/trans"/>
@@ -367,6 +380,7 @@
                 <arg line="${build.stratego.args}"/>
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
                 
                 <fileset file="${trans}/${strmodule}.str"/>
                 <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	2010-06-07 09:17:59 UTC (rev 20953)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	2010-06-07 13:52:11 UTC (rev 20954)
@@ -1,9 +1,11 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
 <project name="build.generated">
+
+        <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
+        <target name="spoofaximp.default.ctree" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
     
-        <target name="spoofaximp.default" depends="sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-    
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
         <dirname property="externaldefdir" file="${externaldef}"/>
@@ -75,6 +77,14 @@
             </apply>
         </target>
         
+        <target name="meta-sdf2table">
+            <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+            <antcall target="sdf2table">
+                <param name="sdfmodule" value="${metasdfmodule}"/>
+                <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+            </antcall>
+        </target>
+        
         <target name="make-permissive" depends="pack-sdf,copy-sdf">
             <dependset>
                 <srcfileset file="${include}/${sdfmodule}.def"/>
@@ -123,6 +133,8 @@
                 <arg value="-I"/>
                 <arg value="${syntax}"/>
                 <arg value="-I"/>
+                <arg value="${utils}"/>
+                <arg value="-I"/>
                 <arg value="${lib}"/>
                 <arg line="${build.sdf.imports}"/>
             </java>
@@ -342,6 +354,7 @@
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaljarflags}"/>
                 <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
             </java>
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <mkdir dir="${build}/trans"/>
@@ -367,6 +380,7 @@
                 <arg line="${build.stratego.args}"/>
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
                 
                 <fileset file="${trans}/${strmodule}.str"/>
                 <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-06-07 09:17:59 UTC (rev 20953)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-06-07 13:52:11 UTC (rev 20954)
@@ -1,9 +1,11 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
 <project name="build.generated">
+
+        <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
+        <target name="spoofaximp.default.ctree" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
     
-        <target name="spoofaximp.default" depends="sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-    
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
         <dirname property="externaldefdir" file="${externaldef}"/>
@@ -75,6 +77,14 @@
             </apply>
         </target>
         
+        <target name="meta-sdf2table">
+            <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+            <antcall target="sdf2table">
+                <param name="sdfmodule" value="${metasdfmodule}"/>
+                <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+            </antcall>
+        </target>
+        
         <target name="make-permissive" depends="pack-sdf,copy-sdf">
             <dependset>
                 <srcfileset file="${include}/${sdfmodule}.def"/>
@@ -123,6 +133,8 @@
                 <arg value="-I"/>
                 <arg value="${syntax}"/>
                 <arg value="-I"/>
+                <arg value="${utils}"/>
+                <arg value="-I"/>
                 <arg value="${lib}"/>
                 <arg line="${build.sdf.imports}"/>
             </java>
@@ -342,6 +354,7 @@
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaljarflags}"/>
                 <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
             </java>
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <mkdir dir="${build}/trans"/>
@@ -367,6 +380,7 @@
                 <arg line="${build.stratego.args}"/>
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
                 
                 <fileset file="${trans}/${strmodule}.str"/>
                 <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-06-07 09:17:59 UTC (rev 20953)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-06-07 13:52:11 UTC (rev 20954)
@@ -1,9 +1,11 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
 <project name="build.generated">
+
+        <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
+        <target name="spoofaximp.default.ctree" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
     
-        <target name="spoofaximp.default" depends="sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-    
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
         <dirname property="externaldefdir" file="${externaldef}"/>
@@ -75,6 +77,14 @@
             </apply>
         </target>
         
+        <target name="meta-sdf2table">
+            <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+            <antcall target="sdf2table">
+                <param name="sdfmodule" value="${metasdfmodule}"/>
+                <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+            </antcall>
+        </target>
+        
         <target name="make-permissive" depends="pack-sdf,copy-sdf">
             <dependset>
                 <srcfileset file="${include}/${sdfmodule}.def"/>
@@ -123,6 +133,8 @@
                 <arg value="-I"/>
                 <arg value="${syntax}"/>
                 <arg value="-I"/>
+                <arg value="${utils}"/>
+                <arg value="-I"/>
                 <arg value="${lib}"/>
                 <arg line="${build.sdf.imports}"/>
             </java>
@@ -342,6 +354,7 @@
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaljarflags}"/>
                 <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
             </java>
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <mkdir dir="${build}/trans"/>
@@ -367,6 +380,7 @@
                 <arg line="${build.stratego.args}"/>
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
                 
                 <fileset file="${trans}/${strmodule}.str"/>
                 <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>


From L.C.L.Kats at tudelft.nl  Mon Jun  7 15:54:51 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 07 Jun 2010 13:54:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20955 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.sdf/lib
	org.strategoxt.imp.editors.stratego/lib org.strategoxt.imp.feature
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.updatesite
Message-ID: <201006071354.o57Dsp0C011590@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-07 13:54:51 +0000 (Mon, 07 Jun 2010)
New Revision: 20955

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20955&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Spoofax/155: Projects cannot be renamed

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str	2010-06-07 13:52:11 UTC (rev 20954)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str	2010-06-07 13:54:51 UTC (rev 20955)
@@ -56,15 +56,15 @@
           rules(
             IsImported: path
           );
-          if <is-newer> (cache-path, path) then
+          ( <is-newer> (cache-path, path);
             file := <ReadFromFile> cache-path
-          else
+          <+
             file := <parse-file> path;
             if <file-exists> path then
               // Only cache if on filesystem (e.g., ignore libstratego-lib)
               <WriteToBinaryFile> (cache-path, file)
             end        
-          end;
+          );
           {| CurrentFile:
             rules(CurrentFile := path);
             <record-declarations> file
@@ -213,3 +213,35 @@
   Entity   : ID * List(Property) -> Entity
   Property : ID * Type           -> Property
   Type     : ID                  -> Type
+
+strategies
+  
+  // Set markers for a given file. Use when checking files from a queued strategy.
+  // Current term: (ast-desugared, errors, warnings, notes) tuple
+  // ast: the root node of the file to set markers on 
+  set-markers(|ast) = prim("SSL_EXT_set_markers", ast)
+
+  // Indicate that one or more files need analysis. 
+  // Current term: ss a list of absolute file paths, or a single absolute file path to analyze
+  queue-analysis = 
+       (is-list; list-loop(queue-analysis))
+    <+ prim("SSL_EXT_queue_analysis")
+
+  // Set the total number of work units to complete. Can be called multiple times. 
+  // Current term: number of work units (int).
+  set-total-work-units = prim("SSL_EXT_set_total_work_units")
+  
+  // Complete one work unit and update progress monitors.
+  // Current term: ignored
+  complete-work-unit = prim("SSL_EXT_complete_work_unit")
+  
+  // Queue a strategy for background processing with a progress indicator.
+  // Current term: the term to pass to the background strategy
+  // s: the strategy, as string
+  // description: name of the task (will be shown in progress view)
+  queue-strategy(|s,description) = prim("SSL_EXT_queue_strategy", s, description)
+  
+  // Return the result of this strategy to indicate a non-completed (backgrounded) analysis.
+  // Editor services (hover, resolve) will be delayed until a complete analysis is performed. 
+  set-analysis-backgrounded = !"BACKGROUNDED"
+  

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str	2010-06-07 13:52:11 UTC (rev 20954)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str	2010-06-07 13:54:51 UTC (rev 20955)
@@ -56,15 +56,15 @@
           rules(
             IsImported: path
           );
-          if <is-newer> (cache-path, path) then
+          ( <is-newer> (cache-path, path);
             file := <ReadFromFile> cache-path
-          else
+          <+
             file := <parse-file> path;
             if <file-exists> path then
               // Only cache if on filesystem (e.g., ignore libstratego-lib)
               <WriteToBinaryFile> (cache-path, file)
             end        
-          end;
+          );
           {| CurrentFile:
             rules(CurrentFile := path);
             <record-declarations> file
@@ -213,3 +213,35 @@
   Entity   : ID * List(Property) -> Entity
   Property : ID * Type           -> Property
   Type     : ID                  -> Type
+
+strategies
+  
+  // Set markers for a given file. Use when checking files from a queued strategy.
+  // Current term: (ast-desugared, errors, warnings, notes) tuple
+  // ast: the root node of the file to set markers on 
+  set-markers(|ast) = prim("SSL_EXT_set_markers", ast)
+
+  // Indicate that one or more files need analysis. 
+  // Current term: ss a list of absolute file paths, or a single absolute file path to analyze
+  queue-analysis = 
+       (is-list; list-loop(queue-analysis))
+    <+ prim("SSL_EXT_queue_analysis")
+
+  // Set the total number of work units to complete. Can be called multiple times. 
+  // Current term: number of work units (int).
+  set-total-work-units = prim("SSL_EXT_set_total_work_units")
+  
+  // Complete one work unit and update progress monitors.
+  // Current term: ignored
+  complete-work-unit = prim("SSL_EXT_complete_work_unit")
+  
+  // Queue a strategy for background processing with a progress indicator.
+  // Current term: the term to pass to the background strategy
+  // s: the strategy, as string
+  // description: name of the task (will be shown in progress view)
+  queue-strategy(|s,description) = prim("SSL_EXT_queue_strategy", s, description)
+  
+  // Return the result of this strategy to indicate a non-completed (backgrounded) analysis.
+  // Editor services (hover, resolve) will be delayed until a complete analysis is performed. 
+  set-analysis-backgrounded = !"BACKGROUNDED"
+  

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-07 13:52:11 UTC (rev 20954)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-07 13:54:51 UTC (rev 20955)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.5.1.2"
+      version="0.5.1.3"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-06-07 13:52:11 UTC (rev 20954)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-06-07 13:54:51 UTC (rev 20955)
@@ -17,7 +17,6 @@
     name       := <get-sdf-main-module>;
     name'      := <trans-module-name>;
     classname  := <get-main-class-name>;
-    pkgname    := <BasePackage <+ default-package-name>;
     
     <output-xml-file(|[], "build.main.xml")>
     %>
@@ -70,7 +69,6 @@
     name       := <get-sdf-main-module>;
     name'      := <trans-module-name>;
     classname  := <get-main-class-name>;
-    pkgname    := <BasePackage <+ default-package-name>;
     
     <output-xml-file(|[], "build.generated.xml")>
     %>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str	2010-06-07 13:52:11 UTC (rev 20954)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str	2010-06-07 13:54:51 UTC (rev 20955)
@@ -13,40 +13,19 @@
   create-builder-xml =
     <file-exists> $[.externalToolBuilders/[<builder-xml-name>]]
   <+
-    not(ProjectName);
-    warn-msg(|$[Project name not specified, cannot regenerate [<builder-xml-name>]])
-  <+
     // We use plain text since the XML pretty printer has problems with this file.
     // Also, half the time ${project_name} AND ${project_loc} don't work
     // (they might only work in the context of the project or whatever),
     // so we're using a compile-time 'project-name' variable instead.
-    // FIXME: use of project-name in builder.xml breaks project renaming :(
     // TODO: maybe ${build_project} works? seems tricky for new projects
-    project-name := <ProjectName>;
-    sdf-name     := <get-sdf-main-module>;
     
     <output-text-file(|[".externalToolBuilders"], <builder-xml-name>)> 
 $[ <?xml version="1.0" encoding="UTF-8" standalone="no"?>
 <launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
 <stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
 <booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
-<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; id=&quot;1260698330169_15&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/[
-    project-name]/editor/[sdf-name]-Builders.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/[
-    project-name]/editor/[sdf-name]-Colorer.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/[
-    project-name]/editor/[sdf-name]-Folding.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/[
-    project-name]/editor/[sdf-name]-Outliner.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/[
-    project-name]/editor/[sdf-name]-References.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/[
-    project-name]/editor/[sdf-name]-Syntax.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/[
-    project-name]/lib/editor-common.str&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/[
-    project-name]/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/[
-    project-name]/build.generated.xml&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/[
-    project-name]/utils&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
-<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
-<listEntry value="/[project-name]/build.main.xml"/>
-</listAttribute>
-<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
-<listEntry value="1"/>
-</listAttribute>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES"/>
 <booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
 <listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
 <listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
@@ -55,12 +34,12 @@
 </listAttribute>
 <stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
 <booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
-<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="[project-name]"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value=""/>
 <stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="all,"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${none}"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/[project-name]/build.main.xml}"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/[project-name]}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${build_project}/build.main.xml"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${build_project}"/>
 <stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
 </launchConfiguration>
 ]

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-07 13:52:11 UTC (rev 20954)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-07 13:54:51 UTC (rev 20955)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.5.1.2.jar" id="org.strategoxt.imp" version="0.5.1.2">
+   <feature url="features/org.strategoxt.imp_0.5.1.3.jar" id="org.strategoxt.imp" version="0.5.1.3">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">


From R.B.Vermaas at tudelft.nl  Mon Jun  7 15:58:59 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 07 Jun 2010 13:58:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20956 - rob - hydra/jobs
Message-ID: <201006071358.o57DwxlH011640@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2010-06-07 13:58:59 +0000 (Mon, 07 Jun 2010)
New Revision: 20956

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20956&view=rev

Added:
   hydra/jobs/org.spoofax.aterm.nix
   hydra/jobs/org.spoofax.jsglr.nix

Log:


Changes:

Added: hydra/jobs/org.spoofax.aterm.nix
===================================================================
--- hydra/jobs/org.spoofax.aterm.nix	                        (rev 0)
+++ hydra/jobs/org.spoofax.aterm.nix	2010-06-07 13:58:59 UTC (rev 20956)
@@ -0,0 +1,19 @@
+{ nixpkgs ? ../../nixpkgs
+, spoofaxATerm ? { outPath = ../../org.spoofax.aterm ; rev = 1234; }
+}:
+let 
+  pkgs = import nixpkgs { system = "i686-linux"; };
+in
+{ 
+  build = pkgs.releaseTools.antBuild {
+    name   = "spoofax-aterm";
+    stdenv = pkgs.stdenv;
+    src    = spoofaxATerm;
+
+    antTargets = ["compile" "jar" "check"];
+
+    buildfile = "build.ant.xml";
+    buildInputs = [pkgs.ant];
+  };
+
+}

Added: hydra/jobs/org.spoofax.jsglr.nix
===================================================================
--- hydra/jobs/org.spoofax.jsglr.nix	                        (rev 0)
+++ hydra/jobs/org.spoofax.jsglr.nix	2010-06-07 13:58:59 UTC (rev 20956)
@@ -0,0 +1,34 @@
+{ nixpkgs ? ../../nixpkgs
+, spoofaxJsglr ? { outPath = ../../org.spoofax.jsglr ; rev = 1234; }
+, spoofaxATerm ? (import ./org.spoofax.aterm.nix { }).build
+}:
+let 
+  pkgs = import nixpkgs { system = "i686-linux"; };
+  jars = with pkgs; {
+    junit =
+      fetchurl {
+        url = http://www.ii.uib.no/~karltk/spoofax/extras/junit-3.8.1.jar;
+        sha256 = "0w1d059m21hxxn6yf46g8ql35184jp0jnngk6zbvx47116alb3mm";
+      };
+    antjunit =
+      fetchurl {
+        url = http://www.ii.uib.no/~karltk/spoofax/extras/ant-junit-1.6.5.jar;
+        sha256 = "1bvigg8grqb7c68xc5b917s1ijqjhp2swibk781kf57iddi1k3fk";
+      };
+  };
+  extraJars = with jars; [ junit antjunit ];
+in
+{ 
+  build = pkgs.releaseTools.antBuild {
+    name   = "spoofax-jsglr";
+    stdenv = pkgs.stdenv;
+    src    = spoofaxJsglr;
+
+    antTargets = ["compile" "jar" "check"];
+
+    antBuildInputs = [spoofaxATerm jars.junit jars.antjunit];
+
+    buildfile = "build.ant.xml";
+    buildInputs = [pkgs.ant];
+  };
+}


From R.B.Vermaas at tudelft.nl  Mon Jun  7 16:22:22 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 07 Jun 2010 14:22:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20957 - rob - hydra/jobs
Message-ID: <201006071422.o57EMMiF012064@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2010-06-07 14:22:21 +0000 (Mon, 07 Jun 2010)
New Revision: 20957

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20957&view=rev

Modified:
   hydra/jobs/org.spoofax.jsglr.nix

Log:


Changes:

Modified: hydra/jobs/org.spoofax.jsglr.nix
===================================================================
--- hydra/jobs/org.spoofax.jsglr.nix	2010-06-07 13:58:59 UTC (rev 20956)
+++ hydra/jobs/org.spoofax.jsglr.nix	2010-06-07 14:22:21 UTC (rev 20957)
@@ -30,5 +30,9 @@
 
     buildfile = "build.ant.xml";
     buildInputs = [pkgs.ant];
+
+    preConfigure = ''
+      mkdir -p lib/
+    '';
   };
 }


From L.C.L.Kats at tudelft.nl  Mon Jun  7 16:48:33 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 07 Jun 2010 14:48:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20958 - LennartKats -
	strategoxt/trunk
Message-ID: <201006071448.o57EmXet012335@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-07 14:48:33 +0000 (Mon, 07 Jun 2010)
New Revision: 20958

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20958&view=rev

Added:
   strategoxt/trunk/.disable-global-analysis

Log:
Added .disable-global-analysis file for now.

Changes:

Added: strategoxt/trunk/.disable-global-analysis
===================================================================
--- strategoxt/trunk/.disable-global-analysis	                        (rev 0)
+++ strategoxt/trunk/.disable-global-analysis	2010-06-07 14:48:33 UTC (rev 20958)
@@ -0,0 +1 @@
+This file disables Spoofax/IMP inter-file analysis of .str files in this project.


From n.bruning at student.tudelft.nl  Tue Jun  8 11:40:36 2010
From: n.bruning at student.tudelft.nl (Nathan Bruning)
Date: Tue, 08 Jun 2010 09:40:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20959 - NathanBruning -
	strategoxt/trunk/stratego-front/syn
Message-ID: <201006080940.o589eaYE029484@proliant.st.ewi.tudelft.nl>

Author: NathanBruning
Date: 2010-06-08 09:40:36 +0000 (Tue, 08 Jun 2010)
New Revision: 20959

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20959&view=rev

Modified:
   strategoxt/trunk/stratego-front/syn/Makefile.am

Log:
Fix 'make install' issue

Changes:

Modified: strategoxt/trunk/stratego-front/syn/Makefile.am
===================================================================
--- strategoxt/trunk/stratego-front/syn/Makefile.am	2010-06-07 14:48:33 UTC (rev 20958)
+++ strategoxt/trunk/stratego-front/syn/Makefile.am	2010-06-08 09:40:36 UTC (rev 20959)
@@ -21,7 +21,7 @@
   Stratego-Sugar-in-Stratego.tbl \
   Stratego-Core-in-Stratego.tbl
 
-sdfdata_DATA = $(TBLS) $(DEFS) StrategoRenamed.sdf $(wildcard *.sdf)
+sdfdata_DATA = $(TBLS) $(DEFS) StrategoRenamed.sdf $(filter-out StrategoRenamed.sdf,$(wildcard *.sdf))
 
 EXTRA_DIST     = $(DEFS) $(GEN_MODS) $(wildcard *.sdf) 
 CLEANFILES     = $(TBLS) $(wildcard *.dep)


From L.C.L.Kats at tudelft.nl  Tue Jun  8 13:50:24 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 08 Jun 2010 11:50:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20960 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
	org.strategoxt.imp.updatesite
Message-ID: <201006081150.o58BoOP3031571@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-08 11:50:24 +0000 (Tue, 08 Jun 2010)
New Revision: 20960

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20960&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/KeywordRecognizer.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/TokenColorerFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/TokenKindManager.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Spoofax/93: Add fallback syntax highlighting in case of syntax errors

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-08 09:40:36 UTC (rev 20959)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-08 11:50:24 UTC (rev 20960)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.5.1.3"
+      version="0.5.1.4"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/TokenColorerFactory.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/TokenColorerFactory.java	2010-06-08 09:40:36 UTC (rev 20959)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/TokenColorerFactory.java	2010-06-08 11:50:24 UTC (rev 20960)
@@ -50,7 +50,7 @@
 			}
 		}
 		
-		return new TokenColorer(envMappings, nodeMappings, tokenMappings);
+		return new TokenColorer(controller, envMappings, nodeMappings, tokenMappings);
 	}
 
 	private static void addMapping(IStrategoAppl rule, List<TextAttributeMapping> mappings,

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	2010-06-08 09:40:36 UTC (rev 20959)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	2010-06-08 11:50:24 UTC (rev 20960)
@@ -373,12 +373,15 @@
 				// Recovered by skipping a region
 				int beginSkipped = i;
 				int endSkipped = i;
+				processedChars[i] = inputChars[i]; // restore input char
 				while (++i < processedChars.length) {
 					c = processedChars[i];
-					if (c == SKIPPED_CHAR)
+					if (c == SKIPPED_CHAR) {
 						endSkipped = i;
-					else if (!RecoveryConnector.isLayoutCharacter(c))
+						processedChars[i] = inputChars[i]; // restore input char
+					} else if (!RecoveryConnector.isLayoutCharacter(c)) {
 						break;
+					}
 				}
 				reportSkippedFragment(inputChars, tokenizer, beginSkipped, endSkipped);
 			} else if (c == UNEXPECTED_EOF_CHAR) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java	2010-06-08 09:40:36 UTC (rev 20959)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java	2010-06-08 11:50:24 UTC (rev 20960)
@@ -7,7 +7,9 @@
 import static org.spoofax.jsglr.Term.isAppl;
 import static org.spoofax.jsglr.Term.isInt;
 import static org.spoofax.jsglr.Term.termAt;
+import static org.strategoxt.imp.runtime.parser.tokens.TokenKind.TK_ERROR;
 import static org.strategoxt.imp.runtime.parser.tokens.TokenKind.TK_LAYOUT;
+import static org.strategoxt.imp.runtime.parser.tokens.TokenKindManager.isKeywordChar;
 
 import java.util.ArrayList;
 
@@ -20,6 +22,7 @@
 import org.strategoxt.imp.runtime.Debug;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.parser.ParseErrorHandler;
+import org.strategoxt.imp.runtime.parser.tokens.KeywordRecognizer;
 import org.strategoxt.imp.runtime.parser.tokens.SGLRTokenizer;
 import org.strategoxt.imp.runtime.parser.tokens.TokenKindManager;
 
@@ -65,7 +68,7 @@
 	
 	private int nonMatchingOffset = NONE;
 	
-	private char nonMatchingChar, nonMatchingCharExpected;
+	private char nonMatchingChar, nonMatchingCharExpected, prevChar;
 	
 	protected boolean inLexicalContext;
 	
@@ -167,6 +170,12 @@
 			if (offset > lastOffset + 1 && AsfixAnalyzer.isLexLayout(rhs)) {
 				tokenizer.makeToken(lastOffset, TK_LAYOUT, false);
 				tokenizer.makeToken(offset, TK_LAYOUT, false);
+			} else {
+				String sort = reader.getSort(rhs);
+				if ("WATERTOKEN".equals(sort) || "WATERTOKENSEPARATOR".equals(sort)) {
+					tokenizer.makeToken(lastOffset, TK_LAYOUT, false);
+					tokenizer.makeToken(offset, TK_ERROR, false);
+				}
 			}
 			return null; // don't create tokens inside lexical context; just create one big token at the top
 		} else {
@@ -443,6 +452,7 @@
 				// for later error reporting. (Cannot modify the immutable
 				// parse tree here; changing the original stream instead.)
 				inputChars[offset] = ParseErrorHandler.SKIPPED_CHAR;
+				createSkippedToken(inputChars, inputChar);
 				offset++;
 			} else {
 				// UNDONE: Strict lexical stream checking
@@ -462,5 +472,28 @@
 		} else {
 			offset++;
 		}
+		prevChar = inputChar;
 	}
+
+	/**
+	 * Creates an artificial token at keyword boundaries
+	 * inside skipped regions of code.
+	 * Required for keyword highlighting with {@link KeywordRecognizer}.
+	 */
+	private void createSkippedToken(char[] inputChars, char inputChar) {
+		boolean isInputKeywordChar = isKeywordChar(inputChar);
+		if (offset > 0) {
+			if ((isInputKeywordChar && !isKeywordChar(prevChar))
+					|| (!isInputKeywordChar && isKeywordChar(prevChar))) {
+				tokenizer.makeToken(offset - 1, TK_ERROR, false);
+			}
+		}
+		if (offset + 1 < inputChars.length) {
+			char nextChar = inputChars[offset + 1];
+			if ((isInputKeywordChar && !isKeywordChar(nextChar))
+					|| (!isInputKeywordChar && isKeywordChar(nextChar))) {
+				tokenizer.makeToken(offset + 1, TK_ERROR, false);
+			}
+		}
+	}
 }

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/KeywordRecognizer.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/KeywordRecognizer.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/KeywordRecognizer.java	2010-06-08 11:50:24 UTC (rev 20960)
@@ -0,0 +1,71 @@
+package org.strategoxt.imp.runtime.parser.tokens;
+
+import static java.util.Collections.synchronizedMap;
+import static org.spoofax.jsglr.Term.termAt;
+
+import java.util.HashSet;
+import java.util.Map;
+import java.util.Set;
+import java.util.WeakHashMap;
+
+import org.spoofax.jsglr.Label;
+import org.spoofax.jsglr.ParseTable;
+import org.strategoxt.imp.runtime.Debug;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+
+import aterm.AFun;
+import aterm.ATerm;
+import aterm.ATermAppl;
+
+/**
+ * Recognizes keywords in a language without considering their context.
+ * 
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class KeywordRecognizer {
+
+	private static final Map<Descriptor, KeywordRecognizer> cache =
+		synchronizedMap(new WeakHashMap<Descriptor, KeywordRecognizer>());
+	
+	private static final AFun litFun = Environment.getATermFactory().makeAFun("lit", 1, false);
+	
+	private final Set<String> keywords = new HashSet<String>();
+	
+	private KeywordRecognizer(ParseTable table) {
+		if (table != null) {
+			for (Label l : table.getLabels()) {
+				if (l != null) {
+					ATerm rhs = termAt(l.getProduction(), 1);
+					if (rhs instanceof ATermAppl && ((ATermAppl) rhs).getAFun() == litFun) {
+						ATermAppl lit = termAt(rhs, 0);
+						String litString = lit.getName();
+						if (TokenKindManager.isKeyword(litString))
+							keywords.add(litString);
+					}
+				}
+			}
+		}
+	}
+	
+	public static KeywordRecognizer create(Descriptor d) {
+		KeywordRecognizer result = cache.get(d);
+		if (result == null) {
+			try {
+				Debug.startTimer();
+				ParseTable table = Environment.getParseTable(d.getLanguage());
+				Debug.stopTimer("Keyword recognizer loaded for " + d.getLanguage().getName());
+				result = new KeywordRecognizer(table);
+				cache.put(d, result);
+			} catch (Exception e) {
+				Environment.logException("Unexpected exception initializing the keyword recognizer", e);
+				return new KeywordRecognizer(null);
+			}
+		}
+		return result;
+	}
+	
+	public boolean isKeyword(String literal) {
+		return keywords.contains(literal);
+	}
+}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java	2010-06-08 09:40:36 UTC (rev 20959)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java	2010-06-08 11:50:24 UTC (rev 20960)
@@ -1,6 +1,9 @@
 package org.strategoxt.imp.runtime.parser.tokens;
 
-import static org.strategoxt.imp.runtime.parser.tokens.TokenKind.*;
+import static org.strategoxt.imp.runtime.parser.tokens.TokenKind.TK_EOF;
+import static org.strategoxt.imp.runtime.parser.tokens.TokenKind.TK_ERROR;
+import static org.strategoxt.imp.runtime.parser.tokens.TokenKind.TK_RESERVED;
+import static org.strategoxt.imp.runtime.parser.tokens.TokenKind.valueOf;
 import lpg.runtime.IPrsStream;
 import lpg.runtime.IToken;
 import lpg.runtime.LexStream;
@@ -149,19 +152,24 @@
 		return new Token(parseStream, beginOffset, endOffset, TK_ERROR.ordinal());
 	}
 	
+	/**
+	 * Changes the token kinds of existing tokens.
+	 */
 	public void changeTokenKinds(int beginOffset, int endOffset, TokenKind fromKind, TokenKind toKind) {
 		// FIXME: changeTokenKinds sometimes changes the token kinds of comments just adjacent to erroneous regions
+		//        (not sure if it still does that with the 0.5.1 tokenization changes)
 		int fromOrdinal = fromKind.ordinal();
 		IPrsStream tokens = lexStream.getIPrsStream();
 		for (int i = 0, end = tokens.getSize(); i < end; i++) {
 			IToken token = tokens.getIToken(i);
-			if (token.getEndOffset() >= beginOffset && token.getKind() == fromOrdinal)
+			if (token.getEndOffset() >= beginOffset && token.getKind() == fromOrdinal) {
 				token.setKind(toKind.ordinal());
+			}
 			if (token.getEndOffset() >= endOffset)
 				return;
 		}
 	}
-	
+
 	/**
 	 * Creates an error token on stream part, backwards skipping whitespace
 	 * 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/TokenKindManager.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/TokenKindManager.java	2010-06-08 09:40:36 UTC (rev 20959)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/TokenKindManager.java	2010-06-08 11:50:24 UTC (rev 20960)
@@ -65,6 +65,27 @@
 		return true;
 	}
 	
+	/**
+	 * Determines whether the given string could possibly 
+	 * be a keyword (as opposed to an operator).
+	 */
+	public static boolean isKeyword(String literal) {
+		for (int i = 0, end = literal.length(); i < end; i++) {
+			char c = literal.charAt(i);
+			if (!isKeywordChar(c))
+				return false;
+		}
+		return true;
+	}
+	
+	/**
+	 * Determines whether the given character could possibly 
+	 * be part of a keyword (as opposed to an operator).
+	 */
+	public static boolean isKeywordChar(char c) {
+		return Character.isLetterOrDigit(c) || c == '_';
+	}
+	
 	protected static boolean isStringLiteral(ATermList pattern) {
 		return topdownHasSpaces(pattern);
 	}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java	2010-06-08 09:40:36 UTC (rev 20959)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java	2010-06-08 11:50:24 UTC (rev 20960)
@@ -53,7 +53,8 @@
 		try {
 			synchronized (Environment.getSyncRoot()) {
 				AstNode ast = editor.getCurrentAst();
-				// IStrategoTerm result = runtime.invokeSilent(function, runtime.makeInputTerm(ast, false), ast.getResource());
+				if (ast == null) return;
+				
 				IStrategoTerm result = runtime.invokeSilent(function, ast);
 				if (result == null) {
 					runtime.reportRewritingFailed();

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java	2010-06-08 09:40:36 UTC (rev 20959)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java	2010-06-08 11:50:24 UTC (rev 20960)
@@ -14,6 +14,7 @@
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.parser.SGLRParseController;
+import org.strategoxt.imp.runtime.parser.tokens.KeywordRecognizer;
 import org.strategoxt.imp.runtime.parser.tokens.SGLRToken;
 import org.strategoxt.imp.runtime.parser.tokens.TokenKind;
 import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
@@ -23,8 +24,12 @@
  */
 public class TokenColorer implements ITokenColorer {
 	
+	private final SGLRParseController controller;
+	
 	private final List<TextAttributeMapping> envMappings, nodeMappings, tokenMappings;
 	
+	private KeywordRecognizer keywordRecognizer;
+	
 	private boolean isLazyColorsInited;
 	
 	public List<TextAttributeMapping> getTokenMappings() {
@@ -39,9 +44,13 @@
 		return envMappings;
 	}
 	
-	public TokenColorer(List<TextAttributeMapping> envMappings, List<TextAttributeMapping> nodeMappings,
+	public TokenColorer(
+			SGLRParseController controller,
+			List<TextAttributeMapping> envMappings,
+			List<TextAttributeMapping> nodeMappings,
 			List<TextAttributeMapping> tokenMappings) {
 		
+		this.controller = controller;
 		this.tokenMappings = tokenMappings;
 		this.nodeMappings = nodeMappings;
 		this.envMappings = envMappings;
@@ -95,6 +104,8 @@
 			// Don't treat whitespace layout as comments, to avoid italics in text that
 			// was just typed in
 			tokenKind = TokenKind.TK_UNKNOWN.ordinal();
+		} else if (tokenKind == TokenKind.TK_ERROR.ordinal() && isKeyword(token)) {
+			tokenKind = TokenKind.TK_KEYWORD.ordinal();
 		}
 		 
 		TextAttribute tokenColor = getColoring(tokenMappings, constructor, sort, tokenKind);
@@ -112,6 +123,13 @@
 		if (result == null) return null;
 		else return noWhitespaceBackground(result, token, tokenKind);
 	}
+	
+	private boolean isKeyword(IToken token) {
+		if (keywordRecognizer == null)
+			keywordRecognizer = KeywordRecognizer.create(Environment.getDescriptor(controller.getLanguage()));
+		String tokenString = token.toString().trim();
+		return keywordRecognizer.isKeyword(tokenString);
+	}
 
 	private TextAttribute getColoring(List<TextAttributeMapping> mappings, String constructor, String sort, int tokenKind) {
 		for (TextAttributeMapping mapping : mappings) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-08 09:40:36 UTC (rev 20959)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-08 11:50:24 UTC (rev 20960)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.5.1.3.jar" id="org.strategoxt.imp" version="0.5.1.3">
+   <feature url="features/org.strategoxt.imp_0.5.1.4.jar" id="org.strategoxt.imp" version="0.5.1.4">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">


From L.C.L.Kats at tudelft.nl  Tue Jun  8 14:18:59 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 08 Jun 2010 12:18:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20961 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast
Message-ID: <201006081218.o58CIxjO032028@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-08 12:18:59 +0000 (Tue, 08 Jun 2010)
New Revision: 20961

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20961&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java

Log:
minor refactoring

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java	2010-06-08 11:50:24 UTC (rev 20960)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java	2010-06-08 12:18:59 UTC (rev 20961)
@@ -166,17 +166,7 @@
 		if (lexicalStart || isVar) {
 			return setAnnos(createStringTerminal(lhs, rhs, attrs), appl.getAnnotations());
 		} else if (inLexicalContext) {
-			// Create separate tokens for >1 char layout lexicals (e.g., comments)
-			if (offset > lastOffset + 1 && AsfixAnalyzer.isLexLayout(rhs)) {
-				tokenizer.makeToken(lastOffset, TK_LAYOUT, false);
-				tokenizer.makeToken(offset, TK_LAYOUT, false);
-			} else {
-				String sort = reader.getSort(rhs);
-				if ("WATERTOKEN".equals(sort) || "WATERTOKENSEPARATOR".equals(sort)) {
-					tokenizer.makeToken(lastOffset, TK_LAYOUT, false);
-					tokenizer.makeToken(offset, TK_ERROR, false);
-				}
-			}
+			createLayoutToken(rhs, lastOffset);
 			return null; // don't create tokens inside lexical context; just create one big token at the top
 		} else {
 			return setAnnos(createNodeOrInjection(lhs, rhs, attrs, prevToken, children, isList), appl.getAnnotations());
@@ -496,4 +486,22 @@
 			}
 		}
 	}
+
+	/**
+	 * Creates an artificial token for every water-based recovery
+	 * and for comments within layout.
+	 */
+	private void createLayoutToken(ATermAppl rhs, int lastOffset) {
+		// Create separate tokens for >1 char layout lexicals (e.g., comments)
+		if (offset > lastOffset + 1 && AsfixAnalyzer.isLexLayout(rhs)) {
+			tokenizer.makeToken(lastOffset, TK_LAYOUT, false);
+			tokenizer.makeToken(offset, TK_LAYOUT, false);
+		} else {
+			String sort = reader.getSort(rhs);
+			if ("WATERTOKEN".equals(sort) || "WATERTOKENSEPARATOR".equals(sort)) {
+				tokenizer.makeToken(lastOffset, TK_LAYOUT, false);
+				tokenizer.makeToken(offset, TK_ERROR, false);
+			}
+		}
+	}
 }


From n.bruning at student.tudelft.nl  Tue Jun  8 17:08:40 2010
From: n.bruning at student.tudelft.nl (Nathan Bruning)
Date: Tue, 08 Jun 2010 15:08:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20962 - NathanBruning -
	in strategoxt/branches: . strategy-overriding
	strategy-overriding/stratego-libraries/runtime/lib/srts
	strategy-overriding/strc-core/lib/stratego/strc/c
	strategy-overriding/strc-core/lib/stratego/strc/front
	strategy-overriding/xml-front
Message-ID: <201006081508.o58F8eXI002195@proliant.st.ewi.tudelft.nl>

Author: NathanBruning
Date: 2010-06-08 15:08:40 +0000 (Tue, 08 Jun 2010)
New Revision: 20962

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20962&view=rev

Added:
   strategoxt/branches/strategy-overriding/
   strategoxt/branches/strategy-overriding/strc-core/lib/stratego/strc/c/s2c-ng.str.org
Modified:
   strategoxt/branches/strategy-overriding/stratego-libraries/runtime/lib/srts/init-stratego-application.h
   strategoxt/branches/strategy-overriding/stratego-libraries/runtime/lib/srts/init-stratego-module.h
   strategoxt/branches/strategy-overriding/strc-core/lib/stratego/strc/c/s2c-ng.str
   strategoxt/branches/strategy-overriding/strc-core/lib/stratego/strc/front/call-graph.str
   strategoxt/branches/strategy-overriding/strc-core/lib/stratego/strc/front/frontend.str
   strategoxt/branches/strategy-overriding/strc-core/lib/stratego/strc/front/rename-defs.str
   strategoxt/branches/strategy-overriding/xml-front/configure.ac

Log:
Created branch strategy-overriding.

Changes (first 1000 lines of the diffs):


Property changes on: strategoxt/branches/strategy-overriding
___________________________________________________________________
Added: svn:ignore
   + aclocal.m4
autom4te.cache
config.log
config.status
config.guess
config.sub
configure
depcomp
.deps
INSTALL
install-sh
.libs
libtool
ltmain.sh
Makefile
Makefile.in
missing
mkinstalldirs

Added: svn:mergeinfo
   + /strategoxt/branches/strategoxt-annos:19217-19721
/strategoxt/branches/strategoxt-with:18038-18120

Modified: strategoxt/branches/strategy-overriding/stratego-libraries/runtime/lib/srts/init-stratego-application.h
===================================================================
--- strategoxt/trunk/stratego-libraries/runtime/lib/srts/init-stratego-application.h	2010-06-08 09:40:36 UTC (rev 20959)
+++ strategoxt/branches/strategy-overriding/stratego-libraries/runtime/lib/srts/init-stratego-application.h	2010-06-08 15:08:40 UTC (rev 20962)
@@ -4,6 +4,7 @@
 {
   init_module_constructors();
   init_module_constant_terms();
+  init_module_overrides();
   if(SRTS_stratego_initialize_next != NULL)
     SRTS_stratego_initialize_next();
 

Modified: strategoxt/branches/strategy-overriding/stratego-libraries/runtime/lib/srts/init-stratego-module.h
===================================================================
--- strategoxt/trunk/stratego-libraries/runtime/lib/srts/init-stratego-module.h	2010-06-08 09:40:36 UTC (rev 20959)
+++ strategoxt/branches/strategy-overriding/stratego-libraries/runtime/lib/srts/init-stratego-module.h	2010-06-08 15:08:40 UTC (rev 20962)
@@ -4,6 +4,7 @@
 {
   init_module_constructors();
   init_module_constant_terms();
+  init_module_overrides();
   if(SRTS_stratego_initialize_next != NULL)
     SRTS_stratego_initialize_next();
 }

Modified: strategoxt/branches/strategy-overriding/strc-core/lib/stratego/strc/c/s2c-ng.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/c/s2c-ng.str	2010-06-08 09:40:36 UTC (rev 20959)
+++ strategoxt/branches/strategy-overriding/strc-core/lib/stratego/strc/c/s2c-ng.str	2010-06-08 15:08:40 UTC (rev 20962)
@@ -65,12 +65,13 @@
         incl          := <GenerateIncludes>
       ; cnstr-decls   := <bagof-Fragment> "ConstructorDecl"
       ; cnstr-inits   := <bagof-Fragment; concat> "ConstructorInit"
-      ; function-sigs := <bagof-Fragment> "FunctionSig"
+      ; function-sigs := <bagof-Fragment; flatten-list> "FunctionSig"
       ; function-regs := <bagof-Fragment> "FunctionReg"
       ; function-defs := <bagof-Fragment> "FunctionDef"
       //; debug(!"function definitions: ")
       ; cnst-decls    := <bagof-Fragment> "ConstDecl"
-      ; cnst-inits    := <bagof-Fragment; concat; reverse> "ConstInit" 
+      ; cnst-inits    := <bagof-Fragment; concat; reverse> "ConstInit"
+      ; over-inits    := <bagof-Fragment; flatten-list> "OverrideInit" 
     );
     !|[
 	// C includes specified on command-line or by default configuration
@@ -96,25 +97,30 @@
 	{
 	  ~stm*:cnst-inits
 	}
-
-	// include functions for calling the initialization functions
-	~ext-def*:
-	  <if-lib(
-	     ![PpControl("#include <srts/init-stratego-module.h>")],
-	     ![PpControl("#include <srts/init-stratego-application.h>")]
-	   )>
-	   
+   
 	~ext-def*:<![<tracing-table-sig>, <tracing-table-counter-sig>]>
 	
 	// signatures of all generated functions
 	~ext-def*:function-sigs
 
-	// function definitions themselves
+  // function definitions themselves
 	~ext-def*:function-defs
 
         ~ext-def*:<if-lib(![], ![<register-strategies-function>function-regs])>
 
-	~ext-def*:<if-lib(![], ![<MainDef>])>
+  // init all overridden strategies
+  static void init_module_overrides() {
+    ~stm*:over-inits
+  }   
+
+  // include functions for calling the initialization functions
+  ~ext-def*:
+    <if-lib(
+       ![PpControl("#include <srts/init-stratego-module.h>")],
+       ![PpControl("#include <srts/init-stratego-application.h>")]
+     )>
+
+  ~ext-def*:<if-lib(![], ![<MainDef>])>
     ]|
 
 strategies
@@ -249,12 +255,16 @@
  */
 strategies 
 
-  Translate = //debug(!"Translate: "); 
+  strat-fname = <concat-strings> [<id>, "_s"]
+  proceed-name: x -> <concat-strings> [x, "_proceed"]
+  
+  Translate = 
     SDefIgnore
     <+ SDefFail
     <+ is-closure-alloc
     <+ fragment(SDefToDeclaration|"FunctionSig")
-       ; fragment(SDefToRegistration|"FunctionReg")
+       ; try(fragment(SDefToRegistration|"FunctionReg"))
+       ; try(fragment(SDefToOverrideDeclaration|"OverrideInit"))
        ; (fragment(TranslateDef | "FunctionDef")
 	  <+ {?Def|[ external f(a1* | a2* ) ]|}
 	  <+ {?Def|[ external f(a1* | a2* ) = s ]|}
@@ -269,32 +279,67 @@
     ; not(<[Override + Internal]> a*)
     ; !(a*, s)
     ; fatal-err(|"strategy modifier is not implemented for this platform")
-
+  
   SDefToDeclaration :
     Def|[ f(a1* | a2*) = s ]| ->
-    dec|[ ATerm ~id:f (StrSL sl, ~param-dec*:ps, ATerm t); ]|
+    dec*|[ 
+      ATerm ~id:ff (StrSL sl, ~param-dec*:ps, ATerm t);
+      ATerm (* ~id:f ) (StrSL, ~param-dec*:ps, ATerm) = & ~id:ff;
+    ]|
     where <not(is-local-function)> f
         ; ps := <map(TranslateVarDec)> [a1*,a2*]
-    
+        ; ff := <strat-fname> f
+
+  override-def-to-overridden: def at Def|[ f(a1* | a2*) = s ]| -> f'
+    with  x := <strip-annos; OriginalOverrideName> f
+        ; y := <Overriding> x
+        ; f' := <RenameVar> (y, (<length> a1*, <length> a2*))
+
   SDefToDeclaration :
-    AnnoDef(Internal(), Def|[ f(a1* | a2*) = s ]|) ->
-    dec|[ static ATerm ~id:f (StrSL sl, ~param-dec*:ps, ATerm t); ]|
+    AnnoDef([Override()], def at Def|[ f(a1* | a2*) = s ]|) ->
+    dec*|[
+      extern ATerm (* ~id:forg) (StrSL, ~param-dec*:ps, ATerm);    // for library override
+      ATerm (* ~id:fproceed ) (StrSL, ~param-dec*:ps, ATerm) = NULL;
+    ]|
+    with fproceed := <proceed-name> f
+       ; ps := <map(TranslateVarDec)> [a1*,a2*]
+       ; forg := <override-def-to-overridden> def 
+  
+  SDefToOverrideDeclaration :
+    AnnoDef([Override()], def at Def|[ f(a1* | a2*) = s ]|) -> 
+    stm* |[ 
+      ~id:fproceed = ~id:cur;   // Save old override
+      ~id:cur = &(~id:f);       // Set new override
+    ]|
+    with  fproceed := <proceed-name> f
+        ; cur := <override-def-to-overridden> def
+        ; ps := <map(TranslateVarDec)> [a1*, a2*]
+        
+  SDefToDeclaration :
+    AnnoDef([Internal()], Def|[ f(a1* | a2*) = s ]|) ->
+    dec*|[ 
+    	static ATerm ~id:f (StrSL sl, ~param-dec*:ps, ATerm t); 
+    ]|
     where ps := <map(TranslateVarDec)> [a1*,a2*]
+    with  rules(FunctionToFunctionPointer : f -> exp|[ &(~id:f) ]|)
 
   SDefToDeclaration :
     Def|[ f(a1* | a2*) = s ]| ->
-    dec|[ static ATerm ~id:f (StrSL sl, ~param-dec*:ps, ATerm t); ]|
+    dec*|[
+    	static ATerm ~id:f (StrSL sl, ~param-dec*:ps, ATerm t);
+    ]|
     where <is-local-function> f
         ; ps := <map(TranslateVarDec)> [a1*,a2*]
+    with  rules(FunctionToFunctionPointer : f -> exp|[ &(~id:f) ]|)
 
   SDefToDeclaration :
     Def|[ external f(a1* | a2*) = s ]| ->
-    dec|[ ATerm ~id:f (StrSL sl, ~param-dec*:ps, ATerm t); ]|
+    dec|[ extern ATerm (* ~id:f) (StrSL sl, ~param-dec*:ps, ATerm t); ]|
     where ps := <map(TranslateVarDec)> [a1*,a2*]
 
   SDefToDeclaration :
     Def|[ external f(a1* | a2*) ]| ->
-    dec|[ ATerm ~id:f (StrSL sl, ~param-dec*:ps, ATerm t); ]|
+    dec|[ extern ATerm (* ~id:f) (StrSL sl, ~param-dec*:ps, ATerm t); ]|
     where ps := <map(TranslateVarDec)> [a1*,a2*]
 
 
@@ -310,7 +355,7 @@
     )
     ; !stm|[
         {
-          closures[closures_index].fun = &(~id:f);
+          closures[closures_index].fun = ~id:f;   // f is a function pointer, not the function itself
           closures[closures_index].sl = NULL;
           SRTS_register_function(
               (ATerm) ATmakeAppl0(ATmakeSymbol(~id:<double-quote>f, 0, ATtrue))
@@ -339,13 +384,28 @@
   // TODO: insert escaping strategy arguments in frame
 
   TranslateDef :
-    AnnoDef(Internal(), def) -> def'
-    with def' := <make-internal-static> <TranslateDef> def
+    AnnoDef([Internal()], def at Def|[ f~{t*}(a1* | a2*) = s ]|) -> def'
+    with def' := <make-internal-static> <TranslateDef(|f)> def
 
   TranslateDef :
+    AnnoDef([Override()], def at Def|[ f~{t*}(a1* | a2*) = s ]|) -> def'
+    with {| ProceedName, ProceedArgs:
+            proceed-name := <proceed-name> f
+          ; rules(
+                ProceedName := proceed-name
+                ProceedArgs := (a1*, a2*)
+            )
+          ; def' := <TranslateDef(|f)> def
+         |}
+
+  TranslateDef : 
+    def at Def|[ f~{t*}(a1*|a2*) = s ]| -> <TranslateDef(|f')> def
+    where f' := <where(is-local-function) <+ strat-fname> f
+
+  TranslateDef(|fname) :
     Def|[ f~{t*}(a1*|a2*) = s ]| -> <try(make-local-static)> 
     |[ 
-       ATerm ~id:f{}(StrSL sl, ~param-dec*:args, ATerm t)
+       ATerm ~id:fname{}(StrSL sl, ~param-dec*:args, ATerm t)
        {
          __tracing_table[__tracing_table_counter++] = ~exp:<!StringLit([<double-quote> f])>;
          __tracing_table[__tracing_table_counter] = NULL;
@@ -515,7 +575,34 @@
     where <map(Translate)> defs
         ; (closures, stms) := <filter(MkClosure); unzip; (concat,concat)> defs
 	; stm := <translate-strat(|S,F)> s
-
+	  
+	// todo: check earlier
+	check-in-override =
+		where(
+			ProceedName; ProceedArgs
+	<+  fatal-err(|"proceed outside of override"))
+	  
+	TranslateStrat(|S,F) :
+	  |[ proceed ]| -> 
+	  stm |[ {
+	       t = ~id:s (sl, ~exp*:args, t);
+	       if( t == NULL ) goto ~id:F; else goto ~id:S;
+	     } ]|
+	  where check-in-override
+	  with ProceedArgs; \(s*,t*) -> [s*,t*]\; map(\VarDec(x, _) -> Id(x) \) => args
+	     ; ProceedName => s
+	
+	/*  TODO:
+  Proceed with arguments. 
+  Should be desugared early in the pipeline to enable stuff like strategy lifting and frames.
+  */
+  TranslateStrat(|S,F) :
+    ProceedT(s*, f*) -> <fatal-err(|"proceed with arguments no yet supported")> 
+  
+  function-pointer =
+  	 FunctionToFunctionPointer     // internal functions without pointer
+  <+ ?f; !exp |[ f ]|              // normal functions are implemented by a pointer 
+  
   // @TODO
   // cater for closures for top-level functions, which will typically
   // have the form 
@@ -525,27 +612,30 @@
  
   MkClosure :
     Def|[ f~{Offsets(i,j),Closure(x)}(|) = s ]| ->
-    ([dec|[ struct str_closure ~id:y = {&~id:f, &frame}; ]|
+    ([dec|[ struct str_closure ~id:y = {~exp:fp, &frame}; ]|
      ,dec|[ StrCL ~id:x = &y; ]|]
     , [])
     where y := <new>
+        ; fp := <function-pointer> f
 
   MkClosure :
     Def|[ f~{Offsets(i,j),Offset(k),Escapes(),Closure(x)}(|) = s ]| ->
-    ([dec|[ struct str_closure ~id:y = {&~id:f, &frame}; ]|
+    ([dec|[ struct str_closure ~id:y = {~id:f, &frame}; ]|
      ,dec|[ StrCL ~id:x = &y; ]|]
     ,[stm|[ sl_init_fun(~exp:<mk-int-const>k, ~id:x); ]|])
     where y := <new>
+        ; fp := <function-pointer> f
 
   // allocate closure for a top-level function
 
   MkClosure :
     Def|[ f~{Offsets(0,0),Closure(x),ClosureAlloc()}(|)
             = g~{Frames(frames)}(|) ]| ->
-    ([dec|[ struct str_closure ~id:y = {&~id:g, ~exp:sl}; ]|
+    ([dec|[ struct str_closure ~id:y = {~exp:gp, ~exp:sl}; ]|
      ,dec|[ StrCL ~id:x = &y; ]|]
     , [])
     where ?def
+  ; gp := <function-pointer> g
 	; y := <new>
 	; frames' := <Tl> frames
 	; if <not([])> frames' then
@@ -558,10 +648,11 @@
   MkClosure :
     Def|[ f~{Offsets(0,0),Offset(k),Escapes(),Closure(x),ClosureAlloc()}(|) 
           = g~{Frames(frames)}(|) ]| ->
-    ([dec|[ struct str_closure ~id:y = {&~id:f, ~exp:sl}; ]|
+    ([dec|[ struct str_closure ~id:y = {~exp:fp, ~exp:sl}; ]|
      ,dec|[ StrCL ~id:x = &y; ]|]
     ,[stm|[ sl_init_fun(~exp:<mk-int-const>k, ~id:x); ]|])
     where ?def
+  ; fp := <function-pointer> f
 	; y := <new>
 	; frames' := <Tl> frames
 	; if <not([])> frames' then

Copied: strategoxt/branches/strategy-overriding/strc-core/lib/stratego/strc/c/s2c-ng.str.org (from rev 20906, strategoxt/trunk/strc-core/lib/stratego/strc/c/s2c-ng.str)
===================================================================
--- strategoxt/branches/strategy-overriding/strc-core/lib/stratego/strc/c/s2c-ng.str.org	                        (rev 0)
+++ strategoxt/branches/strategy-overriding/strc-core/lib/stratego/strc/c/s2c-ng.str.org	2010-06-08 15:08:40 UTC (rev 20962)
@@ -0,0 +1,1180 @@
+/**
+ * This module contains the C backend for the Stratego compiler. It is used to
+ * translate StrategoCore terms to equivalent C programs. Only translation is
+ * performed; this module will not invoke the C compiler.
+ * 
+ */
+module s2c-ng
+
+imports 
+  libstratego-lib
+  Stratego-Core
+  C 
+  stratego/strc/c/C-simplify
+  stratego/strc/c/frames
+
+strategies
+
+  compile = 
+    stratego-to-c
+
+  stratego-to-c = 
+    init-term-caching
+    ; TranslateSpec
+    ; c-simplify
+
+strategies
+
+  /**
+   * Command line options
+   */
+
+  s2c-options = 
+    ArgOption("--C-include",       
+	where(<post-extend-config>("--C-include", [<id>])),
+	!"--C-include h   include header file h (\"file.h\" or <file.h>)")
+
+  + Option("--library" + "--lib"
+	  ,where(<set-config> ("--library", ()))
+	  ,!"--library | --lib    build library instead of application")
+
+strategies
+
+  /**
+   * Building a library
+   */
+
+  if-lib(s1, s2) = where(<get-config>"--library") < s1 + s2
+  if-lib(s)      = if-lib(s, id)
+  if-not-lib(s)  = if-lib(id, s)
+
+rules
+
+  TranslateSpec = 
+    alltd(Translate)
+    ; ComposeTargetProgram
+
+  /**
+   * Compose the complete C program consisting of function definitions
+   * implementing the strategy definitions, auxiliary functions for
+   * initialization, and includes for libraries.
+   */
+
+  ComposeTargetProgram =
+    where(
+        incl          := <GenerateIncludes>
+      ; cnstr-decls   := <bagof-Fragment> "ConstructorDecl"
+      ; cnstr-inits   := <bagof-Fragment; concat> "ConstructorInit"
+      ; function-sigs := <bagof-Fragment> "FunctionSig"
+      ; function-regs := <bagof-Fragment> "FunctionReg"
+      ; function-defs := <bagof-Fragment> "FunctionDef"
+      //; debug(!"function definitions: ")
+      ; cnst-decls    := <bagof-Fragment> "ConstDecl"
+      ; cnst-inits    := <bagof-Fragment; concat; reverse> "ConstInit" 
+    );
+    !|[
+	// C includes specified on command-line or by default configuration
+	~ext-def*:incl
+
+	// ~ext-def*:[PpControl("#include \"static-links-include.h\"")]
+
+        // legacy
+	~ext-def*: <if-lib(![],
+           ![fun-def|[ void init_constructors(void){} ]|]
+	)>
+
+	// initialize variables denoting constructor symbols
+	~ext-def*:cnstr-decls
+	static void init_module_constructors (void)
+	{
+	  ~stm*:cnstr-inits
+	}
+
+	// initialize cached constant terms
+	~ext-def*:cnst-decls
+	static void init_module_constant_terms (void)
+	{
+	  ~stm*:cnst-inits
+	}
+
+	// include functions for calling the initialization functions
+	~ext-def*:
+	  <if-lib(
+	     ![PpControl("#include <srts/init-stratego-module.h>")],
+	     ![PpControl("#include <srts/init-stratego-application.h>")]
+	   )>
+	   
+	~ext-def*:<![<tracing-table-sig>, <tracing-table-counter-sig>]>
+	
+	// signatures of all generated functions
+	~ext-def*:function-sigs
+
+	// function definitions themselves
+	~ext-def*:function-defs
+
+        ~ext-def*:<if-lib(![], ![<register-strategies-function>function-regs])>
+
+	~ext-def*:<if-lib(![], ![<MainDef>])>
+    ]|
+
+strategies
+
+  tracing-table-sig  = !c:dec|[ extern const char *__tracing_table[]; ]|
+
+  tracing-table-counter-sig  = !c:dec|[ extern unsigned short __tracing_table_counter; ]|
+
+  register-strategies-function =
+    where(l := <length; int-to-string; !IntConst(<id>)>)
+    ; !c:fun-def|[
+        static void register_strategies(void)
+	{
+      int initial_size = 117 ;
+      int max_load = 75;
+      struct str_closure *closures;
+      int closures_index = 0;
+
+	  if(strategy_table == NULL) 
+	    strategy_table = ATtableCreate(initial_size,max_load);
+
+          closures = (struct str_closure *) malloc(sizeof(struct str_closure) * ~exp:l );
+          if(closures == NULL) {
+            perror("\"malloc error for registration of dynamic strategies\"");
+            exit(1);
+          }
+	  ~stm*:<id>
+	}
+      ]|
+
+strategies
+
+  GenerateIncludes =
+    <get-config <+ ![]> "--C-include"
+    ; map(!PpControl(<conc-strings> ("#include ", <id>)))
+
+  MainDef = 
+    !c:fun-def|[ 
+      int main(int argc, char *argv[]) {
+        ATerm out_term; 
+        ATermList in_term;
+        int i; 
+
+        ATinit(argc, argv, &out_term);
+        init_constructors();
+        // SRTS_init_mprotect(); // mprotect no longer needed
+
+        in_term = ATempty; 
+        for(i = argc - 1; i >= 0; i--) {
+          in_term = ATinsert(in_term, 
+                             (ATerm) ATmakeAppl0(ATmakeSymbol(argv[i],0,ATtrue)));
+        }
+
+        SRTS_stratego_initialize();
+        memset(__tracing_table, 0, sizeof(unsigned short) * TRACING_TABLE_SIZE);
+        __tracing_table_counter = 0;
+        register_strategies();
+        out_term = main_0_0(NULL, (ATerm)in_term); 
+        
+        if(out_term != NULL)
+          {
+            ATfprintf(stdout, "\"%t\\n\"", out_term);
+            exit(0);
+          }
+        else
+          {
+            ATfprintf(stderr, "\"%s: rewriting failed, trace:\\n\"",  argv[0]);
+            for(i = 0; __tracing_table[i] && i < TRACING_TABLE_SIZE ; i++) 
+              ATfprintf(stderr, "\"\\t%s\\n\"", __tracing_table[i]);
+            exit(1);
+          }
+       }
+    ]|
+
+/**
+ * Fragments
+ */
+
+strategies
+
+  fragment(s|tp) =
+    where(s; ?x; rules( Fragment :+ tp -> x ))
+
+/**
+ * Signatures
+ */
+strategies
+
+  DesugarOpDecl :
+    ExtOpDecl(c, t) -> OpDecl(c, t)
+
+  Translate =
+    try(DesugarOpDecl)
+    ; fragment(DeclareConstructor|"ConstructorDecl")
+    ; fragment(InitConstructorQ <+ InitConstructor|"ConstructorInit")
+
+  DeclareConstructor :
+    OpDecl(c, t) -> c:dec|[ static Symbol ~id:csym; ]|
+    where <Arity> t => n
+        ; <concat-strings>["sym_", <cify> c, "_", <int-to-string> n] => csym
+        ; rules(ConstructorName : (c, n) -> csym)
+
+  Arity : 
+    ConstType(t) -> 0
+
+  Arity : 
+    FunType(ts, t) -> <length> ts
+
+  InitConstructorQ :
+    OpDecl(c, t) ->
+    stm*|[
+      ~id:csym = ATmakeSymbol(~exp:StringLit([<double-quote>c']), 
+			      ~exp:<mk-int-const> ar, ATtrue);
+      ATprotectSymbol(~id:csym);
+    ]|
+    where <string-as-chars(unescape-chars; un-double-quote-chars)> c => c' 
+        ; <Arity> t => ar
+        ; <ConstructorName> (c, ar) => csym
+
+  InitConstructor :
+    OpDecl(c, t) ->
+    stm*|[
+      ~id:csym = ATmakeSymbol(~exp:StringLit([<double-quote>c]), 
+			      ~exp:<mk-int-const> ar, ATfalse);
+      ATprotectSymbol(~id:csym);
+    ]|
+    where ar   := <Arity> t
+        ; csym := <ConstructorName> (c, ar)
+
+/**
+ * Prototypes for strategy definitions
+ */
+strategies 
+
+  Translate = //debug(!"Translate: "); 
+    SDefIgnore
+    <+ SDefFail
+    <+ is-closure-alloc
+    <+ fragment(SDefToDeclaration|"FunctionSig")
+       ; fragment(SDefToRegistration|"FunctionReg")
+       ; (fragment(TranslateDef | "FunctionDef")
+	  <+ {?Def|[ external f(a1* | a2* ) ]|}
+	  <+ {?Def|[ external f(a1* | a2* ) = s ]|}
+          <+ dbg(|"TranslateDef undefined: "); fail)
+
+  SDefIgnore =
+    ?Def|[ f(a1* | a2*) = s ]|
+    ; where( !f => "DYNAMIC__CALLS_0_0" )
+  
+  SDefFail =
+    ?AnnoDef(a*, SDefT(s, _, _, _))
+    ; not(<[Override + Internal]> a*)
+    ; !(a*, s)
+    ; fatal-err(|"strategy modifier is not implemented for this platform")
+
+  SDefToDeclaration :
+    Def|[ f(a1* | a2*) = s ]| ->
+    dec|[ ATerm ~id:f (StrSL sl, ~param-dec*:ps, ATerm t); ]|
+    where <not(is-local-function)> f
+        ; ps := <map(TranslateVarDec)> [a1*,a2*]
+    
+  SDefToDeclaration :
+    AnnoDef(Internal(), Def|[ f(a1* | a2*) = s ]|) ->
+    dec|[ static ATerm ~id:f (StrSL sl, ~param-dec*:ps, ATerm t); ]|
+    where ps := <map(TranslateVarDec)> [a1*,a2*]
+
+  SDefToDeclaration :
+    Def|[ f(a1* | a2*) = s ]| ->
+    dec|[ static ATerm ~id:f (StrSL sl, ~param-dec*:ps, ATerm t); ]|
+    where <is-local-function> f
+        ; ps := <map(TranslateVarDec)> [a1*,a2*]
+
+  SDefToDeclaration :
+    Def|[ external f(a1* | a2*) = s ]| ->
+    dec|[ ATerm ~id:f (StrSL sl, ~param-dec*:ps, ATerm t); ]|
+    where ps := <map(TranslateVarDec)> [a1*,a2*]
+
+  SDefToDeclaration :
+    Def|[ external f(a1* | a2*) ]| ->
+    dec|[ ATerm ~id:f (StrSL sl, ~param-dec*:ps, ATerm t); ]|
+    where ps := <map(TranslateVarDec)> [a1*,a2*]
+
+
+/**
+ * Registration of strategy definition 
+ */
+strategies
+
+  SDefToRegistration =
+    ( ?Def|[ f(a1*|a2*) = s ]|
+    + ?Def|[ external f(a1* | a2*) = s ]|
+    + ?Def|[ external f(a1* | a2*) ]| 
+    )
+    ; !stm|[
+        {
+          closures[closures_index].fun = &(~id:f);
+          closures[closures_index].sl = NULL;
+          SRTS_register_function(
+              (ATerm) ATmakeAppl0(ATmakeSymbol(~id:<double-quote>f, 0, ATtrue))
+            , &(closures[closures_index])
+            );
+          closures_index++;
+        }
+       ]|
+
+/**
+ * Translation of strategy definition to C function
+ */
+
+signature
+  constructors
+    Next : Id 
+
+strategies 
+
+  is-closure-alloc = 
+    ?Def|[ f~{t*}(a1*|a2*) = s ]|
+    ; where(<fetch(?ClosureAlloc())> t*)
+
+  // TODO: don't include sl_funs(0) / sl_vars(0)
+
+  // TODO: insert escaping strategy arguments in frame
+
+  TranslateDef :
+    AnnoDef(Internal(), def) -> def'
+    with def' := <make-internal-static> <TranslateDef> def
+
+  TranslateDef :
+    Def|[ f~{t*}(a1*|a2*) = s ]| -> <try(make-local-static)> 
+    |[ 
+       ATerm ~id:f{}(StrSL sl, ~param-dec*:args, ATerm t)
+       {
+         __tracing_table[__tracing_table_counter++] = ~exp:<!StringLit([<double-quote> f])>;
+         __tracing_table[__tracing_table_counter] = NULL;
+         sl_decl(sl);
+         ~stm*:fini;
+         ~stm*:vini;
+         ~stm*:stms;
+         ~stm:stm; 
+         __tracing_table[--__tracing_table_counter] = NULL;
+         return(t);
+         ~id:F : 
+         --__tracing_table_counter;
+         return NULL;
+       }
+    ]|
+    where 
+       {| SuccessLabel, FailureLabel
+        : <not(fetch(?ClosureAlloc()))> t*
+        ; args := <map(TranslateVarDec)> [a1*,a2*]
+        ; fini := <init-sl-funs> t*
+        ; vini := <init-sl-vars> t*
+        ; stms := <filter(AddToFrame)> [a1*, a2*]
+        ; F    := <newname> "fail"
+        ; stm  := <translate-strat(|Next(), F)> s
+       |}
+
+
+  init-sl-funs : 
+    [Offsets(0,j)|_] -> []
+
+  init-sl-funs : 
+    [Offsets(i,j)|_] -> [ stm|[ sl_funs(~exp:<mk-int-const>i); ]| ]
+    where <not(0)> i
+
+  init-sl-vars : 
+    [Offsets(i,0)|_] -> []
+
+  init-sl-vars : 
+    [Offsets(i,j)|_] -> [ stm|[ sl_vars(~exp:<mk-int-const>j); ]| ]
+    where <not(0)> j
+
+  make-local-static :
+    |[ ATerm ~id:f(~param-dec*:args) { ~stm*:stms } ]| -> 
+    |[ static ATerm ~id:f(~param-dec*:args) { ~stm*:stms } ]|
+    where
+	  <is-local-function> f
+
+  make-internal-static :
+    |[ ATerm ~id:f(~param-dec*:args) { ~stm*:stms } ]| -> 
+    |[ static ATerm ~id:f(~param-dec*:args) { ~stm*:stms } ]|
+
+  is-local-function =
+    explode-string
+    ; ([is-alpha, '_' | list(is-num)]
+       <+ ['l', 'i', 'f', 't', 'e', 'd' | list(is-num)]
+       <+ ['l', 'i', 'f', 't', 'e', 'd', '_' | list(is-num)])
+
+  check-arg(|F) :
+    VarDec(x, ConstType(_)) -> 
+    stm|[
+      if(x == NULL) goto ~id:F;
+    ]|
+
+strategies
+
+  TranslateVarDec :
+    VarDec(x, ConstType(_)) -> param-dec|[ ATerm ~id:x ]| 
+
+  TranslateVarDec :
+    VarDec(x, FunType(ts,_)) -> param-dec|[ StrCL x ]|
+
+  AddToFrame : 
+    Typedid|[ x~{Offset(i),Escapes()} : tp ]| ->
+    stm|[ sl_init_fun(~exp:<mk-int-const>i, ~id:x); ]|
+    where FunType(_,_) := tp
+
+  AddToFrame : 
+    VarDec(x{Offset(i),Escapes()}, ConstType(_)) ->
+    stm|[ sl_init_var(~exp:<mk-int-const>i, ~id:x); ]|
+
+  TranslateType : 
+    ConstType(_) -> ParamDecl(TypeSpec([],TypeId("ATerm"),[]), None())
+
+  TranslateType :
+    FunType(ts, _) -> 
+    ParamDecl(TypeSpec([],TypeId("ATerm"),[]), 
+              Some(ParamList(<map(TranslateType)> ts)))
+
+/**
+ * Strategy expressions
+ */
+rules 
+
+  translate-strat(|S,F) =
+    TranslateStratPlatform(|S,F)
+    <+ TranslateStrat(|S,F)
+    <+ dbg(|"*** translate-strat undefined: "); fail
+
+  TranslateStrat(|S,F) :
+    Id() -> stm|[ goto ~id:S; ]|
+
+  TranslateStrat(|S,F) :
+    Fail() -> stm|[ goto ~id:F; ]|
+  
+  TranslateStratPlatform(|S,F) :
+    CallT(SVar("if_java_platform_1_0"), [s], []) -> stm|[ goto ~id:S; ]|
+
+  TranslateStrat(|S,F) :
+    |[ {x* : s} ]| -> 
+    stm|[ 
+      {
+	~dec*:[Declaration2(TypeSpec([],TypeId("ATerm"),[]),
+	        // <map(!var-dec|[~id:<id> = NULL]|)> x*
+		<map(!DeclInit(IdDecl([],Id(<id>),None()),AssignInit(Id("NULL"))))> x*)
+	       ]
+        ~stm*:<filter(TranslateEscapingVarDec)> x*
+        ~stm:(<translate-strat(|S,F)> s)
+      }
+    ]|
+
+  TranslateEscapingVarDec : 
+    x{Offset(i),Escapes()} -> stm|[
+      sl_init_var(~exp:<mk-int-const> i, ~id:x{}); 
+    ]|
+
+  TranslateStrat(|S,F) :
+    |[ s1; s2 ]| -> 
+    stm|[
+      { 
+        ~stm:<translate-strat(|Next(),F)>s1 
+        ~stm:<translate-strat(|S,F)>s2 
+      }  
+    ]|
+
+  TranslateStrat(|S,F) :
+    |[ s1 < s2 + s3 ]| ->
+    stm|[
+      {
+        ATerm ~id:x = t;
+        ~stm:<translate-strat(|Next(),F')>s1
+        ~stm:<translate-strat(|S,F)>s2
+        ~id:F' : t = ~id:x; 
+        ~stm:<translate-strat(|S,F)>s3
+      }
+    ]|
+    where <not(Next())> S; <newname> "trm" => x; <newname> "label" => F'
+	
+  TranslateStrat(|S,F) :
+    |[ s1 < s2 + s3 ]| -> 
+    stm|[ 
+      { 
+        ~stm:<translate-strat(|S',F)> |[ s1 < s2 + s3 ]| 
+        ~id:S' : ; 
+      }
+    ]|
+    where !S => Next(); <newname> "label" => S'
+
+  TranslateStrat(|S,F) :
+    |[ let ~*defs in s end ]| ->
+    stm|[
+      {
+        ~dec*:closures
+        ~stm*:stms
+        ~stm:stm
+      }
+    ]|
+    where <map(Translate)> defs
+        ; (closures, stms) := <filter(MkClosure); unzip; (concat,concat)> defs
+	; stm := <translate-strat(|S,F)> s
+
+  // @TODO
+  // cater for closures for top-level functions, which will typically
+  // have the form 
+  //   |[ f1(|) = f2(|) ]|
+  // the only purpose of such local definitions is to allocate a closure
+  // in order to pass f2(|) on
+ 
+  MkClosure :
+    Def|[ f~{Offsets(i,j),Closure(x)}(|) = s ]| ->
+    ([dec|[ struct str_closure ~id:y = {&~id:f, &frame}; ]|
+     ,dec|[ StrCL ~id:x = &y; ]|]
+    , [])
+    where y := <new>
+
+  MkClosure :
+    Def|[ f~{Offsets(i,j),Offset(k),Escapes(),Closure(x)}(|) = s ]| ->
+    ([dec|[ struct str_closure ~id:y = {&~id:f, &frame}; ]|
+     ,dec|[ StrCL ~id:x = &y; ]|]
+    ,[stm|[ sl_init_fun(~exp:<mk-int-const>k, ~id:x); ]|])
+    where y := <new>
+
+  // allocate closure for a top-level function
+
+  MkClosure :
+    Def|[ f~{Offsets(0,0),Closure(x),ClosureAlloc()}(|)
+            = g~{Frames(frames)}(|) ]| ->
+    ([dec|[ struct str_closure ~id:y = {&~id:g, ~exp:sl}; ]|
+     ,dec|[ StrCL ~id:x = &y; ]|]
+    , [])
+    where ?def
+	; y := <new>
+	; frames' := <Tl> frames
+	; if <not([])> frames' then
+	    sl := <frames-to-static-link> frames'
+	  else
+            sl := |[ &frame ]|
+	    ; <dbg(|"* warning (MkClosure) expects more than one frame: ")> def
+	  end
+
+  MkClosure :
+    Def|[ f~{Offsets(0,0),Offset(k),Escapes(),Closure(x),ClosureAlloc()}(|) 
+          = g~{Frames(frames)}(|) ]| ->
+    ([dec|[ struct str_closure ~id:y = {&~id:f, ~exp:sl}; ]|
+     ,dec|[ StrCL ~id:x = &y; ]|]
+    ,[stm|[ sl_init_fun(~exp:<mk-int-const>k, ~id:x); ]|])
+    where ?def
+	; y := <new>
+	; frames' := <Tl> frames
+	; if <not([])> frames' then
+	    sl := <frames-to-static-link> frames'
+	  else
+            sl := |[ &frame ]|
+	    ; <dbg(|"* warning (MkClosure) expects more than one frame: ")> def
+	  end
+
+strategies // computing the static link
+
+  frames-to-static-link =
+    (Tl <+ err(|"*** frames-to-static-link error: "); fail)
+    ; foldr(!exp|[ sl ]|,
+	    !exp|[ sl_up(~exp:<Snd>) ]|)
+
+strategies // calling and passing functions
+
+  // a function without annotations must be a top-level function
+
+  mk-call : 
+    (f{}, args) -> ()
+    where err(|"*** mk-call error: "); <exit> 1   
+
+  // f is a function, pass it its static link
+
+  mk-call : 
+    (f{Frames([])}, args) -> 
+    exp|[ ~id:f{}(&frame,~exp*:args) ]|
+
+  // f is a function, pass it its static link
+
+  mk-call : 
+    (f{Frames(frames)}, args) -> 
+    exp|[ ~id:f{}(~exp:sl,~exp*:args) ]|
+    where sl := <not([]); frames-to-static-link> frames
+
+  // f is a function, pass it its static link
+  // the offset is caused by another use of the function as
+  // a closure, it can be ignored in this instance
+
+  mk-call : 
+    (f{Offset(i),Frames([])}, args) -> 
+    exp|[ ~id:f{}(&frame,~exp*:args) ]|
+
+  mk-call : 
+    (f{Offset(i),Frames(frames)}, args) -> 
+    exp|[ ~id:f{}(~exp:sl,~exp*:args) ]|
+    where <not([]); frames-to-static-link> frames => sl
+
+  // f is a local variable (function argument) containing a closure
+
+  mk-call : 
+    (f{Frames([]),ApplyClosure()}, args) -> 
+    exp|[ (cl_fun(~id:f{}))(cl_sl(~id:f{}), ~exp*:args) ]|
+
+  // f is a local variable containing a closure
+  // (but f also has escaping instances)
+
+  mk-call : 
+    (f{Offset(i),Frames([]),ApplyClosure()}, args) -> 
+    exp|[ (cl_fun(~id:f{})) (cl_sl(~id:f{}), ~exp*:args) ]|
+
+  // f is a non-local variable containing a closure
+
+  mk-call : 
+    (f{Offset(i),Frames(frames),ApplyClosure()}, args) -> 
+    exp|[ (sl_fun(~exp:<mk-int-const>i, ~exp:sl))
+             (sl_fun_sl(~exp:<mk-int-const>i, ~exp:sl), ~exp*:args) ]| 
+    where sl := <not([]); frames-to-static-link> frames
+
+  // passing a local closure to a function 
+  // Note: this should be &x in case of a locally constructed closure,
+  // but plain x in the case when the closure is passed into the function
+  // may also be solved at the point of the definition of the closure, i.e.,
+  // create two variables, one that contains the storage of the closure,
+  // the second that contains its address
+  // ...
+  // fixed 
+
+  ArgToCl :
+    Strat|[ f~{Closure(x),Frames([])}(|) ]| -> exp|[ x ]|
+
+  ArgToCl :
+    Strat|[ f~{Offset(i),Closure(x),Frames([])}(|) ]| -> exp|[ x ]|
+
+  // passing a remote closure to a function
+
+  ArgToCl :
+    Strat|[ f~{Offset(i),Closure(x),Frames(frames)}(|) ]| -> 
+    exp|[ sl_fun_cl(~exp:<mk-int-const>i, ~exp:sl) ]|
+    where sl := <not([]); frames-to-static-link> frames
+
+/**
+ * Strategy calls
+ */
+rules

(620 diff lines omitted)

From L.C.L.Kats at tudelft.nl  Wed Jun  9 10:21:21 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 09 Jun 2010 08:21:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20963 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego
Message-ID: <201006090821.o598LLaE015594@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-09 08:21:20 +0000 (Wed, 09 Jun 2010)
New Revision: 20963

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20963&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Build.java

Log:
Minor interpreter fix (empty list tail caused NPE)

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Build.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Build.java	2010-06-08 15:08:40 UTC (rev 20962)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Build.java	2010-06-09 08:21:20 UTC (rev 20963)
@@ -244,10 +244,13 @@
         
         if(Tools.isVar(t, env)) {
             IStrategoTerm r = buildVar(env, t);
-            if(r.getTermType() == IStrategoTerm.LIST) {
+            if (r == null) return null;
+            if (r.getTermType() == IStrategoTerm.LIST) {
                 return (IStrategoList) r;
+            } else {
+                System.err.println("Warning: trying to build list with illegal tail: " + t.toString());
+                return null;
             }
-            throw new InterpreterException("List tail must always be a list -- got " + r);
         }
         
         throw new InterpreterException("List tail must always be a list!");


From L.C.L.Kats at tudelft.nl  Wed Jun  9 10:27:14 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 09 Jun 2010 08:27:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20964 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens
	org.strategoxt.imp.updatesite
Message-ID: <201006090827.o598REjP016056@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-09 08:27:14 +0000 (Wed, 09 Jun 2010)
New Revision: 20964

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20964&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AmbAsfixImploder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixAnalyzer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRToken.java
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Release 0.5.1.5: Imploder tweaks; fixed NegativeArraySizeException

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-09 08:21:20 UTC (rev 20963)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-09 08:27:14 UTC (rev 20964)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.5.1.4"
+      version="0.5.1.5"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-06-09 08:21:20 UTC (rev 20963)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-06-09 08:27:14 UTC (rev 20964)
@@ -290,6 +290,8 @@
 				reportException(errorHandler, unmanagedParseTableMismatch);
 		} catch (SGLRException e) {
 			reportException(errorHandler, e);
+			if (unmanagedParseTableMismatch != null)
+				reportException(errorHandler, unmanagedParseTableMismatch);
 		} catch (IOException e) {
 			reportException(errorHandler, e);
 		} catch (OperationCanceledException e) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AmbAsfixImploder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AmbAsfixImploder.java	2010-06-09 08:21:20 UTC (rev 20963)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AmbAsfixImploder.java	2010-06-09 08:27:14 UTC (rev 20964)
@@ -3,6 +3,7 @@
 import static org.spoofax.jsglr.Term.asAppl;
 import static org.spoofax.jsglr.Term.isAppl;
 import static org.spoofax.jsglr.Term.termAt;
+import static org.strategoxt.imp.runtime.parser.ast.AsfixAnalyzer.AMB_FUN;
 
 import org.strategoxt.imp.runtime.parser.tokens.TokenKindManager;
 
@@ -30,7 +31,7 @@
 	@Override
 	protected ATermAppl resolveAmbiguities(ATerm node) {
 		// TODO: disable when prefer/avoid disambiguation works in Disambiguator
-		if (!"amb".equals(((ATermAppl) node).getName()))
+		if (AMB_FUN != ((ATermAppl) node).getAFun())
 			return (ATermAppl) node;
 		
 		final ATermListImpl ambs = termAt(node, 0);
@@ -40,7 +41,7 @@
 			ATermAppl amb = resolveAmbiguities(termAt(ambs, i));
 			ambs.setSubTerm(i, amb);
 			
-			if (!amb.getName().equals("amb")) {
+			if (AMB_FUN != amb.getAFun()) {
 	            ATermAppl appl = termAt(amb, APPL_PROD);
 	            ATermAppl attrs = termAt(appl, PROD_ATTRS);
 	            

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixAnalyzer.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixAnalyzer.java	2010-06-09 08:21:20 UTC (rev 20963)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixAnalyzer.java	2010-06-09 08:27:14 UTC (rev 20964)
@@ -1,39 +1,76 @@
 package org.strategoxt.imp.runtime.parser.ast;
 
 import static org.spoofax.jsglr.Term.applAt;
+import static org.strategoxt.imp.runtime.Environment.getATermFactory;
 import jjtraveler.Visitable;
+import aterm.AFun;
 import aterm.ATermAppl;
 
 public class AsfixAnalyzer {
+	
+	protected static final AFun AMB_FUN = getATermFactory().makeAFun("amb", 1, false);
+	
+	protected static final AFun OPT_FUN = getATermFactory().makeAFun("opt", 1, false);
+	
+	private static final AFun CF_FUN = getATermFactory().makeAFun("cf", 1, false);
+	
+	private static final AFun LEX_FUN = getATermFactory().makeAFun("lex", 1, false);
+	
+	private static final AFun LIT_FUN = getATermFactory().makeAFun("lit", 1, false);
+	
+	private static final AFun CILIT_FUN = getATermFactory().makeAFun("cilit", 1, false);
+	
+	private static final AFun VARSYM_FUN = getATermFactory().makeAFun("varsym", 1, false);
+	
+	private static final AFun LAYOUT_FUN = getATermFactory().makeAFun("layout", 0, false);
+	
+	private static final AFun SEQ_FUN = getATermFactory().makeAFun("seq", 2, false);
+	
+	private static final AFun ITER_FUN = getATermFactory().makeAFun("iter", 1, false);
+	
+	private static final AFun ITER_STAR_FUN = getATermFactory().makeAFun("iter-star", 1, false);
+	
+	private static final AFun ITER_PLUS_FUN = getATermFactory().makeAFun("iter-plus", 1, false);
+	
+	private static final AFun ITER_SEP_FUN = getATermFactory().makeAFun("iter-sep", 2, false);
+	
+	private static final AFun ITER_STAR_SEP_FUN = getATermFactory().makeAFun("iter-star-sep", 2, false);
+	
+	private static final AFun ITER_PLUS_SEP_FUN = getATermFactory().makeAFun("iter-plus-sep", 2, false);
 
 	public static boolean isLayout(ATermAppl sort) {
 		ATermAppl details = applAt(sort, 0);
 		
-		if (details.getName().equals("opt"))
+		if (OPT_FUN == details.getAFun())
 			details = applAt(details, 0);
 		
-		return details.getName().equals("layout");
+		return LAYOUT_FUN == details.getAFun();
 	}
 
 	public static boolean isLiteral(ATermAppl sort) {
-		return sort.getName().equals("lit") || sort.getName().equals("cilit");
+		AFun fun = sort.getAFun();
+		return LIT_FUN == fun || CILIT_FUN == fun;
 	}
 
 	public static boolean isList(ATermAppl sort) {
-		ATermAppl details = sort.getName().equals("cf")
+		ATermAppl details = CF_FUN == sort.getAFun()
 		                  ? applAt(sort, 0)
 		                  : sort;
 		              	
-	  	if (details.getName().equals("opt"))
+	  	if (details.getAFun() == OPT_FUN)
 	  		details = applAt(details, 0);
 	  	
-		String name = details.getName();
+		AFun fun = details.getAFun();
 		
-		return name.equals("iter") || name.equals("iter-star")  || name.equals("iter-plus")
-				|| name.equals("iter-sep") || name.equals("seq") || name.equals("iter-star-sep")
-				|| name.equals("iter-plus-sep");
+		 // FIXME: Spoofax/159: AsfixImploder creates tuples instead of lists for seqs
+		return isIterFun(fun) || SEQ_FUN == fun;
 	}
 
+	public static boolean isIterFun(AFun fun) {
+		return ITER_FUN == fun || ITER_STAR_FUN == fun || ITER_PLUS_FUN == fun
+				|| ITER_SEP_FUN == fun || ITER_STAR_SEP_FUN == fun || ITER_PLUS_SEP_FUN == fun;
+	}
+
 	/**
 	 * Identifies lexical parse tree nodes.
 	 * 
@@ -44,7 +81,7 @@
 	 * @return true if the current node is lexical.
 	 */
 	public static boolean isLexicalNode(ATermAppl rhs) {
-		return ("lex".equals(rhs.getName()) || isLiteral(rhs)
+		return (LEX_FUN == rhs.getAFun() || isLiteral(rhs)
 		    || isLayout(rhs));
 	}
 
@@ -55,14 +92,14 @@
 	 * @return true if the current node is lexical.
 	 */
 	public static boolean isVariableNode(ATermAppl rhs) {
-		return "varsym".equals(rhs.getName());
+		return VARSYM_FUN == rhs.getAFun();
 	}
 
 	public static boolean isLexLayout(ATermAppl rhs) {
 		if (rhs.getChildCount() != 1) return false;
 		Visitable child = rhs.getChildAt(0);
-		return child instanceof ATermAppl && "layout".equals(((ATermAppl) child).getName())
-			&& "lex".equals(rhs.getName());
+		return child instanceof ATermAppl && LAYOUT_FUN == ((ATermAppl) child).getAFun()
+			&& LEX_FUN == rhs.getAFun();
 	}
 
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java	2010-06-09 08:21:20 UTC (rev 20963)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java	2010-06-09 08:27:14 UTC (rev 20964)
@@ -7,6 +7,8 @@
 import static org.spoofax.jsglr.Term.isAppl;
 import static org.spoofax.jsglr.Term.isInt;
 import static org.spoofax.jsglr.Term.termAt;
+import static org.strategoxt.imp.runtime.parser.ast.AsfixAnalyzer.*;
+import static org.strategoxt.imp.runtime.parser.ast.ProductionAttributeReader.*;
 import static org.strategoxt.imp.runtime.parser.tokens.TokenKind.TK_ERROR;
 import static org.strategoxt.imp.runtime.parser.tokens.TokenKind.TK_LAYOUT;
 import static org.strategoxt.imp.runtime.parser.tokens.TokenKindManager.isKeywordChar;
@@ -123,7 +125,7 @@
 		// method extraction should be carefully considered...
 		
 		ATermAppl appl = resolveAmbiguities(term);
-		if (appl.getName().equals("amb"))
+		if (AMB_FUN == appl.getAFun())
 			return implodeAmbAppl(appl);
 		
 		ATermAppl prod = termAt(appl, APPL_PROD);
@@ -139,7 +141,9 @@
 		
 		if (lexicalStart) inLexicalContext = true;
 		
-		if (!inLexicalContext && "sort".equals(rhs.getName()) && lhs.getLength() == 1 && termAt(contents, 0).getType() == ATerm.INT) {
+		if (!inLexicalContext
+				&& (SORT_FUN == rhs.getAFun() || PARAMETERIZED_SORT_FUN == rhs.getAFun())
+				&& lhs.getLength() == 1 && termAt(contents, 0).getType() == ATerm.INT) {
 			return setAnnos(createIntTerminal(contents, rhs), appl.getAnnotations());
 		}
 		
@@ -246,7 +250,7 @@
 				return createAstNonTerminal(rhs, prevToken, children, ast);
 			} else if (children.size() == 0) {
 				return createNode(attrs, sort, "None", prevToken, children, false);
-			} else if ("opt".equals(applAt(rhs, 0).getName())) {
+			} else if (OPT_FUN == applAt(rhs, 0).getAFun()) {
 				assert children.size() == 1;
 				AstNode child = children.get(0);
 				return new AstNode(sort, child.getLeftIToken(), child.getRightIToken(), "Some", children);
@@ -326,7 +330,7 @@
 	 * Resolve or ignore any ambiguities in the parse tree.
 	 */
 	protected ATermAppl resolveAmbiguities(final ATerm node) {
-		if (!"amb".equals(((ATermAppl) node).getName()))
+		if (AMB_FUN != ((ATermAppl) node).getAFun())
 			return (ATermAppl) node;
 		
 		final ATermListImpl ambs = termAt(node, 0);
@@ -342,14 +346,14 @@
 			ATermAppl appl = termAt(prod, APPL_PROD);
 			ATermAppl attrs = termAt(appl, PROD_ATTRS);
 			
-			if ("attrs".equals(attrs.getName())) {
+			if (ATTRS_FUN == attrs.getAFun()) {
 				ATermList attrList = termAt(attrs, 0);
 				
 				for (int j = 0; j < attrList.getLength(); j++) {
 					ATerm attr = termAt(attrList, j);
-					if (isAppl(attr) && "prefer".equals(asAppl(attr).getName())) {
+					if (isAppl(attr) && PREFER_FUN == asAppl(attr).getAFun()) {
 						return prod;
-					} else if (isAppl(attr) && "avoid".equals(asAppl(attr).getName())) {
+					} else if (isAppl(attr) && AVOID_FUN == asAppl(attr).getAFun()) {
 						continue alts;
 					}
 				}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java	2010-06-09 08:21:20 UTC (rev 20963)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java	2010-06-09 08:27:14 UTC (rev 20964)
@@ -1,10 +1,12 @@
 package org.strategoxt.imp.runtime.parser.ast;
 
+import static org.strategoxt.imp.runtime.Environment.getATermFactory;
 import static org.spoofax.jsglr.Term.*;
 
 import java.util.HashMap;
 import java.util.Map;
 
+import aterm.AFun;
 import aterm.ATerm;
 import aterm.ATermAppl;
 import aterm.ATermList;
@@ -15,6 +17,26 @@
  * @author Lennart Kats <L.C.L.Kats add tudelft.nl>
  */
 public class ProductionAttributeReader {
+	
+	protected static final AFun SORT_FUN = getATermFactory().makeAFun("sort", 1, false);
+	
+	protected static final AFun PARAMETERIZED_SORT_FUN =
+		getATermFactory().makeAFun("parameterized-sort", 2, false);
+	
+	protected static final AFun ATTRS_FUN = getATermFactory().makeAFun("attrs", 1, false);
+	
+	protected static final AFun NO_ATTRS_FUN = getATermFactory().makeAFun("no-attrs", 0, false);
+	
+	protected static final AFun PREFER_FUN = getATermFactory().makeAFun("prefer", 0, false);
+	
+	protected static final AFun AVOID_FUN = getATermFactory().makeAFun("avoid", 0, false);
+	
+	private static final AFun VARSYM_FUN = getATermFactory().makeAFun("varsym", 1, false);
+	
+	private static final AFun ALT_FUN = getATermFactory().makeAFun("alt", 2, false);
+	
+	private static final AFun CHAR_CLASS_FUN = getATermFactory().makeAFun("char-class", 1, false);
+	
 	private static final int PARAMETRIZED_SORT_NAME = 0;
 	
 	private static final int PARAMETRIZED_SORT_ARGS = 1;
@@ -32,8 +54,8 @@
 	
 	// FIXME: support meta-var constructors
 	public String getMetaVarConstructor(ATermAppl rhs) {
-		if (rhs.getChildCount() == 1 && "varsym".equals(rhs.getName())) {
-			return ((ATermAppl) rhs.getChildAt(0)).getName().startsWith("iter")
+		if (rhs.getChildCount() == 1 && VARSYM_FUN == rhs.getAFun()) {
+			return AsfixAnalyzer.isIterFun(((ATermAppl) rhs.getChildAt(0)).getAFun())
 					? "meta-listvar"
 					: "meta-var";
 		}
@@ -50,7 +72,7 @@
 
 	/** Return the contents of a term attribute (e.g., "cons"), or null if not found. */
 	private static ATerm getAttribute(ATermAppl attrs, String attrName) {
-		if (attrs.getName().equals("no-attrs"))
+		if (attrs.getAFun() == NO_ATTRS_FUN)
 			return null;
 		
 		ATermList list = termAt(attrs, 0);
@@ -87,15 +109,15 @@
     
     private String getSortUncached(ATermAppl node) {
     	for (ATerm current = node; current.getChildCount() > 0 && isAppl(current); current = termAt(current, 0)) {
-    		String cons = asAppl(current).getName();
-			if (cons.equals("sort"))
+    		AFun cons = asAppl(current).getAFun();
+			if (cons == SORT_FUN)
     			return applAt(current, 0).getName();
-    		if (cons.equals("alt"))
-    			return getAltSortName(current);
-    		if (cons.equals("parameterized-sort"))
+    		if (cons == PARAMETERIZED_SORT_FUN)
     			return getParameterizedSortName(current);
-    		if (cons.equals("char-class"))
+    		if (cons == CHAR_CLASS_FUN)
     			return null;
+    		if (cons == ALT_FUN)
+    			return getAltSortName(current);
     	}
     	
     	return null;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRToken.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRToken.java	2010-06-09 08:21:20 UTC (rev 20963)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRToken.java	2010-06-09 08:27:14 UTC (rev 20964)
@@ -33,6 +33,7 @@
 		ILexStream lex = left.getILexStream();
 		
 		int length = right.getEndOffset() - left.getStartOffset() + 1;
+		if (length < 1) return "";
 		StringBuilder result = new StringBuilder(length);
 		
 		for (int i = left.getStartOffset(), end = right.getEndOffset(); i <= end; i++) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-09 08:21:20 UTC (rev 20963)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-09 08:27:14 UTC (rev 20964)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.5.1.4.jar" id="org.strategoxt.imp" version="0.5.1.4">
+   <feature url="features/org.strategoxt.imp_0.5.1.5.jar" id="org.strategoxt.imp" version="0.5.1.5">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">


From g.h.wachsmuth at tudelft.nl  Wed Jun  9 10:55:57 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 09 Jun 2010 08:55:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20965 - GuidoWachsmuth
	- in lenses/trunk/Strategic Lenses: . lib syntax trans/semantics
Message-ID: <201006090855.o598tvZj016665@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-09 08:55:57 +0000 (Wed, 09 Jun 2010)
New Revision: 20965

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20965&view=rev

Added:
   lenses/trunk/Strategic Lenses/lib/StrategoMix.def
   lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf
   lenses/trunk/Strategic Lenses/trans/semantics/desugar.meta
Modified:
   lenses/trunk/Strategic Lenses/build.main.xml

Log:
support for concrete syntax in Stratego code
make sure to download the latest strategoxt.jar from http://hydra.nixos.org/job/strategoxt-java/strc-java-trunk/build/latest/download-by-type/file/jar and place it in your eclipse/plugins/org.strategoxt.strj*/java directory, overwriting the existing jar file

Changes (first 1000 lines of the diffs):

Modified: lenses/trunk/Strategic Lenses/build.main.xml
===================================================================
--- lenses/trunk/Strategic Lenses/build.main.xml	2010-06-09 08:27:14 UTC (rev 20964)
+++ lenses/trunk/Strategic Lenses/build.main.xml	2010-06-09 08:55:57 UTC (rev 20965)
@@ -20,7 +20,8 @@
         <property name="build.sdf.imports" value=""/>
         <property name="build.stratego.args" value=" --library
                         -I &quot;${trans}&quot; -I &quot;${basedir}&quot;
-                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm"/>
+                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm
+        				-I &quot;${lib}&quot;"/>
         
         <!-- External .def and .jar locations
         <property name="externaldef" location="syntax/${sdfmodule}.def"/>
@@ -37,5 +38,13 @@
         <import file="build.generated.xml"/>
     
         <!-- Main target -->
-        <target name="all" depends="spoofaximp.default"/>
-   </project>
\ No newline at end of file
+        <target name="all" depends="meta-syntax, spoofaximp.default"/>
+		<target name="meta-syntax">
+	     <antcall target="sdf2table">
+	           <param name="sdfmodule" value="Stratego-StrategicLenses"/>
+	               <param name="build.sdf.imports" value="${build.sdf.imports} -Idef ${lib}/StrategoMix.def"/>
+	               <param name="include" value="${lib}"/>
+	       </antcall>
+	   </target>
+
+</project>
\ No newline at end of file

Added: lenses/trunk/Strategic Lenses/lib/StrategoMix.def
===================================================================
--- lenses/trunk/Strategic Lenses/lib/StrategoMix.def	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/lib/StrategoMix.def	2010-06-09 08:55:57 UTC (rev 20965)
@@ -0,0 +1,930 @@
+definition
+module Stratego-Sugar-Overlays
+imports
+  Stratego-Core-Identifiers
+  Stratego-Sugar-Terms
+
+exports
+  sorts Overlay
+  context-free syntax
+    Id 			 "=" Term 	-> Overlay {cons("OverlayNoArgs")}
+    Id "(" {Id ","}* ")" "=" Term 	-> Overlay {cons("Overlay")}
+
+module Stratego-Sugar-DynamicRules
+imports
+  Stratego-Core-Identifiers
+  Stratego-Sugar-Strategies
+  Stratego-Sugar-Rules
+
+exports
+ 
+  sorts ScopeLabels
+  context-free syntax
+
+    "{|" ScopeLabels ":" Strategy "|}" -> Strategy {cons("DynRuleScope")}
+
+    {DynRuleScopeId ","}*   -> ScopeLabels
+    "~" Term		    -> ScopeLabels {cons("ScopeLabels")}
+
+  sorts DynRuleDef DynRuleId DynRuleScopeId RuleDec
+  context-free syntax
+
+    "rules" "(" DynRuleDef* ")" -> Strategy {cons("GenDynRules")}
+
+    Id "+" Term                 -> DynRuleDef {cons("AddScopeLabel")} 
+    DynRuleId ":-"  Term        -> DynRuleDef {cons("UndefineDynRule")}
+    DynRuleId ":"   Rule        -> DynRuleDef {cons("SetDynRule")}
+    DynRuleId ":+"  Rule        -> DynRuleDef {cons("AddDynRule")}
+    DynRuleId ":"   Term        -> DynRuleDef {cons("SetDynRuleMatch")}
+
+    DynRuleId ":="  Term        -> DynRuleDef {cons("DynRuleAssign")}
+    DynRuleId ":+="  Term       -> DynRuleDef {cons("DynRuleAssignAdd")}
+
+    DynRuleId ":"   Rule "depends" "on" Term -> DynRuleDef {cons("SetDynRuleDepends")}
+
+    RuleDec "." Term            -> DynRuleId {cons("LabeledDynRuleId")}
+    RuleDec "+" Term            -> DynRuleId {cons("AddLabelDynRuleId")}
+    RuleDec                     -> DynRuleId {cons("DynRuleId")}
+
+    Id "." Term                 -> DynRuleScopeId {cons("LabeledDynRuleScopeId")}
+    Id                          -> DynRuleScopeId {cons("DynRuleScopeId")}
+
+  context-free syntax
+
+    Id                          -> RuleDec {cons("RDecNoArgs")}
+    Id "(" {Typedid ","}* ")"   -> RuleDec {cons("RDec")}
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")"   -> RuleDec {cons("RDecT")}
+
+  sorts RuleNames
+  context-free syntax
+    {Id ","}*				  -> RuleNames
+    "~" Term				  -> RuleNames {cons("RuleNames")}
+
+    "/" RuleNames "\\*" Strategy          -> Strategy {cons("DynRuleIntersectFix")}
+
+  syntax
+    %% no space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% 1 space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% no space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+    %% 1 space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+
+  context-free syntax
+    Strategy "/" RuleNames"\\" Strategy  -> Strategy {cons("DynRuleIntersect"),right}
+    Strategy "\\" RuleNames "/" Strategy  -> Strategy {cons("DynRuleUnion"),right}
+
+    Strategy "/" RuleNames "\\" 
+                 RuleNames "/"  Strategy  -> Strategy {cons("DynRuleIntersectUnion"),right}
+
+  priorities
+    <StrategyAngle-CF> <LAYOUT?-CF> <Term-CF> -> <Strategy-CF> {cons("BA")}
+  > {
+
+    %% no space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% 1 space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% no space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+    %% 1 space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+    }
+  > <Strategy-CF> <LAYOUT?-CF> "=>" <LAYOUT?-CF> <Term-CF> -> <Strategy-CF> {cons("AM")}
+
+  context-free priorities
+    StrategyAngle Term 		          -> Strategy {cons("BA")}
+  > "/" RuleNames "\\*" Strategy          -> Strategy {cons("DynRuleIntersectFix")}
+  > Strategy "=>" Term 		  	  -> Strategy {cons("AM")}
+  > Strategy "/" RuleNames "\\" Strategy  -> Strategy {cons("DynRuleIntersect"),right}
+  > Strategy "\\" RuleNames "/" Strategy  -> Strategy {cons("DynRuleUnion"),right}
+  > Strategy "/" RuleNames "\\" 
+                 RuleNames "/"  Strategy  -> Strategy {cons("DynRuleIntersectUnion"),right}
+  > Strategy ";" Strategy 		  -> Strategy {cons("Seq"),right}
+
+module Stratego-Sugar-Rules
+imports Stratego-Sugar-Strategies
+exports
+
+  sorts RuleDef
+  context-free syntax
+    Id ":" Rule 				-> RuleDef {cons("RDefNoArgs")}
+    
+    Anno+ RuleDef               -> Def {cons("AnnoDef")}
+
+    Id "(" {Typedid ","}* ")" ":" Rule 		-> RuleDef {cons("RDef")}
+
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")" ":" Rule 		-> RuleDef {cons("RDefT")}
+
+  sorts Rule RuleCond
+  context-free syntax
+    Term "->" Term           	    -> Rule {cons("RuleNoCond")} %% backward comp.
+    Term "->" Term "where" Strategy -> Rule {cons("Rule")}       %% backward comp.
+    Term "->" Term RuleCond+	    -> Rule {cons("Rule"), avoid}
+
+    "where" Strategy -> RuleCond {cons("WhereClause")}
+    "with"  Strategy -> RuleCond {cons("WithClause")}
+
+module Stratego-Sugar-Strategies
+imports
+  Stratego-Core-Strategies
+  Stratego-Sugar-Terms
+  Stratego-Sugar-Constants
+  Stratego-Sugar-Signatures
+
+exports
+  context-free syntax
+    Id  		      "=" Strategy -> StrategyDef {cons("SDefNoArgs")}
+    Id "(" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("SDef")}
+
+  context-free syntax
+    ID 				  	  -> Typedid {cons("DefaultVarDec")}
+
+  sorts Rule
+
+  sorts StrategyParen StrategyCurly StrategyAngle
+  context-free syntax
+
+    %% Abstraction
+
+    SVar "(" {Strategy ","}* ")" 	  -> Strategy {cons("Call")}
+
+    %% Match and build
+
+    "{" Strategy "}" 			  -> Strategy {cons("ScopeDefault")}
+
+     %%"<" Strategy ">" Term 		  -> Strategy {cons("BA")}
+     StrategyAngle Term 		  -> Strategy {cons("BA")}
+     "<" Strategy ">"			  -> StrategyAngle {bracket} %% {cons("AngleStrat")}
+
+    %% Combinators
+
+    Strategy "<+" Strategy 		  -> Strategy {cons("LChoice"),right}
+
+    "rec" Id "(" Strategy ")" 		  -> Strategy {cons("Rec")}
+
+    "not"   "(" Strategy ")" 		  -> Strategy {cons("Not")}
+    "where" "(" Strategy ")" 		  -> Strategy {cons("Where")}
+    "with"  "(" Strategy ")" 		  -> Strategy {cons("With"), prefer}
+    "test"  "(" Strategy ")" 		  -> Strategy {cons("Test")}
+
+    %% Primitives
+
+    "prim" "(" String ")" 		  -> Strategy {cons("PrimNoArgs")}
+    "prim" "(" String "," {Term ","}* ")" -> Strategy {cons("Prim")}
+
+    %% Congruence operators
+
+    String 				  -> Strategy {cons("StrCong")}
+    Int 				  -> Strategy {cons("IntCong")}
+    Real 				  -> Strategy {cons("RealCong")}
+    Char 			 	  -> Strategy {cons("CharCong")}
+
+    String "(" {Strategy ","}* ")" 	  -> Strategy {cons("CongQ")}
+
+    %%"(" {Strategy ","}* ")" 		  -> Strategy {cons("TupleCong"),avoid}
+
+    Strategy StrategyCurly		  -> Strategy {cons("AnnoCong")}
+    
+    "{" Strategy "}"		  	  -> StrategyCurly {cons("StrategyCurly")}
+
+    "("  ")" 		  		  -> Strategy {cons("EmptyTupleCong")}
+   "(" Strategy  ")" 		          -> Strategy {bracket}
+    "(" Strategy "," {Strategy ","}+ ")"  -> Strategy {cons("TupleCong")}
+
+%%    Mod 	  			  -> Strategy {cons("ModCongNoArgs")}
+%%    Mod "(" {Strategy ","}* ")"	  	  -> Strategy {cons("ModCong")}
+%%    Id "^" Id				  -> Mod {cons("Mod")}
+    "[" {Strategy ","}* "]" 		  -> Strategy {cons("ListCongNoTail")}
+    "[" {Strategy ","}* "|" Strategy "]"  -> Strategy {cons("ListCong")}
+
+%%    Strategy "#" "(" StrategyInj ")" 	  -> Strategy {cons("ExplodeCong")}
+%%    Strategy "#" "(" Strategy ")" 	  -> Strategy {cons("ExplodeCong")}
+    Strategy "#" StrategyParen	  	  -> Strategy {cons("ExplodeCong")}
+
+  %% Syntactic sugar sugar
+
+  sorts SwitchCase
+  context-free syntax
+
+    SVar  		  		  -> Strategy {cons("CallNoArgs")}
+    "\\" Rule "\\" 			  -> Strategy {cons("LRule")}
+    "(" Rule ")" 			  -> Strategy {cons("SRule")}
+    Strategy "+" Strategy 		  -> Strategy {cons("Choice"),right} 
+    Strategy "+>" Strategy 		  -> Strategy {cons("RChoice"),right}
+
+    "proceed"                          -> Strategy {cons("ProceedNoArgs"), prefer}
+    "proceed" "(" {Strategy "," }+ ")" -> Strategy {cons("Proceed"), prefer}
+
+    "if" Strategy "then" Strategy 
+                  "else" Strategy "end"   -> Strategy {cons("CondChoice")}
+    "if" Strategy "then" Strategy "end"   -> Strategy {cons("IfThen")}
+
+    "switch" Strategy SwitchCase* "end"   -> Strategy {cons("SwitchChoiceNoOtherwise")}
+    "switch" Strategy SwitchCase*
+         "otherwise" ":" Strategy "end"   -> Strategy {cons("SwitchChoice")}
+
+    "case" Strategy ":" Strategy          -> SwitchCase {cons("SwitchCase")}
+
+    Strategy "=>" Term 		  	  -> Strategy {cons("AM")}
+
+    Term ":=" Term			  -> Strategy {cons("Assign")}
+
+  %% Priorities
+
+  context-free priorities
+    { Strategy StrategyCurly		  -> Strategy
+      Strategy "#" StrategyParen          -> Strategy
+    }
+  > { "!" Term 				  -> Strategy
+      "?" Term 				  -> Strategy
+    }
+  > StrategyAngle Term 		          -> Strategy
+  > Strategy "=>" Term 		  	  -> Strategy
+  > Strategy ";" Strategy 		  -> Strategy
+  > {right: 
+     Strategy "+" Strategy 		  -> Strategy
+     Strategy "<+" Strategy 		  -> Strategy
+     Strategy "+>" Strategy 		  -> Strategy
+     
+     Strategy "<" StrategyMid 
+              "+" Strategy 		  -> Strategy
+    }
+
+  context-free priorities
+    Strategy 				  -> StrategyMid
+  > Strategy "+" Strategy 		  -> Strategy
+
+  context-free priorities
+    { Strategy StrategyCurly      -> Strategy
+      Strategy "#" StrategyParen  -> Strategy
+    }
+    .> Term ":=" Term -> Strategy
+
+
+module Stratego-Sugar-Terms
+imports
+  Stratego-Core-Terms
+  Stratego-Sugar-Strategies
+
+exports
+  sorts LID
+  context-free syntax
+    LId 			-> LID  {cons("ListVar")}
+    LID				-> Var  {cons("Var")}
+    LID				-> ID
+
+  context-free syntax
+    "_" PreTerm 		 -> PreTerm {cons("BuildDefaultPT")}
+    "_" Term 			 -> Term {cons("BuildDefault"),prefer}
+
+    Char 			 -> PreTerm {cons("Char")}
+
+    PreTerm "{" {Term ","}* "}"	 -> Term {cons("AnnoList")}
+    PreTerm                      -> Term {cons("NoAnnoList")}
+
+    "<" Strategy ">" Term 	 -> PreTerm {cons("App")}
+    "<" Strategy ">" Term 	 -> Term {cons("App"),prefer}
+
+    StrategyAngle		 -> PreTerm {cons("RootApp")}
+    StrategyAngle		 -> Term {cons("RootApp"),prefer}
+
+    "(" {Term ","}* ")" 	 -> PreTerm {cons("Tuple")}
+    "[" {Term ","}* "]" 	 -> PreTerm {cons("List")}
+    "[" {Term ","}* "|" Term "]" -> PreTerm {cons("ListTail")}
+
+  context-free priorities
+    Term "#" "(" Term ")" 	 -> PreTerm {cons("Explode")}
+  > PreTerm "{" {Term ","}* "}"	 -> Term {cons("AnnoList")}
+  > Var "@" Term 		 -> Term {cons("As")}
+
+module Stratego-Sugar-Signatures
+imports
+  Stratego-Core-Signatures
+  Stratego-Sugar-Constants
+
+exports
+
+  sorts Sort
+  context-free syntax
+    "[" {Sort ","}* "]"		 -> Sort {cons("SortList")}
+    "[" {Sort ","}* "|" Sort "]" -> Sort {cons("SortListTl")}
+    "(" {Sort ","}* ")"		 -> Sort {cons("SortTuple")}
+
+  sorts Kind
+  context-free syntax
+    "*" 			-> Kind {cons("Star")}
+    "**" 			-> Kind {cons("StarStar")}
+
+module Stratego-Core-Signatures
+imports
+  Stratego-Core-Identifiers
+  Stratego-Core-Constants
+exports
+  sorts Sdecl
+  context-free syntax
+    "sorts" Sort* 		-> Sdecl {cons("Sorts")}
+    "constructors" Opdecl* 	-> Sdecl {cons("Constructors")}
+
+  sorts Sort
+  context-free syntax
+    LCID 			 -> Sort {cons("SortVar")}
+    UCID 			 -> Sort {cons("SortNoArgs")}
+    Id "(" {Sort ","}* ")" 	 -> Sort {cons("Sort")}
+
+  sorts Opdecl
+  context-free syntax
+    Id     ":" Type 		-> Opdecl {cons("OpDecl")}
+    String ":" Type 		-> Opdecl {cons("OpDeclQ")}
+           ":" Type 		-> Opdecl {cons("OpDeclInj")}
+
+  context-free syntax
+    "external" Id     ":" Type 	-> Opdecl {cons("ExtOpDecl")}
+    "external" String ":" Type 	-> Opdecl {cons("ExtOpDeclQ")}
+    "external"        ":" Type 	-> Opdecl {cons("ExtOpDeclInj")}
+
+  sorts Type ArgType ConstType FunType RetType
+  context-free syntax
+    Sort	                -> ConstType {cons("ConstType")}
+    {ArgType "*"}+ "->" RetType -> FunType {cons("FunType")}
+    "(" Type ")"                -> ArgType {bracket}
+    ConstType			-> ArgType
+    Type	                -> RetType
+    FunType			-> RetType {reject}
+
+    FunType			-> Type
+    ConstType			-> Type
+
+  %%%
+   %% Restriction is required for the Sort* in Sdecl: List(a) is
+   %% ambiguous.
+   %%%
+  context-free restrictions
+    Sort -/- [\(]
+
+module Stratego-Core-Terms
+imports
+  Stratego-Core-Identifiers
+  Stratego-Core-Constants
+
+exports
+  sorts ID Var Wld
+  context-free syntax
+    Id 				-> Var  {cons("Var")}
+    Id				-> ID
+    %% ":" Var                  -> Var  {cons("SeqVar")}
+
+  sorts Term PreTerm
+  context-free syntax
+    Var 			 -> PreTerm 
+    Var 			 -> Term {prefer}
+
+    "_" 			 -> Wld {cons("Wld")}
+    Wld 			 -> PreTerm
+    Wld 			 -> Term {prefer}
+
+    Int 			 -> PreTerm {cons("Int")}
+    Real 			 -> PreTerm {cons("Real")}
+    String 			 -> PreTerm {cons("Str")}
+
+    Id "(" {Term ","}* ")" 	 -> PreTerm {cons("Op")}
+    String "(" {Term ","}* ")" 	 -> PreTerm {cons("OpQ")}
+    Term "#" "(" Term ")" 	 -> PreTerm {cons("Explode")}
+
+    PreTerm "{^" PreTerm "}"	 -> Term {cons("Anno")}
+
+    Var "@" Term 		 -> Term {cons("As"),prefer}
+    Var "@" PreTerm 		 -> PreTerm {cons("As")}
+
+  context-free priorities
+    Term "#" "(" Term ")" 	 -> PreTerm {cons("Explode")}
+  > Var "@" Term 		 -> Term {cons("As")}
+
+module Stratego-Core-Strategies
+imports
+  Stratego-Core-Terms
+  Stratego-Core-Constants
+  Stratego-Core-Signatures
+
+exports
+  sorts Def
+  context-free syntax
+    StrategyDef					 -> Def 
+    Id						 -> SVar {cons("SVar")}
+    "let" Def* "in" Strategy "end"		 -> Strategy {cons("Let")}
+    SVar "(" {Strategy ","}* "|" {Term ","}* ")" -> Strategy {cons("CallT")}
+
+    "call" "(" Term "|" {Strategy ","}* "|" {Term ","}* ")" -> Strategy {cons("CallDynamic")}
+
+
+  sorts StrategyDef
+  context-free syntax
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("SDefT")}
+
+    Anno+ StrategyDef -> Def {cons("AnnoDef")}
+
+    "external"
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("ExtSDefInl")}
+
+    "external"
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")"		   -> StrategyDef {cons("ExtSDef")}
+
+    "external"
+    EmptyId "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")"		   -> StrategyDef {cons("ExtSDef")}
+
+
+  sorts EmptyId
+  lexical syntax
+  
+    -> EmptyId
+
+  sorts Anno
+  context-free syntax
+    "extend"      -> Anno {cons("Extend")}
+    "override"    -> Anno {cons("Override")}
+    "internal"    -> Anno {cons("Internal")}
+%%  "sealed"      -> Anno {cons("Sealed")}
+%%  "extensible"  -> Anno {cons("Extensible")}
+%%  "overridable" -> Anno {cons("Overridable")}
+
+  lexical syntax
+    
+    "extend"      -> Keyword
+    "override"    -> Keyword
+    "internal"    -> Keyword
+    "sealed"      -> Keyword
+    "extensible"  -> Keyword
+    "overridable" -> Keyword
+
+  lexical restrictions
+  
+    "extend"
+    "override"
+    "internal"
+    "sealed"
+    "extensible"
+    "overridable" -/- [a-zA-Z0-9\'\-\_]
+
+  sorts Typedid
+  context-free syntax
+    ID ":" Type 			  -> Typedid {cons("VarDec")}
+
+
+  sorts Strategy SVar StrategyParen StrategyMid 
+  context-free syntax
+    "(" Strategy ")"			  -> StrategyParen {cons("ParenStrat")}
+
+    "fail" 				  -> Strategy {cons("Fail")}
+    "id" 				  -> Strategy {cons("Id")}
+
+    "proceed" "(" {Strategy ","}* "|" {Term ","}* ")" -> Strategy {cons("ProceedT"), prefer}
+    "proceed"                                         -> Strategy {cons("ProceedNoArgs"), prefer}
+
+    %% Match and build
+
+    "?" Term 				  -> Strategy {cons("Match")}
+    "!" Term 				  -> Strategy {cons("Build")}
+    "{" {ID ","}* ":" Strategy "}" 	  -> Strategy {cons("Scope")}
+
+    %% Combinators
+
+    Strategy ";" Strategy 		  -> Strategy {cons("Seq"),right}
+    Strategy "<" StrategyMid 
+             "+" Strategy 		  -> Strategy {cons("GuardedLChoice"),right}
+    Strategy 				  -> StrategyMid
+
+    %% Primitives
+
+    "prim" "(" String "," {Strategy ","}* "|" {Term ","}*")"  -> Strategy {cons("PrimT")}
+
+    %% Traversal
+
+    "some" "(" Strategy ")" 		  -> Strategy {cons("Some")}
+    "one" "(" Strategy ")" 		  -> Strategy {cons("One")}
+    "all" "(" Strategy ")" 		  -> Strategy {cons("All")}
+
+  %% Priorities
+
+  context-free priorities
+    { "!" Term 				  -> Strategy {cons("Build")}
+      "?" Term 				  -> Strategy {cons("Match")}
+    }
+  > Strategy ";" Strategy 		  -> Strategy {cons("Seq"),right}
+  > {right: 
+     Strategy "<" StrategyMid 
+              "+" Strategy 		  -> Strategy {cons("GuardedLChoice"),right}
+    }
+
+  context-free syntax
+    "import-term" "(" ModName ")" -> Strategy {cons("ImportTerm")}
+
+module Stratego-Core-Modules
+imports
+  Stratego-Core-Identifiers
+  Stratego-Core-Strategies
+  Stratego-Core-Signatures
+
+exports 
+  sorts Module
+  context-free syntax
+    "module" ModName Decl* 	 -> Module {cons("Module")}
+    "specification" Decl*	 -> Module {cons("Specification")}
+
+  sorts Decl 
+  context-free syntax
+    "imports" ImportModName* 	-> Decl {cons("Imports")}
+    "strategies" Def* 		-> Decl {cons("Strategies")}
+    "signature" Sdecl*  	-> Decl {cons("Signature")}
+
+  sorts ImportModName
+  context-free syntax
+    ModName              -> ImportModName {cons("Import")}
+  syntax
+    <ModName-CF> "/" "-" -> <ImportModName-CF> {cons("ImportWildcard")}
+
+module Stratego-Sugar-Modules
+imports
+  Stratego-Core-Modules
+  Stratego-Sugar-Strategies
+  Stratego-Sugar-Signatures
+  Stratego-Sugar-Overlays
+  Stratego-Sugar-Rules
+
+exports 
+
+  sorts Decl Def
+  context-free syntax
+    "rules" Def* 		-> Decl {cons("Rules")}
+    "overlays" Overlay* 	-> Decl {cons("Overlays")}
+
+    RuleDef 			-> Def 
+
+
+module Stratego-Sugar-StringQuotations
+exports
+
+  sorts
+    StringQuotation
+    StringQuotedPart1 StringQuotedChars1 DollarOpen1 DollarClose1 QuotedBracket1 Dollar1
+    StringQuotedPart2 StringQuotedChars2 DollarOpen2 DollarClose2 QuotedBracket2 Dollar2
+    StringQuotedPart3 StringQuotedChars3 DollarOpen3 DollarClose3 QuotedBracket3 Dollar3
+    StringQuotedPart4 StringQuotedChars4 DollarOpen4 DollarClose4 QuotedBracket4  Dollar4
+    Padding
+
+  context-free syntax
+
+    StringQuotation -> PreTerm
+
+  syntax
+
+    StringQuotation -> <PreTerm-CF>
+
+    "$" "[" Padding StringQuotedPart1*               "]"    -> StringQuotation {cons("StringQuotation1") }
+     Padding "[" <LAYOUT?-CF> <Term-CF> <LAYOUT?-CF> "]"    -> StringQuotedPart1 {cons("StringEscape1")}
+    <StringQuotedChars1-LEX>                                -> StringQuotedPart1 {cons("QStr")}
+    <Dollar1-LEX>                                           -> StringQuotedPart1 {cons("QDollar")}
+    "$" <QuotedBracket1-LEX> "$"                            -> StringQuotedPart1 {cons("QBr")}
+    ~[\[\]\$]+                                              -> <StringQuotedChars1-LEX>
+    [\[\]]                                                  -> <QuotedBracket1-LEX>
+    "$"                                                     -> <Dollar1-LEX>
+
+    "$" "{" Padding StringQuotedPart2*               "}"    -> StringQuotation {cons("StringQuotation2") }
+     Padding "{" <LAYOUT?-CF> <Term-CF> <LAYOUT?-CF> "}"    -> StringQuotedPart2 {cons("StringEscape2")}
+    <StringQuotedChars2-LEX>                                -> StringQuotedPart2 {cons("QStr")}
+    <Dollar2-LEX>                                           -> StringQuotedPart2 {cons("QDollar")}
+    "$" <QuotedBracket2-LEX> "$"                            -> StringQuotedPart2 {cons("QBr")}
+    ~[\{\}\$]+                                              -> <StringQuotedChars2-LEX>
+    [\{\}]                                                  -> <QuotedBracket2-LEX>
+    "$"                                                     -> <Dollar2-LEX>
+
+    "$" "(" Padding StringQuotedPart3*              ")"     -> StringQuotation {cons("StringQuotation3") }
+    Padding "(" <LAYOUT?-CF> <Term-CF> <LAYOUT?-CF> ")"     -> StringQuotedPart3 {cons("StringEscape3")}
+    <StringQuotedChars3-LEX>                                -> StringQuotedPart3 {cons("QStr")}
+    <Dollar3-LEX>                                           -> StringQuotedPart3 {cons("QDollar")}
+    "$" <QuotedBracket3-LEX> "$"                            -> StringQuotedPart3 {cons("QBr")}
+    ~[\(\)\$]+                                              -> <StringQuotedChars3-LEX>
+    [\(\)]                                                  -> <QuotedBracket3-LEX>
+    "$"                                                     -> <Dollar3-LEX>
+
+    "$" "<" Padding StringQuotedPart4*               ">"    -> StringQuotation {cons("StringQuotation4") }
+    Padding "<"  <LAYOUT?-CF> <Term-CF> <LAYOUT?-CF> ">"    -> StringQuotedPart4 {cons("StringEscape4")}
+    <StringQuotedChars4-LEX>                                -> StringQuotedPart4 {cons("QStr")}
+    <Dollar4-LEX>                                           -> StringQuotedPart4 {cons("QDollar")}
+    "$" <QuotedBracket4-LEX> "$"                            -> StringQuotedPart4 {cons("QBr")}
+    ~[\<\>\$]+                                              -> <StringQuotedChars4-LEX>
+    [\<\>]                                                  -> <QuotedBracket4-LEX>
+    "$"                                                     -> <Dollar4-LEX>
+   
+    %% Padding is a dummy lexical that will contain the indentation prefix of every quotation
+    <Padding-LEX>                                           -> Padding
+                                                            -> <Padding-LEX> {indentpadding}
+
+  lexical restrictions
+
+    StringQuotedChars1 -/- ~[\[\]\$]   
+    StringQuotedChars2 -/- ~[\{\}\$]    
+    StringQuotedChars3 -/- ~[\(\)\$]    
+    StringQuotedChars4 -/- ~[\<\>\$]
+    Dollar1            -/- [\[\]] . [\$]
+    Dollar2            -/- [\{\}] . [\$]
+    Dollar3            -/- [\(\)] . [\$]
+    Dollar4            -/- [\<\>] . [\$]
+
+module Stratego-Core-Constants
+exports
+  sorts Int Real String StrChar
+  lexical syntax
+    [\-]? [0-9]+ 		-> Int
+    [\-]? [0-9]+ [\.] [0-9]+ 	-> Real
+    "\"" StrChar* "\"" 		-> String
+    ~[\"\\] 			-> StrChar
+    [\\] [\"tnr\\] 		-> StrChar
+
+
+module Stratego-Sugar-Constants
+imports
+  Stratego-Core-Identifiers
+  Stratego-Core-Constants
+  Stratego-Sugar-StringQuotations
+exports
+  sorts Char CharChar
+  lexical syntax
+    "'" CharChar "'"		-> Char
+    ~[\']			-> CharChar
+    [\\] [\'ntr\ ]		-> CharChar
+    Char		 	-> Id {reject}
+
+module Stratego-Core-Identifiers
+exports
+  sorts ModName ModNamePart
+  lexical syntax
+    {ModNamePart "/"}+ -> ModName
+    [a-zA-Z\.\_] [a-zA-Z0-9\'\.\-\_]* -> ModNamePart
+  lexical restrictions
+    ModName -/- [a-zA-Z0-9\'\.\-\_]
+  lexical syntax
+    "imports" 		-> ModName {reject}
+    "overlays" 		-> ModName {reject}
+    "rules" 		-> ModName {reject}
+    "signature" 	-> ModName {reject}
+    "strategies" 	-> ModName {reject}
+
+  sorts Id LId LCID UCID Wld
+  lexical syntax
+    [a-zA-Z\_] [a-zA-Z0-9\'\-\_]*     -> Id
+    [a-zA-Z\_] [a-zA-Z0-9\'\-\_]* "*" -> LId
+    [\'] [a-z]+                       -> Id
+
+    [a-z] [a-zA-Z0-9\'\-\_]*  -> LCID
+    [A-Z] [a-zA-Z0-9\'\-\_]*  -> UCID
+
+  lexical restrictions
+    Id   -/- [a-zA-Z0-9\'\-\_\*]
+    LId  -/- [a-zA-Z0-9\'\-\_]
+    LCID -/- [a-zA-Z0-9\'\-\_]
+    UCID -/- [a-zA-Z0-9\'\-\_]
+
+  lexical syntax
+    "_"     -> Id {reject}
+    "'"     -> Id {reject}
+
+    Keyword -> Id   {reject}
+    Keyword -> LId  {reject}
+    Keyword -> LCID {reject}
+    Keyword -> UCID {reject}
+
+  lexical restrictions
+    "all"
+    "case" %% not reserved kw
+    "constructors"
+    "else" %% not reserved kw
+    "end" %% not reserved kw
+    "external" %% not reserved kw
+    "fail"
+    "id"
+    "if" %% not reserved kw
+    "in"
+    "imports" %% not reserved kw
+    "let"
+    "module"
+    "not"
+    "one"
+    "overlays"
+    "otherwise" %% not reserved kw
+    "prim"
+    "rec" %% not reserved kw
+    "rules"
+    "script"
+    "signature"
+    "some"
+    "sorts"
+    "strategies"
+    "stratego"
+    "switch" %% not reserved kw
+    "test"
+    "then" %% not reserved kw
+    "where"
+    "import-term"
+      -/- [a-zA-Z0-9\'\-\_]
+  
+  context-free restrictions
+    Wld -/- [a-zA-Z0-9\'\-\_]
+
+  sorts Keyword
+  lexical syntax
+    "all"               -> Keyword
+    "constructors" 	-> Keyword
+    "fail" 		-> Keyword
+    "id" 		-> Keyword
+    "in" 		-> Keyword
+    "let" 		-> Keyword
+    "module" 		-> Keyword
+    "not" 		-> Keyword
+    "one" 		-> Keyword
+    "overlays" 		-> Keyword
+    "prim" 		-> Keyword
+    "rules" 		-> Keyword
+    "script" 		-> Keyword
+    "signature" 	-> Keyword
+    "some" 		-> Keyword
+    "sorts" 		-> Keyword
+    "strategies" 	-> Keyword
+    "stratego" 		-> Keyword
+    "test" 		-> Keyword
+    "where" 		-> Keyword
+    "import-term"	-> Keyword
+
+
+module Stratego-Core-Layout
+exports
+  sorts Ws ShortCom LongCom CommChar Asterisk Eof 
+  lexical syntax
+    [\t\ \n\r]			-> Ws
+
+    "//" ~[\n]* ([\n] | Eof)	-> ShortCom
+    "/*" CommChar* "*/"	-> LongCom
+				-> Eof  
+
+    ~[\*]     -> CommChar
+
+    "*"       -> Asterisk
+    Asterisk  -> CommChar
+
+  lexical restrictions
+    Asterisk -/- [\/]
+    Eof      -/- ~[]
+
+  lexical syntax
+    ShortCom 	-> LAYOUT
+    LongCom 	-> LAYOUT
+    Ws 		-> LAYOUT
+
+  context-free restrictions
+    LAYOUT? -/- [\ \t\n\r]
+    LAYOUT? -/- [\/].[\*]
+    LAYOUT? -/- [\/].[\/]
+
+module Stratego-Sugar-Layout
+imports Stratego-Core-Layout
+%%exports
+%%  sorts VeryLongCom Eof VLCchar Backslash
+%%  lexical syntax
+%%    "\\end{code}" VLCchar* "\\begin{code}" -> VeryLongCom
+%%    "\\begin{code}" 			   -> VeryLongCom
+%%    "\\end{code}" VLCchar* Eof 		   -> VeryLongCom
+%%    "\\literate" VLCchar* "\\begin{code}"  -> VeryLongCom
+%%    ~[\\] 				   -> VLCchar
+%%    Backslash 				   -> VLCchar
+%%    [\\] 				   -> Backslash
+
+%%  lexical restrictions
+%%    Backslash -/- [b].[e].[g].[i].[n].[\{].[c].[o].[d].[e].[\}]
+%%    Eof -/- ~[]
+
+%%  lexical syntax
+%%    VeryLongCom -> LAYOUT
+
+
+
+module Stratego-Sugar
+imports
+  Stratego-Sugar-Layout
+  Stratego-Core-Identifiers
+  Stratego-Sugar-Constants 
+  Stratego-Sugar-Modules
+  Stratego-Sugar-Signatures
+  Stratego-Sugar-Terms
+  Stratego-Sugar-Strategies
+  Stratego-Sugar-Rules
+  Stratego-Sugar-DynamicRules
+  Stratego-Sugar-Overlays
+
+hiddens
+  context-free start-symbols Module
+
+module Stratego
+imports Stratego-Sugar
+hiddens
+  context-free start-symbols Module
+
+module StrategoMix[Ctx0]
+imports Stratego
+          [ RuleNames          => RuleNames[[Ctx0]]
+            RuleDec            => RuleDec[[Ctx0]]
+            DynRuleScopeId     => DynRuleScopeId[[Ctx0]]
+            DynRuleId          => DynRuleId[[Ctx0]]
+            DynRuleDef         => DynRuleDef[[Ctx0]]
+            ScopeLabels        => ScopeLabels[[Ctx0]]
+            RuleCond           => RuleCond[[Ctx0]]
+            Rule               => Rule[[Ctx0]]
+            RuleDef            => RuleDef[[Ctx0]]
+            Overlay            => Overlay[[Ctx0]]
+            SwitchCase         => SwitchCase[[Ctx0]]
+            StrategyCurly      => StrategyCurly[[Ctx0]]
+            StrategyAngle      => StrategyAngle[[Ctx0]]
+            Kind               => Kind[[Ctx0]]
+            LID                => LID[[Ctx0]]
+            ImportModName      => ImportModName[[Ctx0]]
+            Decl               => Decl[[Ctx0]]
+            Module             => Module[[Ctx0]]
+            StrategyParen      => StrategyParen[[Ctx0]]
+            Typedid            => Typedid[[Ctx0]]
+            Anno               => Anno[[Ctx0]]
+            EmptyId            => EmptyId[[Ctx0]]
+            StrategyDef        => StrategyDef[[Ctx0]]
+            SVar               => SVar[[Ctx0]]
+            Def                => Def[[Ctx0]]
+            Type               => Type[[Ctx0]]
+            RetType            => RetType[[Ctx0]]
+            ArgType            => ArgType[[Ctx0]]
+            FunType            => FunType[[Ctx0]]
+            ConstType          => ConstType[[Ctx0]]
+            Opdecl             => Opdecl[[Ctx0]]
+            Sort               => Sort[[Ctx0]]
+            Sdecl              => Sdecl[[Ctx0]]
+            Wld                => Wld[[Ctx0]]
+            ID                 => ID[[Ctx0]]
+            Var                => Var[[Ctx0]]
+            CharChar           => CharChar[[Ctx0]]
+            Char               => Char[[Ctx0]]
+            Padding            => Padding[[Ctx0]]
+            Dollar4            => Dollar4[[Ctx0]]
+            QuotedBracket4     => QuotedBracket4[[Ctx0]]
+            StringQuotedChars4 => StringQuotedChars4[[Ctx0]]
+            StringQuotedPart4  => StringQuotedPart4[[Ctx0]]
+            Dollar3            => Dollar3[[Ctx0]]
+            QuotedBracket3     => QuotedBracket3[[Ctx0]]
+            StringQuotedChars3 => StringQuotedChars3[[Ctx0]]
+            StringQuotedPart3  => StringQuotedPart3[[Ctx0]]
+            Dollar2            => Dollar2[[Ctx0]]
+            QuotedBracket2     => QuotedBracket2[[Ctx0]]
+            StringQuotedChars2 => StringQuotedChars2[[Ctx0]]
+            StringQuotedPart2  => StringQuotedPart2[[Ctx0]]
+            Dollar1            => Dollar1[[Ctx0]]
+            QuotedBracket1     => QuotedBracket1[[Ctx0]]
+            StringQuotedChars1 => StringQuotedChars1[[Ctx0]]
+            StringQuotedPart1  => StringQuotedPart1[[Ctx0]]
+            StringQuotation    => StringQuotation[[Ctx0]]
+            StrChar            => StrChar[[Ctx0]]
+            String             => String[[Ctx0]]
+            Real               => Real[[Ctx0]]
+            Int                => Int[[Ctx0]]
+            Keyword            => Keyword[[Ctx0]]
+            UCID               => UCID[[Ctx0]]
+            LCID               => LCID[[Ctx0]]
+            LId                => LId[[Ctx0]]
+            Id                 => Id[[Ctx0]]
+            ModNamePart        => ModNamePart[[Ctx0]]
+            ModName            => ModName[[Ctx0]]
+            PreTerm            => PreTerm[[Ctx0]]
+            Term               => Term[[Ctx0]]
+            StrategyMid        => StrategyMid[[Ctx0]]
+            Strategy           => Strategy[[Ctx0]] ]
\ No newline at end of file

Added: lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf	2010-06-09 08:55:57 UTC (rev 20965)
@@ -0,0 +1,28 @@
+module Stratego-StrategicLenses
+
+imports
+
+	StrategoMix[StrategoHost]
+	StrategicLenses
+
+exports
+
+	context-free start-symbols 
+	
+		Module[[StrategoHost]]
+
+
+	context-free syntax
+
+		"|[" Lens "]|" 			-> Term [[StrategoHost]] {cons("ToMetaExpr")}
+		"|[" QConstructor "]|" 	-> Term [[StrategoHost]] {cons("ToMetaExpr")}
+
+	variables 
+
+		"cmodels"[0-9]*  	-> CModel*		{prefer}
+		"cmodel"[0-9]*  	-> CModel		{prefer}
+		"constr"[0-9]*  	-> ID			{prefer}
+		"qc"[0-9]*  		-> QConstructor	{prefer}

(13 diff lines omitted)

From L.C.L.Kats at tudelft.nl  Wed Jun  9 11:18:05 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 09 Jun 2010 09:18:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20966 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast
	org.strategoxt.imp.updatesite
Message-ID: <201006090918.o599I51P017191@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-09 09:18:05 +0000 (Wed, 09 Jun 2010)
New Revision: 20966

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20966&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Oops. Cure worse than disease.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-09 08:55:57 UTC (rev 20965)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-09 09:18:05 UTC (rev 20966)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.5.1.5"
+      version="0.5.1.6"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java	2010-06-09 08:55:57 UTC (rev 20965)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java	2010-06-09 09:18:05 UTC (rev 20966)
@@ -476,7 +476,7 @@
 	 */
 	private void createSkippedToken(char[] inputChars, char inputChar) {
 		boolean isInputKeywordChar = isKeywordChar(inputChar);
-		if (offset > 0) {
+		if (offset > 0 && offset - 1 > tokenizer.getStartOffset()) {
 			if ((isInputKeywordChar && !isKeywordChar(prevChar))
 					|| (!isInputKeywordChar && isKeywordChar(prevChar))) {
 				tokenizer.makeToken(offset - 1, TK_ERROR, false);

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-09 08:55:57 UTC (rev 20965)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-09 09:18:05 UTC (rev 20966)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.5.1.5.jar" id="org.strategoxt.imp" version="0.5.1.5">
+   <feature url="features/org.strategoxt.imp_0.5.1.6.jar" id="org.strategoxt.imp" version="0.5.1.6">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">


From g.h.wachsmuth at tudelft.nl  Wed Jun  9 12:20:06 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 09 Jun 2010 10:20:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20967 - GuidoWachsmuth
	- in lenses/trunk/Strategic Lenses: syntax trans/semantics
Message-ID: <201006091020.o59AK6fE018237@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-09 10:20:06 +0000 (Wed, 09 Jun 2010)
New Revision: 20967

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20967&view=rev

Modified:
   lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf
   lenses/trunk/Strategic Lenses/trans/semantics/desugar.str

Log:
concrete syntax in desugaring rules

Changes:

Modified: lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf	2010-06-09 09:18:05 UTC (rev 20966)
+++ lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf	2010-06-09 10:20:06 UTC (rev 20967)
@@ -16,13 +16,22 @@
 
 		"|[" Lens "]|" 			-> Term [[StrategoHost]] {cons("ToMetaExpr")}
 		"|[" QConstructor "]|" 	-> Term [[StrategoHost]] {cons("ToMetaExpr")}
+		"|[" PFBranch "]|" 		-> Term [[StrategoHost]] {cons("ToMetaExpr")}
+		"|[" FBranch "]|" 		-> Term [[StrategoHost]] {cons("ToMetaExpr")}
+		"|[" Pattern "]|" 		-> Term [[StrategoHost]] {cons("ToMetaExpr")}
 
 	variables 
 
-		"cmodels"[0-9]*  	-> CModel*		{prefer}
-		"cmodel"[0-9]*  	-> CModel		{prefer}
-		"constr"[0-9]*  	-> ID			{prefer}
-		"qc"[0-9]*  		-> QConstructor	{prefer}
-		"indices"[0-9]*  	-> Indices		{prefer}
-		"index"[0-9]*  		-> Index		{prefer}
-		"segments"[0-9]*	-> {PathSegment "::"}+	{prefer}
\ No newline at end of file
+		"lens"[0-9]*			-> Lens			{prefer}
+		"cmodels"[0-9]*  		-> CModel*		{prefer}
+		"cmodel"[0-9]*  		-> CModel		{prefer}
+		"constr"[0-9]*  		-> ID			{prefer}
+		"qc"[0-9]*  			-> QConstructor	{prefer}
+		[ac]?"indices"[0-9]*  	-> Indices		{prefer}
+		[ac]?"index"[0-9]*  	-> Index		{prefer}
+		"vars"[0-9]*			-> Vars			{prefer}
+		"var"[0-9]*				-> Var			{prefer}
+		[ac]?[p]"attern"?[0-9]*	-> Pattern		{prefer}
+		[p]?"branches"[0-9]*	-> PFBranch+	{prefer}
+		[f]?"branches"[0-9]*	-> FBranch+		{prefer}
+		"segments"[0-9]*		-> {PathSegment "::"}+	{prefer}
\ No newline at end of file

Modified: lenses/trunk/Strategic Lenses/trans/semantics/desugar.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/semantics/desugar.str	2010-06-09 09:18:05 UTC (rev 20966)
+++ lenses/trunk/Strategic Lenses/trans/semantics/desugar.str	2010-06-09 10:20:06 UTC (rev 20967)
@@ -4,60 +4,109 @@
 	libstratego-aterm
 	include/StrategicLenses
 	helper/indices
+	helper/tuples
 	
 strategies
 
-	desugar = topdown(try(desugar-local)) 
-	implode = topdown(try(implode-local))
+	desugar-all = try(outermost(desugar))
+	implode = try(implode-local)
 	
 rules
 	implode-local: ATerm(t)	-> Ast(<implode-aterm> t)
-	desugar-local: ATerm(t)	-> Ast(<implode-aterm> t)
+	desugar: ATerm(t)	-> Ast(<implode-aterm> t)
 
-rules // typeless functor
-	desugar-local: Functor(f) -> QFunctor(Every(), f)
+rules // typeless constructor
+	desugar: 
+		|[ constr ]| -> |[ _.constr ]|
 	
-rules // select with functor
-	desugar-local: 	FSelect(qf, i*, d) 	-> Comp(Hoist(qf), Select(i*, Ast(""#(c*)))) 
-		where
-			<desugar> d => Ast(f#(c*)) 
-	
+rules // select with constructor
+	desugar: 
+		|[ select qc1(indices) cmodel1 ]| -> |[ hoist qc1 ; select indices cmodel2 ]|
+			where
+				!cmodel1 				=> Ast(term) ;
+				<explode-term> term		=> (c, args) ;
+				<list-to-tuple> args	=> tuple ;
+				!Ast(tuple)				=> cmodel2 
+				
 rules // select deep pathes
-	desugar-local: 	PSelect([Segment(qf, i)], d)		-> Comp(Hoist(qf), SSelect(i, Ast(""#(c*)))) where
-						<desugar> d => Ast(f#(c*)) 
-				
-	desugar-local: 	PSelect([Segment(qf, i),s|s*], Ast(f#(c*)))	-> Comp(lens1, lens2) with
-						lens1 := Comp(Hoist(qf), SSelect(i, Ast(Ast(""#(c*))))) ;
-						lens2 := PSelect([s|s*], <select-child> (i, c*))
+	desugar: 	
+		|[ select qc1(index1)::qc2(index2) cmodel1 ]| -> |[ select qc1(index1) cmodel1 ; select qc2(index2) cmodel2 ]|
+			where
+				!cmodel1						=> Ast(term) ;
+				<explode-term> term				=> (c, args) ;
+				<select-child> (index1, args)	=> arg ;
+				!Ast(arg)						=> cmodel2 
+		
+	desugar: 	
+		|[ select qc1(index1)::qc2(index2)::segments cmodel1 ]| -> |[ select qc1(index1) cmodel1 ; select qc2(index2)::segments cmodel2 ]|
+			where
+				!cmodel1						=> Ast(term) ;
+				<explode-term> term				=> (c, args) ;
+				<select-child> (index1, args)	=> arg ;
+				!Ast(arg)						=> cmodel2 
 
 rules // list lenses	
-	desugar-local: 	Hd(d*)	-> SSelect(Segment(QFunctor("List", "Cons"), 1), [1|d*])
-	desugar-local: 	Tl(d)	-> SSelect(Segment(QFunctor("List", "Cons"), 2), [d])
+	desugar: 	
+		|[ head cmodel1 ]| -> |[ select List.Cons(1) cmodel2 ]|
+			where
+				![1|cmodel1] => cmodel2
+				
+	desugar: 	
+		|[ tail cmodel1 ]|	-> |[ select List.Cons(2) cmodel2 ]| 
+			where
+				![cmodel1] => cmodel2
+				
+rules // constructor patterns in forks
+	
+	desugar:
+		|[ fork qc(vars) < > apattern branches ]| -> |[ hoist qc ; fork cpattern < > apattern branches ]|
+			where
+				 <pattern> vars => cpattern 
+					
+	desugar:
+		|[ fork cpattern < > qc(vars) branches ]| -> |[ fork cpattern < > apattern branches ; plunge qc ]|
+			where
+				 <pattern> vars => apattern
 
-rules // fork with functor patterns	
-	desugar-local: PFork(FPattern(f, cv*), ap, b*)	-> Comp(Hoist(f), PFork(TPattern(cv*), ap, b*))
-	desugar-local: PFork(cp, FPattern(f, av*), b*)	-> Comp(PFork(TPattern(av*), cp, b*), Plunge(f))
+	desugar:
+		|[ qc(vars) < lens > apattern ]| -> |[ cpattern < plunge qc ; lens > apattern ]|
+			where
+				 <pattern> vars => cpattern
+				 
+	desugar:
+		|[ cpattern < lens > qc(vars) ]| -> |[ cpattern < lens ; hoist qc > apattern ]|
+			where
+				 <pattern> vars => apattern
 
-rules // branch with functor patterns	
-	desugar-local: PBranch(FPattern(f, cv*), l, ap)	-> PBranch(TPattern(cv*), Comp(Plunge(f), l), ap)
-	desugar-local: PBranch(cp, l, FPattern(f, cv*))	-> PBranch(cp, Comp(l, Hoist(f)), TPattern(cv*))
-
 rules // fork/branches with patterns	
-	desugar-local: PFork(cp, ap, bs) -> Fork(bs') 
-						where
-							<vars> cp => cvs ;
-							<vars> ap => avs ;
-							<map(desugar-branch(|cvs, avs))> bs => bs'
 
-	desugar-branch(|cvs, avs): 	PBranch(cp, l, ap) -> Branch(Indices(cis), l, Indices(ais)) 
-									with
-										<vars> cp => bcvs ;
-										<vars> ap => bavs ;
-										<map(get-index(|cvs))> bcvs => cis ;
-										<map(get-index(|avs))> bavs	=> ais
+	desugar: 
+		|[ fork cpattern < > apattern pbranches ]| -> |[ fork fbranches ]|
+			where
+				<vars> cpattern => cvars ;
+				<vars> apattern => avars ;
+				<map(desugar(|cvars, avars))> pbranches => fbranches
+
+
+	desugar(|cvars, avars): 	
+		|[ cpattern < lens > apattern ]| -> |[ cindices < lens > aindices ]|
+			where
+				<vars> cpattern 						=> cbranchvars ;
+				<vars> apattern 						=> abranchvars ;
+				<map(get-index(|cvars))> cbranchvars 	=> cindices ;
+				<map(get-index(|avars))> abranchvars	=> aindices
+
+rules // helper for single variable vs. tuples
+	
+	pattern: 
+		[var] -> |[ var ]| 
 		
-	get-index(|e*):	e 	-> <int-to-string> <get-index> (e, e*)
-			
-	vars: TPattern(vs) -> vs
-	vars: SPattern(v) -> [v]
+	pattern: 
+		vars@[_, _|_]	-> |[ (vars) ]| 
 	
+	vars: 
+		|[ var ]| -> [var]
+		
+	vars: 
+		|[ (vars) ]| -> vars
+	


From g.h.wachsmuth at tudelft.nl  Wed Jun  9 12:21:35 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 09 Jun 2010 10:21:35 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20968 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/trans/helper
Message-ID: <201006091021.o59ALZKk018239@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-09 10:21:35 +0000 (Wed, 09 Jun 2010)
New Revision: 20968

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20968&view=rev

Modified:
   lenses/trunk/Strategic Lenses/trans/helper/indices.str

Log:
concrete syntax in desugaring rules

Changes:

Modified: lenses/trunk/Strategic Lenses/trans/helper/indices.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/helper/indices.str	2010-06-09 10:20:06 UTC (rev 20967)
+++ lenses/trunk/Strategic Lenses/trans/helper/indices.str	2010-06-09 10:21:35 UTC (rev 20968)
@@ -6,6 +6,8 @@
 rules 
 	elem-by-key(|d*):	i 	-> <lookup> (<int-to-string> i, d*) 
 	elem-by-index(|e*): i 	-> <index> (<string-to-int> i, e*)
+	get-index(|e*):		e 	-> <int-to-string> <get-index> (e, e*)
+			
 	
 strategies
 	dict-to-list =


From g.h.wachsmuth at tudelft.nl  Wed Jun  9 12:21:52 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 09 Jun 2010 10:21:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20969 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/trans/semantics
Message-ID: <201006091021.o59ALq6N018242@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-09 10:21:52 +0000 (Wed, 09 Jun 2010)
New Revision: 20969

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20969&view=rev

Modified:
   lenses/trunk/Strategic Lenses/trans/semantics/semantics.str

Log:
concrete syntax in desugaring rules

Changes:

Modified: lenses/trunk/Strategic Lenses/trans/semantics/semantics.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/semantics/semantics.str	2010-06-09 10:21:35 UTC (rev 20968)
+++ lenses/trunk/Strategic Lenses/trans/semantics/semantics.str	2010-06-09 10:21:52 UTC (rev 20969)
@@ -75,7 +75,7 @@
 					+	<create(|l2)> a => c
 
 rules // Hoist
-	get:	(Hoist(QFunctor(_, f)), c) -> a
+	get:	(Hoist(QConstructor(_, f)), c) -> a
 				where
 					<explode-term> c 	=> (f, as) ;
 					<list-to-tuple> as 	=> a		
@@ -84,13 +84,13 @@
 				where
 					<create> (Hoist(qf), a) => c				
 
-	create:	(Hoist(QFunctor(_, f)), a) -> c
+	create:	(Hoist(QConstructor(_, f)), a) -> c
 				where
 					<tuple-to-list> a 	=> as ;
 					<mkterm> (f, as) 	=> c
 			 
 rules // Plunge
-	get:	(Plunge(QFunctor(_, f)), c) -> a
+	get:	(Plunge(QConstructor(_, f)), c) -> a
 				where
 					<tuple-to-list> c 	=> as ;
 					<mkterm> (f, as) 	=> a
@@ -99,44 +99,26 @@
 				where
 					<create> (Plunge(qf), a) => c
 					
-	create:	(Plunge(QFunctor(_, f)), a) -> c
+	create:	(Plunge(QConstructor(_, f)), a) -> c
 				where
 					<explode-term> a 	=> (f, as) ;
 					<list-to-tuple> as 	=> c
 
-rules // Single selection 
-	get:	(SSelect(i, _), c) -> a
+rules // Selection
+	get:	(Select(Indices(is), _), c) -> a
 				where
-					<tuple-to-list> c 		=> cs ;
-					<select-child> (i, cs)	=> a
-					
-	put:	(SSelect(i, _), a, c)	-> c'
-				where
-					<tuple-to-list> c 			=> cs ;
-					<update-child> (i, a, cs) 	=> cs' ;
-					<list-to-tuple> cs' 		=> c'
-					
-	create:	(SSelect(i, Ast(d)), a) -> c
-				where
-					<tuple-to-list> d 			=> ds ;
-					<update-child> (i, a, ds) 	=> cs ;
-					<list-to-tuple> cs	 		=> c
-				
-rules // Multiple selection
-	get:	(Select(is, _), c) -> a
-				where
 					<tuple-to-list> c			=> cs ;
 					<select-children> (is, cs)	=> as ;
 					<list-to-tuple> as			=> a
 	
-	put:	(Select(is, _), a, c) -> c'
+	put:	(Select(Indices(is), _), a, c) -> c'
 				where
 					<tuple-to-list> a 				=> as ;
 					<tuple-to-list> c 				=> cs ;
 					<update-children> (is, as, cs) 	=> cs' ;
 					<list-to-tuple> cs'			 	=> c' 
 					
-	create:	(Select(is, Ast(d)), a) -> c		
+	create:	(Select(Indices(is), Ast(d)), a) -> c		
 				where
 					<tuple-to-list> a 				=> as ;
 					<tuple-to-list> d 				=> ds ;


From g.h.wachsmuth at tudelft.nl  Wed Jun  9 12:22:07 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 09 Jun 2010 10:22:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20970 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/trans
Message-ID: <201006091022.o59AM7eo018244@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-09 10:22:07 +0000 (Wed, 09 Jun 2010)
New Revision: 20970

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20970&view=rev

Modified:
   lenses/trunk/Strategic Lenses/trans/strategiclenses.str

Log:
concrete syntax in desugaring rules

Changes:

Modified: lenses/trunk/Strategic Lenses/trans/strategiclenses.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/strategiclenses.str	2010-06-09 10:21:52 UTC (rev 20969)
+++ lenses/trunk/Strategic Lenses/trans/strategiclenses.str	2010-06-09 10:22:07 UTC (rev 20970)
@@ -22,7 +22,7 @@
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       filename := <guarantee-extension(|"aterm")> path;
-      result   := selected //<desugar> selected 
+      result   := <desugar-all> selected 
 
   // Returns "hover help" information for a particular node in the editor.
   // For references, this rule is invoked using the resolved term.
@@ -30,7 +30,7 @@
     (target, position, ast, path, project-path) -> $[[<write-to-string> desugared]: [<pp-safe> tc] -> [<pp-safe> ta]] //
     	where
     		<analyse> ast ;
-    		<desugar> target => desugared ;
+    		<desugar-all> target => desugared ;
     		<type-of> desugared => (tc, ta)
   
  /* // Completes an identifier when the user presses control-space


From g.h.wachsmuth at tudelft.nl  Wed Jun  9 13:09:08 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 09 Jun 2010 11:09:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20971 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/trans/semantics
Message-ID: <201006091109.o59B98mu019016@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-09 11:09:07 +0000 (Wed, 09 Jun 2010)
New Revision: 20971

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20971&view=rev

Modified:
   lenses/trunk/Strategic Lenses/trans/semantics/semantics.str

Log:
concrete syntax in semantic rules

Changes:

Modified: lenses/trunk/Strategic Lenses/trans/semantics/semantics.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/semantics/semantics.str	2010-06-09 10:22:07 UTC (rev 20970)
+++ lenses/trunk/Strategic Lenses/trans/semantics/semantics.str	2010-06-09 11:09:07 UTC (rev 20971)
@@ -12,180 +12,142 @@
 	Ast: Term -> CModel
 	Ast: Term -> AModel
 	
-rules // Lens as parameter
-	get(|l): 	c -> <get> (l, c)  
-			
-	put(|l): 	(a, c) -> <put> (l, a, c) 
-	
-	create(|l): a -> <create> (l, a)
-	
 rules // Identity
-	get: 	(Id(), c) -> c
+	get: 	(|[ id ]|, c) -> c
 
-	put: 	(Id(), a, c) -> a
+	put: 	(|[ id ]|, a, c) -> a
 	
-	create:	(Id(), a) -> a
+	create:	(|[ id ]|, a) -> a
 	
 rules // Composition
-	get:	(Comp(l1, l2), c) -> a
+	get:	(|[ lens1 ; lens2 ]|, c) -> a
 				where
-					<get> (l1, c) 	=> t ;
-					<get> (l2, t) 	=> a 
+					<get> (lens1, c) 	=> t ;
+					<get> (lens2, t) 	=> a 
 						
-	put:	(Comp(l1, l2), a, c) -> c'
+	put:	(|[ lens1 ; lens2 ]|, a, c) -> c'
 				where
-					<get> (l1, c) 		=> tc ;
-					<put> (l2, a, tc)	=> ta ;
-					<put> (l1, ta, c)	=> c' 
+					<get> (lens1, c) 		=> tc ;
+					<put> (lens2, a, tc)	=> ta ;
+					<put> (lens1, ta, c)	=> c' 
 					
-	create:	(Comp(l1, l2), a) -> c
+	create:	(|[ lens1 ; lens2 ]|, a) -> c
 				where
-					<create> (l2, a) => t ;
-					<create> (l1, t) => c
+					<create> (lens2, a) => t ;
+					<create> (lens1, t) => c
 
-rules // Matching lens
-	get:	(Match(l1, l2), c) -> a 
-				where	
-					<get> (l1, c) => a <+ <get> (l2, c) => a
-				
-				/*<cmatch> (l1, c) 
-					<	<get> (l1, c) => a 
-					+	<get> (l2, c) => a*/
-				
-	put:	(Match(l1, l2), a, c) -> c' 
-				where
-					<put> (l1, a, c) => c' <+
-					<put> (l2, a, c) => c' 
-					
-					/*
-					<cmatch> (l1, c) 
-						< (	<amatch> (l1, a)
-								<	<put> (l1, a, c) => c'
-								+	<create> (l2, a) => c'
-						)
-						+ ( <amatch> (l2, a)
-								<	<put(|l2)> (a, c) => c'
-								+	<create> (l1, a) => c'
-						)*/
-					
-	create:	(Match(l1, l2), a) -> c 
-				where
-				<amatch> (l1, a)
-					< 	<create(|l1)> a => c
-					+	<create(|l2)> a => c
-
 rules // Hoist
-	get:	(Hoist(QConstructor(_, f)), c) -> a
+	get:	(|[ hoist type.constr ]|, c) -> a
 				where
-					<explode-term> c 	=> (f, as) ;
-					<list-to-tuple> as 	=> a		
+					<explode-term> c 		=> (constr, args) ;
+					<list-to-tuple> args 	=> a		
 
-	put:	(Hoist(qf), a, _) -> c
+	put:	(|[ hoist type.constr ]|, a, _) -> c
 				where
-					<create> (Hoist(qf), a) => c				
+					<create> (|[ hoist type.constr ]|, a) => c				
 
-	create:	(Hoist(QConstructor(_, f)), a) -> c
+	create:	(|[ hoist type.constr ]|, a) -> c
 				where
-					<tuple-to-list> a 	=> as ;
-					<mkterm> (f, as) 	=> c
+					<tuple-to-list> a 		=> as ;
+					<mkterm> (constr, as) 	=> c
 			 
 rules // Plunge
-	get:	(Plunge(QConstructor(_, f)), c) -> a
+	get:	(|[ plunge type.constr ]|, c) -> a
 				where
 					<tuple-to-list> c 	=> as ;
-					<mkterm> (f, as) 	=> a
+					<mkterm> (constr, as) 	=> a
 
-	put:	(Plunge(qf), a, _)	-> c
+	put:	(|[ plunge type.constr ]|, a, _)	-> c
 				where
-					<create> (Plunge(qf), a) => c
+					<create> (|[ plunge type.constr ]|, a) => c
 					
-	create:	(Plunge(QConstructor(_, f)), a) -> c
+	create:	(|[ plunge type.constr ]|, a) -> c
 				where
-					<explode-term> a 	=> (f, as) ;
+					<explode-term> a 	=> (constr, as) ;
 					<list-to-tuple> as 	=> c
 
 rules // Selection
-	get:	(Select(Indices(is), _), c) -> a
+	get:	(|[ select indices cmodel ]|, c) -> a
 				where
-					<tuple-to-list> c			=> cs ;
-					<select-children> (is, cs)	=> as ;
-					<list-to-tuple> as			=> a
+					<tuple-to-list> c				=> cs ;
+					<select-children> (indices, cs)	=> as ;
+					<list-to-tuple> as				=> a
 	
-	put:	(Select(Indices(is), _), a, c) -> c'
+	put:	(|[ select indices cmodel ]|, a, c) -> c'
 				where
-					<tuple-to-list> a 				=> as ;
-					<tuple-to-list> c 				=> cs ;
-					<update-children> (is, as, cs) 	=> cs' ;
-					<list-to-tuple> cs'			 	=> c' 
+					<tuple-to-list> a 					=> as ;
+					<tuple-to-list> c 					=> cs ;
+					<update-children> (indices, as, cs) => cs' ;
+					<list-to-tuple> cs'			 		=> c' 
 					
-	create:	(Select(Indices(is), Ast(d)), a) -> c		
+	create:	(|[ select indices cmodel ]|, a) -> c		
 				where
-					<tuple-to-list> a 				=> as ;
-					<tuple-to-list> d 				=> ds ;
-					<update-children> (is, as, ds) 	=> cs ;
-					<list-to-tuple> cs	 			=> c
+					<tuple-to-list> a 					=> as ;
+					<tuple-to-list> cmodel 				=> ds ;
+					<update-children> (indices, as, ds) => cs ;
+					<list-to-tuple> cs	 				=> c
 					 
-rules // Insertion
-	get:	(Insert(i, Ast(""#(cs))), c)	-> ""#(<update-child> (i, c, cs))
-	put:	(Insert(i, d), a, c)			-> <create(|Insert(i, d))> a
-	create:	(Insert(i, d), ""#(cs))			-> <select-child> (i, cs)
+//rules // Insertion
+//	get:	(Insert(i, Ast(""#(cs))), c)	-> ""#(<update-child> (i, c, cs))
+//	put:	(Insert(i, d), a, c)			-> <create(|Insert(i, d))> a
+//	create:	(Insert(i, d), ""#(cs))			-> <select-child> (i, cs)
 	
 rules // Fork
-	get:	(Fork(bs), c) -> a
+	get:	(|[ fork branches ]|, c) -> a
 				where
-					<tuple-to-list> c 			=> cs ;
-					<mapconcat(bget(|cs))> bs 	=> dict ;
-					<dict-to-tuple> dict 		=> a
+					<tuple-to-list> c 				=> cs ;
+					<mapconcat(bget(|cs))> branches => dict ;
+					<dict-to-tuple> dict 			=> a
 					
-	put:	(Fork(bs), a, c) -> c'
+	put:	(|[ fork branches ]|, a, c) -> c'
 				where
-					<tuple-to-list> c				=> cs ;
-					<tuple-to-list> a				=> as ;
-					<mapconcat(bput(|as, cs))> bs	=> dict ;
-					<dict-to-tuple> dict			=> c'
+					<tuple-to-list> c					=> cs ;
+					<tuple-to-list> a					=> as ;
+					<mapconcat(bput(|as, cs))> branches	=> dict ;
+					<dict-to-tuple> dict				=> c'
 					
-	create:	(Fork(bs), a) -> c
+	create:	(|[ fork branches ]|, a) -> c
 				where
-					<tuple-to-list> a 				=> as ;
-					<mapconcat(bcreate(|as))> bs	=> dict ;
-					<dict-to-tuple> dict			=> c
+					<tuple-to-list> a 					=> as ;
+					<mapconcat(bcreate(|as))> branches	=> dict ;
+					<dict-to-tuple> dict				=> c
 
 rules // Branches							
-	bget(|cs):		Branch(Indices(cis), l, Indices(ais)) -> dict 
+	bget(|cs):		|[ cindices < lens > aindices ]| -> dict 
 						where
-							<indices-to-tuple> (cis, cs) 	=> c ;
-							<get> (l, c)					=> a ;
-							<tuple-to-list> a				=> as ;
-							<zip> (ais, as)					=> dict
+							<indices-to-tuple> (cindices, cs) 	=> c ;
+							<get> (lens, c)						=> a ;
+							<tuple-to-list> a					=> as ;
+							<zip> (aindices, as)				=> dict
 				
-	bput(|as, cs):	Branch(Indices(cis), l, Indices(ais)) -> dict
+	bput(|as, cs):	|[ cindices < lens > aindices ]| -> dict
 						where
-							<indices-to-tuple> (ais, as) 	=> a ;
-							<indices-to-tuple> (cis, cs)	=> c ;
-							<put> (l, a, c) 				=> c' ;
-							<tuple-to-list> c'				=> cs' ;
-							<zip> (cis, cs')				=> dict
+							<indices-to-tuple> (aindices, as) 	=> a ;
+							<indices-to-tuple> (cindices, cs)	=> c ;
+							<put> (lens, a, c) 					=> c' ;
+							<tuple-to-list> c'					=> cs' ;
+							<zip> (cindices, cs')				=> dict
 						
-	bcreate(|as):	Branch(Indices(cis), l, Indices(ais)) -> dict
+	bcreate(|as):	|[ cindices < lens > aindices ]| -> dict
 						where
-							<indices-to-tuple> (ais, as)	=> a ;
-							<create> (l, a) 				=> c ;
-							<tuple-to-list> c				=> cs ;
-							<zip> (cis, cs)					=> dict
+							<indices-to-tuple> (aindices, as)	=> a ;
+							<create> (lens, a) 					=> c ;
+							<tuple-to-list> c					=> cs ;
+							<zip> (cindices, cs)				=> dict
 
 rules // map
-	get:	(Map(lens), cs) -> as 
+	get:	(|[ map lens ]|, cs) -> as 
 				where
 					<map(get(|lens))> cs => as
 		
-	put:	(Map(lens), as, cs)	-> cs'
+	put:	(|[ map lens ]|, as, cs)	-> cs'
 				where
 					<match-length> (as, cs) 		=> (as1, cs1, as2) ;
 					<zip(put(|lens))> (as1, cs1) 	=> cs2 ;
 					<map(create(|lens))> as2		=> cs3 ;
 					<concat> [cs2, cs3]				=> cs' 
 					 
-	create:	(Map(lens), as)	-> cs 
+	create:	(|[ map lens ]|, as)	-> cs 
 				where
 					<map(create(|lens))> as => cs
 
@@ -198,87 +160,6 @@
 				<take(|na) <+ id> cs	=> cs';
 				<drop(|nc) <+ ![]> as	=> rs 
 				
-rules // new topdown
-	get:	(TopDown(l), c)	-> a'
-				where
-					( 
-						<get(|l)> c => a  <+ <id> c => a
-					) ; 
-					<explode-term> a 			=> (f, as) ;
-					<map(get(|TopDown(l)))> as 	=> as' ;
-					<mkterm> (f, as')			=> a' 
-		
-	put:	(TopDown(l), a, c) -> c' 
-				where	
-					( 
-						<get(|l)> c => a' <+ <id> a => a'
-					);
-					<explode-term>	a						=> (f, as) ;
-					<explode-term>	a'						=> (f, as') ;
-					<map(put(|TopDown(l)))> <zip> (as, as') => as'' ;
-					<mkterm> (f, as'') 						=> a'' ;
-					(
-						<put(|l)> (a'', c) => c' <+ <id> a'' => c'
-					) ;
-					<debug> c'
-					
-	create:	(TopDown(l), a) -> c 
-				where
-					(
-						<create(|l)> a 		=> c ;
-						<explode-term> c	=> (f, as)
-						//<map(create(|TopDown(l)))> as => cs ;
-						 
-					) <+ 
-					<id> a => c
-	
-	oldput:	(TopDown(lens), a, old_c) -> new_c where
-				(
-					<put(|lens)> (a, old_c) => func#(temp_arg*) ;
-					!old_c => _#(old_arg*) ;
-					<map(put(|TopDown(lens)))> <zip> (temp_arg*, old_arg*) => new_arg* ;
-					new_c := func#(new_arg*)
-				) <+
-				new_c := a
-				
-					
-/*rules // TopDown
-	get: 	(TopDown(b*), c)	-> c where
-				<filter(get(|c))> b* => []
-	
-	get: 	(TopDown(b*), c)	-> a where
-				<filter(get(|c))> b* => [f#(as)|_] ;
-				<map(get(|b*))> as => aas ;
-				!f#(aas) => a
-	
-	put:	(TopDown(b*), a, c)	-> a where
-				<filter(put(|a, c))> b* => []
-	
-	put:	(TopDown(b*), a, c)	-> m where
-				<filter(put(|a, c))> b* => [f#(as)|_] ;
-				!c ; ?_#(cs) ;
-				<map(put(|b*))> <zip> (as, cs) => m* ;
-				!f#(m*) => m
-				
-	get(|c): 	TDBranch(FPattern(f1, v1*), FPattern(f2, v2*)) -> f2#(a2*) where
-					!c ; 
-					?f1#(a1*) ; 
-					<zip> (v1*, a1*) => dict ;
-					<map(elem-by-key(|dict))> v2* => a2*
-	
-	put(|a, c): TDBranch(FPattern(f1, v1*), FPattern(f2, v2*)) -> f1#(c2*) where
-					!a ; ?f2#(a2*) ; <zip> (v2*, a2*) => dicta ;
-					!c ; ?f1#(c1*) ; <zip> (v1*, c1*) => dictc ;
-					<map(elem-by-key(|dicta) <+ elem-by-key(|dictc))> v1* => c2*
-							
-	get(|b*): c -> <get> (TopDown(b*), c) 		
-	
-	put(|b*): (a, c) -> <put> (TopDown(b*), a, c)
-			
-	//get:	(TopDown(b*), c)	-> a where
-	//			c => a
-*/
-
 rules // User-defined
 	get: 	(LensRef(n), c)	-> a 
 				where
@@ -294,3 +175,11 @@
 				where
 					<GetLens> n 	=> l ;
 					<create> (l, a) => c
+
+rules // Lens as parameter
+	get(|l): 	c -> <get> (l, c)  
+			
+	put(|l): 	(a, c) -> <put> (l, a, c) 
+	
+	create(|l): a -> <create> (l, a)
+	


From g.h.wachsmuth at tudelft.nl  Wed Jun  9 13:09:21 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 09 Jun 2010 11:09:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20972 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/trans/semantics
Message-ID: <201006091109.o59B9LU6019019@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-09 11:09:21 +0000 (Wed, 09 Jun 2010)
New Revision: 20972

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20972&view=rev

Added:
   lenses/trunk/Strategic Lenses/trans/semantics/semantics.meta

Log:
concrete syntax in semantic rules

Changes:

Added: lenses/trunk/Strategic Lenses/trans/semantics/semantics.meta
===================================================================
--- lenses/trunk/Strategic Lenses/trans/semantics/semantics.meta	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/semantics/semantics.meta	2010-06-09 11:09:21 UTC (rev 20972)
@@ -0,0 +1 @@
+Meta([Syntax("Stratego-StrategicLenses")])
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Wed Jun  9 13:11:12 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 09 Jun 2010 11:11:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20973 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/lib
Message-ID: <201006091111.o59BBCnI019040@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-09 11:11:12 +0000 (Wed, 09 Jun 2010)
New Revision: 20973

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20973&view=rev

Modified:
   lenses/trunk/Strategic Lenses/lib/

Log:
svn-ignore generated files for concrete syntax in Stratego files

Changes:


Property changes on: lenses/trunk/Strategic Lenses/lib
___________________________________________________________________
Added: svn:ignore
   + Stratego-StrategicLenses-Permissive.def
Stratego-StrategicLenses.def
Stratego-StrategicLenses.tbl



From g.h.wachsmuth at tudelft.nl  Wed Jun  9 13:12:58 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 09 Jun 2010 11:12:58 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20974 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/syntax
Message-ID: <201006091112.o59BCwY9019054@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-09 11:12:58 +0000 (Wed, 09 Jun 2010)
New Revision: 20974

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20974&view=rev

Modified:
   lenses/trunk/Strategic Lenses/syntax/Lenses.sdf

Log:
functor -> constructor
some foldings

Changes:

Modified: lenses/trunk/Strategic Lenses/syntax/Lenses.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Lenses.sdf	2010-06-09 11:11:12 UTC (rev 20973)
+++ lenses/trunk/Strategic Lenses/syntax/Lenses.sdf	2010-06-09 11:12:58 UTC (rev 20974)
@@ -9,7 +9,7 @@
 		
 	context-free syntax
   
-  		TypeRef "<" ID ">" TypeRef ":=" Lens		-> LensDef	{cons("LensDef")}
+  		Type "<" ID ">" Type ":=" Lens		-> LensDef	{cons("LensDef")}
 
 	context-free syntax
 		
@@ -21,19 +21,18 @@
 		
 	context-free syntax
   
-		"hoist" QFunctor	-> Lens		{cons("Hoist")}
-		"plunge" QFunctor	-> Lens		{cons("Plunge")}
+		"hoist" QConstructor	-> Lens		{cons("Hoist")}
+		"plunge" QConstructor	-> Lens		{cons("Plunge")}
 	
 	context-free syntax
   
-  		"select" {Index ","}+ CModel					-> Lens 	{cons("Select")}
-		"select" QFunctor "(" {Index ","}+ ")" CModel	-> Lens 	{cons("FSelect")}
-		"select" "child" Index CModel					-> Lens 	{cons("SSelect")}
-		"select" "child" Path CModel					-> Lens 	{cons("PSelect")}
+  		"select" Indices CModel							-> Lens 	{cons("Select")}
+		"select" QConstructor "(" Indices ")" CModel	-> Lens 	{prefer, cons("FSelect")}
+		"select" Path CModel							-> Lens 	{cons("PSelect")}
 		"insert" Index AModel							-> Lens		{cons("Insert")}
 		"insert" Path AModel							-> Lens		{cons("PInsert")}
 		
-		"head" CModel*			-> Lens		{cons("Hd")}
+		"head" CModel			-> Lens		{cons("Hd")}
 		"tail" CModel			-> Lens		{cons("Tl")}
 	
 	context-free syntax
@@ -55,7 +54,7 @@
 		
 	context-free syntax
 	
-		"filter" {QFunctor ","}+				-> Lens		{cons("Filter")}
+		"filter" {QConstructor ","}+			-> Lens		{cons("Filter")}
 		"map" Lens								-> Lens		{cons("Map")}
 		 
 	context-free syntax
@@ -64,13 +63,15 @@
 		{Index ","}+					-> Indices 		{cons("Indices")}
 		
 		ID								-> Var
+		{Var ","}+						-> Vars 		{cons("Vars")}
+		
 		Var 							-> Pattern		{cons("SPattern")}
-		"(" {Var ","}+ ")"				-> Pattern		{cons("TPattern")}
-		QFunctor "(" {Var ","}+ ")"		-> Pattern		{cons("FPattern")}
+		"(" Vars ")"					-> Pattern		{cons("TPattern")}
+		QConstructor "(" Vars ")"		-> Pattern		{cons("FPattern")}
 		
-		QFunctor "(" Index ")"			-> PathSegment 	{cons("Segment")}
+		QConstructor "(" Index ")"		-> PathSegment 	{cons("Segment")}
 		
-		{ PathSegment "::"}+			-> Path
+		{PathSegment "::"}+				-> Path
 		
-		{QFunctor ","}+					-> Condition	{cons("FunctorAlt")}
+		{QConstructor ","}+				-> Condition	{cons("FunctorAlt")}
 	
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Wed Jun  9 13:13:15 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 09 Jun 2010 11:13:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20975 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/syntax
Message-ID: <201006091113.o59BDFgM019059@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-09 11:13:15 +0000 (Wed, 09 Jun 2010)
New Revision: 20975

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20975&view=rev

Modified:
   lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf

Log:
concrete syntax in semantic rules

Changes:

Modified: lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf	2010-06-09 11:12:58 UTC (rev 20974)
+++ lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf	2010-06-09 11:13:15 UTC (rev 20975)
@@ -22,16 +22,17 @@
 
 	variables 
 
-		"lens"[0-9]*			-> Lens			{prefer}
-		"cmodels"[0-9]*  		-> CModel*		{prefer}
-		"cmodel"[0-9]*  		-> CModel		{prefer}
-		"constr"[0-9]*  		-> ID			{prefer}
-		"qc"[0-9]*  			-> QConstructor	{prefer}
-		[ac]?"indices"[0-9]*  	-> Indices		{prefer}
-		[ac]?"index"[0-9]*  	-> Index		{prefer}
-		"vars"[0-9]*			-> Vars			{prefer}
-		"var"[0-9]*				-> Var			{prefer}
-		[ac]?[p]"attern"?[0-9]*	-> Pattern		{prefer}
-		[p]?"branches"[0-9]*	-> PFBranch+	{prefer}
-		[f]?"branches"[0-9]*	-> FBranch+		{prefer}
-		"segments"[0-9]*		-> {PathSegment "::"}+	{prefer}
\ No newline at end of file
+		"lens"[0-9]*				-> Lens			{prefer}
+		"cmodels"[0-9]*  			-> CModel*		{prefer}
+		"cmodel"[0-9]*  			-> CModel		{prefer}
+		"constr"[0-9]*  			-> ID			{prefer}
+		"type"[0-9]*  				-> TypeRef		{prefer}
+		"qc"[0-9]*  				-> QConstructor	{prefer}
+		[ac]?("indices"|"is")[0-9]* -> Indices		{prefer}
+		[ac]?"index"[0-9]*  		-> Index		{prefer}
+		"vars"[0-9]*				-> Vars			{prefer}
+		"var"[0-9]*					-> Var			{prefer}
+		[ac]?[p]"attern"?[0-9]*		-> Pattern		{prefer}
+		[p]?"branches"[0-9]*		-> PFBranch+	{prefer}
+		[f]?"branches"[0-9]*		-> FBranch+		{prefer}
+		"segments"[0-9]*			-> {PathSegment "::"}+	{prefer}
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Wed Jun  9 13:47:56 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 09 Jun 2010 11:47:56 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20976 - GuidoWachsmuth
	- in lenses/trunk/Strategic Lenses: syntax trans/analysis
Message-ID: <201006091147.o59BluMR020521@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-09 11:47:56 +0000 (Wed, 09 Jun 2010)
New Revision: 20976

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20976&view=rev

Added:
   lenses/trunk/Strategic Lenses/trans/analysis/tests.meta
Modified:
   lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf
   lenses/trunk/Strategic Lenses/trans/analysis/tests.str

Log:
concrete syntax in test analysis

Changes:

Modified: lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf	2010-06-09 11:13:15 UTC (rev 20975)
+++ lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf	2010-06-09 11:47:56 UTC (rev 20976)
@@ -19,12 +19,16 @@
 		"|[" PFBranch "]|" 		-> Term [[StrategoHost]] {cons("ToMetaExpr")}
 		"|[" FBranch "]|" 		-> Term [[StrategoHost]] {cons("ToMetaExpr")}
 		"|[" Pattern "]|" 		-> Term [[StrategoHost]] {cons("ToMetaExpr")}
+		"|[" TestCase "]|" 		-> Term [[StrategoHost]] {cons("ToMetaExpr")}
+		"|[" Test "]|" 			-> Term [[StrategoHost]] {cons("ToMetaExpr")}
 
 	variables 
 
 		"lens"[0-9]*				-> Lens			{prefer}
 		"cmodels"[0-9]*  			-> CModel*		{prefer}
 		"cmodel"[0-9]*  			-> CModel		{prefer}
+		"amodels"[0-9]*  			-> AModel*		{prefer}
+		"amodel"[0-9]*  			-> AModel		{prefer}
 		"constr"[0-9]*  			-> ID			{prefer}
 		"type"[0-9]*  				-> TypeRef		{prefer}
 		"qc"[0-9]*  				-> QConstructor	{prefer}
@@ -35,4 +39,6 @@
 		[ac]?[p]"attern"?[0-9]*		-> Pattern		{prefer}
 		[p]?"branches"[0-9]*		-> PFBranch+	{prefer}
 		[f]?"branches"[0-9]*		-> FBranch+		{prefer}
-		"segments"[0-9]*			-> {PathSegment "::"}+	{prefer}
\ No newline at end of file
+		"segments"[0-9]*			-> {PathSegment "::"}+	{prefer}
+		"tests"[0-9]*				-> Test+		{prefer}
+		"test"[0-9]*				-> Test			{prefer}
\ No newline at end of file

Added: lenses/trunk/Strategic Lenses/trans/analysis/tests.meta
===================================================================
--- lenses/trunk/Strategic Lenses/trans/analysis/tests.meta	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/analysis/tests.meta	2010-06-09 11:47:56 UTC (rev 20976)
@@ -0,0 +1 @@
+Meta([Syntax("Stratego-StrategicLenses")])
\ No newline at end of file

Modified: lenses/trunk/Strategic Lenses/trans/analysis/tests.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/analysis/tests.str	2010-06-09 11:13:15 UTC (rev 20975)
+++ lenses/trunk/Strategic Lenses/trans/analysis/tests.str	2010-06-09 11:47:56 UTC (rev 20976)
@@ -7,10 +7,10 @@
 	semantics/desugar
 	
 rules
-	test-error: Case(l, tests) -> errors 
+	test-error: |[ lens lens with tests ]| -> errors 
 		where 
-			<desugar> l => dl ;
-			<collect-all(test-error(|dl), conc)> tests => errors 
+			<desugar-all> lens => dlens ;
+			<mapconcat(test-error(|dlens))> tests => errors 
 			
 	test-error(|l): Success(t) -> error 
 		where
@@ -20,75 +20,72 @@
 		where
 			not(<run-test> (l, t))
 					
-	run-test: (lens, case at Get(concrete, abstract)) -> (case, $[Test for get fails.])
+	run-test: (lens, |[cmodel > get > amodel ]|) -> (amodel, $[Test for get fails.])
 		where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			not (<get> (lens, dconcrete))
+			<implode> cmodel 	=> Ast(ast) ;
+			not (<get> (lens, ast))
 					
-	run-test: (lens, case at Get(concrete, abstract)) -> (case, $[Test for get yields [failure].]) 
+	run-test: (lens, |[cmodel > get > amodel ]|) -> (amodel, $[Test for get yields [<pp-safe> failure].]) 
 		where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			<implode> abstract 	=> Ast(dabstract) ;
-			<get(|lens)> dconcrete => fabstract ;
-			not (<eq> (dabstract, fabstract)) ;
-			<pp-safe> fabstract => failure 
+			<implode> cmodel 	=> Ast(cast) ;
+			<implode> amodel 	=> Ast(aast) ;
+			<get(|lens)> cast => failure ;
+			not (<equal> (aast, failure)) 
 			
-	run-test: (lens, case at GetPut(concrete, abstract)) -> (case, error) 
+	run-test: (lens, |[cmodel < get put > amodel ]|) -> (pos, error) 
 		where
-			<run-test> (lens, Get(concrete, abstract)) => (_, error)
+			<run-test> (lens, |[cmodel > get > amodel ]|) => (pos, error)
 	
-	run-test: (lens, case at GetPut(concrete, abstract)) -> (case, $[Test for put fails.])
+	run-test: (lens, |[cmodel < get put > amodel ]|) -> (cmodel, $[Test for put fails.])
 	 	where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			<implode> abstract 	=> Ast(dabstract) ;
-			not ( <put(|lens)> (dabstract, dconcrete))
+			<implode> cmodel 	=> Ast(cast) ;
+			<implode> amodel 	=> Ast(aast) ;
+			not ( <put(|lens)> (aast, cast))
 					
-	run-test: (lens, case at GetPut(concrete, abstract)) -> (case, $[Test for put yields [failure].]) 
+	run-test: (lens, |[cmodel < get put > amodel ]|) -> (cmodel, $[Test for put yields [<pp-safe> failure].]) 
 		where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			<implode> abstract 	=> Ast(dabstract) ;
-			 <put(|lens)> (dabstract, dconcrete) => fconcrete ;
-			not (<equal> (fconcrete, dconcrete)) ;
-			 <pp-safe> fconcrete => failure 
+			<implode> cmodel 	=> Ast(cast) ;
+			<implode> amodel 	=> Ast(aast) ;
+			 <put(|lens)> (aast, cast) => failure ;
+			not (<equal> (cast, failure))
 						
-	run-test: (lens, case at CreateGet(abstract, concrete)) -> (case, error) 
+	run-test:	(lens, |[amodel > create > cmodel ]|) -> (cmodel, $[Test for create fails.]) 
+		where
+			<implode> amodel 	=> Ast(aast) ;
+			not ( <create(|lens)> aast )
+					
+	run-test:	(lens, |[amodel > create > cmodel ]|) -> (cmodel, $[Test for create yields [<pp-safe> failure].]) 
+		where
+			<implode> cmodel 	=> Ast(cast) ;
+			<implode> amodel 	=> Ast(aast) ;
+			<create(|lens)> aast => failure ;
+			not (<equal> (cast, failure))
+	
+	run-test: (lens, |[amodel < create get > cmodel ]|) -> (pos, error) 
 		where 
-			<run-test> (lens, Get(concrete, abstract)) => (_, error)	
+			<run-test> (lens, |[cmodel > get > amodel ]|) => (pos, error)	
 							
-	run-test: (lens, case at CreateGet(abstract, concrete)) -> (case, error)
+	run-test: (lens, |[amodel < create get > cmodel ]|) -> (pos, error)
 		 where 
-			<run-test> (lens, Create(abstract, concrete)) => (_, error)	
+			<run-test> (lens, |[amodel > create > cmodel ]|) => (pos, error)	
 
-	run-test:	(lens, case at Create(abstract, concrete)) -> (case, $[Test for create fails.]) 
-		where
-			<implode> abstract 	=> Ast(dabstract) ;
-			not ( <create(|lens)> dabstract )
-					
-	run-test:	(lens, case at Create(abstract, concrete)) -> (case, $[Test for create yields [failure].]) 
-		where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			<implode> abstract 	=> Ast(dabstract) ;
-			<create(|lens)> dabstract => fconcrete ;
-			not (<equal> (fconcrete, dconcrete)) ;
-			<pp-safe> fconcrete => failure 
 	
-	run-test:	(lens, case at GetUpdatePut(concrete, abstract, uabstract, uconcrete)) -> (case, error)
+	run-test:	(lens,|[cmodel1 > get > amodel1 > update > amodel2 > put > cmodel2 ]|) -> (pos, error)
 		where
-			<run-test> (lens, Get(concrete, abstract)) => (_, error)
+			<run-test> (lens, |[cmodel1 > get > amodel1]|) => (pos, error)
 	
-	run-test: (lens, case at GetUpdatePut(concrete, abstract, uabstract, uconcrete)) -> (case, $[Test for put fails.])
+	run-test: (lens, |[cmodel1 > get > amodel1 > update > amodel2 > put > cmodel2 ]|) -> (cmodel2, $[Test for put fails.])
 	 	where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			<implode> uabstract => Ast(dabstract) ;
-			not ( <put(|lens)> (dabstract, dconcrete))
+			<implode> cmodel1 	=> Ast(cast) ;
+			<implode> amodel2 	=> Ast(aast) ;
+			not ( <put(|lens)> (aast, cast))
 					
-	run-test: (lens, case at GetUpdatePut(concrete, abstract, uabstract, uconcrete)) -> (case, $[Test for put yields [failure].]) 
+	run-test: (lens, |[cmodel1 > get > amodel1 > update > amodel2 > put > cmodel2 ]|) -> (cmodel2, $[Test for put yields [<pp-safe> failure].]) 
 		where
-			<implode> concrete 	=> Ast(dconcrete) ;
-			<implode> uabstract => Ast(dabstract) ;
-			<implode> uconcrete => Ast(duconcrete) ;
-			<put(|lens)> (dabstract, dconcrete) => fconcrete ;
-			not (<equal> (fconcrete, duconcrete)) ;
-			 <pp-safe> fconcrete => failure 
+			<implode> cmodel1 	=> Ast(cast1) ;
+			<implode> amodel2 	=> Ast(aast) ;
+			<implode> cmodel2 	=> Ast(cast2) ;
+			<put(|lens)> (aast, cast1) => failure ;
+			not (<equal> (cast2, failure)) 
 						
 			
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Wed Jun  9 13:55:56 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 09 Jun 2010 11:55:56 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20977 - GuidoWachsmuth
	- in lenses/trunk/Strategic Lenses: syntax trans/helper
Message-ID: <201006091155.o59BtuVJ020604@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-09 11:55:56 +0000 (Wed, 09 Jun 2010)
New Revision: 20977

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20977&view=rev

Added:
   lenses/trunk/Strategic Lenses/syntax/Types.sdf
Removed:
   lenses/trunk/Strategic Lenses/syntax/Types.sdf
Modified:
   lenses/trunk/Strategic Lenses/syntax/StrategicLenses.sdf
   lenses/trunk/Strategic Lenses/trans/helper/pp.str

Log:
new syntax for types

Changes:

Modified: lenses/trunk/Strategic Lenses/syntax/StrategicLenses.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/StrategicLenses.sdf	2010-06-09 11:47:56 UTC (rev 20976)
+++ lenses/trunk/Strategic Lenses/syntax/StrategicLenses.sdf	2010-06-09 11:55:56 UTC (rev 20977)
@@ -3,14 +3,14 @@
 
 imports 
 	Common
-	SimpleTypes
 	Lenses
+	Types
 	Tests
 	Embedding
 	
 exports
 
-  	context-free start-symbols
+	context-free start-symbols
     	Start
 
 	context-free syntax
@@ -19,7 +19,7 @@
 
 	context-free syntax
 	
-		"signature" "constructors" TypeDef+	-> Section	{cons("Types")}
-		"lenses" LensDef+					-> Section	{cons("Defs")}
+		"signature" "constructors" TypeDef+	-> Section	{cons("TypeDefs")}
+		"lenses" LensDef+					-> Section	{cons("LensDefs")}
 		"tests" TestCase+					-> Section	{cons("Tests")}
 				
\ No newline at end of file

Deleted: lenses/trunk/Strategic Lenses/syntax/Types.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Types.sdf	2010-06-09 11:47:56 UTC (rev 20976)
+++ lenses/trunk/Strategic Lenses/syntax/Types.sdf	2010-06-09 11:55:56 UTC (rev 20977)
@@ -1,24 +0,0 @@
-module Types
-
-imports 
-	Common
-
-exports
-	sorts
-		Type
-		QFunctor
-		Functor
-		
-	context-free syntax
-	
-	ID 								-> Type {cons("Predefined")}
-	"(" {Type ","}+ ")"				-> Type {cons("Tuple")}
-	QFunctor "(" {Type ","}+ ")"	-> Type {cons("Functor")}
-	"{" {Type ","}+ "}"				-> Type {cons("Union")}
-	
-	ID						-> Functor
-	Functor					-> QFunctor		{cons("Functor")}
-	TypeRef "." Functor		-> QFunctor		{cons("QFunctor")}
-	
-	ID						-> TypeRef
-	"_"						-> TypeRef	{cons("Every")}
\ No newline at end of file

Copied: lenses/trunk/Strategic Lenses/syntax/Types.sdf (from rev 20910, lenses/trunk/Strategic Lenses/syntax/SimpleTypes.sdf)
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Types.sdf	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/syntax/Types.sdf	2010-06-09 11:55:56 UTC (rev 20977)
@@ -0,0 +1,24 @@
+module Types
+
+imports
+	Common
+		
+exports 
+	
+	sorts
+		InternalType
+		
+	context-free syntax
+	
+		ID ":" {TypeRef "*"}* "->" TypeRef 	-> TypeDef {cons("FunctorDef")}
+		":" {TypeRef "*"}+ "->" TypeRef 	-> TypeDef {avoid, cons("TupleDef")}
+		":" TypeRef "->" TypeRef 			-> TypeDef {cons("SubtypeDef")}
+		
+		ID 							-> TypeRef {cons("Simple")}
+		ID "(" {TypeRef ","}* ")"	-> TypeRef {cons("Generic")}
+		
+		TypeRef	-> TypeDescr
+		"_"		-> TypeDescr {cons("Every")} 
+		
+		ID					-> QConstructor		{cons("Constructor")}
+		TypeDescr "." ID	-> QConstructor		{cons("QConstructor")}

Modified: lenses/trunk/Strategic Lenses/trans/helper/pp.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/helper/pp.str	2010-06-09 11:47:56 UTC (rev 20976)
+++ lenses/trunk/Strategic Lenses/trans/helper/pp.str	2010-06-09 11:55:56 UTC (rev 20977)
@@ -2,19 +2,20 @@
 
 imports
 	include/StrategicLenses
+	types/signature
 	
 rules
 	
 	pp-safe = pp <+ write-to-string
 	
+	pp: Simple(t) -> t
+	
+	pp: Generic(t, ts) -> $[t([<lpp(|", ")> ts])]
+		
 	pp: Functor(f, ts) -> $[[f]: [<lpp(|" * ")> ts]]
 	
-	pp: SimpleType(t) -> t
+	pp: Tuple(ts) -> <lpp(|" * ")> ts
 	
-	pp: GenericType(t, ts) -> $[t([<lpp(|", ")> ts])]
-	
-	pp: TypeVar(v) -> v
-	
 	lpp(|s): [] -> $[]
 	
 	lpp(|s): [e] -> <pp> e


From g.h.wachsmuth at tudelft.nl  Wed Jun  9 14:10:23 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 09 Jun 2010 12:10:23 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20978 - GuidoWachsmuth
	- in lenses/trunk/Strategic Lenses: syntax trans/analysis
	trans/helper
Message-ID: <201006091210.o59CANSE020952@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-09 12:10:23 +0000 (Wed, 09 Jun 2010)
New Revision: 20978

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20978&view=rev

Modified:
   lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf
   lenses/trunk/Strategic Lenses/syntax/Types.sdf
   lenses/trunk/Strategic Lenses/trans/analysis/main.str
   lenses/trunk/Strategic Lenses/trans/analysis/typecheck.str
   lenses/trunk/Strategic Lenses/trans/helper/pp.str

Log:
new types

Changes:

Modified: lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf	2010-06-09 11:55:56 UTC (rev 20977)
+++ lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf	2010-06-09 12:10:23 UTC (rev 20978)
@@ -30,7 +30,7 @@
 		"amodels"[0-9]*  			-> AModel*		{prefer}
 		"amodel"[0-9]*  			-> AModel		{prefer}
 		"constr"[0-9]*  			-> ID			{prefer}
-		"type"[0-9]*  				-> TypeRef		{prefer}
+		"type"[0-9]*  				-> TypeDescr	{prefer}
 		"qc"[0-9]*  				-> QConstructor	{prefer}
 		[ac]?("indices"|"is")[0-9]* -> Indices		{prefer}
 		[ac]?"index"[0-9]*  		-> Index		{prefer}

Modified: lenses/trunk/Strategic Lenses/syntax/Types.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Types.sdf	2010-06-09 11:55:56 UTC (rev 20977)
+++ lenses/trunk/Strategic Lenses/syntax/Types.sdf	2010-06-09 12:10:23 UTC (rev 20978)
@@ -10,7 +10,7 @@
 		
 	context-free syntax
 	
-		ID ":" {TypeRef "*"}* "->" TypeRef 	-> TypeDef {cons("FunctorDef")}
+		ID ":" {TypeRef "*"}* "->" TypeRef 	-> TypeDef {cons("ConstructorDef")}
 		":" {TypeRef "*"}+ "->" TypeRef 	-> TypeDef {avoid, cons("TupleDef")}
 		":" TypeRef "->" TypeRef 			-> TypeDef {cons("SubtypeDef")}
 		

Modified: lenses/trunk/Strategic Lenses/trans/analysis/main.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/analysis/main.str	2010-06-09 11:55:56 UTC (rev 20977)
+++ lenses/trunk/Strategic Lenses/trans/analysis/main.str	2010-06-09 12:10:23 UTC (rev 20978)
@@ -6,6 +6,7 @@
 	analysis/resolve
 	analysis/typecheck
 	analysis/tests
+	types/signature
   	semantics/desugar
   
 strategies
@@ -15,32 +16,49 @@
     with
 		editor-init;
 		<analyse> ast ;
-      	<collect-all(test-error, conc)> ast => errors1 ;
-      	<collect-all(type-error, conc)> ast => errors2 ;
-      	<collect-all(ref-error, conc)> ast => errors3 ;
-      	<unions> [errors1, errors2, errors3] => errors
+      	<collect-all(test-error <+ type-error <+ ref-error, conc)> ast => errors
 
 	analyse = topdown(try(record-signature <+ record-lens))
 
-rules	
-	record-signature: TypeDef(f, ts, t) -> TypeDef(f, ts, t)
+rules
+	
+	record-signature: ConstructorDef(f, ts, t) -> ConstructorDef(f, ts, t)
 		with rules (
-			GetFunctor: (t, f) -> Functor(f, ts)
+			GetConstructor:+ (t, f) -> Constructor(f, ts)
 		)
 		with rules (
-			GetFunctor: (Every(), f) -> Functor(f, ts)
+			GetConstructor:+ (Every(), f) -> Constructor(f, ts)
 		)		
 		with rules (
-			GetSort: Functor(f, ts) -> t
+			GetType:+ Constructor(f, ts) -> t
 			) 
 		with rules (
-			GetConstructor: t -> Functor(f, ts)
+			GetSignature:+ t -> Constructor(f, ts)
 		)
+	
+	record-signature: TupleDef(ts, t) -> TupleDef(ts, t)
+		with rules (
+			GetTuple:+ t -> Tuple(ts)
+		)
+		with rules (
+			GetType:+ Tuple(ts) -> t
+			) 
+		with rules (
+			GetSignature:+ t -> Tuple(ts)
+		)
+	
+	record-signature: SubtypeDef(sub, super) -> SubtypeDef(sub, super)
+		with rules (
+			GetSuperType:+ sub -> super
+		)
+		with rules (
+			GetSubType:+ super -> sub
+		) 
 		
 rules
 	record-lens: LensDef(tc, name, ti, def) -> LensDef(tc, name, ti, def)
 		with 
-			<desugar> def => desugared 
+			<desugar-all> def => desugared 
 		with rules (
 			GetLens: name -> desugared
 		)

Modified: lenses/trunk/Strategic Lenses/trans/analysis/typecheck.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/analysis/typecheck.str	2010-06-09 11:55:56 UTC (rev 20977)
+++ lenses/trunk/Strategic Lenses/trans/analysis/typecheck.str	2010-06-09 12:10:23 UTC (rev 20978)
@@ -3,6 +3,7 @@
 imports
 	include/StrategicLenses
 	analysis/main
+	types/signature
 	helper/indices
 	helper/pp
 	semantics/semantics
@@ -13,13 +14,13 @@
 	type-error: 
 		LensDef(tc, n, ta, l) -> (tc, $[Left-hand side of lens [n] is of type [<pp-safe> tc'].])
 			where
-				<type-of> <desugar> l => (tc', ta') ;
+				<type-of> <desugar-all> l => (tc', ta') ;
 				not (<id> tc' => tc)
 	
 	type-error: 
 		LensDef(tc, n, ta, l) -> (ta, $[Right-hand side of lens [n] is of type [<pp-safe> ta'].])
 			where
-				<type-of> <desugar> l => (tc', ta') ;
+				<type-of> <desugar-all> l => (tc', ta') ;
 				not (<id> ta' => ta)
 
 strategies
@@ -29,7 +30,7 @@
 		
 rules
 	
-	type-of: Id() -> (TypeVar(x), TypeVar(x))
+	type-of: Id() -> (Simple(x), Simple(x))
 		where
 			<new> "x" => x
 
@@ -48,16 +49,16 @@
 			<simplify> <unions> [tc1, tc2] => tc ;
 			<simplify> <unions> [ta1, ta2] => ta
 	
-	type-of: Plunge(QFunctor(t, f)) -> (tc, ta)
+	type-of: Plunge(QConstructor(t, f)) -> (tc, ta)
 		with
-			<bagof-GetFunctor> (t, f) => tas ;
+			<bagof-GetConstructor> (t, f) => tas ;
 			<map(anonymous)> tas => tcs ;
 			<simplify> tas => ta ;
 			<simplify> tcs => tc 
 			
-	type-of: Hoist(QFunctor(t, f)) -> (tc, ta)
+	type-of: Hoist(QConstructor(t, f)) -> (tc, ta)
 		where
-			<bagof-GetFunctor> (t, f) => tcs ;
+			<bagof-GetConstructor> (t, f) => tcs ;
 			<map(anonymous)> tcs => tas ;
 			<simplify> tas => ta ;
 			<simplify> tcs => tc 
@@ -67,7 +68,7 @@
 			<type-of> cm => tc ;
 			<id> tc => ta
 	
-	type-of: Fork(bs) -> (Functor("", tcs), Functor("", tas))
+	type-of: Fork(bs) -> (Tuple(tcs), Tuple(tas))
 		where
 			<mapconcat(type-of-branch;Fst)> bs => dtcs ;
 			<mapconcat(type-of-branch;Snd)> bs => dtas ;
@@ -76,44 +77,44 @@
 			
 	type-of-branch: Branch(ci, lens, ai) -> (tc, ta)
 		where
-			<type-of> lens => (Functor("", tcs), Functor("", tas)) ;
+			<type-of> lens => (Constructor("", tcs), Constructor("", tas)) ;
 			<zip> (ci, tcs) => tc ;
 			<zip> (ai, tas) => ta
 	
-	type-of: Map(l) -> (GenericType("List", tc), GenericType("List", ta))
+	type-of: Map(l) -> (Generic("List", tc), Generic("List", ta))
 		where
 			<type-of> l => (tc, ta)
 				
-	type-of: Ast(f#(cs)) -> Functor(f, ts)
+	type-of: Ast(f#(cs)) -> Constructor(f, ts)
 		where
 			<map(type-of-helper)> cs => ts
 	
 	type-of-helper: Ast(ast) -> t
 		where
-			<type-of> ast => Functor(f, ts) ;
-			<GetSort> Functor(f, ts) => t
+			<type-of> ast => Constructor(f, ts) ;
+			<GetType> Constructor(f, ts) => t
 			
-	anonymous: Functor(f, ts) -> Functor("", ts)
+	anonymous: Constructor(f, ts) -> Constructor("", ts)
 						
 	
-	match: (TypeVar(x), SimpleType(y)) -> (x, SimpleType(y))
+	match: (Simple(x), Simple(y)) -> (x, Simple(y))
 	
 	bind(|binding) = topdown(try(apply-binding(|binding)))
 	
 	simplify = try(simplify-local3 <+ simplify-local2 <+ simplify-local1)
 	
 	simplify-local1: [t] -> <simplify> t
-	simplify-local2: Functor("", [t]) -> t
+	simplify-local2: Constructor("", [t]) -> t
 	
 	simplify-local3: ts -> <simplify> [t|rts]
 		where
 			<fetch-elem(?f)> ts ;
-			<GetSort> f => t ;
-			<bagof-GetConstructor> t => cs ;
+			<GetType> f => t ;
+			<bagof-GetSignature> t => cs ;
 			<subseteq> (cs, ts) ;
 			<diff> (ts, cs) => rts
 		
-	apply-binding(|binding): TypeVar(x) -> t
+	apply-binding(|binding): Simple(x) -> t
 		where
 			<fetch-elem(?(x, _))> binding => (x, t)
 			

Modified: lenses/trunk/Strategic Lenses/trans/helper/pp.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/helper/pp.str	2010-06-09 11:55:56 UTC (rev 20977)
+++ lenses/trunk/Strategic Lenses/trans/helper/pp.str	2010-06-09 12:10:23 UTC (rev 20978)
@@ -12,7 +12,7 @@
 	
 	pp: Generic(t, ts) -> $[t([<lpp(|", ")> ts])]
 		
-	pp: Functor(f, ts) -> $[[f]: [<lpp(|" * ")> ts]]
+	pp: Constructor(f, ts) -> $[[f]: [<lpp(|" * ")> ts]]
 	
 	pp: Tuple(ts) -> <lpp(|" * ")> ts
 	


From g.h.wachsmuth at tudelft.nl  Wed Jun  9 14:10:51 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 09 Jun 2010 12:10:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20979 - GuidoWachsmuth
	- in lenses/trunk/Strategic Lenses/trans: . types
Message-ID: <201006091210.o59CAp6x020958@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-09 12:10:51 +0000 (Wed, 09 Jun 2010)
New Revision: 20979

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20979&view=rev

Added:
   lenses/trunk/Strategic Lenses/trans/types/
   lenses/trunk/Strategic Lenses/trans/types/lenses.str
   lenses/trunk/Strategic Lenses/trans/types/signature.str
   lenses/trunk/Strategic Lenses/trans/types/types.str

Log:
new, more systematic approach for typing

Changes:

Added: lenses/trunk/Strategic Lenses/trans/types/lenses.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/types/lenses.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/types/lenses.str	2010-06-09 12:10:51 UTC (rev 20979)
@@ -0,0 +1,46 @@
+module types/lenses
+
+imports
+	include/StrategicLenses
+	analysis/main
+	types/signature
+	types/types
+	
+rules
+	
+	gtype: 
+		(Id(), sigs) -> sigs
+	
+	gtype:
+		(Comp(l1, l2), sigs0) -> sigs2
+			where
+				<gtype> (l1, sigs0) => sigs1 ;
+				<gtype> (l2, sigs1) => sigs2
+				
+	gtype:
+		(Hoist(QConstructor(t, f)), sigs0) -> sigs1
+			where
+				<mapconcat(hoist-type(|f))> sigs0 => sigs1
+	
+	hoist-type(|f):
+		  Constructor(f, ts@[_,_|_]) -> [Tuple(ts)]
+		  
+	hoist-type(|f):
+		  Constructor(f, [t]) -> <type-to-sigs> t
+
+rules
+		  
+	cptype:
+		(Id(), sigs) -> sigs
+	
+	cptype:
+		(Comp(l1, l2), sigs0) -> sigs2
+			where
+				<cptype> (l2, sigs0) => sigs1 ;
+				<cptype> (l1, sigs1) => sigs2
+	
+	cptype:
+		(Plunge(QConstructor(t, f)), sigs0) -> sigs1
+			where
+				<mapconcat(hoist-type(|f))> sigs0 => sigs1
+	
\ No newline at end of file

Added: lenses/trunk/Strategic Lenses/trans/types/signature.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/types/signature.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/types/signature.str	2010-06-09 12:10:51 UTC (rev 20979)
@@ -0,0 +1,7 @@
+module types/signature
+
+signature constructors
+
+			:	TypeRef 			-> InternalType
+Tuple		:   List(TypeRef)		-> InternalType	
+Constructor	:	ID * List(TypeRef)	-> InternalType

Added: lenses/trunk/Strategic Lenses/trans/types/types.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/types/types.str	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/types/types.str	2010-06-09 12:10:51 UTC (rev 20979)
@@ -0,0 +1,42 @@
+module types/types
+
+imports
+	include/StrategicLenses
+	types/signature
+	analysis/main
+	
+rules
+	
+	type-to-sigs:
+		Simple(t) -> sigs
+			where
+				<bagof-GetSignature> t 		=> sigs1 ;
+				<bagof-GetSubType> t 		=> ts ;
+				<map(type-to-sigs)> ts		=> sigs2 ;
+				<unions> [sigs1, sigs2] 	=> sigs
+				
+	sigs-to-type:
+		(sigs, t) -> [t|sigs']
+			where
+				<type-to-sigs> t => tsigs ;
+				<subseteq> (tsigs, sigs) ;
+				<diff> (sigs, tsigs) => sigs' 
+				
+	sigs-to-types:
+		sigs -> ts
+			where
+				<map(GetType)> sigs 			=> ts1 ;
+				<make-set> ts1 					=> ts2 ;
+				<map(type-to-sigs)> ts2			=> sigs2 ;
+				<zip> (ts2, sigs2)				=> cs1 ;
+				<filter(included(|sigs))> cs1	=> cs2 ;
+				<foldr(!sigs, diff, Snd)> cs2	=> sigs3 ;
+				<map(Fst)> cs2					=> ts3 ;
+				//TODO filter subtypes
+				<concat> (ts3, sigs3)			=> ts
+				
+				
+	included(|sigs1): 
+		(t, sigs2) -> (t, sigs2)
+			where
+				<subseteq> (sigs2, sigs1)				
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Wed Jun  9 15:17:44 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 09 Jun 2010 13:17:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20980 - GuidoWachsmuth
	- in lenses/trunk/Strategic Lenses: syntax trans/analysis
Message-ID: <201006091317.o59DHiqa021864@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-09 13:17:44 +0000 (Wed, 09 Jun 2010)
New Revision: 20980

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20980&view=rev

Added:
   lenses/trunk/Strategic Lenses/trans/analysis/main.meta
Modified:
   lenses/trunk/Strategic Lenses/syntax/Lenses.sdf
   lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf
   lenses/trunk/Strategic Lenses/syntax/Types.sdf
   lenses/trunk/Strategic Lenses/trans/analysis/main.str

Log:
concrete syntax in analysis rules

Changes:

Modified: lenses/trunk/Strategic Lenses/syntax/Lenses.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Lenses.sdf	2010-06-09 12:10:51 UTC (rev 20979)
+++ lenses/trunk/Strategic Lenses/syntax/Lenses.sdf	2010-06-09 13:17:44 UTC (rev 20980)
@@ -9,7 +9,7 @@
 		
 	context-free syntax
   
-  		Type "<" ID ">" Type ":=" Lens		-> LensDef	{cons("LensDef")}
+  		TypeRef "<" ID ">" TypeRef ":=" Lens		-> LensDef	{cons("LensDef")}
 
 	context-free syntax
 		

Modified: lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf	2010-06-09 12:10:51 UTC (rev 20979)
+++ lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf	2010-06-09 13:17:44 UTC (rev 20980)
@@ -21,6 +21,8 @@
 		"|[" Pattern "]|" 		-> Term [[StrategoHost]] {cons("ToMetaExpr")}
 		"|[" TestCase "]|" 		-> Term [[StrategoHost]] {cons("ToMetaExpr")}
 		"|[" Test "]|" 			-> Term [[StrategoHost]] {cons("ToMetaExpr")}
+		"|[" TypeDef "]|" 		-> Term [[StrategoHost]] {cons("ToMetaExpr")}
+		"|[" LensDef "]|" 		-> Term [[StrategoHost]] {cons("ToMetaExpr")}
 
 	variables 
 
@@ -30,7 +32,10 @@
 		"amodels"[0-9]*  			-> AModel*		{prefer}
 		"amodel"[0-9]*  			-> AModel		{prefer}
 		"constr"[0-9]*  			-> ID			{prefer}
-		"type"[0-9]*  				-> TypeDescr	{prefer}
+		"name"[0-9]*  				-> ID			{prefer}
+		"type"[0-9]*  				-> TypeRef		{prefer}
+		"types"[0-9]*  				-> ConstrRefs	{prefer}		
+		"types"[0-9]*  				-> {TypeRef "*"}+	{prefer}	
 		"qc"[0-9]*  				-> QConstructor	{prefer}
 		[ac]?("indices"|"is")[0-9]* -> Indices		{prefer}
 		[ac]?"index"[0-9]*  		-> Index		{prefer}

Modified: lenses/trunk/Strategic Lenses/syntax/Types.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Types.sdf	2010-06-09 12:10:51 UTC (rev 20979)
+++ lenses/trunk/Strategic Lenses/syntax/Types.sdf	2010-06-09 13:17:44 UTC (rev 20980)
@@ -10,10 +10,13 @@
 		
 	context-free syntax
 	
-		ID ":" {TypeRef "*"}* "->" TypeRef 	-> TypeDef {cons("ConstructorDef")}
-		":" {TypeRef "*"}+ "->" TypeRef 	-> TypeDef {avoid, cons("TupleDef")}
-		":" TypeRef "->" TypeRef 			-> TypeDef {cons("SubtypeDef")}
+		ID ":" ConstrRefs "->" TypeRef 		-> TypeDef {cons("ConstructorDef")}
+		":" TupleRefs "->" TypeRef 			-> TypeDef {cons("TupleDef")}
+		":" TypeRef "->" TypeRef 			-> TypeDef {prefer, cons("SubtypeDef")}
 		
+		TypeRef "*" {TypeRef "*"}+			-> TupleRefs {cons("TypeRefs")}
+		{TypeRef "*"}*						-> ConstrRefs
+		
 		ID 							-> TypeRef {cons("Simple")}
 		ID "(" {TypeRef ","}* ")"	-> TypeRef {cons("Generic")}
 		

Added: lenses/trunk/Strategic Lenses/trans/analysis/main.meta
===================================================================
--- lenses/trunk/Strategic Lenses/trans/analysis/main.meta	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/trans/analysis/main.meta	2010-06-09 13:17:44 UTC (rev 20980)
@@ -0,0 +1 @@
+Meta([Syntax("Stratego-StrategicLenses")])
\ No newline at end of file

Modified: lenses/trunk/Strategic Lenses/trans/analysis/main.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/analysis/main.str	2010-06-09 12:10:51 UTC (rev 20979)
+++ lenses/trunk/Strategic Lenses/trans/analysis/main.str	2010-06-09 13:17:44 UTC (rev 20980)
@@ -22,43 +22,44 @@
 
 rules
 	
-	record-signature: ConstructorDef(f, ts, t) -> ConstructorDef(f, ts, t)
+	record-signature:
+		|[ constr: types -> type ]| -> |[ constr: types -> type ]|
 		with rules (
-			GetConstructor:+ (t, f) -> Constructor(f, ts)
+			GetConstructor:+ (type, constr) -> Constructor(constr, types)
 		)
 		with rules (
-			GetConstructor:+ (Every(), f) -> Constructor(f, ts)
+			GetConstructor:+ (Every(), constr) -> Constructor(constr, types)
 		)		
 		with rules (
-			GetType:+ Constructor(f, ts) -> t
+			GetType:+ Constructor(constr, types) -> type
 			) 
 		with rules (
-			GetSignature:+ t -> Constructor(f, ts)
+			GetSignature:+ type -> Constructor(constr, types)
 		)
 	
-	record-signature: TupleDef(ts, t) -> TupleDef(ts, t)
+	record-signature: |[ : type1 * types -> type2 ]| -> |[ : type1 * types -> type2 ]|
 		with rules (
-			GetTuple:+ t -> Tuple(ts)
+			GetTuple:+ type2 -> Tuple([type1|types])
 		)
 		with rules (
-			GetType:+ Tuple(ts) -> t
+			GetType:+ Tuple([type1|types]) -> type2
 			) 
 		with rules (
-			GetSignature:+ t -> Tuple(ts)
+			GetSignature:+ type2 -> Tuple([type1|types])
 		)
 	
-	record-signature: SubtypeDef(sub, super) -> SubtypeDef(sub, super)
+	record-signature: |[ : type1 -> type2 ]| -> |[ : type1 -> type2 ]|
 		with rules (
-			GetSuperType:+ sub -> super
+			GetSuperType:+ type1 -> type2
 		)
 		with rules (
-			GetSubType:+ super -> sub
+			GetSubType:+ type2 -> type1
 		) 
 		
 rules
-	record-lens: LensDef(tc, name, ti, def) -> LensDef(tc, name, ti, def)
+	record-lens: |[ type1 < name > type2 := lens ]| -> |[ type1 < name > type2 := lens ]|
 		with 
-			<desugar-all> def => desugared 
+			<desugar-all> lens => desugared 
 		with rules (
 			GetLens: name -> desugared
 		)


From L.C.L.Kats at tudelft.nl  Wed Jun  9 18:20:56 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 09 Jun 2010 16:20:56 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20981 - LennartKats -
	strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode
Message-ID: <201006091620.o59GKuXj024520@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-09 16:20:56 +0000 (Wed, 09 Jun 2010)
New Revision: 20981

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20981&view=rev

Modified:
   strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode/indent-padding.str

Log:
Optimized {indent-padding}. Mostly micro-optimizations, but seems to lead to a major improvement on Java.

Changes:

Modified: strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode/indent-padding.str
===================================================================
--- strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode/indent-padding.str	2010-06-09 13:17:44 UTC (rev 20980)
+++ strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode/indent-padding.str	2010-06-09 16:20:56 UTC (rev 20981)
@@ -14,6 +14,7 @@
   PaddingId      : Term -> PaddingId
   PaddingStart   : PaddingStart
   indentpadding  : Attr
+  parse-tree     : Term * Term -> parse-tree
 
 strategies
     
@@ -32,16 +33,20 @@
     AddPadding(t) -> t'
     with
       if !asfix => appl(_, _) then
-        where(
-          asfix'  := <strip-tree-before(?_{PaddingId(_)})> asfix
-        ; padding := <asfix-yield-appl-chars> asfix'
-        //; <debug(!"  padding1: ")> <write-to-string> <implode-string> <asfix-yield-appl-chars> asfix
-        //; <debug(!"  padding2: ")> <write-to-string> <implode-string> padding
-        )
-      ; if (!asfix => _{PaddingId(_)} <+ <not(one('\n'))> padding) then
+        if !asfix => _{PaddingId(_)} then
           t' := <id> // keep constructor (add padding later)
         else
-          t' := <add-indent-padding-string(|asfix)> t
+          where(
+              asfix'       := <strip-tree-before(?_{PaddingId(_)})> asfix
+            ; with(padding := <asfix-yield-appl-chars> asfix')
+            //; <debug(!"  padding1: ")> <write-to-string> <implode-string> <asfix-yield-appl-chars> asfix
+            //; <debug(!"  padding2: ")> <write-to-string> <implode-string> padding
+            )
+        ; if not(<one('\n')> padding) then
+            t' := <id> // keep constructor (add padding later)
+          else
+            t' := <add-indent-padding-string(|asfix)> t
+          end
         end
       else
         t' := <id> // keep constructor (add padding later)
@@ -74,23 +79,42 @@
         s' := s
       end
   
-  strip-tree-before(s) =
-    if is-list then
-      [s | id]; ![]
-    <+
-      try(strip-tree-before-list(s))
-    else
-      all(strip-tree-before(s))
-    end
+  /**
+   * Strips the tail of a parse tree starting from the point where <s> succeeds.
+   */
+  strip-tree-before(s):
+    tree -> tree'
+    with
+      try(?parse-tree(<id>, _));
+      tree' := <strip-appl-before(s)>
   
-  strip-tree-before-list(s) :
+  strip-appl-before(s) =
+    if ?appl @ appl(prod @ prod(_, rhs, _), list) then
+      if not(!rhs => lit(_) + !rhs => lex(_)) then
+	      list' := <strip-appl-list-before(s)> list;
+	      if !list' => list then
+	        !appl
+	      else
+	        !appl(prod, list')
+	      end
+	    <+
+	      !list => []; !appl
+		  end
+	  else
+	    // Shouldn't happen, or maybe with kernel syntax
+	    all(strip-appl-before(s))
+	  end
+  
+  strip-appl-list-before(s) :
     [i | i*] -> stripped*
     where
-      if <oncetd(s)> i then
-        stripped* := [<strip-tree-before(s)> i]
-      else
-        stripped* := [i | <strip-tree-before(s)> i*]
-      end
+      <s> i
+    ; stripped* := []
+    <+
+      <one(oncetd(s))> i
+    ; stripped* := [<strip-appl-before(s)> i]
+    <+
+      stripped* := [i | <strip-appl-list-before(s)> i*]
   
   chars-to-whitespace :
     [c | c*] -> c'*


From L.C.L.Kats at tudelft.nl  Wed Jun  9 18:37:22 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 09 Jun 2010 16:37:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20982 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.updatesite
Message-ID: <201006091637.o59GbMNO024773@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-09 16:37:22 +0000 (Wed, 09 Jun 2010)
New Revision: 20982

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20982&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Spoofax/160: Fix a performance issue with string interpolation

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-09 16:20:56 UTC (rev 20981)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-09 16:37:22 UTC (rev 20982)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.5.1.6"
+      version="0.5.1.7"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-09 16:20:56 UTC (rev 20981)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-09 16:37:22 UTC (rev 20982)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.5.1.6.jar" id="org.strategoxt.imp" version="0.5.1.6">
+   <feature url="features/org.strategoxt.imp_0.5.1.7.jar" id="org.strategoxt.imp" version="0.5.1.7">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">


From L.C.L.Kats at tudelft.nl  Thu Jun 10 11:21:42 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 10 Jun 2010 09:21:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20983 - LennartKats -
	in experimental: . meta-amb-suggestions meta-amb-suggestions/.cache
	meta-amb-suggestions/.externalToolBuilders
	meta-amb-suggestions/META-INF meta-amb-suggestions/lib
	meta-amb-suggestions/test meta-amb-suggestions/trans sep-comp-tool
Message-ID: <201006100921.o5A9LgQg007636@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-10 09:21:42 +0000 (Thu, 10 Jun 2010)
New Revision: 20983

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20983&view=rev

Added:
   experimental/meta-amb-suggestions/
   experimental/meta-amb-suggestions/.cache/
   experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+include+Meta-amb-suggestions.str.sig
   experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+lib+editor-common.generated.str.sig
   experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+syntax+Common.sdf.sig
   experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+trans+check.str.sig
   experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+trans+generate.str.sig
   experimental/meta-amb-suggestions/.classpath
   experimental/meta-amb-suggestions/.externalToolBuilders/
   experimental/meta-amb-suggestions/.externalToolBuilders/Meta-amb-suggestions build.main.xml.launch
   experimental/meta-amb-suggestions/.project
   experimental/meta-amb-suggestions/META-INF/
   experimental/meta-amb-suggestions/META-INF/MANIFEST.MF
   experimental/meta-amb-suggestions/build.generated.xml
   experimental/meta-amb-suggestions/build.main.xml
   experimental/meta-amb-suggestions/build.properties
   experimental/meta-amb-suggestions/lib/
   experimental/meta-amb-suggestions/lib/editor-common.generated.str
   experimental/meta-amb-suggestions/plugin.xml
   experimental/meta-amb-suggestions/test/
   experimental/meta-amb-suggestions/test/example.met
   experimental/meta-amb-suggestions/trans/
   experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str
   experimental/meta-amb-suggestions/trans/stratego-context.str
Modified:
   experimental/sep-comp-tool/sep-comp-tool.str

Log:
Checking in initial version of meta-amb-suggestions tool

Changes (first 1000 lines of the diffs):

Added: experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+include+Meta-amb-suggestions.str.sig
===================================================================
--- experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+include+Meta-amb-suggestions.str.sig	                        (rev 0)
+++ experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+include+Meta-amb-suggestions.str.sig	2010-06-10 09:21:42 UTC (rev 20983)
@@ -0,0 +1 @@
+Module("Meta-amb-suggestions",[Signature([Constructors([OpDecl("Type",FunType([ConstType(SortNoArgs("ID"))],ConstType(SortNoArgs("Type")))),OpDecl("Property",FunType([ConstType(SortNoArgs("ID")),ConstType(SortNoArgs("Type"))],ConstType(SortNoArgs("Property")))),OpDecl("Entity",FunType([ConstType(SortNoArgs("ID")),ConstType(Sort("List",[SortNoArgs("Property")]))],ConstType(SortNoArgs("Definition")))),OpDecl("Module",FunType([ConstType(SortNoArgs("ID")),ConstType(Sort("List",[SortNoArgs("Definition")]))],ConstType(SortNoArgs("Start")))),OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("ID"))))])]),Signature([Constructors([OpDecl("Some",FunType([ConstType(SortVar("a"))],ConstType(Sort("Option",[SortVar("a")])))),OpDecl("None",ConstType(Sort("Option",[SortVar("a")])))])]),Signature([Constructors([OpDecl("Cons",FunType([ConstType(SortVar("a")),ConstType(Sort("List",[SortVar("a")]))],ConstType(Sort("List",[SortVar("a")])))),OpDecl("Nil",ConstType(Sort("Lis!
 t",[SortVar("a")]))),OpDecl("Conc",FunType([ConstType(Sort("List",[SortVar("a")])),ConstType(Sort("List",[SortVar("a")]))],ConstType(Sort("List",[SortVar("a")]))))])])])
\ No newline at end of file

Added: experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+lib+editor-common.generated.str.sig
===================================================================
--- experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+lib+editor-common.generated.str.sig	                        (rev 0)
+++ experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+lib+editor-common.generated.str.sig	2010-06-10 09:21:42 UTC (rev 20983)
@@ -0,0 +1 @@
+Module("lib/editor-common.generated",[Imports([(),(),()]),Strategies([SDefT("parse-file",[],[],[]),SDefT("parse-meta_amb_suggestions-file",[],[],[]),SDefT("parse-string",[],[],[]),SDefT("parse-meta_amb_suggestions-string",[],[],[]),SDefT("parse-stream",[],[],[]),SDefT("parse-meta_amb_suggestions-stream",[],[],[]),SDefT("pp-meta_amb_suggestions-string",[],[],[])]),Strategies([SDefT("open-import",[VarDec("resolve-path",ConstType(SortNoArgs("ATerm"))),VarDec("parse-file",ConstType(SortNoArgs("ATerm"))),VarDec("record-declarations",ConstType(SortNoArgs("ATerm")))],[],[RDecT("IsImported",[],[]),RDecT("CurrentFile",[],[])]),SDefT("open-wildcard-import",[VarDec("resolve-path",ConstType(SortNoArgs("ATerm"))),VarDec("parse-file",ConstType(SortNoArgs("ATerm"))),VarDec("record-declarations",ConstType(SortNoArgs("ATerm"))),VarDec("is-source-file",ConstType(SortNoArgs("ATerm")))],[],[]),SDefT("import-cache-path",[],[],[]),SDefT("project-path",[],[],[]),SDefT("is-newer",[],[],[])]),Strat!
 egies([SDefT("editor-init",[],[],[]),SDefT("refresh-workspace-file",[],[],[])]),Strategies([SDefT("origin-term",[],[],[]),SDefT("origin-text",[],[],[]),SDefT("origin-location",[],[],[]),SDefT("origin-line",[],[],[]),SDefT("origin-column",[],[],[]),SDefT("origin-strip",[],[],[]),SDefT("origin-equal",[],[VarDec("t",ConstType(SortNoArgs("ATerm")))],[]),SDefT("origin-surrounding-comments",[],[],[]),SDefT("origin-documentation-comment",[],[],[]),SDefT("documentation-comment-chars",[],[],[]),SDefT("origin-track-forced",[VarDec("s",ConstType(SortNoArgs("ATerm")))],[],[])]),Strategies([SDefT("desugar-position",[VarDec("desugar",ConstType(SortNoArgs("ATerm")))],[VarDec("ast",ConstType(SortNoArgs("ATerm")))],[]),SDefT("at-position",[VarDec("s",ConstType(SortNoArgs("ATerm")))],[VarDec("position",ConstType(SortNoArgs("ATerm")))],[]),SDefT("at-position",[VarDec("s",ConstType(SortNoArgs("ATerm")))],[VarDec("position",ConstType(SortNoArgs("ATerm")))],[]),SDefT("position-of-term",[VarDec("!
 is-term",ConstType(SortNoArgs("ATerm")))],[],[]),SDefT("position-of-
m",[VarDec("is-term",ConstType(SortNoArgs("ATerm")))],[],[]),SDefT("position-of-term",[VarDec("is-term",ConstType(SortNoArgs("ATerm")))],[VarDec("start-index",ConstType(SortNoArgs("ATerm")))],[]),SDefT("term-at-position",[],[VarDec("position",ConstType(SortNoArgs("ATerm")))],[]),SDefT("parent-at-position",[],[VarDec("position",ConstType(SortNoArgs("ATerm")))],[]),SDefT("parent-at-position",[],[VarDec("position",ConstType(SortNoArgs("ATerm")))],[]),SDefT("subterm-at",[],[VarDec("index",ConstType(SortNoArgs("ATerm")))],[])]),Signature([Constructors([OpDecl("COMPLETION",FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("Term")))),OpDecl("NOCONTEXT",FunType([ConstType(SortNoArgs("Term"))],ConstType(SortNoArgs("Term")))),OpDecl("MARKER",ConstType(SortNoArgs("Term"))),OpDecl("Module",FunType([ConstType(SortNoArgs("ID")),ConstType(Sort("List",[SortNoArgs("Entity")]))],ConstType(SortNoArgs("Module")))),OpDecl("Entity",FunType([ConstType(SortNoArgs("ID")),ConstType(Sort(!
 "List",[SortNoArgs("Property")]))],ConstType(SortNoArgs("Entity")))),OpDecl("Property",FunType([ConstType(SortNoArgs("ID")),ConstType(SortNoArgs("Type"))],ConstType(SortNoArgs("Property")))),OpDecl("Type",FunType([ConstType(SortNoArgs("ID"))],ConstType(SortNoArgs("Type"))))])])])
\ No newline at end of file

Added: experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+syntax+Common.sdf.sig
===================================================================
--- experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+syntax+Common.sdf.sig	                        (rev 0)
+++ experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+syntax+Common.sdf.sig	2010-06-10 09:21:42 UTC (rev 20983)
@@ -0,0 +1 @@
+module(unparameterized("Common"),[],[exports(conc-grammars(conc-grammars(lexical-syntax([prod([char-class(simple-charclass(present(conc(range(short("a"),short("z")),range(short("A"),short("Z")))))),iter-star(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),short("\\_"))))))))],sort("ID"),no-attrs),prod([opt(lit("\"-\"")),iter(char-class(simple-charclass(present(range(short("0"),short("9"))))))],sort("INT"),no-attrs),prod([lit("\"\\\"\""),iter-star(sort("StringChar")),lit("\"\\\"\"")],sort("STRING"),no-attrs),prod([char-class(comp(simple-charclass(present(conc(short("\\\""),short("\\n"))))))],sort("StringChar"),no-attrs),prod([lit("\"\\\\\\\"\"")],sort("StringChar"),no-attrs),prod([sort("BackSlashChar")],sort("StringChar"),no-attrs),prod([lit("\"\\\\\"")],sort("BackSlashChar"),no-attrs),prod([char-class(simple-charclass(present(conc(short("\\ "),conc(short("\\t"),conc(short("\\n"),short(!
 "\\r")))))))],layout,no-attrs),prod([char-class(simple-charclass(present(short("\\*"))))],sort("CommentChar"),no-attrs),prod([lit("\"/*\""),iter-star(alt(char-class(comp(simple-charclass(present(short("\\*"))))),sort("CommentChar"))),lit("\"*/\"")],layout,no-attrs),prod([lit("\"//\""),iter-star(char-class(comp(simple-charclass(present(conc(short("\\n"),short("\\r"))))))),alt(char-class(simple-charclass(present(conc(short("\\n"),short("\\r"))))),sort("EOF"))],layout,no-attrs),prod([],sort("EOF"),no-attrs)]),lexical-restrictions([follow([sort("CommentChar")],single(char-class(simple-charclass(present(short("\\/")))))),follow([sort("INT")],single(char-class(simple-charclass(present(range(short("0"),short("9"))))))),follow([sort("ID")],single(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),short("\\_"))))))))),follow([sort("EOF")],single(char-class(comp(simple-charclass(absent))))),follow(!
 [sort("BackSlashChar")],single(char-class(simple-charclass(present(s
t("\\\""))))))])),context-free-restrictions([follow([opt(layout)],single(char-class(simple-charclass(present(conc(short("\\ "),conc(short("\\t"),conc(short("\\n"),short("\\r"))))))))),follow([opt(layout)],single(seq(simple-charclass(present(short("\\/"))),single(char-class(simple-charclass(present(short("\\/")))))))),follow([opt(layout)],single(seq(simple-charclass(present(short("\\/"))),single(char-class(simple-charclass(present(short("\\*"))))))))])))])
\ No newline at end of file

Added: experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+trans+check.str.sig
===================================================================
--- experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+trans+check.str.sig	                        (rev 0)
+++ experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+trans+check.str.sig	2010-06-10 09:21:42 UTC (rev 20983)
@@ -0,0 +1 @@
+Module("check",[Imports([(),(),()]),Rules([SDefT("analyze",[],[],[]),SDefT("record-entity",[],[],[RDecT("GetEntity",[],[])])]),Rules([SDefT("constraint-error",[],[],[]),SDefT("constraint-error",[],[],[]),SDefT("constraint-warning",[],[],[]),SDefT("constraint-note",[],[],[])])])
\ No newline at end of file

Added: experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+trans+generate.str.sig
===================================================================
--- experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+trans+generate.str.sig	                        (rev 0)
+++ experimental/meta-amb-suggestions/.cache/+Users+lk+workspaces+default+meta-amb-suggestions+trans+generate.str.sig	2010-06-10 09:21:42 UTC (rev 20983)
@@ -0,0 +1 @@
+Module("generate",[Imports([(),(),(),(),()]),Rules([SDefT("to-java",[],[],[]),SDefT("to-java",[],[],[]),SDefT("to-java",[],[],[]),SDefT("to-java",[],[],[]),SDefT("to-java",[],[],[])])])
\ No newline at end of file

Added: experimental/meta-amb-suggestions/.classpath
===================================================================
--- experimental/meta-amb-suggestions/.classpath	                        (rev 0)
+++ experimental/meta-amb-suggestions/.classpath	2010-06-10 09:21:42 UTC (rev 20983)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<classpath>
+	<classpathentry kind="src" excluding="trans/**" path="editor/java"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
\ No newline at end of file

Added: experimental/meta-amb-suggestions/.externalToolBuilders/Meta-amb-suggestions build.main.xml.launch
===================================================================
--- experimental/meta-amb-suggestions/.externalToolBuilders/Meta-amb-suggestions build.main.xml.launch	                        (rev 0)
+++ experimental/meta-amb-suggestions/.externalToolBuilders/Meta-amb-suggestions build.main.xml.launch	2010-06-10 09:21:42 UTC (rev 20983)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
+<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
+<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES"/>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+</listAttribute>
+<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value=""/>
+<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="all,"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${none}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${build_project}/build.main.xml"/>
+<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${build_project}"/>
+<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
+</launchConfiguration>

Added: experimental/meta-amb-suggestions/.project
===================================================================
--- experimental/meta-amb-suggestions/.project	                        (rev 0)
+++ experimental/meta-amb-suggestions/.project	2010-06-10 09:21:42 UTC (rev 20983)
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>meta-amb-suggestions</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+			<triggers>full,incremental,</triggers>
+			<arguments>
+				<dictionary>
+					<key>LaunchConfigHandle</key>
+					<value>&lt;project&gt;/.externalToolBuilders/Meta-amb-suggestions build.main.xml.launch</value>
+				</dictionary>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

Added: experimental/meta-amb-suggestions/META-INF/MANIFEST.MF
===================================================================
--- experimental/meta-amb-suggestions/META-INF/MANIFEST.MF	                        (rev 0)
+++ experimental/meta-amb-suggestions/META-INF/MANIFEST.MF	2010-06-10 09:21:42 UTC (rev 20983)
@@ -0,0 +1,18 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Metaambsuggestions Plug-in
+Bundle-SymbolicName: meta_amb_suggestions;singleton:=true
+Bundle-Version: 1.0.0
+Import-Package: org.osgi.framework;version="1.3.0"
+Require-Bundle: org.eclipse.core.runtime,
+  org.eclipse.core.resources,
+  org.eclipse.imp.runtime,
+  org.eclipse.ui,
+  lpg.runtime,
+  org.eclipse.jface.text,
+  org.eclipse.ui.editors,
+  org.eclipse.ui.workbench.texteditor,
+  org.strategoxt.imp.runtime,
+  org.spoofax.aterm,
+  org.spoofax.jsglr
+Bundle-RequiredExecutionEnvironment: J2SE-1.5

Added: experimental/meta-amb-suggestions/build.generated.xml
===================================================================
--- experimental/meta-amb-suggestions/build.generated.xml	                        (rev 0)
+++ experimental/meta-amb-suggestions/build.generated.xml	2010-06-10 09:21:42 UTC (rev 20983)
@@ -0,0 +1,380 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="build.generated">
+    
+        <target name="spoofaximp.default" depends="sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+    
+        <!-- Initialization -->
+        <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
+        <dirname property="externaldefdir" file="${externaldef}"/>
+        <condition property="externaldefimport" value="-I ${externaldefdir}" else="">
+            <isset property="externaldef"/>
+        </condition>
+        <condition property="externaljarimport" value=":${externaljar}" else="">
+            <isset property="externaljar"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <isset property="eclipse.running"/>
+        </condition>
+        <condition property="externaljarflags" value="${externaljarflags}" else="">
+            <isset property="externaljarflags"/>
+        </condition>
+        <mkdir dir="${build}"/>
+        <mkdir dir="${src-gen}"/>
+        <mkdir dir="${dist}"/>
+        <mkdir dir="${include}"/>
+        <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
+
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+        
+        <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder">
+                <arg value="${include}/${esvmodule}.packed.esv"/>
+            </java>
+        </target>
+        
+        <target name="refresh" if="eclipse.running">
+            <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Builders.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Colorer.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Completions.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+            <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
+            <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+        </target>
+        
+        <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
+                <arg value="-p"/>
+                <arg value="${include}/${sdfmodule}.tbl"/>
+            </java>
+        </target>
+    
+        <target name="sdf2table" depends="make-permissive">
+            <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                
+                <fileset file="${include}/${sdfmodule}-Permissive.def"/>
+                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+            </apply>
+        </target>
+        
+        <target name="make-permissive" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-Permissive.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <antcall target="make-permissive.helper"/>
+        </target>
+    
+        <target name="make-permissive.helper" unless="permissive-grammar.available">
+            <java classname="org.strategoxt.permissivegrammars.make_permissive" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-Permissive.def"/>
+                <arg line="--optimize on"/>
+            </java>
+        </target>
+
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
+            <mkdir dir="utils"/>
+            <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/aster.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.strategojar}" todir="utils" failonerror="false"/>
+        </target>
+    
+        <target name="pack-sdf" unless="externaldef">
+            <dependset>
+                <srcfileset dir="${syntax}">
+                    <include name="**/*.sdf"/>
+                </srcfileset>
+                <targetfileset file="${include}/${sdfmodule}.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.def" property="pack-sdf.available"/>
+            <antcall target="pack-sdf.helper"/>
+        </target>
+    
+        <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-pack-sdf"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.sdf"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-I"/>
+                <arg value="${syntax}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg line="${build.sdf.imports}"/>
+            </java>
+        </target>
+    
+        <target name="copy-sdf" if="externaldef">
+            <copy file="${externaldef}" tofile="${include}/${sdfmodule}.def" preservelastmodified="true"/>
+        </target>
+    
+        <target name="copy-jar" if="externaljar">
+            <copy file="${externaljar}" todir="${include}" preservelastmodified="true"/>
+        </target>
+    
+        <target name="rtg2sig" if="build.stratego.enabled" depends="sdf2rtg">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.rtg"/>
+                <targetfileset file="${include}/${sdfmodule}.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.str" property="rtg2sig.available"/>
+            <antcall target="rtg2sig.helper"/>
+        </target>
+    
+        <target name="rtg2sig.helper" unless="rtg2sig.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-rtg2sig"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.str"/>
+                <arg value="--module"/>
+                <arg value="${sdfmodule}"/>
+            </java>
+        </target>
+        
+        <target name="sdf2rtg" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}.rtg"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.rtg" property="sdf2rtg.available"/>
+            <antcall target="sdf2rtg.helper"/>
+        </target>
+    
+        <target name="sdf2rtg.helper" unless="sdf2rtg.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-sdf2rtg"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="--ignore-missing-cons"/>
+                <arg value="-Xnativepath"/>
+                <arg value="${build.strategoxt.sdf}"/>
+            </java>
+        </target>
+        
+        <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${syntax}/${sdfmodule}.generated.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.generated.pp.af"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
+        </target>
+    
+        <target name="ppgen.helper" unless="ppgen.available">
+            <!-- Any failures here are ignored; they are only a problem when imported from Stratego -->
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-ppgen"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+                <arg value="-t"/>
+            </java>
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-pp-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+                <arg value="-o"/>
+                <arg value="${syntax}/${sdfmodule}.generated.pp"/>
+            </java>
+        </target>
+    
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
+        
+        <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${syntax}/${sdfmodule}.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+            </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
+        </target>
+    
+        <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-parse-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.pp"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.pp.af"/>
+            </java>
+        </target>
+    
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+    
+        <!-- Aster to Stratego -->
+        <target name="stratego.aster">
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <pathconvert property="aster-input" setonempty="false" pathsep=" ">
+                <path><fileset dir="${basedir}" includes="*.astr"/></path>
+            </pathconvert>
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.astr"/>
+                </srcfileset>
+                <targetfileset file="${trans}/${strmodule}.rtree"/>
+            </dependset>
+            <condition property="aster-output.uptodate">
+                <and>
+                    <isset property="aster-output.available"/>
+                    <available file="${trans}/${strmodule}.rtree"/>
+                </and>
+            </condition>
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.uptodate"/>
+            <antcall target="stratego.aster.helper"/>
+        </target>
+    
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
+                <arg value="-i"/>
+                <fileset dir="${basedir}">
+                    <include name="**/*.astr"/>
+                </fileset>
+            </java>
+        </target>
+    
+        <!-- Stratego to Java interpreter -->
+        <target name="stratego.ctree" depends="rtg2sig">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${include}/${strmodule}.ctree"/>
+            </dependset>
+            <available file="${include}/${strmodule}.ctree" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputpath" value="${include}"/>
+                <param name="build.stratego.extraargs" value="-F"/>
+                <param name="build.stratego.extension" value="ctree"/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+    
+        <!-- Stratego to Java compiler -->
+        <target name="stratego.jar" depends="rtg2sig">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputpath" value="${src-gen}/trans"/>
+                <param name="build.stratego.extraargs" value="-la java-front"/>
+                <param name="build.stratego.extension" value="java"/>
+            </antcall>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="trans/**"/>
+                <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+        </target>
+            
+        <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans}/${strmodule}.str"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputpath}/${strmodule}.${build.stratego.extension}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
+                
+        <!-- Stratego to C-based native executable -->
+        <target name="stratego.c">
+            <antcall target="stratego.c.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/include"/>
+                <param name="build.stratego.extraargs" value=""/>
+                <param name="build.stratego.extension" value=""/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+        
+        <!-- Helper target for calling the stratego compiler -->
+        <target name="stratego.c.helper" depends="rtg2sig" if="build.stratego.enabled">
+            <apply executable="${build.strategoxt.stratego}/${build.stratego.compiler}" dest="${build.stratego.outputpath}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaldefimport}"/>
+                
+                <fileset file="${trans}/${strmodule}.str"/>
+                <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>
+            </apply>
+        </target>
+        
+        <target name="clean" description="clean up">
+            <delete dir="${build}"/>
+            <delete file="${src-gen}/trans/Main.java"/>
+        </target>
+    </project>
\ No newline at end of file

Added: experimental/meta-amb-suggestions/build.main.xml
===================================================================
--- experimental/meta-amb-suggestions/build.main.xml	                        (rev 0)
+++ experimental/meta-amb-suggestions/build.main.xml	2010-06-10 09:21:42 UTC (rev 20983)
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="Meta-amb-suggestions" default="all">
+        
+        <!-- Key input modules -->
+        <property name="sdfmodule" value="Stratego-Java-15"/>
+        <property name="esvmodule" value="Meta-amb-suggestions"/>
+        <property name="strmodule" value="meta_amb_suggestions"/>
+    
+        <!-- Project directories -->
+        <property name="trans" location="trans"/>
+        <property name="src-gen" location="editor/java"/>
+        <property name="syntax" location="syntax"/>
+        <property name="include" location="include"/>
+        <property name="lib" location="lib"/>
+        <property name="build" location="bin"/>
+        <property name="dist" location="bin/dist"/>
+        
+        <!-- Imports -->
+        <property name="build.sdf.imports" value=""/>
+        <property name="build.stratego.args" value="--library
+                        -I &quot;${trans}&quot; -I &quot;${basedir}&quot;
+                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm"/>
+        
+        <property name="externaldef" location="syntax/Stratego-Java-15.def"/>
+        <!-- External .def and .jar locations
+        <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+        <property name="externaljar" value="../lib.jar"/>
+        <property name="externaljarflags" value="-la org.lib"/>
+        -->
+    
+        <!-- Environment configuration for command-line builds -->
+        <condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
+            <isset property="eclipse.spoofaximp.nativeprefix"/>
+        </condition>
+        <property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin"/>
+    
+        <import file="build.generated.xml"/>
+    
+        <!-- Main target -->
+        <target name="all" depends="stratego.jar"/>
+    </project>

Added: experimental/meta-amb-suggestions/build.properties
===================================================================
--- experimental/meta-amb-suggestions/build.properties	                        (rev 0)
+++ experimental/meta-amb-suggestions/build.properties	2010-06-10 09:21:42 UTC (rev 20983)
@@ -0,0 +1,7 @@
+source.. = editor/java/
+output.. = bin/
+bin.includes = META-INF/,\
+               plugin.xml,\
+               include/,\
+               bin/,\
+               .

Added: experimental/meta-amb-suggestions/lib/editor-common.generated.str
===================================================================
--- experimental/meta-amb-suggestions/lib/editor-common.generated.str	                        (rev 0)
+++ experimental/meta-amb-suggestions/lib/editor-common.generated.str	2010-06-10 09:21:42 UTC (rev 20983)
@@ -0,0 +1,215 @@
+module lib/editor-common.generated
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-gpp
+
+strategies
+
+  parse-file = parse-meta_amb_suggestions-file
+  parse-meta_amb_suggestions-file =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(include/Meta-amb-suggestions.tbl)>
+    )
+
+  parse-string = parse-meta_amb_suggestions-string
+  parse-meta_amb_suggestions-string =
+    parse-string(
+      strsglr-report-parse-error
+    | <import-term(include/Meta-amb-suggestions.tbl)>
+    )
+  
+  parse-stream = parse-meta_amb_suggestions-stream
+  parse-meta_amb_suggestions-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(include/Meta-amb-suggestions.tbl)>
+    )
+
+  pp-meta_amb_suggestions-string =
+    ast2abox(|[<import-term(include/Meta-amb-suggestions.generated.pp.af)>,
+               <import-term(include/Meta-amb-suggestions.pp.af)>]);
+    box2text-string(|100)
+
+strategies
+  
+  /**
+   * Processes an import during semantic analysis.
+   * Ensures proper caching of files and prevents
+   * processing duplicate imports more than once.
+   *
+   * @param resolve-path  Resolves the filesystem path of this import
+   * @param parse-file    Parses a file (optionally removing definition bodies
+   *                      so only signatures are stored in the cache)
+   * @param record-declarations
+   *                      Performs semantic analysis on a tree
+   */
+  open-import(resolve-path, parse-file, record-declarations):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path       := <resolve-path> import;
+        cache-path := <import-cache-path> path;
+        if not(<IsImported> path) then
+          rules(
+            IsImported: path
+          );
+          if <is-newer> (cache-path, path) then
+            file := <ReadFromFile> cache-path
+          else
+            file := <parse-file> path;
+            if <file-exists> path then
+              // Only cache if on filesystem (e.g., ignore libstratego-lib)
+              <WriteToBinaryFile> (cache-path, file)
+            end        
+          end;
+          {| CurrentFile:
+            rules(CurrentFile := path);
+            <record-declarations> file
+          |}
+        end
+      end
+
+  open-wildcard-import(resolve-path, parse-file, record-declarations, is-source-file):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path := <resolve-path> import;
+        readdir;
+        list-loop(
+          if is-source-file then
+            <open-import(id, parse-file, record-declarations)>
+              $[[path]/[<id>]]
+          <+
+            try(?one-failed)
+          end
+        );
+        not(!one-failed)
+      end
+  
+  import-cache-path:
+    full-path -> cache-path
+    with
+      project-path := <project-path>;
+      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
+      full-path'   := <string-replace(|"/", "+"); string-replace(|"\\", "+"); string-replace(|":", "+")> full-path;
+      cache-path   := $[[cache-dir]/[full-path'].sig]
+
+  project-path = prim("SSL_EXT_projectpath")
+
+  is-newer:
+    (file1, file2) -> <id>
+    where
+      <gt> (<file-exists; modification-time> file1, <file-exists; modification-time> file2) 
+
+strategies
+  
+  editor-init =
+    // Ensure all dynamic rules are properly scoped
+    try(dr-scope-all-end);
+    dr-scope-all-start
+  
+  refresh-workspace-file:
+    path -> <prim("SSL_EXT_refreshresource", path)>
+
+strategies
+  
+  origin-term      = prim("SSL_EXT_origin_term", <id>)
+  origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-location  = prim("SSL_EXT_origin_location", <id>)
+  origin-line      = origin-location => (<id>, _, _, _)
+  origin-column    = origin-location => (_, <id>, _, _)
+  origin-strip     = prim("SSL_EXT_origin_strip", <id>)
+  origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+  
+  origin-surrounding-comments =
+    prim("SSL_EXT_origin_surrounding_comments", "Meta-amb-suggestions", <id>)
+    
+  origin-documentation-comment =
+    origin-surrounding-comments;
+    filter(string-as-chars(documentation-comment-chars));
+    concat-strings
+  
+  documentation-comment-chars:
+    ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
+  
+  origin-track-forced(s) =
+    !Some(<id>); all(s); ?Some(<id>)
+
+strategies
+
+  desugar-position(desugar|ast):
+    position -> position'
+    where
+      ast'  := <at-position(!<id>{MARKER()}|position)> ast;
+      ast'' := <topdown(repeat(preserve-annos({?x; desugar; not(?x)})))> ast';
+      position' := <position-of-term({?_{a*}; <one(?MARKER())> a*})> ast''
+   
+  at-position(s|position):
+    c#(t*) -> t'
+    where
+      !position => [i | position']
+    where
+      t' := c#(<at-index(at-position(s|position'))> (i, t*))
+
+  at-position(s|position):
+    t -> t'
+    where
+      !position => [];
+      t' := <s> t
+
+  position-of-term(is-term):
+    t -> []
+    where
+      is-term
+  
+  position-of-term(is-term):
+    _#(t*) -> <position-of-term(is-term|0)> t*
+  
+  position-of-term(is-term|start-index):
+    [t | t*] -> position
+    where
+      if i* := <position-of-term(is-term)> t then
+        position := [start-index | i*]
+      else
+        position := <position-of-term(is-term | <inc> start-index)> t*
+      end
+
+  term-at-position(|position):
+    t -> t'
+    where
+      at-position(?t'|position) 
+
+  parent-at-position(|position):
+    t -> t'
+    where
+      !position => [i, _];
+      t' := <subterm-at(|i)> t
+  
+  parent-at-position(|position):
+    t -> <parent-at-position(|position')> t'
+    where
+      !position => [i | position' @ [_, _ | _]];
+      t' := <subterm-at(|i)> t
+
+  subterm-at(|index):
+    _#(t*) -> <index(|<inc> index)> t*
+  
+signature constructors
+
+  COMPLETION : String -> Term
+  NOCONTEXT  : Term   -> Term
+  MARKER     : Term
+
+  // Below are copies of the signatures of the terms used in example
+  // trans/meta_amb_suggestions.str file. These definitions should also be automatically 
+  // generated in the imported include/Meta-amb-suggestions.str module. However,
+  // to ensure that the example transformation doesn't break when the
+  // syntax is changed, we also hard-coded them here.
+          
+  Module   : ID * List(Entity)   -> Module
+  Entity   : ID * List(Property) -> Entity
+  Property : ID * Type           -> Property
+  Type     : ID                  -> Type

Added: experimental/meta-amb-suggestions/plugin.xml
===================================================================
--- experimental/meta-amb-suggestions/plugin.xml	                        (rev 0)
+++ experimental/meta-amb-suggestions/plugin.xml	2010-06-10 09:21:42 UTC (rev 20983)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<?eclipse version="3.0"?>
+
+<plugin>
+       <extension point="org.eclipse.imp.runtime.languageDescription">
+          <language extensions="met" description="Meta-amb-suggestions" language="Meta-amb-suggestions" derivedFrom="DynamicRoot" validator="metaambsuggestions.MetaambsuggestionsValidator" validatorClass="metaambsuggestions.MetaambsuggestionsValidator"></language>
+       </extension>
+       <extension id="metaambsuggestions.parser" name="Meta-amb-suggestions Parser" point="org.eclipse.imp.runtime.parser">
+          <parser class="metaambsuggestions.MetaambsuggestionsParseController" language="Meta-amb-suggestions">
+          </parser>
+       </extension>    
+    </plugin>
\ No newline at end of file

Added: experimental/meta-amb-suggestions/test/example.met
===================================================================
--- experimental/meta-amb-suggestions/test/example.met	                        (rev 0)
+++ experimental/meta-amb-suggestions/test/example.met	2010-06-10 09:21:42 UTC (rev 20983)
@@ -0,0 +1,18 @@
+module example
+
+// Example "Meta-amb-suggestions" program (see syntax/Meta-amb-suggestions.sdf for the grammar)
+
+entity User {
+  name     : String
+  password : String
+  homepage : URL
+}
+
+entity BlogPosting {
+  poster : User
+  body   : String
+}
+
+entity URL {
+  location : String
+}
\ No newline at end of file

Added: experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str
===================================================================
--- experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str	                        (rev 0)
+++ experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str	2010-06-10 09:21:42 UTC (rev 20983)
@@ -0,0 +1,104 @@
+module meta_amb_suggestions
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-aterm
+  libstratego-xtc
+  stratego-context
+
+signature constructors
+  
+  parse-table : Version * StartState * List(Label) * List(State) * List(Priority) -> parse-table
+  parse-tree  : Tree * Version -> parse-tree
+
+rules
+  
+  main =
+    xtc-io-wrap(
+      id
+    ,
+      with(
+        table := <import-term(include/Stratego-Java-15.tbl)>;
+        <register-prod(|"Stratego-Java-15")> table
+      );
+      parse-xtc-file-pt-report-errors(|table, None());
+      rules(
+        LanguageContext := IN_STRATEGO
+      );
+      resolve-ambs-top
+    )
+  
+  register-table(|lang-name):
+    parse-table(version, startstate, labels, states, priorities) -> <id>
+    with
+      <IsRegisteredTable> lang-name
+    <+
+      rules(
+        IsRegisteredTable: lang-name
+      );
+      <alltd(register-prod(|lang-name))> labels
+   
+  register-prod(|lang-name):
+    prod(lhs, sort(sort2), a*) -> <id>
+    where
+      cons  := <one(?term(cons(<id>)))> a*;
+      sort1 := <one(?sort(<id>))> lhs;
+      switch !cons
+        case "ToMetaExpr":
+          rules(
+            ToMetaExpr: (lang-name, sort1, sort2) -> lhs
+          )
+        case "FromMetaExpr":
+          rules(
+            FromMetaExpr: (lang-name, sort1, sort2) -> lhs
+          )
+      end
+
+  resolve-ambs-top:
+    parse-tree(tree, version) -> (tree', amb-error*, amb-warning*)
+    with
+      {| AmbErrors, AmbWarnings:
+        tree'        := <resolve-ambs> tree;
+        amb-error*   := <bagof-AmbErrors>;
+        amb-warning* := <bagof-AmbWarnings>
+      |}
+  
+  resolve-ambs:
+    appl @ appl(prod @ prod(_, _, a*), arg*) -> appl(prod, arg'*)
+    with
+      cons := <one(?term(cons(<id>)))> a*;
+      arg'* := <resolve-ambs-change-context(|cons)> arg*
+    <+
+      arg'* := <all(resolve-ambs)> arg*
+  
+  resolve-ambs:
+    amb @ amb(a*) -> amb'
+    with
+      if all(<is-meta-expr-or-whatever-im-looking-for> a*) then 
+        if LanguageContext => IN_BUILD(); <is-decidable-build-amb> amb then
+          if <all(is-to-meta-expr-like)> a* then
+            rules(AmbWarnings :+= (amb, <amb-suggestion> amb))
+          end;
+          amb' := <to-runtime-resolved-amb> amb
+        else
+          rules(AmbErrors :+= (amb, <amb-suggestion> amb));
+          amb' := amb
+        end
+      else
+        amb' := amb
+      end
+
+  is-meta-expr-or-whatever-im-looking-for:
+    _ -> <TODO>
+
+  amb-suggestion:
+    amb(_) -> <TODO>
+
+  is-decidable-build-amb:
+    amb(_) -> <TODO>
+  
+  to-runtime-resolved-amb:
+    amb(_) -> <TODO>
+  
+  is-to-meta-expr-like = TODO
\ No newline at end of file

Added: experimental/meta-amb-suggestions/trans/stratego-context.str
===================================================================
--- experimental/meta-amb-suggestions/trans/stratego-context.str	                        (rev 0)
+++ experimental/meta-amb-suggestions/trans/stratego-context.str	2010-06-10 09:21:42 UTC (rev 20983)
@@ -0,0 +1,138 @@
+module stratego-context
+
+imports
+  libstratego-lib
+  meta_amb_suggestions
+
+overlays
+  
+  // Values for dynamic rule LanguageContext
+  IN_BUILD      = 1
+  IN_META       = 2
+  IN_META_BUILD = 3
+  IN_STRATEGO   = 4
+  IN_OTHER      = 5
+  
+rules // Transition to IN_BUILD
+  
+  transition-to-build(s) =
+    {| LanguageContext:

(155 diff lines omitted)

From L.C.L.Kats at tudelft.nl  Thu Jun 10 11:22:06 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 10 Jun 2010 09:22:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20984 - LennartKats -
	experimental/meta-amb-suggestions
Message-ID: <201006100922.o5A9M6v4007642@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-10 09:22:06 +0000 (Thu, 10 Jun 2010)
New Revision: 20984

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20984&view=rev

Removed:
   experimental/meta-amb-suggestions/.cache/

Log:
-cache

Changes:


From L.C.L.Kats at tudelft.nl  Thu Jun 10 11:56:14 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 10 Jun 2010 09:56:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20985 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.stratego/trans
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <201006100956.o5A9uE93007989@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-10 09:56:14 +0000 (Thu, 10 Jun 2010)
New Revision: 20985

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20985&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java

Log:
- Semantic errors now disappear after a fatal parse error
- Stratego editor now considers congruences for overlays
- Added a line to refresh the "lib" dir in case concrete syntax is generated there
  (as suggested by Guido)


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-06-10 09:22:06 UTC (rev 20984)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-06-10 09:56:14 UTC (rev 20985)
@@ -178,7 +178,15 @@
   declare-globals:
     Overlay(x, t, d) -> Overlay(x', t, d)
     with
-      x' := x{<declare-definition>}
+      cookie := <redeclare-definition>;
+      x'     := x{cookie}
+    with
+      // Declare congruence
+      (x, n) := <signature-of>;
+      sig'   := (x, n, 0);
+      rules(
+        DeclareCookie: sig' -> cookie
+      )
 
   open-import(to-signatures):
     full-path -> ast

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-06-10 09:22:06 UTC (rev 20984)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-06-10 09:56:14 UTC (rev 20985)
@@ -112,6 +112,7 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir" />
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            <eclipse.refreshLocal resource="${projectdir}/lib" depth="infinite" />
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite" />
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite" />
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite" />

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	2010-06-10 09:22:06 UTC (rev 20984)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	2010-06-10 09:56:14 UTC (rev 20985)
@@ -91,7 +91,7 @@
 	
 	private final SGLRParseController source;
 	
-	private boolean isRecoveryAvailable = true;
+	private volatile boolean isRecoveryFailed = true;
 	
 	private int offset;
 	
@@ -115,10 +115,14 @@
 	 * Informs the parse error handler that recovery is unavailable.
 	 * This information is reflected in any parse error messages.
 	 */
-	public void setRecoveryAvailable(boolean recoveryAvailable) {
-		this.isRecoveryAvailable = recoveryAvailable;
+	public void setRecoveryFailed(boolean recoveryFailed) {
+		this.isRecoveryFailed = recoveryFailed;
 	}
 	
+	public boolean isRecoveryFailed() {
+		return isRecoveryFailed;
+	}
+	
 	/**
 	 * Sets whether to report the next batch of delayed errors directly. 
 	 */
@@ -229,7 +233,7 @@
 			rushNextUpdate = false;
 			job.schedule(0);
 		} else {
-			job.schedule((long) (PARSE_ERROR_DELAY * (isRecoveryAvailable ? 1 : 1.5)));
+			job.schedule((long) (PARSE_ERROR_DELAY * (isRecoveryFailed ? 1.5 : 1)));
 		}
 	}
 
@@ -503,8 +507,8 @@
 
 	private String getErrorExplanation() {
 		final String message2;
-		if (!isRecoveryAvailable) {
-			message2 = " (recovery unavailable)";
+		if (!isRecoveryFailed) {
+			message2 = " (recovery failed)";
 		} else if (!source.getParser().getParseTable().hasRecovers()) {
 			message2 = " (no recovery rules in parse table)";
 		} else {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-06-10 09:22:06 UTC (rev 20984)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-06-10 09:56:14 UTC (rev 20985)
@@ -273,7 +273,7 @@
 			RootAstNode ast = parser.internalImplode(asfix);
 
 			errorHandler.clearErrors();
-			errorHandler.setRecoveryAvailable(true);
+			errorHandler.setRecoveryFailed(false);
 			errorHandler.gatherNonFatalErrors(originalInputChars, parser.getTokenizer(), asfix);
 			
 			currentAst = ast;
@@ -408,7 +408,7 @@
 
 	private void reportException(ParseErrorHandler errorHandler, Exception e) {
 		errorHandler.clearErrors();
-		errorHandler.setRecoveryAvailable(false);
+		errorHandler.setRecoveryFailed(true);
 		errorHandler.reportError(parser.getTokenizer(), e);
 	}
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-10 09:22:06 UTC (rev 20984)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-10 09:56:14 UTC (rev 20985)
@@ -266,11 +266,9 @@
 	public void update(IParseController parseController, IProgressMonitor monitor) {
 		isUpdateStarted = true;
 		IStrategoAstNode ast = (IStrategoAstNode) parseController.getCurrentAst();
-		if (ast == null || ast.getConstructor() == null)
-			return;
-		
-		if (feedbackFunction == null) {
-			messages.clearMarkers(ast.getResource());
+		if (ast == null || ast.getConstructor() == null || feedbackFunction == null
+				|| isRecoveryFailed(parseController)) {
+			messages.clearMarkers(((SGLRParseController) parseController).getResource());
 			messages.commitDeletions();
 			return;
 		}
@@ -304,6 +302,11 @@
 		}
 	}
 
+	private static boolean isRecoveryFailed(IParseController parseController) {
+		return parseController instanceof SGLRParseController
+				&& ((SGLRParseController) parseController).getErrorHandler().isRecoveryFailed();
+	}
+
 	@Deprecated
 	@SuppressWarnings("unused")
 	private void processEditorRecolorEvents(IParseController parseController) {


From L.C.L.Kats at tudelft.nl  Thu Jun 10 11:56:27 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 10 Jun 2010 09:56:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20986 - LennartKats -
	strc-java/trunk/java/runtime/org/strategoxt/lang
Message-ID: <201006100956.o5A9uROM007991@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-10 09:56:27 +0000 (Thu, 10 Jun 2010)
New Revision: 20986

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20986&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/lang/ImportTerm.java

Log:


Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/ImportTerm.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/ImportTerm.java	2010-06-10 09:56:14 UTC (rev 20985)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/ImportTerm.java	2010-06-10 09:56:27 UTC (rev 20986)
@@ -7,6 +7,7 @@
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipFile;
 
+import org.spoofax.interpreter.adapter.aterm.ATermConverter;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;
 
@@ -53,6 +54,9 @@
 	
 	@Override
 	protected IStrategoTerm init() {
+		if (aterm != null)
+			return new ATermConverter(aterm.getFactory(), factory, true).convert(aterm);
+		
 		InputStream stream = openStream();
 		try {
 			return factory.parseFromStream(stream);


From g.h.wachsmuth at tudelft.nl  Thu Jun 10 16:22:18 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 10 Jun 2010 14:22:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20987 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses
Message-ID: <201006101422.o5AEMIiT012324@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-10 14:22:18 +0000 (Thu, 10 Jun 2010)
New Revision: 20987

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20987&view=rev

Modified:
   lenses/trunk/Strategic Lenses/build.main.xml

Log:
automatic refresh for lib directory

Changes:

Modified: lenses/trunk/Strategic Lenses/build.main.xml
===================================================================
--- lenses/trunk/Strategic Lenses/build.main.xml	2010-06-10 09:56:27 UTC (rev 20986)
+++ lenses/trunk/Strategic Lenses/build.main.xml	2010-06-10 14:22:18 UTC (rev 20987)
@@ -39,6 +39,8 @@
     
         <!-- Main target -->
         <target name="all" depends="meta-syntax, spoofaximp.default"/>
+		<eclipse.convertPath fileSystemPath="${basedir}" property="projectdir" />
+		<eclipse.refreshLocal resource="${projectdir}/lib" depth="infinite" />
 		<target name="meta-syntax">
 	     <antcall target="sdf2table">
 	           <param name="sdfmodule" value="Stratego-StrategicLenses"/>
@@ -46,5 +48,4 @@
 	               <param name="include" value="${lib}"/>
 	       </antcall>
 	   </target>
-
 </project>
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Thu Jun 10 16:23:41 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 10 Jun 2010 14:23:41 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20988 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/trans/analysis
Message-ID: <201006101423.o5AENfht012331@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-10 14:23:41 +0000 (Thu, 10 Jun 2010)
New Revision: 20988

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20988&view=rev

Modified:
   lenses/trunk/Strategic Lenses/trans/analysis/tests.str

Log:
fixed bugs that prevented tests from being executed

Changes:

Modified: lenses/trunk/Strategic Lenses/trans/analysis/tests.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/analysis/tests.str	2010-06-10 14:22:18 UTC (rev 20987)
+++ lenses/trunk/Strategic Lenses/trans/analysis/tests.str	2010-06-10 14:23:41 UTC (rev 20988)
@@ -10,77 +10,79 @@
 	test-error: |[ lens lens with tests ]| -> errors 
 		where 
 			<desugar-all> lens => dlens ;
-			<mapconcat(test-error(|dlens))> tests => errors 
+			<mapconcat(test-error(|dlens) <+ ![])> tests => errors 
 			
-	test-error(|l): Success(t) -> error 
+	test-error(|l): Success(t) -> [error] 
 		where
-			<run-test> (l, t) => error 
-	
-	test-error(|l): Failure(t) -> (t, $[Test yields no error.]) 
+			<run-test> (l, t) => error
+			
+	test-error(|l): Failure(t) -> [(t, $[Test yields no error.])] 
 		where
 			not(<run-test> (l, t))
+	
+	run-test = get-fails <+ get-error <+ put-fails <+ put-error <+ create-fails <+ create-error
 					
-	run-test: (lens, |[cmodel > get > amodel ]|) -> (amodel, $[Test for get fails.])
+	get-fails: (lens, |[cmodel > get > amodel ]|) -> (amodel, $[Test for get fails.])
 		where
 			<implode> cmodel 	=> Ast(ast) ;
-			not (<get> (lens, ast))
-					
-	run-test: (lens, |[cmodel > get > amodel ]|) -> (amodel, $[Test for get yields [<pp-safe> failure].]) 
+			not (<get> (lens, ast)) 
+			
+	get-error: (lens, |[cmodel > get > amodel ]|) -> (amodel, $[Test for get yields [<pp-safe> failure].]) 
 		where
 			<implode> cmodel 	=> Ast(cast) ;
 			<implode> amodel 	=> Ast(aast) ;
 			<get(|lens)> cast => failure ;
 			not (<equal> (aast, failure)) 
 			
-	run-test: (lens, |[cmodel < get put > amodel ]|) -> (pos, error) 
+	get-error: (lens, |[cmodel < get put > amodel ]|) -> (pos, error) 
 		where
 			<run-test> (lens, |[cmodel > get > amodel ]|) => (pos, error)
 	
-	run-test: (lens, |[cmodel < get put > amodel ]|) -> (cmodel, $[Test for put fails.])
+	put-fails: (lens, |[cmodel < get put > amodel ]|) -> (cmodel, $[Test for put fails.])
 	 	where
 			<implode> cmodel 	=> Ast(cast) ;
 			<implode> amodel 	=> Ast(aast) ;
 			not ( <put(|lens)> (aast, cast))
 					
-	run-test: (lens, |[cmodel < get put > amodel ]|) -> (cmodel, $[Test for put yields [<pp-safe> failure].]) 
+	put-error: (lens, |[cmodel < get put > amodel ]|) -> (cmodel, $[Test for put yields [<pp-safe> failure].]) 
 		where
 			<implode> cmodel 	=> Ast(cast) ;
 			<implode> amodel 	=> Ast(aast) ;
 			 <put(|lens)> (aast, cast) => failure ;
 			not (<equal> (cast, failure))
 						
-	run-test:	(lens, |[amodel > create > cmodel ]|) -> (cmodel, $[Test for create fails.]) 
+	create-fails:	(lens, |[amodel > create > cmodel ]|) -> (cmodel, $[Test for create fails.]) 
 		where
 			<implode> amodel 	=> Ast(aast) ;
 			not ( <create(|lens)> aast )
 					
-	run-test:	(lens, |[amodel > create > cmodel ]|) -> (cmodel, $[Test for create yields [<pp-safe> failure].]) 
+	create-error:	(lens, |[amodel > create > cmodel ]|) -> (cmodel, $[Test for create yields [<pp-safe> failure].]) 
 		where
 			<implode> cmodel 	=> Ast(cast) ;
 			<implode> amodel 	=> Ast(aast) ;
 			<create(|lens)> aast => failure ;
 			not (<equal> (cast, failure))
 	
-	run-test: (lens, |[amodel < create get > cmodel ]|) -> (pos, error) 
+	get-error: (lens, |[amodel < create get > cmodel ]|) -> (pos, error) 
 		where 
 			<run-test> (lens, |[cmodel > get > amodel ]|) => (pos, error)	
 							
-	run-test: (lens, |[amodel < create get > cmodel ]|) -> (pos, error)
+	create-error: (lens, |[amodel < create get > cmodel ]|) -> (pos, error)
 		 where 
 			<run-test> (lens, |[amodel > create > cmodel ]|) => (pos, error)	
 
 	
-	run-test:	(lens,|[cmodel1 > get > amodel1 > update > amodel2 > put > cmodel2 ]|) -> (pos, error)
+	get-error:	(lens,|[cmodel1 > get > amodel1 > update > amodel2 > put > cmodel2 ]|) -> (pos, error)
 		where
 			<run-test> (lens, |[cmodel1 > get > amodel1]|) => (pos, error)
 	
-	run-test: (lens, |[cmodel1 > get > amodel1 > update > amodel2 > put > cmodel2 ]|) -> (cmodel2, $[Test for put fails.])
+	put-fails: (lens, |[cmodel1 > get > amodel1 > update > amodel2 > put > cmodel2 ]|) -> (cmodel2, $[Test for put fails.])
 	 	where
 			<implode> cmodel1 	=> Ast(cast) ;
 			<implode> amodel2 	=> Ast(aast) ;
 			not ( <put(|lens)> (aast, cast))
 					
-	run-test: (lens, |[cmodel1 > get > amodel1 > update > amodel2 > put > cmodel2 ]|) -> (cmodel2, $[Test for put yields [<pp-safe> failure].]) 
+	put-error: (lens, |[cmodel1 > get > amodel1 > update > amodel2 > put > cmodel2 ]|) -> (cmodel2, $[Test for put yields [<pp-safe> failure].]) 
 		where
 			<implode> cmodel1 	=> Ast(cast1) ;
 			<implode> amodel2 	=> Ast(aast) ;


From g.h.wachsmuth at tudelft.nl  Thu Jun 10 17:49:37 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 10 Jun 2010 15:49:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20989 - GuidoWachsmuth
	- in lenses/trunk/Strategic Lenses: syntax trans/helper
	trans/semantics
Message-ID: <201006101549.o5AFnbqf013849@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-10 15:49:36 +0000 (Thu, 10 Jun 2010)
New Revision: 20989

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20989&view=rev

Modified:
   lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf
   lenses/trunk/Strategic Lenses/trans/helper/indices.str
   lenses/trunk/Strategic Lenses/trans/semantics/desugar.str
   lenses/trunk/Strategic Lenses/trans/semantics/semantics.str

Log:
bug fixing

Changes:

Modified: lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf	2010-06-10 14:23:41 UTC (rev 20988)
+++ lenses/trunk/Strategic Lenses/syntax/Stratego-StrategicLenses.sdf	2010-06-10 15:49:36 UTC (rev 20989)
@@ -20,7 +20,7 @@
 		"|[" FBranch "]|" 		-> Term [[StrategoHost]] {cons("ToMetaExpr")}
 		"|[" Pattern "]|" 		-> Term [[StrategoHost]] {cons("ToMetaExpr")}
 		"|[" TestCase "]|" 		-> Term [[StrategoHost]] {cons("ToMetaExpr")}
-		"|[" Test "]|" 			-> Term [[StrategoHost]] {cons("ToMetaExpr")}
+		"|[" SimpleTest "]|" 	-> Term [[StrategoHost]] {cons("ToMetaExpr")}
 		"|[" TypeDef "]|" 		-> Term [[StrategoHost]] {cons("ToMetaExpr")}
 		"|[" LensDef "]|" 		-> Term [[StrategoHost]] {cons("ToMetaExpr")}
 

Modified: lenses/trunk/Strategic Lenses/trans/helper/indices.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/helper/indices.str	2010-06-10 14:23:41 UTC (rev 20988)
+++ lenses/trunk/Strategic Lenses/trans/helper/indices.str	2010-06-10 15:49:36 UTC (rev 20989)
@@ -1,6 +1,7 @@
 module helper/indices
 
 imports
+	include/StrategicLenses
 	helper/tuples
 
 rules 
@@ -24,7 +25,7 @@
 		indices-to-list(|e*) ; list-to-tuple 
 
 rules
-	indices-to-tuple: (is, es) -> <indices-to-tuple(|es)> is
+	indices-to-tuple: (Indices(is), es) -> <indices-to-tuple(|es)> is
 	
 rules // Child Selection/Update
 	select-child:	(i, c*)		-> <index> (<string-to-int> i, c*) 
@@ -35,6 +36,6 @@
 	update-child: 		((i, u), c*) 	-> <update-child> (i, u, c*) //where <debug> (c*, (i, u))
 
 rules
-	select-children: 	(i*, c*) 		-> <map(select-child(|c*))> i*
-	update-children: 	(i*, u*, c*)	-> <foldr(!c*, update-child)> <zip> (i*, u*)
+	select-children: 	(Indices(i*), c*) 		-> <map(select-child(|c*))> i*
+	update-children: 	(Indices(i*), u*, c*)	-> <foldr(!c*, update-child)> <zip> (i*, u*)
 	
\ No newline at end of file

Modified: lenses/trunk/Strategic Lenses/trans/semantics/desugar.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/semantics/desugar.str	2010-06-10 14:23:41 UTC (rev 20988)
+++ lenses/trunk/Strategic Lenses/trans/semantics/desugar.str	2010-06-10 15:49:36 UTC (rev 20989)
@@ -93,20 +93,24 @@
 			where
 				<vars> cpattern 						=> cbranchvars ;
 				<vars> apattern 						=> abranchvars ;
-				<map(get-index(|cvars))> cbranchvars 	=> cindices ;
-				<map(get-index(|avars))> abranchvars	=> aindices
+				<map(get-index(|cvars))> cbranchvars 	=> cis ;
+				!Indices(cis) 							=> cindices ;
+				<map(get-index(|avars))> abranchvars	=> ais ;
+				!Indices(ais) 							=> aindices
 
 rules // helper for single variable vs. tuples
 	
 	pattern: 
-		[var] -> |[ var ]| 
+		Vars([var]) -> |[ var ]| 
 		
 	pattern: 
-		vars@[_, _|_]	-> |[ (vars) ]| 
+		vars at Vars([_, _|_])	-> |[ (vars) ]| 
 	
 	vars: 
 		|[ var ]| -> [var]
 		
 	vars: 
-		|[ (vars) ]| -> vars
+		|[ (vars) ]| -> rvars
+			where
+				!vars => Vars(rvars)
 	

Modified: lenses/trunk/Strategic Lenses/trans/semantics/semantics.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/semantics/semantics.str	2010-06-10 14:23:41 UTC (rev 20988)
+++ lenses/trunk/Strategic Lenses/trans/semantics/semantics.str	2010-06-10 15:49:36 UTC (rev 20989)
@@ -83,7 +83,8 @@
 	create:	(|[ select indices cmodel ]|, a) -> c		
 				where
 					<tuple-to-list> a 					=> as ;
-					<tuple-to-list> cmodel 				=> ds ;
+					!cmodel								=> Ast(default) ;
+					<tuple-to-list> default				=> ds ;
 					<update-children> (indices, as, ds) => cs ;
 					<list-to-tuple> cs	 				=> c
 					 
@@ -118,7 +119,8 @@
 							<indices-to-tuple> (cindices, cs) 	=> c ;
 							<get> (lens, c)						=> a ;
 							<tuple-to-list> a					=> as ;
-							<zip> (aindices, as)				=> dict
+							!aindices							=> Indices(ais) ;
+							<zip> (ais, as)						=> dict
 				
 	bput(|as, cs):	|[ cindices < lens > aindices ]| -> dict
 						where
@@ -126,14 +128,16 @@
 							<indices-to-tuple> (cindices, cs)	=> c ;
 							<put> (lens, a, c) 					=> c' ;
 							<tuple-to-list> c'					=> cs' ;
-							<zip> (cindices, cs')				=> dict
+							!cindices							=> Indices(cis) ;
+							<zip> (cis, cs')					=> dict
 						
 	bcreate(|as):	|[ cindices < lens > aindices ]| -> dict
 						where
 							<indices-to-tuple> (aindices, as)	=> a ;
 							<create> (lens, a) 					=> c ;
 							<tuple-to-list> c					=> cs ;
-							<zip> (cindices, cs)				=> dict
+							!cindices							=> Indices(cis) ;
+							<zip> (cis, cs)						=> dict
 
 rules // map
 	get:	(|[ map lens ]|, cs) -> as 
@@ -159,7 +163,28 @@
 				<take(|nc) <+ id> as	=> as';
 				<take(|na) <+ id> cs	=> cs';
 				<drop(|nc) <+ ![]> as	=> rs 
-				
+
+rules // map with keys
+	get:	(|[ map lens1 with key lens2 ]|, cs) -> as 
+				where
+					<get> (|[ map lens1 ]|, cs) => as
+		
+	put:	(|[ map lens1 with key lens2 ]|, as, cs)	-> cs'
+				where
+					<map(get(||[ lens1 ; lens2 ]|))> cs => keys ;
+					<zip> (keys, cs)					=> dict ;
+					<map(put-by-key(|lens2, dict))> as	=> cs' 
+					 
+	create:	(|[ map lens1 with key lens2 ]|, as)	-> cs 
+				where
+					<create> (|[ map lens1 ]|, as) => cs
+	
+	put-by-key(|lens, dict):	a -> c
+									where
+										<get> (lens, a) 		=> key ;
+										<lookup> (key, dict) 	=> oldc 
+											<	<put> (lens, a, oldc)	=> c	
+											+	<create> (lens, a) 		=> c
 rules // User-defined
 	get: 	(LensRef(n), c)	-> a 
 				where


From g.h.wachsmuth at tudelft.nl  Thu Jun 10 17:49:56 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 10 Jun 2010 15:49:56 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20990 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/trans/analysis
Message-ID: <201006101549.o5AFnuja013851@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-10 15:49:56 +0000 (Thu, 10 Jun 2010)
New Revision: 20990

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20990&view=rev

Modified:
   lenses/trunk/Strategic Lenses/trans/analysis/typecheck.str

Log:


Changes:

Modified: lenses/trunk/Strategic Lenses/trans/analysis/typecheck.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/analysis/typecheck.str	2010-06-10 15:49:36 UTC (rev 20989)
+++ lenses/trunk/Strategic Lenses/trans/analysis/typecheck.str	2010-06-10 15:49:56 UTC (rev 20990)
@@ -81,7 +81,7 @@
 			<zip> (ci, tcs) => tc ;
 			<zip> (ai, tas) => ta
 	
-	type-of: Map(l) -> (Generic("List", tc), Generic("List", ta))
+	type-of: Map(l, _) -> (Generic("List", tc), Generic("List", ta))
 		where
 			<type-of> l => (tc, ta)
 				


From g.h.wachsmuth at tudelft.nl  Thu Jun 10 17:50:25 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 10 Jun 2010 15:50:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20991 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/test
Message-ID: <201006101550.o5AFoPRg013865@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-10 15:50:25 +0000 (Thu, 10 Jun 2010)
New Revision: 20991

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20991&view=rev

Modified:
   lenses/trunk/Strategic Lenses/test/Outline.lns

Log:
more tests

Changes:

Modified: lenses/trunk/Strategic Lenses/test/Outline.lns
===================================================================
--- lenses/trunk/Strategic Lenses/test/Outline.lns	2010-06-10 15:49:56 UTC (rev 20990)
+++ lenses/trunk/Strategic Lenses/test/Outline.lns	2010-06-10 15:50:25 UTC (rev 20991)
@@ -2,8 +2,12 @@
 
 signature constructors
 
-a: A -> B
+Property: Id * Type -> Property
+Property2: Id * Type2 -> Property
 
+: Property -> Entity
+: Property2 -> Entity
+
 lenses
 	Property < outlineProperty > OutlineProperty :=  
 		select Property(1) p: int ; plunge OutlineProperty
@@ -11,11 +15,11 @@
 tests
 	
 	lens outlineProperty with
-	
+	 
 		p:e 
 			< get put >
-		+-p
-
+		+-p 
+		
 		+-q
 			> create >
 		q: int
@@ -39,7 +43,7 @@
 
 	lens outlineEntity with
 	
-		entity e {p: e q: e} 
+		entity e {p: e q: e}
 			< get put >
 		+e
 		+-p
@@ -63,7 +67,20 @@
 		+-r
 			> put > 	
 		entity e {p: e r: e}	
+		
+		
+		entity e2 {p1: e1} 
+			> get > 
+		+e2
+		+-p1
+			> update > 
+		+e2
+		+-p2
+		+-p5
+			> put > 
+		entity e2 {p2: e1 p5: int} 
 
+
 lenses
 	Module < outlineModule > Outline :=
 		fork Module(n, es) < > Outline(n, es)
@@ -107,34 +124,21 @@
  	lens outlineModule with
 	
 		module m 
-			entity e1 {p1: e1 p2: e2}
-			entity e2 {p1: e1 p2: e2} 
+			entity e2 {p1: e1} 
 		
 		> get > 
 		
 		m
-		+e1
-		+-p1
-		+-p2
 		+e2
 		+-p1
-		+-p2
 		
 		> update > 
 		
 		mm
-		+e1
-		+-p1
-		+-p3
 		+e2
 		+-p2
-		+-p4
-		+-p5
 		
 		> put > 
 		
-		module mm 
-			entity e1 {p1: e1 p3: e2}
-			entity e2 {p2: e1 p4: e2 p5: int} 
-			
-		
\ No newline at end of file
+		module mm
+			entity e2 {p2: e1} 


From g.h.wachsmuth at tudelft.nl  Thu Jun 10 23:28:57 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 10 Jun 2010 21:28:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20992 - GuidoWachsmuth
	- in lenses/trunk/Strategic Lenses: test trans/semantics
Message-ID: <201006102128.o5ALSv4k018034@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-10 21:28:57 +0000 (Thu, 10 Jun 2010)
New Revision: 20992

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20992&view=rev

Modified:
   lenses/trunk/Strategic Lenses/test/Map.lns
   lenses/trunk/Strategic Lenses/trans/semantics/semantics.str

Log:
added a new lens: map <lens1> with key <lens2> 
- uses the second lens to derive keys for the elements in the abstract lists
- get and create work like the ordinary map
- during the put, keys are used to detect moves
- elements with new keys are put back through lens1 from left to right with unused old elements
- if no old element is left, create of lens1 is used

Changes:

Modified: lenses/trunk/Strategic Lenses/test/Map.lns
===================================================================
--- lenses/trunk/Strategic Lenses/test/Map.lns	2010-06-10 15:50:25 UTC (rev 20991)
+++ lenses/trunk/Strategic Lenses/test/Map.lns	2010-06-10 21:28:57 UTC (rev 20992)
@@ -2,9 +2,11 @@
 
 tests
 
-	lens map id with
+	lens map select 1 ast (1, d) with key id with
 	
-		ast [a, b]
+		// insert at end
+		
+		ast [(a, e1), (b, e2)]
 		 
 			> get >
 			
@@ -16,9 +18,28 @@
 		
 			> put >
 			
-		ast [a, b, c]
+		ast [(a, e1), (b, e2), (c, d)]
+
+
+		// insert in between
 		
+		ast [(a, e1), (b, e2)]
+		 
+			> get >
+			
 		ast [a, b]
+		
+			> update >
+			
+		ast [a, c, b]
+		
+			> put >
+			
+		ast [(a, e1), (c, d), (b, e2)]
+
+
+		// swap positions
+		ast [(a, e1), (b, e2)]
 		 
 			> get >
 			
@@ -26,8 +47,53 @@
 		
 			> update >
 			
-		ast [a]
+		ast [b, a]
 		
 			> put >
 			
-		ast [a]
\ No newline at end of file
+		ast [(b, e2), (a, e1)]
+		
+		// rename first
+		ast [(a, e1), (b, e2)]
+		 
+			> get >
+			
+		ast [a, b]
+		
+			> update >
+			
+		ast [r, b]
+		
+			> put >
+			
+		ast [(r, e1), (b, e2)]
+		
+		// rename second
+		ast [(a, e1), (b, e2)]
+		 
+			> get >
+			
+		ast [a, b]
+		
+			> update >
+			
+		ast [a, r]
+		
+			> put >
+			
+		ast [(a, e1), (r, e2)]
+
+		// swapping, renaming, and insertion
+		ast [(a, e1), (b, e2), (c, e3)]
+		
+			> get >
+		
+		ast [a, b, c]
+		
+			> update >
+			
+		ast [c, r, n, a]
+		
+			> put >
+		
+		ast [(c, e3), (r, e2), (n, d), (a, e1)]	
\ No newline at end of file

Modified: lenses/trunk/Strategic Lenses/trans/semantics/semantics.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/semantics/semantics.str	2010-06-10 15:50:25 UTC (rev 20991)
+++ lenses/trunk/Strategic Lenses/trans/semantics/semantics.str	2010-06-10 21:28:57 UTC (rev 20992)
@@ -171,20 +171,29 @@
 		
 	put:	(|[ map lens1 with key lens2 ]|, as, cs)	-> cs'
 				where
-					<map(get(||[ lens1 ; lens2 ]|))> cs => keys ;
-					<zip> (keys, cs)					=> dict ;
-					<map(put-by-key(|lens2, dict))> as	=> cs' 
+					<map(get(||[ lens1 ; lens2 ]|))> cs 		=> ckeys ;
+					<map(get(||[ lens2 ]|))> as 				=> akeys ;
+					<zip> (ckeys, cs)							=> dict ;
+					<diff> (ckeys, akeys)						=> missing ;
+					<diff> (akeys, ckeys)						=> new ;
+					<match-length> (missing, new)				=> (mkeys, nkeys, _) ;
+					<zip> (nkeys, mkeys)						=> update ;
+					<map(put-by-key(|lens1, dict, update))> as	=> cs' 
 					 
 	create:	(|[ map lens1 with key lens2 ]|, as)	-> cs 
 				where
 					<create> (|[ map lens1 ]|, as) => cs
 	
-	put-by-key(|lens, dict):	a -> c
-									where
-										<get> (lens, a) 		=> key ;
-										<lookup> (key, dict) 	=> oldc 
-											<	<put> (lens, a, oldc)	=> c	
-											+	<create> (lens, a) 		=> c
+	put-by-key(|lens, dict, update):	a -> c
+											where
+												<get> (lens, a) 		=> key 
+											where 
+												<lookup> (key, dict) 	=> oldc 
+													<	<put> (lens, a, oldc)	=> c	
+													+	<lookup> (key, update)	=> nkey
+															<	<lookup> (nkey, dict)	=> oldc ;
+																<put> (lens, a, oldc) 	=> c
+															+	<create> (lens, a) 		=> c
 rules // User-defined
 	get: 	(LensRef(n), c)	-> a 
 				where


From g.h.wachsmuth at tudelft.nl  Thu Jun 10 23:49:57 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 10 Jun 2010 21:49:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20993 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/trans/semantics
Message-ID: <201006102149.o5ALnv4x018182@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-10 21:49:57 +0000 (Thu, 10 Jun 2010)
New Revision: 20993

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20993&view=rev

Modified:
   lenses/trunk/Strategic Lenses/trans/semantics/semantics.str

Log:
bug fixing

Changes:

Modified: lenses/trunk/Strategic Lenses/trans/semantics/semantics.str
===================================================================
--- lenses/trunk/Strategic Lenses/trans/semantics/semantics.str	2010-06-10 21:28:57 UTC (rev 20992)
+++ lenses/trunk/Strategic Lenses/trans/semantics/semantics.str	2010-06-10 21:49:57 UTC (rev 20993)
@@ -171,29 +171,31 @@
 		
 	put:	(|[ map lens1 with key lens2 ]|, as, cs)	-> cs'
 				where
-					<map(get(||[ lens1 ; lens2 ]|))> cs 		=> ckeys ;
-					<map(get(||[ lens2 ]|))> as 				=> akeys ;
-					<zip> (ckeys, cs)							=> dict ;
-					<diff> (ckeys, akeys)						=> missing ;
-					<diff> (akeys, ckeys)						=> new ;
-					<match-length> (missing, new)				=> (mkeys, nkeys, _) ;
-					<zip> (nkeys, mkeys)						=> update ;
-					<map(put-by-key(|lens1, dict, update))> as	=> cs' 
+					<map(get(||[ lens1 ; lens2 ]|))> cs 				=> ckeys ;
+					<map(get(||[ lens2 ]|))> as 						=> akeys ;
+					<zip> (ckeys, cs)									=> cdict ;
+					<zip> (as, akeys)									=> adict ;
+					<diff> (ckeys, akeys)								=> missing ;
+					<diff> (akeys, ckeys)								=> new ;
+					<match-length> (missing, new)						=> (mkeys, nkeys, _) ;
+					<zip> (nkeys, mkeys)								=> update ;
+					<map(put-by-key(|lens1, cdict, adict, update))> as	=> cs' 
 					 
 	create:	(|[ map lens1 with key lens2 ]|, as)	-> cs 
 				where
 					<create> (|[ map lens1 ]|, as) => cs
 	
-	put-by-key(|lens, dict, update):	a -> c
-											where
-												<get> (lens, a) 		=> key 
-											where 
-												<lookup> (key, dict) 	=> oldc 
-													<	<put> (lens, a, oldc)	=> c	
-													+	<lookup> (key, update)	=> nkey
-															<	<lookup> (nkey, dict)	=> oldc ;
-																<put> (lens, a, oldc) 	=> c
-															+	<create> (lens, a) 		=> c
+	put-by-key(|lens, cdict, adict, update):	a -> c
+													where
+														<lookup> (a, adict) => key 
+													where 
+														<lookup> (key, cdict) 	=> oldc 
+															<	<put> (lens, a, oldc)	=> c	
+															+	<lookup> (key, update)	=> nkey
+																	<	<lookup> (nkey, cdict)	=> oldc ;
+																		<put> (lens, a, oldc) 	=> c 
+																	+	<create> (lens, a) 		=> c
+														
 rules // User-defined
 	get: 	(LensRef(n), c)	-> a 
 				where


From g.h.wachsmuth at tudelft.nl  Thu Jun 10 23:50:30 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 10 Jun 2010 21:50:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20994 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/test
Message-ID: <201006102150.o5ALoUmN018200@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-10 21:50:29 +0000 (Thu, 10 Jun 2010)
New Revision: 20994

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20994&view=rev

Added:
   lenses/trunk/Strategic Lenses/test/OutlineKeys.lns

Log:
outline example works much better with keys

Changes:

Added: lenses/trunk/Strategic Lenses/test/OutlineKeys.lns
===================================================================
--- lenses/trunk/Strategic Lenses/test/OutlineKeys.lns	                        (rev 0)
+++ lenses/trunk/Strategic Lenses/test/OutlineKeys.lns	2010-06-10 21:50:29 UTC (rev 20994)
@@ -0,0 +1,122 @@
+module Outline
+
+signature constructors
+
+Property: Id * Type -> Property
+Property2: Id * Type2 -> Property
+
+: Property -> Entity
+: Property2 -> Entity
+
+lenses
+	Property < outlineProperty > OutlineProperty :=  
+		select Property(1) p: int ; plunge OutlineProperty
+			
+	Entity < outlineEntity > OutlineEntity :=
+		fork Entity(n, ps) < > OutlineEntity(n, ps)
+				n  < id > n
+				ps < map outlineProperty with key hoist OutlineProperty > ps
+
+tests
+
+	lens outlineEntity with
+	
+		entity e {p: e q: e} 
+			< get put >
+		+e
+		+-p
+		+-q	
+		
+		 
+		+e
+		+-p
+		+-q	
+			> create >
+		entity e {p: int q: int}
+		
+		entity e {p: e q: e}
+			> get > 
+		+e
+		+-p 
+		+-q	
+			> update > 
+		+e
+		+-q
+		+-p
+			> put > 	
+		entity e {q: e p: e}	 
+
+lenses
+	Module < outlineModule > Outline :=
+		fork Module(n, es) < > Outline(n, es)
+			n  < id > n
+			es < map outlineEntity with key select OutlineEntity(1) e: int> es 	
+
+tests
+	
+	lens outlineModule with
+	
+		module m 
+			entity e1 {p1: e1 p2: e2}
+			entity e2 {p1: e1 p2: e2} 
+		
+		> get > 
+		
+		m
+		+e1
+		+-p1
+		+-p2
+		+e2
+		+-p1
+		+-p2
+		
+		> update > 
+		
+		mm
+		+e1
+		+-p1
+		+-p3
+		+e2
+		+-p2
+		+-p4
+		
+		> put > 
+		
+		module mm 
+			entity e1 {p1: e1 p3: e2}
+			entity e2 {p2: e2 p4: e1} 
+			
+ 	lens outlineModule with
+	
+		module m 
+			entity e1 {p1: e1 p2: e2}
+			entity e2 {p1: e1 p2: e2} 
+		
+		> get > 
+		
+		m
+		+e1
+		+-p1
+		+-p2
+		+e2
+		+-p1
+		+-p2
+		
+		> update > 
+		
+		mm
+		+e2
+		+-p2
+		+-p4
+		+-p3
+		+-p1
+		+e1
+		+-p1
+		+-p3
+		
+		> put > 
+		
+		module mm 
+			entity e2 {p2: e2 p4: int p3: int p1: e1} 
+			entity e1 {p1: e1 p3: e2}
+			
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Thu Jun 10 23:51:18 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 10 Jun 2010 21:51:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20995 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/test
Message-ID: <201006102151.o5ALpIkQ018208@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-10 21:51:17 +0000 (Thu, 10 Jun 2010)
New Revision: 20995

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20995&view=rev

Modified:
   lenses/trunk/Strategic Lenses/test/TestSuite.lns

Log:
some tests for basic lenses (no desugaring)

Changes:

Modified: lenses/trunk/Strategic Lenses/test/TestSuite.lns
===================================================================
--- lenses/trunk/Strategic Lenses/test/TestSuite.lns	2010-06-10 21:50:29 UTC (rev 20994)
+++ lenses/trunk/Strategic Lenses/test/TestSuite.lns	2010-06-10 21:51:17 UTC (rev 20995)
@@ -1,15 +1,94 @@
 module TestSuite
 
 tests
+
+	lens id with
 	
-	lens select Property(1) p: int with
+		ast a(b) > get > ast a(b)
+		
+		ast a(b) > create > ast a(b)
+		
+		ast a(b) 
+			> get > 
+		ast a(b)
+			> update >
+		ast b(c)
+			> put >
+		ast b(c)
+		
+	lens id ; id with
 	
-		failure
-			ast Property(p, Type(e))
-				> get > 
-			ast q
-	 
-	lens id with
+		ast a(b) > get > ast a(b)
+		
+		ast a(b) > create > ast a(b)
+		
+		ast a(b) 
+			> get > 
+		ast a(b)
+			> update >
+		ast b(c)
+			> put >
+		ast b(c)
+		
+	lens hoist a with
 	
-		failure
-			ast [a,b] > get > ast [d,e]
\ No newline at end of file
+		ast a(b,c) > get > ast (b, c)
+		ast a(b) > get > ast b
+		
+		ast (b,c) > create > ast a(b, c)
+		ast b > create > ast a(b)
+		
+		ast a(b,c) 
+			> get > 
+		ast (b,c)
+			> update >
+		ast (c,d,e)
+			> put >
+		ast a(c,d,e)
+		
+		ast a(b) 
+			> get > 
+		ast b
+			> update >
+		ast c
+			> put >
+		ast a(c)
+		
+	lens plunge a with
+		
+		ast (b,c) > get > ast a(b,c)
+		ast b > get > ast a(b)
+		
+		ast a(b,c) > create > ast (b,c)
+		ast a(b) > create > ast b
+		
+		ast (b,c) 
+			> get > 
+		ast a(b,c)
+			> update >
+		ast a(c,d,e)
+			> put >
+		ast (c,d,e)
+		
+		ast b 
+			> get > 
+		ast a(b)
+			> update >
+		ast a(c)
+			> put >
+		ast c
+		
+	lens select 2,4 ast (a, 2, b, 4) with
+	
+		ast (x, a, y, b) > get > ast (a, b)
+		
+		ast (x, y) > create > ast (a, x, b, y)
+		
+		ast (x, a, y, b) 
+			> get >
+		ast (a, b)
+			> update >
+		ast (d, e)
+			> put >
+		ast (x, d, y, e)
+		
\ No newline at end of file


From g.h.wachsmuth at tudelft.nl  Thu Jun 10 23:51:49 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Thu, 10 Jun 2010 21:51:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20996 - GuidoWachsmuth
	- lenses/trunk/Strategic Lenses/syntax
Message-ID: <201006102151.o5ALpnGn018212@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-06-10 21:51:49 +0000 (Thu, 10 Jun 2010)
New Revision: 20996

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20996&view=rev

Modified:
   lenses/trunk/Strategic Lenses/syntax/Lenses.sdf

Log:
added a new lens: map <lens1> with key <lens2> 
- uses the second lens to derive keys for the elements in the abstract lists
- get and create work like the ordinary map
- during the put, keys are used to detect moves
- elements with new keys are put back through lens1 from left to right with unused old elements
- if no old element is left, create of lens1 is used

Changes:

Modified: lenses/trunk/Strategic Lenses/syntax/Lenses.sdf
===================================================================
--- lenses/trunk/Strategic Lenses/syntax/Lenses.sdf	2010-06-10 21:51:17 UTC (rev 20995)
+++ lenses/trunk/Strategic Lenses/syntax/Lenses.sdf	2010-06-10 21:51:49 UTC (rev 20996)
@@ -55,8 +55,11 @@
 	context-free syntax
 	
 		"filter" {QConstructor ","}+			-> Lens		{cons("Filter")}
-		"map" Lens								-> Lens		{cons("Map")}
-		 
+		"map" Lens Key							-> Lens		{cons("Map")}
+		
+												-> Key		{cons("None")}
+		"with" "key" Lens						-> Key		{cons("Key")}
+												 
 	context-free syntax
   	
 		INT								-> Index


From L.C.L.Kats at tudelft.nl  Fri Jun 11 11:04:57 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 11 Jun 2010 09:04:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20997 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.stratego/editor
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <201006110904.o5B94vGS027767@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-11 09:04:56 +0000 (Fri, 11 Jun 2010)
New Revision: 20997

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20997&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Colorer.esv
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java

Log:
Minor tweaks to parse error markers and some other stuff

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Colorer.esv
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Colorer.esv	2010-06-10 21:51:49 UTC (rev 20996)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Colorer.esv	2010-06-11 09:04:56 UTC (rev 20997)
@@ -27,6 +27,7 @@
   _.StringEscape4 : gray
   
   _.Str     : blue
+  _.StrCong : blue
   _.QStr    : blue
   _.QDollar : blue
   _.QBr     : gray

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	2010-06-10 21:51:49 UTC (rev 20996)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	2010-06-11 09:04:56 UTC (rev 20997)
@@ -296,7 +296,7 @@
 			tokenizer.changeTokenKinds(startOffset, offset - 1, TokenKind.TK_LAYOUT, TokenKind.TK_ERROR);
 			reportErrorAtTokens(token, token, "Syntax error, closing of '" + token + "' is expected here");
 		} else if (isErrorProduction(attrs, INSERT)) {
-			IToken token = tokenizer.makeErrorTokenSkipLayout(startOffset, offset + 1, outerStartOffset2);
+			IToken token = tokenizer.makeErrorTokenSkipLayout(startOffset, offset, outerStartOffset2);
 			String inserted = "token";
 			if (rhs.getName().equals("lit")) {
 				inserted = applAt(rhs, 0).getName();
@@ -507,7 +507,7 @@
 
 	private String getErrorExplanation() {
 		final String message2;
-		if (!isRecoveryFailed) {
+		if (isRecoveryFailed) {
 			message2 = " (recovery failed)";
 		} else if (!source.getParser().getParseTable().hasRecovers()) {
 			message2 = " (no recovery rules in parse table)";

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java	2010-06-10 21:51:49 UTC (rev 20996)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java	2010-06-11 09:04:56 UTC (rev 20997)
@@ -137,7 +137,7 @@
 	}
 	
 	/**
-	 * Creates an error token on stream part
+	 * Creates an error token, trying to avoid including whitespace.
 	 */
 	public IToken makeErrorToken(int beginOffset, int endOffset) {		
 		while (beginOffset < endOffset && Character.isWhitespace(lexStream.getCharValue(beginOffset)))
@@ -148,6 +148,9 @@
 			endOffset = lexStream.getStreamLength();
 			beginOffset = Math.min(beginOffset, endOffset);
 		}
+		
+		if (beginOffset > endOffset && beginOffset > 0)
+			beginOffset = endOffset - 1;
 
 		return new Token(parseStream, beginOffset, endOffset, TK_ERROR.ordinal());
 	}
@@ -190,18 +193,24 @@
 			int offset = beginOffset - skipLength - 1;
 			char c = lexStream.getCharValue(offset);
 			if (!Character.isWhitespace(c)) {
-			    if (newlineSkipLength != -1) {
+			    if (newlineSkipLength == -1) {
+			    	if (skipLength >= 1 && endOffset == beginOffset) {
+				    	// Report in whitespace just after the current token
+			    		return new Token(parseStream, beginOffset - skipLength, endOffset - skipLength, TK_ERROR.ordinal());
+			    	}
+			    	break;
+			    } else {
 			        if (lexStream.getLine(offset) != lexStream.getLine(outerBeginOffset)) {
 	                    // Report the error at the next newline
 			        	// if the outer construct started on a different line
 			            skipLength = newlineSkipLength;
+			            break;
 			        } else {
 			        	// Skip to the previous token at the end of this line
 			        	// if the outer construct started on the same line
 			        	return makeErrorTokenBackwards(beginOffset - skipLength);
 			        }
 			    }
-				break;
 			}
 			if (c == '\n')
 			    newlineSkipLength = skipLength;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-10 21:51:49 UTC (rev 20996)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-11 09:04:56 UTC (rev 20997)
@@ -631,7 +631,7 @@
 		if (term instanceof WrappedAstNode) {
 			return ((WrappedAstNode) term).getNode();
 		} else {
-			Environment.logException("Resolved reference is not associated with an AST node " + runtime.current());
+			Environment.logException("Resolved reference is not associated with an AST node " + term);
 			return null;
 		}
 	}


From L.C.L.Kats at tudelft.nl  Fri Jun 11 11:11:36 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 11 Jun 2010 09:11:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20998 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.aster
	org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.pp org.strategoxt.imp.editors.sdf
	org.strategoxt.imp.editors.stratego
	org.strategoxt.imp.generator/src/sdf2imp/project
Message-ID: <201006110911.o5B9BaOh027813@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-11 09:11:35 +0000 (Fri, 11 Jun 2010)
New Revision: 20998

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20998&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str

Log:
Don't write the jar file directly, but use a temporary file (might still be risky with some classloaders)

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-06-11 09:04:56 UTC (rev 20997)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-06-11 09:11:35 UTC (rev 20998)
@@ -39,6 +39,7 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/lib" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -328,7 +329,8 @@
             <copy todir="${build}/trans">
                 <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
             </copy>
-            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
             <delete><fileset dir="${build}" includes="trans/**"/></delete>
         </target>
         

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-06-11 09:04:56 UTC (rev 20997)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-06-11 09:11:35 UTC (rev 20998)
@@ -39,6 +39,7 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/lib" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -328,7 +329,8 @@
             <copy todir="${build}/trans">
                 <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
             </copy>
-            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
             <delete><fileset dir="${build}" includes="trans/**"/></delete>
         </target>
         

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-06-11 09:04:56 UTC (rev 20997)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-06-11 09:11:35 UTC (rev 20998)
@@ -39,6 +39,7 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/lib" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -328,7 +329,8 @@
             <copy todir="${build}/trans">
                 <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
             </copy>
-            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
             <delete><fileset dir="${build}" includes="trans/**"/></delete>
         </target>
         

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	2010-06-11 09:04:56 UTC (rev 20997)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	2010-06-11 09:11:35 UTC (rev 20998)
@@ -39,6 +39,7 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/lib" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -328,7 +329,8 @@
             <copy todir="${build}/trans">
                 <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
             </copy>
-            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
             <delete><fileset dir="${build}" includes="trans/**"/></delete>
         </target>
         

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-06-11 09:04:56 UTC (rev 20997)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-06-11 09:11:35 UTC (rev 20998)
@@ -39,6 +39,7 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/lib" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -328,7 +329,8 @@
             <copy todir="${build}/trans">
                 <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
             </copy>
-            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
             <delete><fileset dir="${build}" includes="trans/**"/></delete>
         </target>
         

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-06-11 09:04:56 UTC (rev 20997)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-06-11 09:11:35 UTC (rev 20998)
@@ -39,6 +39,7 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/lib" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -328,7 +329,8 @@
             <copy todir="${build}/trans">
                 <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
             </copy>
-            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
             <delete><fileset dir="${build}" includes="trans/**"/></delete>
         </target>
         

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-06-11 09:04:56 UTC (rev 20997)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-06-11 09:11:35 UTC (rev 20998)
@@ -402,7 +402,8 @@
             <copy todir="${build}/trans">
                 <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
             </copy>
-            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
             <delete><fileset dir="${build}" includes="trans/**"/></delete>
         </target>
         


From L.C.L.Kats at tudelft.nl  Fri Jun 11 13:11:50 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 11 Jun 2010 11:11:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20999 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
	org.strategoxt.imp.updatesite
Message-ID: <201006111111.o5BBBoYx029457@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-11 11:11:50 +0000 (Fri, 11 Jun 2010)
New Revision: 20999

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20999&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Release 0.5.1.8, incorporating the last series of minor fixes. Hopefully the final 0.5.1 release.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-11 09:11:35 UTC (rev 20998)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-11 11:11:50 UTC (rev 20999)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.5.1.7"
+      version="0.5.1.8"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	2010-06-11 09:11:35 UTC (rev 20998)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	2010-06-11 11:11:50 UTC (rev 20999)
@@ -7,6 +7,7 @@
 import static org.spoofax.interpreter.core.Tools.termAt;
 
 import java.io.ByteArrayInputStream;
+import java.io.File;
 import java.io.InputStream;
 
 import org.eclipse.core.resources.IFile;
@@ -180,6 +181,10 @@
 			}
 		
 			if (result != null) {
+				if (new File(filename).isAbsolute()) {
+					openError(editor, "Builder failed: result filename must have a project-relative path: " + filename);
+					return;
+				}
 				IFile file = editor.getProject().getRawProject().getFile(filename);
 				setFileContents(editor, file, result);
 				// TODO: if not persistent, create IEditorInput from result String

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-11 09:11:35 UTC (rev 20998)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-11 11:11:50 UTC (rev 20999)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.5.1.7.jar" id="org.strategoxt.imp" version="0.5.1.7">
+   <feature url="features/org.strategoxt.imp_0.5.1.8.jar" id="org.strategoxt.imp" version="0.5.1.8">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">


From L.C.L.Kats at tudelft.nl  Sat Jun 12 18:01:16 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 12 Jun 2010 16:01:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21000 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.stratego/syntax
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens
Message-ID: <201006121601.o5CG1GTZ020426@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-12 16:01:15 +0000 (Sat, 12 Jun 2010)
New Revision: 21000

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21000&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/syntax/Stratego-Sugar.def
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/AntDescriptorBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java

Log:
- Spoofax/169: Additional error marker for extremely big skipped regions?
- Fixed an issue where loading the editor failed but Ant would report the build successful
- Added ; recovery rule for Stratego

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/syntax/Stratego-Sugar.def
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/syntax/Stratego-Sugar.def	2010-06-11 11:11:50 UTC (rev 20999)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/syntax/Stratego-Sugar.def	2010-06-12 16:01:15 UTC (rev 21000)
@@ -4,6 +4,10 @@
   Stratego-Core-Identifiers
   Stratego-Sugar-Terms
 
+exports %% RECOVERY RULES START HERE
+  lexical syntax
+      -> ";" {recover, cons("INSERTION")}
+
 exports
   sorts Overlay
   context-free syntax
@@ -848,4 +852,4 @@
   Stratego-Sugar-Overlays
 
 hiddens
-  context-free start-symbols Module
\ No newline at end of file
+  context-free start-symbols Module

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-06-11 11:11:50 UTC (rev 20999)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-06-12 16:01:15 UTC (rev 21000)
@@ -104,7 +104,7 @@
         <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
         
         <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
-            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
                 <arg value="${include}/${esvmodule}.packed.esv"/>
             </java>
         </target>

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/AntDescriptorBuilder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/AntDescriptorBuilder.java	2010-06-11 11:11:50 UTC (rev 20999)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/AntDescriptorBuilder.java	2010-06-12 16:01:15 UTC (rev 21000)
@@ -24,7 +24,8 @@
 		if (args == null || args.length == 0)
 			throw new IllegalArgumentException("Descriptor file expected");
 		
-		if (DynamicDescriptorBuilder.getInstance().isAntBuildDisallowed())
+		DynamicDescriptorBuilder builder = DynamicDescriptorBuilder.getInstance();
+		if (builder.isAntBuildDisallowed())
 			throw new IllegalStateException("Cannot load new editor at this time: try again after background loading is completed");
 		
 		synchronized (Environment.getSyncRoot()) {
@@ -33,7 +34,9 @@
 				String descriptor = args[0];
 				
 				IResource source = getResource(getSourceDescriptor(descriptor));
-				DynamicDescriptorBuilder.getInstance().updateResource(source, new NullProgressMonitor());
+				boolean success = builder.updateResource(source, new NullProgressMonitor());
+				if (!success)
+					System.exit(1);
 			} finally {
 				active = false;
 			}

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java	2010-06-11 11:11:50 UTC (rev 20999)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java	2010-06-12 16:01:15 UTC (rev 21000)
@@ -74,15 +74,18 @@
 		return antBuildDisallowed;
 	}
 
-	public void updateResource(IResource resource, IProgressMonitor monitor) {
+	/**
+	 * @return <code>true</code> if the resource was a descriptor and it was successfully reloaded.
+	 */
+	public boolean updateResource(IResource resource, IProgressMonitor monitor) {
 		IPath location = resource.getRawLocation();
-		if (location == null) return;
+		if (location == null) return false;
 		
 		try {
 			// System.err.println("Resource changed: " + resource.getName()); // DEBUG
 			if (resource.exists() && isMainFile(resource)) {
 				monitor.setTaskName("Building " + resource.getName());
-				buildDescriptor(resource, monitor);
+				return buildDescriptor(resource, monitor);
 			}
 			
 		} catch (RuntimeException e) {
@@ -92,12 +95,15 @@
 			reportError(resource, "Unable to build descriptor for " + resource, e);
 			Environment.logException("Unable to build descriptor for " + resource, e);
 		}
+		return false;
 	}
 
 	/**
 	 * Build and load a descriptor file.
+	 * 
+	 * @return <code>true</code> if the descriptor was successfully loaded.
 	 */
-	private void buildDescriptor(IResource mainFile, IProgressMonitor monitor) {
+	private boolean buildDescriptor(IResource mainFile, IProgressMonitor monitor) {
 		try {
 			Environment.assertLock();
 			
@@ -118,7 +124,7 @@
 				Environment.logException("Unable to build descriptor:\n" + log);
 				messageHandler.addMarkerFirstLine(mainFile, "Unable to build descriptor (see error log)", SEVERITY_ERROR);
 				// UNDONE: StrategoConsole.activateConsole(); (not good for ant triggered builds)
-				return;
+				return false;
 			}
 			
 			monitor.setTaskName("Loading " + mainFile.getName());
@@ -126,10 +132,12 @@
 				System.err.println("Loading new editor services");
 			DynamicDescriptorLoader.getInstance().loadPackedDescriptor(getTargetDescriptor(mainFile));
 			monitor.setTaskName(null);
+			return true;
 			
 		} catch (IOException e) {
 			Environment.logException("Unable to build descriptor for " + mainFile, e);
 			messageHandler.addMarkerFirstLine(mainFile, "Internal error building descriptor (see error log)", SEVERITY_ERROR);
+			return false;
 		}
 	}
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	2010-06-11 11:11:50 UTC (rev 20999)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	2010-06-12 16:01:15 UTC (rev 21000)
@@ -1,7 +1,9 @@
 package org.strategoxt.imp.runtime.parser;
 
-import static java.lang.Math.*;
-import static org.spoofax.jsglr.Term.*;
+import static java.lang.Math.min;
+import static org.spoofax.jsglr.Term.applAt;
+import static org.spoofax.jsglr.Term.listAt;
+import static org.spoofax.jsglr.Term.termAt;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -85,6 +87,11 @@
 	
 	public static final int PARSE_ERROR_DELAY = min(StrategoObserver.OBSERVER_DELAY + 50, 800);
 	
+	private static final int LARGE_REGION_SIZE = 8;
+	
+	private static final String LARGE_REGION_START =
+		"Region could not be parsed because of subsequent syntax error(s) indicated below";
+	
 	private static Context asyncAmbReportingContext;
 	
 	private final AstMessageHandler handler = new AstMessageHandler(AstMessageHandler.PARSE_MARKER_TYPE);
@@ -409,21 +416,25 @@
 		IToken token = tokenizer.makeErrorToken(beginSkipped, endSkipped);
 		int line = token.getLine();
 		int endLine = token.getEndLine() + RegionRecovery.NR_OF_LINES_TILL_SUCCESS;
-		boolean reportedErrors = false;
+		int reportedLine = -1;
 		for (BadTokenException e : source.getParser().getParser().getCollectedErrors()) {
 			if (e.getLineNumber() >= line && e.getLineNumber() <= endLine) {
 				char[] processedChars = tokenizer.getLexStream().getInputChars();
 				tokenizer.getLexStream().setInputChars(inputChars);
-				tokenizer.getLexStream().setInputChars(inputChars);
 				reportError(tokenizer, (Exception) e); // use double dispatch
 				tokenizer.getLexStream().setInputChars(processedChars);
-				reportedErrors = true;
+				if (reportedLine == -1)
+					reportedLine = e.getLineNumber();
 			}
 		}
 		tokenizer.changeTokenKinds(beginSkipped, endSkipped, TokenKind.TK_LAYOUT, TokenKind.TK_ERROR);
-		if (!reportedErrors) {
-			// report entire region
+		if (reportedLine == -1) {
+			// Report entire region
 			reportErrorAtTokens(token, token, UNEXPECTED_REGION);
+		} else if (reportedLine - line >= LARGE_REGION_SIZE) {
+			IToken firstToken = token.getIPrsStream().getTokenAtCharacter(beginSkipped);
+			IToken lastToken = tokenizer.getLastTokenOnSameLine(firstToken);
+			reportErrorAtTokens(firstToken, lastToken, LARGE_REGION_START);
 		}
 	}
 		

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java	2010-06-11 11:11:50 UTC (rev 20999)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java	2010-06-12 16:01:15 UTC (rev 21000)
@@ -498,12 +498,14 @@
 	private void createLayoutToken(ATermAppl rhs, int lastOffset) {
 		// Create separate tokens for >1 char layout lexicals (e.g., comments)
 		if (offset > lastOffset + 1 && AsfixAnalyzer.isLexLayout(rhs)) {
-			tokenizer.makeToken(lastOffset, TK_LAYOUT, false);
+			if (tokenizer.getStartOffset() <= lastOffset)
+				tokenizer.makeToken(lastOffset, TK_LAYOUT, false);
 			tokenizer.makeToken(offset, TK_LAYOUT, false);
 		} else {
 			String sort = reader.getSort(rhs);
 			if ("WATERTOKEN".equals(sort) || "WATERTOKENSEPARATOR".equals(sort)) {
-				tokenizer.makeToken(lastOffset, TK_LAYOUT, false);
+				if (tokenizer.getStartOffset() <= lastOffset)
+					tokenizer.makeToken(lastOffset, TK_LAYOUT, false);
 				tokenizer.makeToken(offset, TK_ERROR, false);
 			}
 		}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java	2010-06-11 11:11:50 UTC (rev 20999)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenizer.java	2010-06-12 16:01:15 UTC (rev 21000)
@@ -72,7 +72,7 @@
 	}
 	
 	public SGLRToken makeToken(int endOffset, TokenKind kind, boolean allowEmptyToken) {
-		if (!allowEmptyToken && startOffset == endOffset) // empty token
+		if (!allowEmptyToken && startOffset >= endOffset) // empty token
 			return null;
 		
 		//if (Debug.ENABLED) {
@@ -246,6 +246,19 @@
 		return new Token(parseStream, beginOffset, offset, TK_ERROR.ordinal());
 	}
 	
+	public IToken getLastTokenOnSameLine(IToken token) {
+		IPrsStream stream = token.getIPrsStream();
+		int i = token.getTokenIndex();
+		int line = stream.getEndLine(i);
+		IToken result = token;
+		IToken current = token;
+		while (current.getKind() != TokenKind.TK_EOF.ordinal() && current.getEndLine() == line) {
+			result = current;
+			current = stream.getTokenAt(++i); 
+		}
+		return result;
+	}
+	
 	public static String dumpToString(IToken left, IToken right) {
 		StringBuilder result = new StringBuilder();
 		int last = right.getTokenIndex();


From L.C.L.Kats at tudelft.nl  Sun Jun 13 01:54:20 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 12 Jun 2010 23:54:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21001 - LennartKats -
	in experimental/meta-amb-suggestions: . editor lib syntax
	test test/Stratego-Java-15 trans
Message-ID: <201006122354.o5CNsK1F024849@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-12 23:54:19 +0000 (Sat, 12 Jun 2010)
New Revision: 21001

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21001&view=rev

Added:
   experimental/meta-amb-suggestions/editor/
   experimental/meta-amb-suggestions/editor/Meta-amb-suggestions-Builders.esv
   experimental/meta-amb-suggestions/editor/Meta-amb-suggestions.main.esv
   experimental/meta-amb-suggestions/editor/Stratego-Sugar-Colorer.esv
   experimental/meta-amb-suggestions/editor/Stratego-Sugar-Completions.esv
   experimental/meta-amb-suggestions/editor/Stratego-Sugar-Folding.esv
   experimental/meta-amb-suggestions/editor/Stratego-Sugar-Outliner.esv
   experimental/meta-amb-suggestions/editor/Stratego-Sugar-References.esv
   experimental/meta-amb-suggestions/editor/Stratego-Sugar-Syntax.esv
   experimental/meta-amb-suggestions/syntax/
   experimental/meta-amb-suggestions/syntax/Meta-amb-suggestions.sdf
   experimental/meta-amb-suggestions/test/Stratego-Java-15/
   experimental/meta-amb-suggestions/test/Stratego-Java-15/test1.met
   experimental/meta-amb-suggestions/test/Stratego-Java-15/test2.met
Removed:
   experimental/meta-amb-suggestions/test/example.met
Modified:
   experimental/meta-amb-suggestions/build.generated.xml
   experimental/meta-amb-suggestions/build.main.xml
   experimental/meta-amb-suggestions/lib/editor-common.generated.str
   experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str

Log:
Can now handle some basic cases

Changes:

Modified: experimental/meta-amb-suggestions/build.generated.xml
===================================================================
--- experimental/meta-amb-suggestions/build.generated.xml	2010-06-12 16:01:15 UTC (rev 21000)
+++ experimental/meta-amb-suggestions/build.generated.xml	2010-06-12 23:54:19 UTC (rev 21001)
@@ -1,9 +1,11 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
 <project name="build.generated">
+
+        <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
+        <target name="spoofaximp.default.ctree" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,stratego.jar,  sdf2imp,refresh"/>
     
-        <target name="spoofaximp.default" depends="sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
-    
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
         <dirname property="externaldefdir" file="${externaldef}"/>
@@ -29,14 +31,14 @@
         <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
         
         <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
-            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
                 <arg value="${include}/${esvmodule}.packed.esv"/>
             </java>
         </target>
         
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
-            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/lib" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -50,6 +52,9 @@
             <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
             <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
             <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+            <!-- Causes the editor to be reloaded
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            -->
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -75,6 +80,14 @@
             </apply>
         </target>
         
+        <target name="meta-sdf2table">
+            <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+            <antcall target="sdf2table">
+                <param name="sdfmodule" value="${metasdfmodule}"/>
+                <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+            </antcall>
+        </target>
+        
         <target name="make-permissive" depends="pack-sdf,copy-sdf">
             <dependset>
                 <srcfileset file="${include}/${sdfmodule}.def"/>
@@ -123,6 +136,8 @@
                 <arg value="-I"/>
                 <arg value="${syntax}"/>
                 <arg value="-I"/>
+                <arg value="${utils}"/>
+                <arg value="-I"/>
                 <arg value="${lib}"/>
                 <arg line="${build.sdf.imports}"/>
             </java>
@@ -316,7 +331,8 @@
             <copy todir="${build}/trans">
                 <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
             </copy>
-            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
             <delete><fileset dir="${build}" includes="trans/**"/></delete>
         </target>
         
@@ -342,6 +358,7 @@
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaljarflags}"/>
                 <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
             </java>
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <mkdir dir="${build}/trans"/>
@@ -367,6 +384,7 @@
                 <arg line="${build.stratego.args}"/>
                 <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
                 
                 <fileset file="${trans}/${strmodule}.str"/>
                 <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>

Modified: experimental/meta-amb-suggestions/build.main.xml
===================================================================
--- experimental/meta-amb-suggestions/build.main.xml	2010-06-12 16:01:15 UTC (rev 21000)
+++ experimental/meta-amb-suggestions/build.main.xml	2010-06-12 23:54:19 UTC (rev 21001)
@@ -3,7 +3,7 @@
 <project name="Meta-amb-suggestions" default="all">
         
         <!-- Key input modules -->
-        <property name="sdfmodule" value="Stratego-Java-15"/>
+        <property name="sdfmodule" value="Meta-amb-suggestions"/>
         <property name="esvmodule" value="Meta-amb-suggestions"/>
         <property name="strmodule" value="meta_amb_suggestions"/>
     
@@ -17,13 +17,14 @@
         <property name="dist" location="bin/dist"/>
         
         <!-- Imports -->
-        <property name="build.sdf.imports" value=""/>
+        <property name="build.sdf.imports" value="-Idef ${user.home}/.nix-profile/share/java-front/Stratego-Java-15.def"/>
         <property name="build.stratego.args" value="--library
                         -I &quot;${trans}&quot; -I &quot;${basedir}&quot;
-                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm"/>
+                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm
+                        -la strc"/>
         
-        <property name="externaldef" location="syntax/Stratego-Java-15.def"/>
-        <!-- External .def and .jar locations
+	      <!-- External .def and .jar locations
+	      <property name="externaldef" location="syntax/Stratego-Java-15.def"/>
         <property name="externaldef" location="syntax/${sdfmodule}.def"/>
         <property name="externaljar" value="../lib.jar"/>
         <property name="externaljarflags" value="-la org.lib"/>
@@ -38,5 +39,5 @@
         <import file="build.generated.xml"/>
     
         <!-- Main target -->
-        <target name="all" depends="stratego.jar"/>
+        <target name="all" depends="spoofaximp.default.jar"/>
     </project>

Copied: experimental/meta-amb-suggestions/editor/Meta-amb-suggestions-Builders.esv (from rev 20981, spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Builders.esv)
===================================================================
--- experimental/meta-amb-suggestions/editor/Meta-amb-suggestions-Builders.esv	                        (rev 0)
+++ experimental/meta-amb-suggestions/editor/Meta-amb-suggestions-Builders.esv	2010-06-12 23:54:19 UTC (rev 21001)
@@ -0,0 +1,20 @@
+
+module Meta-amb-suggestions-Builders
+
+// imports Stratego-Sugar-Builders.generated
+
+builders
+                                                                                      
+  // This file can be used for custom analysis rules.                                 
+  // See the imported file for a brief introduction and examples.                     
+                                                                                      
+  provider : include/meta_amb_suggestions.jar
+
+  // observer : editor-analyze
+
+  builder : "Show AST (selection)" =
+    generate-aterm (realtime) (meta) (openeditor) (source) 
+
+  builder : "Show ambiguity suggestions" =
+    generate-amb-suggestions (realtime) (meta) (openeditor) (source) 
+ 
\ No newline at end of file

Copied: experimental/meta-amb-suggestions/editor/Meta-amb-suggestions.main.esv (from rev 20981, spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar.main.esv)
===================================================================
--- experimental/meta-amb-suggestions/editor/Meta-amb-suggestions.main.esv	                        (rev 0)
+++ experimental/meta-amb-suggestions/editor/Meta-amb-suggestions.main.esv	2010-06-12 23:54:19 UTC (rev 21001)
@@ -0,0 +1,20 @@
+module Meta-amb-suggestions.main
+
+imports
+  Meta-amb-suggestions-Builders Stratego-Sugar-Colorer Stratego-Sugar-Folding
+  Stratego-Sugar-Outliner Stratego-Sugar-References Stratego-Sugar-Syntax
+  Stratego-Sugar-Completions
+
+language General properties
+                  
+  name          : Meta-amb-suggestions
+  id            : org.strategoxt.imp.editors.stratego
+  extends       : Stratego-Sugar
+                  
+  description   : "Meta-amb-suggestions"
+  url           : http://strategoxt.org
+                  
+  extensions    : str,met
+  table         : include/Meta-amb-suggestions.tbl
+  start symbols : Module[[StrategoHost]]
+  // unmanaged table : Stratego*
\ No newline at end of file

Copied: experimental/meta-amb-suggestions/editor/Stratego-Sugar-Colorer.esv (from rev 20981, spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Colorer.esv)
===================================================================
--- experimental/meta-amb-suggestions/editor/Stratego-Sugar-Colorer.esv	                        (rev 0)
+++ experimental/meta-amb-suggestions/editor/Stratego-Sugar-Colorer.esv	2010-06-12 23:54:19 UTC (rev 21001)
@@ -0,0 +1,37 @@
+module Stratego-Sugar-Colorer
+
+imports Meta-amb-suggestions-Colorer.generated
+
+colorer Extension
+  
+  environment var:
+    0 128 64
+    255 255 255
+    italic
+    
+  // StrategyDef: 0 128 128 bold
+  // RuleDef:     0 128 128 bold
+  
+  // White background for variables and escapes
+  environment _.StringEscape1 : _ 255 255 255
+  environment _.StringEscape2 : _ 255 255 255
+  environment _.StringEscape3 : _ 255 255 255
+  environment _.StringEscape4 : _ 255 255 255
+  _.ListVar : _ 255 255 255
+  _.Var     : _ 255 255 255
+  _.Wld     : _ 255 255 255
+
+  _.StringEscape1 : gray  
+  _.StringEscape2 : gray  
+  _.StringEscape3 : gray  
+  _.StringEscape4 : gray
+  
+  _.Str     : blue
+  _.QStr    : blue
+  _.QDollar : blue
+  _.QBr     : gray
+
+  QuotedBracket1 : blue
+  QuotedBracket2 : blue
+  QuotedBracket3 : blue
+  QuotedBracket4 : blue
\ No newline at end of file

Copied: experimental/meta-amb-suggestions/editor/Stratego-Sugar-Completions.esv (from rev 20981, spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv)
===================================================================
--- experimental/meta-amb-suggestions/editor/Stratego-Sugar-Completions.esv	                        (rev 0)
+++ experimental/meta-amb-suggestions/editor/Stratego-Sugar-Completions.esv	2010-06-12 23:54:19 UTC (rev 21001)
@@ -0,0 +1,57 @@
+module Stratego-Sugar-Completions
+
+imports Meta-amb-suggestions-Completions.generated
+
+references
+                                                                   
+  // This file can be used for custom reference resolving rules.   
+  // See the imported file for a brief introduction and examples.
+
+  completion proposer : editor-complete
+  
+  identifier lexical : [a-zA-Z\_][a-zA-Z0-9\'\-\_]*\*?
+
+/* TODO: enable completion triggers in a later release?
+  completion trigger : "->[ \n\t]*[A-Za-z]"
+  completion trigger : "([^A-Za-z0-9_ ]) ?<" // trigger for ':= <' but not for 'a < b'
+  completion trigger : "(where|with)[ \n\t]*<"
+  completion trigger : "\[<"
+  completion trigger : "\n ?<"
+  completion trigger : "!"
+  completion trigger : "\?"
+  completion trigger : "\{\| "
+  completion trigger : ":[ \n\t]*[A-Za-z]"
+  completion trigger : ":= [A-Za-z]"
+*/
+                                                                                 
+  reference _ : editor-resolve
+
+  hover _ : editor-hover
+  
+  completion template:
+    "if" " " <e> " then\n\t" <s> "\nend"
+      
+  completion template:
+    "switch" " " <s> "\n\tcase " <c> ":" " " <s> "\n\totherwise: " <id> "\nend"
+
+  completion template:
+  	"let" "\n\t" <x> " = " <s> "\nin\n\t" <s> "\nend"
+
+  completion template:
+  	"where" "\n\t" (blank)
+  	
+  completion template:
+  	"with" "\n\t" (blank)
+  
+  completion template:
+    "strategies" "\n\t" (blank)
+  
+  completion template:
+    "rules" "\n\t" (blank)
+  
+  completion template:
+    "signature constructors" "\n\t" (blank)
+  
+  completion template:
+    "signature sorts" "\n\t" (blank)
+

Copied: experimental/meta-amb-suggestions/editor/Stratego-Sugar-Folding.esv (from rev 20981, spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Folding.esv)
===================================================================
--- experimental/meta-amb-suggestions/editor/Stratego-Sugar-Folding.esv	                        (rev 0)
+++ experimental/meta-amb-suggestions/editor/Stratego-Sugar-Folding.esv	2010-06-12 23:54:19 UTC (rev 21001)
@@ -0,0 +1,8 @@
+module Stratego-Sugar-Folding
+
+imports Meta-amb-suggestions-Folding.generated
+
+folding
+  
+  // This file can be used for custom folding rules.
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Copied: experimental/meta-amb-suggestions/editor/Stratego-Sugar-Outliner.esv (from rev 20981, spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Outliner.esv)
===================================================================
--- experimental/meta-amb-suggestions/editor/Stratego-Sugar-Outliner.esv	                        (rev 0)
+++ experimental/meta-amb-suggestions/editor/Stratego-Sugar-Outliner.esv	2010-06-12 23:54:19 UTC (rev 21001)
@@ -0,0 +1,19 @@
+module Stratego-Sugar-Outliner
+
+// imports Stratego-Sugar-Outliner.generated
+
+outliner
+  
+  // This file can be used for custom outliner rules.
+  // See the imported file for a brief introduction and examples.
+  
+  Module
+  // _.Rules
+  // _.Strategies
+  // _.Overlays
+  _.SDefNoArgs
+  _.SDefT
+  _.SDef
+  _.RDefNoArgs
+  _.RDefT
+  _.RDef
\ No newline at end of file

Copied: experimental/meta-amb-suggestions/editor/Stratego-Sugar-References.esv (from rev 20981, spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-References.esv)
===================================================================
--- experimental/meta-amb-suggestions/editor/Stratego-Sugar-References.esv	                        (rev 0)
+++ experimental/meta-amb-suggestions/editor/Stratego-Sugar-References.esv	2010-06-12 23:54:19 UTC (rev 21001)
@@ -0,0 +1,9 @@
+module Stratego-Sugar-References
+
+imports Meta-amb-suggestions-References.generated
+
+references
+                                                                                 
+  // reference _ : editor-resolve
+
+  // hover _ : editor-hover
\ No newline at end of file

Copied: experimental/meta-amb-suggestions/editor/Stratego-Sugar-Syntax.esv (from rev 20981, spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Syntax.esv)
===================================================================
--- experimental/meta-amb-suggestions/editor/Stratego-Sugar-Syntax.esv	                        (rev 0)
+++ experimental/meta-amb-suggestions/editor/Stratego-Sugar-Syntax.esv	2010-06-12 23:54:19 UTC (rev 21001)
@@ -0,0 +1,32 @@
+module Stratego-Sugar-Syntax
+
+language
+                  
+  line comment  : "//"
+  block comment : "/*" * "*/"
+  fences        : [ ]
+                  ( )
+                  { }
+                  {| | // hack: interacts with { }
+                  <% %>
+                  |[ ]|
+                  $[ ]
+                  ${ }
+                  $< >
+                  $( )
+  
+  indent after:
+    then
+    in
+    else
+    where
+    with
+    switch
+    ":"
+    "="
+    <
+    rules
+    strategies
+    overlays
+    constructors
+    imports

Modified: experimental/meta-amb-suggestions/lib/editor-common.generated.str
===================================================================
--- experimental/meta-amb-suggestions/lib/editor-common.generated.str	2010-06-12 16:01:15 UTC (rev 21000)
+++ experimental/meta-amb-suggestions/lib/editor-common.generated.str	2010-06-12 23:54:19 UTC (rev 21001)
@@ -56,15 +56,15 @@
           rules(
             IsImported: path
           );
-          if <is-newer> (cache-path, path) then
+          ( <is-newer> (cache-path, path);
             file := <ReadFromFile> cache-path
-          else
+          <+
             file := <parse-file> path;
             if <file-exists> path then
               // Only cache if on filesystem (e.g., ignore libstratego-lib)
               <WriteToBinaryFile> (cache-path, file)
             end        
-          end;
+          );
           {| CurrentFile:
             rules(CurrentFile := path);
             <record-declarations> file
@@ -213,3 +213,35 @@
   Entity   : ID * List(Property) -> Entity
   Property : ID * Type           -> Property
   Type     : ID                  -> Type
+
+strategies
+  
+  // Set markers for a given file. Use when checking files from a queued strategy.
+  // Current term: (ast-desugared, errors, warnings, notes) tuple
+  // ast: the root node of the file to set markers on 
+  set-markers(|ast) = prim("SSL_EXT_set_markers", ast)
+
+  // Indicate that one or more files need analysis. 
+  // Current term: ss a list of absolute file paths, or a single absolute file path to analyze
+  queue-analysis = 
+       (is-list; list-loop(queue-analysis))
+    <+ prim("SSL_EXT_queue_analysis")
+
+  // Set the total number of work units to complete. Can be called multiple times. 
+  // Current term: number of work units (int).
+  set-total-work-units = prim("SSL_EXT_set_total_work_units")
+  
+  // Complete one work unit and update progress monitors.
+  // Current term: ignored
+  complete-work-unit = prim("SSL_EXT_complete_work_unit")
+  
+  // Queue a strategy for background processing with a progress indicator.
+  // Current term: the term to pass to the background strategy
+  // s: the strategy, as string
+  // description: name of the task (will be shown in progress view)
+  queue-strategy(|s,description) = prim("SSL_EXT_queue_strategy", s, description)
+  
+  // Return the result of this strategy to indicate a non-completed (backgrounded) analysis.
+  // Editor services (hover, resolve) will be delayed until a complete analysis is performed. 
+  set-analysis-backgrounded = !"BACKGROUNDED"
+  

Added: experimental/meta-amb-suggestions/syntax/Meta-amb-suggestions.sdf
===================================================================
--- experimental/meta-amb-suggestions/syntax/Meta-amb-suggestions.sdf	                        (rev 0)
+++ experimental/meta-amb-suggestions/syntax/Meta-amb-suggestions.sdf	2010-06-12 23:54:19 UTC (rev 21001)
@@ -0,0 +1,10 @@
+module Meta-amb-suggestions
+
+imports
+  Stratego-Java-15
+
+exports
+
+  context-free syntax
+  
+    "~" Term[[StrategoHost]] -> ID[[JavaObject]] {cons("FromMetaExpr")}

Added: experimental/meta-amb-suggestions/test/Stratego-Java-15/test1.met
===================================================================
--- experimental/meta-amb-suggestions/test/Stratego-Java-15/test1.met	                        (rev 0)
+++ experimental/meta-amb-suggestions/test/Stratego-Java-15/test1.met	2010-06-12 23:54:19 UTC (rev 21001)
@@ -0,0 +1,5 @@
+module foo
+
+rules
+
+  a = !compilation-unit |[ class ~ x {} ]|

Added: experimental/meta-amb-suggestions/test/Stratego-Java-15/test2.met
===================================================================
--- experimental/meta-amb-suggestions/test/Stratego-Java-15/test2.met	                        (rev 0)
+++ experimental/meta-amb-suggestions/test/Stratego-Java-15/test2.met	2010-06-12 23:54:19 UTC (rev 21001)
@@ -0,0 +1,5 @@
+module foo
+
+rules
+
+  a = !|[ class X{} class Y{} ]|

Deleted: experimental/meta-amb-suggestions/test/example.met
===================================================================
--- experimental/meta-amb-suggestions/test/example.met	2010-06-12 16:01:15 UTC (rev 21000)
+++ experimental/meta-amb-suggestions/test/example.met	2010-06-12 23:54:19 UTC (rev 21001)
@@ -1,18 +0,0 @@
-module example
-
-// Example "Meta-amb-suggestions" program (see syntax/Meta-amb-suggestions.sdf for the grammar)
-
-entity User {
-  name     : String
-  password : String
-  homepage : URL
-}
-
-entity BlogPosting {
-  poster : User
-  body   : String
-}
-
-entity URL {
-  location : String
-}
\ No newline at end of file

Modified: experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str
===================================================================
--- experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str	2010-06-12 16:01:15 UTC (rev 21000)
+++ experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str	2010-06-12 23:54:19 UTC (rev 21001)
@@ -5,58 +5,94 @@
   libstratego-sglr
   libstratego-aterm
   libstratego-xtc
+  libstrc
   stratego-context
+  lib/editor-common.generated
 
 signature constructors
   
   parse-table : Version * StartState * List(Label) * List(State) * List(Priority) -> parse-table
-  parse-tree  : Tree * Version -> parse-tree
 
 rules
   
-  main =
+  main-meta_amb_suggestions =
     xtc-io-wrap(
       id
     ,
-      with(
-        table := <import-term(include/Stratego-Java-15.tbl)>;
-        <register-prod(|"Stratego-Java-15")> table
+      meta_amb_suggestions
+    )
+  
+  meta_amb_suggestions:
+    FILE(file) -> suggestion*
+    with
+      <set-config> ("--statistics", 0);
+      log-timed(
+        table := <import-term(include/Meta-amb-suggestions.tbl)>;
+        <register-table(|"Stratego-Java-15")> table
+      | "Parse table loaded", 0
       );
-      parse-xtc-file-pt-report-errors(|table, None());
+      log-timed(
+        ast := <parse-xtc-file-pt-report-errors(|table, None())> FILE(file)
+      | "File parsed", 0
+      );
       rules(
         LanguageContext := IN_STRATEGO
+        IsStratego      : _
+        CurrentTable    := "Stratego-Java-15"
       );
-      resolve-ambs-top
-    )
+      log-timed(
+        suggestion* := <resolve-ambs-top>
+      | "Suggestions provided", 0
+      )
   
-  register-table(|lang-name):
+  generate-aterm:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"aterm")> path;
+      result   := selected // we just return the input term
+  
+  generate-amb-suggestions:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      editor-init;
+      filename                 := <guarantee-extension(|"suggestions.aterm")> path;
+      (tree, errors, warnings) := <meta_amb_suggestions> FILE($[[project-path]/[path]]);
+      result                   := (errors, warnings)
+  
+rules // Parse table registration
+  
+  register-table(|table-name):
     parse-table(version, startstate, labels, states, priorities) -> <id>
     with
-      <IsRegisteredTable> lang-name
+      <IsRegisteredTable> table-name
     <+
       rules(
-        IsRegisteredTable: lang-name
+        IsRegisteredTable: table-name
       );
-      <alltd(register-prod(|lang-name))> labels
+      <alltd(register-prod(|table-name))> labels
    
-  register-prod(|lang-name):
-    prod(lhs, sort(sort2), a*) -> <id>
+  register-prod(|table-name):
+    prod @ prod(lhs, sort2, attrs(a*)) -> <id>
     where
-      cons  := <one(?term(cons(<id>)))> a*;
-      sort1 := <one(?sort(<id>))> lhs;
+      cons  := <fetch-cons> a*;
       switch !cons
         case "ToMetaExpr":
+          sort1 := <fetch-meta-expr-contents> lhs;
           rules(
-            ToMetaExpr: (lang-name, sort1, sort2) -> lhs
+            ToMetaExprs   :+ (table-name, sort1, sort2) -> prod
           )
         case "FromMetaExpr":
+          sort1 := <fetch-meta-expr-contents> lhs;
           rules(
-            FromMetaExpr: (lang-name, sort1, sort2) -> lhs
+            FromMetaExprs :+ (table-name, sort1, sort2) -> prod
           )
       end
 
+rules // Ambiguity suggestions
+
   resolve-ambs-top:
-    parse-tree(tree, version) -> (tree', amb-error*, amb-warning*)
+    parsetree(tree, version) ->
+    (parse-tree(tree', version), amb-error*, amb-warning*)
     with
       {| AmbErrors, AmbWarnings:
         tree'        := <resolve-ambs> tree;
@@ -65,40 +101,179 @@
       |}
   
   resolve-ambs:
-    appl @ appl(prod @ prod(_, _, a*), arg*) -> appl(prod, arg'*)
+    appl @ appl(prod @ prod(_, _, attrs), arg*) -> appl(prod, arg'*)
     with
-      cons := <one(?term(cons(<id>)))> a*;
-      arg'* := <resolve-ambs-change-context(|cons)> arg*
+      attrs(a*) := attrs;
+      cons      := <fetch-cons> a*;
+      arg'*     := <resolve-ambs-change-context(|cons)> arg*
     <+
-      arg'* := <all(resolve-ambs)> arg*
+      arg'* := <all(is-int <+ resolve-ambs)> arg*
   
   resolve-ambs:
     amb @ amb(a*) -> amb'
     with
-      if all(<is-meta-expr-or-whatever-im-looking-for> a*) then 
-        if LanguageContext => IN_BUILD(); <is-decidable-build-amb> amb then
-          if <all(is-to-meta-expr-like)> a* then
-            rules(AmbWarnings :+= (amb, <amb-suggestion> amb))
+      if <one(is-meta-expr-branch)> a* then
+        if LanguageContext => <IN_BUILD + IN_META_BUILD>;
+           <is-runtime-decidable-build-amb> amb then
+          say(!"Would be run-time decidable");
+          if <all(is-to-meta-expr-branch)> a* then
+            // Fixing the amb in e.g. |[ class x ]| would be better for performance
+            rules(AmbWarnings :+= (amb, <amb-suggestions> amb))
           end;
-          amb' := <to-runtime-resolved-amb> amb
+          amb' := amb;
+          // TODO: amb' := <to-runtime-resolved-amb> amb
+          // for now, I'm treating this just as any other error
+          rules(AmbErrors :+= (amb, <amb-suggestions> amb))
         else
-          rules(AmbErrors :+= (amb, <amb-suggestion> amb));
+          rules(AmbErrors :+= (amb, <amb-suggestions> amb));
           amb' := amb
         end
       else
+        // Not a meta-expr ambiguity
+        warn(|"Could not resolve ambiguity");
         amb' := amb
       end
 
-  is-meta-expr-or-whatever-im-looking-for:
-    _ -> <TODO>
+  /**
+   * Tests if an ambiguous branch is a ToMetaExpr/FromMetaExpr.
+   */
+  is-meta-expr-branch:
+    appl(prod(_, _, attrs), kid*) -> <id>
+    where
+      attrs(a*) := attrs;
+      <fetch-cons> a* => <"ToMetaExpr" + "FromMetaExpr">
+    <+
+      one(<is-meta-expr-branch> kid*)
 
-  amb-suggestion:
-    amb(_) -> <TODO>
+  /**
+   * Tests if an ambiguous branch is a ToMetaExpr.
+   */
+  is-to-meta-expr-branch:
+    appl(prod(_, _, attrs), kid*) -> <id>
+    where
+      if attrs(a*) := attrs; fetch-cons => cons then
+        switch !cons
+          case "ToMetaExpr": id
+          case "FromMetaExpr": fail
+          otherwise: one(<is-to-meta-expr-branch> kid*)
+        end
+      else
+        one(<is-to-meta-expr-branch> kid*)
+      end
 
-  is-decidable-build-amb:
-    amb(_) -> <TODO>
+  is-runtime-decidable-build-amb:
+    amb(a*) -> <id>
+    where
+      all-bodies := <collect-all(appl(is-to-meta-expr-prod, id))>;
+      map(?body);
+      // TODO: test if possible constructors of 'body' do not collide with constructors of a*
+      <eq> (a*, <make-set> a*)
+
+  is-to-meta-expr-prod:
+    prod(_, _, attrs(a*)) -> <id>
+    where
+      <fetch-cons> a* => "ToMetaExpr"
+
+  is-meta-expr-prod:
+    prod(_, _, attrs(a*)) -> <id>
+    where
+      <fetch-cons> a* => <"FromMetaExpr" + "ToMetaExpr">
+
+  amb-suggestions:
+    amb(a*) -> suggestion'*
+    with
+      current        := <collect-one(where(appl(is-meta-expr-prod, id)))>;
+      current-string := <normalize-layout; asfix-yield-appl-chars; implode-string> current;
+      debug(!"  current: "); 
+      quoted         := <fetch-meta-expr-contents> current;
+      quoted-string  := <asfix-yield-appl-chars; implode-string> quoted;
+      debug(!"  quoted:  "); 
+      quotes         := <remove-duplicated> <mapconcat(amb-suggestion-parts)> a*;
+      debug(!"  quotes:  ");
+      suggestion*    := <map(quote-suggestion(|quoted-string))> quotes;
+      suggestion'*   := <filter(not(?current-string))> suggestion*;
+      debug(!"  suggest: ")
   
-  to-runtime-resolved-amb:
-    amb(_) -> <TODO>
+  quote-suggestion(|quoted-string):
+  	(prefix, postfix) -> result
+  	with
+  	  result := $[[prefix][quoted-string][postfix]]
   
-  is-to-meta-expr-like = TODO
\ No newline at end of file
+  /**
+  Fetch the contents of a meta expr production lhs.
+   * Given an appl for ~x:y, returns y.
+   */
+  fetch-meta-expr-contents:
+    appl(_, child*) -> child
+    with
+      child := <getfirst(appl(prod(id, cf(is-prod-sort), id), id))> child*
+  
+  /**
+   * Fetch the contents of a meta expr production lhs.
+   * Given a prod "~x:" Y -> Z, returns Y.
+   */
+  fetch-meta-expr-contents =
+    getfirst(oncetd(is-prod-sort))
+  
+  /**
+   * Given an appl, gives matching quotation prefixes and postfixes.
+   */
+  amb-suggestion-parts:
+    appl(prod(lhs, sort2, attrs(rhs)), _) -> suggestion-part*
+    with
+      sort1 := <fetch-meta-expr-contents> lhs;
+      switch <fetch-cons> rhs
+        case "ToMetaExpr":
+          quotation-prod*  := <bagof-ToMetaExprs> (<CurrentTable>, sort1, sort2);
+          suggestion-part* := <filter(amb-suggestion-parts-prod)> quotation-prod*
+        case "FromMetaExpr":
+          quotation-prod*  := <bagof-FromMetaExprs> (<CurrentTable>, sort1, sort2);
+          suggestion-part* := <filter(amb-suggestion-parts-prod)> quotation-prod*
+        otherwise:
+          // TODO: handle injected/complex meta exprs
+          suggestion-part* := []
+      end
+  
+  amb-suggestion-parts-prod:
+    prod(lhs, _, _) -> (prefix', postfix')
+    where
+      (prefix, postfix)   := <split-at(is-prod-sort)> lhs;
+      (prefix', postfix') := <all(lits-to-string)>
+    <+
+      warn(|"Could create suggestion for production")
+  
+  lits-to-string =
+    filter(?lit(<id>)); concat-strings
+  
+  normalize-layout:
+    appl(prod, child*) -> appl(prod, child'*)
+    with
+      // TODO: if IsStratego, then normalize layout to inner spaces around quoted text
+      //       (and do the same for generated suggestions)
+      child'* := <filter(not(?appl(prod(_, cf(opt(layout())), _), _)))> child*
+  
+rules // General helpers
+  
+  fetch-cons = getfirst(?term(cons(<id>)))
+  
+  is-prod-sort =
+    where(
+      try(?cf(<id>));
+      (?sort(_) + ?parameterized-sort(_, _))
+    )
+  
+  /**
+   * Removes all items of a list that occur in the list more than once.
+   * e.g. [1,1,2,3] -> [2,3]
+   */
+  remove-duplicated:
+    [x | x*] -> x'*
+    where
+      if <not(one(?x))> x* then
+        x'* := [x | <remove-duplicated> x*]
+      else
+        x'* := <remove-duplicated> x*
+      end
+  
+  remove-duplicated:
+    [] -> []
\ No newline at end of file


From L.C.L.Kats at tudelft.nl  Mon Jun 14 12:26:13 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 14 Jun 2010 10:26:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21002 - LennartKats -
	in spoofax-imp/trunk: org.eclipse.imp
	org.strategoxt.imp.editors.aster org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.pp org.strategoxt.imp.editors.sdf
	org.strategoxt.imp.editors.stratego
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <201006141026.o5EAQDmC000703@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-14 10:26:12 +0000 (Mon, 14 Jun 2010)
New Revision: 21002

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21002&view=rev

Modified:
   spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilderListener.java

Log:
Spoofax/167: Format code gives NullPointerException and some other minor fixes/tweaks

Changes:

Modified: spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch
===================================================================
--- spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch	2010-06-12 23:54:19 UTC (rev 21001)
+++ spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch	2010-06-14 10:26:12 UTC (rev 21002)
@@ -113,6 +113,20 @@
          } catch (Exception e) {
              ErrorHandler.reportError("Error running parser for language " + fParseController.getLanguage().getName() + " and input " + editorInput.getName() + ":", e);
              // RMF 8/2/2006 - Notify the AST listeners even on an exception - the compiler front end
+Index: org.eclipse.imp.runtime/src/org/eclipse/imp/editor/internal/FormattingController.java
+===================================================================
+--- org.eclipse.imp.runtime/src/org/eclipse/imp/editor/internal/FormattingController.java	(revision 22255)
++++ org.eclipse.imp.runtime/src/org/eclipse/imp/editor/internal/FormattingController.java	(working copy)
+@@ -33,7 +33,8 @@
+     }
+ 
+     public void formatterStarts(String initialIndentation) {
+-        fFormattingStrategy.formatterStarts(initialIndentation);
++    	if (fFormattingStrategy != null)
++    		fFormattingStrategy.formatterStarts(initialIndentation);
+     }
+ 
+     public String format(String content, boolean isLineStart, String indentation, int[] positions) {
 Index: org.eclipse.imp.runtime/src/org/eclipse/imp/editor/internal/PresentationController.java
 ===================================================================
 --- org.eclipse.imp.runtime/src/org/eclipse/imp/editor/internal/PresentationController.java	(revision 22255)
@@ -363,16 +377,27 @@
          return fLanguageServiceManager.getParseController();
      }
      
-@@ -1861,7 +1917,12 @@
+@@ -1861,7 +1917,23 @@
  		// SMS 25 Apr 2007:  Removing parser annotations here
  		// may not hurt but also doesn't seem to be necessary
  		//removeParserAnnotations();
-+		DocumentEvent event = new DocumentEvent(getServiceControllerManager().getSourceViewer().getDocument(), 0, 0, null);
-+		for (IDocumentListener listener : onSaveListeners)
-+			listener.documentAboutToBeChanged(event);
++		DocumentEvent event = null;
++		try {
++			event = new DocumentEvent(getServiceControllerManager().getSourceViewer().getDocument(), 0, 0, null);
++			for (IDocumentListener listener : onSaveListeners)
++				listener.documentAboutToBeChanged(event);
++		} catch (RuntimeException e) {
++			e.printStackTrace();
++		}
++		
  		super.doSave(progressMonitor);
-+		for (IDocumentListener listener : onSaveListeners)
-+			listener.documentChanged(event);
++		
++		try {
++			for (IDocumentListener listener : onSaveListeners)
++				listener.documentChanged(event);
++		} catch (RuntimeException e) {
++			e.printStackTrace();
++		}
  	}
  
      public void removeParserAnnotations() {

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-06-12 23:54:19 UTC (rev 21001)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-06-14 10:26:12 UTC (rev 21002)
@@ -31,14 +31,13 @@
         <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
         
         <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
-            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
                 <arg value="${include}/${esvmodule}.packed.esv"/>
             </java>
         </target>
         
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
-            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
@@ -53,6 +52,7 @@
             <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
             <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
             <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -307,7 +307,7 @@
         </target>
     
         <!-- Stratego to Java compiler -->
-        <target name="stratego.jar" depends="rtg2sig">
+        <target name="stratego.jar" depends="rtg2sig,utils-files">
             <dependset>
                 <srcfileset dir="${basedir}">
                     <include name="**/*.str"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-06-12 23:54:19 UTC (rev 21001)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-06-14 10:26:12 UTC (rev 21002)
@@ -31,14 +31,13 @@
         <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
         
         <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
-            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
                 <arg value="${include}/${esvmodule}.packed.esv"/>
             </java>
         </target>
         
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
-            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
@@ -53,6 +52,7 @@
             <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
             <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
             <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -307,7 +307,7 @@
         </target>
     
         <!-- Stratego to Java compiler -->
-        <target name="stratego.jar" depends="rtg2sig">
+        <target name="stratego.jar" depends="rtg2sig,utils-files">
             <dependset>
                 <srcfileset dir="${basedir}">
                     <include name="**/*.str"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-06-12 23:54:19 UTC (rev 21001)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-06-14 10:26:12 UTC (rev 21002)
@@ -31,14 +31,13 @@
         <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
         
         <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
-            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
                 <arg value="${include}/${esvmodule}.packed.esv"/>
             </java>
         </target>
         
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
-            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
@@ -53,6 +52,7 @@
             <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
             <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
             <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -307,7 +307,7 @@
         </target>
     
         <!-- Stratego to Java compiler -->
-        <target name="stratego.jar" depends="rtg2sig">
+        <target name="stratego.jar" depends="rtg2sig,utils-files">
             <dependset>
                 <srcfileset dir="${basedir}">
                     <include name="**/*.str"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	2010-06-12 23:54:19 UTC (rev 21001)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	2010-06-14 10:26:12 UTC (rev 21002)
@@ -31,14 +31,13 @@
         <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
         
         <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
-            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
                 <arg value="${include}/${esvmodule}.packed.esv"/>
             </java>
         </target>
         
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
-            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
@@ -53,6 +52,7 @@
             <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
             <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
             <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -307,7 +307,7 @@
         </target>
     
         <!-- Stratego to Java compiler -->
-        <target name="stratego.jar" depends="rtg2sig">
+        <target name="stratego.jar" depends="rtg2sig,utils-files">
             <dependset>
                 <srcfileset dir="${basedir}">
                     <include name="**/*.str"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-06-12 23:54:19 UTC (rev 21001)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-06-14 10:26:12 UTC (rev 21002)
@@ -31,14 +31,13 @@
         <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
         
         <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
-            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
                 <arg value="${include}/${esvmodule}.packed.esv"/>
             </java>
         </target>
         
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
-            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
@@ -53,6 +52,7 @@
             <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
             <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
             <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -307,7 +307,7 @@
         </target>
     
         <!-- Stratego to Java compiler -->
-        <target name="stratego.jar" depends="rtg2sig">
+        <target name="stratego.jar" depends="rtg2sig,utils-files">
             <dependset>
                 <srcfileset dir="${basedir}">
                     <include name="**/*.str"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-06-12 23:54:19 UTC (rev 21001)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-06-14 10:26:12 UTC (rev 21002)
@@ -31,14 +31,13 @@
         <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
         
         <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
-            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
                 <arg value="${include}/${esvmodule}.packed.esv"/>
             </java>
         </target>
         
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
-            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
@@ -53,6 +52,7 @@
             <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
             <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
             <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -307,7 +307,7 @@
         </target>
     
         <!-- Stratego to Java compiler -->
-        <target name="stratego.jar" depends="rtg2sig">
+        <target name="stratego.jar" depends="rtg2sig,utils-files">
             <dependset>
                 <srcfileset dir="${basedir}">
                     <include name="**/*.str"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-06-12 23:54:19 UTC (rev 21001)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-06-14 10:26:12 UTC (rev 21002)
@@ -6,8 +6,6 @@
 
 strategies
 
-  // TODO: -XX:+TieredCompilation in Java 7?
-
   create-build-xml =
     // Note that we cannot call this file build.xml,
     // as Eclipse will delete it as it deploys plugins
@@ -111,7 +109,6 @@
         
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir" />
-            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
             <eclipse.refreshLocal resource="${projectdir}/lib" depth="infinite" />
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite" />
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite" />
@@ -126,6 +123,7 @@
             <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite" />
             <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build" />
             <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite" />
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -380,7 +378,7 @@
         </target>
     
         <!-- Stratego to Java compiler -->
-        <target name="stratego.jar" depends="rtg2sig">
+        <target name="stratego.jar" depends="rtg2sig,utils-files">
             <dependset>
                 <srcfileset dir="${basedir}">
                     <include name="**/*.str"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java	2010-06-12 23:54:19 UTC (rev 21001)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java	2010-06-14 10:26:12 UTC (rev 21002)
@@ -108,7 +108,7 @@
 
 	private void startEventHandler(IResourceChangeEvent event) {
 		isAsyncEventHandlerActive = true;
-		Job job = new WorkspaceJob("Updating editor descriptor runtime") {
+		Job job = new WorkspaceJob("Loading editor descriptors") {
 			@Override
 			public IStatus runInWorkspace(IProgressMonitor monitor) {
 				// TODO: Finer-grained locking? (that seems to lead to deadlocks)

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java	2010-06-12 23:54:19 UTC (rev 21001)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java	2010-06-14 10:26:12 UTC (rev 21002)
@@ -164,7 +164,8 @@
 		if (isReinitialized && lastEditor != null) {
 			// Update other services
 			lastEditor.getEditor().updateColoring(new Region(0, input.length()));
-			lastEditor.getEditor().fParserScheduler.notifyModelListeners(new NullProgressMonitor());
+			// UNDONE: Also called from ParserScheduler.run() 
+			// lastEditor.getEditor().fParserScheduler.notifyModelListeners(new NullProgressMonitor());
 			isReinitialized = false;
 		}
 		return result;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilderListener.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilderListener.java	2010-06-12 23:54:19 UTC (rev 21001)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilderListener.java	2010-06-14 10:26:12 UTC (rev 21002)
@@ -8,6 +8,7 @@
 import org.eclipse.imp.parser.IModelListener;
 import org.eclipse.imp.parser.IParseController;
 import org.eclipse.ui.IEditorPart;
+import org.eclipse.ui.texteditor.AbstractTextEditor;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.WeakWeakMap;
@@ -99,7 +100,7 @@
 		IEditorPart targetEditor = this.targetEditor.get();
 		
 		if (!enabled || editor == null || targetEditor == null || targetEditor.isDirty()
-				|| targetEditor.getTitleImage().isDisposed() // editor closed
+				|| isEditorClosed(targetEditor) 
 				|| targetFile.getLocalTimeStamp() > lastChanged) {
 			enabled = false;
 			selection = null;
@@ -110,6 +111,13 @@
 		}
 	}
 
+	private static boolean isEditorClosed(IEditorPart editor) {
+		return (editor.getTitleImage() != null && editor.getTitleImage().isDisposed())
+			|| editor.getEditorInput() == null
+			|| editor.getSite() == null
+			|| (editor instanceof AbstractTextEditor && ((AbstractTextEditor) editor).getDocumentProvider() == null);
+	}
+
 	public void update(IParseController parseController, IProgressMonitor monitor) {
 		update(monitor);
 	}


From L.C.L.Kats at tudelft.nl  Mon Jun 14 12:42:10 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 14 Jun 2010 10:42:10 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21003 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.updatesite
Message-ID: <201006141042.o5EAgApo000872@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-14 10:42:09 +0000 (Mon, 14 Jun 2010)
New Revision: 21003

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21003&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Release 0.5.1.9

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-14 10:26:12 UTC (rev 21002)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-14 10:42:09 UTC (rev 21003)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.5.1.8"
+      version="0.5.1.9"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-14 10:26:12 UTC (rev 21002)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-14 10:42:09 UTC (rev 21003)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.5.1.8.jar" id="org.strategoxt.imp" version="0.5.1.8">
+   <feature url="features/org.strategoxt.imp_0.5.1.9.jar" id="org.strategoxt.imp" version="0.5.1.9">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">


From L.C.L.Kats at tudelft.nl  Mon Jun 14 15:22:48 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 14 Jun 2010 13:22:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21004 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.aster
	org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.pp org.strategoxt.imp.editors.sdf
	org.strategoxt.imp.editors.stratego
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.updatesite
Message-ID: <201006141322.o5EDMmTb004016@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-14 13:22:47 +0000 (Mon, 14 Jun 2010)
New Revision: 21004

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21004&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
New-project fix for 0.5.1.9...

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-06-14 10:42:09 UTC (rev 21003)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-06-14 13:22:47 UTC (rev 21004)
@@ -21,6 +21,9 @@
         <condition property="externaljarflags" value="${externaljarflags}" else="">
             <isset property="externaljarflags"/>
         </condition>
+        <condition property="metasdfmodule.available" value="1">
+            <available file="${syntax}/${metasdfmodule}.sdf"/>
+        </condition>
         <mkdir dir="${build}"/>
         <mkdir dir="${src-gen}"/>
         <mkdir dir="${dist}"/>
@@ -78,7 +81,7 @@
             </apply>
         </target>
         
-        <target name="meta-sdf2table">
+        <target name="meta-sdf2table" if="metasdfmodule.available">
             <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
             <antcall target="sdf2table">
                 <param name="sdfmodule" value="${metasdfmodule}"/>
@@ -125,6 +128,9 @@
         </target>
     
         <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <condition property="utils-include" value="-I ${utils}" else="">
+                <available file="${utils}"/>
+            </condition>
             <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-pack-sdf"/>
                 <arg value="-i"/>
@@ -134,9 +140,8 @@
                 <arg value="-I"/>
                 <arg value="${syntax}"/>
                 <arg value="-I"/>
-                <arg value="${utils}"/>
-                <arg value="-I"/>
                 <arg value="${lib}"/>
+                <arg line="${utils-include}"/>
                 <arg line="${build.sdf.imports}"/>
             </java>
         </target>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-06-14 10:42:09 UTC (rev 21003)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-06-14 13:22:47 UTC (rev 21004)
@@ -21,6 +21,9 @@
         <condition property="externaljarflags" value="${externaljarflags}" else="">
             <isset property="externaljarflags"/>
         </condition>
+        <condition property="metasdfmodule.available" value="1">
+            <available file="${syntax}/${metasdfmodule}.sdf"/>
+        </condition>
         <mkdir dir="${build}"/>
         <mkdir dir="${src-gen}"/>
         <mkdir dir="${dist}"/>
@@ -78,7 +81,7 @@
             </apply>
         </target>
         
-        <target name="meta-sdf2table">
+        <target name="meta-sdf2table" if="metasdfmodule.available">
             <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
             <antcall target="sdf2table">
                 <param name="sdfmodule" value="${metasdfmodule}"/>
@@ -125,6 +128,9 @@
         </target>
     
         <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <condition property="utils-include" value="-I ${utils}" else="">
+                <available file="${utils}"/>
+            </condition>
             <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-pack-sdf"/>
                 <arg value="-i"/>
@@ -134,9 +140,8 @@
                 <arg value="-I"/>
                 <arg value="${syntax}"/>
                 <arg value="-I"/>
-                <arg value="${utils}"/>
-                <arg value="-I"/>
                 <arg value="${lib}"/>
+                <arg line="${utils-include}"/>
                 <arg line="${build.sdf.imports}"/>
             </java>
         </target>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-06-14 10:42:09 UTC (rev 21003)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-06-14 13:22:47 UTC (rev 21004)
@@ -21,6 +21,9 @@
         <condition property="externaljarflags" value="${externaljarflags}" else="">
             <isset property="externaljarflags"/>
         </condition>
+        <condition property="metasdfmodule.available" value="1">
+            <available file="${syntax}/${metasdfmodule}.sdf"/>
+        </condition>
         <mkdir dir="${build}"/>
         <mkdir dir="${src-gen}"/>
         <mkdir dir="${dist}"/>
@@ -78,7 +81,7 @@
             </apply>
         </target>
         
-        <target name="meta-sdf2table">
+        <target name="meta-sdf2table" if="metasdfmodule.available">
             <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
             <antcall target="sdf2table">
                 <param name="sdfmodule" value="${metasdfmodule}"/>
@@ -125,6 +128,9 @@
         </target>
     
         <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <condition property="utils-include" value="-I ${utils}" else="">
+                <available file="${utils}"/>
+            </condition>
             <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-pack-sdf"/>
                 <arg value="-i"/>
@@ -134,9 +140,8 @@
                 <arg value="-I"/>
                 <arg value="${syntax}"/>
                 <arg value="-I"/>
-                <arg value="${utils}"/>
-                <arg value="-I"/>
                 <arg value="${lib}"/>
+                <arg line="${utils-include}"/>
                 <arg line="${build.sdf.imports}"/>
             </java>
         </target>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	2010-06-14 10:42:09 UTC (rev 21003)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	2010-06-14 13:22:47 UTC (rev 21004)
@@ -21,6 +21,9 @@
         <condition property="externaljarflags" value="${externaljarflags}" else="">
             <isset property="externaljarflags"/>
         </condition>
+        <condition property="metasdfmodule.available" value="1">
+            <available file="${syntax}/${metasdfmodule}.sdf"/>
+        </condition>
         <mkdir dir="${build}"/>
         <mkdir dir="${src-gen}"/>
         <mkdir dir="${dist}"/>
@@ -78,7 +81,7 @@
             </apply>
         </target>
         
-        <target name="meta-sdf2table">
+        <target name="meta-sdf2table" if="metasdfmodule.available">
             <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
             <antcall target="sdf2table">
                 <param name="sdfmodule" value="${metasdfmodule}"/>
@@ -125,6 +128,9 @@
         </target>
     
         <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <condition property="utils-include" value="-I ${utils}" else="">
+                <available file="${utils}"/>
+            </condition>
             <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-pack-sdf"/>
                 <arg value="-i"/>
@@ -134,9 +140,8 @@
                 <arg value="-I"/>
                 <arg value="${syntax}"/>
                 <arg value="-I"/>
-                <arg value="${utils}"/>
-                <arg value="-I"/>
                 <arg value="${lib}"/>
+                <arg line="${utils-include}"/>
                 <arg line="${build.sdf.imports}"/>
             </java>
         </target>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-06-14 10:42:09 UTC (rev 21003)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-06-14 13:22:47 UTC (rev 21004)
@@ -21,6 +21,9 @@
         <condition property="externaljarflags" value="${externaljarflags}" else="">
             <isset property="externaljarflags"/>
         </condition>
+        <condition property="metasdfmodule.available" value="1">
+            <available file="${syntax}/${metasdfmodule}.sdf"/>
+        </condition>
         <mkdir dir="${build}"/>
         <mkdir dir="${src-gen}"/>
         <mkdir dir="${dist}"/>
@@ -78,7 +81,7 @@
             </apply>
         </target>
         
-        <target name="meta-sdf2table">
+        <target name="meta-sdf2table" if="metasdfmodule.available">
             <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
             <antcall target="sdf2table">
                 <param name="sdfmodule" value="${metasdfmodule}"/>
@@ -125,6 +128,9 @@
         </target>
     
         <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <condition property="utils-include" value="-I ${utils}" else="">
+                <available file="${utils}"/>
+            </condition>
             <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-pack-sdf"/>
                 <arg value="-i"/>
@@ -134,9 +140,8 @@
                 <arg value="-I"/>
                 <arg value="${syntax}"/>
                 <arg value="-I"/>
-                <arg value="${utils}"/>
-                <arg value="-I"/>
                 <arg value="${lib}"/>
+                <arg line="${utils-include}"/>
                 <arg line="${build.sdf.imports}"/>
             </java>
         </target>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-06-14 10:42:09 UTC (rev 21003)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-06-14 13:22:47 UTC (rev 21004)
@@ -21,6 +21,9 @@
         <condition property="externaljarflags" value="${externaljarflags}" else="">
             <isset property="externaljarflags"/>
         </condition>
+        <condition property="metasdfmodule.available" value="1">
+            <available file="${syntax}/${metasdfmodule}.sdf"/>
+        </condition>
         <mkdir dir="${build}"/>
         <mkdir dir="${src-gen}"/>
         <mkdir dir="${dist}"/>
@@ -78,7 +81,7 @@
             </apply>
         </target>
         
-        <target name="meta-sdf2table">
+        <target name="meta-sdf2table" if="metasdfmodule.available">
             <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
             <antcall target="sdf2table">
                 <param name="sdfmodule" value="${metasdfmodule}"/>
@@ -125,6 +128,9 @@
         </target>
     
         <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <condition property="utils-include" value="-I ${utils}" else="">
+                <available file="${utils}"/>
+            </condition>
             <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-pack-sdf"/>
                 <arg value="-i"/>
@@ -134,9 +140,8 @@
                 <arg value="-I"/>
                 <arg value="${syntax}"/>
                 <arg value="-I"/>
-                <arg value="${utils}"/>
-                <arg value="-I"/>
                 <arg value="${lib}"/>
+                <arg line="${utils-include}"/>
                 <arg line="${build.sdf.imports}"/>
             </java>
         </target>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-06-14 10:42:09 UTC (rev 21003)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-06-14 13:22:47 UTC (rev 21004)
@@ -92,6 +92,9 @@
         <condition property="externaljarflags" value="${externaljarflags}" else="">
             <isset property="externaljarflags"/>
         </condition>
+        <condition property="metasdfmodule.available" value="1">
+            <available file="${syntax}/${metasdfmodule}.sdf"/>
+        </condition>
         <mkdir dir="${build}"/>
         <mkdir dir="${src-gen}"/>
         <mkdir dir="${dist}"/>
@@ -149,7 +152,7 @@
             </apply>
         </target>
         
-        <target name="meta-sdf2table">
+        <target name="meta-sdf2table" if="metasdfmodule.available">
             <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
             <antcall target="sdf2table">
                 <param name="sdfmodule" value="${metasdfmodule}"/>
@@ -196,6 +199,9 @@
         </target>
     
         <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <condition property="utils-include" value="-I ${utils}" else="">
+                <available file="${utils}"/>
+            </condition>
             <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-pack-sdf"/>
                 <arg value="-i"/>
@@ -205,9 +211,8 @@
                 <arg value="-I"/>
                 <arg value="${syntax}"/>
                 <arg value="-I"/>
-                <arg value="${utils}"/>
-                <arg value="-I"/>
                 <arg value="${lib}"/>
+                <arg line="${utils-include}"/>
                 <arg line="${build.sdf.imports}"/>
             </java>
         </target>

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-14 10:42:09 UTC (rev 21003)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-14 13:22:47 UTC (rev 21004)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.5.1.9.jar" id="org.strategoxt.imp" version="0.5.1.9">
+   <feature url="features/org.strategoxt.imp_0.5.1.9.jar"  id="org.strategoxt.imp" version="0.5.1.9">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">


From L.C.L.Kats at tudelft.nl  Tue Jun 15 12:46:12 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 15 Jun 2010 10:46:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21005 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/stratego
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
	org.strategoxt.imp.updatesite
Message-ID: <201006151046.o5FAkClS022292@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-15 10:46:12 +0000 (Tue, 15 Jun 2010)
New Revision: 21005

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21005&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/stratego/IMPParseStrategoFileStrategy.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ParseControllerFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/KeywordRecognizer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Release 0.5.1.10: Spoofax/180: Loop when loading parse table

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-14 13:22:47 UTC (rev 21004)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-15 10:46:12 UTC (rev 21005)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.5.1.9"
+      version="0.5.1.10"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/stratego/IMPParseStrategoFileStrategy.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/stratego/IMPParseStrategoFileStrategy.java	2010-06-14 13:22:47 UTC (rev 21004)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/stratego/IMPParseStrategoFileStrategy.java	2010-06-15 10:46:12 UTC (rev 21005)
@@ -70,7 +70,7 @@
 	private JSGLRI getStrategoParser() {
 		try {
 			Language strategoSugar = LanguageRegistry.findLanguage(StrategoSugarParseController.LANGUAGE);
-			JSGLRI parser = new JSGLRI(Environment.getParseTable(strategoSugar), "Module");
+			JSGLRI parser = new JSGLRI(Environment.getParseTableProvider(strategoSugar), "Module");
 			if (parser.getParseTable().hasRecovers()) parser.setUseRecovery(true);
 			return parser;
 		} catch (NoRecoveryRulesException e) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-06-14 13:22:47 UTC (rev 21004)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-06-15 10:46:12 UTC (rev 21005)
@@ -240,16 +240,16 @@
 		return parseTableManager.loadFromStream(stream);
 	}
 	
-	public static ParseTable getParseTable(Language language)
+	public static ParseTableProvider getParseTableProvider(Language language)
 			throws BadDescriptorException, InvalidParseTableException,
 			       IOException, CoreException, IllegalStateException {
 		
-		ParseTable table = parseTables.get(language.getName()).get();
+		ParseTableProvider result = parseTables.get(language.getName());
 		
-		if (table == null)
+		if (result == null)
 			throw new IllegalStateException("Parse table not available: " + language.getName());
 			
-		return table;
+		return result;
 	}
 	
 	public static void registerDescriptor(Language language, Descriptor descriptor)

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java	2010-06-14 13:22:47 UTC (rev 21004)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java	2010-06-15 10:46:12 UTC (rev 21005)
@@ -6,7 +6,6 @@
 import org.eclipse.core.resources.IResource;
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.core.runtime.IProgressMonitor;
-import org.eclipse.core.runtime.NullProgressMonitor;
 import org.eclipse.imp.language.Language;
 import org.eclipse.imp.language.LanguageRegistry;
 import org.eclipse.imp.model.ISourceProject;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ParseControllerFactory.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ParseControllerFactory.java	2010-06-14 13:22:47 UTC (rev 21004)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ParseControllerFactory.java	2010-06-15 10:46:12 UTC (rev 21005)
@@ -7,7 +7,6 @@
 import org.eclipse.imp.parser.IParseController;
 import org.eclipse.imp.services.ILanguageSyntaxProperties;
 import org.spoofax.jsglr.InvalidParseTableException;
-import org.spoofax.jsglr.ParseTable;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.parser.SGLRParseController;
 
@@ -24,9 +23,9 @@
 	public IParseController create(Descriptor descriptor, SGLRParseController controller) throws BadDescriptorException {
 		ILanguageSyntaxProperties syntaxProperties = descriptor.createService(ILanguageSyntaxProperties.class, controller);
 		Language language = descriptor.getLanguage();
-		ParseTable table;
+		ParseTableProvider table;
 		try {
-			table = Environment.getParseTable(language);
+			table = Environment.getParseTableProvider(language);
 		} catch (InvalidParseTableException e) {
 			throw new BadDescriptorException("Could not load parse table for " + language.getName(), e);
 		} catch (IOException e) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java	2010-06-14 13:22:47 UTC (rev 21004)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java	2010-06-15 10:46:12 UTC (rev 21005)
@@ -14,6 +14,7 @@
 import org.spoofax.jsglr.SGLRException;
 import org.spoofax.jsglr.TokenExpectedException;
 import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.ParseTableProvider;
 import org.strategoxt.imp.runtime.parser.tokens.TokenKindManager;
 
 import aterm.ATerm;
@@ -25,7 +26,7 @@
  */ 
 public class JSGLRI extends AbstractSGLRI {
 	
-	private ParseTable parseTable;
+	private ParseTableProvider parseTable;
 	
 	private boolean useRecovery = false;
 	
@@ -37,7 +38,7 @@
 	
 	// Initialization and parsing
 	
-	public JSGLRI(ParseTable parseTable, String startSymbol,
+	public JSGLRI(ParseTableProvider parseTable, String startSymbol,
 			SGLRParseController controller, TokenKindManager tokenManager) {
 		super(controller, tokenManager, startSymbol, parseTable);
 		
@@ -45,10 +46,19 @@
 		resetState();
 	}
 	
-	public JSGLRI(ParseTable parseTable, String startSymbol) {
+	public JSGLRI(ParseTable parseTable, String startSymbol,
+			SGLRParseController controller, TokenKindManager tokenManager) {
+		this(new ParseTableProvider(parseTable), startSymbol, controller, tokenManager);
+	}
+	
+	public JSGLRI(ParseTableProvider parseTable, String startSymbol) {
 		this(parseTable, startSymbol, null, new TokenKindManager());
 	}
 	
+	public JSGLRI(ParseTable parseTable, String startSymbol) {
+		this(new ParseTableProvider(parseTable), startSymbol);
+	}
+	
 	public void asyncAbort() {
 		parser.asyncAbort();
 	}
@@ -66,7 +76,11 @@
 	}
 	
 	public ParseTable getParseTable() {
-		return parseTable;
+		try {
+			return parseTable.get();
+		} catch (Exception e) {
+			throw new RuntimeException(e);
+		}
 	}
 	
 	public Disambiguator getDisambiguator() {
@@ -78,6 +92,11 @@
 	}
 	
 	public void setParseTable(ParseTable parseTable) {
+		this.parseTable = new ParseTableProvider(parseTable);
+		resetState();
+	}
+	
+	public void setParseTable(ParseTableProvider parseTable) {
 		this.parseTable = parseTable;
 		resetState();
 	}
@@ -98,7 +117,7 @@
 	 * Resets the state of this parser, reinitializing the SGLR instance
 	 */
 	void resetState() {
-		parser = Environment.createSGLR(parseTable);
+		parser = Environment.createSGLR(getParseTable());
 		parser.setTimeout(timeout);
 		if (disambiguator != null) parser.setDisambiguator(disambiguator);
 		else disambiguator = parser.getDisambiguator();

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-06-14 13:22:47 UTC (rev 21004)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-06-15 10:46:12 UTC (rev 21005)
@@ -42,6 +42,7 @@
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
 import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+import org.strategoxt.imp.runtime.dynamicloading.ParseTableProvider;
 import org.strategoxt.imp.runtime.parser.ast.AstNode;
 import org.strategoxt.imp.runtime.parser.ast.AstNodeLocator;
 import org.strategoxt.imp.runtime.parser.ast.RootAstNode;
@@ -182,7 +183,7 @@
      * @param language      The name of the language, as registered in the {@link LanguageRegistry}.
      * @param startSymbol	The start symbol of this grammar, or null.
      */
-    public SGLRParseController(Language language, ParseTable table, ILanguageSyntaxProperties syntaxProperties,
+    public SGLRParseController(Language language, ParseTableProvider table, ILanguageSyntaxProperties syntaxProperties,
 			String startSymbol) {
     	
     	this.language = language;
@@ -199,6 +200,12 @@
 		}
     }
     
+    @Deprecated
+    public SGLRParseController(Language language, ParseTable table, ILanguageSyntaxProperties syntaxProperties,
+			String startSymbol) {
+    	this(language, new ParseTableProvider(table), syntaxProperties, startSymbol);
+    }
+    
     /**
      * Creates a new SGLRParseController, throwing any parse table loading exceptions as runtime exceptions.
      * 
@@ -209,9 +216,9 @@
     	this(language, getTableSwallowExceptions(language), syntaxProperties, startSymbol);
     }
 
-    private static ParseTable getTableSwallowExceptions(Language language) {
+    private static ParseTableProvider getTableSwallowExceptions(Language language) {
 		try {
-			return Environment.getParseTable(language);
+			return Environment.getParseTableProvider(language);
 		} catch (Exception e) {
 			e.printStackTrace();
 			throw new RuntimeException(e);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/KeywordRecognizer.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/KeywordRecognizer.java	2010-06-14 13:22:47 UTC (rev 21004)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/KeywordRecognizer.java	2010-06-15 10:46:12 UTC (rev 21005)
@@ -53,7 +53,7 @@
 		if (result == null) {
 			try {
 				Debug.startTimer();
-				ParseTable table = Environment.getParseTable(d.getLanguage());
+				ParseTable table = Environment.getParseTableProvider(d.getLanguage()).get();
 				Debug.stopTimer("Keyword recognizer loaded for " + d.getLanguage().getName());
 				result = new KeywordRecognizer(table);
 				cache.put(d, result);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-14 13:22:47 UTC (rev 21004)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-15 10:46:12 UTC (rev 21005)
@@ -631,7 +631,11 @@
 		if (term instanceof WrappedAstNode) {
 			return ((WrappedAstNode) term).getNode();
 		} else {
-			Environment.logException("Resolved reference is not associated with an AST node " + term);
+			if (descriptor.isDynamicallyLoaded()) {
+				Environment.logWarning("Resolved reference is not associated with an AST node " + term);
+			} else {
+				Environment.logException("Resolved reference is not associated with an AST node " + term);
+			}
 			return null;
 		}
 	}

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-14 13:22:47 UTC (rev 21004)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-15 10:46:12 UTC (rev 21005)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.5.1.9.jar"  id="org.strategoxt.imp" version="0.5.1.9">
+   <feature url="features/org.strategoxt.imp_0.5.1.10.jar" id="org.strategoxt.imp" version="0.5.1.10">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">


From L.C.L.Kats at tudelft.nl  Tue Jun 15 12:47:53 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 15 Jun 2010 10:47:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21006 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.updatesite
Message-ID: <201006151047.o5FAlrOJ022316@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-15 10:47:53 +0000 (Tue, 15 Jun 2010)
New Revision: 21006

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21006&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Release 0.5.1.10 should be 0.5.1.91, apparently

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-15 10:46:12 UTC (rev 21005)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-15 10:47:53 UTC (rev 21006)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.5.1.10"
+      version="0.5.1.91"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-15 10:46:12 UTC (rev 21005)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-15 10:47:53 UTC (rev 21006)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.5.1.10.jar" id="org.strategoxt.imp" version="0.5.1.10">
+   <feature url="features/org.strategoxt.imp_0.5.1.91.jar" id="org.strategoxt.imp" version="0.5.1.91">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">


From L.C.L.Kats at tudelft.nl  Tue Jun 15 13:46:09 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 15 Jun 2010 11:46:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21007 - LennartKats -
	experimental/meta-amb-suggestions/editor
Message-ID: <201006151146.o5FBk9Y9023289@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-15 11:46:09 +0000 (Tue, 15 Jun 2010)
New Revision: 21007

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21007&view=rev

Modified:
   experimental/meta-amb-suggestions/editor/Meta-amb-suggestions.main.esv

Log:


Changes:

Modified: experimental/meta-amb-suggestions/editor/Meta-amb-suggestions.main.esv
===================================================================
--- experimental/meta-amb-suggestions/editor/Meta-amb-suggestions.main.esv	2010-06-15 10:47:53 UTC (rev 21006)
+++ experimental/meta-amb-suggestions/editor/Meta-amb-suggestions.main.esv	2010-06-15 11:46:09 UTC (rev 21007)
@@ -14,7 +14,7 @@
   description   : "Meta-amb-suggestions"
   url           : http://strategoxt.org
                   
-  extensions    : str,met
+  extensions    : met
   table         : include/Meta-amb-suggestions.tbl
   start symbols : Module[[StrategoHost]]
   // unmanaged table : Stratego*
\ No newline at end of file


From L.C.L.Kats at tudelft.nl  Tue Jun 15 13:48:51 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 15 Jun 2010 11:48:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21008 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.generator/src/sdf2imp
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <201006151148.o5FBmpMZ023312@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-15 11:48:51 +0000 (Tue, 15 Jun 2010)
New Revision: 21008

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21008&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java

Log:
error message tweaks

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	2010-06-15 11:46:09 UTC (rev 21007)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	2010-06-15 11:48:51 UTC (rev 21008)
@@ -66,7 +66,8 @@
     base-filename;
     (file-exists <+ !$[include/[<id>]]);
     if not(file-exists) then
-      fatal-err(|"Accompanying .def file not found.")
+      fatal-err-msg(|$[Accompanying .def file not found: [<id>].
+                       Maybe the project should be rebuilt?])
     end;
     verbose-msg(!"Found accompanying .def file:", id)
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-15 11:46:09 UTC (rev 21007)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-15 11:48:51 UTC (rev 21008)
@@ -602,18 +602,22 @@
 			Environment.logException("Runtime exited when evaluating strategy " + function, e);
 		} catch (UndefinedStrategyException e) {
 			// Note that this condition may also be reached when the semantic service hasn't been loaded yet
-			runtime.getIOAgent().printError("Internal error: strategy does not exist or is defined in a module that is not imported: " + e.getMessage());
+			if (descriptor.isDynamicallyLoaded())
+				runtime.getIOAgent().printError("Internal error: strategy does not exist or is defined in a module that is not imported: " + e.getMessage());
 			Environment.logException("Strategy does not exist: " + e.getMessage(), e);
 		} catch (InterpreterException e) {
-			runtime.getIOAgent().printError("Internal error evaluating " + function + " (" + name(e) + "; see error log)");
+			if (descriptor.isDynamicallyLoaded())
+				runtime.getIOAgent().printError("Internal error evaluating " + function + " (" + name(e) + "; see error log)");
 			Environment.logException("Internal error evaluating strategy " + function, e);
 			if (descriptor.isDynamicallyLoaded()) StrategoConsole.activateConsole();
 		} catch (RuntimeException e) {
-			if (runtime != null) runtime.getIOAgent().printError("Internal error evaluating " + function + " (" + name(e) + "; see error log)");
+			if (runtime != null && descriptor.isDynamicallyLoaded())
+				runtime.getIOAgent().printError("Internal error evaluating " + function + " (" + name(e) + "; see error log)");
 			Environment.logException("Internal error evaluating strategy " + function, e);
 			if (descriptor.isDynamicallyLoaded()) StrategoConsole.activateConsole();
 		} catch (Error e) { // e.g. NoClassDefFoundError due to bad/missing stratego jar
-			if (runtime != null) runtime.getIOAgent().printError("Internal error evaluating " + function + " (" + name(e) + "; see error log)");
+			if (runtime != null && descriptor.isDynamicallyLoaded())
+				runtime.getIOAgent().printError("Internal error evaluating " + function + " (" + name(e) + "; see error log)");
 			Environment.logException("Internal error evaluating strategy " + function, e);
 			if (descriptor.isDynamicallyLoaded()) StrategoConsole.activateConsole();
 		}


From L.C.L.Kats at tudelft.nl  Tue Jun 15 14:13:15 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 15 Jun 2010 12:13:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21009 - LennartKats -
	in spoofax-imp/trunk:
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building
Message-ID: <201006151213.o5FCDFLB023816@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-15 12:13:14 +0000 (Tue, 15 Jun 2010)
New Revision: 21009

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21009&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/AntDescriptorBuilder.java

Log:


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str	2010-06-15 11:48:51 UTC (rev 21008)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str	2010-06-15 12:13:14 UTC (rev 21009)
@@ -33,7 +33,7 @@
   // Analyzes the current program, returning a tuple with errors, warnings, and notes;
   // each a list of (term, message) tuples or simply (message) terms.
   editor-analyze:
-    (ast, path, project-path) -> (errors, warnings, notes)
+    (ast, path, project-path) -> (ast, errors, warnings, notes)
     with
       editor-init;
       analyze;

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/AntDescriptorBuilder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/AntDescriptorBuilder.java	2010-06-15 11:48:51 UTC (rev 21008)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/AntDescriptorBuilder.java	2010-06-15 12:13:14 UTC (rev 21009)
@@ -3,6 +3,7 @@
 import static org.strategoxt.imp.metatooling.loading.DynamicDescriptorLoader.*;
 
 import java.io.File;
+import java.io.IOException;
 import java.net.URI;
 
 import org.eclipse.core.resources.IResource;
@@ -48,7 +49,13 @@
 	}
 
 	private static IResource getResource(String file) {
-		URI uri = new File(file).toURI();
+		File fileRef = new File(file);
+		try {
+			fileRef = fileRef.getCanonicalFile();
+		} catch (IOException e) {
+			Environment.logException(e);
+		}
+		URI uri = fileRef.toURI();
 		IWorkspace workspace = ResourcesPlugin.getWorkspace();
 		IResource[] resources = workspace.getRoot().findFilesForLocationURI(uri);
 		if (resources.length == 0)


From L.C.L.Kats at tudelft.nl  Tue Jun 15 16:51:06 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 15 Jun 2010 14:51:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21010 - LennartKats -
	in spoofax-imp/trunk/org.strategoxt.imp.editors.sdf: .
	.externalToolBuilders trans
Message-ID: <201006151451.o5FEp68S025711@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-15 14:51:06 +0000 (Tue, 15 Jun 2010)
New Revision: 21010

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21010&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.externalToolBuilders/SDF build.main.xml.launch
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str

Log:
Error for injections with {bracket} attribute (don't ask)

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.externalToolBuilders/SDF build.main.xml.launch
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.externalToolBuilders/SDF build.main.xml.launch	2010-06-15 12:13:14 UTC (rev 21009)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.externalToolBuilders/SDF build.main.xml.launch	2010-06-15 14:51:06 UTC (rev 21010)
@@ -2,7 +2,7 @@
 <launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
 <stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
 <booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
-<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; id=&quot;1260698330169_15&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Outliner.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Folding.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Builders.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item fac!
 toryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Colorer.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/utils&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Syntax.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-References.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
+<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; id=&quot;1260698330169_15&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Outliner.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Folding.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Builders.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item fac!
 toryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Colorer.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-References.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Syntax.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/utils&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
 <listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
 <listEntry value="/org.strategoxt.imp.editors.sdf/build.main.xml"/>
 </listAttribute>
@@ -19,10 +19,8 @@
 <booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
 <stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="org.strategoxt.imp.editors.sdf"/>
 <stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="stratego.jar,"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${none}"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.editors.sdf/build.main.xml}"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS" value="-verbose"/>
 <booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.editors.sdf}"/>
 <stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml	2010-06-15 12:13:14 UTC (rev 21009)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml	2010-06-15 14:51:06 UTC (rev 21010)
@@ -38,5 +38,5 @@
         <import file="build.generated.xml"/>
     
         <!-- Main target -->
-        <target name="all" depends="utils-files,sdf2table,stratego.jar,sdf2imp"/>
+        <target name="all" depends="utils-files,sdf2table,stratego.jar,sdf2imp,refresh"/>
     </project>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	2010-06-15 12:13:14 UTC (rev 21009)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	2010-06-15 14:51:06 UTC (rev 21010)
@@ -19,7 +19,7 @@
       dr-scope-all-start
     with
       analyze-ast;
-      errors   := [];
+      errors   := <collect(?context-free-syntax(<collect-om(context-free-syntax-error)>))> ast;
       // We only collect-om since we don't want inner warning dupes
       warnings := <collect(?context-free-syntax(<collect-om(context-free-syntax-warning)>))> ast
 
@@ -43,14 +43,18 @@
       not(<collect(?sort(_))> p => [_])
     ; if !a* => attrs(a'*) then
         not(<one(term(default(appl(unquoted("cons"), [id]))))> a'*)
-      ; not(<one(term(default(appl(unquoted("bracket" + "reject"), []))))> a'*)
-      ; not(<one(reject())> a'*)
+      ; not(<one(bracket() + reject())> a'*)
       ; not(!s; (sort("Keyword") + sort("\"Keyword\""))) 
       ; target := a*
       else
         target := s
       end
    
+  context-free-syntax-error:
+    prod([x], s, attrs(a*)) -> (a*, $[Illegal use of {bracket} attribute])
+    where
+      <one(bracket())> a*
+   
   context-free-syntax-warning:
     alt(x, y) -> (<id>, $[The | construct is deprecated: instead of A|B->C use A->C B->C])
 


From L.C.L.Kats at tudelft.nl  Tue Jun 15 21:34:33 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 15 Jun 2010 19:34:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21011 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr
Message-ID: <201006151934.o5FJYXS7029583@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-15 19:34:33 +0000 (Tue, 15 Jun 2010)
New Revision: 21011

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21011&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Amb.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Disambiguator.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/FineGrainedOnRegion.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IParseNode.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseNode.java

Log:
- Fixed IndexOutOfBoundsException in FineGrainedOnRegion
- Added flattening of ambiguities in Amb.toParseTree()
- Added hashcode caching of IParseNode, mostly to speed up disambiguation


Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Amb.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Amb.java	2010-06-15 14:51:06 UTC (rev 21010)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Amb.java	2010-06-15 19:34:33 UTC (rev 21011)
@@ -15,11 +15,13 @@
 import aterm.ATermFactory;
 
 public class Amb extends IParseNode {
-
+    
     private final List<IParseNode> alternatives;
+    
+    private int cachedHashCode = NO_HASH_CODE;
 
     Amb(IParseNode left, IParseNode right) {
-        alternatives = new ArrayList<IParseNode>();
+        alternatives = new ArrayList<IParseNode>(2);
         alternatives.add(left);
         alternatives.add(right);
     }
@@ -31,18 +33,32 @@
     public ATerm toParseTree(ParseTable pt) {
 
         ATermFactory factory = pt.getFactory();
-        ATermList l1 = factory.makeList();
+        ATermList list = factory.makeList();
+        list = addToParseTree(pt, factory, list);
+        return pt.getFactory().makeAppl(pt.ambAFun, list);
+    }
+
+    private ATermList addToParseTree(ParseTable pt, ATermFactory factory,
+            ATermList list) {
+        
         for (int i = alternatives.size() - 1; i >= 0; i--) {
-            l1 = factory.makeList(alternatives.get(i).toParseTree(pt), l1);
+            IParseNode alt = alternatives.get(i);
+            if (alt instanceof Amb) {
+                list = ((Amb) alt).addToParseTree(pt, factory, list);
+            } else {
+                list = factory.makeList(alt.toParseTree(pt), list);
+            }
         }
-        return pt.getFactory().makeAppl(pt.ambAFun, l1);
+        return list;
     }
 
-    public void clear() {
+    @Deprecated
+    void clear() {
         for (int i = 0; i < alternatives.size(); i++) {
             alternatives.get(i).clear();
         }
         alternatives.clear();
+        cachedHashCode = NO_HASH_CODE;
     }
 
     @Override
@@ -62,8 +78,11 @@
     public boolean equals(Object obj) {
         if(!(obj instanceof Amb))
             return false;
+        if (obj == this)
+            return true;
         Amb o = (Amb)obj;
-        if(o.alternatives.size() != alternatives.size())
+        if(o.alternatives.size() != alternatives.size()
+                || o.hashCode() != hashCode())
             return false;
         for(int i=0;i<alternatives.size();i++)
             if(!alternatives.get(i).equals(o.alternatives.get(i)))
@@ -73,10 +92,12 @@
     
     @Override
     public int hashCode() {
-        int r = 0;
-        for(IParseNode n : alternatives)
-            r += n.hashCode();
-        return r;
+        if (cachedHashCode != NO_HASH_CODE) {
+            assert cachedHashCode == alternatives.hashCode();
+            return cachedHashCode;
+        }
+        int result = cachedHashCode = alternatives.hashCode();
+        return result;
     }
 
     @Override

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Disambiguator.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Disambiguator.java	2010-06-15 14:51:06 UTC (rev 21010)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Disambiguator.java	2010-06-15 19:34:33 UTC (rev 21011)
@@ -281,7 +281,7 @@
         if (sort != null && filterTopSort) {
             t = selectOnTopSort(t, sort);
             if (t == null)
-                throw new StartSymbolException(parser, "Desired start symbol not found");
+                throw new StartSymbolException(parser, "Desired start symbol not found: " + sort);
         }
         
         return t;

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/FineGrainedOnRegion.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/FineGrainedOnRegion.java	2010-06-15 14:51:06 UTC (rev 21010)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/FineGrainedOnRegion.java	2010-06-15 19:34:33 UTC (rev 21011)
@@ -59,6 +59,8 @@
         if(loops>MAX_NR_OF_LINES)//max nr of lines explored in backtracking
             return false;
         int indexChoichePoints=Math.max(0, indexCP);
+        if (indexChoichePoints >= choicePoints.size())
+            return false;
         BacktrackPosition btPosition=choicePoints.get(indexChoichePoints);
         mySGLR.activeStacks.clear();
         mySGLR.activeStacks.addAll(btPosition.recoverStacks);

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IParseNode.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IParseNode.java	2010-06-15 14:51:06 UTC (rev 21010)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IParseNode.java	2010-06-15 19:34:33 UTC (rev 21011)
@@ -11,8 +11,11 @@
 
 public abstract class IParseNode {
 
+    protected static final int NO_HASH_CODE = 0;
+
     public abstract ATerm toParseTree(ParseTable pt);
 
+    @Deprecated
     abstract void clear();
     abstract public boolean equals(Object obj);
     abstract public int hashCode();

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseNode.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseNode.java	2010-06-15 14:51:06 UTC (rev 21010)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseNode.java	2010-06-15 19:34:33 UTC (rev 21011)
@@ -17,7 +17,10 @@
 public class ParseNode extends IParseNode {
 
     public final int label;
-    protected List<IParseNode> kids;
+    
+    protected final List<IParseNode> kids;
+    
+    private int cachedHashCode;
 
     public ParseNode(int label, List<IParseNode> kids) {
         this.label = label;
@@ -55,11 +58,13 @@
     
     public List<IParseNode> getKids() { return kids; }
 
+    @Deprecated
     void clear() {
         for (int i = 0; i < kids.size(); i++) {
             kids.get(i).clear();
         }
         kids.clear();
+        cachedHashCode = NO_HASH_CODE;
     }
     
     @Override
@@ -69,10 +74,9 @@
         if (obj == this)
             return true;
         ParseNode o = (ParseNode)obj;
-        if(label != o.label)
+        if(label != o.label || kids.size() != o.kids.size()
+                || hashCode() != o.hashCode())
             return false;
-        if(kids.size() != o.kids.size())
-            return false;
         for(int i=0;i<kids.size();i++) {
             if(!kids.get(i).equals(o.kids.get(i)))
                 return false;
@@ -82,11 +86,14 @@
     
     @Override
     public int hashCode() {
-        // FIXME improve
-        int r = 1337 * label ;
+        if (cachedHashCode != NO_HASH_CODE)
+            return cachedHashCode;
+        final int prime = 31;
+        int result = prime * label;
         for(IParseNode n : kids)
-            r += n.hashCode();
-        return r;
+            result += (prime * n.hashCode());
+        cachedHashCode = result;
+        return result;
     }
 
     @Override


From L.C.L.Kats at tudelft.nl  Wed Jun 16 10:10:07 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 16 Jun 2010 08:10:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21012 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr
	strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override
Message-ID: <201006160810.o5G8A7oI008077@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-16 08:10:07 +0000 (Wed, 16 Jun 2010)
New Revision: 21012

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21012&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Disambiguator.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser-compat.str

Log:


Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Disambiguator.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Disambiguator.java	2010-06-15 19:34:33 UTC (rev 21011)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Disambiguator.java	2010-06-16 08:10:07 UTC (rev 21012)
@@ -700,7 +700,7 @@
             List<IParseNode> oldAmbiguities = new LinkedList<IParseNode>();
             oldAmbiguities.addAll(newAmbiguities);
             for (IParseNode amb : oldAmbiguities) {
-                if (newAmbiguities.remove(amb)) { // TODO: optimize - use index (avoid equals() check)
+                if (newAmbiguities.remove(amb)) {
                     newAmbiguities = filterAmbiguityList(newAmbiguities, amb);
                 }
             }

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser-compat.str
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser-compat.str	2010-06-15 19:34:33 UTC (rev 21011)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser-compat.str	2010-06-16 08:10:07 UTC (rev 21012)
@@ -22,6 +22,11 @@
   override close-parse-table =
     jsglr-close-parsetable
 
+  // HACK: currently seems to inline close-parse-table
+  override open-parse-table-wrap-report-errors(s : OpenParseTable * a -> b | tbl) =
+    where(tbl' := <open-parse-table-report-errors> tbl)
+    ; finally(s(|tbl'), <close-parse-table> tbl')
+
   override parse-file(on-open-error, on-parse-error | tbl, start-symbol, path) =
       (<fopen> (<id>, "r") => stream <+ on-open-error; fail)
     ; finally(


From L.C.L.Kats at tudelft.nl  Wed Jun 16 10:12:18 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 16 Jun 2010 08:12:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21013 - LennartKats -
	strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode
Message-ID: <201006160812.o5G8CIGZ008083@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-16 08:12:18 +0000 (Wed, 16 Jun 2010)
New Revision: 21013

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21013&view=rev

Modified:
   strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode/lexical.str

Log:
Added support for ambs in asfix-yield-appl (needed for meta-amb-suggestions, and hopefully fixing StrategoXT/821)

Changes:

Modified: strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode/lexical.str
===================================================================
--- strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode/lexical.str	2010-06-16 08:10:07 UTC (rev 21012)
+++ strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode/lexical.str	2010-06-16 08:12:18 UTC (rev 21013)
@@ -78,3 +78,6 @@
     i -> [i | acc]
     where
       is-int
+  
+  asfix-yield-acc(rec : b * c -> d | acc) :
+    amb([x | _]) -> <rec(|acc)> x


From L.C.L.Kats at tudelft.nl  Wed Jun 16 10:25:27 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 16 Jun 2010 08:25:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21014 - LennartKats -
	in experimental/meta-amb-suggestions: test/Stratego-Java-15 trans
Message-ID: <201006160825.o5G8PRQJ008181@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-16 08:25:27 +0000 (Wed, 16 Jun 2010)
New Revision: 21014

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21014&view=rev

Added:
   experimental/meta-amb-suggestions/test/Stratego-Java-15/test3.met
Modified:
   experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str

Log:
- Handles more cases
- Fixed a bug that caused it to give ambiguous suggestions lie "java |[ class X {} ]|"
- Requires latest JSGLR and STRJ


Changes:

Added: experimental/meta-amb-suggestions/test/Stratego-Java-15/test3.met
===================================================================
--- experimental/meta-amb-suggestions/test/Stratego-Java-15/test3.met	                        (rev 0)
+++ experimental/meta-amb-suggestions/test/Stratego-Java-15/test3.met	2010-06-16 08:25:27 UTC (rev 21014)
@@ -0,0 +1,5 @@
+module foo
+
+rules
+
+  a = !|[ class X{} ]|

Modified: experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str
===================================================================
--- experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str	2010-06-16 08:12:18 UTC (rev 21013)
+++ experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str	2010-06-16 08:25:27 UTC (rev 21014)
@@ -13,6 +13,13 @@
   
   parse-table : Version * StartState * List(Label) * List(State) * List(Priority) -> parse-table
 
+overlays
+  
+  TO_META        = "ToMetaExpr"
+  TO_META_LIST   = "ToMetaListExpr"
+  FROM_META      = "FromMetaExpr"
+  FROM_META_LIST = "FromMetaListExpr"
+
 rules
   
   main-meta_amb_suggestions =
@@ -23,7 +30,7 @@
     )
   
   meta_amb_suggestions:
-    FILE(file) -> suggestion*
+    input -> suggestion*
     with
       <set-config> ("--statistics", 0);
       log-timed(
@@ -32,7 +39,11 @@
       | "Parse table loaded", 0
       );
       log-timed(
-        ast := <parse-xtc-file-pt-report-errors(|table, None())> FILE(file)
+        if !input => FILE(_) then
+          ast := <parse-xtc-file-pt-report-errors(|table, None())> input
+        else
+          ast := <parse-string-pt(strsglr-report-parse-error|table, None())> input
+        end
       | "File parsed", 0
       );
       rules(
@@ -54,6 +65,7 @@
   generate-amb-suggestions:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
+      // FIXME: this rule reads the file from disk again, ignoring unsaved changes
       editor-init;
       filename                 := <guarantee-extension(|"suggestions.aterm")> path;
       (tree, errors, warnings) := <meta_amb_suggestions> FILE($[[project-path]/[path]]);
@@ -76,12 +88,12 @@
     where
       cons  := <fetch-cons> a*;
       switch !cons
-        case "ToMetaExpr":
+        case TO_META + TO_META_LIST:
           sort1 := <fetch-meta-expr-contents> lhs;
           rules(
             ToMetaExprs   :+ (table-name, sort1, sort2) -> prod
           )
-        case "FromMetaExpr":
+        case FROM_META + FROM_META_LIST:
           sort1 := <fetch-meta-expr-contents> lhs;
           rules(
             FromMetaExprs :+ (table-name, sort1, sort2) -> prod
@@ -135,26 +147,27 @@
       end
 
   /**
-   * Tests if an ambiguous branch is a ToMetaExpr/FromMetaExpr.
+   * Tests if an ambiguous branch is a *Meta*Expr.
    */
   is-meta-expr-branch:
     appl(prod(_, _, attrs), kid*) -> <id>
     where
       attrs(a*) := attrs;
-      <fetch-cons> a* => <"ToMetaExpr" + "FromMetaExpr">
+      <fetch-cons> a* => <TO_META + FROM_META +
+                          TO_META_LIST + FROM_META_LIST>
     <+
       one(<is-meta-expr-branch> kid*)
 
   /**
-   * Tests if an ambiguous branch is a ToMetaExpr.
+   * Tests if an ambiguous branch has a ToMeta*Expr.
    */
   is-to-meta-expr-branch:
     appl(prod(_, _, attrs), kid*) -> <id>
     where
       if attrs(a*) := attrs; fetch-cons => cons then
         switch !cons
-          case "ToMetaExpr": id
-          case "FromMetaExpr": fail
+          case TO_META + TO_META_LIST: id
+          case FROM_META + FROM_META_LIST: fail
           otherwise: one(<is-to-meta-expr-branch> kid*)
         end
       else
@@ -172,28 +185,36 @@
   is-to-meta-expr-prod:
     prod(_, _, attrs(a*)) -> <id>
     where
-      <fetch-cons> a* => "ToMetaExpr"
+      <fetch-cons> a* => <TO_META + TO_META_LIST>
 
   is-meta-expr-prod:
     prod(_, _, attrs(a*)) -> <id>
     where
-      <fetch-cons> a* => <"FromMetaExpr" + "ToMetaExpr">
+      <fetch-cons> a* => <TO_META + TO_META_LIST +
+                          FROM_META + FROM_META_LIST>
 
   amb-suggestions:
     amb(a*) -> suggestion'*
     with
       current        := <collect-one(where(appl(is-meta-expr-prod, id)))>;
-      current-string := <normalize-layout; asfix-yield-appl-chars; implode-string> current;
+      current-string := <normalize-layout; asfix-yield-appl-chars'; implode-string> current;
       debug(!"  current: "); 
       quoted         := <fetch-meta-expr-contents> current;
-      quoted-string  := <asfix-yield-appl-chars; implode-string> quoted;
+      quoted-string  := <asfix-yield-appl-chars'; implode-string> quoted;
       debug(!"  quoted:  "); 
-      quotes         := <remove-duplicated> <mapconcat(amb-suggestion-parts)> a*;
+      quotes         := <map(amb-suggestion-parts)> a*;
       debug(!"  quotes:  ");
-      suggestion*    := <map(quote-suggestion(|quoted-string))> quotes;
+      quotes'        := <remove-duplicated> <concat> quotes;
+      debug(!"  quotes': ");
+      suggestion*    := <map(quote-suggestion(|quoted-string))> quotes';
       suggestion'*   := <filter(not(?current-string))> suggestion*;
       debug(!"  suggest: ")
   
+  asfix-yield-appl-chars':
+    x -> x'
+    with
+      x' := <asfix-yield-appl-chars> x
+  
   quote-suggestion(|quoted-string):
   	(prefix, postfix) -> result
   	with
@@ -219,18 +240,19 @@
    * Given an appl, gives matching quotation prefixes and postfixes.
    */
   amb-suggestion-parts:
-    appl(prod(lhs, sort2, attrs(rhs)), _) -> suggestion-part*
+    appl(prod @ prod(lhs, sort2, attrs(a*)), _) -> suggestion-part*
     with
       sort1 := <fetch-meta-expr-contents> lhs;
-      switch <fetch-cons> rhs
-        case "ToMetaExpr":
+      switch <fetch-cons> a*
+        case TO_META + TO_META_LIST:
           quotation-prod*  := <bagof-ToMetaExprs> (<CurrentTable>, sort1, sort2);
           suggestion-part* := <filter(amb-suggestion-parts-prod)> quotation-prod*
-        case "FromMetaExpr":
+        case FROM_META + FROM_META_LIST:
           quotation-prod*  := <bagof-FromMetaExprs> (<CurrentTable>, sort1, sort2);
           suggestion-part* := <filter(amb-suggestion-parts-prod)> quotation-prod*
         otherwise:
-          // TODO: handle injected/complex meta exprs
+          // TODO: handle injected/complex meta exprs?
+          <warn(|"Ignored branch of ambiguity")> prod;
           suggestion-part* := []
       end
   
@@ -259,6 +281,10 @@
   is-prod-sort =
     where(
       try(?cf(<id>));
+      try(
+        ?iter-star(<id>) + ?iter-star-sep(<id>, _)
+      + ?iter(<id>) + ?iter-sep(<id>, _)
+      );
       (?sort(_) + ?parameterized-sort(_, _))
     )
   
@@ -269,10 +295,11 @@
   remove-duplicated:
     [x | x*] -> x'*
     where
-      if <not(one(?x))> x* then
+      filtered-x* := <filter(not(?x))> x*;
+      if !filtered-x* => x* then
         x'* := [x | <remove-duplicated> x*]
       else
-        x'* := <remove-duplicated> x*
+        x'* := <remove-duplicated> filtered-x*
       end
   
   remove-duplicated:


From R.B.Vermaas at tudelft.nl  Wed Jun 16 13:33:45 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 16 Jun 2010 11:33:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21015 - rob - hydra/jobs
Message-ID: <201006161133.o5GBXjwq011004@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2010-06-16 11:33:45 +0000 (Wed, 16 Jun 2010)
New Revision: 21015

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21015&view=rev

Modified:
   hydra/jobs/pil.nix

Log:
disabled pil deb's

Changes:

Modified: hydra/jobs/pil.nix
===================================================================
--- hydra/jobs/pil.nix	2010-06-16 08:25:27 UTC (rev 21014)
+++ hydra/jobs/pil.nix	2010-06-16 11:33:45 UTC (rev 21015)
@@ -15,7 +15,7 @@
         inherit hydraConfig ;
         baselineNix = "${hydraConfig}/baseline-java.nix" ;
         inherit nixpkgs; 
-        makeDebs = true;
+#        makeDebs = true;
 #        makeRPMs = true;
       } ; 
    


From L.C.L.Kats at tudelft.nl  Wed Jun 16 22:31:28 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 16 Jun 2010 20:31:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21016 - LennartKats -
	in spoofax-imp/trunk/org.strategoxt.imp.runtime: .
	src/org/strategoxt/imp/runtime/parser
Message-ID: <201006162031.o5GKVSou021351@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-16 20:31:28 +0000 (Wed, 16 Jun 2010)
New Revision: 21016

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21016&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AmbSuggestionGenerator.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/plugin.xml

Log:
attempt at quick fix extension

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/plugin.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/plugin.xml	2010-06-16 11:33:45 UTC (rev 21015)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/plugin.xml	2010-06-16 20:31:28 UTC (rev 21016)
@@ -81,6 +81,8 @@
          name="Parse error"
          point="org.eclipse.core.resources.markers">
     		<persistent value="true" />
+        <super type="org.eclipse.core.resources.problemmarker"/>
+        <super type="org.eclipse.core.resources.textmarker"/>
    </extension>
    
    <extension
@@ -94,7 +96,7 @@
    
    <extension
       point="org.eclipse.ui.editors.annotationTypes">
-   <!-- (ignore any reference errors here *sigh*) -->
+   <!-- (ignore any reference warnings here *sigh*) -->
    <type
       name="org.strategoxt.imp.runtime.parseerror"
       super="org.eclipse.ui.workbench.texteditor.error"
@@ -114,6 +116,12 @@
       markerSeverity="2">
    </type>
    </extension>
+   
+   <extension point="org.eclipse.ui.ide.markerResolution">
+      <markerResolutionGenerator
+         markerType="org.strategoxt.imp.runtime.parsemarker"
+         class="org.strategoxt.imp.runtime.parser.AmbSuggestionGenerator"/>
+   </extension>
 
    <extension
          id="org.strategoxt.imp.runtime.parsemarkerspec"

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AmbSuggestionGenerator.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AmbSuggestionGenerator.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AmbSuggestionGenerator.java	2010-06-16 20:31:28 UTC (rev 21016)
@@ -0,0 +1,27 @@
+package org.strategoxt.imp.runtime.parser;
+
+import static org.eclipse.core.resources.IMarker.SEVERITY;
+import static org.eclipse.core.resources.IMarker.SEVERITY_ERROR;
+import static org.eclipse.core.resources.IMarker.SEVERITY_WARNING;
+
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.ui.IMarkerResolution;
+import org.eclipse.ui.IMarkerResolutionGenerator2;
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class AmbSuggestionGenerator implements IMarkerResolutionGenerator2 {
+
+	public boolean hasResolutions(IMarker marker) {
+		if (marker.getAttribute(SEVERITY, SEVERITY_ERROR) != SEVERITY_WARNING)
+			return false;
+		return false;
+	}
+
+	public IMarkerResolution[] getResolutions(IMarker marker) {
+		// TODO Auto-generated method stub
+		return null;
+	}
+
+}


From L.C.L.Kats at tudelft.nl  Thu Jun 17 21:21:25 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 17 Jun 2010 19:21:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21017 - LennartKats -
	strc-java/trunk/java/runtime/org/strategoxt/lang/terms
Message-ID: <201006171921.o5HJLQWk009183@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-17 19:21:25 +0000 (Thu, 17 Jun 2010)
New Revision: 21017

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21017&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoString.java

Log:
Fixed a case where the maximal sharing contract could be broken when using multiple term factories (StrategoXT/801)

Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoString.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoString.java	2010-06-16 20:31:28 UTC (rev 21016)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoString.java	2010-06-17 19:21:25 UTC (rev 21017)
@@ -17,7 +17,7 @@
 
 	private final int storageType;
 	
-    private String value;
+    private final String value;
     
     public StrategoString(String value, IStrategoList annotations, int storageType) {
         super(annotations);
@@ -57,8 +57,10 @@
         if (value == secondValue) {
         	// Do nothing
         } else if (value.equals(secondValue)) {
-        	if (commonStorageType == SHARABLE)
-        		this.value = secondValue;
+        	// Don't apply resharing here (StrategoXT/801) but maintain
+        	// the string instance that may be in the string pool
+        	// if (commonStorageType == SHARABLE)
+        	//	this.value = secondValue;
         } else {
             return false;
         }


From L.C.L.Kats at tudelft.nl  Thu Jun 17 21:29:08 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 17 Jun 2010 19:29:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21018 - LennartKats -
	in spoofax-imp/branches: .
	org.strategoxt.imp.runtime-decorated-ast-for-completions
	org.strategoxt.imp.runtime-decorated-ast-for-completions/src/org/strategoxt/imp/runtime/parser
	org.strategoxt.imp.runtime-decorated-ast-for-completions/src/org/strategoxt/imp/runtime/services
	org.strategoxt.imp.runtime-decorated-ast-for-completions/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201006171929.o5HJT8Fl009224@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-17 19:29:08 +0000 (Thu, 17 Jun 2010)
New Revision: 21018

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21018&view=rev

Added:
   spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/
   spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/plugin.xml
   spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/src/org/strategoxt/imp/runtime/parser/AmbSuggestionGenerator.java
Removed:
   spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/plugin.xml
Modified:
   spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/src/org/strategoxt/imp/runtime/services/ContentProposer.java
   spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java

Log:
First attempt at Spoofax/183: Have content completion operate on the resulting/decorated AST

Changes:

Deleted: spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/plugin.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/plugin.xml	2010-06-15 14:51:06 UTC (rev 21010)
+++ spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/plugin.xml	2010-06-17 19:29:08 UTC (rev 21018)
@@ -1,293 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<?eclipse version="3.0"?>
-
-<plugin>
-   <extension
-         point="org.eclipse.imp.runtime.languageDescription">
-      <language
-            description="sdf2imp generic base language"
-            extensions="sdf2impbase"
-            language="DynamicRoot">
-      </language>
-   </extension>
-   <extension
-         id="org.strategoxt.imp.runtime.parser"
-         name="Root Parser Wrapper"
-         point="org.eclipse.imp.runtime.parser">
-      <parser
-            class="org.strategoxt.imp.runtime.dynamicloading.DynamicParseController"
-            language="DynamicRoot">
-      </parser>
-   </extension>
-   <extension
-         point="org.eclipse.imp.runtime.tokenColorer">
-      <tokenColorer
-            class="org.strategoxt.imp.runtime.dynamicloading.DynamicTokenColorer"
-            language="DynamicRoot">
-      </tokenColorer>
-   </extension>
-   <extension
-         point="org.eclipse.imp.runtime.referenceResolvers">
-      <referenceResolver
-            class="org.strategoxt.imp.runtime.dynamicloading.DynamicReferenceResolver"
-            language="DynamicRoot">
-      </referenceResolver>
-   </extension>
-   <extension
-         point="org.eclipse.imp.runtime.foldingUpdater">
-      <foldingUpdater
-            class="org.strategoxt.imp.runtime.dynamicloading.DynamicFoldingUpdater"
-            language="DynamicRoot">
-      </foldingUpdater>
-   </extension>
-   <extension
-         point="org.eclipse.imp.runtime.documentationProvider">
-      <docProvider
-            class="org.strategoxt.imp.runtime.services.DocumentationProvider"
-            language="DynamicRoot">
-      </docProvider>
-   </extension>
-   <extension
-         point="org.eclipse.imp.runtime.labelProvider">
-      <labelProvider
-            class="org.strategoxt.imp.runtime.services.LabelProvider"
-            language="DynamicRoot">
-      </labelProvider>
-   </extension>
-   <extension
-         point="org.eclipse.imp.runtime.modelTreeBuilder">
-      <treeBuilder
-            class="org.strategoxt.imp.runtime.dynamicloading.DynamicTreeModelBuilder"
-            language="DynamicRoot">
-      </treeBuilder>
-   </extension>
-   <extension
-         point="org.eclipse.imp.runtime.autoEditStrategy">
-      <autoEditStrategy
-            class="org.strategoxt.imp.runtime.dynamicloading.DynamicAutoEditStrategy"
-            language="DynamicRoot">
-      </autoEditStrategy>
-   </extension>
-   <extension
-         point="org.eclipse.imp.runtime.contentProposer">
-      <proposer
-            class="org.strategoxt.imp.runtime.dynamicloading.DynamicContentProposer"
-            language="DynamicRoot">
-      </proposer>
-   </extension>
-   
-   <extension
-         id="org.strategoxt.imp.runtime.parsemarker"
-         name="Parse error"
-         point="org.eclipse.core.resources.markers">
-    		<persistent value="true" />
-   </extension>
-   
-   <extension
-         id="org.strategoxt.imp.runtime.analysismarker"
-         name="Parse error"
-         point="org.eclipse.core.resources.markers">
-    		<persistent value="true" />
-            <super type="org.eclipse.core.resources.problemmarker"/>
-            <super type="org.eclipse.core.resources.textmarker"/>
-   </extension>
-   
-   <extension
-      point="org.eclipse.ui.editors.annotationTypes">
-   <!-- (ignore any reference errors here *sigh*) -->
-   <type
-      name="org.strategoxt.imp.runtime.parseerror"
-      super="org.eclipse.ui.workbench.texteditor.error"
-      markerType="org.strategoxt.imp.runtime.parsemarker"
-      markerSeverity="2">
-   </type>
-   <type
-      name="org.strategoxt.imp.runtime.parsewarning"
-      super="org.eclipse.ui.workbench.texteditor.warning"
-      markerType="org.strategoxt.imp.runtime.parsemarker"
-      markerSeverity="1">
-   </type>
-   <type
-      name="org.strategoxt.imp.runtime.analysisannotation"
-      super="org.eclipse.ui.workbench.texteditor.error"
-      markerType="org.strategoxt.imp.runtime.analysismarker"
-      markerSeverity="2">
-   </type>
-   </extension>
-
-   <extension
-         id="org.strategoxt.imp.runtime.parsemarkerspec"
-         point="org.eclipse.ui.editors.markerAnnotationSpecification">
-      <specification
-            annotationType="org.strategoxt.imp.runtime.parseerror"
-            textPreferenceKey="spiParseErrorAnnotationColor"
-            textPreferenceValue="true"
-            presentationLayer="6"
-            showInNextPrevDropdownToolbarAction="true"
-            label="Spoofax/IMP Parser Annotation"
-            colorPreferenceKey="errorIndicationColor"
-            showInNextPrevDropdownToolbarActionKey="showErrorInNextPrevDropdownToolbarAction"
-            symbolicIcon="error"
-            isGoToNextNavigationTargetKey="isErrorGoToNextNavigationTarget"
-            isGoToPreviousNavigationTargetKey="isErrorGoToPreviousNavigationTarget"
-            isGoToPreviousNavigationTarget="true"
-            highlightPreferenceKey="errorIndicationHighlighting"
-            highlightPreferenceValue="false"
-            textStylePreferenceKey="errorTextStyle"
-			textStylePreferenceValue="SQUIGGLES"             
-            verticalRulerPreferenceKey="errorIndicationInVerticalRuler"
-            verticalRulerPreferenceValue="true"
-            overviewRulerPreferenceKey="errorIndicationInOverviewRuler"
-            overviewRulerPreferenceValue="true"
-            contributesToHeader="true"
-            colorPreferenceValue="255,128,147"/>
-   </extension>
-
-   <!-- TODO: proper red and orange colors for errors and warnings?   -->
-   <!-- Note that post-deployment colors may differ from debug colors -->
-   <extension
-         id="org.strategoxt.imp.runtime.parsemarkerspec"
-         point="org.eclipse.ui.editors.markerAnnotationSpecification">
-      <specification
-            annotationType="org.strategoxt.imp.runtime.parsewarning"
-            textPreferenceKey="spiParseErrorAnnotationColor"
-            textPreferenceValue="true"
-            presentationLayer="6"
-            showInNextPrevDropdownToolbarAction="true"
-            label="Spoofax/IMP Parser Warning Annotation"
-            colorPreferenceKey="warningIndicationColor"
-            showInNextPrevDropdownToolbarActionKey="showErrorInNextPrevDropdownToolbarAction"
-            symbolicIcon="warning"
-            isGoToNextNavigationTargetKey="isErrorGoToNextNavigationTarget"
-            isGoToPreviousNavigationTargetKey="isErrorGoToPreviousNavigationTarget"
-            isGoToPreviousNavigationTarget="true"
-            highlightPreferenceKey="warningIndicationHighlighting"
-            highlightPreferenceValue="false"
-            textStylePreferenceKey="warningTextStyle"
-			textStylePreferenceValue="SQUIGGLES"             
-            verticalRulerPreferenceKey="warningIndicationInVerticalRuler"
-            verticalRulerPreferenceValue="true"
-            overviewRulerPreferenceKey="warningIndicationInOverviewRuler"
-            overviewRulerPreferenceValue="true"
-            contributesToHeader="true"
-            colorPreferenceValue="255,148,127"/>
-   </extension>
-
-   <extension
-         id="org.strategoxt.imp.runtime.analysismarkerspec"
-         point="org.eclipse.ui.editors.markerAnnotationSpecification">
-      <specification
-            annotationType="org.strategoxt.imp.runtime.analysisannotation"
-            colorPreferenceKey="spiAnalysisAnnotationColor"
-            colorPreferenceValue="255,128,147"
-            contributesToHeader="true"
-            highlightPreferenceKey="analysisAnnotationHighlightKey"
-            highlightPreferenceValue="false"
-            includeOnPreferencePage="false"
-            isGoToNextNavigationTarget="true"
-            isGoToNextNavigationTargetKey="analysisAnnotationIsGotoNextKey"
-            isGoToPreviousNavigationTarget="true"
-            isGoToPreviousNavigationTargetKey="analysisAnnotationIsGotoPrevKey"
-            label="Spoofax/IMP Analysis Annotation"
-            overviewRulerPreferenceKey="analysisAnnotationOverviewKey"
-            overviewRulerPreferenceValue="true"
-            presentationLayer="5"
-            showInNextPrevDropdownToolbarAction="true"
-            symbolicIcon="error"
-            textPreferenceKey="analysisAnnotationTextKey"
-            textPreferenceValue="true"
-            textStylePreferenceKey="analysisAnnotationTextStyleKey"
-            textStylePreferenceValue="SQUIGGLES"
-            verticalRulerPreferenceKey="analysisAnnotationVerticalKey"
-            verticalRulerPreferenceValue="true"/>
-   </extension>
-   
-   <extension
-         point="org.eclipse.imp.runtime.annotationHover">
-      <annotationHover
-            class="org.strategoxt.imp.runtime.services.AnnotationHover"
-            language="DynamicRoot">
-      </annotationHover>
-   </extension>
-   
-   <extension
-         point="org.eclipse.imp.runtime.hoverHelper">
-      <hoverHelper
-            class="org.strategoxt.imp.runtime.services.AnnotationHoverHelper"
-            language="DynamicRoot">
-      </hoverHelper>
-   </extension>
-
-   <extension
-         point="org.eclipse.ui.actionSets">
-      <actionSet
-            description="Spoofax actions"
-            id="org.strategoxt.imp.runtime.ui.actionSet"
-            label="Spoofax"
-            visible="true">
-         <action
-               class="org.strategoxt.imp.runtime.services.BuilderButtonDelegate"
-               definitionId="org.strategoxt.imp.runtime.transformCommand"
-               id="org.strategoxt.imp.runtime.stratego.builder"
-               label="Transform"
-               style="pulldown"
-               toolbarPath="spoofax"
-               tooltip="Apply transformation to file in current editor"/>
-               <!-- TODO: icon="icons/builder.png" -->
-      </actionSet>
-   </extension>
-   <extension
-         point="org.eclipse.ui.commands">
-      <category
-            id="org.strategoxt.imp.runtime.transformCommandCategory"
-            name="Transform Command category">
-      </category>
-      <command
-            categoryId="org.strategoxt.imp.runtime.transformCommandCategory"
-            id="org.strategoxt.imp.runtime.transformCommand"
-            name="Transform"
-            description="Transform">
-      </command>
-      <command
-            categoryId="org.eclipse.ui.category.textEditor"
-            description="Go to definition"
-            id="org.strategoxt.imp.runtime.resolveReferenceCommand"
-            name="Go to definition">
-      </command>
-   </extension>
-   <extension
-         point="org.eclipse.ui.handlers">
-      <handler
-            class="org.strategoxt.imp.runtime.services.BuilderButtonDelegate"
-            commandId="org.strategoxt.imp.runtime.transformCommand">
-      </handler>
-      <handler
-            class="org.strategoxt.imp.runtime.services.ReferenceResolverDelegate"
-            commandId="org.strategoxt.imp.runtime.resolveReferenceCommand">
-      </handler>
-   </extension>
-   <extension
-         point="org.eclipse.ui.bindings">
-      <key
-            commandId="org.strategoxt.imp.runtime.transformCommand"
-            contextId="org.eclipse.ui.textEditorScope"
-            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
-            sequence="M1+T"/>
-      <key
-            commandId="org.strategoxt.imp.runtime.transformCommand"
-            contextId="org.eclipse.ui.textEditorScope"
-            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
-            sequence="CTRL+T"/>
-      <key
-            commandId="org.eclipse.ui.project.buildProject"
-            contextId="org.eclipse.ui.contexts.window"
-            sequence="M1+M3+B"
-            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration" />
-      <key
-            commandId="org.strategoxt.imp.runtime.resolveReferenceCommand"
-            contextId="org.eclipse.ui.textEditorScope"
-            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
-            sequence="F3"/>
-   </extension>
-   
-</plugin>

Copied: spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/plugin.xml (from rev 21016, spoofax-imp/trunk/org.strategoxt.imp.runtime/plugin.xml)
===================================================================
--- spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/plugin.xml	                        (rev 0)
+++ spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/plugin.xml	2010-06-17 19:29:08 UTC (rev 21018)
@@ -0,0 +1,301 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<?eclipse version="3.0"?>
+
+<plugin>
+   <extension
+         point="org.eclipse.imp.runtime.languageDescription">
+      <language
+            description="sdf2imp generic base language"
+            extensions="sdf2impbase"
+            language="DynamicRoot">
+      </language>
+   </extension>
+   <extension
+         id="org.strategoxt.imp.runtime.parser"
+         name="Root Parser Wrapper"
+         point="org.eclipse.imp.runtime.parser">
+      <parser
+            class="org.strategoxt.imp.runtime.dynamicloading.DynamicParseController"
+            language="DynamicRoot">
+      </parser>
+   </extension>
+   <extension
+         point="org.eclipse.imp.runtime.tokenColorer">
+      <tokenColorer
+            class="org.strategoxt.imp.runtime.dynamicloading.DynamicTokenColorer"
+            language="DynamicRoot">
+      </tokenColorer>
+   </extension>
+   <extension
+         point="org.eclipse.imp.runtime.referenceResolvers">
+      <referenceResolver
+            class="org.strategoxt.imp.runtime.dynamicloading.DynamicReferenceResolver"
+            language="DynamicRoot">
+      </referenceResolver>
+   </extension>
+   <extension
+         point="org.eclipse.imp.runtime.foldingUpdater">
+      <foldingUpdater
+            class="org.strategoxt.imp.runtime.dynamicloading.DynamicFoldingUpdater"
+            language="DynamicRoot">
+      </foldingUpdater>
+   </extension>
+   <extension
+         point="org.eclipse.imp.runtime.documentationProvider">
+      <docProvider
+            class="org.strategoxt.imp.runtime.services.DocumentationProvider"
+            language="DynamicRoot">
+      </docProvider>
+   </extension>
+   <extension
+         point="org.eclipse.imp.runtime.labelProvider">
+      <labelProvider
+            class="org.strategoxt.imp.runtime.services.LabelProvider"
+            language="DynamicRoot">
+      </labelProvider>
+   </extension>
+   <extension
+         point="org.eclipse.imp.runtime.modelTreeBuilder">
+      <treeBuilder
+            class="org.strategoxt.imp.runtime.dynamicloading.DynamicTreeModelBuilder"
+            language="DynamicRoot">
+      </treeBuilder>
+   </extension>
+   <extension
+         point="org.eclipse.imp.runtime.autoEditStrategy">
+      <autoEditStrategy
+            class="org.strategoxt.imp.runtime.dynamicloading.DynamicAutoEditStrategy"
+            language="DynamicRoot">
+      </autoEditStrategy>
+   </extension>
+   <extension
+         point="org.eclipse.imp.runtime.contentProposer">
+      <proposer
+            class="org.strategoxt.imp.runtime.dynamicloading.DynamicContentProposer"
+            language="DynamicRoot">
+      </proposer>
+   </extension>
+   
+   <extension
+         id="org.strategoxt.imp.runtime.parsemarker"
+         name="Parse error"
+         point="org.eclipse.core.resources.markers">
+    		<persistent value="true" />
+        <super type="org.eclipse.core.resources.problemmarker"/>
+        <super type="org.eclipse.core.resources.textmarker"/>
+   </extension>
+   
+   <extension
+         id="org.strategoxt.imp.runtime.analysismarker"
+         name="Parse error"
+         point="org.eclipse.core.resources.markers">
+    		<persistent value="true" />
+            <super type="org.eclipse.core.resources.problemmarker"/>
+            <super type="org.eclipse.core.resources.textmarker"/>
+   </extension>
+   
+   <extension
+      point="org.eclipse.ui.editors.annotationTypes">
+   <!-- (ignore any reference warnings here *sigh*) -->
+   <type
+      name="org.strategoxt.imp.runtime.parseerror"
+      super="org.eclipse.ui.workbench.texteditor.error"
+      markerType="org.strategoxt.imp.runtime.parsemarker"
+      markerSeverity="2">
+   </type>
+   <type
+      name="org.strategoxt.imp.runtime.parsewarning"
+      super="org.eclipse.ui.workbench.texteditor.warning"
+      markerType="org.strategoxt.imp.runtime.parsemarker"
+      markerSeverity="1">
+   </type>
+   <type
+      name="org.strategoxt.imp.runtime.analysisannotation"
+      super="org.eclipse.ui.workbench.texteditor.error"
+      markerType="org.strategoxt.imp.runtime.analysismarker"
+      markerSeverity="2">
+   </type>
+   </extension>
+   
+   <extension point="org.eclipse.ui.ide.markerResolution">
+      <markerResolutionGenerator
+         markerType="org.strategoxt.imp.runtime.parsemarker"
+         class="org.strategoxt.imp.runtime.parser.AmbSuggestionGenerator"/>
+   </extension>
+
+   <extension
+         id="org.strategoxt.imp.runtime.parsemarkerspec"
+         point="org.eclipse.ui.editors.markerAnnotationSpecification">
+      <specification
+            annotationType="org.strategoxt.imp.runtime.parseerror"
+            textPreferenceKey="spiParseErrorAnnotationColor"
+            textPreferenceValue="true"
+            presentationLayer="6"
+            showInNextPrevDropdownToolbarAction="true"
+            label="Spoofax/IMP Parser Annotation"
+            colorPreferenceKey="errorIndicationColor"
+            showInNextPrevDropdownToolbarActionKey="showErrorInNextPrevDropdownToolbarAction"
+            symbolicIcon="error"
+            isGoToNextNavigationTargetKey="isErrorGoToNextNavigationTarget"
+            isGoToPreviousNavigationTargetKey="isErrorGoToPreviousNavigationTarget"
+            isGoToPreviousNavigationTarget="true"
+            highlightPreferenceKey="errorIndicationHighlighting"
+            highlightPreferenceValue="false"
+            textStylePreferenceKey="errorTextStyle"
+			textStylePreferenceValue="SQUIGGLES"             
+            verticalRulerPreferenceKey="errorIndicationInVerticalRuler"
+            verticalRulerPreferenceValue="true"
+            overviewRulerPreferenceKey="errorIndicationInOverviewRuler"
+            overviewRulerPreferenceValue="true"
+            contributesToHeader="true"
+            colorPreferenceValue="255,128,147"/>
+   </extension>
+
+   <!-- TODO: proper red and orange colors for errors and warnings?   -->
+   <!-- Note that post-deployment colors may differ from debug colors -->
+   <extension
+         id="org.strategoxt.imp.runtime.parsemarkerspec"
+         point="org.eclipse.ui.editors.markerAnnotationSpecification">
+      <specification
+            annotationType="org.strategoxt.imp.runtime.parsewarning"
+            textPreferenceKey="spiParseErrorAnnotationColor"
+            textPreferenceValue="true"
+            presentationLayer="6"
+            showInNextPrevDropdownToolbarAction="true"
+            label="Spoofax/IMP Parser Warning Annotation"
+            colorPreferenceKey="warningIndicationColor"
+            showInNextPrevDropdownToolbarActionKey="showErrorInNextPrevDropdownToolbarAction"
+            symbolicIcon="warning"
+            isGoToNextNavigationTargetKey="isErrorGoToNextNavigationTarget"
+            isGoToPreviousNavigationTargetKey="isErrorGoToPreviousNavigationTarget"
+            isGoToPreviousNavigationTarget="true"
+            highlightPreferenceKey="warningIndicationHighlighting"
+            highlightPreferenceValue="false"
+            textStylePreferenceKey="warningTextStyle"
+			textStylePreferenceValue="SQUIGGLES"             
+            verticalRulerPreferenceKey="warningIndicationInVerticalRuler"
+            verticalRulerPreferenceValue="true"
+            overviewRulerPreferenceKey="warningIndicationInOverviewRuler"
+            overviewRulerPreferenceValue="true"
+            contributesToHeader="true"
+            colorPreferenceValue="255,148,127"/>
+   </extension>
+
+   <extension
+         id="org.strategoxt.imp.runtime.analysismarkerspec"
+         point="org.eclipse.ui.editors.markerAnnotationSpecification">
+      <specification
+            annotationType="org.strategoxt.imp.runtime.analysisannotation"
+            colorPreferenceKey="spiAnalysisAnnotationColor"
+            colorPreferenceValue="255,128,147"
+            contributesToHeader="true"
+            highlightPreferenceKey="analysisAnnotationHighlightKey"
+            highlightPreferenceValue="false"
+            includeOnPreferencePage="false"
+            isGoToNextNavigationTarget="true"
+            isGoToNextNavigationTargetKey="analysisAnnotationIsGotoNextKey"
+            isGoToPreviousNavigationTarget="true"
+            isGoToPreviousNavigationTargetKey="analysisAnnotationIsGotoPrevKey"
+            label="Spoofax/IMP Analysis Annotation"
+            overviewRulerPreferenceKey="analysisAnnotationOverviewKey"
+            overviewRulerPreferenceValue="true"
+            presentationLayer="5"
+            showInNextPrevDropdownToolbarAction="true"
+            symbolicIcon="error"
+            textPreferenceKey="analysisAnnotationTextKey"
+            textPreferenceValue="true"
+            textStylePreferenceKey="analysisAnnotationTextStyleKey"
+            textStylePreferenceValue="SQUIGGLES"
+            verticalRulerPreferenceKey="analysisAnnotationVerticalKey"
+            verticalRulerPreferenceValue="true"/>
+   </extension>
+   
+   <extension
+         point="org.eclipse.imp.runtime.annotationHover">
+      <annotationHover
+            class="org.strategoxt.imp.runtime.services.AnnotationHover"
+            language="DynamicRoot">
+      </annotationHover>
+   </extension>
+   
+   <extension
+         point="org.eclipse.imp.runtime.hoverHelper">
+      <hoverHelper
+            class="org.strategoxt.imp.runtime.services.AnnotationHoverHelper"
+            language="DynamicRoot">
+      </hoverHelper>
+   </extension>
+
+   <extension
+         point="org.eclipse.ui.actionSets">
+      <actionSet
+            description="Spoofax actions"
+            id="org.strategoxt.imp.runtime.ui.actionSet"
+            label="Spoofax"
+            visible="true">
+         <action
+               class="org.strategoxt.imp.runtime.services.BuilderButtonDelegate"
+               definitionId="org.strategoxt.imp.runtime.transformCommand"
+               id="org.strategoxt.imp.runtime.stratego.builder"
+               label="Transform"
+               style="pulldown"
+               toolbarPath="spoofax"
+               tooltip="Apply transformation to file in current editor"/>
+               <!-- TODO: icon="icons/builder.png" -->
+      </actionSet>
+   </extension>
+   <extension
+         point="org.eclipse.ui.commands">
+      <category
+            id="org.strategoxt.imp.runtime.transformCommandCategory"
+            name="Transform Command category">
+      </category>
+      <command
+            categoryId="org.strategoxt.imp.runtime.transformCommandCategory"
+            id="org.strategoxt.imp.runtime.transformCommand"
+            name="Transform"
+            description="Transform">
+      </command>
+      <command
+            categoryId="org.eclipse.ui.category.textEditor"
+            description="Go to definition"
+            id="org.strategoxt.imp.runtime.resolveReferenceCommand"
+            name="Go to definition">
+      </command>
+   </extension>
+   <extension
+         point="org.eclipse.ui.handlers">
+      <handler
+            class="org.strategoxt.imp.runtime.services.BuilderButtonDelegate"
+            commandId="org.strategoxt.imp.runtime.transformCommand">
+      </handler>
+      <handler
+            class="org.strategoxt.imp.runtime.services.ReferenceResolverDelegate"
+            commandId="org.strategoxt.imp.runtime.resolveReferenceCommand">
+      </handler>
+   </extension>
+   <extension
+         point="org.eclipse.ui.bindings">
+      <key
+            commandId="org.strategoxt.imp.runtime.transformCommand"
+            contextId="org.eclipse.ui.textEditorScope"
+            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
+            sequence="M1+T"/>
+      <key
+            commandId="org.strategoxt.imp.runtime.transformCommand"
+            contextId="org.eclipse.ui.textEditorScope"
+            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
+            sequence="CTRL+T"/>
+      <key
+            commandId="org.eclipse.ui.project.buildProject"
+            contextId="org.eclipse.ui.contexts.window"
+            sequence="M1+M3+B"
+            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration" />
+      <key
+            commandId="org.strategoxt.imp.runtime.resolveReferenceCommand"
+            contextId="org.eclipse.ui.textEditorScope"
+            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
+            sequence="F3"/>
+   </extension>
+   
+</plugin>

Copied: spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/src/org/strategoxt/imp/runtime/parser/AmbSuggestionGenerator.java (from rev 21016, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AmbSuggestionGenerator.java)
===================================================================
--- spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/src/org/strategoxt/imp/runtime/parser/AmbSuggestionGenerator.java	                        (rev 0)
+++ spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/src/org/strategoxt/imp/runtime/parser/AmbSuggestionGenerator.java	2010-06-17 19:29:08 UTC (rev 21018)
@@ -0,0 +1,27 @@
+package org.strategoxt.imp.runtime.parser;
+
+import static org.eclipse.core.resources.IMarker.SEVERITY;
+import static org.eclipse.core.resources.IMarker.SEVERITY_ERROR;
+import static org.eclipse.core.resources.IMarker.SEVERITY_WARNING;
+
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.ui.IMarkerResolution;
+import org.eclipse.ui.IMarkerResolutionGenerator2;
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class AmbSuggestionGenerator implements IMarkerResolutionGenerator2 {
+
+	public boolean hasResolutions(IMarker marker) {
+		if (marker.getAttribute(SEVERITY, SEVERITY_ERROR) != SEVERITY_WARNING)
+			return false;
+		return false;
+	}
+
+	public IMarkerResolution[] getResolutions(IMarker marker) {
+		// TODO Auto-generated method stub
+		return null;
+	}
+
+}

Modified: spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/src/org/strategoxt/imp/runtime/services/ContentProposer.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	2010-06-15 14:51:06 UTC (rev 21010)
+++ spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/src/org/strategoxt/imp/runtime/services/ContentProposer.java	2010-06-17 19:29:08 UTC (rev 21018)
@@ -12,6 +12,7 @@
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.HashSet;
+import java.util.List;
 import java.util.Random;
 import java.util.Set;
 import java.util.regex.Matcher;
@@ -27,9 +28,11 @@
 import org.eclipse.jface.text.ITextViewer;
 import org.eclipse.jface.text.Region;
 import org.eclipse.jface.text.contentassist.ICompletionProposal;
+import org.spoofax.interpreter.terms.IStrategoConstructor;
 import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
 import org.spoofax.jsglr.SGLRException;
 import org.strategoxt.imp.runtime.Debug;
 import org.strategoxt.imp.runtime.Environment;
@@ -41,8 +44,13 @@
 import org.strategoxt.imp.runtime.parser.ast.ListAstNode;
 import org.strategoxt.imp.runtime.parser.ast.RootAstNode;
 import org.strategoxt.imp.runtime.parser.ast.StringAstNode;
+import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
+import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
 import org.strategoxt.imp.runtime.stratego.adapter.WrappedAstNodeFactory;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
 import org.strategoxt.lang.terms.TermFactory;
+import org.strategoxt.stratego_lib.alltd_1_0;
 
 /**
  * Content completion.
@@ -92,6 +100,8 @@
 	private RootAstNode lastCompletionAst;
 	
 	private AstNode lastCompletionNode;
+
+	private AstNode inlineRemovedChild;
 	
 	private String lastDocument;
 	
@@ -112,7 +122,8 @@
 	}
 	
 	public ICompletionProposal[] getContentProposals(IParseController controller, int offset, ITextViewer viewer) {
-		lastCompletionNode = currentCompletionNode;
+		TODO: below, lastCompletionAst should be cloned AFTER currentCompletionNode is created 
+		lastCompletionNode = (AstNode) StrategoTermPath.findCorrespondingSubtree(lastCompletionNode, currentCompletionNode);
 		lastCompletionPrefix = currentCompletionPrefix;
 		currentCompletionNode = null;
 		String document = viewer.getDocument().get();
@@ -207,38 +218,85 @@
 
 	private IStrategoTerm invokeCompletionFunction(final IParseController controller) {
 		if (completionFunction == null) {
-			return Environment.getTermFactory().makeList();
+			return TermFactory.EMPTY_LIST;
 		} else {
 			// TODO: is using this lock in the main thread a deadlock risk?
-			class Runner implements Runnable {
-				IStrategoTerm result;
-				public void run() {
-					synchronized (observer.getSyncRoot()) {
-						if (!observer.isUpdateScheduled()) {
-							observer.update(controller, new NullProgressMonitor());
-						}
-						IStrategoTerm input = observer.makeInputTerm(currentCompletionNode, true, false);
-						result = observer.invokeSilent(completionFunction, input, currentCompletionNode.getResource());
-						if (result == null) {
-							observer.reportRewritingFailed();
-							result = TermFactory.EMPTY_LIST;
-						}
-					}
+			synchronized (observer.getSyncRoot()) {
+				RootAstNode root = currentCompletionNode.getRoot();
+				boolean performUpdate = (!observer.isUpdateScheduled() || observer.isResultingAstSupported())
+						&& !COMPLETION_UNKNOWN.equals(root.getConstructor());
+				
+				if (performUpdate) {
+					inlineRemoveCompletionConstructor(currentCompletionNode);
+					observer.update(controller, new NullProgressMonitor(), root, observer.isUpdateScheduled());
 				}
+				
+				IStrategoTerm input = observer.makeInputTerm(currentCompletionNode, true, false);
+				
+				if (performUpdate) {
+					input = restoreCompletionConstructor(observer.getRuntime().getCompiledContext(), input);
+				}
+				
+				IStrategoTerm result = observer.invokeSilent(completionFunction, input, currentCompletionNode.getResource());
+				
+				if (result == null) {
+					observer.reportRewritingFailed();
+					return TermFactory.EMPTY_LIST;
+				} else {
+					return result;
+				}
 			}
-			Runner runner = new Runner();
 			
 			// UNDONE: causes deadlock with updater thread
 			//         (which acquires the display lock to display monitor updates)
 			//if (EditorState.isUIThread()) {
 			//	Display.getCurrent().syncExec(runner);	
 			//} else {
-				runner.run();
+			//	runner.run();
 			//}
-			return runner.result;
 		}
 	}
 	
+	/**
+	 * Changes an AstNode _inline_, removing the COMPLETION(_) constructor.
+	 */
+	private void inlineRemoveCompletionConstructor(AstNode completionNode) {
+		List<AstNode> children = completionNode.getChildren();
+		for (int i = 0, size = children.size(); i < size; i++) {
+			AstNode child = children.get(i);
+			if (COMPLETION_CONSTRUCTOR.equals(child.getConstructor())) {
+				AstNode subChild = child.getChildren().get(0);
+				children.set(i, subChild);
+				subChild.setParent(completionNode);
+				inlineRemovedChild = subChild;
+				return;
+			}
+		}
+		
+	}
+	
+	/**
+	 * Changes an IStrategoTerm, reintroducing the COMPLETION(_) constructor
+	 * removed by {@link #inlineRemoveCompletionConstructor(AstNode)}.
+	 * Does _not_ change the term inline.
+	 */
+	private IStrategoTerm restoreCompletionConstructor(Context context, IStrategoTerm term) {
+		return alltd_1_0.instance.invoke(context, term, 
+			new Strategy() {
+				@Override
+				public IStrategoTerm invoke(Context context, IStrategoTerm current) {
+					if (current instanceof IWrappedAstNode
+							&& ((IWrappedAstNode) current).getNode() == inlineRemovedChild) {
+						ITermFactory factory = context.getFactory();
+						IStrategoConstructor cons = factory.makeConstructor(COMPLETION_CONSTRUCTOR, 1);
+						return factory.makeAppl(cons, current);
+					} else {
+						return current;
+					}
+				}
+			});
+	}
+	
 	private ICompletionProposal[] toProposals(IStrategoTerm proposals, String document, int offset) {
 		Debug.startTimer();
 		

Modified: spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-15 14:51:06 UTC (rev 21010)
+++ spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-17 19:29:08 UTC (rev 21018)
@@ -98,6 +98,8 @@
 	
 	private boolean wasExceptionLogged;
 	
+	private boolean resultingAstSupported;
+	
 	public StrategoObserver(Descriptor descriptor, String feedbackFunction) {
 		this.descriptor = descriptor;
 		this.feedbackFunction = feedbackFunction;
@@ -117,6 +119,10 @@
 		return isUpdateStarted;
 	}
 	
+	public boolean isResultingAstSupported() {
+		return resultingAstSupported;
+	}
+	
 	public void setRushNextUpdate(boolean rushNextUpdate) {
 		this.rushNextUpdate = rushNextUpdate;
 	}
@@ -264,8 +270,12 @@
 	}
 
 	public void update(IParseController parseController, IProgressMonitor monitor) {
+		IStrategoAstNode ast = (IStrategoAstNode) parseController.getCurrentAst();
+		update(parseController, monitor, ast, false);
+	}
+	
+	public void update(IParseController parseController, IProgressMonitor monitor, IStrategoAstNode ast, boolean skipMarkers) {
 		isUpdateStarted = true;
-		IStrategoAstNode ast = (IStrategoAstNode) parseController.getCurrentAst();
 		if (ast == null || ast.getConstructor() == null || feedbackFunction == null
 				|| isRecoveryFailed(parseController)) {
 			messages.clearMarkers(((SGLRParseController) parseController).getResource());
@@ -283,6 +293,8 @@
 				resultingAsts.remove(ast.getResource());
 				feedback = invokeSilent(feedbackFunction, makeInputTerm(ast, false), ast.getResource());
 	
+				if (skipMarkers) return;
+					
 				if (feedback == null) {
 					reportRewritingFailed();
 					String log = getLog();
@@ -391,6 +403,7 @@
 		if (isTermTuple(feedback) && feedback.getSubtermCount() == 4
 				&& (!"None".equals(cons(feedback.getSubterm(0))) || feedback.getSubterm(0).getSubtermCount() > 0)) {
 			resultingAsts.put(resource, feedback.getSubterm(0));
+			resultingAstSupported = true;
 			
 			IStrategoTuple newFeedback = Environment.getTermFactory().makeTuple(
 					feedback.getSubterm(1), feedback.getSubterm(2), feedback.getSubterm(3));

Modified: spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	2010-06-15 14:51:06 UTC (rev 21010)
+++ spoofax-imp/branches/org.strategoxt.imp.runtime-decorated-ast-for-completions/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	2010-06-17 19:29:08 UTC (rev 21018)
@@ -1,5 +1,7 @@
 package org.strategoxt.imp.runtime.stratego;
 
+import static java.lang.Math.max;
+
 import java.util.ArrayList;
 import java.util.LinkedList;
 import java.util.List;
@@ -204,10 +206,11 @@
 			}
 			IStrategoAstNode oldSubtree = (IStrategoAstNode) oldParent.getChildren().get(i);
 			IStrategoAstNode newSubtree;
-			if (i >= newParent.getChildren().size()) {
-				if (i == 0) // fallback
-					return findIdenticalSubtree(oldAst, newAst, selection);
-				newSubtree = (IStrategoAstNode) newParent.getChildren().get(--i);
+			if (i > newParent.getChildren().size()) {
+				return findIdenticalSubtree(oldAst, newAst, selection);
+			} else if (oldParent.getChildren().size() > newParent.getChildren().size()) {
+				i = max(0, i - (oldParent.getChildren().size() - newParent.getChildren().size()));
+				newSubtree = (IStrategoAstNode) newParent.getChildren().get(i);
 			} else if (i > newParent.getChildren().size()) {
 				return findIdenticalSubtree(oldAst, newAst, selection);
 			} else {


From L.C.L.Kats at tudelft.nl  Fri Jun 18 11:16:02 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 18 Jun 2010 09:16:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21019 - LennartKats -
	in spoofax-imp/trunk:
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201006180916.o5I9G2wn020975@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-18 09:16:01 +0000 (Fri, 18 Jun 2010)
New Revision: 21019

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21019&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java

Log:
Consider child notes for origin tracking in reference resolving and other minor tweaks

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str	2010-06-17 19:29:08 UTC (rev 21018)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str	2010-06-18 09:16:01 UTC (rev 21019)
@@ -126,6 +126,9 @@
   
   refresh-workspace-file:
     path -> <prim("SSL_EXT_refreshresource", path)>
+  
+  string-starts-with-capital =
+    explode-string; Hd; is-upper
 
 strategies
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str	2010-06-17 19:29:08 UTC (rev 21018)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str	2010-06-18 09:16:01 UTC (rev 21019)
@@ -181,7 +181,7 @@
   constraint-warning:
     Entity(x, _) -> (x, $[Entity names must start with a capital])
     where
-      not(<explode-string; Hd; is-upper> x)
+      not(<string-starts-with-capital> x)
   
   constraint-note:
     Module(x @ "example", _) -> (x, $[This is just an example program in the "entities" language

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	2010-06-17 19:29:08 UTC (rev 21018)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	2010-06-18 09:16:01 UTC (rev 21019)
@@ -140,7 +140,8 @@
 			return null;
 		}
 		*/
-		System.out.println("SORTS: " + getSortsAtCursor(controller, ast, offset));
+		if (Debug.ENABLED)
+			System.out.println("SORTS: " + getSortsAtCursor(controller, ast, offset));
 		
 		return results;
     }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-17 19:29:08 UTC (rev 21018)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-18 09:16:01 UTC (rev 21019)
@@ -55,7 +55,7 @@
 import org.strategoxt.imp.runtime.stratego.StrategoConsole;
 import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
 import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
-import org.strategoxt.imp.runtime.stratego.adapter.WrappedAstNode;
+import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
 import org.strategoxt.lang.Context;
 import org.strategoxt.lang.StrategoException;
 import org.strategoxt.stratego_aterm.implode_aterm_0_0;
@@ -629,19 +629,25 @@
 		return e.getClass().getSimpleName();
 	}
 
-	public IAst getAstNode(IStrategoTerm term) {
+	public IAst getAstNode(IStrategoTerm term, boolean tryArguments) {
 		if (term == null) return null;
 			
-		if (term instanceof WrappedAstNode) {
-			return ((WrappedAstNode) term).getNode();
-		} else {
-			if (descriptor.isDynamicallyLoaded()) {
-				Environment.logWarning("Resolved reference is not associated with an AST node " + term);
-			} else {
-				Environment.logException("Resolved reference is not associated with an AST node " + term);
+		if (term instanceof IWrappedAstNode) {
+			return ((IWrappedAstNode) term).getNode();
+		} else if (tryArguments) {
+			for (IStrategoTerm subterm : term.getAllSubterms()) {
+				if (subterm instanceof IWrappedAstNode) {
+					Environment.logWarning("Resolved reference is not associated with an AST node " + term + " used child " + subterm + "instead");
+					return ((IWrappedAstNode) subterm).getNode();
+				}
 			}
-			return null;
 		}
+		if (descriptor.isDynamicallyLoaded()) {
+			Environment.logWarning("Resolved reference is not associated with an AST node " + term);
+		} else {
+			Environment.logException("Resolved reference is not associated with an AST node " + term);
+		}
+		return null;
 	}
 	
 	private void configureRuntime(IResource resource) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	2010-06-17 19:29:08 UTC (rev 21018)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	2010-06-18 09:16:01 UTC (rev 21019)
@@ -1,5 +1,7 @@
 package org.strategoxt.imp.runtime.stratego;
 
+import static java.lang.Math.max;
+
 import java.util.ArrayList;
 import java.util.LinkedList;
 import java.util.List;
@@ -204,10 +206,11 @@
 			}
 			IStrategoAstNode oldSubtree = (IStrategoAstNode) oldParent.getChildren().get(i);
 			IStrategoAstNode newSubtree;
-			if (i >= newParent.getChildren().size()) {
-				if (i == 0) // fallback
-					return findIdenticalSubtree(oldAst, newAst, selection);
-				newSubtree = (IStrategoAstNode) newParent.getChildren().get(--i);
+			if (i > newParent.getChildren().size()) {
+				return findIdenticalSubtree(oldAst, newAst, selection);
+			} else if (oldParent.getChildren().size() > newParent.getChildren().size()) {
+				i = max(0, i - (oldParent.getChildren().size() - newParent.getChildren().size()));
+				newSubtree = (IStrategoAstNode) newParent.getChildren().get(i);
 			} else if (i > newParent.getChildren().size()) {
 				return findIdenticalSubtree(oldAst, newAst, selection);
 			} else {


From L.C.L.Kats at tudelft.nl  Fri Jun 18 11:28:13 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 18 Jun 2010 09:28:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21020 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <201006180928.o5I9SDYc021089@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-18 09:28:13 +0000 (Fri, 18 Jun 2010)
New Revision: 21020

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21020&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoReferenceResolver.java

Log:


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoReferenceResolver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoReferenceResolver.java	2010-06-18 09:16:01 UTC (rev 21019)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoReferenceResolver.java	2010-06-18 09:28:13 UTC (rev 21020)
@@ -53,7 +53,7 @@
 				observer.update(parseController, new NullProgressMonitor());
 			}
 			IStrategoTerm resultTerm = observer.invokeSilent(function, node);
-			return observer.getAstNode(resultTerm);
+			return observer.getAstNode(resultTerm, true);
 		}
 	}
 


From R.B.Vermaas at tudelft.nl  Fri Jun 18 13:16:57 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Fri, 18 Jun 2010 11:16:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21021 - rob -
	hydra/strategoxt
Message-ID: <201006181116.o5IBGvr1022934@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2010-06-18 11:16:56 +0000 (Fri, 18 Jun 2010)
New Revision: 21021

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21021&view=rev

Modified:
   hydra/strategoxt/packages.nix

Log:
disable opensuse 10.3

Changes:

Modified: hydra/strategoxt/packages.nix
===================================================================
--- hydra/strategoxt/packages.nix	2010-06-18 09:28:13 UTC (rev 21020)
+++ hydra/strategoxt/packages.nix	2010-06-18 11:16:56 UTC (rev 21021)
@@ -170,7 +170,6 @@
          fedora9i386 = vrpms ;
          fedora10i386 = vrpms ;
          fedora11i386 = vrpms ;
-         opensuse103i386 = vrpms ;
          opensuse110i386 = vrpms ;
        };
     };
@@ -610,7 +609,6 @@
          fedora9i386 = vrpms ;
          fedora10i386 = vrpms ;
          fedora11i386 = vrpms ;
-         opensuse103i386 = vrpms ;
          opensuse110i386 = vrpms ;
        };
     };


From R.B.Vermaas at tudelft.nl  Fri Jun 18 13:26:46 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Fri, 18 Jun 2010 11:26:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21022 - rob - hydra
Message-ID: <201006181126.o5IBQkuN023017@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2010-06-18 11:26:46 +0000 (Fri, 18 Jun 2010)
New Revision: 21022

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21022&view=rev

Modified:
   hydra/build.nix

Log:
disable opensuse 10.3, now really

Changes:

Modified: hydra/build.nix
===================================================================
--- hydra/build.nix	2010-06-18 11:16:56 UTC (rev 21021)
+++ hydra/build.nix	2010-06-18 11:26:46 UTC (rev 21022)
@@ -349,7 +349,7 @@
 
 
   deb_variants = if makeDebs then [ "debian50i386" "ubuntu810i386" "ubuntu904i386"] else [] ;
-  rpm_variants = if makeRPMs then [ "fedora10i386" "fedora11i386" "opensuse103i386" "opensuse110i386" ] else [] ;
+  rpm_variants = if makeRPMs then [ "fedora10i386" "fedora11i386" "opensuse110i386" ] else [] ;
 
   rpmToNix = rpm :
      pkgsDefault.runCommand


From L.C.L.Kats at tudelft.nl  Fri Jun 18 13:32:49 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 18 Jun 2010 11:32:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21023 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.runtime
	strc-java/trunk/java/runtime/org/strategoxt/lang/terms
Message-ID: <201006181132.o5IBWn7Z023054@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-18 11:32:48 +0000 (Fri, 18 Jun 2010)
New Revision: 21023

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21023&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch
   strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoTerm.java

Log:
Fixed STRJ assertions and enabled them in the default Spoofax .launch file.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch	2010-06-18 11:26:46 UTC (rev 21022)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch	2010-06-18 11:32:48 UTC (rev 21023)
@@ -22,7 +22,7 @@
 <stringAttribute key="org.eclipse.jdt.launching.JRE_CONTAINER" value="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
 <stringAttribute key="org.eclipse.jdt.launching.PROGRAM_ARGUMENTS" value="-os ${target.os} -ws ${target.ws} -arch ${target.arch} -nl ${target.nl}"/>
 <stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.pde.ui.workbenchClasspathProvider"/>
-<stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-server -Xmx1024m -Xms256m -XX:MaxPermSize=256M -Xverify:none -ea:org.strategoxt.imp.runtime.Debug -ea:org.strategoxt.imp... -ea:org.spoofax... -Xss4m"/>
+<stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-server -Xmx1024m -Xms256m -XX:MaxPermSize=256M -Xverify:none -ea:org.strategoxt.imp.runtime.Debug -ea:org.strategoxt... -ea:org.spoofax... -Xss4m"/>
 <stringAttribute key="pde.version" value="3.3"/>
 <stringAttribute key="product" value="org.eclipse.sdk.ide"/>
 <booleanAttribute key="restart" value="false"/>

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoTerm.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoTerm.java	2010-06-18 11:26:46 UTC (rev 21022)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoTerm.java	2010-06-18 11:32:48 UTC (rev 21023)
@@ -23,7 +23,7 @@
     private IStrategoList annotations;
     
     protected StrategoTerm(IStrategoList annotations) {
-        assert annotations == null || annotations.isEmpty() || annotations == TermFactory.EMPTY_LIST;
+        assert annotations == null || !annotations.isEmpty() || annotations == TermFactory.EMPTY_LIST;
     	if (annotations != TermFactory.EMPTY_LIST)
     		this.annotations = annotations;
     }
@@ -161,10 +161,14 @@
     }
     
     protected final void internalSetAnnotations(IStrategoList annotations) {
-        assert annotations == null || annotations.isEmpty() || annotations == TermFactory.EMPTY_LIST;
+        assert annotations == null || !annotations.isEmpty() || annotations == TermFactory.EMPTY_LIST;
+        
     	if (annotations == TermFactory.EMPTY_LIST)
     		annotations = null; // essential for hash code calculation
     	
+    	assert annotations != null || getTermType() != STRING || getStorageType() != MAXIMALLY_SHARED :
+    		"Maximally shared, unannotated string must be created using constructor";
+    	
     	if (this.annotations != annotations) {
     		this.annotations = annotations;
     		this.hashCode = UNKNOWN_HASH;


From L.C.L.Kats at tudelft.nl  Fri Jun 18 14:21:40 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 18 Jun 2010 12:21:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21024 - LennartKats -
	in strategoxt/trunk:
	stratego-libraries/sglr/lib/stratego/asfix/implode
	strc-core/lib/stratego/strc/parse
Message-ID: <201006181221.o5ICLemM023893@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-18 12:21:40 +0000 (Fri, 18 Jun 2010)
New Revision: 21024

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21024&view=rev

Modified:
   strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode/indent-padding.str
   strategoxt/trunk/strc-core/lib/stratego/strc/parse/parse-stratego.str

Log:
StrategoXT/828: with to where

Changes:

Modified: strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode/indent-padding.str
===================================================================
--- strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode/indent-padding.str	2010-06-18 11:32:48 UTC (rev 21023)
+++ strategoxt/trunk/stratego-libraries/sglr/lib/stratego/asfix/implode/indent-padding.str	2010-06-18 12:21:40 UTC (rev 21024)
@@ -99,11 +99,11 @@
 	      end
 	    <+
 	      !list => []; !appl
-		  end
-	  else
-	    // Shouldn't happen, or maybe with kernel syntax
-	    all(strip-appl-before(s))
 	  end
+	else
+	  // Shouldn't happen, or maybe with kernel syntax
+	  all(strip-appl-before(s))
+	end
   
   strip-appl-list-before(s) :
     [i | i*] -> stripped*

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/parse/parse-stratego.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/parse/parse-stratego.str	2010-06-18 11:32:48 UTC (rev 21023)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/parse/parse-stratego.str	2010-06-18 12:21:40 UTC (rev 21024)
@@ -195,7 +195,7 @@
 
   ps-parse-cached(parse):
     path -> ast
-    with
+    where
       if <get-config> "--cache-dir"; ps-uses-default-implode-options then
         abs-path   := <abspath> path
       ; cache-path := <ps-cache-path> abs-path


From karltk at strategoxt.org  Fri Jun 18 23:05:20 2010
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Fri, 18 Jun 2010 21:05:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21025 - karltk - in
	experimental/meta-amb-suggestions: . doc trans trans/cli
Message-ID: <201006182105.o5IL5KmE030040@proliant.st.ewi.tudelft.nl>

Author: karltk
Date: 2010-06-18 21:05:19 +0000 (Fri, 18 Jun 2010)
New Revision: 21025

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21025&view=rev

Added:
   experimental/meta-amb-suggestions/doc/
   experimental/meta-amb-suggestions/doc/design.txt
   experimental/meta-amb-suggestions/doc/pack-grammar-to-ast.txt
   experimental/meta-amb-suggestions/trans/cli/
   experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
Modified:
   experimental/meta-amb-suggestions/build.main.xml

Log:
Quick and dirty proof of concept. Now generates Stratego-Java-like embeddings from a .def (in abstract format) file using strings. Usability remains.

Changes:

Modified: experimental/meta-amb-suggestions/build.main.xml
===================================================================
--- experimental/meta-amb-suggestions/build.main.xml	2010-06-18 12:21:40 UTC (rev 21024)
+++ experimental/meta-amb-suggestions/build.main.xml	2010-06-18 21:05:19 UTC (rev 21025)
@@ -20,6 +20,7 @@
         <property name="build.sdf.imports" value="-Idef ${user.home}/.nix-profile/share/java-front/Stratego-Java-15.def"/>
         <property name="build.stratego.args" value="--library
                         -I &quot;${trans}&quot; -I &quot;${basedir}&quot;
+                        -I &quot;${user.home}/.nix-profile/share/sdf-front&quot;
                         -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm
                         -la strc"/>
         

Added: experimental/meta-amb-suggestions/doc/design.txt
===================================================================
--- experimental/meta-amb-suggestions/doc/design.txt	                        (rev 0)
+++ experimental/meta-amb-suggestions/doc/design.txt	2010-06-18 21:05:19 UTC (rev 21025)
@@ -0,0 +1,64 @@
+syntax-embedder:
+ host + guest0 + guest1 + .. + guestN
+
+-----------
+
+module Stratego-Java
+
+syntax embedding : Stratego-Java = 
+
+  host : Stratego 
+
+  guest : Java -> java
+  guest : XML 
+
+  include sorts : *
+  exclude sorts : Expr
+
+  exclude sorts : *
+  include sorts : 
+    Java:Expr -> expr 
+    Stmt 
+    *Literal -> *
+
+-----------
+  
+
+- for each included context-free sort E
+ - generate embeddings on the form:
+
+                      "|[" Expr  "]|" -> E {cons("ToMetaExpr")}
+   "Expr"             "|[" Expr  "]|" -> E {cons("ToMetaExpr")}
+   "java" ":" "Expr"  "|[" Expr  "]|" -> E {cons("ToMetaExpr")}
+
+   "*"                "|[" Expr* "]|" -> E {cons("ToMetaExpr")}
+   "Expr*"            "|[" Expr* "]|" -> E {cons("ToMetaExpr")}
+   "java" ":" "Expr*" "|[" Expr* "]|" -> E {cons("ToMetaExpr")}
+
+   "~"                       E -> Expr {cons("FromMetaExpr")}
+   "~" "Expr" ":"            E -> Expr {cons("FromMetaExpr")}
+   "~" "java" ":" "Expr" ":" E -> Expr {cons("FromMetaExpr")}
+
+   "$[" E "]"                          -> Expr {cons("FromMetaExpr")}
+   "$[" "Expr" ":" E "]"               -> Expr {cons("FromMetaExpr")}
+   "$[" "Java" ":" "Expr" ":" E "]"    -> Expr {cons("FromMetaExpr")}
+
+   "#[" E "]"                          -> Expr {cons("FromMetaExpr")}
+   "~[" E "]"                          -> Expr {cons("FromMetaExpr")}
+
+- for each guest language, combine into one top-level with host language like this:
+
+module Stratego-Java-EBlock
+imports
+  StrategoMix[StrategoHost]
+  languages/java/EmbeddedJavaMix[JavaObject Term[[StrategoHost]]]
+  languages/java/eblock/JavaEBlockMix[JavaObject]
+
+exports
+  context-free start-symbols Module[[StrategoHost]]
+
+-----
+
+ - gen-sdf-mix
+ - must generate EmbeddedJava and Stratego-Java-15
+

Added: experimental/meta-amb-suggestions/doc/pack-grammar-to-ast.txt
===================================================================
--- experimental/meta-amb-suggestions/doc/pack-grammar-to-ast.txt	                        (rev 0)
+++ experimental/meta-amb-suggestions/doc/pack-grammar-to-ast.txt	2010-06-18 21:05:19 UTC (rev 21025)
@@ -0,0 +1 @@
+pack-sdf -of ast -I ~/.nix-profile/share/java-front -I ~/.nix-profile/share/java-front-syntax -i ~/source/workspaces/strategoxt/meta-amb-suggestions/syntax/Meta-amb-suggestions.sdf

Added: experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
===================================================================
--- experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	                        (rev 0)
+++ experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-18 21:05:19 UTC (rev 21025)
@@ -0,0 +1,122 @@
+module cli/compose-grammars
+
+imports
+	libstratego-lib
+	Sdf2
+	
+strategies
+	
+	main = io-wrap(compose-grammars-options, compose-grammars ; !())
+
+    
+    compose-grammars-options = 
+         ArgOption(
+        	"--host"
+       	, where(<extend-config> ("--host", [<id>]))
+       	, !"--host file   Set host language grammar")
+     + 
+        ArgOption(
+        	"--guest"
+        , where(<extend-config> ("--guest", [<id>]))
+        , !"--guest file  Set guest language grammar")	
+        
+
+    host-language = <get-config> "--host"
+    guest-language = <get-config> "--guest"
+    
+	compose-grammars:
+		x -> ()
+	with
+		context-free-sorts := <collect-context-free-sorts> x
+		; guest := <guest-language ; ?[<id>]>
+		; host := <host-language ; ?[<id>]>
+//		; embedding := <make-embedded(|guest)> context-free-sorts
+//		; mix := <make-mix(|guest)> context-free-sorts
+		; make-toplevel(|host, "Module", guest) 
+		; echo
+//		; <echo> embedding
+//		; <echo> mix
+//		; <fprintnl> (stdout(), "----------------------------------------------------")
+//		; <fprintnl> (stdout(), mix)
+		
+		
+	make-toplevel(|host, host-start-symbol, guest):
+		x -> $<
+module <host>-<guest>
+imports
+  languages/<<lower-case> host>/<host>Mix[<host>Host]
+  languages/<<lower-case> guest>/Embedded<guest>Mix[<guest>Object Term[[<host>Host]]]
+
+exports
+  context-free start-symbols <host-start-symbol>[[<host>Host]]
+>
+
+
+
+	make-embedded(|guest):
+		srts -> $<
+module languages/<<lower-case> guest> lang/Embedded<guest>[E]
+imports languages/<<lower-case> guest>/Main
+<embeddings*>
+>
+	with
+		embeddings* := <map(make-quot-anti-quot(|guest))> srts 
+		
+	make-mix(|guest):
+		srts -> $<
+module languages/<<lower-case> guest>/<guest>Mix[Ctx0]
+imports languages/<<lower-case> guest>/Main
+[
+	<mix*>
+]
+		>
+	with
+		mix* := <map(\ sort(name) -> ${ 
+			{name} => {name}[[Ctx0]]} \)> srts
+
+
+	make-quot-anti-quot(|lang):
+		sort(name) -> $<
+   %% <lang> : <name>
+                          "|[" <name> "]|" -$>$ E {cons("ToMetaExpr")}
+   "<name>"               "|[" <name> "]|" -$>$ E {cons("ToMetaExpr")}
+   "<lang>" ":" "<name>"  "|[" <name> "]|" -$>$ E {cons("ToMetaExpr")}
+
+   "*"                    "|[" <name>* "]|" -$>$ E {cons("ToMetaExpr")}
+   "<name>*"              "|[" <name>* "]|" -$>$ E {cons("ToMetaExpr")}
+   "<lang>" ":" "<name>*" "|[" <name>* "]|" -$>$ E {cons("ToMetaExpr")}
+
+   "~"                           E -$>$ Expr {cons("FromMetaExpr")}
+   "~" "<name>" ":"              E -$>$ Expr {cons("FromMetaExpr")}
+   "~" "<lang>" ":" "<name>" ":" E -$>$ Expr {cons("FromMetaExpr")}
+
+   "$[" E "]"                            -$>$ Expr {cons("FromMetaExpr")}
+   "$[" "<name>" ":" E "]"               -$>$ Expr {cons("FromMetaExpr")}
+   "$[" "<lang>" ":" "<name>" ":" E "]"  -$>$ Expr {cons("FromMetaExpr")}
+
+   "#[" E "]"                            -$>$ Expr {cons("FromMetaExpr")}
+   "~[" E "]"                            -$>$ Expr {cons("FromMetaExpr")}
+		>
+		
+		
+	collect-context-free-sorts =
+		collect-all(?sort(_), union, \ lexical-syntax(_) -> () \ + \ lexical-restrictions(_) -> () \) 
+	
+	 
+	 
+// - find start module of host language
+// - find all exported sorts of guest lanuage(s)
+
+
+
+rules
+	
+	compute-combined-name:
+		(host, [guests]) -> combined
+	with
+		combined := <string-join(|"-")> [ host | guests]
+			 
+strategies
+			 
+    string-join(|c) = <foldl(\(x,y) -> <concat-strings> [y, c, x]\)> (<Tl>, <Hd>)
+  


From karltk at strategoxt.org  Sat Jun 19 17:00:33 2010
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Sat, 19 Jun 2010 15:00:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21026 - karltk -
	experimental/meta-amb-suggestions/trans/cli
Message-ID: <201006191500.o5JF0X6b010162@proliant.st.ewi.tudelft.nl>

Author: karltk
Date: 2010-06-19 15:00:32 +0000 (Sat, 19 Jun 2010)
New Revision: 21026

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21026&view=rev

Modified:
   experimental/meta-amb-suggestions/trans/cli/compose-grammars.str

Log:
Added support for guessing the guest language name and start module. Sketched usages explanations.

Changes:

Modified: experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
===================================================================
--- experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-18 21:05:19 UTC (rev 21025)
+++ experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-19 15:00:32 UTC (rev 21026)
@@ -3,31 +3,126 @@
 imports
 	libstratego-lib
 	Sdf2
-	
+
+/*
+ *
+ * Convention over configuration:
+ *
+ *  - guest language must:
+ *    - reside in languages/<lang>
+ *    - have a languages/<lang>/Main.sdf
+ *
+ *  - host language must:
+ *    - be Stratego:)
+ *
+ * Example usage:
+ * # pack-sdf -I ~/.nix-profile/share/java-front-syntax/ -i ~/.nix-profile/share/java-front-syntax/languages/java-15/Main.sdf -of ast -o Java.sdf-ast
+ * 
+ * # pack-sdf -I path/to/guest-front -i languages/<guest>/Main.sdf -of ast -o Guest.sdf-ast
+ * # pack-sdf -I 
+ 
+ */	
 strategies
 	
-	main = io-wrap(compose-grammars-options, compose-grammars ; !())
+	main = option-wrap(compose-grammars-options, compose-grammars ; !())
 
     
     compose-grammars-options = 
          ArgOption(
-        	"--host"
-       	, where(<extend-config> ("--host", [<id>]))
-       	, !"--host file   Set host language grammar")
+        	"--guest"
+       	, where(<extend-config> ("--guest", [<id>]))
+       	, !"--guest file                    File name of guest language grammar. Must be a packed .sdf-ast")
+	 +
+         ArgOption(
+        	"--host-camel-name"
+       	, where(<extend-config> ("--host-camel-name", [<id>]))
+       	, !"--host-camel-name file          Set host language grammar in camel case, e.g. Stratego")
      + 
         ArgOption(
-        	"--guest"
-        , where(<extend-config> ("--guest", [<id>]))
-        , !"--guest file  Set guest language grammar")	
+        	"--host-start-symbol"
+        , where(<extend-config> ("--host-start-symbol", [<id>]))
+        , !"--host-start-symbol sort        Sort name for start symbol of host language. Default is Start")
+     + 
+        ArgOption(
+        	"--host-lowercase-name"
+        , where(<extend-config> ("--host-lowercase-name", [<id>]))
+        , !"--host-lowercase-name sort      Lowercase name for host language. Default is lowercasing the camel name")
+     + 
+        ArgOption(
+        	"--guest-camel-name"
+        , where(<extend-config> ("--guest-camel-name", [<id>]))
+        , !"--guest-camel-name file         Set guest language grammar in camel case, e.g. Java")	
+     + 
+        ArgOption(
+        	"--guest-start-symbol"
+        , where(<extend-config> ("--guest-start-symbol", [<id>]))
+        , !"--guest-start-symbol name       Sort name for start symbol of guest language. Default is Start")
+     + 
+        ArgOption(
+        	"--guest-lowercase-name"
+        , where(<extend-config> ("--guest-lowercase-name", [<id>]))
+        , !"--guest-lowercase-name name     Lowercase name for guest language. Default is lowercasing the camel name")
+     + 
+        ArgOption(
+        	"--guest-language-toplevel"
+        , where(<extend-config> ("--guest-language-toplevel", [<id>]))
+        , !"--guest-language-toplevel file  File name of guest toplevel grammar module. Default is languages/<lowercasename>/Main.sdf")
+          	
         
+    // - for each host | guest:
+    //   - camel case language name 
+	//   - name in languages/<name>/...
+	//   - main module name 
+	//   - start symbol
+	//   - 
 
-    host-language = <get-config> "--host"
-    guest-language = <get-config> "--guest"
+    host-language-file = <get-config> "--host"
+    guest-language-file = <get-config> "--guest"
     
 	compose-grammars:
 		x -> ()
 	with
-		context-free-sorts := <collect-context-free-sorts> x
+		  guest-term := <guest-language-file ; Hd ; ReadFromFile>
+		; (guest-lowercase, guest-camel-case, guest-main) := <guess-language-properties> guest-term
+		; debug  
+		  
+	guess-language-properties:
+		x -> (lowercase, camel-case, main)
+	with
+		  importnames := <collect(?unparameterized(_))> x
+		; lowercase := <(filter(guess-lowercase) ; Hd) <+ !"unknown-language"> importnames
+		; camel-case := <hyphen-to-camel> lowercase
+		; main := <(filter(guess-main) ; Hd) <+ !"Main"> importnames
+		  
+	capitalize =
+      explode-string
+    ; [to-upper | id ]
+    ; implode-string
+
+	hyphen-to-camel =
+		  string-tokenize(|['-'])
+		; map(capitalize)
+		; concat-strings
+		  	    
+	guess-lowercase:
+		unparameterized(s) -> l
+	where
+		  <string-tokenize(|['/'])> s
+		; where(Hd => "languages")
+		; Tl ; Hd => l
+		  
+	guess-main:
+		unparameterized(s) -> l
+	where
+		  <string-tokenize(|['/'])> s
+		; where(length => 3)
+		; where(Hd => "languages")
+		; last
+		; where(explode-string ; Hd ; is-upper)
+		; l := <id>
+							  
+/*		
+		  context-free-sorts := <collect-context-free-sorts> x
 		; guest := <guest-language ; ?[<id>]>
 		; host := <host-language ; ?[<id>]>
 //		; embedding := <make-embedded(|guest)> context-free-sorts
@@ -38,8 +133,11 @@
 //		; <echo> mix
 //		; <fprintnl> (stdout(), "----------------------------------------------------")
 //		; <fprintnl> (stdout(), mix)
+*/		
 		
-		
+	/**
+	 *  Creates the Host-Guest0-...-GuestN.sdf toplevel grammar
+	 */		
 	make-toplevel(|host, host-start-symbol, guest):
 		x -> $<
 module <host>-<guest>
@@ -51,8 +149,10 @@
   context-free start-symbols <host-start-symbol>[[<host>Host]]
 >
 
+	/**
+	 *  Creates the Embedded<Guest>.sdf grammar, where all (anti-)quotation productions are.
+	 */
 
-
 	make-embedded(|guest):
 		srts -> $<
 module languages/<<lower-case> guest> lang/Embedded<guest>[E]
@@ -62,14 +162,22 @@
 	with
 		embeddings* := <map(make-quot-anti-quot(|guest))> srts 
 		
+	/**
+	 *  Creates the <Guest>Mix.sdf grammar, where the guest sorts are renamable through the [[Ctx0]] suffix
+	 *
+	 *  language/Main.sdf -> LanguageMix.sdf
+	 * 
+	 * @type List(Sort) -> String
+	 */
+	 
 	make-mix(|guest):
 		srts -> $<
-module languages/<<lower-case> guest>/<guest>Mix[Ctx0]
-imports languages/<<lower-case> guest>/Main
-[
+module languages/<<lower-case> guest>/<guest>Mix[Ctx0 E]
+imports languages/<<lower-case> guest>/Embedded<guest>Mix[E]
+   [
 	<mix*>
-]
-		>
+   ]
+>
 	with
 		mix* := <map(\ sort(name) -> ${ 
 			{name} => {name}[[Ctx0]]} \)> srts


From karltk at strategoxt.org  Sat Jun 19 23:23:19 2010
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Sat, 19 Jun 2010 21:23:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21027 - karltk -
	experimental/meta-amb-suggestions/trans/cli
Message-ID: <201006192123.o5JLNJwj013978@proliant.st.ewi.tudelft.nl>

Author: karltk
Date: 2010-06-19 21:23:19 +0000 (Sat, 19 Jun 2010)
New Revision: 21027

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21027&view=rev

Modified:
   experimental/meta-amb-suggestions/trans/cli/compose-grammars.str

Log:
Now creates the guest files on disk, using the conventional directory layout: languages/<lang>/Embedded<Lang>[Mix].sdf

Changes:

Modified: experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
===================================================================
--- experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-19 15:00:32 UTC (rev 21026)
+++ experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-19 21:23:19 UTC (rev 21027)
@@ -1,5 +1,14 @@
 module cli/compose-grammars
 
+/*
+ * Grammar composition tool, for generating embeddings of guest languages into a host language.
+ * Presently only supports Stratego as the host language.  
+ * 
+ *
+ * Copyright (c) 2010, Karl Trygve Kalleberg <karltk at strategoxt.org>
+ * Licensed under the GNU Lesser General Public License, v2.1 or later
+ */
+ 
 imports
 	libstratego-lib
 	Sdf2
@@ -17,9 +26,8 @@
  *
  * Example usage:
  * # pack-sdf -I ~/.nix-profile/share/java-front-syntax/ -i ~/.nix-profile/share/java-front-syntax/languages/java-15/Main.sdf -of ast -o Java.sdf-ast
- * 
- * # pack-sdf -I path/to/guest-front -i languages/<guest>/Main.sdf -of ast -o Guest.sdf-ast
- * # pack-sdf -I 
+ * # compose-grammars -i Java.sdf-ast
+ * # 
  
  */	
 strategies
@@ -29,63 +37,71 @@
     
     compose-grammars-options = 
          ArgOption(
-        	"--guest"
-       	, where(<extend-config> ("--guest", [<id>]))
-       	, !"--guest file                    File name of guest language grammar. Must be a packed .sdf-ast")
+        	"-i"
+       	, where(<extend-config> ("-i", [<id>]))
+       	, !"-i file                           File name of a guest language grammar. Must be a packed .sdf-ast")
 	 +
          ArgOption(
         	"--host-camel-name"
        	, where(<extend-config> ("--host-camel-name", [<id>]))
-       	, !"--host-camel-name file          Set host language grammar in camel case, e.g. Stratego")
+       	, !"--host-camel-name string          Set host language grammar in camel case. Default is Stratego")
      + 
         ArgOption(
         	"--host-start-symbol"
         , where(<extend-config> ("--host-start-symbol", [<id>]))
-        , !"--host-start-symbol sort        Sort name for start symbol of host language. Default is Start")
+        , !"--host-start-symbol string        Sort name for start symbol of host language. Default is Module")
      + 
         ArgOption(
         	"--host-lowercase-name"
         , where(<extend-config> ("--host-lowercase-name", [<id>]))
-        , !"--host-lowercase-name sort      Lowercase name for host language. Default is lowercasing the camel name")
+        , !"--host-lowercase-name string      Lowercase name for host language. Default is lowercasing the camel name")
      + 
         ArgOption(
         	"--guest-camel-name"
         , where(<extend-config> ("--guest-camel-name", [<id>]))
-        , !"--guest-camel-name file         Set guest language grammar in camel case, e.g. Java")	
+        , !"--guest-camel-name string         Set guest language grammar in camel case. Default is to guess from grammar.")	
      + 
         ArgOption(
-        	"--guest-start-symbol"
-        , where(<extend-config> ("--guest-start-symbol", [<id>]))
-        , !"--guest-start-symbol name       Sort name for start symbol of guest language. Default is Start")
-     + 
-        ArgOption(
         	"--guest-lowercase-name"
         , where(<extend-config> ("--guest-lowercase-name", [<id>]))
-        , !"--guest-lowercase-name name     Lowercase name for guest language. Default is lowercasing the camel name")
-     + 
-        ArgOption(
-        	"--guest-language-toplevel"
-        , where(<extend-config> ("--guest-language-toplevel", [<id>]))
-        , !"--guest-language-toplevel file  File name of guest toplevel grammar module. Default is languages/<lowercasename>/Main.sdf")
+        , !"--guest-lowercase-name string     Lowercase name for guest language. Default is lowercasing the camel name")
           	
         
-    // - for each host | guest:
-    //   - camel case language name 
-	//   - name in languages/<name>/...
-	//   - main module name 
-	//   - start symbol
-	//   - 
-
-    host-language-file = <get-config> "--host"
-    guest-language-file = <get-config> "--guest"
+    get-host-start-symbol = <get-config> "--host-start-symbol" <+ "Module"
     
-	compose-grammars:
-		x -> ()
+	compose-grammars =
+		<get-config> "-i"
+		; debug(!"XX")
+		; map(try(ReadFromFile ; generate-guest-grammars))
+	
+	generate-guest-grammars:	  
+		grammar -> ()
 	with
-		  guest-term := <guest-language-file ; Hd ; ReadFromFile>
-		; (guest-lowercase, guest-camel-case, guest-main) := <guess-language-properties> guest-term
-		; debug  
+		  (guest-lowercase, guest-camelcase, guest-main) := <guess-language-properties> grammar
+		; debug
+		; try(<mkdir> "languages")
+		; <string-join(|"/") ; try(mkdir)> ["languages", guest-lowercase]
+		
+		; embed := <make-embedded(|guest-lowercase, guest-camelcase)> grammar
+		; embed-filename := <concat-strings> [ "languages/", guest-lowercase, "/Embedded", guest-camelcase, ".sdf"]
+		; <write-grammar-to-file> (embed-filename, embed)
 		  
+		; mix := <make-mix(|guest-lowercase, guest-camelcase)> grammar
+		; mix-filename := <concat-strings> [ "languages/", guest-lowercase, "/Embedded", guest-camelcase, "Mix.sdf"]
+		; <write-grammar-to-file> (mix-filename, mix)
+		  
+
+	write-grammar-to-file:
+		(fname, content) -> ()
+	where
+		  stream := <fopen> (fname, "w")
+		; <fprint> (stream, [content])
+		; <fclose> stream 
+
+// 	java-front-syntax/languages/java-15/JavaMix.sdf
+//	java-front/languages/java/EmbeddedJavaMix.sdf
+//	java-front/languages/java/EmbeddedJava.sdf
+
 	guess-language-properties:
 		x -> (lowercase, camel-case, main)
 	with
@@ -95,9 +111,9 @@
 		; main := <(filter(guess-main) ; Hd) <+ !"Main"> importnames
 		  
 	capitalize =
-      explode-string
-    ; [to-upper | id ]
-    ; implode-string
+		  explode-string
+    	; [to-upper | id ]
+    	; implode-string
 
 	hyphen-to-camel =
 		  string-tokenize(|['-'])
@@ -121,20 +137,6 @@
 		; where(explode-string ; Hd ; is-upper)
 		; l := <id>
 							  
-/*		
-		  context-free-sorts := <collect-context-free-sorts> x
-		; guest := <guest-language ; ?[<id>]>
-		; host := <host-language ; ?[<id>]>
-//		; embedding := <make-embedded(|guest)> context-free-sorts
-//		; mix := <make-mix(|guest)> context-free-sorts
-		; make-toplevel(|host, "Module", guest) 
-		; echo
-//		; <echo> embedding
-//		; <echo> mix
-//		; <fprintnl> (stdout(), "----------------------------------------------------")
-//		; <fprintnl> (stdout(), mix)
-*/		
-		
 	/**
 	 *  Creates the Host-Guest0-...-GuestN.sdf toplevel grammar
 	 */		
@@ -153,14 +155,18 @@
 	 *  Creates the Embedded<Guest>.sdf grammar, where all (anti-)quotation productions are.
 	 */
 
-	make-embedded(|guest):
-		srts -> $<
-module languages/<<lower-case> guest> lang/Embedded<guest>[E]
-imports languages/<<lower-case> guest>/Main
+	make-embedded(|guest-lower, guest-camel):
+		grammar -> $<
+module languages/<guest-lower> lang/Embedded<guest-camel>[E]
+imports languages/<guest-lower>/Main
+exports
+  context-free syntax
 <embeddings*>
 >
 	with
-		embeddings* := <map(make-quot-anti-quot(|guest))> srts 
+		  <collect-context-free-sorts> grammar
+		; map(make-quot-anti-quot(|guest-lower, guest-camel))
+		; ?embeddings* 
 		
 	/**
 	 *  Creates the <Guest>Mix.sdf grammar, where the guest sorts are renamable through the [[Ctx0]] suffix
@@ -170,20 +176,22 @@
 	 * @type List(Sort) -> String
 	 */
 	 
-	make-mix(|guest):
-		srts -> $<
-module languages/<<lower-case> guest>/<guest>Mix[Ctx0 E]
-imports languages/<<lower-case> guest>/Embedded<guest>Mix[E]
+	make-mix(|guest-lower, guest-camel):
+		grammar -> $<
+module languages/<guest-lower>/<guest-camel>Mix[Ctx0 E]
+imports languages/<guest-lower>/Embedded<guest-camel>Mix[E]
    [
 	<mix*>
    ]
 >
 	with
-		mix* := <map(\ sort(name) -> ${ 
-			{name} => {name}[[Ctx0]]} \)> srts
+		  <collect-all-sorts> grammar
+		; map(\ sort(name) -> ${ 
+			{name} => {name}[[Ctx0]]} \)
+		; ?mix*
 
 
-	make-quot-anti-quot(|lang):
+	make-quot-anti-quot(|lang, camel):
 		sort(name) -> $<
    %% <lang> : <name>
                           "|[" <name> "]|" -$>$ E {cons("ToMetaExpr")}
@@ -209,6 +217,9 @@
 		
 	collect-context-free-sorts =
 		collect-all(?sort(_), union, \ lexical-syntax(_) -> () \ + \ lexical-restrictions(_) -> () \) 
+
+	collect-all-sorts =
+		collect-all(?sort(_)) 
 	
 	 
 	 


From karltk at strategoxt.org  Sat Jun 19 23:56:31 2010
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Sat, 19 Jun 2010 21:56:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21028 - karltk -
	experimental/meta-amb-suggestions/trans/cli
Message-ID: <201006192156.o5JLuVEw014143@proliant.st.ewi.tudelft.nl>

Author: karltk
Date: 2010-06-19 21:56:31 +0000 (Sat, 19 Jun 2010)
New Revision: 21028

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21028&view=rev

Modified:
   experimental/meta-amb-suggestions/trans/cli/compose-grammars.str

Log:
Now writes toplevel, combined grammar definition.

Changes:

Modified: experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
===================================================================
--- experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-19 21:23:19 UTC (rev 21027)
+++ experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-19 21:56:31 UTC (rev 21028)
@@ -30,6 +30,11 @@
  * # 
  
  */	
+ 
+signature
+  constructors
+  	LangDesc : String * String * String -> LangDesc
+  	
 strategies
 	
 	main = option-wrap(compose-grammars-options, compose-grammars ; !())
@@ -67,18 +72,36 @@
         , !"--guest-lowercase-name string     Lowercase name for guest language. Default is lowercasing the camel name")
           	
         
-    get-host-start-symbol = <get-config> "--host-start-symbol" <+ "Module"
+    get-host-start-symbol = <get-config> "--host-start-symbol" <+ !"Module"
+    get-host-camelcase = <get-config> "--host-camel-name" <+ !"Stratego"
+    get-host-lowercase = <get-config> "--host-lower-name" <+ !"stratego"
     
 	compose-grammars =
 		<get-config> "-i"
 		; debug(!"XX")
 		; map(try(ReadFromFile ; generate-guest-grammars))
+		; debug(!"ZZY")
+		; grammar-name := <compute-toplevel-name> (<get-host-camelcase>, <get-guest-languages>)
+		; <debug(!"XY") ; generate-toplevel> (<get-host-lowercase>, <get-host-camelcase>, <get-host-start-symbol>, <get-guest-languages>)
+		; <write-grammar-to-file>  (<concat-strings> [grammar-name, ".sdf"], <id>)
 	
+	compute-toplevel-name:
+		(host, guest*) -> module-name
+	with
+		  guest-camel* := <map(?LangDesc(_, <id>, _))> guest*
+		; module-name := <string-join(|"-")> [host | guest-camel*]
+		
+	remember-guest-language = 
+		  ?xs
+		; rules(GuestLang :+ _ -> xs)		
+		
+	get-guest-languages = bagof-GuestLang <+ ![]
+	 
 	generate-guest-grammars:	  
 		grammar -> ()
 	with
-		  (guest-lowercase, guest-camelcase, guest-main) := <guess-language-properties> grammar
-		; debug
+		  ld at LangDesc(guest-lowercase, guest-camelcase, guest-main) := <guess-language-properties> grammar
+		; <remember-guest-language> ld
 		; try(<mkdir> "languages")
 		; <string-join(|"/") ; try(mkdir)> ["languages", guest-lowercase]
 		
@@ -96,14 +119,15 @@
 	where
 		  stream := <fopen> (fname, "w")
 		; <fprint> (stream, [content])
-		; <fclose> stream 
+		; <fclose> stream
+		; <concat-strings ; echo> ["Wrote file ", fname]  
 
 // 	java-front-syntax/languages/java-15/JavaMix.sdf
 //	java-front/languages/java/EmbeddedJavaMix.sdf
 //	java-front/languages/java/EmbeddedJava.sdf
 
 	guess-language-properties:
-		x -> (lowercase, camel-case, main)
+		x -> LangDesc(lowercase, camel-case, main)
 	with
 		  importnames := <collect(?unparameterized(_))> x
 		; lowercase := <(filter(guess-lowercase) ; Hd) <+ !"unknown-language"> importnames
@@ -140,17 +164,21 @@
 	/**
 	 *  Creates the Host-Guest0-...-GuestN.sdf toplevel grammar
 	 */		
-	make-toplevel(|host, host-start-symbol, guest):
-		x -> $<
-module <host>-<guest>
+	generate-toplevel:
+		(host-lowercase, host-camelcase, host-start-symbol, guest*) -> $<
+module <<compute-toplevel-name> (host-camelcase, guest*)>
 imports
-  languages/<<lower-case> host>/<host>Mix[<host>Host]
-  languages/<<lower-case> guest>/Embedded<guest>Mix[<guest>Object Term[[<host>Host]]]
-
+  languages/<host-lowercase>/<host-camelcase>Mix[<host-camelcase>Host]
+  <guest-import*>
 exports
-  context-free start-symbols <host-start-symbol>[[<host>Host]]
+  context-free start-symbols <host-start-symbol>[[<host-camelcase>Host]]
 >
+	with
+		  <map(\ LangDesc(lowercase, camelcase, _) -> $< languages/<lowercase>/Embedded<camelcase>Mix[<camelcase>Object Term[[<host-camelcase>Host]]]> \)> guest*
+		; debug(!"XXX")
+		; ?guest-import*
 
+  
 	/**
 	 *  Creates the Embedded<Guest>.sdf grammar, where all (anti-)quotation productions are.
 	 */


From karltk at strategoxt.org  Sun Jun 20 00:15:19 2010
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Sat, 19 Jun 2010 22:15:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21029 - karltk -
	experimental/meta-amb-suggestions/trans/cli
Message-ID: <201006192215.o5JMFJhI014483@proliant.st.ewi.tudelft.nl>

Author: karltk
Date: 2010-06-19 22:15:19 +0000 (Sat, 19 Jun 2010)
New Revision: 21029

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21029&view=rev

Modified:
   experimental/meta-amb-suggestions/trans/cli/compose-grammars.str

Log:
Output inferred language information. Make directories if they don't exist, but don't if they do.

Changes:

Modified: experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
===================================================================
--- experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-19 21:56:31 UTC (rev 21028)
+++ experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-19 22:15:19 UTC (rev 21029)
@@ -78,11 +78,13 @@
     
 	compose-grammars =
 		<get-config> "-i"
-		; debug(!"XX")
 		; map(try(ReadFromFile ; generate-guest-grammars))
-		; debug(!"ZZY")
-		; grammar-name := <compute-toplevel-name> (<get-host-camelcase>, <get-guest-languages>)
-		; <debug(!"XY") ; generate-toplevel> (<get-host-lowercase>, <get-host-camelcase>, <get-host-start-symbol>, <get-guest-languages>)
+		; host-camelcase := <get-host-camelcase>
+		; host-lowercase := <get-host-lowercase> 
+		; <echo> $[Host lower case name : [host-lowercase]]
+		; <echo> $[Host camel case name : [host-camelcase]]
+		; grammar-name := <compute-toplevel-name> (host-camelcase, <get-guest-languages>)
+		; <generate-toplevel> (host-lowercase, host-camelcase, <get-host-start-symbol>, <get-guest-languages>)
 		; <write-grammar-to-file>  (<concat-strings> [grammar-name, ".sdf"], <id>)
 	
 	compute-toplevel-name:
@@ -101,9 +103,10 @@
 		grammar -> ()
 	with
 		  ld at LangDesc(guest-lowercase, guest-camelcase, guest-main) := <guess-language-properties> grammar
+		; <echo> $[Guest lower case name : [guest-lowercase]]
+		; <echo> $[Guest camel case name : [guest-camelcase]]
 		; <remember-guest-language> ld
-		; try(<mkdir> "languages")
-		; <string-join(|"/") ; try(mkdir)> ["languages", guest-lowercase]
+		; <ensure-output-dir> <concat-strings> ["languages/", guest-lowercase]
 		
 		; embed := <make-embedded(|guest-lowercase, guest-camelcase)> grammar
 		; embed-filename := <concat-strings> [ "languages/", guest-lowercase, "/Embedded", guest-camelcase, ".sdf"]
@@ -114,6 +117,13 @@
 		; <write-grammar-to-file> (mix-filename, mix)
 		  
 
+    ensure-output-dir =
+    	file-exists <+ mkdirs
+    	
+    mkdirs = 
+    	  string-tokenize(|['/'])
+     	; <foldl(\ (x,y) -> <string-join(|"/") ; mkdir> [y, x] \)> (<id>, ".")
+     	  
 	write-grammar-to-file:
 		(fname, content) -> ()
 	where
@@ -125,6 +135,7 @@
 // 	java-front-syntax/languages/java-15/JavaMix.sdf
 //	java-front/languages/java/EmbeddedJavaMix.sdf
 //	java-front/languages/java/EmbeddedJava.sdf
+//  Stratego-Java.sdf
 
 	guess-language-properties:
 		x -> LangDesc(lowercase, camel-case, main)
@@ -175,7 +186,6 @@
 >
 	with
 		  <map(\ LangDesc(lowercase, camelcase, _) -> $< languages/<lowercase>/Embedded<camelcase>Mix[<camelcase>Object Term[[<host-camelcase>Host]]]> \)> guest*
-		; debug(!"XXX")
 		; ?guest-import*
 
   


From karltk at strategoxt.org  Sun Jun 20 00:23:26 2010
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Sat, 19 Jun 2010 22:23:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21030 - karltk -
	experimental/meta-amb-suggestions/trans/cli
Message-ID: <201006192223.o5JMNQMo014523@proliant.st.ewi.tudelft.nl>

Author: karltk
Date: 2010-06-19 22:23:25 +0000 (Sat, 19 Jun 2010)
New Revision: 21030

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21030&view=rev

Modified:
   experimental/meta-amb-suggestions/trans/cli/compose-grammars.str

Log:
Added support for overriding guessed parameters. Only works with one guest language for now.

Changes:

Modified: experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
===================================================================
--- experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-19 22:15:19 UTC (rev 21029)
+++ experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-19 22:23:25 UTC (rev 21030)
@@ -57,9 +57,9 @@
         , !"--host-start-symbol string        Sort name for start symbol of host language. Default is Module")
      + 
         ArgOption(
-        	"--host-lowercase-name"
-        , where(<extend-config> ("--host-lowercase-name", [<id>]))
-        , !"--host-lowercase-name string      Lowercase name for host language. Default is lowercasing the camel name")
+        	"--host-lower-name"
+        , where(<extend-config> ("--host-lower-name", [<id>]))
+        , !"--host-lower-name string          Lowercase name for host language. Default is lowercasing the camel name")
      + 
         ArgOption(
         	"--guest-camel-name"
@@ -67,15 +67,18 @@
         , !"--guest-camel-name string         Set guest language grammar in camel case. Default is to guess from grammar.")	
      + 
         ArgOption(
-        	"--guest-lowercase-name"
-        , where(<extend-config> ("--guest-lowercase-name", [<id>]))
-        , !"--guest-lowercase-name string     Lowercase name for guest language. Default is lowercasing the camel name")
+        	"--guest-lower-name"
+        , where(<extend-config> ("--guest-lower-name", [<id>]))
+        , !"--guest-lower-name string         Lowercase name for guest language. Default is lowercasing the camel name")
           	
         
-    get-host-start-symbol = <get-config> "--host-start-symbol" <+ !"Module"
-    get-host-camelcase = <get-config> "--host-camel-name" <+ !"Stratego"
-    get-host-lowercase = <get-config> "--host-lower-name" <+ !"stratego"
+    get-host-start-symbol = <get-config> "--host-start-symbol" ; ?[<id>] <+ !"Module"
+    get-host-camelcase = <get-config> "--host-camel-name" ; ?[<id>] <+ !"Stratego"
+    get-host-lowercase = <get-config> "--host-lower-name" ; ?[<id>] <+ !"stratego"
     
+    get-guest-lower-name = <get-config> "--guest-lower-name" ; ?[<id>]
+    get-guest-camel-name = <get-config> "--guest-camel-name" ; ?[<id>]
+    
 	compose-grammars =
 		<get-config> "-i"
 		; map(try(ReadFromFile ; generate-guest-grammars))
@@ -141,8 +144,11 @@
 		x -> LangDesc(lowercase, camel-case, main)
 	with
 		  importnames := <collect(?unparameterized(_))> x
-		; lowercase := <(filter(guess-lowercase) ; Hd) <+ !"unknown-language"> importnames
-		; camel-case := <hyphen-to-camel> lowercase
+		; lowercase := <get-guest-lower-name 
+		           <+ (filter(guess-lowercase) ; Hd) 
+		           <+ !"unknown-language"> importnames
+		; camel-case := <get-guest-camel-name 
+		           <+ hyphen-to-camel> lowercase
 		; main := <(filter(guess-main) ; Hd) <+ !"Main"> importnames
 		  
 	capitalize =


From karltk at strategoxt.org  Sun Jun 20 21:16:14 2010
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Sun, 20 Jun 2010 19:16:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21031 - karltk -
	experimental/meta-amb-suggestions/trans/cli
Message-ID: <201006201916.o5KJGEB5010697@proliant.st.ewi.tudelft.nl>

Author: karltk
Date: 2010-06-20 19:16:14 +0000 (Sun, 20 Jun 2010)
New Revision: 21031

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21031&view=rev

Modified:
   experimental/meta-amb-suggestions/trans/cli/compose-grammars.str

Log:
Removed useless comment.

Changes:

Modified: experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
===================================================================
--- experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-19 22:23:25 UTC (rev 21030)
+++ experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-20 19:16:14 UTC (rev 21031)
@@ -266,12 +266,6 @@
 		collect-all(?sort(_)) 
 	
 	 
-	 
-// - find start module of host language
-// - find all exported sorts of guest lanuage(s)
-
-
-
 rules
 	
 	compute-combined-name:


From L.C.L.Kats at tudelft.nl  Sun Jun 20 21:23:25 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sun, 20 Jun 2010 19:23:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21032 - LennartKats -
	in experimental/meta-amb-suggestions: . trans trans/cli
Message-ID: <201006201923.o5KJNPxI010742@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-20 19:23:25 +0000 (Sun, 20 Jun 2010)
New Revision: 21032

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21032&view=rev

Added:
   experimental/meta-amb-suggestions/compose-grammars.sh
Modified:
   experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
   experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str

Log:
added compose-grammars.sh script and included compose-grammars in normal build

Changes:

Added: experimental/meta-amb-suggestions/compose-grammars.sh
===================================================================
--- experimental/meta-amb-suggestions/compose-grammars.sh	                        (rev 0)
+++ experimental/meta-amb-suggestions/compose-grammars.sh	2010-06-20 19:23:25 UTC (rev 21032)
@@ -0,0 +1 @@
+java -cp include/meta_amb_suggestions.jar:/Users/lk/opt/strc-java/share/strc-java/strategoxt.jar run trans.main "$@"

Modified: experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
===================================================================
--- experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-20 19:16:14 UTC (rev 21031)
+++ experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-20 19:23:25 UTC (rev 21032)
@@ -11,7 +11,7 @@
  
 imports
 	libstratego-lib
-	Sdf2
+	libstratego-sglr
 
 /*
  *

Modified: experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str
===================================================================
--- experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str	2010-06-20 19:16:14 UTC (rev 21031)
+++ experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str	2010-06-20 19:23:25 UTC (rev 21032)
@@ -8,6 +8,7 @@
   libstrc
   stratego-context
   lib/editor-common.generated
+  cli/-
 
 signature constructors
   


From karltk at strategoxt.org  Sun Jun 20 22:38:03 2010
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Sun, 20 Jun 2010 20:38:03 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21033 - karltk -
	experimental/meta-amb-suggestions/trans/cli
Message-ID: <201006202038.o5KKc3U6012151@proliant.st.ewi.tudelft.nl>

Author: karltk
Date: 2010-06-20 20:38:03 +0000 (Sun, 20 Jun 2010)
New Revision: 21033

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21033&view=rev

Modified:
   experimental/meta-amb-suggestions/trans/cli/compose-grammars.str

Log:
Now we support guessing language properties for both Bravenboer and Visser-style grammars.

Changes:

Modified: experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
===================================================================
--- experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-20 19:23:25 UTC (rev 21032)
+++ experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-20 20:38:03 UTC (rev 21033)
@@ -26,7 +26,8 @@
  *
  * Example usage:
  * # pack-sdf -I ~/.nix-profile/share/java-front-syntax/ -i ~/.nix-profile/share/java-front-syntax/languages/java-15/Main.sdf -of ast -o Java.sdf-ast
- * # compose-grammars -i Java.sdf-ast
+ * # parse-sdf-definition -i ~/.nix-profile/share/sdf/webdsl/WebDSL.def -o WebDSL.sdf-ast
+ * # compose-grammars -i Java.sdf-ast -i WebDSL.sdf-ast
  * # 
  
  */	
@@ -108,10 +109,11 @@
 		  ld at LangDesc(guest-lowercase, guest-camelcase, guest-main) := <guess-language-properties> grammar
 		; <echo> $[Guest lower case name : [guest-lowercase]]
 		; <echo> $[Guest camel case name : [guest-camelcase]]
+		; <echo> $[Guest main module     : [guest-main]]
 		; <remember-guest-language> ld
 		; <ensure-output-dir> <concat-strings> ["languages/", guest-lowercase]
 		
-		; embed := <make-embedded(|guest-lowercase, guest-camelcase)> grammar
+		; embed := <make-embedded(|guest-lowercase, guest-camelcase, guest-main)> grammar
 		; embed-filename := <concat-strings> [ "languages/", guest-lowercase, "/Embedded", guest-camelcase, ".sdf"]
 		; <write-grammar-to-file> (embed-filename, embed)
 		  
@@ -125,7 +127,7 @@
     	
     mkdirs = 
     	  string-tokenize(|['/'])
-     	; <foldl(\ (x,y) -> <string-join(|"/") ; mkdir> [y, x] \)> (<id>, ".")
+     	; <foldl(\ (x,y) -> <string-join(|"/") ; (file-exists <+ mkdir)> [y, x] \)> (<id>, ".")
      	  
 	write-grammar-to-file:
 		(fname, content) -> ()
@@ -141,16 +143,49 @@
 //  Stratego-Java.sdf
 
 	guess-language-properties:
-		x -> LangDesc(lowercase, camel-case, main)
+		grammar -> LangDesc(lowercase, camel-case, main)
 	with
-		  importnames := <collect(?unparameterized(_))> x
-		; lowercase := <get-guest-lower-name 
-		           <+ (filter(guess-lowercase) ; Hd) 
-		           <+ !"unknown-language"> importnames
-		; camel-case := <get-guest-camel-name 
-		           <+ hyphen-to-camel> lowercase
-		; main := <(filter(guess-main) ; Hd) <+ !"Main"> importnames
+		  importnames := <collect(?unparameterized(_))> grammar
+		; if <is-grammar-bravenboer-style> importnames then
+		  	  lowercase := <get-guest-lower-name
+                        <+ guess-lower-case-from-module-paths
+                        <+ !"unknown-language"> importnames
+			; camel-case := <get-guest-camel-name 
+                         <+ hyphen-to-camel> lowercase
+		    ; main := <guess-main-from-module-paths <+ <concat-strings> ["languages/", lowercase, "/Main"]> importnames
+		  else
+		  	  main-mod := <guess-main-module> grammar
+			; lowercase := <get-guest-lower-name 		  	
+		                <+ guess-lowercase-from-module> main-mod
+			; camel-case := <get-guest-camel-name 
+                         <+ guess-camelcase-from-module> main-mod
+		    ; main := <string-name-of <+ !"Main"> main-mod
+		  end		      
 		  
+	is-grammar-bravenboer-style = 
+		fetch(?unparameterized(<id>) ; string-tokenize(|['/']) ; Hd => "languages")
+
+	
+	/** Looks for an import on the form language/<lang>/... */
+	guess-lower-case-from-module-paths = filter(guess-lowercase) ; Hd
+	
+	guess-main-from-module-paths = filter(guess-main) ; Hd
+	
+	/** Looks for a module with name <lang> that defines context-free start-symbols*/
+	guess-lowercase-from-module:
+		"module"#([unparameterized(nm), import*, section*]) -> <lower-case> nm
+		
+	guess-camelcase-from-module:
+		"module"#([unparameterized(nm), import*, section*]) -> nm
+	
+	string-name-of = ?"module"#([unparameterized(<id>), _, _]) 
+		
+	guess-main-module = 
+		  collect(?"module"#([_, _, _]))
+		; filter({\ x@"module"#([_, _, section*]) -> x where <collect(?context-free-start-symbols(_))> section* => [_|_] \})
+		; Hd
+		
+	
 	capitalize =
 		  explode-string
     	; [to-upper | id ]
@@ -169,14 +204,13 @@
 		; Tl ; Hd => l
 		  
 	guess-main:
-		unparameterized(s) -> l
+		unparameterized(s) -> s
 	where
 		  <string-tokenize(|['/'])> s
 		; where(length => 3)
 		; where(Hd => "languages")
 		; last
 		; where(explode-string ; Hd ; is-upper)
-		; l := <id>
 							  
 	/**
 	 *  Creates the Host-Guest0-...-GuestN.sdf toplevel grammar
@@ -199,10 +233,10 @@
 	 *  Creates the Embedded<Guest>.sdf grammar, where all (anti-)quotation productions are.
 	 */
 
-	make-embedded(|guest-lower, guest-camel):
+	make-embedded(|guest-lower, guest-camel, guest-main):
 		grammar -> $<
 module languages/<guest-lower> lang/Embedded<guest-camel>[E]
-imports languages/<guest-lower>/Main
+imports <guest-main>
 exports
   context-free syntax
 <embeddings*>
@@ -223,7 +257,7 @@
 	make-mix(|guest-lower, guest-camel):
 		grammar -> $<
 module languages/<guest-lower>/<guest-camel>Mix[Ctx0 E]
-imports languages/<guest-lower>/Embedded<guest-camel>Mix[E]
+imports languages/<guest-lower>/Embedded<guest-camel>[E]
    [
 	<mix*>
    ]


From karltk at strategoxt.org  Sun Jun 20 22:41:03 2010
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Sun, 20 Jun 2010 20:41:03 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21034 - karltk -
	experimental/meta-amb-suggestions/trans/cli
Message-ID: <201006202041.o5KKf38T012226@proliant.st.ewi.tudelft.nl>

Author: karltk
Date: 2010-06-20 20:41:03 +0000 (Sun, 20 Jun 2010)
New Revision: 21034

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21034&view=rev

Modified:
   experimental/meta-amb-suggestions/trans/cli/compose-grammars.str

Log:
Forgot to properly space the imports of the toplevel grammar.

Changes:

Modified: experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
===================================================================
--- experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-20 20:38:03 UTC (rev 21033)
+++ experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-20 20:41:03 UTC (rev 21034)
@@ -225,7 +225,9 @@
   context-free start-symbols <host-start-symbol>[[<host-camelcase>Host]]
 >
 	with
-		  <map(\ LangDesc(lowercase, camelcase, _) -> $< languages/<lowercase>/Embedded<camelcase>Mix[<camelcase>Object Term[[<host-camelcase>Host]]]> \)> guest*
+		  <map(\ LangDesc(lowercase, camelcase, _) -> $<
+		  	languages/<lowercase>/Embedded<camelcase>Mix[<camelcase>Object Term[[<host-camelcase>Host]]]> \)
+		  	> guest*
 		; ?guest-import*
 
   


From karltk at strategoxt.org  Sun Jun 20 23:37:38 2010
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Sun, 20 Jun 2010 21:37:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21035 - karltk -
	experimental/meta-amb-suggestions/trans/cli
Message-ID: <201006202137.o5KLbcHY012948@proliant.st.ewi.tudelft.nl>

Author: karltk
Date: 2010-06-20 21:37:38 +0000 (Sun, 20 Jun 2010)
New Revision: 21035

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21035&view=rev

Modified:
   experimental/meta-amb-suggestions/trans/cli/compose-grammars.str

Log:
Fixed a few typos in the generated grammars. Special case for Stratego as a host langauge.

Changes:

Modified: experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
===================================================================
--- experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-20 20:41:03 UTC (rev 21034)
+++ experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-20 21:37:38 UTC (rev 21035)
@@ -219,7 +219,7 @@
 		(host-lowercase, host-camelcase, host-start-symbol, guest*) -> $<
 module <<compute-toplevel-name> (host-camelcase, guest*)>
 imports
-  languages/<host-lowercase>/<host-camelcase>Mix[<host-camelcase>Host]
+  <host-mix>[<host-camelcase>Host]
   <guest-import*>
 exports
   context-free start-symbols <host-start-symbol>[[<host-camelcase>Host]]
@@ -228,6 +228,11 @@
 		  <map(\ LangDesc(lowercase, camelcase, _) -> $<
 		  	languages/<lowercase>/Embedded<camelcase>Mix[<camelcase>Object Term[[<host-camelcase>Host]]]> \)
 		  	> guest*
+		; if !host-lowercase => "stratego" then 
+			host-mix := "StrategoMix"
+		  else
+		  	host-mix := $[languages/[host-lowercase]/[host-camelcase]Mix]
+		  end
 		; ?guest-import*
 
   
@@ -237,7 +242,7 @@
 
 	make-embedded(|guest-lower, guest-camel, guest-main):
 		grammar -> $<
-module languages/<guest-lower> lang/Embedded<guest-camel>[E]
+module languages/<guest-lower>/Embedded<guest-camel>[E]
 imports <guest-main>
 exports
   context-free syntax
@@ -258,7 +263,7 @@
 	 
 	make-mix(|guest-lower, guest-camel):
 		grammar -> $<
-module languages/<guest-lower>/<guest-camel>Mix[Ctx0 E]
+module languages/<guest-lower>/Embedded<guest-camel>Mix[Ctx0 E]
 imports languages/<guest-lower>/Embedded<guest-camel>[E]
    [
 	<mix*>


From karltk at strategoxt.org  Sun Jun 20 23:51:12 2010
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Sun, 20 Jun 2010 21:51:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21036 - karltk -
	experimental/meta-amb-suggestions/trans/cli
Message-ID: <201006202151.o5KLpCV9013015@proliant.st.ewi.tudelft.nl>

Author: karltk
Date: 2010-06-20 21:51:12 +0000 (Sun, 20 Jun 2010)
New Revision: 21036

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21036&view=rev

Modified:
   experimental/meta-amb-suggestions/trans/cli/compose-grammars.str

Log:
Toplevel grammar now imports the guest language correctly again.

Changes:

Modified: experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
===================================================================
--- experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-20 21:37:38 UTC (rev 21035)
+++ experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-20 21:51:12 UTC (rev 21036)
@@ -225,15 +225,15 @@
   context-free start-symbols <host-start-symbol>[[<host-camelcase>Host]]
 >
 	with
-		  <map(\ LangDesc(lowercase, camelcase, _) -> $<
-		  	languages/<lowercase>/Embedded<camelcase>Mix[<camelcase>Object Term[[<host-camelcase>Host]]]> \)
-		  	> guest*
+		  guest-import* := 
+		  	<map(\ LangDesc(lowercase, camelcase, _) -> $<
+		  		languages/<lowercase>/Embedded<camelcase>Mix[<camelcase>Object Term[[<host-camelcase>Host]]]> \)
+		  		> guest*
 		; if !host-lowercase => "stratego" then 
 			host-mix := "StrategoMix"
 		  else
 		  	host-mix := $[languages/[host-lowercase]/[host-camelcase]Mix]
 		  end
-		; ?guest-import*
 
   
 	/**


From karltk at strategoxt.org  Sun Jun 20 23:57:06 2010
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Sun, 20 Jun 2010 21:57:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21037 - karltk - in
	experimental/meta-amb-suggestions: test/Stratego-Java-15 trans/cli
Message-ID: <201006202157.o5KLv6Wp013051@proliant.st.ewi.tudelft.nl>

Author: karltk
Date: 2010-06-20 21:57:06 +0000 (Sun, 20 Jun 2010)
New Revision: 21037

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21037&view=rev

Added:
   experimental/meta-amb-suggestions/test/Stratego-Java-15/test4.met
Modified:
   experimental/meta-amb-suggestions/trans/cli/compose-grammars.str

Log:
Completed the first example of automatic grammar composition and parsing. Parse table becomes gigantic, should probably figure out why.

Changes:

Added: experimental/meta-amb-suggestions/test/Stratego-Java-15/test4.met
===================================================================
--- experimental/meta-amb-suggestions/test/Stratego-Java-15/test4.met	                        (rev 0)
+++ experimental/meta-amb-suggestions/test/Stratego-Java-15/test4.met	2010-06-20 21:57:06 UTC (rev 21037)
@@ -0,0 +1,5 @@
+module foo
+
+rules
+
+  a = !CompilationUnit |[ class Foo {} ]|

Modified: experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
===================================================================
--- experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-20 21:51:12 UTC (rev 21036)
+++ experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-20 21:57:06 UTC (rev 21037)
@@ -28,8 +28,11 @@
  * # pack-sdf -I ~/.nix-profile/share/java-front-syntax/ -i ~/.nix-profile/share/java-front-syntax/languages/java-15/Main.sdf -of ast -o Java.sdf-ast
  * # parse-sdf-definition -i ~/.nix-profile/share/sdf/webdsl/WebDSL.def -o WebDSL.sdf-ast
  * # compose-grammars -i Java.sdf-ast -i WebDSL.sdf-ast
- * # 
- 
+ *
+ * # ./trans/cli/compose-grammars -i Java.sdf-ast
+ * # pack-sdf -i Stratego-Java15.sdf -I . -I ~/.nix-profile/share/sdf/stratego-front -I ~/.nix-profile/share/java-front-syntax -o Stratego-Java15.def
+ * # sdf2table -i Stratego-Java15.def -o Stratego-Java15.tbl -m Stratego-Java15
+ * # sglri -p Stratego-Java15.tbl -i test/Stratego-Java-15/test4.met
  */	
  
 signature


From L.C.L.Kats at tudelft.nl  Mon Jun 21 09:42:09 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 21 Jun 2010 07:42:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21038 - LennartKats -
	strategoxt/trunk/sdf-front/parse
	strc-java/trunk/java/tools/org/strategoxt/tools/lib
Message-ID: <201006210742.o5L7g9nR027591@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-21 07:42:08 +0000 (Mon, 21 Jun 2010)
New Revision: 21038

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21038&view=rev

Modified:
   strategoxt/trunk/sdf-front/parse/pack-sdf.str
   strc-java/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf.str

Log:
Stupid pack-sdf regression

Changes:

Modified: strategoxt/trunk/sdf-front/parse/pack-sdf.str
===================================================================
--- strategoxt/trunk/sdf-front/parse/pack-sdf.str	2010-06-20 21:57:06 UTC (rev 21037)
+++ strategoxt/trunk/sdf-front/parse/pack-sdf.str	2010-06-21 07:42:08 UTC (rev 21038)
@@ -39,11 +39,12 @@
     ; where( (<fopen> (<get-config> "-o", "w") <+ stdout-stream ) => stream ) 
     ; with(
         (  where(of-config => "txt")   < ( asfix-yield(|stream) ; <xtc-exit>0 )
-        +  where(of-config => "ast")   < implode-asfix
+        +  where(of-config => "ast")   < xtc-implode-asfix
         +  where(of-config => "asfix")
-        ); write-to
+        ); write-to => out
       | "failed to write output"
       )
+    ; !out
     )
 
 /**

Modified: strc-java/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf.str
===================================================================
--- strc-java/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf.str	2010-06-20 21:57:06 UTC (rev 21037)
+++ strc-java/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf.str	2010-06-21 07:42:08 UTC (rev 21038)
@@ -34,9 +34,10 @@
         (  where(of-config => "txt")   < ( asfix-yield(|stream) ; <xtc-exit>0 )
         +  where(of-config => "ast")   < implode-asfix
         +  where(of-config => "asfix")
-        ); write-to
+        ); write-to => out
       | "failed to write output"
       )
+    ; !out
     )
   
   external asfix-yield(|stream) // HACK


From L.C.L.Kats at tudelft.nl  Mon Jun 21 09:43:11 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 21 Jun 2010 07:43:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21039 - LennartKats -
	strc-java/trunk/java/runtime/org/strategoxt/lang
Message-ID: <201006210743.o5L7hBr3027699@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-21 07:43:11 +0000 (Mon, 21 Jun 2010)
New Revision: 21039

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21039&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_all.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_one.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_some.java

Log:
minor tweaks to all/some/one

Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_all.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_all.java	2010-06-21 07:42:08 UTC (rev 21038)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_all.java	2010-06-21 07:43:11 UTC (rev 21039)
@@ -77,10 +77,29 @@
 		}
 	}
 
+	private static IStrategoList mapIgnoreAnnos(Context context, IStrategoList list, Strategy s) {
+		IStrategoTerm[] inputs = list.getAllSubterms();
+		IStrategoTerm[] results = null;
+
+		for (int i = 0; i < inputs.length; i++) {
+			IStrategoTerm arg = inputs[i];
+			IStrategoTerm arg2 = s.invoke(context, arg);
+			if (arg2 != arg) {
+				if (arg2 == null)
+					return null;
+				if (results == null)
+					results = inputs.clone();
+				results[i] = arg2;
+			}
+		}
+		
+		return results == null ? list : context.getFactory().replaceList(results, list);
+	}
+
 	private static IStrategoList mapIgnoreAnnos(Context context, IStrategoTerm head2, IStrategoList list, Strategy s) {
 		IStrategoTerm[] items = list.getAllSubterms();
+		assert (items[0] = null) == null && list.head() != null : "List implementation must not expose internal array";
 		items[0] = head2;
-		assert list.head() != null : "List implementation must not expose internal array";
 		for (int i = 1; i < items.length; i++) {
 			IStrategoTerm item = items[i];
 			IStrategoTerm item2 = s.invoke(context, item);
@@ -101,11 +120,11 @@
 		IStrategoTerm head2 = s.invoke(context, head);
 		if (head2 == null) {
 			return null;
-		} else if (head2 != head && !head2.match(head)) {
+		} else if (head2 != head) {
 			return mapIgnoreAnnos(context, head2, list, s);
 		} else {
 			IStrategoList tail = list.tail();
-			IStrategoList tail2 = mapMaintainAnnos(context, tail, s);
+			IStrategoList tail2 = mapIgnoreAnnos(context, tail, s);
 			if (tail2 == null) {
 				return null;
 			} else if (tail2 != tail) { // (match() not necessary because of recursion)

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_one.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_one.java	2010-06-21 07:42:08 UTC (rev 21038)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_one.java	2010-06-21 07:43:11 UTC (rev 21039)
@@ -28,7 +28,7 @@
 			IStrategoTerm arg2 = s.invoke(context, arg);
 			if (arg2 != null) {
 				if (arg2 == arg) {
-					results = inputs;
+					return current;
 				} else {
 					results = inputs.clone();
 					results[i] = arg2;
@@ -60,13 +60,13 @@
 				IStrategoList tail2 = fetchMaintainAnnos(context, tail, s);
 				if (tail2 == null) {
 					return null;
-				} else if (tail2 == tail || tail2.match(tail)) {
+				} else if (tail2 == tail) {
 					return current;
 				} else {
 					// TODO: head/tail variation of replaceList?
 					return context.getFactory().makeListCons(head, tail2);
 				}
-			} else if (head2 == head || head2.match(head)) {
+			} else if (head2 == head) {
 				return current;
 			} else {
 				// TODO: head/tail variation of replaceList?

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_some.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_some.java	2010-06-21 07:42:08 UTC (rev 21038)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_some.java	2010-06-21 07:43:11 UTC (rev 21039)
@@ -61,18 +61,18 @@
 				IStrategoList tail2 = map1MaintainAnnos(context, tail, s, foundSome);
 				if (tail2 == null) {
 					return null;
-				} else if (tail2 == tail || tail2.match(tail)) {
+				} else if (tail2 == tail) {
 					return list;
 				} else {
 					// TODO: head/tail variation of replaceList?
 					return context.getFactory().makeListCons(head, tail2);
 				}
-			} else if (head2 == head || head2.match(head)) {
+			} else if (head2 == head) {
 				IStrategoList tail = list.tail();
 				IStrategoList tail2 = map1MaintainAnnos(context, tail, s, true);
 				if (tail2 == null) {
 					return null;
-				} else if (tail2 == tail || tail2.match(tail)) {
+				} else if (tail2 == tail) {
 					return list;
 				} else {
 					// TODO: head/tail variation of replaceList?


From L.C.L.Kats at tudelft.nl  Mon Jun 21 21:06:08 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 21 Jun 2010 19:06:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21040 - LennartKats -
	experimental/meta-amb-suggestions
Message-ID: <201006211906.o5LJ682L006723@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-21 19:06:08 +0000 (Mon, 21 Jun 2010)
New Revision: 21040

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21040&view=rev

Modified:
   experimental/meta-amb-suggestions/compose-grammars.sh

Log:
Note to self: don't create shell scripts using 'echo'

Changes:

Modified: experimental/meta-amb-suggestions/compose-grammars.sh
===================================================================
--- experimental/meta-amb-suggestions/compose-grammars.sh	2010-06-21 07:43:11 UTC (rev 21039)
+++ experimental/meta-amb-suggestions/compose-grammars.sh	2010-06-21 19:06:08 UTC (rev 21040)
@@ -1 +1 @@
-java -cp include/meta_amb_suggestions.jar:/Users/lk/opt/strc-java/share/strc-java/strategoxt.jar run trans.main "$@"
+java -cp `dirname $0`/include/meta_amb_suggestions.jar:`strj-jar -p` run trans.main "$@"


From L.C.L.Kats at tudelft.nl  Tue Jun 22 14:33:03 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 22 Jun 2010 12:33:03 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21041 - LennartKats - in
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp:
	project services
Message-ID: <201006221233.o5MCX36s023694@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-22 12:33:03 +0000 (Tue, 22 Jun 2010)
New Revision: 21041

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21041&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/configure-main-descriptor.str

Log:
Minor fix for when a parameterized sort is used as a start symbol

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-06-21 19:06:08 UTC (rev 21040)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-06-22 12:33:03 UTC (rev 21041)
@@ -126,7 +126,9 @@
             <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite" />
             <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build" />
             <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite" />
+            <!-- Might cause the editor to be reloaded?
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            -->
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/configure-main-descriptor.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/configure-main-descriptor.str	2010-06-21 19:06:08 UTC (rev 21040)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/configure-main-descriptor.str	2010-06-22 12:33:03 UTC (rev 21041)
@@ -27,7 +27,7 @@
     verbose-msg(!"Using main module", get-sdf-main-module);
     
     require-option(
-      where(StartSymbol) <+ rules(StartSymbol := <find-start-symbol>)
+      where(StartSymbol) <+ rules(StartSymbol := <parameterized-sort-to-rtg-sort> <find-start-symbol>)
     | <NoExistingDescriptor < !"Start symbols (-s)" + !"language start symbols">
     );
     


From L.C.L.Kats at tudelft.nl  Tue Jun 22 15:07:55 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 22 Jun 2010 13:07:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21042 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.aster
	org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.pp org.strategoxt.imp.editors.sdf
	org.strategoxt.imp.editors.sdf/lib
	org.strategoxt.imp.editors.stratego
	org.strategoxt.imp.editors.stratego/lib
	org.strategoxt.imp.feature org.strategoxt.imp.updatesite
Message-ID: <201006221307.o5MD7tdi024437@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-22 13:07:55 +0000 (Tue, 22 Jun 2010)
New Revision: 21042

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21042&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Release 0.5.1.92

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-06-22 12:33:03 UTC (rev 21041)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-06-22 13:07:55 UTC (rev 21042)
@@ -55,7 +55,9 @@
             <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
             <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
             <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
-            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <!-- Might cause the editor to be reloaded?
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            -->
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-06-22 12:33:03 UTC (rev 21041)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-06-22 13:07:55 UTC (rev 21042)
@@ -55,7 +55,9 @@
             <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
             <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
             <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
-            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <!-- Might cause the editor to be reloaded?
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            -->
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-06-22 12:33:03 UTC (rev 21041)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-06-22 13:07:55 UTC (rev 21042)
@@ -55,7 +55,9 @@
             <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
             <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
             <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
-            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <!-- Might cause the editor to be reloaded?
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            -->
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	2010-06-22 12:33:03 UTC (rev 21041)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	2010-06-22 13:07:55 UTC (rev 21042)
@@ -55,7 +55,9 @@
             <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
             <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
             <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
-            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <!-- Might cause the editor to be reloaded?
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            -->
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-06-22 12:33:03 UTC (rev 21041)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-06-22 13:07:55 UTC (rev 21042)
@@ -55,7 +55,9 @@
             <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
             <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
             <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
-            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <!-- Might cause the editor to be reloaded?
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            -->
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str	2010-06-22 12:33:03 UTC (rev 21041)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str	2010-06-22 13:07:55 UTC (rev 21042)
@@ -113,6 +113,9 @@
   
   refresh-workspace-file:
     path -> <prim("SSL_EXT_refreshresource", path)>
+  
+  string-starts-with-capital =
+    explode-string; Hd; is-upper
 
 strategies
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-06-22 12:33:03 UTC (rev 21041)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-06-22 13:07:55 UTC (rev 21042)
@@ -55,7 +55,9 @@
             <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
             <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
             <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
-            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <!-- Might cause the editor to be reloaded?
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            -->
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str	2010-06-22 12:33:03 UTC (rev 21041)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str	2010-06-22 13:07:55 UTC (rev 21042)
@@ -113,6 +113,9 @@
   
   refresh-workspace-file:
     path -> <prim("SSL_EXT_refreshresource", path)>
+  
+  string-starts-with-capital =
+    explode-string; Hd; is-upper
 
 strategies
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-22 12:33:03 UTC (rev 21041)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-22 13:07:55 UTC (rev 21042)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.5.1.91"
+      version="0.5.1.92"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-22 12:33:03 UTC (rev 21041)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-22 13:07:55 UTC (rev 21042)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.5.1.91.jar" id="org.strategoxt.imp" version="0.5.1.91">
+   <feature url="features/org.strategoxt.imp_0.5.1.92.jar" id="org.strategoxt.imp" version="0.5.1.92">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">


From L.C.L.Kats at tudelft.nl  Tue Jun 22 15:21:52 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 22 Jun 2010 13:21:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21043 - LennartKats -
	in experimental/meta-amb-suggestions: editor syntax
	test/Stratego-Java-15
Message-ID: <201006221321.o5MDLqVm024555@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-22 13:21:51 +0000 (Tue, 22 Jun 2010)
New Revision: 21043

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21043&view=rev

Added:
   experimental/meta-amb-suggestions/test/Stratego-Java-15/test5.met
   experimental/meta-amb-suggestions/test/Stratego-Java-15/test6.met
   experimental/meta-amb-suggestions/test/Stratego-Java-15/test7.met
Modified:
   experimental/meta-amb-suggestions/editor/Meta-amb-suggestions.main.esv
   experimental/meta-amb-suggestions/syntax/Meta-amb-suggestions.sdf

Log:
some more examples, now including "complex" ambiguities. not handled correctly yet. also changed the start symbol to build with older Spoofax releases.

Changes:

Modified: experimental/meta-amb-suggestions/editor/Meta-amb-suggestions.main.esv
===================================================================
--- experimental/meta-amb-suggestions/editor/Meta-amb-suggestions.main.esv	2010-06-22 13:07:55 UTC (rev 21042)
+++ experimental/meta-amb-suggestions/editor/Meta-amb-suggestions.main.esv	2010-06-22 13:21:51 UTC (rev 21043)
@@ -16,5 +16,5 @@
                   
   extensions    : met
   table         : include/Meta-amb-suggestions.tbl
-  start symbols : Module[[StrategoHost]]
+  start symbols : Module_StrategoHost
   // unmanaged table : Stratego*
\ No newline at end of file

Modified: experimental/meta-amb-suggestions/syntax/Meta-amb-suggestions.sdf
===================================================================
--- experimental/meta-amb-suggestions/syntax/Meta-amb-suggestions.sdf	2010-06-22 13:07:55 UTC (rev 21042)
+++ experimental/meta-amb-suggestions/syntax/Meta-amb-suggestions.sdf	2010-06-22 13:21:51 UTC (rev 21043)
@@ -7,4 +7,5 @@
 
   context-free syntax
   
-    "~" Term[[StrategoHost]] -> ID[[JavaObject]] {cons("FromMetaExpr")}
+    "~" Term[[StrategoHost]] -> ClassMod[[JavaObject]] {cons("FromMetaExpr")}
+    "~" Term[[StrategoHost]] -> ID[[JavaObject]]       {cons("FromMetaExpr")}
\ No newline at end of file

Added: experimental/meta-amb-suggestions/test/Stratego-Java-15/test5.met
===================================================================
--- experimental/meta-amb-suggestions/test/Stratego-Java-15/test5.met	                        (rev 0)
+++ experimental/meta-amb-suggestions/test/Stratego-Java-15/test5.met	2010-06-22 13:21:51 UTC (rev 21043)
@@ -0,0 +1,5 @@
+module foo
+
+rules
+
+  a = !|[ class ~x{} ]|

Added: experimental/meta-amb-suggestions/test/Stratego-Java-15/test6.met
===================================================================
--- experimental/meta-amb-suggestions/test/Stratego-Java-15/test6.met	                        (rev 0)
+++ experimental/meta-amb-suggestions/test/Stratego-Java-15/test6.met	2010-06-22 13:21:51 UTC (rev 21043)
@@ -0,0 +1,4 @@
+module foo
+
+rules
+  a = !compilation-unit |[ ~x class X{} ]|
\ No newline at end of file

Added: experimental/meta-amb-suggestions/test/Stratego-Java-15/test7.met
===================================================================
--- experimental/meta-amb-suggestions/test/Stratego-Java-15/test7.met	                        (rev 0)
+++ experimental/meta-amb-suggestions/test/Stratego-Java-15/test7.met	2010-06-22 13:21:51 UTC (rev 21043)
@@ -0,0 +1,4 @@
+module foo
+
+rules
+  a = !compilation-unit |[ ~x ~y class X{} ]|
\ No newline at end of file


From karltk at strategoxt.org  Thu Jun 24 22:32:13 2010
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Thu, 24 Jun 2010 20:32:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21044 - karltk -
	experimental/meta-amb-suggestions/trans/cli
Message-ID: <201006242032.o5OKWDDD016242@proliant.st.ewi.tudelft.nl>

Author: karltk
Date: 2010-06-24 20:32:13 +0000 (Thu, 24 Jun 2010)
New Revision: 21044

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21044&view=rev

Modified:
   experimental/meta-amb-suggestions/trans/cli/compose-grammars.str

Log:
Refined which context-free sorts should be included. Tested with Stratego+Java+WebDSL embedding. Seems to work.

Changes:

Modified: experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
===================================================================
--- experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-22 13:21:51 UTC (rev 21043)
+++ experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-24 20:32:13 UTC (rev 21044)
@@ -33,6 +33,9 @@
  * # pack-sdf -i Stratego-Java15.sdf -I . -I ~/.nix-profile/share/sdf/stratego-front -I ~/.nix-profile/share/java-front-syntax -o Stratego-Java15.def
  * # sdf2table -i Stratego-Java15.def -o Stratego-Java15.tbl -m Stratego-Java15
  * # sglri -p Stratego-Java15.tbl -i test/Stratego-Java-15/test4.met
+ *
+ * # pack-sdf -i Stratego-Java15-HQL.sdf -I ~/.nix-profile/share/java-front-syntax -Idef ~/.nix-profile/share/sdf/webdsl/HQL.def -o Stratego-Java15-HQL.def
+ * # sdf2table -i Stratego-Java15-HQL.def -o Stratego-Java15-HQL.tbl -m Stratego-Java15-HQL
  */	
  
 signature
@@ -253,6 +256,7 @@
 >
 	with
 		  <collect-context-free-sorts> grammar
+		; where(<echo> $[sorts to quote/anti-quote: [<length>]])
 		; map(make-quot-anti-quot(|guest-lower, guest-camel))
 		; ?embeddings* 
 		
@@ -293,18 +297,46 @@
    "~"                           E -$>$ Expr {cons("FromMetaExpr")}
    "~" "<name>" ":"              E -$>$ Expr {cons("FromMetaExpr")}
    "~" "<lang>" ":" "<name>" ":" E -$>$ Expr {cons("FromMetaExpr")}
+        >
+//   "$[" E "]"                            -$>$ Expr {cons("FromMetaExpr")}
+//   "$[" "<name>" ":" E "]"               -$>$ Expr {cons("FromMetaExpr")}
+//   "$[" "<lang>" ":" "<name>" ":" E "]"  -$>$ Expr {cons("FromMetaExpr")}
 
-   "$[" E "]"                            -$>$ Expr {cons("FromMetaExpr")}
-   "$[" "<name>" ":" E "]"               -$>$ Expr {cons("FromMetaExpr")}
-   "$[" "<lang>" ":" "<name>" ":" E "]"  -$>$ Expr {cons("FromMetaExpr")}
-
-   "#[" E "]"                            -$>$ Expr {cons("FromMetaExpr")}
-   "~[" E "]"                            -$>$ Expr {cons("FromMetaExpr")}
-		>
+//   "#[" E "]"                            -$>$ Expr {cons("FromMetaExpr")}
+//   "~[" E "]"                            -$>$ Expr {cons("FromMetaExpr")}
+//		>
 		
 		
 	collect-context-free-sorts =
-		collect-all(?sort(_), union, \ lexical-syntax(_) -> () \ + \ lexical-restrictions(_) -> () \) 
+		with(
+		  cfs* := <collect(?context-free-syntax(_))>
+		; defined := <collect-defined-cf-sorts> cfs*
+		; superceded := <collect-superceded-cf-sorts> cfs*
+		; referenced := <collect-referenced-cf-sorts> cfs*
+		)
+		; <echo> $[context-free sorts defined: [<length> defined] ]
+		; <echo> $[superceded through injections: [<length> superceded]]
+		; <echo> $[sorts referenced on the lhs of cf prods: [<length> referenced]]
+		; <diff> (defined, superceded)
+		; <union> (<id>, referenced)
+	
+	collect-referenced-cf-sorts =
+		  map(collect-all(?sort(_), 
+		  			 union, 
+				     \prod([_], _, _) -> () \ 
+				  <+ \prod(a, _, _) -> a\))
+		; concat 
+		; make-set
+	
+	collect-defined-cf-sorts =
+		  map(collect(\ prod(_, x at sort(_), _) -> x \))
+		; concat
+		; make-set
+		
+	collect-superceded-cf-sorts =
+		  map(collect(\ prod([sort(_)], x at sort(_), _) -> x\))
+		; concat
+		; make-set 
 
 	collect-all-sorts =
 		collect-all(?sort(_)) 
@@ -321,3 +353,13 @@
 			 
     string-join(|c) = <foldl(\(x,y) -> <concat-strings> [y, c, x]\)> (<Tl>, <Hd>)
   
+
+// TODO:
+// - defined: on rhs in a context-free section
+// - superceded: "replaced" by an injection
+// - referenced: on lhs in a non-injection prod
+// - wanted = defined - superceded + referenced
+// - reachability of context-free sorts
+// - only generate template for context-free sorts -- improve sort detection
+// - don't generate for injections Y, e.g. X -> Y
+


From L.C.L.Kats at tudelft.nl  Fri Jun 25 11:48:25 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 25 Jun 2010 09:48:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21045 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.stratego
	org.strategoxt.imp.editors.stratego/lib org.strategoxt.imp.feature
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
	org.strategoxt.imp.updatesite
Message-ID: <201006250948.o5P9mQVY001163@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-25 09:48:25 +0000 (Fri, 25 Jun 2010)
New Revision: 21045

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21045&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/FileCopier.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Spoofax/166: Copy jar files to a temporary location to avoid class loader instability

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-06-24 20:32:13 UTC (rev 21044)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-06-25 09:48:25 UTC (rev 21045)
@@ -55,9 +55,7 @@
             <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
             <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
             <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
-            <!-- Might cause the editor to be reloaded?
-            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
-            -->
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-06-24 20:32:13 UTC (rev 21044)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-06-25 09:48:25 UTC (rev 21045)
@@ -55,9 +55,7 @@
             <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
             <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
             <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
-            <!-- Might cause the editor to be reloaded?
-            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
-            -->
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str	2010-06-24 20:32:13 UTC (rev 21044)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str	2010-06-25 09:48:25 UTC (rev 21045)
@@ -113,9 +113,6 @@
   
   refresh-workspace-file:
     path -> <prim("SSL_EXT_refreshresource", path)>
-  
-  string-starts-with-capital =
-    explode-string; Hd; is-upper
 
 strategies
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-24 20:32:13 UTC (rev 21044)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-06-25 09:48:25 UTC (rev 21045)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.5.1.92"
+      version="0.5.1.93"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/FileCopier.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/FileCopier.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/FileCopier.java	2010-06-25 09:48:25 UTC (rev 21045)
@@ -0,0 +1,38 @@
+package org.strategoxt.imp.runtime.services;
+
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.IOException;
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+class FileCopier {
+	final byte[] buffer = new byte[4096];
+
+	public void copyFile(File in, File out) throws IOException {
+		FileInputStream inStream = null;
+		FileOutputStream outStream = null;
+		try {
+			inStream = new FileInputStream(in);
+			outStream = new FileOutputStream(out);
+			int i = 0;
+			while ((i = inStream.read(buffer)) != -1) {
+				outStream.write(buffer, 0, i);
+			}
+		} finally {
+			if (inStream != null)
+				inStream.close();
+			if (outStream != null)
+				outStream.close();
+		}
+	}
+	
+	public File copyToTempFile(File file) throws IOException {
+		File result = File.createTempFile(file.getName() + "-", ".jar");
+		copyFile(file, result);
+		return result;
+	}
+
+}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-24 20:32:13 UTC (rev 21044)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-25 09:48:25 UTC (rev 21045)
@@ -86,6 +86,8 @@
 	
 	private final Lock observerSchedulerLock = new SWTSafeLock(true);
 	
+	private final FileCopier fileCopier = new FileCopier();
+	
 	private HybridInterpreter runtime;
 	
 	private volatile Descriptor descriptor;
@@ -218,7 +220,9 @@
 			Debug.startTimer("Loading Stratego modules " + jars);
 			URL[] classpath = new URL[jars.size()];
 			for (int i = 0; i < classpath.length; i++) {
-				classpath[i] = descriptor.getBasePath().append(jars.get(i)).toFile().toURI().toURL();
+				File file = descriptor.getBasePath().append(jars.get(i)).toFile();
+				file = fileCopier.copyToTempFile(file);
+				classpath[i] = file.toURI().toURL();
 			}
 			runtime.loadJars(classpath);
 			Debug.stopTimer("Successfully loaded " + jars);

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-24 20:32:13 UTC (rev 21044)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-06-25 09:48:25 UTC (rev 21045)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.5.1.92.jar" id="org.strategoxt.imp" version="0.5.1.92">
+   <feature url="features/org.strategoxt.imp_0.5.1.93.jar" id="org.strategoxt.imp" version="0.5.1.93">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">


From L.C.L.Kats at tudelft.nl  Fri Jun 25 13:55:54 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 25 Jun 2010 11:55:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21046 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <201006251155.o5PBtsfq005666@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-25 11:55:54 +0000 (Fri, 25 Jun 2010)
New Revision: 21046

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21046&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java

Log:


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-25 09:48:25 UTC (rev 21045)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-06-25 11:55:54 UTC (rev 21046)
@@ -221,7 +221,8 @@
 			URL[] classpath = new URL[jars.size()];
 			for (int i = 0; i < classpath.length; i++) {
 				File file = descriptor.getBasePath().append(jars.get(i)).toFile();
-				file = fileCopier.copyToTempFile(file);
+				if (descriptor.isDynamicallyLoaded())
+					file = fileCopier.copyToTempFile(file);
 				classpath[i] = file.toURI().toURL();
 			}
 			runtime.loadJars(classpath);
@@ -642,7 +643,8 @@
 			for (IStrategoTerm subterm : term.getAllSubterms()) {
 				if (subterm instanceof IWrappedAstNode) {
 					Environment.logWarning("Resolved reference is not associated with an AST node " + term + " used child " + subterm + "instead");
-					return ((IWrappedAstNode) subterm).getNode();
+					IStrategoAstNode result = ((IWrappedAstNode) subterm).getNode();
+					return result.getParent() != null ? result.getParent() : result;
 				}
 			}
 		}


From L.C.L.Kats at tudelft.nl  Sun Jun 27 16:29:22 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sun, 27 Jun 2010 14:29:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21047 - LennartKats -
	in experimental/meta-amb-suggestions: . lib syntax trans trans/cli
Message-ID: <201006271429.o5RETMHa025898@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-27 14:29:21 +0000 (Sun, 27 Jun 2010)
New Revision: 21047

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21047&view=rev

Modified:
   experimental/meta-amb-suggestions/build.generated.xml
   experimental/meta-amb-suggestions/lib/editor-common.generated.str
   experimental/meta-amb-suggestions/syntax/Meta-amb-suggestions.sdf
   experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
   experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str

Log:
Revised suggestions algorithm that relies on constructors like ToMetaExprTagged to work optimally

Changes:

Modified: experimental/meta-amb-suggestions/build.generated.xml
===================================================================
--- experimental/meta-amb-suggestions/build.generated.xml	2010-06-25 11:55:54 UTC (rev 21046)
+++ experimental/meta-amb-suggestions/build.generated.xml	2010-06-27 14:29:21 UTC (rev 21047)
@@ -21,6 +21,9 @@
         <condition property="externaljarflags" value="${externaljarflags}" else="">
             <isset property="externaljarflags"/>
         </condition>
+        <condition property="metasdfmodule.available" value="1">
+            <available file="${syntax}/${metasdfmodule}.sdf"/>
+        </condition>
         <mkdir dir="${build}"/>
         <mkdir dir="${src-gen}"/>
         <mkdir dir="${dist}"/>
@@ -52,7 +55,7 @@
             <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
             <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
             <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
-            <!-- Causes the editor to be reloaded
+            <!-- Might cause the editor to be reloaded?
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
             -->
         </target>
@@ -80,7 +83,7 @@
             </apply>
         </target>
         
-        <target name="meta-sdf2table">
+        <target name="meta-sdf2table" if="metasdfmodule.available">
             <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
             <antcall target="sdf2table">
                 <param name="sdfmodule" value="${metasdfmodule}"/>
@@ -127,6 +130,9 @@
         </target>
     
         <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <condition property="utils-include" value="-I ${utils}" else="">
+                <available file="${utils}"/>
+            </condition>
             <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-pack-sdf"/>
                 <arg value="-i"/>
@@ -136,9 +142,8 @@
                 <arg value="-I"/>
                 <arg value="${syntax}"/>
                 <arg value="-I"/>
-                <arg value="${utils}"/>
-                <arg value="-I"/>
                 <arg value="${lib}"/>
+                <arg line="${utils-include}"/>
                 <arg line="${build.sdf.imports}"/>
             </java>
         </target>
@@ -309,7 +314,7 @@
         </target>
     
         <!-- Stratego to Java compiler -->
-        <target name="stratego.jar" depends="rtg2sig">
+        <target name="stratego.jar" depends="rtg2sig,utils-files">
             <dependset>
                 <srcfileset dir="${basedir}">
                     <include name="**/*.str"/>

Modified: experimental/meta-amb-suggestions/lib/editor-common.generated.str
===================================================================
--- experimental/meta-amb-suggestions/lib/editor-common.generated.str	2010-06-25 11:55:54 UTC (rev 21046)
+++ experimental/meta-amb-suggestions/lib/editor-common.generated.str	2010-06-27 14:29:21 UTC (rev 21047)
@@ -113,6 +113,9 @@
   
   refresh-workspace-file:
     path -> <prim("SSL_EXT_refreshresource", path)>
+  
+  string-starts-with-capital =
+    explode-string; Hd; is-upper
 
 strategies
   

Modified: experimental/meta-amb-suggestions/syntax/Meta-amb-suggestions.sdf
===================================================================
--- experimental/meta-amb-suggestions/syntax/Meta-amb-suggestions.sdf	2010-06-25 11:55:54 UTC (rev 21046)
+++ experimental/meta-amb-suggestions/syntax/Meta-amb-suggestions.sdf	2010-06-27 14:29:21 UTC (rev 21047)
@@ -7,5 +7,6 @@
 
   context-free syntax
   
-    "~" Term[[StrategoHost]] -> ClassMod[[JavaObject]] {cons("FromMetaExpr")}
-    "~" Term[[StrategoHost]] -> ID[[JavaObject]]       {cons("FromMetaExpr")}
\ No newline at end of file
+    "~"          Term[[StrategoHost]] -> ClassMod[[JavaObject]] {cons("FromMetaExpr")}
+    "~classmod:" Term[[StrategoHost]] -> ClassMod[[JavaObject]] {cons("FromMetaExprTagged")}
+    "~"          Term[[StrategoHost]] -> ID[[JavaObject]]       {cons("FromMetaExpr")}
\ No newline at end of file

Modified: experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
===================================================================
--- experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-25 11:55:54 UTC (rev 21046)
+++ experimental/meta-amb-suggestions/trans/cli/compose-grammars.str	2010-06-27 14:29:21 UTC (rev 21047)
@@ -283,21 +283,23 @@
 		; ?mix*
 
 
+  // TODO: only include ~<name>* if <name>* actually exists in an lhs?
+  // TODO: include anti-qotations for itersep, iterplus, etc.
 	make-quot-anti-quot(|lang, camel):
 		sort(name) -> $<
    %% <lang> : <name>
-                          "|[" <name> "]|" -$>$ E {cons("ToMetaExpr")}
-   "<name>"               "|[" <name> "]|" -$>$ E {cons("ToMetaExpr")}
-   "<lang>" ":" "<name>"  "|[" <name> "]|" -$>$ E {cons("ToMetaExpr")}
+                    "|[" <name> "]|" -$>$ E {cons("ToMetaExpr")}
+   "<name>"         "|[" <name> "]|" -$>$ E {cons("ToMetaExprTagged1")}
+   "<lang>:<name>"  "|[" <name> "]|" -$>$ E {cons("ToMetaExprTagged2")}
 
-   "*"                    "|[" <name>* "]|" -$>$ E {cons("ToMetaExpr")}
-   "<name>*"              "|[" <name>* "]|" -$>$ E {cons("ToMetaExpr")}
-   "<lang>" ":" "<name>*" "|[" <name>* "]|" -$>$ E {cons("ToMetaExpr")}
+   "*"              "|[" <name>* "]|" -$>$ E {cons("ToMetaExpr")}
+   "<name>*"        "|[" <name>* "]|" -$>$ E {cons("ToMetaExprTagged1")}
+   "<lang>:<name>*" "|[" <name>* "]|" -$>$ E {cons("ToMetaExprTagged2")}
 
-   "~"                           E -$>$ Expr {cons("FromMetaExpr")}
-   "~" "<name>" ":"              E -$>$ Expr {cons("FromMetaExpr")}
-   "~" "<lang>" ":" "<name>" ":" E -$>$ Expr {cons("FromMetaExpr")}
+   "~"        E                       -$>$ Expr {cons("FromMetaExpr")}
+   "~<name>:" E                       -$>$ Expr {cons("FromMetaExprTagged")}
         >
+//   "~" "<lang>" ":" "<name>" ":" E -$>$ Expr {cons("FromMetaExpr")}
 //   "$[" E "]"                            -$>$ Expr {cons("FromMetaExpr")}
 //   "$[" "<name>" ":" E "]"               -$>$ Expr {cons("FromMetaExpr")}
 //   "$[" "<lang>" ":" "<name>" ":" E "]"  -$>$ Expr {cons("FromMetaExpr")}

Modified: experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str
===================================================================
--- experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str	2010-06-25 11:55:54 UTC (rev 21046)
+++ experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str	2010-06-27 14:29:21 UTC (rev 21047)
@@ -16,10 +16,13 @@
 
 overlays
   
-  TO_META        = "ToMetaExpr"
-  TO_META_LIST   = "ToMetaListExpr"
-  FROM_META      = "FromMetaExpr"
-  FROM_META_LIST = "FromMetaListExpr"
+  TO_META          = "ToMetaExpr"
+  TO_META_LIST     = "ToMetaListExpr"
+  TO_META_TAGGED1  = "ToMetaExprTagged1"
+  TO_META_TAGGED2  = "ToMetaExprTagged2"
+  FROM_META        = "FromMetaExpr"
+  FROM_META_LIST   = "FromMetaListExpr"
+  FROM_META_TAGGED = "FromMetaExprTagged"
 
 rules
   
@@ -57,6 +60,10 @@
       | "Suggestions provided", 0
       )
   
+  if-compat-mode(s) =
+    // TODO: disable untagged constructor compatibility mode by default
+    s
+  
   generate-aterm:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
@@ -85,17 +92,17 @@
       <alltd(register-prod(|table-name))> labels
    
   register-prod(|table-name):
-    prod @ prod(lhs, sort2, attrs(a*)) -> <id>
+    prod @ prod(_, sort2, attrs(a*)) -> <id>
     where
       cons  := <fetch-cons> a*;
       switch !cons
-        case TO_META + TO_META_LIST:
-          sort1 := <fetch-meta-expr-contents> lhs;
+        case TO_META_TAGGED1 + TO_META_TAGGED2 + if-compat-mode(TO_META + TO_META_LIST):
+          with(sort1 := <fetch-meta-expr-sort> prod);
           rules(
             ToMetaExprs   :+ (table-name, sort1, sort2) -> prod
           )
-        case FROM_META + FROM_META_LIST:
-          sort1 := <fetch-meta-expr-contents> lhs;
+        case FROM_META_TAGGED + if-compat-mode(FROM_META + FROM_META_LIST):
+          with(sort1 := <fetch-meta-expr-sort> prod);
           rules(
             FromMetaExprs :+ (table-name, sort1, sort2) -> prod
           )
@@ -125,41 +132,22 @@
   resolve-ambs:
     amb @ amb(a*) -> amb'
     with
-      if <one(is-meta-expr-branch)> a* then
-        if LanguageContext => <IN_BUILD + IN_META_BUILD>;
-           <is-runtime-decidable-build-amb> amb then
-          say(!"Would be run-time decidable");
-          if <all(is-to-meta-expr-branch)> a* then
-            // Fixing the amb in e.g. |[ class x ]| would be better for performance
-            rules(AmbWarnings :+= (amb, <amb-suggestions> amb))
-          end;
-          amb' := amb;
-          // TODO: amb' := <to-runtime-resolved-amb> amb
-          // for now, I'm treating this just as any other error
-          rules(AmbErrors :+= (amb, <amb-suggestions> amb))
-        else
-          rules(AmbErrors :+= (amb, <amb-suggestions> amb));
-          amb' := amb
-        end
+      if LanguageContext => <IN_BUILD + IN_META_BUILD>; <is-runtime-decidable-build-amb> amb then
+        say(!"Would be run-time decidable");
+        if <all(is-to-meta-expr-branch)> a* then
+          // Fixing the amb in e.g. |[ class x ]| would be better for performance
+          rules(AmbWarnings :+= (amb, <amb-suggestions> amb))
+        end;
+        amb' := amb;
+        // TODO: amb' := <to-runtime-resolved-amb> amb
+        // for now, I'm treating this just as any other error
+        rules(AmbErrors :+= (amb, <amb-suggestions> amb))
       else
-        // Not a meta-expr ambiguity
-        warn(|"Could not resolve ambiguity");
+        rules(AmbErrors :+= (amb, <amb-suggestions> amb));
         amb' := amb
       end
 
   /**
-   * Tests if an ambiguous branch is a *Meta*Expr.
-   */
-  is-meta-expr-branch:
-    appl(prod(_, _, attrs), kid*) -> <id>
-    where
-      attrs(a*) := attrs;
-      <fetch-cons> a* => <TO_META + FROM_META +
-                          TO_META_LIST + FROM_META_LIST>
-    <+
-      one(<is-meta-expr-branch> kid*)
-
-  /**
    * Tests if an ambiguous branch has a ToMeta*Expr.
    */
   is-to-meta-expr-branch:
@@ -167,8 +155,8 @@
     where
       if attrs(a*) := attrs; fetch-cons => cons then
         switch !cons
-          case TO_META + TO_META_LIST: id
-          case FROM_META + FROM_META_LIST: fail
+          case TO_META+ TO_META_LIST + TO_META_TAGGED1: id
+          case FROM_META + FROM_META_LIST + FROM_META_TAGGED: fail
           otherwise: one(<is-to-meta-expr-branch> kid*)
         end
       else
@@ -178,103 +166,113 @@
   is-runtime-decidable-build-amb:
     amb(a*) -> <id>
     where
-      all-bodies := <collect-all(appl(is-to-meta-expr-prod, id))>;
+      all-bodies := <collect(appl(is-to-meta-expr-taggable-prod, id))>;
       map(?body);
       // TODO: test if possible constructors of 'body' do not collide with constructors of a*
       <eq> (a*, <make-set> a*)
 
-  is-to-meta-expr-prod:
+  is-to-meta-expr-taggable-prod:
     prod(_, _, attrs(a*)) -> <id>
     where
       <fetch-cons> a* => <TO_META + TO_META_LIST>
 
-  is-meta-expr-prod:
+  is-meta-expr-taggable-prod:
     prod(_, _, attrs(a*)) -> <id>
     where
-      <fetch-cons> a* => <TO_META + TO_META_LIST +
-                          FROM_META + FROM_META_LIST>
+      <fetch-cons> a* => <TO_META + TO_META_LIST + TO_META_TAGGED1 + FROM_META + FROM_META_LIST>
 
+  is-meta-expr-tagged-prod:
+    prod(_, _, attrs(a*)) -> <id>
+    where
+      <fetch-cons> a* => <TO_META_TAGGED1 + TO_META_TAGGED2 + FROM_META_TAGGED>
+
   amb-suggestions:
-    amb(a*) -> suggestion'*
+    amb(a*) -> suggestion''*
     with
-      current        := <collect-one(where(appl(is-meta-expr-prod, id)))>;
-      current-string := <normalize-layout; asfix-yield-appl-chars'; implode-string> current;
-      debug(!"  current: "); 
-      quoted         := <fetch-meta-expr-contents> current;
-      quoted-string  := <asfix-yield-appl-chars'; implode-string> quoted;
-      debug(!"  quoted:  "); 
-      quotes         := <map(amb-suggestion-parts)> a*;
-      debug(!"  quotes:  ");
-      quotes'        := <remove-duplicated> <concat> quotes;
-      debug(!"  quotes': ");
-      suggestion*    := <map(quote-suggestion(|quoted-string))> quotes';
-      suggestion'*   := <filter(not(?current-string))> suggestion*;
-      debug(!"  suggest: ")
+    	suggestion*   := <filter(amb-suggestions-branch); concat> a*;
+    	// FIXME: remove-duplicate should use amb-suggestions-expr's contents variable
+    	suggestion'*  := <debug(!4); filter-amb-suggestions; debug(!5)> <make-set> suggestion*;
+    	suggestion''* := <map(\(s, _) -> s\)> suggestion'* 
   
-  asfix-yield-appl-chars':
-    x -> x'
+  amb-suggestions-branch:
+  	branch @ appl(prod, _) -> suggestion*
+  	with
+  	  if <is-meta-expr-taggable-prod> prod then
+  	    suggestion* := <amb-suggestions-expr> branch
+  	  else
+  	    expr*       := <collect-all(appl(is-meta-expr-taggable-prod, id))>;
+  	    suggestion* := <concat> <filter(amb-suggestions-expr)> expr*
+  	  end
+  
+  amb-suggestions-expr:
+    expr -> suggestion''*
     with
-      x' := <asfix-yield-appl-chars> x
+      debug(!1);
+    	!expr => appl(prod @ prod(_, rsort, attrs(a*)), _);
+      body  := <fetch-meta-expr-body> expr;
+    	lsort := <fetch-meta-expr-sort> expr;
+    	switch <fetch-cons> a*
+    	  case TO_META + TO_META_LIST + TO_META_TAGGED1:
+          suggestion*  := <debug(!2); bagof-ToMetaExprs; debug(!3)> (<CurrentTable>, lsort, rsort);
+          suggestion'* := <filter(!(<amb-suggestions-prod>, lsort))> suggestion*
+    	  case FROM_META + FROM_META_LIST:
+          suggestion* := <debug(!2); bagof-FromMetaExprs; debug(!3)> (<CurrentTable>, lsort, rsort);
+          suggestion'* := <filter(!(<amb-suggestions-prod>, lsort))> suggestion*
+        otherwise:
+          fatal-err(|"Internal error - illegal state")
+    	end;
+      current := <debug(!"a"); amb-suggestions-prod> prod;
+      debug(!"b");
+      suggestion''* := <debug(!"c"); filter(not(?(current, _)))> suggestion'*
+
+  amb-suggestions-prod:
+    prod(lhs, _, _) -> (prefix', postfix')
+    where
+      (prefix, postfix)   := <split-at(is-prod-sort)> lhs;
+      (prefix', postfix') := <all(lits-to-string)>
+    <+
+      warn(|"Could create suggestion for production")
   
-  quote-suggestion(|quoted-string):
-  	(prefix, postfix) -> result
-  	with
-  	  result := $[[prefix][quoted-string][postfix]]
-  
   /**
-  Fetch the contents of a meta expr production lhs.
-   * Given an appl for ~x:y, returns y.
+   * Fetch the lhs body of a meta expr production.
+   * Given an appl for ~x:y, returns the appl for y.
    */
-  fetch-meta-expr-contents:
+  fetch-meta-expr-body:
     appl(_, child*) -> child
     with
       child := <getfirst(appl(prod(id, cf(is-prod-sort), id), id))> child*
-  
-  /**
-   * Fetch the contents of a meta expr production lhs.
+
+  /*
+   * Fetch the sort of the lhs body of a meta expr production.
    * Given a prod "~x:" Y -> Z, returns Y.
    */
-  fetch-meta-expr-contents =
-    getfirst(oncetd(is-prod-sort))
-  
-  /**
-   * Given an appl, gives matching quotation prefixes and postfixes.
-   */
-  amb-suggestion-parts:
-    appl(prod @ prod(lhs, sort2, attrs(a*)), _) -> suggestion-part*
+  fetch-meta-expr-sort:
+    prod(child*, _, _) -> child
     with
-      sort1 := <fetch-meta-expr-contents> lhs;
-      switch <fetch-cons> a*
-        case TO_META + TO_META_LIST:
-          quotation-prod*  := <bagof-ToMetaExprs> (<CurrentTable>, sort1, sort2);
-          suggestion-part* := <filter(amb-suggestion-parts-prod)> quotation-prod*
-        case FROM_META + FROM_META_LIST:
-          quotation-prod*  := <bagof-FromMetaExprs> (<CurrentTable>, sort1, sort2);
-          suggestion-part* := <filter(amb-suggestion-parts-prod)> quotation-prod*
-        otherwise:
-          // TODO: handle injected/complex meta exprs?
-          <warn(|"Ignored branch of ambiguity")> prod;
-          suggestion-part* := []
-      end
+      child := <getfirst(is-prod-sort)> child*
   
-  amb-suggestion-parts-prod:
-    prod(lhs, _, _) -> (prefix', postfix')
-    where
-      (prefix, postfix)   := <split-at(is-prod-sort)> lhs;
-      (prefix', postfix') := <all(lits-to-string)>
-    <+
-      warn(|"Could create suggestion for production")
+  fetch-meta-expr-sort:
+    appl(prod, _) -> <fetch-meta-expr-sort> prod
   
   lits-to-string =
     filter(?lit(<id>)); concat-strings
   
-  normalize-layout:
-    appl(prod, child*) -> appl(prod, child'*)
+  filter-amb-suggestions:
+    [s @ (quotes, _) | s*] -> s'*
     with
-      // TODO: if IsStratego, then normalize layout to inner spaces around quoted text
-      //       (and do the same for generated suggestions)
-      child'* := <filter(not(?appl(prod(_, cf(opt(layout())), _), _)))> child*
+      debug(!7);
+      filtered-s* := <filter(not(?(quotes, _)))> s*;
+      if !filtered-s* => s* then
+        debug(!8);
+        s'* := [s | <filter-amb-suggestions> s*]
+      else
+        debug(!9);
+        s'* := <filter-amb-suggestions> filtered-s*
+      end
   
+  filter-amb-suggestions:
+    [] -> []
+  
 rules // General helpers
   
   fetch-cons = getfirst(?term(cons(<id>)))
@@ -285,14 +283,15 @@
       try(
         ?iter-star(<id>) + ?iter-star-sep(<id>, _)
       + ?iter(<id>) + ?iter-sep(<id>, _)
+      + ?opt(<id>)
       );
       (?sort(_) + ?parameterized-sort(_, _))
     )
   
-  /**
+  /*
    * Removes all items of a list that occur in the list more than once.
    * e.g. [1,1,2,3] -> [2,3]
-   */
+   *
   remove-duplicated:
     [x | x*] -> x'*
     where
@@ -304,4 +303,5 @@
       end
   
   remove-duplicated:
-    [] -> []
\ No newline at end of file
+    [] -> []
+    */
\ No newline at end of file


From L.C.L.Kats at tudelft.nl  Sun Jun 27 17:43:47 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sun, 27 Jun 2010 15:43:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21048 - LennartKats -
	experimental/meta-amb-suggestions/trans
Message-ID: <201006271543.o5RFhlJX026481@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-27 15:43:47 +0000 (Sun, 27 Jun 2010)
New Revision: 21048

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21048&view=rev

Modified:
   experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str

Log:
tweaked builder output readability

Changes:

Modified: experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str
===================================================================
--- experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str	2010-06-27 14:29:21 UTC (rev 21047)
+++ experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str	2010-06-27 15:43:47 UTC (rev 21048)
@@ -56,7 +56,7 @@
         CurrentTable    := "Stratego-Java-15"
       );
       log-timed(
-        suggestion* := <resolve-ambs-top>
+        suggestion*  := <resolve-ambs-top>; debug(!"99")
       | "Suggestions provided", 0
       )
   
@@ -77,8 +77,10 @@
       editor-init;
       filename                 := <guarantee-extension(|"suggestions.aterm")> path;
       (tree, errors, warnings) := <meta_amb_suggestions> FILE($[[project-path]/[path]]);
-      result                   := (errors, warnings)
+      result                   := <yield-trees> (errors, warnings)
   
+  yield-trees = alltd(\appl(prod, _) -> appl(prod, <asfix-yield-appl>)\)
+  
 rules // Parse table registration
   
   register-table(|table-name):


From m.dejonge at tudelft.nl  Mon Jun 28 12:51:47 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 28 Jun 2010 10:51:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21049 - MaartjeDeJonge
	- /
Message-ID: <201006281051.o5SAplsR006194@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2010-06-28 10:51:45 +0000 (Mon, 28 Jun 2010)
New Revision: 21049

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21049&view=rev

Added:
   Refactoring/

Log:
Share project "LayoutAlgorithm" into "https://svn.strategoxt.org/repos/StrategoXT"

Changes:


From m.dejonge at tudelft.nl  Mon Jun 28 13:00:11 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 28 Jun 2010 11:00:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21050 - MaartjeDeJonge
	- in Refactoring: . lib-reconstruction lib-refactoring
Message-ID: <201006281100.o5SB0B2f006419@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2010-06-28 11:00:07 +0000 (Mon, 28 Jun 2010)
New Revision: 21050

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21050&view=rev

Added:
   Refactoring/lib-reconstruction/
   Refactoring/lib-reconstruction/custom-pp-rules.str
   Refactoring/lib-reconstruction/diff-ast.str
   Refactoring/lib-reconstruction/primitives.str
   Refactoring/lib-reconstruction/text-construct.str
   Refactoring/lib-refactoring/
   Refactoring/lib-refactoring/primitives.str
   Refactoring/lib-refactoring/refactoring-position-helpers.str
   Refactoring/lib-refactoring/refactoring-transformation-helpers.str

Log:
initial import
Code passes the proof of concept phase 
but it must be cleaned and tested,
and made usable to others

Changes:

Added: Refactoring/lib-reconstruction/custom-pp-rules.str
===================================================================
--- Refactoring/lib-reconstruction/custom-pp-rules.str	                        (rev 0)
+++ Refactoring/lib-reconstruction/custom-pp-rules.str	2010-06-28 11:00:07 UTC (rev 21050)
@@ -0,0 +1,42 @@
+module lib-reconstruction/custom-pp-rules
+
+imports
+	libstratego-lib
+	libstratego-gpp
+	lib-reconstruction/text-construct
+	include/LayoutAlgorithm
+
+  
+rules
+	
+pretty-print=
+	custom-pp <+
+	default-pp
+
+default-pp:
+	t -> <
+			(
+				ast2abox(|[<import-term(include/LayoutAlgorithm.pp.af)>]); 
+				(box2text-string(|80))
+			)<+ 
+			write-to-string
+		 > t
+
+custom-pp=fail
+custom-interpolation=fail
+
+custom-pp:
+	t -> <
+			(
+				ast2abox(|[<import-term(include/RefactoringLibs.custom.pp.af)>]); 
+				(box2text-string(|80))
+			)<+ 
+			write-to-string
+		 > t
+
+custom-interpolation:
+	Entity(x, props) ->
+    $[ entity [x] {
+           [props]
+       }
+     ]
\ No newline at end of file

Added: Refactoring/lib-reconstruction/diff-ast.str
===================================================================
--- Refactoring/lib-reconstruction/diff-ast.str	                        (rev 0)
+++ Refactoring/lib-reconstruction/diff-ast.str	2010-06-28 11:00:07 UTC (rev 21050)
@@ -0,0 +1,105 @@
+module lib-reconstruction/diff-ast
+
+imports
+  libstratego-lib
+  lib-reconstruction/primitives
+  lib/editor-common.generated  
+
+//signatures for AST changes
+signature constructors
+	INSERT_AT_END : OldList * NewSubList -> AST_CHANGE
+	INSERT_BEFORE : OldNode * NewSubList -> AST_CHANGE
+	DETETION : OldNode -> AST_CHANGE
+	REPLACEMENT : OldNode * NewNode -> AST_CHANGE
+
+rules //collecting changes in textfragments
+
+collect-changes=
+	collect-no-changes  <+
+	collect-changes-in-children <+
+	collect-changes-in-list <+
+	collect-replaced-node
+		
+collect-no-changes:
+	(old-node, new-node) -> []
+	where
+		<eq>(old-node, new-node)
+
+collect-changes-in-children:
+	(old-node, new-node) -> change-list
+	where
+		(<eq>(old-node, <origin-term> new-node) <+ <not(origin-term)> new-node);
+		<same-signature <+ unmodified-list> (old-node, new-node);
+		zip-list:=<zip> (<get-arguments> old-node, <get-arguments> new-node);
+		change-list:=<map(collect-changes); flatten-list> zip-list
+
+collect-changes-in-list:
+	(old-list, new-list) -> change-list
+	where
+		<is-list> old-list;
+		<is-list> new-list;
+		(matched-childs, insertions, deletions):=<diff-on-origin>(old-list, new-list);
+		changes-matched-childs:=<map(collect-changes); flatten-list> matched-childs;
+		change-list:=<conc>(insertions, deletions, changes-matched-childs)
+
+collect-replaced-node:
+	(old-node, new-node) -> [REPLACEMENT(old-node, new-node)]
+
+rules //helper rules for list decomposition
+//TODO: cleaner implementation
+
+diff-on-origin: 
+	(old-list,new-list) -> (matched-childs, insertions, deletions)
+	where
+		(matched-childs, inside-insertions, deletion-elms, remaining-new-elements):=
+			<split-matching-nodes(|[], [], [])> (old-list,new-list);
+		if <not(?[])> remaining-new-elements then 
+			end-insertion:=INSERT_AT_END(old-list, remaining-new-elements); 
+			insertions:=<conc>(inside-insertions, [end-insertion])
+		else
+			insertions:=inside-insertions
+		end;
+		deletions:=<map(!DETETION(<id>))> deletion-elms
+
+split-matching-nodes(|arg-matched-childs, arg-insertions, arg-deletions):
+	(old-list, new-list) -> result
+	where
+		if <?[h|tail]> old-list then
+			loc-h:=<origin-offset> h; 
+			if <fetch(origin-offset; ?loc-h)> new-list then
+				matching-h:=<fetch-elem(where(origin-offset; ?loc-h))> new-list;
+				(insertions-before, remaining):=<split-fetch(origin-offset; ?loc-h)> new-list;
+				if <not(?[])> insertions-before then
+					insertions:=<conc>(arg-insertions, [INSERT_BEFORE(h, insertions-before)])
+				else
+					insertions:=arg-insertions
+				end;
+				matched-childs:=<conc>(arg-matched-childs, [(h, matching-h)]);
+				result:=<split-matching-nodes(|matched-childs, insertions, arg-deletions)> (tail, remaining)
+			else 
+				if
+					sublist-deletion:=<conc>(<last> arg-deletions, [h]);
+					<origin-sublist-term> sublist-deletion;
+					deletions:=<at-last(![sublist-deletion])> arg-deletions
+				then
+					result:=<split-matching-nodes(|arg-matched-childs, arg-insertions, deletions)> (tail, new-list)
+				else
+					deleted-nodes:=<conc>(arg-deletions, [[h]]);
+					result:=<split-matching-nodes(|arg-matched-childs, arg-insertions, deleted-nodes)> (tail, new-list)
+				end
+			end
+		else
+			result:=(arg-matched-childs, arg-insertions, arg-deletions, new-list)
+		end
+
+rules //other helper functions
+	
+unmodified-list=
+	?(list-old, list-new);
+	<eq> (list-old, <map(origin-term)> list-new)
+
+same-signature=
+	?(term-A, term-B); 
+	<not(is-list)> term-A;
+	<eq>(<get-constructor> term-A, <get-constructor> term-B); 
+	<eq>(<node-size> term-A, <node-size> term-B)
\ No newline at end of file

Added: Refactoring/lib-reconstruction/primitives.str
===================================================================
--- Refactoring/lib-reconstruction/primitives.str	                        (rev 0)
+++ Refactoring/lib-reconstruction/primitives.str	2010-06-28 11:00:07 UTC (rev 21050)
@@ -0,0 +1,169 @@
+module lib-reconstruction/primitives
+
+strategies //primitives
+
+/**
+ * Replaces a textfragment of the file being edited (side-effect) and returns the new content
+ * @type:
+ * a. (AstNode, String) -> String 
+ * b. ((start-offset, end-offset), String)  -> String
+ * c. ((line, column, end-line, end-column), String)  -> String
+ */
+apply-text-change= prim("SSL_EXT_text_change",<Fst>, <Snd>) //TODO: sublist support
+
+/**
+ * Replaces the text of the file being edited (side-effect) and returns the new content
+ * @type String -> String
+ */
+apply-text-change= prim("SSL_EXT_text_change", "", <id>)
+
+/**
+ * Returns the origin-term of a sublist
+ * @type List(Aterm) -> List(Aterm)
+ */
+origin-sublist-term= prim("SSL_EXT_origin_sublist_term","", <id>)
+
+/**
+ * Returns the start- and end- offset of the AST node
+ * @type ATerm -> (Int, Int)
+ */
+prim-origin-offset= prim("SSL_EXT_origin_offset", <id>)
+
+/**
+ * Returns the start- and end- offset of the AST node, 
+ * including comments, indentation and seperating whitespace
+ * @type ATerm -> (Int, Int)
+ */
+prim-origin-offset-with-layout= prim("SSL_EXT_origin_offset_with_layout", <id>) //TODO: reimplement
+
+/**
+ * Returns the start- and end- offset of the preceding comments
+ * that refer to the AST node (or sublist)
+ * Fails if comment does not exist
+ * @type ATerm -> (Int, Int)
+ */
+prim-origin-offset-comment-before  = prim("SSL_EXT_origin_comment_before", <id>) //TODO: reimplement
+
+/**
+ * Returns the start- and end- offset of the following comments
+ * that refer to the AST node (or sublist)
+ * Fails if comment does not exist
+ * @type ATerm -> (Int, Int)
+ */
+prim-origin-offset-comment-after= prim("SSL_EXT_origin_comment_after", <id>) //TODO: reimplement
+
+/**
+ * Returns the textfragment from (inclusive) start- to (exclusive) end- offset. 
+ * Fails if the offsets do not correspond to a valid location in the source text
+ * @type (Int, Int) -> String
+ */
+origin-textfragment= prim("SSL_EXT_origin_textfragment","", <id>)
+
+/**
+ * Returns the indentation (string) of the start-line of the node. 
+ * For empty lists, the parent indentation + an additional tab is returned
+ * @type ATerm -> String
+ */
+prim-origin-indent-node= prim("SSL_EXT_origin_indentation", <id>)
+	//!"\t" //todo implement (indent empty list: parent + tab)
+
+/**
+ * Returns the whitespace preceding the node (without the indentation). 
+ * @type ATerm -> String
+ */
+prim-origin-seperating-ws-node= prim("SSL_EXT_origin_seperating_whitespace", <id>)
+	//!"\n" //todo: implement (no indentation!)
+
+/**
+ * Returns the seperator between the list elements
+ * Empty string if seperator token does not exist
+ * Fails if list has less than 2 elements
+ * @type ATerm -> String
+ */
+prim-origin-seperator-node=
+	fail //todo: implement
+
+/**
+ * Returns the tabsize used in the editor. 
+ * @type  -> Int
+ */
+tabsize=!4 //TODO: spoofax editor settings
+
+strategies //primitives with sublist support
+
+origin-offset = support-sublist(prim-origin-offset)
+
+origin-offset-with-layout = support-sublist(prim-origin-offset-with-layout)
+
+origin-offset-comment-before = support-sublist(prim-origin-offset-comment-before)
+
+origin-offset-comment-after = support-sublist(prim-origin-offset-comment-after)
+
+origin-indent-node = support-sublist(prim-origin-indent-node)
+
+origin-seperating-ws-node = support-sublist(prim-origin-seperating-ws-node)
+
+origin-seperator-node = support-sublist(prim-origin-seperator-node)
+
+strategies //derived from primitives
+	
+/**
+ * Returns the start- and end- offset of the AST node,
+ * including comments
+ * @type ATerm -> (Int, Int)
+ */
+origin-offset_with_comments:
+	node -> (start-offset, end-offset)
+	where
+		start-offset:=<(origin-offset-comment-before <+ origin-offset); Fst> node;
+		end-offset:=<(origin-offset-comment-after <+ origin-offset); Snd> node
+
+/**
+ * Returns the textfragment of the AST node,
+ * including comments
+ * @type ATerm -> (Int, Int)
+ */
+origin-text_with_comments=
+	origin-offset_with_comments;
+	origin-textfragment
+
+/**
+ * Returns the value of the indentation of the startline 
+ * @type ATerm -> Int
+ */
+origin-indent-value-node=
+	origin-indent-node;
+	explode-string;
+	take-while(?' '<+?'\t');
+	foldr(!0, add, (?' ';!1) <+ (?'\t';tabsize))
+
+
+strategies //helpers
+
+/**
+ * Treats sublists as origin terms
+ * @param strategy to apply on an origin term 
+ * @type ATerm -> ATerm
+ */
+support-sublist(s)=
+	s <+ 
+	(origin-sublist-term; s)
+
+/*
+origin-comment-before  = prim("SSL_EXT_origin_comment_before", <id>)
+origin-comment-after= prim("SSL_EXT_origin_comment_after", <id>)
+origin-sourcetext= prim("SSL_EXT_origin_source_text","", "")
+
+
+selected-from-to-position= prim("SSL_EXT_selected_from_to_position","", "")
+origin-root= prim("SSL_EXT_origin_root","", "")
+origin-offset-including-layout= prim("SSL_EXT_origin_offset_with_layout", <id>)
+messagebox:
+	(title, oldname, newname) -> <prim("SSL_EXT_opendialog", title, oldname, newname)>
+
+origin-offset-with-layout=
+	origin-offset-including-layout<+
+	(origin-sublist-term; origin-offset-including-layout)
+	
+origin-lo-insert-after= prim("SSL_EXT_layout_info_insert_after", <id>, "bla bla")
+*/
\ No newline at end of file

Added: Refactoring/lib-reconstruction/text-construct.str
===================================================================
--- Refactoring/lib-reconstruction/text-construct.str	                        (rev 0)
+++ Refactoring/lib-reconstruction/text-construct.str	2010-06-28 11:00:07 UTC (rev 21050)
@@ -0,0 +1,217 @@
+module lib-reconstruction/text-construct
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  lib-reconstruction/primitives
+  lib-reconstruction/diff-ast
+  lib-reconstruction/custom-pp-rules
+
+rules //text construction
+
+construct-dedented-text:
+	node -> dedented-text
+	where
+		text := <construct-text> node;
+		dedented-text := <remove-indentation(|<origin-indent-value-node <+ !0> node)> text
+
+construct-text=
+	construct-text-from-origin <+
+	construct-text-from-listfragments <+
+	construct-text-by-string-interpolation <+
+	construct-text-by-pp
+
+construct-text-from-origin: 
+	new-node -> text
+	where //debug(!"enter construct-from-origin: ");
+		(<same-signature>(<origin-term> new-node, new-node) <+ <origin-sublist-term> new-node); //<debug> "-- past-same-signature criteria --";
+		ast-changes := <collect-changes> (<origin-term <+ origin-sublist-term> new-node, new-node); //debug(!"ast-changes: ");
+		text-changes := <map(ast-change-to-text-change)> ast-changes; //debug(!"text-changes: ");
+		text := <apply-text-changes>(text-changes, <origin-text_with_comments> new-node, <origin-offset_with_comments; Fst> new-node)
+		//; <debug(!"construct-from-origin (node): ")> new-node
+		//; <debug(!"construct-from-origin (text): ")> text
+		  
+construct-text-from-listfragments:
+	new-list -> text
+	where //debug(!"enter construct-from-listfragments: ");
+		listfragments := <construct-sublist-texts> new-list;
+		seperation := <seperation-composed-list> new-list;
+		text := <concat-fragments(|seperation)> listfragments
+		//; <debug(!"construct-from-listfragments (node): ")> new-list
+		//; <debug(!"construct-from-listfragments (text): ")> text
+
+construct-text-by-string-interpolation:
+	new-node -> text
+	where //debug(!"enter construct-by-interpolation: ");
+		children := <get-arguments> new-node;
+		text-in-childs := <map(construct-dedented-text)> children;
+		text := <mkterm; custom-interpolation>(<get-constructor> new-node, text-in-childs)
+		//; <debug(!"construct-by-pp (node): ")> new-node
+		//; <debug(!"construct-by-pp (text): ")> text
+
+		
+construct-text-by-pp: //TODO: add default indent for newlines 
+	new-node -> text
+	where //debug(!"enter construct-by-pp: ");
+		children := <get-arguments> new-node;
+		text-in-childs := <map(construct-sublist-texts <+ construct-dedented-text)> children;
+		text := <mkterm; pretty-print>(<get-constructor> new-node, text-in-childs)
+		//; <debug(!"construct-by-pp (node): ")> new-node
+		//; <debug(!"construct-by-pp (text): ")> text
+
+rules //sublist helper functions
+	
+construct-sublist-texts=
+    (?[];![]) <+ 
+    (?[h|[]];![<construct-dedented-text> h]) <+
+    (
+ 		at-suffix(
+ 			where(origin-sublist-term <+ ?[h|[]]); 
+ 			![<id>]
+ 		); 
+ 		split-init-last; 
+ 		TupleToList; 
+ 		at-init(construct-sublist-texts, construct-dedented-text);
+ 		flatten-list
+ 	)
+
+concat-fragments(|seperation)=
+	separate-by(|seperation); 
+	concat-strings
+	
+seperation-composed-list=
+	<conc-strings>(<seperator-composed-list>, <seperating-ws-composed-list>) 
+
+seperating-ws-composed-list:
+	composed-list -> seperating-ws
+	where
+		seperating-ws := "\n" //todo: A.find sublist (length > 1), get-seperation B. custom C. default
+
+seperator-composed-list:
+	composed-list -> seperator
+	where
+		seperator := "" //todo: A.find sublist (length > 1), get-seperation B. custom C. default
+
+rules //dedentation
+
+remove-indentation(|n)=
+	all-lines(string-as-chars(dedent-line-chars(|n)));
+	trim-chars(?' ' <+ ?'\t' <+ ?'\n')
+		
+dedent-line-chars(|n):
+	chars -> dedented-chars
+	where
+		(
+			<lt> (n,0); 
+			indent:=<copy-char; explode-string> (<abs>n, ' '); 
+			dedented-chars:=<conc>(indent,chars)
+		)<+
+		(
+			<gt> (n,0);
+			<?[' '|tail]> chars;
+			dedented-chars:=<dedent-line-chars(|<dec> n)> tail
+		)<+
+		(
+			<gt> (n,0);
+			<?['\t'|tail]> chars;
+			dedented-chars:=<dedent-line-chars(|<subt> (n, <tabsize>))> tail				
+		)<+
+		dedented-chars:=chars
+
+rules //translates ast-changes to textual changes
+	
+ast-change-to-text-change=
+	to-text-deletion <+
+	to-text-replacement <+
+	to-text-insertion-at-end <+
+	to-text-insertion-before
+	
+
+to-text-deletion:
+	DETETION(old-node) -> (<origin-offset-with-layout> old-node, "")
+	//where
+		//debug(!"DELETION: ")
+
+to-text-replacement:
+	REPLACEMENT(old-node, new-node) -> (offset, new-text)
+	where //debug(!"REPLACEMENT: ");
+		offset := <origin-offset> old-node; //TODO: "with-comments" if new-node is constructed from origin
+		indent := <origin-indent-node> old-node;
+		new-text := <construct-dedented-text; add-indentation(|indent)> new-node
+		//; debug(!"TC-REPLACEMENT: ")
+		
+to-text-insertion-at-end:
+	INSERT_AT_END(old-list, new-sublist) -> (insert-offset, new-text)
+	where //debug(!"INSERT-AT-END: ");
+		if <?[_|_]> old-list then //not empty list
+			indent := <last; origin-indent-node> old-list;
+			seperation := <last; <conc-strings>(<seperator-node>, <origin-seperating-ws-node>)> old-list;
+			constructed-text := <construct-sublist-texts; concat-fragments(|seperation)> new-sublist; //TODO: seperator
+			indented-text := <add-indentation(|indent)> constructed-text;
+			new-text := <conc-strings> (seperation, indented-text)
+		else //empty list
+			constructed-text := <construct-dedented-text> new-sublist;
+			indent := <origin-indent-node> old-list;
+			seperating-ws:=<seperating-ws-composed-list> new-sublist;
+			new-text := <concat-strings; add-indentation(|indent)> [seperating-ws, constructed-text, seperating-ws]
+		end;
+		offset-end-list := <origin-offset_with_comments; Snd> old-list;
+		insert-offset := (offset-end-list, offset-end-list)
+		//; debug(!"TC-INSERT AT END: ")
+		
+to-text-insertion-before:
+	INSERT_BEFORE(old-node, new-sublist) -> (insert-loc, new-text)
+	where debug(!"INSERT BEFORE: ");
+		indent:=<origin-indent-node> old-node; debug(!"1: ");
+		seperation := <conc-strings>(<seperator-node> old-node, <origin-seperating-ws-node> old-node); debug(!"2: ");
+		constructed-text:=<construct-sublist-texts; concat-fragments(|seperation)> new-sublist; debug(!"3: ");
+		indented-text:= <add-indentation(|indent)> constructed-text; debug(!"4: ");
+		new-text:=<concat-strings> [indented-text, seperation, indent]; debug(!"5: ");
+		loc:=<origin-offset_with_comments; Fst> old-node; debug(!"6: ");
+		insert-loc:=(loc,loc)
+		; debug(!"TC-INSERT BEFORE: ")
+
+rules //helpers
+		
+seperator-node=!""//TODO: A. from list B. custom C. default("")
+
+add-indentation(|ws-indent)=
+	prefix-lines(|ws-indent);
+	trim-leading-whitespace
+
+rules //applying text changes
+
+apply-text-changes:
+	(text-changes, origin-text, start-offset) -> changed-text
+	where
+		ordered-text-changes := <sort-list(LSort(compare-text-change))> text-changes;
+		changed-text:= <foldr(!(start-offset, origin-text), apply-textual-change); Snd> ordered-text-changes
+		  
+apply-textual-change:
+	(change, text-info) -> (char-pos, result-text)
+	where 
+		<?(char-pos, text-fragment)> text-info; 
+		<?((change-start, change-end), change-text)> change; 
+		pos-start:=<subt>(change-start, char-pos); 
+		pos-end:=<subt>(change-end, char-pos); 
+		result-text:=<replace-in-text>
+			(text-fragment, change-text, pos-start, pos-end) 
+		//;<debug(!"text-in: ")> text-fragment
+		//;<debug(!"text-uit: ")> result-text
+
+replace-in-text:
+	(old-text, text-change, pos-start, pos-end) -> result-text
+	where
+		old-chars:=<explode-string> old-text; 
+		(prefix, tail):=<split-at(|pos-start)> old-chars; 
+		(heads, suffix):=<split-at(|pos-end)> old-chars; 
+		result-text:=<conc-strings> (<implode-string> prefix, text-change, <implode-string> suffix) 
+
+
+compare-text-change=
+		?(((start-x, end-x),x), ((start-y, end-y),y));
+		not(
+			<lt> (start-x, start-y) <+ 
+			<eq> (start-x, start-y); <lt> (end-x, end-y)
+		)
+		
\ No newline at end of file

Added: Refactoring/lib-refactoring/primitives.str
===================================================================
--- Refactoring/lib-refactoring/primitives.str	                        (rev 0)
+++ Refactoring/lib-refactoring/primitives.str	2010-06-28 11:00:07 UTC (rev 21050)
@@ -0,0 +1,28 @@
+module lib-refactoring/primitives
+
+imports
+  libstratego-lib
+  libstratego-sglr
+
+strategies
+
+apply-text-change= prim("SSL_EXT_text_change",<Fst>, <Snd>)
+apply-text-change= prim("SSL_EXT_text_change", "", <id>)
+origin-comment-before  = prim("SSL_EXT_origin_comment_before", <id>)
+origin-comment-after= prim("SSL_EXT_origin_comment_after", <id>)
+origin-textfragment= prim("SSL_EXT_origin_textfragment","", <id>)
+origin-sourcetext= prim("SSL_EXT_origin_source_text","", "")
+origin-offset= prim("SSL_EXT_origin_offset", <id>)
+origin-sublist-term= prim("SSL_EXT_origin_sublist_term","", <id>)
+selected-from-to-position= prim("SSL_EXT_selected_from_to_position","", "")
+origin-root= prim("SSL_EXT_origin_root","", "")
+origin-offset-including-layout= prim("SSL_EXT_origin_offset_with_layout", <id>)
+messagebox:
+	(title, oldname, newname) -> <prim("SSL_EXT_opendialog", title, oldname, newname)>
+
+origin-offset-with-layout=
+	origin-offset-including-layout<+
+	(origin-sublist-term; origin-offset-including-layout)
+	
+origin-lo-insert-after= prim("SSL_EXT_layout_info_insert_after", <id>, "bla bla")
+	
\ No newline at end of file

Added: Refactoring/lib-refactoring/refactoring-position-helpers.str
===================================================================
--- Refactoring/lib-refactoring/refactoring-position-helpers.str	                        (rev 0)
+++ Refactoring/lib-refactoring/refactoring-position-helpers.str	2010-06-28 11:00:07 UTC (rev 21050)
@@ -0,0 +1,109 @@
+module lib-refactoring/refactoring-position-helpers
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+
+rules
+
+/**
+ * Finds the position of the sibling node after the first node for which s succeeds,
+ * performing a topdown traversal following a given path
+ *
+ * @param The strategy that matches the type of node that is extracted  
+ * @param The start position of the selected fragment 
+ * @type ATerm -> List(Int)
+*/
+fetch-position-extracted(s|pos-selected)=
+	fetch-position-topdown(s|pos-selected); 
+	next-sibling-position
+
+/**
+ * Finds the first position for which s succeeds,
+ * performing a topdown traversal following a given path
+ *
+ * @param The strategy that should succeed  
+ * @param The position to which the traversal leads
+ * @type ATerm -> List(Int)
+*/
+fetch-position-topdown(s|path)=
+	fetch-position-topdown(s|path, 0)
+
+fetch-position-topdown(s|path, level): 
+	ast -> fetched-pos
+	where
+		position:=<take(|level)> path; 
+		(
+			(<at-position(s|position)> ast; fetched-pos:=position) <+
+			fetched-pos:=<fetch-position-topdown(s|path, <inc>level)> ast
+		)
+
+/**
+ * Returns the position of the next sibling
+ *
+ * @type List(Int) -> List(Int)
+*/
+next-sibling-position=
+	at-last-elem(inc)
+
+at-last-elem(s):
+	[h|[]] -> [<s> h]
+
+at-last-elem(s):
+	[h|tail] -> [h|<at-last-elem(s)> tail]
+
+/**
+ * Returns the start position of the selected fragment 
+ *
+ * @type _ -> List(Int)
+*/	
+selected-start-position=
+	selected-from-to-position; 
+	Fst
+
+/**
+ * Returns the end position of the selected fragment 
+ *
+ * @type _ -> List(Int)
+*/
+selected-end-position=
+	selected-from-to-position; 
+	Snd
+	
+selected-from-to-position= 
+	prim("SSL_EXT_selected_from_to_position","", "")
+
+/*
+
+selected-start-position(|ast, selected, position)= //TODO: should be replaced by native call
+	(<not(is-list)> selected; !position) <+
+	(selected-start-end-position(|ast, selected, position); Fst)
+
+selected-end-position(|ast, selected, position)= //TODO: should be replaced by native call
+	(<not(is-list)> selected; !position)<+
+	(selected-start-end-position(|ast, selected, position); Snd)
+
+selected-start-end-position(|ast, selected, position)=
+	list:=<term-at-position(|position)> ast;  
+	(start-index, end-index):= <get-sublist-indexes(|list, selected)>; 
+	p-start:=<conc>(position, [start-index]);  
+	p-end:=<conc>(position, [end-index]);
+	!(p-start, p-end)
+
+get-sublist-indexes(|list, sublist)=
+	get-sublist-indexes(|0, list, sublist)
+	
+get-sublist-indexes(|index, list, sublist)=
+	if <is-prefix> (sublist, list) then
+		!(index, <add>(<subt>(<length> sublist, 1), index))
+	else
+		<?[h|tail]> list;
+		get-sublist-indexes(|<add>(1,index), tail, sublist)
+	end
+	
+is-prefix=
+	?(sublist, list);
+	sl-length:=<length> sublist;
+	prefix:=<take(|sl-length)> list;
+	<eq> (prefix, sublist)
+*/
\ No newline at end of file

Added: Refactoring/lib-refactoring/refactoring-transformation-helpers.str
===================================================================
--- Refactoring/lib-refactoring/refactoring-transformation-helpers.str	                        (rev 0)
+++ Refactoring/lib-refactoring/refactoring-transformation-helpers.str	2010-06-28 11:00:07 UTC (rev 21050)
@@ -0,0 +1,237 @@
+module lib-refactoring/refactoring-transformation-helpers
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  lib-refactoring/refactoring-position-helpers
+
+rules
+
+/**
+ * Traverses the AST, renaming nodes  
+ * @param old name
+ * @param new name  
+ * @type ATerm -> ATerm
+*/
+renameAll(|old-name, new-name)=
+	topdown(try(?old-name;!new-name))
+
+/**
+ * Replaces call-nodes with the body of the node that is inlined
+ * and removes the old node 
+ * @param matching strategie for call nodes
+ * @param node that will be inlined
+ * @param body of the node 
+ * @type ATerm -> ATerm
+*/
+inline-all-instances(call|node, body)=
+	removeAll-element-from-list(?node); 
+	replaceAll-element-with-sublist(call|body)
+
+
+/**
+ * Removes elements forming a sublist from the AST
+ *
+ * @param The strategy that matches the type of nodes in the list where the extraction takes place (s)  
+ * @param The position of the first element to be removed (from)  
+ * @param The position of the last element to be removed (to)
+ * @param The call to the extracted node (call)  
+ * @param The extracted node (node)  
+ * @type ATerm -> ATerm
+*/
+extract(s|from, to, extr-call, extr-node):
+	ast -> ast-after-extraction
+	where
+		pos-node:=<fetch-position-extracted(s|from)> ast;
+		ast-after-extraction:=<
+			replace-sublist-with-element(|from, to, extr-call); //TODO: origin lost after swapping replace and insert??
+			insert-list-element(|pos-node, extr-node)
+		> ast
+		
+/**
+ * Returns the (sub)list that corresponds to the given positions 
+ * @param The position of the first element  
+ * @param The position of the last element  
+ * @type ATerm -> List(a)
+*/
+get-sublist(|from,to):
+	ast -> sublist
+	where
+		list-pos:=<take(|<length; dec> from)> from;
+		list:=<term-at-position(|list-pos)> ast;
+		sublist:=<select-partial-list(|<last> from, <last> to)> list
+		
+select-partial-list(|from, to): 
+	list -> partial-list
+	where 
+		(prefix, suffix):=<split-at(|<inc> to)> list;
+		(pre, mid-part):=<split-at(|from)> prefix; 
+		partial-list:=mid-part//TODO: origin tracking
+		
+/**
+ * Removes elements forming a sublist from the AST
+ *
+ * @param The position of the first element to be removed (from)  
+ * @param The position of the last element to be removed (to)
+ * @type ATerm -> ATerm
+*/
+remove-sublist(|from, to):
+	ast -> ast-with-deletion
+	where
+		list-pos:=<take(|<length; dec> from)> from;
+		ast-with-deletion:=<at-position-keep-annos(remove-partial-list(|<last> from, <last> to)|list-pos)> ast
+
+remove-partial-list(|from, to): 
+	list -> list-after-deletion
+	where 
+		(part1, tail):=<split-at(|from)> list; 
+		(prefix, part2):=<split-at(|<inc> to)> list;
+		list-after-deletion:=<conc> (part1, part2)//TODO: origin tracking
+
+/**
+ * Removes an element from a list in the AST
+ *
+ * @param The position of the element to be removed  
+ * @type ATerm -> ATerm
+*/
+remove-list-element(|position)=
+	remove-sublist(|position, position)
+
+/**
+ * Traverses the AST, removing all list elements matching s  
+ * @param Strategy that determines the elements that will be removed  
+ * @type ATerm -> ATerm
+*/
+removeAll-element-from-list(s)=
+	topdown(try(replace-element-with-sublist(s|[])))
+
+/**
+ * Removes all list elements matching s  
+ * @param Strategy that determines the elements that will be removed  
+ * @type List -> List
+*/
+remove-element-from-list(s)=
+	replace-element-with-sublist(s|[])
+
+
+/**
+ * Extends a list-node in the AST by inserting a sublist 
+ *
+ * @param The position for inserting the sublist  
+ * @param The sublist that will be inserted
+ * @type ATerm -> ATerm
+*/
+insert-sublist(|position, sublist):
+	ast -> ast-with-insertion
+	where
+		list-pos:=<take(|<length; dec> position)> position;
+		ast-with-insertion:=<at-position-keep-annos(origin-track-forced(insert-partial-list(|<last> position, sublist))|list-pos)> ast
+
+insert-partial-list(|index, sublist): 
+	list -> list-with-insertion
+	where //<debug(!"(lst, index, node)")> (list, index, node);
+		(prefix, suffix):=<split-at(|index)>;
+		list-with-insertion:=<conc> (prefix, sublist, suffix)
+
+/**
+ * Extends a list-node in the AST by inserting an element 
+ *
+ * @param The position for inserting the sublist  
+ * @param The element that will be inserted
+ * @type ATerm -> ATerm
+*/
+insert-list-element(|position, element)=
+	insert-sublist(|position, [element])
+
+/**
+ * Replaces a sublist in the AST with another sublist
+ *
+ * @param The position of the first element of the sublist to be replaced (from)  
+ * @param The position of the last element of the sublist to be replaced (to)
+ * @param The new sublist
+ * @type ATerm -> ATerm
+*/
+replace-sublist(|from, to, sublist)=
+	remove-sublist(|from, to); 
+	insert-sublist(|from, sublist)
+
+/**
+ * Replaces a sublist in the AST with a single list element
+ *
+ * @param The position of the first element of the sublist to be replaced (from)  
+ * @param The position of the last element of the sublist to be replaced (to)
+ * @param The new list element
+ * @type ATerm -> ATerm
+*/
+replace-sublist-with-element(|from, to, element)=
+	replace-sublist(|from, to, [element])
+
+/**
+ * Replaces a list-element in the AST with a sublist
+ *
+ * @param The position of the list element that ill be removed   
+ * @param The sublist that will be inserted
+ * @param The new list element
+ * @type ATerm -> ATerm
+*/
+replace-element-with-sublist(|position, sublist)=
+	replace-sublist(|position, position, sublist)
+
+/**
+ * Traverses the AST, replacing certain list elements with a sublist 
+ * @param Strategy that determines the elements that will be replaced
+ * @param Sublist that replaces the elements
+ * @type ATerm -> ATerm
+*/
+replaceAll-element-with-sublist(s|sublist)=
+	topdown(try(replace-element-with-sublist(s|sublist)))
+
+/**
+ * Replaces list elements matching a certain strategy with a sublist 
+ * @param Strategy that determines the elements that will be replaced
+ * @param Sublist that replaces the elements
+ * @type List -> List
+*/	
+replace-element-with-sublist(s|sublist):
+	list -> result-list
+	where 
+		result-list:=<
+			try(
+				split-fetch(s); 
+				<conc>(
+					<Fst>, 
+					sublist, 
+					<Snd; replace-element-with-sublist(s|sublist)>
+				)
+			)
+		> list
+
+
+//TODO: topdown renaming/replacing nodes, preserving annos and origin
+
+//TODO: better way to do the origin tracking
+at-position-keep-annos(s|position):
+	term -> term'
+	where
+		!position => [i | position']
+	where
+		(	//origin known, should be kept
+			args:=<get-arguments> term ; 
+    		arg:=<term-at-position(|[i])> args; 
+    		loc:=<origin-location> arg; //Todo: better way to unique identify right subnode
+        	trm-or := <one(identified-by-origin(at-position-keep-annos(s|position')<+at-position(s|position')| loc))> term;
+        	term' := <set-annos>(trm-or, <get-annos> term)
+        )<+
+		(	//origin unknown
+			<?c#(t*)> term;
+			t-rec := c#(<at-index(at-position-keep-annos(s|position')<+at-position(s|position'))> (i, t*));
+			term' := <set-annos>(t-rec, <get-annos> term)
+		)
+
+
+identified-by-origin(s|loc):
+	t -> tr
+	where
+		<eq>(loc, <origin-location> t);
+		tr:=<s> t
+       	


From m.dejonge at tudelft.nl  Mon Jun 28 13:03:49 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 28 Jun 2010 11:03:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21051 - MaartjeDeJonge
	- /
Message-ID: <201006281103.o5SB3nYE006715@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2010-06-28 11:03:49 +0000 (Mon, 28 Jun 2010)
New Revision: 21051

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21051&view=rev

Added:
   refactoring/
Removed:
   Refactoring/

Log:


Changes:


From L.C.L.Kats at tudelft.nl  Mon Jun 28 14:46:06 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 28 Jun 2010 12:46:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21052 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
Message-ID: <201006281246.o5SCk6Qv009569@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-28 12:46:06 +0000 (Mon, 28 Jun 2010)
New Revision: 21052

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21052&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java

Log:
Memory usage tweaks

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java	2010-06-28 11:03:49 UTC (rev 21051)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java	2010-06-28 12:46:06 UTC (rev 21052)
@@ -131,9 +131,6 @@
 	private ATerm doParseNoImplode(InputStream inputStream, char[] inputChars)
 			throws TokenExpectedException, BadTokenException, SGLRException, IOException {
 		
-		// FIXME: Some bug in JSGLR is causing its state to get corrupted; must reset it every parse
-		resetState();
-		
 		// Read stream using tokenizer/lexstream
 		
 		try {
@@ -150,6 +147,9 @@
 			} else {
 				throw new FilterException(e.getParser(), e.getMessage(), e);
 			}
+		} finally {
+			// FIXME: Some bug in JSGLR is causing its state to get corrupted; must reset it every parse
+			resetState();
 		}
 	}
 }


From L.C.L.Kats at tudelft.nl  Mon Jun 28 14:47:53 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 28 Jun 2010 12:47:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21053 - LennartKats -
	in experimental/meta-amb-suggestions: . editor syntax
	syntax/_attic syntax/generated test/Stratego-Java-15 trans trans/cli
Message-ID: <201006281247.o5SClrTJ009626@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-28 12:47:53 +0000 (Mon, 28 Jun 2010)
New Revision: 21053

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21053&view=rev

Added:
   experimental/meta-amb-suggestions/syntax/_attic/
   experimental/meta-amb-suggestions/syntax/_attic/Meta-amb-suggestions.sdf
   experimental/meta-amb-suggestions/syntax/generated/
   experimental/meta-amb-suggestions/syntax/generated/Stratego-Java15.def
   experimental/meta-amb-suggestions/syntax/generated/maak
Removed:
   experimental/meta-amb-suggestions/syntax/Meta-amb-suggestions.sdf
Modified:
   experimental/meta-amb-suggestions/build.main.xml
   experimental/meta-amb-suggestions/editor/Meta-amb-suggestions.main.esv
   experimental/meta-amb-suggestions/test/Stratego-Java-15/test1.met
   experimental/meta-amb-suggestions/test/Stratego-Java-15/test6.met
   experimental/meta-amb-suggestions/trans/cli/compose-grammars.str
   experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str

Log:
changed project to use a generated Stratego-Java grammar. note that this grammar must be separately generated using syntax/generated/maak. for now I just checked the .def file into SVN

Changes (first 1000 lines of the diffs):

Modified: experimental/meta-amb-suggestions/build.main.xml
===================================================================
--- experimental/meta-amb-suggestions/build.main.xml	2010-06-28 12:46:06 UTC (rev 21052)
+++ experimental/meta-amb-suggestions/build.main.xml	2010-06-28 12:47:53 UTC (rev 21053)
@@ -3,7 +3,7 @@
 <project name="Meta-amb-suggestions" default="all">
         
         <!-- Key input modules -->
-        <property name="sdfmodule" value="Meta-amb-suggestions"/>
+        <property name="sdfmodule" value="Stratego-Java15"/>
         <property name="esvmodule" value="Meta-amb-suggestions"/>
         <property name="strmodule" value="meta_amb_suggestions"/>
     
@@ -23,9 +23,10 @@
                         -I &quot;${user.home}/.nix-profile/share/sdf-front&quot;
                         -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm
                         -la strc"/>
-        
+
+        <property name="externaldef" location="syntax/generated/Stratego-Java15.def"/>
+
 	      <!-- External .def and .jar locations
-	      <property name="externaldef" location="syntax/Stratego-Java-15.def"/>
         <property name="externaldef" location="syntax/${sdfmodule}.def"/>
         <property name="externaljar" value="../lib.jar"/>
         <property name="externaljarflags" value="-la org.lib"/>

Modified: experimental/meta-amb-suggestions/editor/Meta-amb-suggestions.main.esv
===================================================================
--- experimental/meta-amb-suggestions/editor/Meta-amb-suggestions.main.esv	2010-06-28 12:46:06 UTC (rev 21052)
+++ experimental/meta-amb-suggestions/editor/Meta-amb-suggestions.main.esv	2010-06-28 12:47:53 UTC (rev 21053)
@@ -15,6 +15,6 @@
   url           : http://strategoxt.org
                   
   extensions    : met
-  table         : include/Meta-amb-suggestions.tbl
+  table         : include/Stratego-Java15.tbl
   start symbols : Module_StrategoHost
   // unmanaged table : Stratego*
\ No newline at end of file

Deleted: experimental/meta-amb-suggestions/syntax/Meta-amb-suggestions.sdf
===================================================================
--- experimental/meta-amb-suggestions/syntax/Meta-amb-suggestions.sdf	2010-06-28 12:46:06 UTC (rev 21052)
+++ experimental/meta-amb-suggestions/syntax/Meta-amb-suggestions.sdf	2010-06-28 12:47:53 UTC (rev 21053)
@@ -1,12 +0,0 @@
-module Meta-amb-suggestions
-
-imports
-  Stratego-Java-15
-
-exports
-
-  context-free syntax
-  
-    "~"          Term[[StrategoHost]] -> ClassMod[[JavaObject]] {cons("FromMetaExpr")}
-    "~classmod:" Term[[StrategoHost]] -> ClassMod[[JavaObject]] {cons("FromMetaExprTagged")}
-    "~"          Term[[StrategoHost]] -> ID[[JavaObject]]       {cons("FromMetaExpr")}
\ No newline at end of file

Copied: experimental/meta-amb-suggestions/syntax/_attic/Meta-amb-suggestions.sdf (from rev 21047, experimental/meta-amb-suggestions/syntax/Meta-amb-suggestions.sdf)
===================================================================
--- experimental/meta-amb-suggestions/syntax/_attic/Meta-amb-suggestions.sdf	                        (rev 0)
+++ experimental/meta-amb-suggestions/syntax/_attic/Meta-amb-suggestions.sdf	2010-06-28 12:47:53 UTC (rev 21053)
@@ -0,0 +1,12 @@
+module Meta-amb-suggestions
+
+imports
+  Stratego-Java-15
+
+exports
+
+  context-free syntax
+  
+    "~"          Term[[StrategoHost]] -> ClassMod[[JavaObject]] {cons("FromMetaExpr")}
+    "~classmod:" Term[[StrategoHost]] -> ClassMod[[JavaObject]] {cons("FromMetaExprTagged")}
+    "~"          Term[[StrategoHost]] -> ID[[JavaObject]]       {cons("FromMetaExpr")}
\ No newline at end of file

Added: experimental/meta-amb-suggestions/syntax/generated/Stratego-Java15.def
===================================================================
--- experimental/meta-amb-suggestions/syntax/generated/Stratego-Java15.def	                        (rev 0)
+++ experimental/meta-amb-suggestions/syntax/generated/Stratego-Java15.def	2010-06-28 12:47:53 UTC (rev 21053)
@@ -0,0 +1,4124 @@
+definition
+module languages/java-15/expressions/Priorities
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/expressions/Main
+
+exports
+  context-free priorities
+      Expr "." "new" TypeArgs? Id TypeArgs? "(" {Expr ","}* ")" ClassBody? -> Expr
+    > {right:
+        Expr "++" -> Expr
+        Expr "--" -> Expr
+      } 
+
+  context-free priorities
+      {right:
+        Expr "++" -> Expr
+        Expr "--" -> Expr
+      }
+    > { "(" PrimType ")" Expr -> Expr    
+        "(" RefType  ")" Expr -> Expr
+      }
+
+  context-free priorities
+      "(" PrimType ")" Expr -> Expr
+    > {left:
+        Expr "*" Expr -> Expr
+        Expr "/" Expr -> Expr
+        Expr "%" Expr -> Expr
+      } 
+
+  context-free priorities
+      "(" RefType ")" Expr -> Expr 
+    > {
+        "++" Expr -> Expr
+        "--" Expr -> Expr
+        "+"  Expr -> Expr
+        "-"  Expr -> Expr
+      }
+
+  context-free priorities
+    {
+      Expr ArraySubscript -> ArrayAccess
+      Expr "." Id -> FieldAccess
+      Expr "." TypeArgs? Id -> MethodSpec
+    }
+  > {right:
+      Expr "++" -> Expr
+      Expr "--" -> Expr
+    }
+  > {
+      "++" Expr -> Expr
+      "--" Expr -> Expr
+      "+"  Expr -> Expr
+      "-"  Expr -> Expr
+      "~"  Expr -> Expr
+      "!"  Expr -> Expr
+    }
+  > {left:
+      Expr "*" Expr -> Expr
+      Expr "/" Expr -> Expr
+      Expr "%" Expr -> Expr
+    } 
+  > {left:
+      Expr "+" Expr -> Expr
+      Expr "-" Expr -> Expr
+    }
+  > {left:
+      Expr "<<"  Expr -> Expr
+      Expr ">>"  Expr -> Expr
+      Expr ">>>" Expr -> Expr
+    }
+  > {left:
+      Expr "instanceof" RefType -> Expr
+      Expr "<"   Expr -> Expr
+      Expr ">"   Expr -> Expr
+      Expr "<="  Expr -> Expr
+      Expr ">="  Expr -> Expr
+    }
+  > {left:
+      Expr "=="  Expr -> Expr
+      Expr "!="  Expr -> Expr
+    }
+  >   Expr "&"   Expr -> Expr
+  >   Expr "^"   Expr -> Expr
+  >   Expr "|"   Expr -> Expr
+  >   Expr "&&"  Expr -> Expr
+  >   Expr "||"  Expr -> Expr
+  >   Expr CondMid Expr -> Expr
+  > {right:
+      LHS "="    Expr -> Expr
+      LHS "*="   Expr -> Expr
+      LHS "/="   Expr -> Expr
+      LHS "%="   Expr -> Expr
+      LHS "+="   Expr -> Expr
+      LHS "-="   Expr -> Expr
+      LHS "<<="  Expr -> Expr
+      LHS ">>="  Expr -> Expr
+      LHS ">>>=" Expr -> Expr
+      LHS "&="   Expr -> Expr
+      LHS "^="   Expr -> Expr
+      LHS "|="   Expr -> Expr
+    }
+
+module languages/java-15/expressions/Restrictions
+exports
+  lexical restrictions
+    "+" -/- [\+]
+    "-" -/- [\-]
+    "/" -/- [\/]
+
+module languages/java-15/expressions/AssignmentOperators
+imports
+  languages/java-15/expressions/Main
+
+exports
+  sorts LHS
+  context-free syntax
+    LHS "="    Expr -> Expr {cons("Assign")}
+    LHS "*="   Expr -> Expr {cons("AssignMul")}
+    LHS "/="   Expr -> Expr {cons("AssignDiv")}
+    LHS "%="   Expr -> Expr {cons("AssignRemain")}
+    LHS "+="   Expr -> Expr {cons("AssignPlus")}
+    LHS "-="   Expr -> Expr {cons("AssignMinus")}
+    LHS "<<="  Expr -> Expr {cons("AssignLeftShift")}
+    LHS ">>="  Expr -> Expr {cons("AssignRightShift")}
+    LHS ">>>=" Expr -> Expr {cons("AssignURightShift")}
+    LHS "&="   Expr -> Expr {cons("AssignAnd")}
+    LHS "^="   Expr -> Expr {cons("AssignExcOr")}
+    LHS "|="   Expr -> Expr {cons("AssignOr")}
+
+    ExprName    -> LHS
+    FieldAccess -> LHS
+    ArrayAccess -> LHS
+
+
+
+
+module languages/java-15/expressions/BinaryOperators
+imports
+  languages/java-15/expressions/Main
+  languages/java-15/types/Main
+
+exports
+  sorts CondMid
+  context-free syntax
+    Expr "instanceof" RefType -> Expr {cons("InstanceOf")}
+
+    Expr "*"   Expr -> Expr  {left, cons("Mul")}
+    Expr "/"   Expr -> Expr  {left, cons("Div")}
+    Expr "%"   Expr -> Expr  {left, cons("Remain")}
+
+    Expr "+"   Expr -> Expr  {left, cons("Plus")}
+    Expr "-"   Expr -> Expr  {left, cons("Minus")}
+
+    Expr "<<"  Expr -> Expr  {left, cons("LeftShift")}
+    Expr ">>"  Expr -> Expr  {left, cons("RightShift")}
+    Expr ">>>" Expr -> Expr  {left, cons("URightShift")}
+
+    Expr "<"   Expr -> Expr  {left, cons("Lt")}
+    Expr ">"   Expr -> Expr  {left, cons("Gt")}
+    Expr "<="  Expr -> Expr  {left, cons("LtEq")}
+    Expr ">="  Expr -> Expr  {left, cons("GtEq")}
+    Expr "=="  Expr -> Expr  {left, cons("Eq")}
+    Expr "!="  Expr -> Expr  {left, cons("NotEq")}
+
+    Expr "&&"  Expr -> Expr  {left, cons("LazyAnd")}
+    Expr "||"  Expr -> Expr  {left, cons("LazyOr")}
+
+    Expr "&" Expr -> Expr {left, cons("And")}
+    Expr "^" Expr -> Expr {left, cons("ExcOr")}
+    Expr "|" Expr -> Expr {left, cons("Or")}
+
+    %% todo JFR-30
+    Expr CondMid Expr -> Expr {right, cons("Cond")}
+    "?" Expr ":" -> CondMid {bracket}
+
+module languages/java-15/expressions/UnaryOperators
+imports 
+  languages/java-15/expressions/Main
+exports
+  context-free syntax
+    "+" Expr -> Expr {cons("Plus")}
+    "-" Expr -> Expr {cons("Minus")}
+
+    "++" Expr -> Expr {cons("PreIncr")}
+    "--" Expr -> Expr {cons("PreDecr")}
+
+    "~" Expr -> Expr {cons("Complement")}
+    "!" Expr -> Expr {cons("Not")}
+
+    "(" PrimType ")" Expr -> Expr {cons("CastPrim")}
+    "(" RefType  ")" Expr -> Expr {cons("CastRef")}
+
+module languages/java-15/expressions/Postfix
+imports 
+  languages/java-15/expressions/Main
+
+exports
+  context-free syntax
+    ExprName  -> Expr
+    Expr "++" -> Expr {cons("PostIncr")}
+    Expr "--" -> Expr {cons("PostDecr")}
+
+module languages/java-15/expressions/MethodInvocation
+imports
+  languages/java-15/expressions/Main
+
+exports
+  sorts MethodSpec
+  context-free syntax
+    MethodSpec "(" {Expr ","}* ")" -> Expr {cons("Invoke")}
+
+                               MethodName -> MethodSpec {cons("Method")}
+                    Expr "." TypeArgs? Id -> MethodSpec {cons("Method")}
+                 "super" "." TypeArgs? Id -> MethodSpec {cons("SuperMethod")}
+    TypeName "." "super" "." TypeArgs? Id -> MethodSpec {cons("QSuperMethod")}
+                 AmbName "." TypeArgs  Id -> MethodSpec {cons("GenericMethod")}
+
+  %% This priority forbids a Expr "." MethodSpec if the expression is a plain ExprName.
+  %% This solves an ambiguity with the MethodName and AmbName . TypeArgs MethodSpecs.
+  %% foo.bar.fred() results in a MethodName MethodSpec.
+  %% (foo.bar).fred() results in the Expr. MethodSpec
+  %% foo.bar.<T>fred() results in a GenericMethod
+  context-free priorities
+      Expr "." TypeArgs? Id -> MethodSpec
+    > ExprName  -> Expr
+
+
+
+
+module languages/java-15/expressions/ArrayAccess
+imports
+  languages/java-15/expressions/Main
+exports
+  sorts
+    ArrayAccess
+    ArraySubscript
+
+  context-free syntax
+    ArrayAccess -> Expr
+
+    %% todo: JFR-29
+    Expr ArraySubscript -> ArrayAccess {cons("ArrayAccess")}
+    "[" Expr "]" -> ArraySubscript {bracket}
+
+    ArrayCreationExpr ArraySubscript -> ArrayAccess {reject}
+
+module languages/java-15/expressions/FieldAccess
+imports
+  languages/java-15/expressions/Main
+
+exports
+  sorts FieldAccess
+  context-free syntax
+    FieldAccess -> Expr
+
+  context-free syntax
+
+                    Expr "." Id -> FieldAccess {cons("Field")}
+                ExprName "." Id -> FieldAccess {reject}
+                 "super" "." Id -> FieldAccess {cons("SuperField")}
+    TypeName "." "super" "." Id -> FieldAccess {cons("QSuperField")}
+
+module languages/java-15/expressions/ArrayCreation
+imports
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    ArrayCreationExpr
+    ArrayBaseType
+    Dim
+    DimExpr
+
+  context-free syntax
+    ArrayCreationExpr     -> Expr
+
+    "new" ArrayBaseType DimExpr+ Dim*  -> ArrayCreationExpr {cons("NewArray")}
+    "new" ArrayBaseType Dim+ ArrayInit -> ArrayCreationExpr {cons("NewArray")}
+
+    PrimType -> ArrayBaseType
+    TypeName -> ArrayBaseType
+    TypeName "<" "?" ">" -> ArrayBaseType {cons("UnboundWld")}
+
+    "[" Expr "]" -> DimExpr {cons("Dim")}
+    "[" "]"      -> Dim     {cons("Dim")}
+
+module languages/java-15/expressions/ClassInstanceCreation
+imports
+  languages/java-15/expressions/Main
+  languages/java-15/classes/ClassDeclarations
+
+exports
+  context-free syntax
+
+             "new" TypeArgs? ClassOrInterfaceType "(" {Expr ","}* ")" ClassBody? -> Expr {cons("NewInstance")}
+    Expr "." "new" TypeArgs? Id         TypeArgs? "(" {Expr ","}* ")" ClassBody? -> Expr {cons("QNewInstance")}
+
+module languages/java-15/expressions/Primary
+imports
+  languages/java-15/lexical/literals/Main
+  languages/java-15/names/Main
+  languages/java-15/expressions/Main
+
+exports
+  %%%
+   %% Section 15.8.1: Lexical Literals
+   %%%
+  sorts Literal
+  context-free syntax
+    Literal -> Expr {cons("Lit")}
+
+    IntLiteral    -> Literal
+    FloatLiteral  -> Literal
+    BoolLiteral   -> Literal 
+    CharLiteral   -> Literal
+    StringLiteral -> Literal
+    NullLiteral   -> Literal
+
+  %%%
+   %% Section 15.8.2: Class Literals
+   %%%
+  sorts ClassLiteral
+  context-free syntax
+    ClassLiteral -> Literal
+    Type   "." "class" -> ClassLiteral {cons("Class")}
+    "void" "." "class" -> ClassLiteral {cons("VoidClass")}
+
+  %%%
+   %% Section 15.8.3/4: (Qualified this)
+   %%%
+  context-free syntax
+                 "this" -> Expr {cons("This")}
+    TypeName "." "this" -> Expr {cons("QThis")}
+
+  %%%
+   %% Section 15.8.5: Parenthesized Expression
+   %%%
+  context-free syntax
+    "(" Expr ")"          -> Expr {bracket}
+
+module languages/java-15/expressions/Main
+imports
+  languages/java-15/expressions/Primary
+  languages/java-15/expressions/ClassInstanceCreation
+  languages/java-15/expressions/ArrayCreation
+  languages/java-15/expressions/FieldAccess
+  languages/java-15/expressions/ArrayAccess
+  languages/java-15/expressions/MethodInvocation
+  languages/java-15/expressions/Postfix
+  languages/java-15/expressions/UnaryOperators
+  languages/java-15/expressions/BinaryOperators
+  languages/java-15/expressions/AssignmentOperators
+  languages/java-15/expressions/Restrictions
+  languages/java-15/expressions/Priorities
+
+exports
+  sorts
+    Expr
+
+module languages/java-15/statements/Main
+imports
+  languages/java-15/statements/Blocks
+  languages/java-15/statements/LocalVariableDeclarations
+  languages/java-15/statements/Statements
+
+
+
+
+module languages/java-15/arrays/Main
+imports
+  languages/java-15/arrays/ArrayInitializers
+
+
+
+
+module languages/java-15/interfaces/Main
+imports
+  languages/java-15/interfaces/InterfaceDeclarations
+  languages/java-15/interfaces/AbstractMethodDeclarations
+  languages/java-15/interfaces/AnnotationTypes
+  languages/java-15/interfaces/Annotations
+
+
+
+
+module languages/java-15/classes/Main
+imports
+  languages/java-15/classes/ClassDeclarations
+  languages/java-15/classes/EnumDeclarations
+
+
+
+
+module languages/java-15/packages/PackageDeclarations
+imports
+  languages/java-15/names/Main
+  languages/java-15/interfaces/Annotations
+
+exports
+  sorts
+    PackageDec
+
+  context-free syntax
+    Anno* "package" PackageName ";" -> PackageDec {cons("PackageDec")}
+
+module languages/java-15/packages/ImportDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/names/Main
+
+exports
+  sorts
+    ImportDec
+
+  context-free syntax
+    "import" TypeName                  ";"  -> ImportDec {cons("TypeImportDec")}
+    "import" PackageName       "." "*" ";"  -> ImportDec {cons("TypeImportOnDemandDec")}
+    "import" "static" TypeName "." Id  ";"  -> ImportDec {cons("StaticImportDec")}
+    "import" "static" TypeName "." "*" ";"  -> ImportDec {cons("StaticImportOnDemandDec")}
+
+module languages/java-15/interfaces/AnnotationTypes
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/classes/ClassDeclarations
+  languages/java-15/classes/EnumDeclarations
+  languages/java-15/interfaces/InterfaceDeclarations
+  languages/java-15/interfaces/AbstractMethodDeclarations
+  languages/java-15/interfaces/ConstantDeclarations
+  languages/java-15/interfaces/Annotations
+
+exports
+  sorts
+    AnnoDec
+    AnnoDecHead
+
+  context-free syntax
+    AnnoDecHead "{" AnnoElemDec* "}" -> AnnoDec {cons("AnnoDec")}
+    (Anno | InterfaceMod)* "@" "interface" Id -> AnnoDecHead {cons("AnnoDecHead")}
+
+  sorts
+    AnnoElemDec
+    DefaultVal
+
+  context-free syntax
+    AbstractMethodMod* Type Id "(" ")" DefaultVal? ";" -> AnnoElemDec {cons("AnnoMethodDec")}
+
+    ConstantDec  -> AnnoElemDec
+    ClassDec     -> AnnoElemDec
+    InterfaceDec -> AnnoElemDec
+    EnumDec      -> AnnoElemDec
+    AnnoDec      -> AnnoElemDec
+    ";"          -> AnnoElemDec {cons("Semicolon")}
+
+    "default" ElemVal -> DefaultVal {cons("DefaultVal")}
+
+module languages/java-15/interfaces/AbstractMethodDeclarations
+imports
+  languages/java-15/lexical/Modifiers
+  languages/java-15/names/Main
+  languages/java-15/types/Main
+  languages/java-15/classes/MethodDeclarations
+
+exports
+  sorts
+    AbstractMethodDec
+    AbstractMethodMod
+
+  context-free syntax
+    (Anno | AbstractMethodMod)* TypeParams? ResultType
+      Id "(" {FormalParam ","}* ")" Throws? ";" -> AbstractMethodDec {cons("AbstractMethodDec")}
+
+    (Anno | AbstractMethodMod)* TypeParams? ResultType
+      Id "(" {FormalParam ","}* ")" Dim+ Throws? ";" -> AbstractMethodDec {cons("DeprAbstractMethodDec")}
+
+    Public   -> AbstractMethodMod
+    Abstract -> AbstractMethodMod
+
+
+
+
+
+module languages/java-15/interfaces/ConstantDeclarations
+imports
+  languages/java-15/lexical/Modifiers
+  languages/java-15/types/Main
+  languages/java-15/classes/MethodDeclarations
+  languages/java-15/interfaces/Annotations
+
+exports
+  sorts
+    ConstantDec
+    ConstantMod
+
+  context-free syntax
+    (Anno | ConstantMod)* Type {VarDec ","}+ ";" -> ConstantDec {cons("ConstantDec")}
+
+    Public -> ConstantMod
+    Static -> ConstantMod
+    Final  -> ConstantMod
+
+
+
+
+module languages/java-15/interfaces/InterfaceDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/names/Main
+  languages/java-15/types/Main
+  languages/java-15/classes/ClassDeclarations
+  languages/java-15/classes/MethodDeclarations
+  languages/java-15/interfaces/ConstantDeclarations
+  languages/java-15/interfaces/AbstractMethodDeclarations
+  languages/java-15/interfaces/AnnotationTypes
+  languages/java-15/interfaces/Annotations
+
+exports
+  sorts
+    InterfaceDec
+    InterfaceDecHead
+    ExtendsInterfaces
+    InterfaceMemberDec
+    InterfaceMod
+
+  context-free syntax
+    AnnoDec -> InterfaceDec
+
+    InterfaceDecHead "{" InterfaceMemberDec* "}" -> InterfaceDec {cons("InterfaceDec")}
+
+    (Anno | InterfaceMod)* "interface" Id TypeParams? ExtendsInterfaces? -> InterfaceDecHead {cons("InterfaceDecHead")}
+    "extends" {InterfaceType ","}+ -> ExtendsInterfaces {cons("ExtendsInterfaces")}
+
+  context-free syntax
+    ConstantDec       -> InterfaceMemberDec
+    AbstractMethodDec -> InterfaceMemberDec
+    ClassDec          -> InterfaceMemberDec
+    InterfaceDec      -> InterfaceMemberDec
+    ";"               -> InterfaceMemberDec {cons("Semicolon")}
+
+  context-free syntax
+    Public         -> InterfaceMod
+    Protected      -> InterfaceMod
+    Private        -> InterfaceMod
+    Abstract       -> InterfaceMod
+    Static         -> InterfaceMod
+    StrictFP       -> InterfaceMod
+
+
+
+
+module languages/java-15/classes/EnumDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/classes/ClassDeclarations
+
+exports
+  sorts
+    EnumDec
+    EnumDecHead
+    EnumBody
+    EnumConst
+    EnumConstArgs
+    EnumBodyDecs
+
+  context-free syntax
+    EnumDecHead EnumBody -> EnumDec {cons("EnumDec")}
+
+    (Anno | ClassMod)* "enum" Id Interfaces? -> EnumDecHead {cons("EnumDecHead")}
+
+    "{" {EnumConst ","}*     EnumBodyDecs? "}" -> EnumBody {cons("EnumBody")}
+    "{" {EnumConst ","}* "," EnumBodyDecs? "}" -> EnumBody {cons("EnumBody")}
+
+    Id EnumConstArgs? ClassBody?  -> EnumConst {cons("EnumConst")}
+    "(" {Expr ","}* ")"  -> EnumConstArgs {bracket}
+
+    ";" ClassBodyDec* -> EnumBodyDecs {cons("EnumBodyDecs")}
+
+module languages/java-15/classes/ConstructorDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/interfaces/Annotations
+  languages/java-15/statements/Main
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    ConstrDec
+    ConstrBody
+    ConstrHead
+    ConstrInv
+
+  context-free syntax
+    ConstrHead ConstrBody ->  ConstrDec {cons("ConstrDec")}
+    (Anno | ConstrMod)* TypeParams? Id "(" {FormalParam ","}* ")" Throws? -> ConstrHead {cons("ConstrDecHead")}
+
+
+    "{" ConstrInv? BlockStm* "}" -> ConstrBody {cons("ConstrBody")}
+
+             TypeArgs? "this"  "(" {Expr ","}* ")" ";" -> ConstrInv {cons("AltConstrInv")}
+             TypeArgs? "super" "(" {Expr ","}* ")" ";" -> ConstrInv {cons("SuperConstrInv")}
+    Expr "." TypeArgs? "super" "(" {Expr ","}* ")" ";" -> ConstrInv {cons("QSuperConstrInv")}
+
+  sorts ConstrMod
+  context-free syntax  
+    Public    -> ConstrMod
+    Protected -> ConstrMod
+    Private   -> ConstrMod
+
+
+
+
+module languages/java-15/classes/StaticInitializers
+imports
+  languages/java-15/statements/Blocks
+
+exports
+  sorts
+    StaticInit
+
+  context-free syntax
+    "static" Block -> StaticInit   {cons("StaticInit")}
+
+module languages/java-15/classes/InstanceInitializers
+imports
+  languages/java-15/statements/Blocks
+
+exports
+  sorts
+    InstanceInit
+
+  context-free syntax
+    Block -> InstanceInit {cons("InstanceInit")}
+
+module languages/java-15/statements/Statements
+imports
+  languages/java-15/statements/LocalVariableDeclarations
+  languages/java-15/statements/Blocks
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    Stm
+
+  context-free syntax
+    Block      -> Stm
+
+  %%%
+   %% Section 14.6: The Empty Statement
+   %%%
+  context-free syntax
+    ";"        -> Stm {cons("Empty")}
+
+  %%%
+   %% Section 14.7: Labeled Statements
+   %%%
+  context-free syntax
+    Id ":" Stm -> Stm {cons("Labeled")}
+
+  %%%
+   %% Section 14.8: Expressions Statements
+   %%%
+  context-free syntax
+    Expr ";"   -> Stm {cons("ExprStm")}
+
+  %%%
+   %% Section 14.9: The If Statement
+   %%%
+  context-free syntax
+    "if" "(" Expr ")" Stm             -> Stm {prefer, cons("If")}
+    "if" "(" Expr ")" Stm  "else" Stm -> Stm {cons("If")}
+
+  %%%
+   %% Section 14.10: The Assert Statement
+   %%%
+  context-free syntax
+    "assert" Expr          ";" -> Stm  {cons("AssertStm")}
+    "assert" Expr ":" Expr ";" -> Stm  {cons("AssertStm")}
+
+
+  %%%
+   %% Section 14.11: The Switch Statement
+   %%%
+  sorts SwitchBlock SwitchGroup SwitchLabel
+  context-free syntax
+    "switch" "(" Expr ")" SwitchBlock -> Stm {cons("Switch")}
+    "{" SwitchGroup* SwitchLabel* "}" -> SwitchBlock {cons("SwitchBlock")}
+    SwitchLabel+ BlockStm+ -> SwitchGroup  {cons("SwitchGroup")}
+
+    "case" Expr ":" -> SwitchLabel {cons("Case")}
+    "default"   ":" -> SwitchLabel {cons("Default")}
+
+  %%%
+   %% Section 14.12: The While Statement
+   %%%
+  context-free syntax
+    "while" "(" Expr ")" Stm -> Stm {cons("While")}
+
+  %%%
+   %% Section 14.13: The Do Statement
+   %%%
+  context-free syntax
+  "do" Stm "while" "(" Expr ")" ";" -> Stm {cons("DoWhile")}
+
+
+  %%%
+   %% Section 14.14: The For Statement
+   %%%
+  context-free syntax
+    "for" "(" LocalVarDec ";" Expr? ";" {Expr ","}* ")" Stm -> Stm {cons("For")}
+    "for" "(" {Expr ","}* ";" Expr? ";" {Expr ","}* ")" Stm -> Stm {cons("For")}
+
+    "for" "(" FormalParam ":" Expr ")" Stm -> Stm {cons("ForEach")}
+
+  %%%
+   %% Section 14.15: The Break Statement
+   %%%
+  context-free syntax
+    "break"    Id? ";"   -> Stm {cons("Break")}
+
+  %%%
+   %% Section 14.16: The Continue Statement
+   %%%
+  context-free syntax
+    "continue" Id? ";"   -> Stm {cons("Continue")}
+
+  %%%
+   %% Section 14.17: The Return Statement
+   %%%
+  context-free syntax
+    "return"   Expr? ";" -> Stm {cons("Return")}
+
+  %%%
+   %% Section 14.18: The Throw Statement
+   %%%
+  context-free syntax
+    "throw"    Expr  ";" -> Stm {cons("Throw")}
+
+  %%%
+   %% Section 14.19: The Synchronized Statement
+   %%%
+  context-free syntax
+    "synchronized" "(" Expr ")" Block -> Stm {cons("Synchronized")}
+
+  %%%
+   %% Section 14.20: The Try Statement
+   %%%
+  sorts CatchClause
+  context-free syntax
+    "try" Block CatchClause+ -> Stm {cons("Try")}
+    "try" Block CatchClause* "finally" Block -> Stm {cons("Try")}
+    "catch" "(" FormalParam ")" Block -> CatchClause {cons("Catch")}
+
+module languages/java-15/statements/LocalVariableDeclarations
+imports
+  languages/java-15/classes/MethodDeclarations
+  languages/java-15/classes/FieldDeclarations
+
+exports
+  sorts
+    LocalVarDecStm
+    LocalVarDec
+
+  context-free syntax
+    LocalVarDec ";" -> LocalVarDecStm {prefer, cons("LocalVarDecStm")}
+    (Anno | VarMod)* Type {VarDec ","}+ -> LocalVarDec {prefer, cons("LocalVarDec")}
+
+module languages/java-15/statements/Blocks
+imports
+  languages/java-15/classes/ClassDeclarations
+  languages/java-15/statements/LocalVariableDeclarations
+  languages/java-15/statements/Statements
+
+exports
+  sorts
+    BlockStm
+    Block
+
+  context-free syntax
+    "{" BlockStm* "}" -> Block {cons("Block")}
+
+    LocalVarDecStm  -> BlockStm 
+    ClassDec        -> BlockStm {cons("ClassDecStm")}
+    Stm             -> BlockStm
+
+
+
+
+module languages/java-15/classes/MethodDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/types/Main
+  languages/java-15/classes/FieldDeclarations
+  languages/java-15/interfaces/Annotations
+  languages/java-15/statements/Blocks
+
+exports
+  sorts
+    MethodDec
+    MethodDecHead
+    ResultType
+
+  context-free syntax
+    MethodDecHead MethodBody -> MethodDec {cons("MethodDec")}
+
+    (Anno | MethodMod)* TypeParams? ResultType Id "(" {FormalParam ","}* ")" Throws?      -> MethodDecHead {cons("MethodDecHead")}
+    (Anno | MethodMod)* TypeParams? ResultType Id "(" {FormalParam ","}* ")" Dim+ Throws? -> MethodDecHead {cons("DeprMethodDecHead")}
+
+    Type   -> ResultType
+    "void" -> ResultType {cons("Void")}
+
+  sorts FormalParam
+  context-free syntax
+    (Anno | VarMod)* Type       VarDecId -> FormalParam {cons("Param")}
+    (Anno | VarMod)* Type "..." VarDecId -> FormalParam {cons("VarArityParam")}
+
+  sorts VarMod
+  context-free syntax
+    Final -> VarMod
+
+  sorts MethodMod
+  context-free syntax
+    Public         -> MethodMod
+    Protected      -> MethodMod
+    Private        -> MethodMod
+
+    Abstract       -> MethodMod
+    Static         -> MethodMod
+    Final          -> MethodMod
+    Synchronized   -> MethodMod
+    Native         -> MethodMod
+    StrictFP       -> MethodMod
+
+  %%%
+   %% Section 8.4.6: Method Throws
+   %%%
+  sorts
+    Throws
+    ExceptionType
+
+  context-free syntax
+    "throws" {ExceptionType ","}+ -> Throws {cons("ThrowsDec")}
+    ClassType -> ExceptionType
+    %% TypeVar -> ExceptionType
+
+  %%%
+   %% Section 8.4.7: Method Body
+   %%% 
+  sorts MethodBody
+  context-free syntax
+    Block -> MethodBody
+    ";"   -> MethodBody {cons("NoMethodBody")}
+
+module languages/java-15/arrays/ArrayInitializers
+imports
+  languages/java-15/classes/FieldDeclarations
+
+exports
+  sorts ArrayInit
+  context-free syntax
+    "{" {VarInit ","}*     "}" -> ArrayInit {cons("ArrayInit")}
+    "{" {VarInit ","}* "," "}" -> ArrayInit {cons("ArrayInit")}
+
+module languages/java-15/interfaces/Annotations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/names/Main
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    Anno
+    ElemVal
+    ElemValPair
+
+  context-free syntax
+    "@" TypeName "(" {ElemValPair ","}* ")" -> Anno {cons("Anno")}
+    "@" TypeName "(" ElemVal ")"            -> Anno {cons("SingleElemAnno")}
+    "@" TypeName                            -> Anno {cons("MarkerAnno")}
+
+  context-free syntax  
+    Id "=" ElemVal -> ElemValPair {cons("ElemValPair")}
+
+    Expr -> ElemVal
+    Anno -> ElemVal
+
+    "{" {ElemVal ","}*     "}" -> ElemVal {cons("ElemValArrayInit")}
+    "{" {ElemVal ","}* "," "}" -> ElemVal {cons("ElemValArrayInit")}
+
+    %% Assignments are not allowed as element values.
+    LHS "=" Expr -> ElemVal {reject}
+
+module languages/java-15/classes/FieldDeclarations
+imports
+  languages/java-15/lexical/Identifiers
+  languages/java-15/lexical/Modifiers
+  languages/java-15/types/Main
+  languages/java-15/interfaces/Annotations
+  languages/java-15/arrays/ArrayInitializers
+  languages/java-15/expressions/Main
+
+exports
+  sorts
+    FieldDec
+    VarDec
+    VarDecId
+    Dim
+    VarInit
+
+  context-free syntax
+    (Anno | FieldMod)* Type { VarDec ","}+ ";" -> FieldDec {cons("FieldDec")}
+
+    VarDecId             -> VarDec {cons("VarDec")}

(3334 diff lines omitted)

From L.C.L.Kats at tudelft.nl  Mon Jun 28 17:30:47 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 28 Jun 2010 15:30:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21054 - LennartKats -
	in strc-java/trunk/java: . runtime/org/strategoxt/lang/compat
Message-ID: <201006281530.o5SFUl14014067@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-28 15:30:47 +0000 (Mon, 28 Jun 2010)
New Revision: 21054

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21054&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/report_failure_compat_1_0.java
   strc-java/trunk/java/spoofax-libs.jar

Log:


Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/report_failure_compat_1_0.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/report_failure_compat_1_0.java	2010-06-28 12:47:53 UTC (rev 21053)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/report_failure_compat_1_0.java	2010-06-28 15:30:47 UTC (rev 21054)
@@ -38,6 +38,8 @@
 			try {
 				logIntercept.proceed = log_0_2.instance;
 				logIntercept.enabled = true;
+				logIntercept.lastMessage.set(null);
+				logIntercept.lastTerm.set(null);
 				log_0_2.instance = logIntercept;
 				
 				return proceed.invoke(context, current, s);

Modified: strc-java/trunk/java/spoofax-libs.jar
===================================================================
(Binary files differ)


From L.C.L.Kats at tudelft.nl  Mon Jun 28 17:31:58 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 28 Jun 2010 15:31:58 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21055 - LennartKats -
	strc-java/trunk/java/runtime/org/strategoxt/lang
Message-ID: <201006281531.o5SFVwAR014073@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-28 15:31:58 +0000 (Mon, 28 Jun 2010)
New Revision: 21055

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21055&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/UncaughtExceptionHandler.java

Log:
Memory usage tweaks

Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	2010-06-28 15:30:47 UTC (rev 21054)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	2010-06-28 15:31:58 UTC (rev 21055)
@@ -43,7 +43,7 @@
     
 	@SuppressWarnings("unused")
 	private final UncaughtExceptionHandler.Finalizer exceptionHandlerFinalizer =
-    	exceptionHandler.new Finalizer();
+    	new UncaughtExceptionHandler.Finalizer(exceptionHandler);
 	
 	private final ITermFactory factory;
     

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/UncaughtExceptionHandler.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/UncaughtExceptionHandler.java	2010-06-28 15:30:47 UTC (rev 21054)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/UncaughtExceptionHandler.java	2010-06-28 15:31:58 UTC (rev 21055)
@@ -105,10 +105,18 @@
 		}
 	}
     
-    class Finalizer {
+    static class Finalizer {
+    	final WeakReference<UncaughtExceptionHandler> handler;
+    	
+    	public Finalizer(UncaughtExceptionHandler handler) {
+			this.handler = new WeakReference<UncaughtExceptionHandler>(handler);
+		}
+    	
     	@Override
     	protected void finalize() throws Throwable {
-    		setEnabled(false);
+    		UncaughtExceptionHandler handler = this.handler.get();
+    		if (handler != null)
+    			handler.setEnabled(false);
     	}
     }
 


From L.C.L.Kats at tudelft.nl  Mon Jun 28 17:41:46 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 28 Jun 2010 15:41:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21056 - LennartKats -
	experimental/meta-amb-suggestions/trans
Message-ID: <201006281541.o5SFfk8c014293@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-28 15:41:46 +0000 (Mon, 28 Jun 2010)
New Revision: 21056

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21056&view=rev

Modified:
   experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str

Log:
minor configuration fix

Changes:

Modified: experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str
===================================================================
--- experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str	2010-06-28 15:31:58 UTC (rev 21055)
+++ experimental/meta-amb-suggestions/trans/meta_amb_suggestions.str	2010-06-28 15:41:46 UTC (rev 21056)
@@ -36,9 +36,14 @@
     input -> suggestion*
     with
       <set-config> ("--statistics", 0);
+      rules(
+        LanguageContext := IN_STRATEGO
+        IsStratego      : _
+        CurrentTable    := "Stratego-Java15"
+      );
       log-timed(
         table := <import-term(include/Stratego-Java15.tbl)>;
-        <register-table(|"Stratego-Java15")> table
+        <register-table(|<CurrentTable>)> table
       | "Parse table loaded", 0
       );
       log-timed(
@@ -49,11 +54,6 @@
         end
       | "File parsed", 0
       );
-      rules(
-        LanguageContext := IN_STRATEGO
-        IsStratego      : _
-        CurrentTable    := "Stratego-Java-15"
-      );
       log-timed(
         suggestion*  := <resolve-ambs-top>
       | "Suggestions provided", 0
@@ -212,7 +212,6 @@
   amb-suggestions-expr:
     expr -> suggestion''*
     with
-      debug(!1);
     	!expr => appl(prod @ prod(_, rsort, attrs(a*)), _);
       body  := <fetch-meta-expr-body> expr;
     	lsort := <fetch-meta-expr-sort> expr;


From L.C.L.Kats at tudelft.nl  Mon Jun 28 18:19:07 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 28 Jun 2010 16:19:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 21057 - LennartKats -
	in strc-java/trunk/java/runtime/org/strategoxt: . lang
Message-ID: <201006281619.o5SGJ7xG015335@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-06-28 16:19:07 +0000 (Mon, 28 Jun 2010)
New Revision: 21057

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=21057&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/UncaughtExceptionHandler.java

Log:


Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2010-06-28 15:41:46 UTC (rev 21056)
+++ strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2010-06-28 16:19:07 UTC (rev 21057)
@@ -33,7 +33,6 @@
 import org.strategoxt.lang.StrategoException;
 import org.strategoxt.lang.StrategoExit;
 import org.strategoxt.lang.terms.TermFactory;
-import org.strategoxt.stratego_lib.stratego_lib;
 
 /**
  * An interpreter that uses STRJ-compiled versions of the Stratego standard libraries.
@@ -229,7 +228,7 @@
 	public void loadJars(ClassLoader parentClassLoader, URL... jars)
 			throws SecurityException, IncompatibleJarException, IOException {
 
-		URLClassLoader classLoader = new URLClassLoader(jars, stratego_lib.class.getClassLoader());
+		URLClassLoader classLoader = new URLClassLoader(jars, parentClassLoader);
 		loadedJars = true;
 		
 		for (URL jar : jars) {

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/UncaughtExceptionHandler.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/UncaughtExceptionHandler.java	2010-06-28 15:41:46 UTC (rev 21056)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/UncaughtExceptionHandler.java	2010-06-28 16:19:07 UTC (rev 21057)
@@ -15,7 +15,8 @@
 	private final ActualHandler handler = new ActualHandler();
 	
 	// We keep the original handler (may be used by someone else) intact
-	private Thread.UncaughtExceptionHandler originalHandler;
+	private static final ThreadLocal<Thread.UncaughtExceptionHandler> originalHandler =
+		new ThreadLocal<Thread.UncaughtExceptionHandler>();
 	
 	private boolean enabled;
 	
@@ -37,7 +38,8 @@
 	private void enable() {
 		if (!enabled) {
 			enabled = true;
-			originalHandler = Thread.currentThread().getUncaughtExceptionHandler();
+			if (!(Thread.currentThread().getUncaughtExceptionHandler() instanceof UncaughtExceptionHandler))
+				originalHandler.set(Thread.currentThread().getUncaughtExceptionHandler());
 			Thread.currentThread().setUncaughtExceptionHandler(handler);
 			Runtime.getRuntime().addShutdownHook(handler);
 		}
@@ -47,7 +49,7 @@
 		if (enabled) {
 			enabled = false;
 			try {
-				Thread.currentThread().setUncaughtExceptionHandler(originalHandler);
+				Thread.currentThread().setUncaughtExceptionHandler(originalHandler.get());
 				Runtime.getRuntime().removeShutdownHook(handler);
 			} catch (IllegalStateException e) {
 				// Ignore (perhaps already shutting down)
@@ -80,7 +82,6 @@
     private class ActualHandler extends Thread implements Thread.UncaughtExceptionHandler {
     	
 		public void uncaughtException(Thread t, Throwable e) {
-			originalHandler.uncaughtException(t, e);
 			if (e instanceof StackOverflowError && dumpError("Fatal error at")) {
 				if (isStackTuned()) {
 					System.err.println("Stack overflow.");
@@ -90,6 +91,9 @@
 			} else {
 				dumpError("Fatal error at");
 			}
+			UncaughtExceptionHandler handler = originalHandler.get();
+			if (handler != null)
+				handler.uncaughtException(t, e);
 		}
 
 		private boolean isStackTuned() {


